public final class java.net.HttpCookie extends java.lang.Object implements java.lang.Cloneable
{
    private java.lang.String name;
    private java.lang.String value;
    private java.lang.String comment;
    private java.lang.String commentURL;
    private boolean toDiscard;
    private java.lang.String domain;
    private long maxAge;
    private java.lang.String path;
    private java.lang.String portlist;
    private boolean secure;
    private boolean httpOnly;
    private int version;
    private final java.lang.String header;
    private long whenCreated;
    private static final long MAX_AGE_UNSPECIFIED;
    private static final java.lang.String[] COOKIE_DATE_FORMATS;
    private static final java.lang.String SET_COOKIE;
    private static final java.lang.String SET_COOKIE2;
    private static final java.lang.String tspecials;
    static java.util.Map assignors;
    static final java.util.TimeZone GMT;

    public void <init>(java.lang.String, java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1, r2;

        r0 := @this: java.net.HttpCookie;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, null);
        return;
    }

    private void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1, r2, r3, r4;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.IllegalArgumentException $r5;
        long $l2;

        r0 := @this: java.net.HttpCookie;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.net.HttpCookie: long maxAge> = -1L;
        r0.<java.net.HttpCookie: int version> = 1;
        r0.<java.net.HttpCookie: long whenCreated> = 0L;
        r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i0 == 0 goto label0;

        $z0 = staticinvoke <java.net.HttpCookie: boolean isToken(java.lang.String)>(r4);
        if $z0 == 0 goto label0;

        $c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);
        if $c1 != 36 goto label1;

     label0:
        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal cookie name");
        throw $r5;

     label1:
        r0.<java.net.HttpCookie: java.lang.String name> = r4;
        r0.<java.net.HttpCookie: java.lang.String value> = r2;
        r0.<java.net.HttpCookie: boolean toDiscard> = 0;
        r0.<java.net.HttpCookie: boolean secure> = 0;
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<java.net.HttpCookie: long whenCreated> = $l2;
        r0.<java.net.HttpCookie: java.lang.String portlist> = null;
        r0.<java.net.HttpCookie: java.lang.String header> = r3;
        return;
    }

    public static java.util.List parse(java.lang.String)
    {
        java.lang.String r0;
        java.util.List $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.net.HttpCookie: java.util.List parse(java.lang.String,boolean)>(r0, 0);
        return $r1;
    }

    private static java.util.List parse(java.lang.String, boolean)
    {
        java.lang.String r0, r4, $r6, $r7;
        boolean z0, $z1, $z2, $z4;
        int i0, $i1, $i2;
        java.util.ArrayList r1, $r8;
        java.net.HttpCookie r2, r5;
        java.util.Iterator r3;
        java.util.List r9;
        java.lang.Object $r10;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        i0 = staticinvoke <java.net.HttpCookie: int guessCookieVersion(java.lang.String)>(r0);
        $z1 = staticinvoke <java.net.HttpCookie: boolean startsWithIgnoreCase(java.lang.String,java.lang.String)>(r0, "set-cookie2:");
        if $z1 == 0 goto label0;

        $r6 = "set-cookie2:";
        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();
        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);
        goto label1;

     label0:
        $z2 = staticinvoke <java.net.HttpCookie: boolean startsWithIgnoreCase(java.lang.String,java.lang.String)>(r0, "set-cookie:");
        if $z2 == 0 goto label1;

        $r7 = "set-cookie:";
        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();
        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

     label1:
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r1 = $r8;
        if i0 != 0 goto label2;

        r2 = staticinvoke <java.net.HttpCookie: java.net.HttpCookie parseInternal(java.lang.String,boolean)>(r0, z0);
        virtualinvoke r2.<java.net.HttpCookie: void setVersion(int)>(0);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);
        goto label4;

     label2:
        r9 = staticinvoke <java.net.HttpCookie: java.util.List splitMultiCookies(java.lang.String)>(r0);
        r3 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z4 == 0 goto label4;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.lang.String) $r10;
        r5 = staticinvoke <java.net.HttpCookie: java.net.HttpCookie parseInternal(java.lang.String,boolean)>(r4, z0);
        virtualinvoke r5.<java.net.HttpCookie: void setVersion(int)>(1);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r5);
        goto label3;

     label4:
        return r1;
    }

    public boolean hasExpired()
    {
        java.net.HttpCookie r0;
        long l0, $l1, $l3, $l5, $l6, $l7, $l8;
        byte $b2, $b4, $b9;

        r0 := @this: java.net.HttpCookie;
        $l1 = r0.<java.net.HttpCookie: long maxAge>;
        $b2 = $l1 cmp 0L;
        if $b2 != 0 goto label0;

        return 1;

     label0:
        $l3 = r0.<java.net.HttpCookie: long maxAge>;
        $b4 = $l3 cmp -1L;
        if $b4 != 0 goto label1;

        return 0;

     label1:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l6 = r0.<java.net.HttpCookie: long whenCreated>;
        $l7 = $l5 - $l6;
        l0 = $l7 / 1000L;
        $l8 = r0.<java.net.HttpCookie: long maxAge>;
        $b9 = l0 cmp $l8;
        if $b9 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void setComment(java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1;

        r0 := @this: java.net.HttpCookie;
        r1 := @parameter0: java.lang.String;
        r0.<java.net.HttpCookie: java.lang.String comment> = r1;
        return;
    }

    public java.lang.String getComment()
    {
        java.net.HttpCookie r0;
        java.lang.String $r1;

        r0 := @this: java.net.HttpCookie;
        $r1 = r0.<java.net.HttpCookie: java.lang.String comment>;
        return $r1;
    }

    public void setCommentURL(java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1;

        r0 := @this: java.net.HttpCookie;
        r1 := @parameter0: java.lang.String;
        r0.<java.net.HttpCookie: java.lang.String commentURL> = r1;
        return;
    }

    public java.lang.String getCommentURL()
    {
        java.net.HttpCookie r0;
        java.lang.String $r1;

        r0 := @this: java.net.HttpCookie;
        $r1 = r0.<java.net.HttpCookie: java.lang.String commentURL>;
        return $r1;
    }

    public void setDiscard(boolean)
    {
        java.net.HttpCookie r0;
        boolean z0;

        r0 := @this: java.net.HttpCookie;
        z0 := @parameter0: boolean;
        r0.<java.net.HttpCookie: boolean toDiscard> = z0;
        return;
    }

    public boolean getDiscard()
    {
        java.net.HttpCookie r0;
        boolean $z0;

        r0 := @this: java.net.HttpCookie;
        $z0 = r0.<java.net.HttpCookie: boolean toDiscard>;
        return $z0;
    }

    public void setPortlist(java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1;

        r0 := @this: java.net.HttpCookie;
        r1 := @parameter0: java.lang.String;
        r0.<java.net.HttpCookie: java.lang.String portlist> = r1;
        return;
    }

    public java.lang.String getPortlist()
    {
        java.net.HttpCookie r0;
        java.lang.String $r1;

        r0 := @this: java.net.HttpCookie;
        $r1 = r0.<java.net.HttpCookie: java.lang.String portlist>;
        return $r1;
    }

    public void setDomain(java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1, $r2;

        r0 := @this: java.net.HttpCookie;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<java.net.HttpCookie: java.lang.String domain> = $r2;
        goto label1;

     label0:
        r0.<java.net.HttpCookie: java.lang.String domain> = r1;

     label1:
        return;
    }

    public java.lang.String getDomain()
    {
        java.net.HttpCookie r0;
        java.lang.String $r1;

        r0 := @this: java.net.HttpCookie;
        $r1 = r0.<java.net.HttpCookie: java.lang.String domain>;
        return $r1;
    }

    public void setMaxAge(long)
    {
        java.net.HttpCookie r0;
        long l0;

        r0 := @this: java.net.HttpCookie;
        l0 := @parameter0: long;
        r0.<java.net.HttpCookie: long maxAge> = l0;
        return;
    }

    public long getMaxAge()
    {
        java.net.HttpCookie r0;
        long $l0;

        r0 := @this: java.net.HttpCookie;
        $l0 = r0.<java.net.HttpCookie: long maxAge>;
        return $l0;
    }

    public void setPath(java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1;

        r0 := @this: java.net.HttpCookie;
        r1 := @parameter0: java.lang.String;
        r0.<java.net.HttpCookie: java.lang.String path> = r1;
        return;
    }

    public java.lang.String getPath()
    {
        java.net.HttpCookie r0;
        java.lang.String $r1;

        r0 := @this: java.net.HttpCookie;
        $r1 = r0.<java.net.HttpCookie: java.lang.String path>;
        return $r1;
    }

    public void setSecure(boolean)
    {
        java.net.HttpCookie r0;
        boolean z0;

        r0 := @this: java.net.HttpCookie;
        z0 := @parameter0: boolean;
        r0.<java.net.HttpCookie: boolean secure> = z0;
        return;
    }

    public boolean getSecure()
    {
        java.net.HttpCookie r0;
        boolean $z0;

        r0 := @this: java.net.HttpCookie;
        $z0 = r0.<java.net.HttpCookie: boolean secure>;
        return $z0;
    }

    public java.lang.String getName()
    {
        java.net.HttpCookie r0;
        java.lang.String $r1;

        r0 := @this: java.net.HttpCookie;
        $r1 = r0.<java.net.HttpCookie: java.lang.String name>;
        return $r1;
    }

    public void setValue(java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1;

        r0 := @this: java.net.HttpCookie;
        r1 := @parameter0: java.lang.String;
        r0.<java.net.HttpCookie: java.lang.String value> = r1;
        return;
    }

    public java.lang.String getValue()
    {
        java.net.HttpCookie r0;
        java.lang.String $r1;

        r0 := @this: java.net.HttpCookie;
        $r1 = r0.<java.net.HttpCookie: java.lang.String value>;
        return $r1;
    }

    public int getVersion()
    {
        java.net.HttpCookie r0;
        int $i0;

        r0 := @this: java.net.HttpCookie;
        $i0 = r0.<java.net.HttpCookie: int version>;
        return $i0;
    }

    public void setVersion(int)
    {
        java.net.HttpCookie r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: java.net.HttpCookie;
        i0 := @parameter0: int;
        if i0 == 0 goto label0;

        if i0 == 1 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cookie version should be 0 or 1");
        throw $r1;

     label0:
        r0.<java.net.HttpCookie: int version> = i0;
        return;
    }

    public boolean isHttpOnly()
    {
        java.net.HttpCookie r0;
        boolean $z0;

        r0 := @this: java.net.HttpCookie;
        $z0 = r0.<java.net.HttpCookie: boolean httpOnly>;
        return $z0;
    }

    public void setHttpOnly(boolean)
    {
        java.net.HttpCookie r0;
        boolean z0;

        r0 := @this: java.net.HttpCookie;
        z0 := @parameter0: boolean;
        r0.<java.net.HttpCookie: boolean httpOnly> = z0;
        return;
    }

    public static boolean domainMatches(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3, $r4, $r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        char $c8;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        if r0 == null goto label0;

        if r1 != null goto label1;

     label0:
        return 0;

     label1:
        $r4 = ".local";
        z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);
        if i0 != 0 goto label2;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(46, 1);

     label2:
        if z0 != 0 goto label4;

        if i0 == -1 goto label3;

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();
        $i5 = $i4 - 1;
        if i0 != $i5 goto label4;

     label3:
        return 0;

     label4:
        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46);
        if i1 != -1 goto label5;

        if z0 == 0 goto label5;

        return 1;

     label5:
        i2 = virtualinvoke r0.<java.lang.String: int length()>();
        $i6 = virtualinvoke r1.<java.lang.String: int length()>();
        i3 = $i6 - i2;
        if i3 != 0 goto label6;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);
        return $z1;

     label6:
        if i3 <= 0 goto label9;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i3);
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i3);
        $i7 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(46);
        if $i7 != -1 goto label7;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);
        if $z2 == 0 goto label7;

        $z3 = 1;
        goto label8;

     label7:
        $z3 = 0;

     label8:
        return $z3;

     label9:
        if i3 != -1 goto label12;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
        if $c8 != 46 goto label10;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);
        if $z4 == 0 goto label10;

        $z5 = 1;
        goto label11;

     label10:
        $z5 = 0;

     label11:
        return $z5;

     label12:
        return 0;
    }

    public java.lang.String toString()
    {
        java.net.HttpCookie r0;
        int $i0;
        java.lang.String $r1, $r2;

        r0 := @this: java.net.HttpCookie;
        $i0 = virtualinvoke r0.<java.net.HttpCookie: int getVersion()>();
        if $i0 <= 0 goto label0;

        $r1 = specialinvoke r0.<java.net.HttpCookie: java.lang.String toRFC2965HeaderString()>();
        return $r1;

     label0:
        $r2 = specialinvoke r0.<java.net.HttpCookie: java.lang.String toNetscapeHeaderString()>();
        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.net.HttpCookie r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: java.net.HttpCookie;
        r1 := @parameter0: java.lang.Object;
        if r1 != r0 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof java.net.HttpCookie;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.net.HttpCookie) r1;
        $r3 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getName()>();
        $r4 = virtualinvoke r2.<java.net.HttpCookie: java.lang.String getName()>();
        $z1 = staticinvoke <java.net.HttpCookie: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>($r3, $r4);
        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getDomain()>();
        $r6 = virtualinvoke r2.<java.net.HttpCookie: java.lang.String getDomain()>();
        $z2 = staticinvoke <java.net.HttpCookie: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>($r5, $r6);
        if $z2 == 0 goto label2;

        $r7 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getPath()>();
        $r8 = virtualinvoke r2.<java.net.HttpCookie: java.lang.String getPath()>();
        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8);
        if $z3 == 0 goto label2;

        $z4 = 1;
        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public int hashCode()
    {
        java.net.HttpCookie r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: java.net.HttpCookie;
        $r1 = r0.<java.net.HttpCookie: java.lang.String name>;
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();
        i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();
        $r3 = r0.<java.net.HttpCookie: java.lang.String domain>;
        if $r3 == null goto label0;

        $r4 = r0.<java.net.HttpCookie: java.lang.String domain>;
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();
        $i3 = virtualinvoke $r5.<java.lang.String: int hashCode()>();
        goto label1;

     label0:
        $i3 = 0;

     label1:
        i1 = $i3;
        $r6 = r0.<java.net.HttpCookie: java.lang.String path>;
        if $r6 == null goto label2;

        $r7 = r0.<java.net.HttpCookie: java.lang.String path>;
        $i4 = virtualinvoke $r7.<java.lang.String: int hashCode()>();
        goto label3;

     label2:
        $i4 = 0;

     label3:
        i2 = $i4;
        $i5 = i0 + i1;
        $i6 = $i5 + i2;
        return $i6;
    }

    public java.lang.Object clone()
    {
        java.net.HttpCookie r0;
        java.lang.CloneNotSupportedException r1, $r3;
        java.lang.Object $r2;
        java.lang.RuntimeException $r4;
        java.lang.String $r5;

        r0 := @this: java.net.HttpCookie;

     label0:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        $r4 = new java.lang.RuntimeException;
        $r5 = virtualinvoke r1.<java.lang.CloneNotSupportedException: java.lang.String getMessage()>();
        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);
        throw $r4;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    private static boolean isToken(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, i1, $i3;
        char c2;

        r0 := @parameter0: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i1 = 0;

     label0:
        if i1 >= i0 goto label3;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);
        if c2 < 32 goto label1;

        if c2 >= 127 goto label1;

        $r1 = ",;";
        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(c2);
        if $i3 == -1 goto label2;

     label1:
        return 0;

     label2:
        i1 = i1 + 1;
        goto label0;

     label3:
        return 1;
    }

    private static java.net.HttpCookie parseInternal(java.lang.String, boolean)
    {
        java.lang.String r0, r2, r3, r5, $r6, $r7, $r9, $r12, r17, $r18, r19, $r20, r21;
        boolean z0, $z1;
        null_type n0, n1;
        java.util.StringTokenizer r1, $r4;
        int i0, $i1, i2, $i3;
        java.net.HttpCookie $r8, r10, $r11;
        java.lang.IllegalArgumentException $r13, $r16;
        java.util.NoSuchElementException $r14, r15;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        n0 = null;
        n1 = null;
        $r4 = new java.util.StringTokenizer;
        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ";");
        r1 = $r4;

     label0:
        r5 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();
        i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(61);
        if i0 == -1 goto label3;

        $r6 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        r2 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();
        $i1 = i0 + 1;
        $r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i1);
        r3 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();
        if z0 == 0 goto label1;

        $r8 = new java.net.HttpCookie;
        $r9 = staticinvoke <java.net.HttpCookie: java.lang.String stripOffSurroundingQuote(java.lang.String)>(r3);
        specialinvoke $r8.<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r2, $r9, r0);
        r10 = $r8;
        goto label2;

     label1:
        $r11 = new java.net.HttpCookie;
        $r12 = staticinvoke <java.net.HttpCookie: java.lang.String stripOffSurroundingQuote(java.lang.String)>(r3);
        specialinvoke $r11.<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String)>(r2, $r12);
        r10 = $r11;

     label2:
        goto label4;

     label3:
        $r13 = new java.lang.IllegalArgumentException;
        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid cookie name-value pair");
        throw $r13;

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = new java.lang.IllegalArgumentException;
        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty cookie header string");
        throw $r16;

     label6:
        $z1 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z1 == 0 goto label9;

        r17 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();
        i2 = virtualinvoke r17.<java.lang.String: int indexOf(int)>(61);
        if i2 == -1 goto label7;

        $r18 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int,int)>(0, i2);
        r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();
        $i3 = i2 + 1;
        $r20 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>($i3);
        r21 = virtualinvoke $r20.<java.lang.String: java.lang.String trim()>();
        goto label8;

     label7:
        r19 = virtualinvoke r17.<java.lang.String: java.lang.String trim()>();
        r21 = null;

     label8:
        staticinvoke <java.net.HttpCookie: void assignAttribute(java.net.HttpCookie,java.lang.String,java.lang.String)>(r10, r19, r21);
        goto label6;

     label9:
        return r10;

        catch java.util.NoSuchElementException from label0 to label4 with label5;
    }

    private static void assignAttribute(java.net.HttpCookie, java.lang.String, java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1, r2, r4, $r6;
        java.net.HttpCookie$CookieAttributeAssignor r3;
        java.util.Map $r5;
        java.lang.Object $r7;

        r0 := @parameter0: java.net.HttpCookie;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r4 = staticinvoke <java.net.HttpCookie: java.lang.String stripOffSurroundingQuote(java.lang.String)>(r2);
        $r5 = <java.net.HttpCookie: java.util.Map assignors>;
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);
        r3 = (java.net.HttpCookie$CookieAttributeAssignor) $r7;
        if r3 == null goto label0;

        interfaceinvoke r3.<java.net.HttpCookie$CookieAttributeAssignor: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>(r0, r1, r4);

     label0:
        return;
    }

    private java.lang.String header()
    {
        java.net.HttpCookie r0;
        java.lang.String $r1;

        r0 := @this: java.net.HttpCookie;
        $r1 = r0.<java.net.HttpCookie: java.lang.String header>;
        return $r1;
    }

    private java.lang.String toNetscapeHeaderString()
    {
        java.net.HttpCookie r0;
        java.lang.StringBuilder $r1, r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9, $r11;

        r0 := @this: java.net.HttpCookie;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getName()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r7 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getValue()>();
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r11;
    }

    private java.lang.String toRFC2965HeaderString()
    {
        java.net.HttpCookie r0;
        java.lang.StringBuilder $r1, r2, $r4, $r5, $r7, $r10, $r12, $r15, $r17, $r20, $r22;
        java.lang.String $r3, $r6, $r9, $r11, $r14, $r16, $r19, $r21, $r24;

        r0 := @this: java.net.HttpCookie;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r3 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getName()>();
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        $r6 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getValue()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);
        $r9 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getPath()>();
        if $r9 == null goto label0;

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";$Path=\"");
        $r11 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getPath()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label0:
        $r14 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getDomain()>();
        if $r14 == null goto label1;

        $r15 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";$Domain=\"");
        $r16 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getDomain()>();
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label1:
        $r19 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getPortlist()>();
        if $r19 == null goto label2;

        $r20 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";$Port=\"");
        $r21 = virtualinvoke r0.<java.net.HttpCookie: java.lang.String getPortlist()>();
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label2:
        $r24 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r24;
    }

    private long expiryDate2DeltaSeconds(java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1, $r9, $r15;
        java.util.GregorianCalendar $r2, r4;
        java.util.TimeZone $r3, $r11;
        int i0, i1, $i2, i3, i4;
        java.text.SimpleDateFormat r5, $r7;
        java.lang.String[] $r6, $r8, $r14;
        java.util.Locale $r10;
        java.util.Date $r12, $r13;
        boolean $z0;
        long $l5, $l6, $l7, $l8;
        java.lang.Exception $r16, r17;

        r0 := @this: java.net.HttpCookie;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.GregorianCalendar;
        $r3 = <java.net.HttpCookie: java.util.TimeZone GMT>;
        specialinvoke $r2.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r3);
        r4 = $r2;
        i0 = 0;

     label0:
        $r6 = <java.net.HttpCookie: java.lang.String[] COOKIE_DATE_FORMATS>;
        $i2 = lengthof $r6;
        if i0 >= $i2 goto label7;

        $r7 = new java.text.SimpleDateFormat;
        $r8 = <java.net.HttpCookie: java.lang.String[] COOKIE_DATE_FORMATS>;
        $r9 = $r8[i0];
        $r10 = <java.util.Locale: java.util.Locale US>;
        specialinvoke $r7.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r9, $r10);
        r5 = $r7;
        virtualinvoke r4.<java.util.Calendar: void set(int,int,int,int,int,int)>(1970, 0, 1, 0, 0, 0);
        $r11 = <java.net.HttpCookie: java.util.TimeZone GMT>;
        virtualinvoke r5.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r11);
        virtualinvoke r5.<java.text.SimpleDateFormat: void setLenient(boolean)>(0);
        $r12 = virtualinvoke r4.<java.util.Calendar: java.util.Date getTime()>();
        virtualinvoke r5.<java.text.SimpleDateFormat: void set2DigitYearStart(java.util.Date)>($r12);

     label1:
        $r13 = virtualinvoke r5.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r1);
        virtualinvoke r4.<java.util.Calendar: void setTime(java.util.Date)>($r13);
        $r14 = <java.net.HttpCookie: java.lang.String[] COOKIE_DATE_FORMATS>;
        $r15 = $r14[i0];
        $z0 = virtualinvoke $r15.<java.lang.String: boolean contains(java.lang.CharSequence)>("yyyy");
        if $z0 != 0 goto label4;

        i1 = virtualinvoke r4.<java.util.Calendar: int get(int)>(1);
        i3 = i1 % 100;
        if i3 >= 70 goto label2;

        i4 = i3 + 2000;
        goto label3;

     label2:
        i4 = i3 + 1900;

     label3:
        virtualinvoke r4.<java.util.Calendar: void set(int,int)>(1, i4);

     label4:
        $l5 = virtualinvoke r4.<java.util.Calendar: long getTimeInMillis()>();
        $l6 = r0.<java.net.HttpCookie: long whenCreated>;
        $l7 = $l5 - $l6;
        $l8 = $l7 / 1000L;

     label5:
        return $l8;

     label6:
        $r16 := @caughtexception;
        r17 = $r16;
        i0 = i0 + 1;
        goto label0;

     label7:
        return 0L;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    private static int guessCookieVersion(java.lang.String)
    {
        java.lang.String r0, r1;
        byte b0;
        int $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        b0 = 0;
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("expires=");
        if $i1 == -1 goto label0;

        b0 = 0;
        goto label3;

     label0:
        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("version=");
        if $i2 == -1 goto label1;

        b0 = 1;
        goto label3;

     label1:
        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("max-age");
        if $i3 == -1 goto label2;

        b0 = 1;
        goto label3;

     label2:
        $z0 = staticinvoke <java.net.HttpCookie: boolean startsWithIgnoreCase(java.lang.String,java.lang.String)>(r1, "set-cookie2:");
        if $z0 == 0 goto label3;

        b0 = 1;

     label3:
        return b0;
    }

    private static java.lang.String stripOffSurroundingQuote(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        int $i0, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i12, $i13;
        char $c1, $c4, $c8, $c11;

        r0 := @parameter0: java.lang.String;
        if r0 == null goto label0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i0 <= 2 goto label0;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
        if $c1 != 34 goto label0;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        $i3 = $i2 - 1;
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);
        if $c4 != 34 goto label0;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();
        $i6 = $i5 - 1;
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i6);
        return $r1;

     label0:
        if r0 == null goto label1;

        $i7 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i7 <= 2 goto label1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
        if $c8 != 39 goto label1;

        $i9 = virtualinvoke r0.<java.lang.String: int length()>();
        $i10 = $i9 - 1;
        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i10);
        if $c11 != 39 goto label1;

        $i12 = virtualinvoke r0.<java.lang.String: int length()>();
        $i13 = $i12 - 1;
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i13);
        return $r2;

     label1:
        return r0;
    }

    private static boolean equalsIgnoreCase(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        if r0 != r1 goto label0;

        return 1;

     label0:
        if r0 == null goto label1;

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        return $z0;

     label1:
        return 0;
    }

    private static boolean startsWithIgnoreCase(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        if r0 == null goto label0;

        if r1 != null goto label1;

     label0:
        return 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 < $i1 goto label2;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);
        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static java.util.List splitMultiCookies(java.lang.String)
    {
        java.lang.String r0, $r3, $r4;
        java.util.ArrayList $r1, r2;
        int i0, i1, i2, $i4, $i5;
        char c3;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        i0 = 0;
        i1 = 0;
        i2 = 0;

     label0:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();
        if i1 >= $i4 goto label3;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);
        if c3 != 34 goto label1;

        i0 = i0 + 1;

     label1:
        if c3 != 44 goto label2;

        $i5 = i0 % 2;
        if $i5 != 0 goto label2;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i1);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3);
        i2 = i1 + 1;

     label2:
        i1 = i1 + 1;
        goto label0;

     label3:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);
        return r2;
    }

    static long access$000(java.net.HttpCookie, java.lang.String)
    {
        java.net.HttpCookie r0;
        java.lang.String r1;
        long $l0;

        r0 := @parameter0: java.net.HttpCookie;
        r1 := @parameter1: java.lang.String;
        $l0 = specialinvoke r0.<java.net.HttpCookie: long expiryDate2DeltaSeconds(java.lang.String)>(r1);
        return $l0;
    }

    static java.util.List access$100(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0;
        java.util.List $r1;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r1 = staticinvoke <java.net.HttpCookie: java.util.List parse(java.lang.String,boolean)>(r0, z0);
        return $r1;
    }

    static java.lang.String access$200(java.net.HttpCookie)
    {
        java.net.HttpCookie r0;
        java.lang.String $r1;

        r0 := @parameter0: java.net.HttpCookie;
        $r1 = r0.<java.net.HttpCookie: java.lang.String header>;
        return $r1;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.HashMap $r1;
        java.util.Map $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32;
        java.net.HttpCookie$1 $r3;
        java.net.HttpCookie$2 $r6;
        java.net.HttpCookie$3 $r9;
        java.net.HttpCookie$4 $r12;
        java.net.HttpCookie$5 $r15;
        java.net.HttpCookie$6 $r18;
        java.net.HttpCookie$7 $r21;
        java.net.HttpCookie$8 $r24;
        java.net.HttpCookie$9 $r27;
        java.net.HttpCookie$10 $r30;
        java.net.HttpCookie$11 $r33;
        java.net.HttpCookie$12 $r35;
        java.util.TimeZone $r36;

        $r0 = newarray (java.lang.String)[6];
        $r0[0] = "EEE\',\' dd-MMM-yyyy HH:mm:ss \'GMT\'";
        $r0[1] = "EEE\',\' dd MMM yyyy HH:mm:ss \'GMT\'";
        $r0[2] = "EEE MMM dd yyyy HH:mm:ss \'GMT\'Z";
        $r0[3] = "EEE\',\' dd-MMM-yy HH:mm:ss \'GMT\'";
        $r0[4] = "EEE\',\' dd MMM yy HH:mm:ss \'GMT\'";
        $r0[5] = "EEE MMM dd yy HH:mm:ss \'GMT\'Z";
        <java.net.HttpCookie: java.lang.String[] COOKIE_DATE_FORMATS> = $r0;
        <java.net.HttpCookie: java.util.Map assignors> = null;
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        <java.net.HttpCookie: java.util.Map assignors> = $r1;
        $r2 = <java.net.HttpCookie: java.util.Map assignors>;
        $r3 = new java.net.HttpCookie$1;
        specialinvoke $r3.<java.net.HttpCookie$1: void <init>()>();
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("comment", $r3);
        $r5 = <java.net.HttpCookie: java.util.Map assignors>;
        $r6 = new java.net.HttpCookie$2;
        specialinvoke $r6.<java.net.HttpCookie$2: void <init>()>();
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("commenturl", $r6);
        $r8 = <java.net.HttpCookie: java.util.Map assignors>;
        $r9 = new java.net.HttpCookie$3;
        specialinvoke $r9.<java.net.HttpCookie$3: void <init>()>();
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("discard", $r9);
        $r11 = <java.net.HttpCookie: java.util.Map assignors>;
        $r12 = new java.net.HttpCookie$4;
        specialinvoke $r12.<java.net.HttpCookie$4: void <init>()>();
        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("domain", $r12);
        $r14 = <java.net.HttpCookie: java.util.Map assignors>;
        $r15 = new java.net.HttpCookie$5;
        specialinvoke $r15.<java.net.HttpCookie$5: void <init>()>();
        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("max-age", $r15);
        $r17 = <java.net.HttpCookie: java.util.Map assignors>;
        $r18 = new java.net.HttpCookie$6;
        specialinvoke $r18.<java.net.HttpCookie$6: void <init>()>();
        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path", $r18);
        $r20 = <java.net.HttpCookie: java.util.Map assignors>;
        $r21 = new java.net.HttpCookie$7;
        specialinvoke $r21.<java.net.HttpCookie$7: void <init>()>();
        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("port", $r21);
        $r23 = <java.net.HttpCookie: java.util.Map assignors>;
        $r24 = new java.net.HttpCookie$8;
        specialinvoke $r24.<java.net.HttpCookie$8: void <init>()>();
        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("secure", $r24);
        $r26 = <java.net.HttpCookie: java.util.Map assignors>;
        $r27 = new java.net.HttpCookie$9;
        specialinvoke $r27.<java.net.HttpCookie$9: void <init>()>();
        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("httponly", $r27);
        $r29 = <java.net.HttpCookie: java.util.Map assignors>;
        $r30 = new java.net.HttpCookie$10;
        specialinvoke $r30.<java.net.HttpCookie$10: void <init>()>();
        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("version", $r30);
        $r32 = <java.net.HttpCookie: java.util.Map assignors>;
        $r33 = new java.net.HttpCookie$11;
        specialinvoke $r33.<java.net.HttpCookie$11: void <init>()>();
        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("expires", $r33);
        $r35 = new java.net.HttpCookie$12;
        specialinvoke $r35.<java.net.HttpCookie$12: void <init>()>();
        staticinvoke <sun.misc.SharedSecrets: void setJavaNetHttpCookieAccess(sun.misc.JavaNetHttpCookieAccess)>($r35);
        $r36 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");
        <java.net.HttpCookie: java.util.TimeZone GMT> = $r36;
        return;
    }
}
