final class java.nio.channels.spi.SelectorProvider$1 extends java.lang.Object implements java.security.PrivilegedAction
{

    void <init>()
    {
        java.nio.channels.spi.SelectorProvider$1 r0;

        r0 := @this: java.nio.channels.spi.SelectorProvider$1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.nio.channels.spi.SelectorProvider run()
    {
        java.nio.channels.spi.SelectorProvider$1 r0;
        boolean $z0, $z1;
        java.nio.channels.spi.SelectorProvider $r1, $r2, $r3, $r5;

        r0 := @this: java.nio.channels.spi.SelectorProvider$1;
        $z0 = staticinvoke <java.nio.channels.spi.SelectorProvider: boolean access$000()>();
        if $z0 == 0 goto label0;

        $r1 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider access$100()>();
        return $r1;

     label0:
        $z1 = staticinvoke <java.nio.channels.spi.SelectorProvider: boolean access$200()>();
        if $z1 == 0 goto label1;

        $r2 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider access$100()>();
        return $r2;

     label1:
        $r3 = staticinvoke <sun.nio.ch.DefaultSelectorProvider: java.nio.channels.spi.SelectorProvider create()>();
        staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider access$102(java.nio.channels.spi.SelectorProvider)>($r3);
        $r5 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider access$100()>();
        return $r5;
    }

    public volatile java.lang.Object run()
    {
        java.nio.channels.spi.SelectorProvider$1 r0;
        java.nio.channels.spi.SelectorProvider $r1;

        r0 := @this: java.nio.channels.spi.SelectorProvider$1;
        $r1 = virtualinvoke r0.<java.nio.channels.spi.SelectorProvider$1: java.nio.channels.spi.SelectorProvider run()>();
        return $r1;
    }
}
