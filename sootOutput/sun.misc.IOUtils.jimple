public class sun.misc.IOUtils extends java.lang.Object
{

    public void <init>()
    {
        sun.misc.IOUtils r0;

        r0 := @this: sun.misc.IOUtils;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static byte[] readFully(java.io.InputStream, int, boolean) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0;
        byte[] r1;
        java.io.EOFException $r2;

        r0 := @parameter0: java.io.InputStream;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        r1 = newarray (byte)[0];
        if i0 != -1 goto label0;

        i0 = 2147483647;

     label0:
        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        $i4 = lengthof r1;
        if i1 < $i4 goto label2;

        $i5 = i0 - i1;
        $i6 = lengthof r1;
        $i7 = $i6 + 1024;
        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i7);
        $i8 = lengthof r1;
        $i9 = i1 + i2;
        if $i8 >= $i9 goto label3;

        $i10 = i1 + i2;
        r1 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, $i10);
        goto label3;

     label2:
        $i11 = lengthof r1;
        i2 = $i11 - i1;

     label3:
        i3 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, i1, i2);
        if i3 >= 0 goto label5;

        if z0 == 0 goto label4;

        if i0 == 2147483647 goto label4;

        $r2 = new java.io.EOFException;
        specialinvoke $r2.<java.io.EOFException: void <init>(java.lang.String)>("Detect premature EOF");
        throw $r2;

     label4:
        $i12 = lengthof r1;
        if $i12 == i1 goto label6;

        r1 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, i1);
        goto label6;

     label5:
        i1 = i1 + i3;
        goto label1;

     label6:
        return r1;
    }
}
