public final class sun.security.provider.certpath.UntrustedChecker extends java.security.cert.PKIXCertPathChecker
{
    private static final sun.security.util.Debug debug;

    public void <init>()
    {
        sun.security.provider.certpath.UntrustedChecker r0;

        r0 := @this: sun.security.provider.certpath.UntrustedChecker;
        specialinvoke r0.<java.security.cert.PKIXCertPathChecker: void <init>()>();
        return;
    }

    public void init(boolean) throws java.security.cert.CertPathValidatorException
    {
        sun.security.provider.certpath.UntrustedChecker r0;
        boolean z0;

        r0 := @this: sun.security.provider.certpath.UntrustedChecker;
        z0 := @parameter0: boolean;
        return;
    }

    public boolean isForwardCheckingSupported()
    {
        sun.security.provider.certpath.UntrustedChecker r0;

        r0 := @this: sun.security.provider.certpath.UntrustedChecker;
        return 1;
    }

    public java.util.Set getSupportedExtensions()
    {
        sun.security.provider.certpath.UntrustedChecker r0;

        r0 := @this: sun.security.provider.certpath.UntrustedChecker;
        return null;
    }

    public void check(java.security.cert.Certificate, java.util.Collection) throws java.security.cert.CertPathValidatorException
    {
        sun.security.provider.certpath.UntrustedChecker r0;
        java.security.cert.Certificate r1;
        java.util.Collection r2;
        java.security.cert.X509Certificate r3;
        java.lang.StringBuilder $r4, $r7, $r9, $r12, $r13, $r15;
        boolean $z0;
        sun.security.util.Debug $r5, $r6;
        javax.security.auth.x500.X500Principal $r8, $r14;
        java.lang.String $r10, $r16;
        java.security.cert.CertPathValidatorException $r11;

        r0 := @this: sun.security.provider.certpath.UntrustedChecker;
        r1 := @parameter0: java.security.cert.Certificate;
        r2 := @parameter1: java.util.Collection;
        r3 = (java.security.cert.X509Certificate) r1;
        $z0 = staticinvoke <sun.security.util.UntrustedCertificates: boolean isUntrusted(java.security.cert.X509Certificate)>(r3);
        if $z0 == 0 goto label1;

        $r5 = <sun.security.provider.certpath.UntrustedChecker: sun.security.util.Debug debug>;
        if $r5 == null goto label0;

        $r6 = <sun.security.provider.certpath.UntrustedChecker: sun.security.util.Debug debug>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UntrustedChecker: untrusted certificate ");
        $r8 = virtualinvoke r3.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r6.<sun.security.util.Debug: void println(java.lang.String)>($r10);

     label0:
        $r11 = new java.security.cert.CertPathValidatorException;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Untrusted certificate: ");
        $r14 = virtualinvoke r3.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>($r16);
        throw $r11;

     label1:
        return;
    }

    static void <clinit>()
    {
        sun.security.util.Debug $r0;

        $r0 = staticinvoke <sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String)>("certpath");
        <sun.security.provider.certpath.UntrustedChecker: sun.security.util.Debug debug> = $r0;
        return;
    }
}
