public class sun.security.krb5.internal.util.KrbDataInputStream extends java.io.BufferedInputStream
{
    private boolean bigEndian;

    public void setNativeByteOrder()
    {
        sun.security.krb5.internal.util.KrbDataInputStream r0;
        java.nio.ByteOrder $r1, $r2;
        boolean $z0;

        r0 := @this: sun.security.krb5.internal.util.KrbDataInputStream;
        $r1 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();
        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label0;

        r0.<sun.security.krb5.internal.util.KrbDataInputStream: boolean bigEndian> = 1;
        goto label1;

     label0:
        r0.<sun.security.krb5.internal.util.KrbDataInputStream: boolean bigEndian> = 0;

     label1:
        return;
    }

    public void <init>(java.io.InputStream)
    {
        sun.security.krb5.internal.util.KrbDataInputStream r0;
        java.io.InputStream r1;

        r0 := @this: sun.security.krb5.internal.util.KrbDataInputStream;
        r1 := @parameter0: java.io.InputStream;
        specialinvoke r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r1);
        r0.<sun.security.krb5.internal.util.KrbDataInputStream: boolean bigEndian> = 1;
        return;
    }

    public final int readLength4() throws java.io.IOException
    {
        sun.security.krb5.internal.util.KrbDataInputStream r0;
        int i0;
        java.io.IOException $r1;

        r0 := @this: sun.security.krb5.internal.util.KrbDataInputStream;
        i0 = virtualinvoke r0.<sun.security.krb5.internal.util.KrbDataInputStream: int read(int)>(4);
        if i0 >= 0 goto label0;

        $r1 = new java.io.IOException;
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Invalid encoding");
        throw $r1;

     label0:
        return i0;
    }

    public int read(int) throws java.io.IOException
    {
        sun.security.krb5.internal.util.KrbDataInputStream r0;
        int i0, i1, i2, $i3, $i6, $i7, $i8, $i9, $i12, $i13;
        byte[] r1;
        java.io.IOException $r2;
        boolean $z0;
        byte $b4, $b10;
        short $s5, $s11;

        r0 := @this: sun.security.krb5.internal.util.KrbDataInputStream;
        i0 := @parameter0: int;
        r1 = newarray (byte)[i0];
        $i3 = virtualinvoke r0.<sun.security.krb5.internal.util.KrbDataInputStream: int read(byte[],int,int)>(r1, 0, i0);
        if $i3 == i0 goto label0;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Premature end of stream reached");
        throw $r2;

     label0:
        i1 = 0;
        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $z0 = r0.<sun.security.krb5.internal.util.KrbDataInputStream: boolean bigEndian>;
        if $z0 == 0 goto label2;

        $b4 = r1[i2];
        $s5 = $b4 & 255;
        $i6 = i0 - i2;
        $i7 = $i6 - 1;
        $i8 = $i7 * 8;
        $i9 = $s5 << $i8;
        i1 = i1 | $i9;
        goto label3;

     label2:
        $b10 = r1[i2];
        $s11 = $b10 & 255;
        $i12 = i2 * 8;
        $i13 = $s11 << $i12;
        i1 = i1 | $i13;

     label3:
        i2 = i2 + 1;
        goto label1;

     label4:
        return i1;
    }

    public int readVersion() throws java.io.IOException
    {
        sun.security.krb5.internal.util.KrbDataInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: sun.security.krb5.internal.util.KrbDataInputStream;
        $i1 = virtualinvoke r0.<sun.security.krb5.internal.util.KrbDataInputStream: int read()>();
        $i2 = $i1 & 255;
        i0 = $i2 << 8;
        $i3 = virtualinvoke r0.<sun.security.krb5.internal.util.KrbDataInputStream: int read()>();
        $i4 = $i3 & 255;
        $i5 = i0 | $i4;
        return $i5;
    }
}
