final class java.lang.reflect.Proxy$KeyFactory extends java.lang.Object implements java.lang.reflect.WeakCache$BiFunction
{

    private void <init>()
    {
        java.lang.reflect.Proxy$KeyFactory r0;

        r0 := @this: java.lang.reflect.Proxy$KeyFactory;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Object apply(java.lang.ClassLoader, java.lang.Class[])
    {
        java.lang.reflect.Proxy$KeyFactory r0;
        java.lang.ClassLoader r1;
        java.lang.Class[] r2;
        int $i0;
        java.lang.reflect.Proxy$Key1 $r3;
        java.lang.Class $r4, $r6, $r7;
        java.lang.reflect.Proxy$Key2 $r5;
        java.lang.Object $r8;
        java.lang.reflect.Proxy$KeyX $r9;

        r0 := @this: java.lang.reflect.Proxy$KeyFactory;
        r1 := @parameter0: java.lang.ClassLoader;
        r2 := @parameter1: java.lang.Class[];
        $i0 = lengthof r2;
        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label0;
            case 2: goto label1;
            default: goto label3;
        };

     label0:
        $r3 = new java.lang.reflect.Proxy$Key1;
        $r4 = r2[0];
        specialinvoke $r3.<java.lang.reflect.Proxy$Key1: void <init>(java.lang.Class)>($r4);
        return $r3;

     label1:
        $r5 = new java.lang.reflect.Proxy$Key2;
        $r6 = r2[0];
        $r7 = r2[1];
        specialinvoke $r5.<java.lang.reflect.Proxy$Key2: void <init>(java.lang.Class,java.lang.Class)>($r6, $r7);
        return $r5;

     label2:
        $r8 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object access$200()>();
        return $r8;

     label3:
        $r9 = new java.lang.reflect.Proxy$KeyX;
        specialinvoke $r9.<java.lang.reflect.Proxy$KeyX: void <init>(java.lang.Class[])>(r2);
        return $r9;
    }

    public volatile java.lang.Object apply(java.lang.Object, java.lang.Object)
    {
        java.lang.reflect.Proxy$KeyFactory r0;
        java.lang.Object r1, r2, $r5;
        java.lang.ClassLoader $r3;
        java.lang.Class[] $r4;

        r0 := @this: java.lang.reflect.Proxy$KeyFactory;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (java.lang.ClassLoader) r1;
        $r4 = (java.lang.Class[]) r2;
        $r5 = virtualinvoke r0.<java.lang.reflect.Proxy$KeyFactory: java.lang.Object apply(java.lang.ClassLoader,java.lang.Class[])>($r3, $r4);
        return $r5;
    }

    void <init>(java.lang.reflect.Proxy$1)
    {
        java.lang.reflect.Proxy$KeyFactory r0;
        java.lang.reflect.Proxy$1 r1;

        r0 := @this: java.lang.reflect.Proxy$KeyFactory;
        r1 := @parameter0: java.lang.reflect.Proxy$1;
        specialinvoke r0.<java.lang.reflect.Proxy$KeyFactory: void <init>()>();
        return;
    }
}
