public class org.apache.tomcat.util.threads.TaskThreadFactory extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    private final java.lang.ThreadGroup group;
    private final java.util.concurrent.atomic.AtomicInteger threadNumber;
    private final java.lang.String namePrefix;
    private final boolean daemon;
    private final int threadPriority;

    public void <init>(java.lang.String, boolean, int)
    {
        org.apache.tomcat.util.threads.TaskThreadFactory r0;
        java.lang.String r1;
        boolean z0;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r2;
        java.lang.SecurityManager r3;
        java.lang.ThreadGroup $r5;
        java.lang.Thread $r6;

        r0 := @this: org.apache.tomcat.util.threads.TaskThreadFactory;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        i0 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.concurrent.atomic.AtomicInteger;
        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);
        r0.<org.apache.tomcat.util.threads.TaskThreadFactory: java.util.concurrent.atomic.AtomicInteger threadNumber> = $r2;
        r3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r3 == null goto label0;

        $r5 = virtualinvoke r3.<java.lang.SecurityManager: java.lang.ThreadGroup getThreadGroup()>();
        goto label1;

     label0:
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r5 = virtualinvoke $r6.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();

     label1:
        r0.<org.apache.tomcat.util.threads.TaskThreadFactory: java.lang.ThreadGroup group> = $r5;
        r0.<org.apache.tomcat.util.threads.TaskThreadFactory: java.lang.String namePrefix> = r1;
        r0.<org.apache.tomcat.util.threads.TaskThreadFactory: boolean daemon> = z0;
        r0.<org.apache.tomcat.util.threads.TaskThreadFactory: int threadPriority> = i0;
        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        org.apache.tomcat.util.threads.TaskThreadFactory r0;
        java.lang.Runnable r1;
        org.apache.tomcat.util.threads.TaskThread $r2, r4;
        java.lang.StringBuilder $r3, $r9;
        java.lang.ThreadGroup $r5;
        java.lang.String $r6, $r7, $r10;
        java.util.concurrent.atomic.AtomicInteger $r8;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.threads.TaskThreadFactory;
        r1 := @parameter0: java.lang.Runnable;
        $r2 = new org.apache.tomcat.util.threads.TaskThread;
        $r5 = r0.<org.apache.tomcat.util.threads.TaskThreadFactory: java.lang.ThreadGroup group>;
        $r3 = new java.lang.StringBuilder;
        $r6 = r0.<org.apache.tomcat.util.threads.TaskThreadFactory: java.lang.String namePrefix>;
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);
        $r8 = r0.<org.apache.tomcat.util.threads.TaskThreadFactory: java.util.concurrent.atomic.AtomicInteger threadNumber>;
        $i0 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<org.apache.tomcat.util.threads.TaskThread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>($r5, r1, $r10);
        r4 = $r2;
        $z0 = r0.<org.apache.tomcat.util.threads.TaskThreadFactory: boolean daemon>;
        virtualinvoke r4.<org.apache.tomcat.util.threads.TaskThread: void setDaemon(boolean)>($z0);
        $i1 = r0.<org.apache.tomcat.util.threads.TaskThreadFactory: int threadPriority>;
        virtualinvoke r4.<org.apache.tomcat.util.threads.TaskThread: void setPriority(int)>($i1);
        return r4;
    }
}
