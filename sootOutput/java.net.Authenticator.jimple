public abstract class java.net.Authenticator extends java.lang.Object
{
    private static java.net.Authenticator theAuthenticator;
    private java.lang.String requestingHost;
    private java.net.InetAddress requestingSite;
    private int requestingPort;
    private java.lang.String requestingProtocol;
    private java.lang.String requestingPrompt;
    private java.lang.String requestingScheme;
    private java.net.URL requestingURL;
    private java.net.Authenticator$RequestorType requestingAuthType;

    public void <init>()
    {
        java.net.Authenticator r0;

        r0 := @this: java.net.Authenticator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private void reset()
    {
        java.net.Authenticator r0;
        java.net.Authenticator$RequestorType $r1;

        r0 := @this: java.net.Authenticator;
        r0.<java.net.Authenticator: java.lang.String requestingHost> = null;
        r0.<java.net.Authenticator: java.net.InetAddress requestingSite> = null;
        r0.<java.net.Authenticator: int requestingPort> = -1;
        r0.<java.net.Authenticator: java.lang.String requestingProtocol> = null;
        r0.<java.net.Authenticator: java.lang.String requestingPrompt> = null;
        r0.<java.net.Authenticator: java.lang.String requestingScheme> = null;
        r0.<java.net.Authenticator: java.net.URL requestingURL> = null;
        $r1 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType SERVER>;
        r0.<java.net.Authenticator: java.net.Authenticator$RequestorType requestingAuthType> = $r1;
        return;
    }

    public static synchronized void setDefault(java.net.Authenticator)
    {
        java.net.Authenticator r0;
        java.lang.SecurityManager r1;
        java.net.NetPermission r2, $r3;

        r0 := @parameter0: java.net.Authenticator;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r3 = new java.net.NetPermission;
        specialinvoke $r3.<java.net.NetPermission: void <init>(java.lang.String)>("setDefaultAuthenticator");
        r2 = $r3;
        virtualinvoke r1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(r2);

     label0:
        <java.net.Authenticator: java.net.Authenticator theAuthenticator> = r0;
        return;
    }

    public static java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.InetAddress r0;
        int i0;
        java.lang.String r1, r2, r3;
        java.lang.SecurityManager r4;
        java.net.NetPermission r5, $r8;
        java.net.Authenticator r6, r9;
        java.lang.Throwable r7, $r12;
        java.net.PasswordAuthentication $r11;

        r0 := @parameter0: java.net.InetAddress;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: java.lang.String;
        r3 := @parameter4: java.lang.String;
        r4 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r4 == null goto label0;

        $r8 = new java.net.NetPermission;
        specialinvoke $r8.<java.net.NetPermission: void <init>(java.lang.String)>("requestPasswordAuthentication");
        r5 = $r8;
        virtualinvoke r4.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(r5);

     label0:
        r9 = <java.net.Authenticator: java.net.Authenticator theAuthenticator>;
        if r9 != null goto label1;

        return null;

     label1:
        r6 = r9;
        entermonitor r9;

     label2:
        specialinvoke r9.<java.net.Authenticator: void reset()>();
        r9.<java.net.Authenticator: java.net.InetAddress requestingSite> = r0;
        r9.<java.net.Authenticator: int requestingPort> = i0;
        r9.<java.net.Authenticator: java.lang.String requestingProtocol> = r1;
        r9.<java.net.Authenticator: java.lang.String requestingPrompt> = r2;
        r9.<java.net.Authenticator: java.lang.String requestingScheme> = r3;
        $r11 = virtualinvoke r9.<java.net.Authenticator: java.net.PasswordAuthentication getPasswordAuthentication()>();
        exitmonitor r6;

     label3:
        return $r11;

     label4:
        $r12 := @caughtexception;

     label5:
        r7 = $r12;
        exitmonitor r6;

     label6:
        throw r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String, java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r2, r3, r4;
        java.net.InetAddress r1;
        int i0;
        java.lang.SecurityManager r5;
        java.net.NetPermission r6, $r9;
        java.net.Authenticator r7, r10;
        java.lang.Throwable r8, $r13;
        java.net.PasswordAuthentication $r12;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.net.InetAddress;
        i0 := @parameter2: int;
        r2 := @parameter3: java.lang.String;
        r3 := @parameter4: java.lang.String;
        r4 := @parameter5: java.lang.String;
        r5 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r5 == null goto label0;

        $r9 = new java.net.NetPermission;
        specialinvoke $r9.<java.net.NetPermission: void <init>(java.lang.String)>("requestPasswordAuthentication");
        r6 = $r9;
        virtualinvoke r5.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(r6);

     label0:
        r10 = <java.net.Authenticator: java.net.Authenticator theAuthenticator>;
        if r10 != null goto label1;

        return null;

     label1:
        r7 = r10;
        entermonitor r10;

     label2:
        specialinvoke r10.<java.net.Authenticator: void reset()>();
        r10.<java.net.Authenticator: java.lang.String requestingHost> = r0;
        r10.<java.net.Authenticator: java.net.InetAddress requestingSite> = r1;
        r10.<java.net.Authenticator: int requestingPort> = i0;
        r10.<java.net.Authenticator: java.lang.String requestingProtocol> = r2;
        r10.<java.net.Authenticator: java.lang.String requestingPrompt> = r3;
        r10.<java.net.Authenticator: java.lang.String requestingScheme> = r4;
        $r12 = virtualinvoke r10.<java.net.Authenticator: java.net.PasswordAuthentication getPasswordAuthentication()>();
        exitmonitor r7;

     label3:
        return $r12;

     label4:
        $r13 := @caughtexception;

     label5:
        r8 = $r13;
        exitmonitor r7;

     label6:
        throw r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String, java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String, java.net.URL, java.net.Authenticator$RequestorType)
    {
        java.lang.String r0, r2, r3, r4;
        java.net.InetAddress r1;
        int i0;
        java.net.URL r5;
        java.net.Authenticator$RequestorType r6;
        java.lang.SecurityManager r7;
        java.net.NetPermission r8, $r11;
        java.net.Authenticator r9, r12;
        java.lang.Throwable r10, $r15;
        java.net.PasswordAuthentication $r14;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.net.InetAddress;
        i0 := @parameter2: int;
        r2 := @parameter3: java.lang.String;
        r3 := @parameter4: java.lang.String;
        r4 := @parameter5: java.lang.String;
        r5 := @parameter6: java.net.URL;
        r6 := @parameter7: java.net.Authenticator$RequestorType;
        r7 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r7 == null goto label0;

        $r11 = new java.net.NetPermission;
        specialinvoke $r11.<java.net.NetPermission: void <init>(java.lang.String)>("requestPasswordAuthentication");
        r8 = $r11;
        virtualinvoke r7.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(r8);

     label0:
        r12 = <java.net.Authenticator: java.net.Authenticator theAuthenticator>;
        if r12 != null goto label1;

        return null;

     label1:
        r9 = r12;
        entermonitor r12;

     label2:
        specialinvoke r12.<java.net.Authenticator: void reset()>();
        r12.<java.net.Authenticator: java.lang.String requestingHost> = r0;
        r12.<java.net.Authenticator: java.net.InetAddress requestingSite> = r1;
        r12.<java.net.Authenticator: int requestingPort> = i0;
        r12.<java.net.Authenticator: java.lang.String requestingProtocol> = r2;
        r12.<java.net.Authenticator: java.lang.String requestingPrompt> = r3;
        r12.<java.net.Authenticator: java.lang.String requestingScheme> = r4;
        r12.<java.net.Authenticator: java.net.URL requestingURL> = r5;
        r12.<java.net.Authenticator: java.net.Authenticator$RequestorType requestingAuthType> = r6;
        $r14 = virtualinvoke r12.<java.net.Authenticator: java.net.PasswordAuthentication getPasswordAuthentication()>();
        exitmonitor r9;

     label3:
        return $r14;

     label4:
        $r15 := @caughtexception;

     label5:
        r10 = $r15;
        exitmonitor r9;

     label6:
        throw r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected final java.lang.String getRequestingHost()
    {
        java.net.Authenticator r0;
        java.lang.String $r1;

        r0 := @this: java.net.Authenticator;
        $r1 = r0.<java.net.Authenticator: java.lang.String requestingHost>;
        return $r1;
    }

    protected final java.net.InetAddress getRequestingSite()
    {
        java.net.Authenticator r0;
        java.net.InetAddress $r1;

        r0 := @this: java.net.Authenticator;
        $r1 = r0.<java.net.Authenticator: java.net.InetAddress requestingSite>;
        return $r1;
    }

    protected final int getRequestingPort()
    {
        java.net.Authenticator r0;
        int $i0;

        r0 := @this: java.net.Authenticator;
        $i0 = r0.<java.net.Authenticator: int requestingPort>;
        return $i0;
    }

    protected final java.lang.String getRequestingProtocol()
    {
        java.net.Authenticator r0;
        java.lang.String $r1;

        r0 := @this: java.net.Authenticator;
        $r1 = r0.<java.net.Authenticator: java.lang.String requestingProtocol>;
        return $r1;
    }

    protected final java.lang.String getRequestingPrompt()
    {
        java.net.Authenticator r0;
        java.lang.String $r1;

        r0 := @this: java.net.Authenticator;
        $r1 = r0.<java.net.Authenticator: java.lang.String requestingPrompt>;
        return $r1;
    }

    protected final java.lang.String getRequestingScheme()
    {
        java.net.Authenticator r0;
        java.lang.String $r1;

        r0 := @this: java.net.Authenticator;
        $r1 = r0.<java.net.Authenticator: java.lang.String requestingScheme>;
        return $r1;
    }

    protected java.net.PasswordAuthentication getPasswordAuthentication()
    {
        java.net.Authenticator r0;

        r0 := @this: java.net.Authenticator;
        return null;
    }

    protected java.net.URL getRequestingURL()
    {
        java.net.Authenticator r0;
        java.net.URL $r1;

        r0 := @this: java.net.Authenticator;
        $r1 = r0.<java.net.Authenticator: java.net.URL requestingURL>;
        return $r1;
    }

    protected java.net.Authenticator$RequestorType getRequestorType()
    {
        java.net.Authenticator r0;
        java.net.Authenticator$RequestorType $r1;

        r0 := @this: java.net.Authenticator;
        $r1 = r0.<java.net.Authenticator: java.net.Authenticator$RequestorType requestingAuthType>;
        return $r1;
    }
}
