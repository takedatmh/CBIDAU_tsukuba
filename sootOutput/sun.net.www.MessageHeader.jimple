public class sun.net.www.MessageHeader extends java.lang.Object
{
    private java.lang.String[] keys;
    private java.lang.String[] values;
    private int nkeys;

    public void <init>()
    {
        sun.net.www.MessageHeader r0;

        r0 := @this: sun.net.www.MessageHeader;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        specialinvoke r0.<sun.net.www.MessageHeader: void grow()>();
        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        sun.net.www.MessageHeader r0;
        java.io.InputStream r1;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.io.InputStream;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        virtualinvoke r0.<sun.net.www.MessageHeader: void parseHeader(java.io.InputStream)>(r1);
        return;
    }

    public synchronized void reset()
    {
        sun.net.www.MessageHeader r0;

        r0 := @this: sun.net.www.MessageHeader;
        r0.<sun.net.www.MessageHeader: java.lang.String[] keys> = null;
        r0.<sun.net.www.MessageHeader: java.lang.String[] values> = null;
        r0.<sun.net.www.MessageHeader: int nkeys> = 0;
        specialinvoke r0.<sun.net.www.MessageHeader: void grow()>();
        return;
    }

    public synchronized java.lang.String findValue(java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String r1, $r3, $r5, $r7, $r9;
        int i0, i1;
        java.lang.String[] $r2, $r4, $r6, $r8;
        boolean $z0;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label2;

        i0 = r0.<sun.net.www.MessageHeader: int nkeys>;

     label0:
        i0 = i0 + -1;
        if i0 < 0 goto label1;

        $r2 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r3 = $r2[i0];
        if $r3 != null goto label0;

        $r4 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r5 = $r4[i0];
        return $r5;

     label1:
        goto label4;

     label2:
        i1 = r0.<sun.net.www.MessageHeader: int nkeys>;

     label3:
        i1 = i1 + -1;
        if i1 < 0 goto label4;

        $r6 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r7 = $r6[i1];
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);
        if $z0 == 0 goto label3;

        $r8 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r9 = $r8[i1];
        return $r9;

     label4:
        return null;
    }

    public synchronized int getKey(java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String r1, $r3, $r5;
        int i0;
        java.lang.String[] $r2, $r4;
        boolean $z0;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String;
        i0 = r0.<sun.net.www.MessageHeader: int nkeys>;

     label0:
        i0 = i0 + -1;
        if i0 < 0 goto label2;

        $r2 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r3 = $r2[i0];
        if $r3 == r1 goto label1;

        if r1 == null goto label0;

        $r4 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r5 = $r4[i0];
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);
        if $z0 == 0 goto label0;

     label1:
        return i0;

     label2:
        return -1;
    }

    public synchronized java.lang.String getKey(int)
    {
        sun.net.www.MessageHeader r0;
        int i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: sun.net.www.MessageHeader;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i1 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i0 < $i1 goto label1;

     label0:
        return null;

     label1:
        $r1 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r2 = $r1[i0];
        return $r2;
    }

    public synchronized java.lang.String getValue(int)
    {
        sun.net.www.MessageHeader r0;
        int i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: sun.net.www.MessageHeader;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i1 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i0 < $i1 goto label1;

     label0:
        return null;

     label1:
        $r1 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r2 = $r1[i0];
        return $r2;
    }

    public synchronized java.lang.String findNextValue(java.lang.String, java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String r1, r2, $r4, $r6, $r8, $r10, $r12, $r14;
        boolean z0, $z1;
        int i0, i1;
        java.lang.String[] $r3, $r5, $r7, $r9, $r11, $r13;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 = 0;
        if r1 != null goto label3;

        i0 = r0.<sun.net.www.MessageHeader: int nkeys>;

     label0:
        i0 = i0 + -1;
        if i0 < 0 goto label2;

        $r3 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r4 = $r3[i0];
        if $r4 != null goto label0;

        if z0 == 0 goto label1;

        $r5 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r6 = $r5[i0];
        return $r6;

     label1:
        $r7 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r8 = $r7[i0];
        if $r8 != r2 goto label0;

        z0 = 1;
        goto label0;

     label2:
        goto label6;

     label3:
        i1 = r0.<sun.net.www.MessageHeader: int nkeys>;

     label4:
        i1 = i1 + -1;
        if i1 < 0 goto label6;

        $r9 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r10 = $r9[i1];
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);
        if $z1 == 0 goto label4;

        if z0 == 0 goto label5;

        $r11 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r12 = $r11[i1];
        return $r12;

     label5:
        $r13 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r14 = $r13[i1];
        if $r14 != r2 goto label4;

        z0 = 1;
        goto label4;

     label6:
        return null;
    }

    public boolean filterNTLMResponses(java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String r1, $r3, $r5, $r7, $r9, $r11, $r12, $r14, $r15, $r17, $r20, $r23;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, $i2, $i3, i4, $i5, $i6;
        java.lang.String[] $r2, $r4, $r6, $r8, $r10, $r13, $r16, $r18, $r19, $r21, $r22;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String;
        z0 = 0;
        i0 = 0;

     label0:
        $i2 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i0 >= $i2 goto label2;

        $r2 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r3 = $r2[i0];
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);
        if $z1 == 0 goto label1;

        $r4 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r5 = $r4[i0];
        if $r5 == null goto label1;

        $r6 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r7 = $r6[i0];
        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();
        if $i3 <= 5 goto label1;

        $r8 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r9 = $r8[i0];
        $z2 = virtualinvoke $r9.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, "NTLM ", 0, 5);
        if $z2 == 0 goto label1;

        z0 = 1;
        goto label2;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        if z0 == 0 goto label8;

        i4 = 0;
        i1 = 0;

     label3:
        $i5 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i1 >= $i5 goto label7;

        $r10 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r11 = $r10[i1];
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);
        if $z3 == 0 goto label4;

        $r12 = "Negotiate";
        $r13 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r14 = $r13[i1];
        $z4 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r14);
        if $z4 != 0 goto label6;

        $r15 = "Kerberos";
        $r16 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r17 = $r16[i1];
        $z5 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r17);
        if $z5 == 0 goto label4;

        goto label6;

     label4:
        if i1 == i4 goto label5;

        $r18 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r19 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r20 = $r19[i1];
        $r18[i4] = $r20;
        $r21 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r22 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r23 = $r22[i1];
        $r21[i4] = $r23;

     label5:
        i4 = i4 + 1;

     label6:
        i1 = i1 + 1;
        goto label3;

     label7:
        $i6 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i4 == $i6 goto label8;

        r0.<sun.net.www.MessageHeader: int nkeys> = i4;
        return 1;

     label8:
        return 0;
    }

    public java.util.Iterator multiValueIterator(java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String r1;
        sun.net.www.MessageHeader$HeaderIterator $r2;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String;
        $r2 = new sun.net.www.MessageHeader$HeaderIterator;
        specialinvoke $r2.<sun.net.www.MessageHeader$HeaderIterator: void <init>(sun.net.www.MessageHeader,java.lang.String,java.lang.Object)>(r0, r1, r0);
        return $r2;
    }

    public synchronized java.util.Map getHeaders()
    {
        sun.net.www.MessageHeader r0;
        java.util.Map $r1;

        r0 := @this: sun.net.www.MessageHeader;
        $r1 = virtualinvoke r0.<sun.net.www.MessageHeader: java.util.Map getHeaders(java.lang.String[])>(null);
        return $r1;
    }

    public synchronized java.util.Map getHeaders(java.lang.String[])
    {
        sun.net.www.MessageHeader r0;
        java.lang.String[] r1;
        java.util.Map $r2;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String[];
        $r2 = virtualinvoke r0.<sun.net.www.MessageHeader: java.util.Map filterAndAddHeaders(java.lang.String[],java.util.Map)>(r1, null);
        return $r2;
    }

    public synchronized java.util.Map filterAndAddHeaders(java.lang.String[], java.util.Map)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String[] r1, $r8, $r10, $r15, $r18;
        java.util.Map r2, $r39;
        boolean z0, $z1, $z3, $z5;
        java.util.HashMap r3, $r5;
        int i0, i1, $i2;
        java.util.List r4, r13, $r36, $r37;
        java.lang.String $r6, $r7, $r9, $r11, $r16, $r19, $r28, r34;
        java.lang.Object $r12, $r22, $r24, $r25, $r27, $r30, $r33, $r35;
        java.util.ArrayList $r14, $r26;
        java.util.Set $r20, $r31;
        java.util.Iterator r21, r32;
        java.util.Map$Entry r23;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String[];
        r2 := @parameter1: java.util.Map;
        z0 = 0;
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>()>();
        r3 = $r5;
        i0 = r0.<sun.net.www.MessageHeader: int nkeys>;

     label0:
        i0 = i0 + -1;
        if i0 < 0 goto label6;

        if r1 == null goto label3;

        i1 = 0;

     label1:
        $i2 = lengthof r1;
        if i1 >= $i2 goto label3;

        $r6 = r1[i1];
        if $r6 == null goto label2;

        $r7 = r1[i1];
        $r8 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r9 = $r8[i0];
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);
        if $z1 == 0 goto label2;

        z0 = 1;
        goto label3;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        if z0 != 0 goto label5;

        $r10 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r11 = $r10[i0];
        $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);
        r13 = (java.util.List) $r12;
        if r13 != null goto label4;

        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        r13 = $r14;
        $r15 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r16 = $r15[i0];
        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r13);

     label4:
        $r18 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r19 = $r18[i0];
        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r19);
        goto label0;

     label5:
        z0 = 0;
        goto label0;

     label6:
        if r2 == null goto label9;

        $r20 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();
        r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z3 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label9;

        $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();
        r23 = (java.util.Map$Entry) $r22;
        $r24 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r25 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24);
        r4 = (java.util.List) $r25;
        if r4 != null goto label8;

        $r26 = new java.util.ArrayList;
        specialinvoke $r26.<java.util.ArrayList: void <init>()>();
        r4 = $r26;
        $r27 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r28 = (java.lang.String) $r27;
        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r4);

     label8:
        $r30 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>();
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r30);
        goto label7;

     label9:
        $r31 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();
        r32 = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z5 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
        if $z5 == 0 goto label11;

        $r33 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
        r34 = (java.lang.String) $r33;
        $r35 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);
        $r36 = (java.util.List) $r35;
        $r37 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r36);
        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, $r37);
        goto label10;

     label11:
        $r39 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r3);
        return $r39;
    }

    public synchronized void print(java.io.PrintStream)
    {
        sun.net.www.MessageHeader r0;
        java.io.PrintStream r1;
        int i0, $i1;
        java.lang.String[] $r2, $r6, $r9, $r13;
        java.lang.String $r3, $r7, $r10, $r14, $r16, $r19;
        java.lang.StringBuilder $r5, $r8, $r11, $r12, $r15, $r17, $r18;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.io.PrintStream;
        i0 = 0;

     label0:
        $i1 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i0 >= $i1 goto label4;

        $r2 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r3 = $r2[i0];
        if $r3 == null goto label3;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r10 = $r9[i0];
        if $r10 == null goto label1;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r13 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r14 = $r13[i0];
        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label2;

     label1:
        $r16 = "";

     label2:
        $r17 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r19);

     label3:
        i0 = i0 + 1;
        goto label0;

     label4:
        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>("\r\n");
        virtualinvoke r1.<java.io.PrintStream: void flush()>();
        return;
    }

    public synchronized void add(java.lang.String, java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String r1, r2;
        java.lang.String[] $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<sun.net.www.MessageHeader: void grow()>();
        $r3 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $i0 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $r3[$i0] = r1;
        $r4 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $i1 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $r4[$i1] = r2;
        $i2 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $i3 = $i2 + 1;
        r0.<sun.net.www.MessageHeader: int nkeys> = $i3;
        return;
    }

    public synchronized void prepend(java.lang.String, java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String r1, r2, $r5, $r8;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String[] $r3, $r4, $r6, $r7, $r9, $r10;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<sun.net.www.MessageHeader: void grow()>();
        i0 = r0.<sun.net.www.MessageHeader: int nkeys>;

     label0:
        if i0 <= 0 goto label1;

        $r3 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r4 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $i1 = i0 - 1;
        $r5 = $r4[$i1];
        $r3[i0] = $r5;
        $r6 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r7 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $i2 = i0 - 1;
        $r8 = $r7[$i2];
        $r6[i0] = $r8;
        i0 = i0 + -1;
        goto label0;

     label1:
        $r9 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r9[0] = r1;
        $r10 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r10[0] = r2;
        $i3 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $i4 = $i3 + 1;
        r0.<sun.net.www.MessageHeader: int nkeys> = $i4;
        return;
    }

    public synchronized void set(int, java.lang.String, java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        int i0, $i1;
        java.lang.String r1, r2;
        java.lang.String[] $r3, $r4;

        r0 := @this: sun.net.www.MessageHeader;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        specialinvoke r0.<sun.net.www.MessageHeader: void grow()>();
        if i0 >= 0 goto label0;

        return;

     label0:
        $i1 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i0 < $i1 goto label1;

        virtualinvoke r0.<sun.net.www.MessageHeader: void add(java.lang.String,java.lang.String)>(r1, r2);
        goto label2;

     label1:
        $r3 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r3[i0] = r1;
        $r4 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r4[i0] = r2;

     label2:
        return;
    }

    private void grow()
    {
        sun.net.www.MessageHeader r0;
        java.lang.String[] r1, r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: sun.net.www.MessageHeader;
        $r3 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        if $r3 == null goto label0;

        $i0 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $r4 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $i1 = lengthof $r4;
        if $i0 < $i1 goto label3;

     label0:
        $i2 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $i3 = $i2 + 4;
        r1 = newarray (java.lang.String)[$i3];
        $i4 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $i5 = $i4 + 4;
        r2 = newarray (java.lang.String)[$i5];
        $r5 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        if $r5 == null goto label1;

        $r6 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $i6 = r0.<sun.net.www.MessageHeader: int nkeys>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r1, 0, $i6);

     label1:
        $r7 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        if $r7 == null goto label2;

        $r8 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $i7 = r0.<sun.net.www.MessageHeader: int nkeys>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r2, 0, $i7);

     label2:
        r0.<sun.net.www.MessageHeader: java.lang.String[] keys> = r1;
        r0.<sun.net.www.MessageHeader: java.lang.String[] values> = r2;

     label3:
        return;
    }

    public synchronized void remove(java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String r1, $r3, $r6, $r9, $r12, $r15, $r18;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.String[] $r2, $r4, $r5, $r7, $r8, $r11, $r13, $r14, $r16, $r17;
        boolean $z0;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label6;

        i0 = 0;

     label0:
        $i2 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i0 >= $i2 goto label5;

     label1:
        $r2 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r3 = $r2[i0];
        if $r3 != null goto label4;

        $i3 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i0 >= $i3 goto label4;

        i1 = i0;

     label2:
        $i4 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $i5 = $i4 - 1;
        if i1 >= $i5 goto label3;

        $r4 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r5 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $i6 = i1 + 1;
        $r6 = $r5[$i6];
        $r4[i1] = $r6;
        $r7 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r8 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $i7 = i1 + 1;
        $r9 = $r8[$i7];
        $r7[i1] = $r9;
        i1 = i1 + 1;
        goto label2;

     label3:
        $i8 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $i9 = $i8 - 1;
        r0.<sun.net.www.MessageHeader: int nkeys> = $i9;
        goto label1;

     label4:
        i0 = i0 + 1;
        goto label0;

     label5:
        goto label12;

     label6:
        i10 = 0;

     label7:
        $i11 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i10 >= $i11 goto label12;

     label8:
        $r11 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r12 = $r11[i10];
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12);
        if $z0 == 0 goto label11;

        $i12 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i10 >= $i12 goto label11;

        i13 = i10;

     label9:
        $i14 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $i15 = $i14 - 1;
        if i13 >= $i15 goto label10;

        $r13 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r14 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $i16 = i13 + 1;
        $r15 = $r14[$i16];
        $r13[i13] = $r15;
        $r16 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r17 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $i17 = i13 + 1;
        $r18 = $r17[$i17];
        $r16[i13] = $r18;
        i13 = i13 + 1;
        goto label9;

     label10:
        $i18 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $i19 = $i18 - 1;
        r0.<sun.net.www.MessageHeader: int nkeys> = $i19;
        goto label8;

     label11:
        i10 = i10 + 1;
        goto label7;

     label12:
        return;
    }

    public synchronized void set(java.lang.String, java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String r1, r2, $r4;
        int i0;
        java.lang.String[] $r3, $r5;
        boolean $z0;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 = r0.<sun.net.www.MessageHeader: int nkeys>;

     label0:
        i0 = i0 + -1;
        if i0 < 0 goto label1;

        $r3 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r4 = $r3[i0];
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);
        if $z0 == 0 goto label0;

        $r5 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r5[i0] = r2;
        return;

     label1:
        virtualinvoke r0.<sun.net.www.MessageHeader: void add(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    public synchronized void setIfNotSet(java.lang.String, java.lang.String)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String r1, r2, $r3;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = virtualinvoke r0.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>(r1);
        if $r3 != null goto label0;

        virtualinvoke r0.<sun.net.www.MessageHeader: void add(java.lang.String,java.lang.String)>(r1, r2);

     label0:
        return;
    }

    public static java.lang.String canonicalID(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, i1, $i4;
        boolean z0;
        char c2, $c3, $c5, c6;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return "";

     label0:
        i0 = 0;
        i1 = virtualinvoke r0.<java.lang.String: int length()>();
        z0 = 0;

     label1:
        if i0 >= i1 goto label3;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        c2 = $c3;
        if $c3 == 60 goto label2;

        if c2 > 32 goto label3;

     label2:
        i0 = i0 + 1;
        z0 = 1;
        goto label1;

     label3:
        if i0 >= i1 goto label5;

        $i4 = i1 - 1;
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);
        c6 = $c5;
        if $c5 == 62 goto label4;

        if c6 > 32 goto label5;

     label4:
        i1 = i1 + -1;
        z0 = 1;
        goto label3;

     label5:
        if z0 == 0 goto label6;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);
        goto label7;

     label6:
        $r1 = r0;

     label7:
        return $r1;
    }

    public void parseHeader(java.io.InputStream) throws java.io.IOException
    {
        sun.net.www.MessageHeader r0, r3;
        java.io.InputStream r1;
        java.lang.Throwable r4, $r5;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.io.InputStream;
        r3 = r0;
        entermonitor r0;

     label0:
        r0.<sun.net.www.MessageHeader: int nkeys> = 0;
        exitmonitor r3;

     label1:
        goto label5;

     label2:
        $r5 := @caughtexception;

     label3:
        r4 = $r5;
        exitmonitor r3;

     label4:
        throw r4;

     label5:
        virtualinvoke r0.<sun.net.www.MessageHeader: void mergeHeader(java.io.InputStream)>(r1);
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void mergeHeader(java.io.InputStream) throws java.io.IOException
    {
        sun.net.www.MessageHeader r0;
        java.io.InputStream r1;
        char[] r2, r3;
        int i0, i2, i3, i4, $i6, $i7, $i8, $i9, $i10, $i12, $i16;
        byte b1;
        boolean z0, $z1;
        java.lang.String r4, r5, $r6;
        char $c5, $c11, $c13, $c14, $c15;

        r0 := @this: sun.net.www.MessageHeader;
        r1 := @parameter0: java.io.InputStream;
        if r1 != null goto label0;

        return;

     label0:
        r2 = newarray (char)[10];
        i0 = virtualinvoke r1.<java.io.InputStream: int read()>();

     label1:
        if i0 == 10 goto label22;

        if i0 == 13 goto label22;

        if i0 < 0 goto label22;

        b1 = 0;
        i2 = -1;
        if i0 <= 32 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;
        i4 = b1 + 1;
        $c5 = (char) i0;
        r2[b1] = $c5;

     label4:
        $i6 = virtualinvoke r1.<java.io.InputStream: int read()>();
        i3 = $i6;
        if $i6 < 0 goto label14;

        lookupswitch(i3)
        {
            case 9: goto label7;
            case 10: goto label9;
            case 13: goto label9;
            case 32: goto label8;
            case 58: goto label5;
            default: goto label12;
        };

     label5:
        if z0 == 0 goto label6;

        if i4 <= 0 goto label6;

        i2 = i4;

     label6:
        z0 = 0;
        goto label12;

     label7:
        i3 = 32;

     label8:
        z0 = 0;
        goto label12;

     label9:
        i0 = virtualinvoke r1.<java.io.InputStream: int read()>();
        if i3 != 13 goto label10;

        if i0 != 10 goto label10;

        i0 = virtualinvoke r1.<java.io.InputStream: int read()>();
        if i0 != 13 goto label10;

        i0 = virtualinvoke r1.<java.io.InputStream: int read()>();

     label10:
        if i0 == 10 goto label15;

        if i0 == 13 goto label15;

        if i0 <= 32 goto label11;

        goto label15;

     label11:
        i3 = 32;

     label12:
        $i7 = lengthof r2;
        if i4 < $i7 goto label13;

        $i8 = lengthof r2;
        $i9 = $i8 * 2;
        r3 = newarray (char)[$i9];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i4);
        r2 = r3;

     label13:
        $i10 = i4;
        i4 = i4 + 1;
        $c11 = (char) i3;
        r2[$i10] = $c11;
        goto label4;

     label14:
        i0 = -1;

     label15:
        if i4 <= 0 goto label16;

        $i12 = i4 - 1;
        $c13 = r2[$i12];
        if $c13 > 32 goto label16;

        i4 = i4 + -1;
        goto label15;

     label16:
        if i2 > 0 goto label17;

        r5 = null;
        i2 = 0;
        goto label19;

     label17:
        r5 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>(r2, 0, i2);
        if i2 >= i4 goto label18;

        $c14 = r2[i2];
        if $c14 != 58 goto label18;

        i2 = i2 + 1;

     label18:
        if i2 >= i4 goto label19;

        $c15 = r2[i2];
        if $c15 > 32 goto label19;

        i2 = i2 + 1;
        goto label18;

     label19:
        if i2 < i4 goto label20;

        $r6 = new java.lang.String;
        specialinvoke $r6.<java.lang.String: void <init>()>();
        r4 = $r6;
        goto label21;

     label20:
        $i16 = i4 - i2;
        r4 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>(r2, i2, $i16);

     label21:
        virtualinvoke r0.<sun.net.www.MessageHeader: void add(java.lang.String,java.lang.String)>(r5, r4);
        goto label1;

     label22:
        return;
    }

    public synchronized java.lang.String toString()
    {
        sun.net.www.MessageHeader r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r6, $r8, $r9, $r10, $r13, $r14, $r17, $r18;
        java.lang.String r2, $r3, $r12, $r16;
        int i0, $i1, $i2, $i3;
        java.lang.String[] $r7, $r11, $r15;

        r0 := @this: sun.net.www.MessageHeader;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $i1 = r0.<sun.net.www.MessageHeader: int nkeys>;
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pairs: ");
        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        i0 = 0;

     label0:
        $r7 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $i2 = lengthof $r7;
        if i0 >= $i2 goto label1;

        $i3 = r0.<sun.net.www.MessageHeader: int nkeys>;
        if i0 >= $i3 goto label1;

        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");
        $r11 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        $r12 = $r11[i0];
        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r15 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        $r16 = $r15[i0];
        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");
        r2 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        i0 = i0 + 1;
        goto label0;

     label1:
        return r2;
    }

    static int access$000(sun.net.www.MessageHeader)
    {
        sun.net.www.MessageHeader r0;
        int $i0;

        r0 := @parameter0: sun.net.www.MessageHeader;
        $i0 = r0.<sun.net.www.MessageHeader: int nkeys>;
        return $i0;
    }

    static java.lang.String[] access$100(sun.net.www.MessageHeader)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String[] $r1;

        r0 := @parameter0: sun.net.www.MessageHeader;
        $r1 = r0.<sun.net.www.MessageHeader: java.lang.String[] keys>;
        return $r1;
    }

    static java.lang.String[] access$200(sun.net.www.MessageHeader)
    {
        sun.net.www.MessageHeader r0;
        java.lang.String[] $r1;

        r0 := @parameter0: sun.net.www.MessageHeader;
        $r1 = r0.<sun.net.www.MessageHeader: java.lang.String[] values>;
        return $r1;
    }
}
