public class java.text.RuleBasedCollator extends java.text.Collator
{
    static final int CHARINDEX;
    static final int EXPANDCHARINDEX;
    static final int CONTRACTCHARINDEX;
    static final int UNMAPPED;
    private static final int COLLATIONKEYOFFSET;
    private java.text.RBCollationTables tables;
    private java.lang.StringBuffer primResult;
    private java.lang.StringBuffer secResult;
    private java.lang.StringBuffer terResult;
    private java.text.CollationElementIterator sourceCursor;
    private java.text.CollationElementIterator targetCursor;

    public void <init>(java.lang.String) throws java.text.ParseException
    {
        java.text.RuleBasedCollator r0;
        java.lang.String r1;

        r0 := @this: java.text.RuleBasedCollator;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.text.RuleBasedCollator: void <init>(java.lang.String,int)>(r1, 1);
        return;
    }

    void <init>(java.lang.String, int) throws java.text.ParseException
    {
        java.text.RuleBasedCollator r0;
        java.lang.String r1;
        int i0;
        java.text.RBCollationTables $r2;

        r0 := @this: java.text.RuleBasedCollator;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.text.Collator: void <init>()>();
        r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables> = null;
        r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult> = null;
        r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult> = null;
        r0.<java.text.RuleBasedCollator: java.lang.StringBuffer terResult> = null;
        r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor> = null;
        r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator targetCursor> = null;
        virtualinvoke r0.<java.text.RuleBasedCollator: void setStrength(int)>(2);
        virtualinvoke r0.<java.text.RuleBasedCollator: void setDecomposition(int)>(i0);
        $r2 = new java.text.RBCollationTables;
        specialinvoke $r2.<java.text.RBCollationTables: void <init>(java.lang.String,int)>(r1, i0);
        r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables> = $r2;
        return;
    }

    private void <init>(java.text.RuleBasedCollator)
    {
        java.text.RuleBasedCollator r0, r1;
        int $i0, $i1;
        java.text.RBCollationTables $r2;

        r0 := @this: java.text.RuleBasedCollator;
        r1 := @parameter0: java.text.RuleBasedCollator;
        specialinvoke r0.<java.text.Collator: void <init>()>();
        r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables> = null;
        r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult> = null;
        r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult> = null;
        r0.<java.text.RuleBasedCollator: java.lang.StringBuffer terResult> = null;
        r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor> = null;
        r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator targetCursor> = null;
        $i0 = virtualinvoke r1.<java.text.RuleBasedCollator: int getStrength()>();
        virtualinvoke r0.<java.text.RuleBasedCollator: void setStrength(int)>($i0);
        $i1 = virtualinvoke r1.<java.text.RuleBasedCollator: int getDecomposition()>();
        virtualinvoke r0.<java.text.RuleBasedCollator: void setDecomposition(int)>($i1);
        $r2 = r1.<java.text.RuleBasedCollator: java.text.RBCollationTables tables>;
        r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables> = $r2;
        return;
    }

    public java.lang.String getRules()
    {
        java.text.RuleBasedCollator r0;
        java.text.RBCollationTables $r1;
        java.lang.String $r2;

        r0 := @this: java.text.RuleBasedCollator;
        $r1 = r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables>;
        $r2 = virtualinvoke $r1.<java.text.RBCollationTables: java.lang.String getRules()>();
        return $r2;
    }

    public java.text.CollationElementIterator getCollationElementIterator(java.lang.String)
    {
        java.text.RuleBasedCollator r0;
        java.lang.String r1;
        java.text.CollationElementIterator $r2;

        r0 := @this: java.text.RuleBasedCollator;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.text.CollationElementIterator;
        specialinvoke $r2.<java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>(r1, r0);
        return $r2;
    }

    public java.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator)
    {
        java.text.RuleBasedCollator r0;
        java.text.CharacterIterator r1;
        java.text.CollationElementIterator $r2;

        r0 := @this: java.text.RuleBasedCollator;
        r1 := @parameter0: java.text.CharacterIterator;
        $r2 = new java.text.CollationElementIterator;
        specialinvoke $r2.<java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>(r1, r0);
        return $r2;
    }

    public synchronized int compare(java.lang.String, java.lang.String)
    {
        java.text.RuleBasedCollator r0;
        java.lang.String r1, r2, r16, r17;
        byte b0, $b11, $b12;
        int i1, i2, i3, i4, $i9, $i10, $i13, $i15, $i16, $i18, $i19, i20, $i21, $i22;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7;
        short s5, s6, s7, s8, $s14, $s17;
        java.lang.NullPointerException $r3;
        java.text.CollationElementIterator $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14;
        java.text.RBCollationTables $r12;
        java.text.Normalizer$Form r15;

        r0 := @this: java.text.RuleBasedCollator;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        if r1 == null goto label0;

        if r2 != null goto label1;

     label0:
        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label1:
        b0 = 0;
        $r4 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor>;
        if $r4 != null goto label2;

        $r5 = virtualinvoke r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r1);
        r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor> = $r5;
        goto label3;

     label2:
        $r6 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor>;
        virtualinvoke $r6.<java.text.CollationElementIterator: void setText(java.lang.String)>(r1);

     label3:
        $r7 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator targetCursor>;
        if $r7 != null goto label4;

        $r8 = virtualinvoke r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r2);
        r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator targetCursor> = $r8;
        goto label5;

     label4:
        $r9 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator targetCursor>;
        virtualinvoke $r9.<java.text.CollationElementIterator: void setText(java.lang.String)>(r2);

     label5:
        i1 = 0;
        i2 = 0;
        $i9 = virtualinvoke r0.<java.text.RuleBasedCollator: int getStrength()>();
        if $i9 < 1 goto label6;

        $z5 = 1;
        goto label7;

     label6:
        $z5 = 0;

     label7:
        z0 = $z5;
        z1 = z0;
        $i10 = virtualinvoke r0.<java.text.RuleBasedCollator: int getStrength()>();
        if $i10 < 2 goto label8;

        $z6 = 1;
        goto label9;

     label8:
        $z6 = 0;

     label9:
        z2 = $z6;
        z3 = 1;
        z4 = 1;

     label10:
        if z3 == 0 goto label11;

        $r10 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor>;
        i1 = virtualinvoke $r10.<java.text.CollationElementIterator: int next()>();
        goto label12;

     label11:
        z3 = 1;

     label12:
        if z4 == 0 goto label13;

        $r11 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator targetCursor>;
        i2 = virtualinvoke $r11.<java.text.CollationElementIterator: int next()>();
        goto label14;

     label13:
        z4 = 1;

     label14:
        if i1 == -1 goto label31;

        if i2 != -1 goto label15;

        goto label31;

     label15:
        i3 = staticinvoke <java.text.CollationElementIterator: int primaryOrder(int)>(i1);
        i4 = staticinvoke <java.text.CollationElementIterator: int primaryOrder(int)>(i2);
        if i1 != i2 goto label16;

        $r12 = r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables>;
        $z7 = virtualinvoke $r12.<java.text.RBCollationTables: boolean isFrenchSec()>();
        if $z7 == 0 goto label10;

        if i3 == 0 goto label10;

        if z1 != 0 goto label10;

        z1 = z0;
        z2 = 0;
        goto label10;

     label16:
        if i3 == i4 goto label24;

        if i1 != 0 goto label17;

        z4 = 0;
        goto label10;

     label17:
        if i2 != 0 goto label18;

        z3 = 0;
        goto label10;

     label18:
        if i3 != 0 goto label20;

        if z1 == 0 goto label19;

        b0 = 1;
        z1 = 0;

     label19:
        z4 = 0;
        goto label30;

     label20:
        if i4 != 0 goto label22;

        if z1 == 0 goto label21;

        b0 = -1;
        z1 = 0;

     label21:
        z3 = 0;
        goto label30;

     label22:
        if i3 >= i4 goto label23;

        return -1;

     label23:
        return 1;

     label24:
        if z1 == 0 goto label30;

        s5 = staticinvoke <java.text.CollationElementIterator: short secondaryOrder(int)>(i1);
        s6 = staticinvoke <java.text.CollationElementIterator: short secondaryOrder(int)>(i2);
        if s5 == s6 goto label27;

        if s5 >= s6 goto label25;

        $b11 = -1;
        goto label26;

     label25:
        $b11 = 1;

     label26:
        b0 = $b11;
        z1 = 0;
        goto label30;

     label27:
        if z2 == 0 goto label30;

        s7 = staticinvoke <java.text.CollationElementIterator: short tertiaryOrder(int)>(i1);
        s8 = staticinvoke <java.text.CollationElementIterator: short tertiaryOrder(int)>(i2);
        if s7 == s8 goto label30;

        if s7 >= s8 goto label28;

        $b12 = -1;
        goto label29;

     label28:
        $b12 = 1;

     label29:
        b0 = $b12;
        z2 = 0;

     label30:
        goto label10;

     label31:
        if i1 == -1 goto label35;

     label32:
        $i13 = staticinvoke <java.text.CollationElementIterator: int primaryOrder(int)>(i1);
        if $i13 == 0 goto label33;

        return 1;

     label33:
        $s14 = staticinvoke <java.text.CollationElementIterator: short secondaryOrder(int)>(i1);
        if $s14 == 0 goto label34;

        if z1 == 0 goto label34;

        b0 = 1;
        z1 = 0;

     label34:
        $r13 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor>;
        $i15 = virtualinvoke $r13.<java.text.CollationElementIterator: int next()>();
        i1 = $i15;
        if $i15 != -1 goto label32;

        goto label39;

     label35:
        if i2 == -1 goto label39;

     label36:
        $i16 = staticinvoke <java.text.CollationElementIterator: int primaryOrder(int)>(i2);
        if $i16 == 0 goto label37;

        return -1;

     label37:
        $s17 = staticinvoke <java.text.CollationElementIterator: short secondaryOrder(int)>(i2);
        if $s17 == 0 goto label38;

        if z1 == 0 goto label38;

        b0 = -1;
        z1 = 0;

     label38:
        $r14 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator targetCursor>;
        $i18 = virtualinvoke $r14.<java.text.CollationElementIterator: int next()>();
        i2 = $i18;
        if $i18 != -1 goto label36;

     label39:
        if b0 != 0 goto label43;

        $i19 = virtualinvoke r0.<java.text.RuleBasedCollator: int getStrength()>();
        if $i19 != 3 goto label43;

        i20 = virtualinvoke r0.<java.text.RuleBasedCollator: int getDecomposition()>();
        if i20 != 1 goto label40;

        r15 = <java.text.Normalizer$Form: java.text.Normalizer$Form NFD>;
        goto label42;

     label40:
        if i20 != 2 goto label41;

        r15 = <java.text.Normalizer$Form: java.text.Normalizer$Form NFKD>;
        goto label42;

     label41:
        $i21 = virtualinvoke r1.<java.lang.String: int compareTo(java.lang.String)>(r2);
        return $i21;

     label42:
        r16 = staticinvoke <java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>(r1, r15);
        r17 = staticinvoke <java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>(r2, r15);
        $i22 = virtualinvoke r16.<java.lang.String: int compareTo(java.lang.String)>(r17);
        return $i22;

     label43:
        return b0;
    }

    public synchronized java.text.CollationKey getCollationKey(java.lang.String)
    {
        java.text.RuleBasedCollator r0;
        java.lang.String r1, $r42, $r46, $r52, $r56, $r62;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r13, $r16, $r17, $r18, $r19, $r21, $r22, $r24, $r27, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r40, $r41, $r44, $r45, $r48, $r50, $r54, $r58, $r61;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        byte b0, b1;
        int i2, i3, $i4, $i5, $i6, i7, $i10, $i11, $i13, $i14, $i15, $i17, $i20, $i21, $i24, $i25, $i27, $i28, $i29, $i30;
        java.text.CollationElementIterator $r9, $r10, $r11, $r12;
        short s8, s9, $s19, $s23;
        char $c12, $c16, $c18, $c22, $c26;
        java.text.RBCollationTables $r15, $r25, $r28, $r30;
        java.text.Normalizer$Form $r51, $r55;
        java.text.RuleBasedCollationKey $r60;

        r0 := @this: java.text.RuleBasedCollator;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        return null;

     label0:
        $r3 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult>;
        if $r3 != null goto label1;

        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult> = $r2;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult> = $r4;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        r0.<java.text.RuleBasedCollator: java.lang.StringBuffer terResult> = $r5;
        goto label2;

     label1:
        $r6 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult>;
        virtualinvoke $r6.<java.lang.StringBuffer: void setLength(int)>(0);
        $r7 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        virtualinvoke $r7.<java.lang.StringBuffer: void setLength(int)>(0);
        $r8 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer terResult>;
        virtualinvoke $r8.<java.lang.StringBuffer: void setLength(int)>(0);

     label2:
        z0 = 0;
        $i4 = virtualinvoke r0.<java.text.RuleBasedCollator: int getStrength()>();
        if $i4 < 1 goto label3;

        $z3 = 1;
        goto label4;

     label3:
        $z3 = 0;

     label4:
        z1 = $z3;
        $i5 = virtualinvoke r0.<java.text.RuleBasedCollator: int getStrength()>();
        if $i5 < 2 goto label5;

        $z4 = 1;
        goto label6;

     label5:
        $z4 = 0;

     label6:
        z2 = $z4;
        b0 = -1;
        b1 = -1;
        i2 = 0;
        $r9 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor>;
        if $r9 != null goto label7;

        $r10 = virtualinvoke r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>(r1);
        r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor> = $r10;
        goto label8;

     label7:
        $r11 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor>;
        virtualinvoke $r11.<java.text.CollationElementIterator: void setText(java.lang.String)>(r1);

     label8:
        $r12 = r0.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor>;
        $i6 = virtualinvoke $r12.<java.text.CollationElementIterator: int next()>();
        i7 = $i6;
        if $i6 == -1 goto label13;

        s8 = staticinvoke <java.text.CollationElementIterator: short secondaryOrder(int)>(i7);
        s9 = staticinvoke <java.text.CollationElementIterator: short tertiaryOrder(int)>(i7);
        $z5 = staticinvoke <java.text.CollationElementIterator: boolean isIgnorable(int)>(i7);
        if $z5 != 0 goto label11;

        $r13 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult>;
        $i10 = staticinvoke <java.text.CollationElementIterator: int primaryOrder(int)>(i7);
        $i11 = $i10 + 1;
        $c12 = (char) $i11;
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c12);
        if z1 == 0 goto label10;

        $r15 = r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables>;
        $z6 = virtualinvoke $r15.<java.text.RBCollationTables: boolean isFrenchSec()>();
        if $z6 == 0 goto label9;

        $r16 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $i13 = virtualinvoke $r16.<java.lang.StringBuffer: int length()>();
        if i2 >= $i13 goto label9;

        $r17 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $r18 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $i14 = virtualinvoke $r18.<java.lang.StringBuffer: int length()>();
        staticinvoke <java.text.RBCollationTables: void reverse(java.lang.StringBuffer,int,int)>($r17, i2, $i14);

     label9:
        $r19 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $i15 = s8 + 1;
        $c16 = (char) $i15;
        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c16);
        $r21 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        i2 = virtualinvoke $r21.<java.lang.StringBuffer: int length()>();

     label10:
        if z2 == 0 goto label8;

        $r22 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer terResult>;
        $i17 = s9 + 1;
        $c18 = (char) $i17;
        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c18);
        goto label8;

     label11:
        if z1 == 0 goto label12;

        if s8 == 0 goto label12;

        $r24 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $r25 = r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables>;
        $s19 = virtualinvoke $r25.<java.text.RBCollationTables: short getMaxSecOrder()>();
        $i20 = s8 + $s19;
        $i21 = $i20 + 1;
        $c22 = (char) $i21;
        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c22);

     label12:
        if z2 == 0 goto label8;

        if s9 == 0 goto label8;

        $r27 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer terResult>;
        $r28 = r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables>;
        $s23 = virtualinvoke $r28.<java.text.RBCollationTables: short getMaxTerOrder()>();
        $i24 = s9 + $s23;
        $i25 = $i24 + 1;
        $c26 = (char) $i25;
        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c26);
        goto label8;

     label13:
        $r30 = r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables>;
        $z7 = virtualinvoke $r30.<java.text.RBCollationTables: boolean isFrenchSec()>();
        if $z7 == 0 goto label15;

        $r31 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $i27 = virtualinvoke $r31.<java.lang.StringBuffer: int length()>();
        if i2 >= $i27 goto label14;

        $r32 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $r33 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $i28 = virtualinvoke $r33.<java.lang.StringBuffer: int length()>();
        staticinvoke <java.text.RBCollationTables: void reverse(java.lang.StringBuffer,int,int)>($r32, i2, $i28);

     label14:
        $r34 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $r35 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $i29 = virtualinvoke $r35.<java.lang.StringBuffer: int length()>();
        staticinvoke <java.text.RBCollationTables: void reverse(java.lang.StringBuffer,int,int)>($r34, 0, $i29);

     label15:
        $r36 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult>;
        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(0);
        $r38 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(0);
        $r40 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $r41 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer terResult>;
        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);
        $r44 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult>;
        $r45 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult>;
        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);
        $i30 = virtualinvoke r0.<java.text.RuleBasedCollator: int getStrength()>();
        if $i30 != 3 goto label18;

        $r48 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult>;
        virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(0);
        i3 = virtualinvoke r0.<java.text.RuleBasedCollator: int getDecomposition()>();
        if i3 != 1 goto label16;

        $r50 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult>;
        $r51 = <java.text.Normalizer$Form: java.text.Normalizer$Form NFD>;
        $r52 = staticinvoke <java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>(r1, $r51);
        virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);
        goto label18;

     label16:
        if i3 != 2 goto label17;

        $r54 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult>;
        $r55 = <java.text.Normalizer$Form: java.text.Normalizer$Form NFKD>;
        $r56 = staticinvoke <java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>(r1, $r55);
        virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);
        goto label18;

     label17:
        $r58 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult>;
        virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label18:
        $r60 = new java.text.RuleBasedCollationKey;
        $r61 = r0.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult>;
        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r60.<java.text.RuleBasedCollationKey: void <init>(java.lang.String,java.lang.String)>(r1, $r62);
        return $r60;
    }

    public java.lang.Object clone()
    {
        java.text.RuleBasedCollator r0, r1, $r3;
        java.lang.Class $r2;
        java.lang.Object $r4;

        r0 := @this: java.text.RuleBasedCollator;
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r2 != class "java/text/RuleBasedCollator" goto label0;

        $r3 = new java.text.RuleBasedCollator;
        specialinvoke $r3.<java.text.RuleBasedCollator: void <init>(java.text.RuleBasedCollator)>(r0);
        return $r3;

     label0:
        $r4 = specialinvoke r0.<java.text.Collator: java.lang.Object clone()>();
        r1 = (java.text.RuleBasedCollator) $r4;
        r1.<java.text.RuleBasedCollator: java.lang.StringBuffer primResult> = null;
        r1.<java.text.RuleBasedCollator: java.lang.StringBuffer secResult> = null;
        r1.<java.text.RuleBasedCollator: java.lang.StringBuffer terResult> = null;
        r1.<java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor> = null;
        r1.<java.text.RuleBasedCollator: java.text.CollationElementIterator targetCursor> = null;
        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.text.RuleBasedCollator r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;

        r0 := @this: java.text.RuleBasedCollator;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        return 0;

     label0:
        $z0 = specialinvoke r0.<java.text.Collator: boolean equals(java.lang.Object)>(r1);
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.text.RuleBasedCollator) r1;
        $r3 = virtualinvoke r0.<java.text.RuleBasedCollator: java.lang.String getRules()>();
        $r4 = virtualinvoke r2.<java.text.RuleBasedCollator: java.lang.String getRules()>();
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        return $z1;
    }

    public int hashCode()
    {
        java.text.RuleBasedCollator r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: java.text.RuleBasedCollator;
        $r1 = virtualinvoke r0.<java.text.RuleBasedCollator: java.lang.String getRules()>();
        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        return $i0;
    }

    java.text.RBCollationTables getTables()
    {
        java.text.RuleBasedCollator r0;
        java.text.RBCollationTables $r1;

        r0 := @this: java.text.RuleBasedCollator;
        $r1 = r0.<java.text.RuleBasedCollator: java.text.RBCollationTables tables>;
        return $r1;
    }
}
