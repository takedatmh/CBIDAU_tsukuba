class java.math.BigDecimal$StringBuilderHelper extends java.lang.Object
{
    final java.lang.StringBuilder sb;
    final char[] cmpCharArray;
    static final char[] DIGIT_TENS;
    static final char[] DIGIT_ONES;
    static final boolean $assertionsDisabled;

    void <init>()
    {
        java.math.BigDecimal$StringBuilderHelper r0;
        java.lang.StringBuilder $r1;
        char[] $r2;

        r0 := @this: java.math.BigDecimal$StringBuilderHelper;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r0.<java.math.BigDecimal$StringBuilderHelper: java.lang.StringBuilder sb> = $r1;
        $r2 = newarray (char)[19];
        r0.<java.math.BigDecimal$StringBuilderHelper: char[] cmpCharArray> = $r2;
        return;
    }

    java.lang.StringBuilder getStringBuilder()
    {
        java.math.BigDecimal$StringBuilderHelper r0;
        java.lang.StringBuilder $r1, $r2;

        r0 := @this: java.math.BigDecimal$StringBuilderHelper;
        $r1 = r0.<java.math.BigDecimal$StringBuilderHelper: java.lang.StringBuilder sb>;
        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);
        $r2 = r0.<java.math.BigDecimal$StringBuilderHelper: java.lang.StringBuilder sb>;
        return $r2;
    }

    char[] getCompactCharArray()
    {
        java.math.BigDecimal$StringBuilderHelper r0;
        char[] $r1;

        r0 := @this: java.math.BigDecimal$StringBuilderHelper;
        $r1 = r0.<java.math.BigDecimal$StringBuilderHelper: char[] cmpCharArray>;
        return $r1;
    }

    int putIntCompact(long)
    {
        java.math.BigDecimal$StringBuilderHelper r0;
        long l0, l2, $l8, $l9;
        boolean $z0;
        int i1, i3, i4, i5, i10, $i13, i14, i15, i18;
        byte $b6, $b7;
        java.lang.AssertionError $r1;
        char[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        char $c11, $c12, $c16, $c17, $c19, $c20;

        r0 := @this: java.math.BigDecimal$StringBuilderHelper;
        l0 := @parameter0: long;
        $z0 = <java.math.BigDecimal$StringBuilderHelper: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $b6 = l0 cmp 0L;
        if $b6 >= 0 goto label0;

        $r1 = new java.lang.AssertionError;
        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();
        throw $r1;

     label0:
        $r2 = r0.<java.math.BigDecimal$StringBuilderHelper: char[] cmpCharArray>;
        i1 = lengthof $r2;

     label1:
        $b7 = l0 cmp 2147483647L;
        if $b7 <= 0 goto label2;

        l2 = l0 / 100L;
        $l8 = l2 * 100L;
        $l9 = l0 - $l8;
        i3 = (int) $l9;
        l0 = l2;
        $r3 = r0.<java.math.BigDecimal$StringBuilderHelper: char[] cmpCharArray>;
        i10 = i1 + -1;
        $r4 = <java.math.BigDecimal$StringBuilderHelper: char[] DIGIT_ONES>;
        $c11 = $r4[i3];
        $r3[i10] = $c11;
        $r5 = r0.<java.math.BigDecimal$StringBuilderHelper: char[] cmpCharArray>;
        i1 = i10 + -1;
        $r6 = <java.math.BigDecimal$StringBuilderHelper: char[] DIGIT_TENS>;
        $c12 = $r6[i3];
        $r5[i1] = $c12;
        goto label1;

     label2:
        i4 = (int) l0;

     label3:
        if i4 < 100 goto label4;

        i5 = i4 / 100;
        $i13 = i5 * 100;
        i14 = i4 - $i13;
        i4 = i5;
        $r7 = r0.<java.math.BigDecimal$StringBuilderHelper: char[] cmpCharArray>;
        i15 = i1 + -1;
        $r8 = <java.math.BigDecimal$StringBuilderHelper: char[] DIGIT_ONES>;
        $c16 = $r8[i14];
        $r7[i15] = $c16;
        $r9 = r0.<java.math.BigDecimal$StringBuilderHelper: char[] cmpCharArray>;
        i1 = i15 + -1;
        $r10 = <java.math.BigDecimal$StringBuilderHelper: char[] DIGIT_TENS>;
        $c17 = $r10[i14];
        $r9[i1] = $c17;
        goto label3;

     label4:
        $r11 = r0.<java.math.BigDecimal$StringBuilderHelper: char[] cmpCharArray>;
        i18 = i1 + -1;
        $r12 = <java.math.BigDecimal$StringBuilderHelper: char[] DIGIT_ONES>;
        $c19 = $r12[i4];
        $r11[i18] = $c19;
        if i4 < 10 goto label5;

        $r13 = r0.<java.math.BigDecimal$StringBuilderHelper: char[] cmpCharArray>;
        i18 = i18 + -1;
        $r14 = <java.math.BigDecimal$StringBuilderHelper: char[] DIGIT_TENS>;
        $c20 = $r14[i4];
        $r13[i18] = $c20;

     label5:
        return i18;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        char[] $r1, $r2;

        $r0 = class "java/math/BigDecimal";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.math.BigDecimal$StringBuilderHelper: boolean $assertionsDisabled> = $z1;
        $r1 = newarray (char)[100];
        $r1[0] = 48;
        $r1[1] = 48;
        $r1[2] = 48;
        $r1[3] = 48;
        $r1[4] = 48;
        $r1[5] = 48;
        $r1[6] = 48;
        $r1[7] = 48;
        $r1[8] = 48;
        $r1[9] = 48;
        $r1[10] = 49;
        $r1[11] = 49;
        $r1[12] = 49;
        $r1[13] = 49;
        $r1[14] = 49;
        $r1[15] = 49;
        $r1[16] = 49;
        $r1[17] = 49;
        $r1[18] = 49;
        $r1[19] = 49;
        $r1[20] = 50;
        $r1[21] = 50;
        $r1[22] = 50;
        $r1[23] = 50;
        $r1[24] = 50;
        $r1[25] = 50;
        $r1[26] = 50;
        $r1[27] = 50;
        $r1[28] = 50;
        $r1[29] = 50;
        $r1[30] = 51;
        $r1[31] = 51;
        $r1[32] = 51;
        $r1[33] = 51;
        $r1[34] = 51;
        $r1[35] = 51;
        $r1[36] = 51;
        $r1[37] = 51;
        $r1[38] = 51;
        $r1[39] = 51;
        $r1[40] = 52;
        $r1[41] = 52;
        $r1[42] = 52;
        $r1[43] = 52;
        $r1[44] = 52;
        $r1[45] = 52;
        $r1[46] = 52;
        $r1[47] = 52;
        $r1[48] = 52;
        $r1[49] = 52;
        $r1[50] = 53;
        $r1[51] = 53;
        $r1[52] = 53;
        $r1[53] = 53;
        $r1[54] = 53;
        $r1[55] = 53;
        $r1[56] = 53;
        $r1[57] = 53;
        $r1[58] = 53;
        $r1[59] = 53;
        $r1[60] = 54;
        $r1[61] = 54;
        $r1[62] = 54;
        $r1[63] = 54;
        $r1[64] = 54;
        $r1[65] = 54;
        $r1[66] = 54;
        $r1[67] = 54;
        $r1[68] = 54;
        $r1[69] = 54;
        $r1[70] = 55;
        $r1[71] = 55;
        $r1[72] = 55;
        $r1[73] = 55;
        $r1[74] = 55;
        $r1[75] = 55;
        $r1[76] = 55;
        $r1[77] = 55;
        $r1[78] = 55;
        $r1[79] = 55;
        $r1[80] = 56;
        $r1[81] = 56;
        $r1[82] = 56;
        $r1[83] = 56;
        $r1[84] = 56;
        $r1[85] = 56;
        $r1[86] = 56;
        $r1[87] = 56;
        $r1[88] = 56;
        $r1[89] = 56;
        $r1[90] = 57;
        $r1[91] = 57;
        $r1[92] = 57;
        $r1[93] = 57;
        $r1[94] = 57;
        $r1[95] = 57;
        $r1[96] = 57;
        $r1[97] = 57;
        $r1[98] = 57;
        $r1[99] = 57;
        <java.math.BigDecimal$StringBuilderHelper: char[] DIGIT_TENS> = $r1;
        $r2 = newarray (char)[100];
        $r2[0] = 48;
        $r2[1] = 49;
        $r2[2] = 50;
        $r2[3] = 51;
        $r2[4] = 52;
        $r2[5] = 53;
        $r2[6] = 54;
        $r2[7] = 55;
        $r2[8] = 56;
        $r2[9] = 57;
        $r2[10] = 48;
        $r2[11] = 49;
        $r2[12] = 50;
        $r2[13] = 51;
        $r2[14] = 52;
        $r2[15] = 53;
        $r2[16] = 54;
        $r2[17] = 55;
        $r2[18] = 56;
        $r2[19] = 57;
        $r2[20] = 48;
        $r2[21] = 49;
        $r2[22] = 50;
        $r2[23] = 51;
        $r2[24] = 52;
        $r2[25] = 53;
        $r2[26] = 54;
        $r2[27] = 55;
        $r2[28] = 56;
        $r2[29] = 57;
        $r2[30] = 48;
        $r2[31] = 49;
        $r2[32] = 50;
        $r2[33] = 51;
        $r2[34] = 52;
        $r2[35] = 53;
        $r2[36] = 54;
        $r2[37] = 55;
        $r2[38] = 56;
        $r2[39] = 57;
        $r2[40] = 48;
        $r2[41] = 49;
        $r2[42] = 50;
        $r2[43] = 51;
        $r2[44] = 52;
        $r2[45] = 53;
        $r2[46] = 54;
        $r2[47] = 55;
        $r2[48] = 56;
        $r2[49] = 57;
        $r2[50] = 48;
        $r2[51] = 49;
        $r2[52] = 50;
        $r2[53] = 51;
        $r2[54] = 52;
        $r2[55] = 53;
        $r2[56] = 54;
        $r2[57] = 55;
        $r2[58] = 56;
        $r2[59] = 57;
        $r2[60] = 48;
        $r2[61] = 49;
        $r2[62] = 50;
        $r2[63] = 51;
        $r2[64] = 52;
        $r2[65] = 53;
        $r2[66] = 54;
        $r2[67] = 55;
        $r2[68] = 56;
        $r2[69] = 57;
        $r2[70] = 48;
        $r2[71] = 49;
        $r2[72] = 50;
        $r2[73] = 51;
        $r2[74] = 52;
        $r2[75] = 53;
        $r2[76] = 54;
        $r2[77] = 55;
        $r2[78] = 56;
        $r2[79] = 57;
        $r2[80] = 48;
        $r2[81] = 49;
        $r2[82] = 50;
        $r2[83] = 51;
        $r2[84] = 52;
        $r2[85] = 53;
        $r2[86] = 54;
        $r2[87] = 55;
        $r2[88] = 56;
        $r2[89] = 57;
        $r2[90] = 48;
        $r2[91] = 49;
        $r2[92] = 50;
        $r2[93] = 51;
        $r2[94] = 52;
        $r2[95] = 53;
        $r2[96] = 54;
        $r2[97] = 55;
        $r2[98] = 56;
        $r2[99] = 57;
        <java.math.BigDecimal$StringBuilderHelper: char[] DIGIT_ONES> = $r2;
        return;
    }
}
