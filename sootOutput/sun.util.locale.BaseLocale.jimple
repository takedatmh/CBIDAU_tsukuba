public final class sun.util.locale.BaseLocale extends java.lang.Object
{
    public static final java.lang.String SEP;
    private static final sun.util.locale.BaseLocale$Cache CACHE;
    private final java.lang.String language;
    private final java.lang.String script;
    private final java.lang.String region;
    private final java.lang.String variant;
    private volatile int hash;

    private void <init>(java.lang.String, java.lang.String)
    {
        sun.util.locale.BaseLocale r0;
        java.lang.String r1, r2;

        r0 := @this: sun.util.locale.BaseLocale;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.util.locale.BaseLocale: int hash> = 0;
        r0.<sun.util.locale.BaseLocale: java.lang.String language> = r1;
        r0.<sun.util.locale.BaseLocale: java.lang.String script> = "";
        r0.<sun.util.locale.BaseLocale: java.lang.String region> = r2;
        r0.<sun.util.locale.BaseLocale: java.lang.String variant> = "";
        return;
    }

    private void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        sun.util.locale.BaseLocale r0;
        java.lang.String r1, r2, r3, r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15;

        r0 := @this: sun.util.locale.BaseLocale;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.util.locale.BaseLocale: int hash> = 0;
        if r1 == null goto label0;

        $r6 = staticinvoke <sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();
        goto label1;

     label0:
        $r7 = "";

     label1:
        r0.<sun.util.locale.BaseLocale: java.lang.String language> = $r7;
        if r2 == null goto label2;

        $r9 = staticinvoke <sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)>(r2);
        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String intern()>();
        goto label3;

     label2:
        $r10 = "";

     label3:
        r0.<sun.util.locale.BaseLocale: java.lang.String script> = $r10;
        if r3 == null goto label4;

        $r12 = staticinvoke <sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)>(r3);
        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String intern()>();
        goto label5;

     label4:
        $r13 = "";

     label5:
        r0.<sun.util.locale.BaseLocale: java.lang.String region> = $r13;
        if r4 == null goto label6;

        $r15 = virtualinvoke r4.<java.lang.String: java.lang.String intern()>();
        goto label7;

     label6:
        $r15 = "";

     label7:
        r0.<sun.util.locale.BaseLocale: java.lang.String variant> = $r15;
        return;
    }

    public static sun.util.locale.BaseLocale createInstance(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        sun.util.locale.BaseLocale $r2, r3;
        sun.util.locale.BaseLocale$Cache $r4;
        sun.util.locale.BaseLocale$Key $r5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = new sun.util.locale.BaseLocale;
        specialinvoke $r2.<sun.util.locale.BaseLocale: void <init>(java.lang.String,java.lang.String)>(r0, r1);
        r3 = $r2;
        $r4 = <sun.util.locale.BaseLocale: sun.util.locale.BaseLocale$Cache CACHE>;
        $r5 = new sun.util.locale.BaseLocale$Key;
        specialinvoke $r5.<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,sun.util.locale.BaseLocale$1)>(r0, r1, null);
        virtualinvoke $r4.<sun.util.locale.BaseLocale$Cache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r3);
        return r3;
    }

    public static sun.util.locale.BaseLocale getInstance(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3;
        sun.util.locale.BaseLocale$Key r4, $r6;
        sun.util.locale.BaseLocale r5;
        boolean $z0, $z1, $z2;
        sun.util.locale.BaseLocale$Cache $r7;
        java.lang.Object $r8;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: java.lang.String;
        if r0 == null goto label2;

        $z0 = staticinvoke <sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>(r0, "he");
        if $z0 == 0 goto label0;

        r0 = "iw";
        goto label2;

     label0:
        $z1 = staticinvoke <sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>(r0, "yi");
        if $z1 == 0 goto label1;

        r0 = "ji";
        goto label2;

     label1:
        $z2 = staticinvoke <sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>(r0, "id");
        if $z2 == 0 goto label2;

        r0 = "in";

     label2:
        $r6 = new sun.util.locale.BaseLocale$Key;
        specialinvoke $r6.<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2, r3);
        r4 = $r6;
        $r7 = <sun.util.locale.BaseLocale: sun.util.locale.BaseLocale$Cache CACHE>;
        $r8 = virtualinvoke $r7.<sun.util.locale.BaseLocale$Cache: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (sun.util.locale.BaseLocale) $r8;
        return r5;
    }

    public java.lang.String getLanguage()
    {
        sun.util.locale.BaseLocale r0;
        java.lang.String $r1;

        r0 := @this: sun.util.locale.BaseLocale;
        $r1 = r0.<sun.util.locale.BaseLocale: java.lang.String language>;
        return $r1;
    }

    public java.lang.String getScript()
    {
        sun.util.locale.BaseLocale r0;
        java.lang.String $r1;

        r0 := @this: sun.util.locale.BaseLocale;
        $r1 = r0.<sun.util.locale.BaseLocale: java.lang.String script>;
        return $r1;
    }

    public java.lang.String getRegion()
    {
        sun.util.locale.BaseLocale r0;
        java.lang.String $r1;

        r0 := @this: sun.util.locale.BaseLocale;
        $r1 = r0.<sun.util.locale.BaseLocale: java.lang.String region>;
        return $r1;
    }

    public java.lang.String getVariant()
    {
        sun.util.locale.BaseLocale r0;
        java.lang.String $r1;

        r0 := @this: sun.util.locale.BaseLocale;
        $r1 = r0.<sun.util.locale.BaseLocale: java.lang.String variant>;
        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        sun.util.locale.BaseLocale r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: sun.util.locale.BaseLocale;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.util.locale.BaseLocale;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (sun.util.locale.BaseLocale) r1;
        $r3 = r0.<sun.util.locale.BaseLocale: java.lang.String language>;
        $r4 = r2.<sun.util.locale.BaseLocale: java.lang.String language>;
        if $r3 != $r4 goto label2;

        $r5 = r0.<sun.util.locale.BaseLocale: java.lang.String script>;
        $r6 = r2.<sun.util.locale.BaseLocale: java.lang.String script>;
        if $r5 != $r6 goto label2;

        $r7 = r0.<sun.util.locale.BaseLocale: java.lang.String region>;
        $r8 = r2.<sun.util.locale.BaseLocale: java.lang.String region>;
        if $r7 != $r8 goto label2;

        $r9 = r0.<sun.util.locale.BaseLocale: java.lang.String variant>;
        $r10 = r2.<sun.util.locale.BaseLocale: java.lang.String variant>;
        if $r9 != $r10 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.String toString()
    {
        sun.util.locale.BaseLocale r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r3, $r5, $r7, $r10, $r12, $r15, $r17, $r20, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: sun.util.locale.BaseLocale;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r3 = r0.<sun.util.locale.BaseLocale: java.lang.String language>;
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("language=");
        $r5 = r0.<sun.util.locale.BaseLocale: java.lang.String language>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label0:
        $r7 = r0.<sun.util.locale.BaseLocale: java.lang.String script>;
        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();
        if $i1 <= 0 goto label2;

        $i2 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();
        if $i2 <= 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("script=");
        $r10 = r0.<sun.util.locale.BaseLocale: java.lang.String script>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label2:
        $r12 = r0.<sun.util.locale.BaseLocale: java.lang.String region>;
        $i3 = virtualinvoke $r12.<java.lang.String: int length()>();
        if $i3 <= 0 goto label4;

        $i4 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();
        if $i4 <= 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("region=");
        $r15 = r0.<sun.util.locale.BaseLocale: java.lang.String region>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label4:
        $r17 = r0.<sun.util.locale.BaseLocale: java.lang.String variant>;
        $i5 = virtualinvoke $r17.<java.lang.String: int length()>();
        if $i5 <= 0 goto label6;

        $i6 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();
        if $i6 <= 0 goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("variant=");
        $r20 = r0.<sun.util.locale.BaseLocale: java.lang.String variant>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

     label6:
        $r22 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r22;
    }

    public int hashCode()
    {
        sun.util.locale.BaseLocale r0;
        int i0, i1, $i2, $i3, i4, $i5, $i6, i7, $i8, $i9;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: sun.util.locale.BaseLocale;
        i0 = r0.<sun.util.locale.BaseLocale: int hash>;
        if i0 != 0 goto label0;

        $r1 = r0.<sun.util.locale.BaseLocale: java.lang.String language>;
        i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        $i2 = 31 * i1;
        $r2 = r0.<sun.util.locale.BaseLocale: java.lang.String script>;
        $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>();
        i4 = $i2 + $i3;
        $i5 = 31 * i4;
        $r3 = r0.<sun.util.locale.BaseLocale: java.lang.String region>;
        $i6 = virtualinvoke $r3.<java.lang.String: int hashCode()>();
        i7 = $i5 + $i6;
        $i8 = 31 * i7;
        $r4 = r0.<sun.util.locale.BaseLocale: java.lang.String variant>;
        $i9 = virtualinvoke $r4.<java.lang.String: int hashCode()>();
        i0 = $i8 + $i9;
        r0.<sun.util.locale.BaseLocale: int hash> = i0;

     label0:
        return i0;
    }

    void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, sun.util.locale.BaseLocale$1)
    {
        sun.util.locale.BaseLocale r0;
        java.lang.String r1, r2, r3, r4;
        sun.util.locale.BaseLocale$1 r5;

        r0 := @this: sun.util.locale.BaseLocale;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: sun.util.locale.BaseLocale$1;
        specialinvoke r0.<sun.util.locale.BaseLocale: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);
        return;
    }

    static void <clinit>()
    {
        sun.util.locale.BaseLocale$Cache $r0;

        $r0 = new sun.util.locale.BaseLocale$Cache;
        specialinvoke $r0.<sun.util.locale.BaseLocale$Cache: void <init>()>();
        <sun.util.locale.BaseLocale: sun.util.locale.BaseLocale$Cache CACHE> = $r0;
        return;
    }
}
