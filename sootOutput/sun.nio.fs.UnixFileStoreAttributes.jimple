class sun.nio.fs.UnixFileStoreAttributes extends java.lang.Object
{
    private long f_frsize;
    private long f_blocks;
    private long f_bfree;
    private long f_bavail;

    private void <init>()
    {
        sun.nio.fs.UnixFileStoreAttributes r0;

        r0 := @this: sun.nio.fs.UnixFileStoreAttributes;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static sun.nio.fs.UnixFileStoreAttributes get(sun.nio.fs.UnixPath) throws sun.nio.fs.UnixException
    {
        sun.nio.fs.UnixPath r0;
        sun.nio.fs.UnixFileStoreAttributes $r1, r2;

        r0 := @parameter0: sun.nio.fs.UnixPath;
        $r1 = new sun.nio.fs.UnixFileStoreAttributes;
        specialinvoke $r1.<sun.nio.fs.UnixFileStoreAttributes: void <init>()>();
        r2 = $r1;
        staticinvoke <sun.nio.fs.UnixNativeDispatcher: void statvfs(sun.nio.fs.UnixPath,sun.nio.fs.UnixFileStoreAttributes)>(r0, r2);
        return r2;
    }

    long blockSize()
    {
        sun.nio.fs.UnixFileStoreAttributes r0;
        long $l0;

        r0 := @this: sun.nio.fs.UnixFileStoreAttributes;
        $l0 = r0.<sun.nio.fs.UnixFileStoreAttributes: long f_frsize>;
        return $l0;
    }

    long totalBlocks()
    {
        sun.nio.fs.UnixFileStoreAttributes r0;
        long $l0;

        r0 := @this: sun.nio.fs.UnixFileStoreAttributes;
        $l0 = r0.<sun.nio.fs.UnixFileStoreAttributes: long f_blocks>;
        return $l0;
    }

    long freeBlocks()
    {
        sun.nio.fs.UnixFileStoreAttributes r0;
        long $l0;

        r0 := @this: sun.nio.fs.UnixFileStoreAttributes;
        $l0 = r0.<sun.nio.fs.UnixFileStoreAttributes: long f_bfree>;
        return $l0;
    }

    long availableBlocks()
    {
        sun.nio.fs.UnixFileStoreAttributes r0;
        long $l0;

        r0 := @this: sun.nio.fs.UnixFileStoreAttributes;
        $l0 = r0.<sun.nio.fs.UnixFileStoreAttributes: long f_bavail>;
        return $l0;
    }
}
