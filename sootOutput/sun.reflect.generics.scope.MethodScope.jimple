public class sun.reflect.generics.scope.MethodScope extends sun.reflect.generics.scope.AbstractScope
{

    private void <init>(java.lang.reflect.Method)
    {
        sun.reflect.generics.scope.MethodScope r0;
        java.lang.reflect.Method r1;

        r0 := @this: sun.reflect.generics.scope.MethodScope;
        r1 := @parameter0: java.lang.reflect.Method;
        specialinvoke r0.<sun.reflect.generics.scope.AbstractScope: void <init>(java.lang.reflect.GenericDeclaration)>(r1);
        return;
    }

    private java.lang.Class getEnclosingClass()
    {
        sun.reflect.generics.scope.MethodScope r0;
        java.lang.reflect.GenericDeclaration $r1;
        java.lang.reflect.Method $r2;
        java.lang.Class $r3;

        r0 := @this: sun.reflect.generics.scope.MethodScope;
        $r1 = virtualinvoke r0.<sun.reflect.generics.scope.MethodScope: java.lang.reflect.GenericDeclaration getRecvr()>();
        $r2 = (java.lang.reflect.Method) $r1;
        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
        return $r3;
    }

    protected sun.reflect.generics.scope.Scope computeEnclosingScope()
    {
        sun.reflect.generics.scope.MethodScope r0;
        java.lang.Class $r1;
        sun.reflect.generics.scope.ClassScope $r2;

        r0 := @this: sun.reflect.generics.scope.MethodScope;
        $r1 = specialinvoke r0.<sun.reflect.generics.scope.MethodScope: java.lang.Class getEnclosingClass()>();
        $r2 = staticinvoke <sun.reflect.generics.scope.ClassScope: sun.reflect.generics.scope.ClassScope make(java.lang.Class)>($r1);
        return $r2;
    }

    public static sun.reflect.generics.scope.MethodScope make(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;
        sun.reflect.generics.scope.MethodScope $r1;

        r0 := @parameter0: java.lang.reflect.Method;
        $r1 = new sun.reflect.generics.scope.MethodScope;
        specialinvoke $r1.<sun.reflect.generics.scope.MethodScope: void <init>(java.lang.reflect.Method)>(r0);
        return $r1;
    }
}
