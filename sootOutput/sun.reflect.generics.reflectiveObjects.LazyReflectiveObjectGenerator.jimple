public abstract class sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator extends java.lang.Object
{
    private sun.reflect.generics.factory.GenericsFactory factory;

    protected void <init>(sun.reflect.generics.factory.GenericsFactory)
    {
        sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator r0;
        sun.reflect.generics.factory.GenericsFactory r1;

        r0 := @this: sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator;
        r1 := @parameter0: sun.reflect.generics.factory.GenericsFactory;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator: sun.reflect.generics.factory.GenericsFactory factory> = r1;
        return;
    }

    private sun.reflect.generics.factory.GenericsFactory getFactory()
    {
        sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator r0;
        sun.reflect.generics.factory.GenericsFactory $r1;

        r0 := @this: sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator;
        $r1 = r0.<sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator: sun.reflect.generics.factory.GenericsFactory factory>;
        return $r1;
    }

    protected sun.reflect.generics.visitor.Reifier getReifier()
    {
        sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator r0;
        sun.reflect.generics.factory.GenericsFactory $r1;
        sun.reflect.generics.visitor.Reifier $r2;

        r0 := @this: sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator;
        $r1 = specialinvoke r0.<sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator: sun.reflect.generics.factory.GenericsFactory getFactory()>();
        $r2 = staticinvoke <sun.reflect.generics.visitor.Reifier: sun.reflect.generics.visitor.Reifier make(sun.reflect.generics.factory.GenericsFactory)>($r1);
        return $r2;
    }
}
