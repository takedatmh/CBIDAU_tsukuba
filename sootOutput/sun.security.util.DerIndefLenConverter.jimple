class sun.security.util.DerIndefLenConverter extends java.lang.Object
{
    private static final int TAG_MASK;
    private static final int FORM_MASK;
    private static final int CLASS_MASK;
    private static final int LEN_LONG;
    private static final int LEN_MASK;
    private static final int SKIP_EOC_BYTES;
    private byte[] data;
    private byte[] newData;
    private int newDataPos;
    private int dataPos;
    private int dataSize;
    private int index;
    private int unresolved;
    private java.util.ArrayList ndefsList;
    private int numOfTotalLenBytes;

    private boolean isEOC(int)
    {
        sun.security.util.DerIndefLenConverter r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        i0 := @parameter0: int;
        $i1 = i0 & 31;
        if $i1 != 0 goto label0;

        $i2 = i0 & 32;
        if $i2 != 0 goto label0;

        $i3 = i0 & 192;
        if $i3 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    static boolean isLongForm(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 128;
        if $i1 != 128 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    void <init>()
    {
        sun.security.util.DerIndefLenConverter r0;
        java.util.ArrayList $r1;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.util.DerIndefLenConverter: int unresolved> = 0;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<sun.security.util.DerIndefLenConverter: java.util.ArrayList ndefsList> = $r1;
        r0.<sun.security.util.DerIndefLenConverter: int numOfTotalLenBytes> = 0;
        return;
    }

    static boolean isIndefinite(int)
    {
        int i0, $i1;
        boolean $z0, $z1;

        i0 := @parameter0: int;
        $z0 = staticinvoke <sun.security.util.DerIndefLenConverter: boolean isLongForm(int)>(i0);
        if $z0 == 0 goto label0;

        $i1 = i0 & 127;
        if $i1 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    private void parseTag() throws java.io.IOException
    {
        sun.security.util.DerIndefLenConverter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.Object r1;
        byte[] r2, $r3, $r4, $r7, $r8;
        byte $b6, $b9;
        boolean $z0, $z1;
        java.util.ArrayList $r5, $r6, $r11;
        java.io.IOException $r9;
        java.lang.Integer $r10;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        $i3 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i4 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        if $i3 != $i4 goto label0;

        return;

     label0:
        $r3 = r0.<sun.security.util.DerIndefLenConverter: byte[] data>;
        $i5 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $b6 = $r3[$i5];
        $z0 = specialinvoke r0.<sun.security.util.DerIndefLenConverter: boolean isEOC(int)>($b6);
        if $z0 == 0 goto label5;

        $r4 = r0.<sun.security.util.DerIndefLenConverter: byte[] data>;
        $i7 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i8 = $i7 + 1;
        $b9 = $r4[$i8];
        if $b9 != 0 goto label5;

        i0 = 0;
        r1 = null;
        $r5 = r0.<sun.security.util.DerIndefLenConverter: java.util.ArrayList ndefsList>;
        $i10 = virtualinvoke $r5.<java.util.ArrayList: int size()>();
        i1 = $i10 - 1;

     label1:
        if i1 < 0 goto label3;

        $r6 = r0.<sun.security.util.DerIndefLenConverter: java.util.ArrayList ndefsList>;
        r1 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        $z1 = r1 instanceof java.lang.Integer;
        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $r7 = (byte[]) r1;
        $r8 = (byte[]) $r7;
        $i11 = lengthof $r8;
        $i12 = $i11 - 3;
        i0 = i0 + $i12;
        i1 = i1 + -1;
        goto label1;

     label3:
        if i1 >= 0 goto label4;

        $r9 = new java.io.IOException;
        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("EOC does not have matching indefinite-length tag");
        throw $r9;

     label4:
        $i13 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $r10 = (java.lang.Integer) r1;
        $i14 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();
        $i15 = $i13 - $i14;
        i2 = $i15 + i0;
        r2 = specialinvoke r0.<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)>(i2);
        $r11 = r0.<sun.security.util.DerIndefLenConverter: java.util.ArrayList ndefsList>;
        virtualinvoke $r11.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i1, r2);
        $i16 = r0.<sun.security.util.DerIndefLenConverter: int unresolved>;
        $i17 = $i16 - 1;
        r0.<sun.security.util.DerIndefLenConverter: int unresolved> = $i17;
        $i18 = r0.<sun.security.util.DerIndefLenConverter: int numOfTotalLenBytes>;
        $i19 = lengthof r2;
        $i20 = $i19 - 3;
        $i21 = $i18 + $i20;
        r0.<sun.security.util.DerIndefLenConverter: int numOfTotalLenBytes> = $i21;

     label5:
        $i22 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i23 = $i22 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = $i23;
        return;
    }

    private void writeTag()
    {
        sun.security.util.DerIndefLenConverter r0;
        int $i0, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        byte b1, $b6, $b11;
        byte[] $r1, $r3, $r5;
        boolean $z0;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        $i2 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i3 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        if $i2 != $i3 goto label0;

        return;

     label0:
        $r1 = r0.<sun.security.util.DerIndefLenConverter: byte[] data>;
        $i0 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i4 = $i0 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = $i4;
        b1 = $r1[$i0];
        $z0 = specialinvoke r0.<sun.security.util.DerIndefLenConverter: boolean isEOC(int)>(b1);
        if $z0 == 0 goto label1;

        $r3 = r0.<sun.security.util.DerIndefLenConverter: byte[] data>;
        $i5 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $b6 = $r3[$i5];
        if $b6 != 0 goto label1;

        $i7 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i8 = $i7 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = $i8;
        specialinvoke r0.<sun.security.util.DerIndefLenConverter: void writeTag()>();
        goto label2;

     label1:
        $r5 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i9 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i10 = $i9 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i10;
        $b11 = (byte) b1;
        $r5[$i9] = $b11;

     label2:
        return;
    }

    private int parseLength() throws java.io.IOException
    {
        sun.security.util.DerIndefLenConverter r0;
        int i0, $i1, i3, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        short s2, s11, $s20;
        byte[] $r1, $r8;
        byte $b7, $b19;
        boolean $z0, $z2;
        java.util.ArrayList $r3;
        java.lang.Integer $r4;
        java.io.IOException $r6, $r7, $r10;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        i0 = 0;
        $i4 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i5 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        if $i4 != $i5 goto label0;

        return i0;

     label0:
        $r1 = r0.<sun.security.util.DerIndefLenConverter: byte[] data>;
        $i1 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i6 = $i1 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = $i6;
        $b7 = $r1[$i1];
        s2 = $b7 & 255;
        $z0 = staticinvoke <sun.security.util.DerIndefLenConverter: boolean isIndefinite(int)>(s2);
        if $z0 == 0 goto label1;

        $r3 = r0.<sun.security.util.DerIndefLenConverter: java.util.ArrayList ndefsList>;
        $r4 = new java.lang.Integer;
        $i8 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i8);
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);
        $i9 = r0.<sun.security.util.DerIndefLenConverter: int unresolved>;
        $i10 = $i9 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int unresolved> = $i10;
        return i0;

     label1:
        $z2 = staticinvoke <sun.security.util.DerIndefLenConverter: boolean isLongForm(int)>(s2);
        if $z2 == 0 goto label6;

        s11 = s2 & 127;
        if s11 <= 4 goto label2;

        $r6 = new java.io.IOException;
        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Too much data");
        throw $r6;

     label2:
        $i12 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        $i13 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i14 = $i12 - $i13;
        $i15 = s11 + 1;
        if $i14 >= $i15 goto label3;

        $r7 = new java.io.IOException;
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Too little data");
        throw $r7;

     label3:
        i3 = 0;

     label4:
        if i3 >= s11 goto label5;

        $i16 = i0 << 8;
        $r8 = r0.<sun.security.util.DerIndefLenConverter: byte[] data>;
        $i17 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i18 = $i17 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = $i18;
        $b19 = $r8[$i17];
        $s20 = $b19 & 255;
        i0 = $i16 + $s20;
        i3 = i3 + 1;
        goto label4;

     label5:
        if i0 >= 0 goto label7;

        $r10 = new java.io.IOException;
        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("Invalid length bytes");
        throw $r10;

     label6:
        i0 = s2 & 127;

     label7:
        return i0;
    }

    private void writeLengthAndValue() throws java.io.IOException
    {
        sun.security.util.DerIndefLenConverter r0;
        int i0, $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i15, $i16, $i17, $i18;
        short s2, s14, $s20;
        byte[] r1, $r2, $r7, $r8, $r10;
        byte $b6, $b19;
        boolean $z0, $z1;
        java.util.ArrayList $r4;
        java.lang.Object $r6;
        java.io.IOException $r12;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        $i3 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i4 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        if $i3 != $i4 goto label0;

        return;

     label0:
        i0 = 0;
        $r2 = r0.<sun.security.util.DerIndefLenConverter: byte[] data>;
        $i1 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i5 = $i1 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = $i5;
        $b6 = $r2[$i1];
        s2 = $b6 & 255;
        $z0 = staticinvoke <sun.security.util.DerIndefLenConverter: boolean isIndefinite(int)>(s2);
        if $z0 == 0 goto label1;

        $r4 = r0.<sun.security.util.DerIndefLenConverter: java.util.ArrayList ndefsList>;
        $i7 = r0.<sun.security.util.DerIndefLenConverter: int index>;
        $i8 = $i7 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int index> = $i8;
        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i7);
        $r7 = (byte[]) $r6;
        r1 = (byte[]) $r7;
        $r8 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i9 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i10 = lengthof r1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r8, $i9, $i10);
        $i11 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i12 = lengthof r1;
        $i13 = $i11 + $i12;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i13;
        return;

     label1:
        $z1 = staticinvoke <sun.security.util.DerIndefLenConverter: boolean isLongForm(int)>(s2);
        if $z1 == 0 goto label4;

        s14 = s2 & 127;
        i15 = 0;

     label2:
        if i15 >= s14 goto label3;

        $i16 = i0 << 8;
        $r10 = r0.<sun.security.util.DerIndefLenConverter: byte[] data>;
        $i17 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i18 = $i17 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = $i18;
        $b19 = $r10[$i17];
        $s20 = $b19 & 255;
        i0 = $i16 + $s20;
        i15 = i15 + 1;
        goto label2;

     label3:
        if i0 >= 0 goto label5;

        $r12 = new java.io.IOException;
        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Invalid length bytes");
        throw $r12;

     label4:
        i0 = s2 & 127;

     label5:
        specialinvoke r0.<sun.security.util.DerIndefLenConverter: void writeLength(int)>(i0);
        specialinvoke r0.<sun.security.util.DerIndefLenConverter: void writeValue(int)>(i0);
        return;
    }

    private void writeLength(int)
    {
        sun.security.util.DerIndefLenConverter r0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i39, $i41, $i42, $i43, $i45, $i46;
        byte[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        byte $b3, $b8, $b14, $b17, $b23, $b27, $b30, $b36, $b40, $b44, $b47;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        i0 := @parameter0: int;
        if i0 >= 128 goto label0;

        $r1 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i1 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i2 = $i1 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i2;
        $b3 = (byte) i0;
        $r1[$i1] = $b3;
        goto label4;

     label0:
        if i0 >= 256 goto label1;

        $r3 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i4 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i5 = $i4 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i5;
        $r3[$i4] = -127;
        $r5 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i6 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i7 = $i6 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i7;
        $b8 = (byte) i0;
        $r5[$i6] = $b8;
        goto label4;

     label1:
        if i0 >= 65536 goto label2;

        $r7 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i9 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i10 = $i9 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i10;
        $r7[$i9] = -126;
        $r9 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i11 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i12 = $i11 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i12;
        $i13 = i0 >> 8;
        $b14 = (byte) $i13;
        $r9[$i11] = $b14;
        $r11 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i15 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i16 = $i15 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i16;
        $b17 = (byte) i0;
        $r11[$i15] = $b17;
        goto label4;

     label2:
        if i0 >= 16777216 goto label3;

        $r13 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i18 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i19 = $i18 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i19;
        $r13[$i18] = -125;
        $r15 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i20 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i21 = $i20 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i21;
        $i22 = i0 >> 16;
        $b23 = (byte) $i22;
        $r15[$i20] = $b23;
        $r17 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i24 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i25 = $i24 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i25;
        $i26 = i0 >> 8;
        $b27 = (byte) $i26;
        $r17[$i24] = $b27;
        $r19 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i28 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i29 = $i28 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i29;
        $b30 = (byte) i0;
        $r19[$i28] = $b30;
        goto label4;

     label3:
        $r21 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i31 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i32 = $i31 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i32;
        $r21[$i31] = -124;
        $r23 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i33 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i34 = $i33 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i34;
        $i35 = i0 >> 24;
        $b36 = (byte) $i35;
        $r23[$i33] = $b36;
        $r25 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i37 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i38 = $i37 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i38;
        $i39 = i0 >> 16;
        $b40 = (byte) $i39;
        $r25[$i37] = $b40;
        $r27 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i41 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i42 = $i41 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i42;
        $i43 = i0 >> 8;
        $b44 = (byte) $i43;
        $r27[$i41] = $b44;
        $r29 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i45 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i46 = $i45 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i46;
        $b47 = (byte) i0;
        $r29[$i45] = $b47;

     label4:
        return;
    }

    private byte[] getLengthBytes(int)
    {
        sun.security.util.DerIndefLenConverter r0;
        int i0, i2, i4, i5, i7, i8, $i9, i11, i13, i14, $i15, i17, $i18, i20, i22, i23, $i24, i26, $i27, i29, $i30, i32;
        byte b1, $b3, $b6, $b10, $b12, $b16, $b19, $b21, $b25, $b28, $b31, $b33;
        byte[] r1;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        i0 := @parameter0: int;
        b1 = 0;
        if i0 >= 128 goto label0;

        r1 = newarray (byte)[1];
        i2 = b1 + 1;
        $b3 = (byte) i0;
        r1[b1] = $b3;
        goto label4;

     label0:
        if i0 >= 256 goto label1;

        r1 = newarray (byte)[2];
        i4 = b1 + 1;
        r1[b1] = -127;
        i5 = i4 + 1;
        $b6 = (byte) i0;
        r1[i4] = $b6;
        goto label4;

     label1:
        if i0 >= 65536 goto label2;

        r1 = newarray (byte)[3];
        i7 = b1 + 1;
        r1[b1] = -126;
        i8 = i7 + 1;
        $i9 = i0 >> 8;
        $b10 = (byte) $i9;
        r1[i7] = $b10;
        i11 = i8 + 1;
        $b12 = (byte) i0;
        r1[i8] = $b12;
        goto label4;

     label2:
        if i0 >= 16777216 goto label3;

        r1 = newarray (byte)[4];
        i13 = b1 + 1;
        r1[b1] = -125;
        i14 = i13 + 1;
        $i15 = i0 >> 16;
        $b16 = (byte) $i15;
        r1[i13] = $b16;
        i17 = i14 + 1;
        $i18 = i0 >> 8;
        $b19 = (byte) $i18;
        r1[i14] = $b19;
        i20 = i17 + 1;
        $b21 = (byte) i0;
        r1[i17] = $b21;
        goto label4;

     label3:
        r1 = newarray (byte)[5];
        i22 = b1 + 1;
        r1[b1] = -124;
        i23 = i22 + 1;
        $i24 = i0 >> 24;
        $b25 = (byte) $i24;
        r1[i22] = $b25;
        i26 = i23 + 1;
        $i27 = i0 >> 16;
        $b28 = (byte) $i27;
        r1[i23] = $b28;
        i29 = i26 + 1;
        $i30 = i0 >> 8;
        $b31 = (byte) $i30;
        r1[i26] = $b31;
        i32 = i29 + 1;
        $b33 = (byte) i0;
        r1[i29] = $b33;

     label4:
        return r1;
    }

    private int getNumOfLenBytes(int)
    {
        sun.security.util.DerIndefLenConverter r0;
        int i0;
        boolean z0;
        byte b1;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        i0 := @parameter0: int;
        z0 = 0;
        if i0 >= 128 goto label0;

        b1 = 1;
        goto label4;

     label0:
        if i0 >= 256 goto label1;

        b1 = 2;
        goto label4;

     label1:
        if i0 >= 65536 goto label2;

        b1 = 3;
        goto label4;

     label2:
        if i0 >= 16777216 goto label3;

        b1 = 4;
        goto label4;

     label3:
        b1 = 5;

     label4:
        return b1;
    }

    private void parseValue(int)
    {
        sun.security.util.DerIndefLenConverter r0;
        int i0, $i1, $i2;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        i0 := @parameter0: int;
        $i1 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i2 = $i1 + i0;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = $i2;
        return;
    }

    private void writeValue(int)
    {
        sun.security.util.DerIndefLenConverter r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        byte[] $r1, $r3;
        byte $b6;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        i0 := @parameter0: int;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        $r1 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i2 = r0.<sun.security.util.DerIndefLenConverter: int newDataPos>;
        $i4 = $i2 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = $i4;
        $r3 = r0.<sun.security.util.DerIndefLenConverter: byte[] data>;
        $i3 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i5 = $i3 + 1;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = $i5;
        $b6 = $r3[$i3];
        $r1[$i2] = $b6;
        i1 = i1 + 1;
        goto label0;

     label1:
        return;
    }

    byte[] convert(byte[]) throws java.io.IOException
    {
        sun.security.util.DerIndefLenConverter r0;
        byte[] r1, $r2, $r4, $r5, $r6;
        boolean z0;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.io.IOException $r3;

        r0 := @this: sun.security.util.DerIndefLenConverter;
        r1 := @parameter0: byte[];
        r0.<sun.security.util.DerIndefLenConverter: byte[] data> = r1;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = 0;
        r0.<sun.security.util.DerIndefLenConverter: int index> = 0;
        $r2 = r0.<sun.security.util.DerIndefLenConverter: byte[] data>;
        $i1 = lengthof $r2;
        r0.<sun.security.util.DerIndefLenConverter: int dataSize> = $i1;
        z0 = 0;
        i0 = 0;

     label0:
        $i2 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i3 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        if $i2 >= $i3 goto label1;

        specialinvoke r0.<sun.security.util.DerIndefLenConverter: void parseTag()>();
        i4 = specialinvoke r0.<sun.security.util.DerIndefLenConverter: int parseLength()>();
        specialinvoke r0.<sun.security.util.DerIndefLenConverter: void parseValue(int)>(i4);
        $i5 = r0.<sun.security.util.DerIndefLenConverter: int unresolved>;
        if $i5 != 0 goto label0;

        $i6 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        $i7 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        i0 = $i6 - $i7;
        $i8 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        r0.<sun.security.util.DerIndefLenConverter: int dataSize> = $i8;
        goto label1;

     label1:
        $i9 = r0.<sun.security.util.DerIndefLenConverter: int unresolved>;
        if $i9 == 0 goto label2;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("not all indef len BER resolved");
        throw $r3;

     label2:
        $i10 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        $i11 = r0.<sun.security.util.DerIndefLenConverter: int numOfTotalLenBytes>;
        $i12 = $i10 + $i11;
        $i13 = $i12 + i0;
        $r4 = newarray (byte)[$i13];
        r0.<sun.security.util.DerIndefLenConverter: byte[] newData> = $r4;
        r0.<sun.security.util.DerIndefLenConverter: int dataPos> = 0;
        r0.<sun.security.util.DerIndefLenConverter: int newDataPos> = 0;
        r0.<sun.security.util.DerIndefLenConverter: int index> = 0;

     label3:
        $i14 = r0.<sun.security.util.DerIndefLenConverter: int dataPos>;
        $i15 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        if $i14 >= $i15 goto label4;

        specialinvoke r0.<sun.security.util.DerIndefLenConverter: void writeTag()>();
        specialinvoke r0.<sun.security.util.DerIndefLenConverter: void writeLengthAndValue()>();
        goto label3;

     label4:
        $i16 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        $r5 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        $i17 = r0.<sun.security.util.DerIndefLenConverter: int dataSize>;
        $i18 = r0.<sun.security.util.DerIndefLenConverter: int numOfTotalLenBytes>;
        $i19 = $i17 + $i18;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i16, $r5, $i19, i0);
        $r6 = r0.<sun.security.util.DerIndefLenConverter: byte[] newData>;
        return $r6;
    }
}
