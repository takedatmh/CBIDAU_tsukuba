class javax.security.auth.SubjectDomainCombiner$3 extends java.lang.Object implements java.security.PrivilegedAction
{
    final javax.security.auth.Subject val$finalS;
    final java.security.CodeSource val$finalCs;
    final javax.security.auth.SubjectDomainCombiner this$0;

    void <init>(javax.security.auth.SubjectDomainCombiner, javax.security.auth.Subject, java.security.CodeSource)
    {
        javax.security.auth.SubjectDomainCombiner$3 r0;
        javax.security.auth.SubjectDomainCombiner r1;
        javax.security.auth.Subject r2;
        java.security.CodeSource r3;

        r0 := @this: javax.security.auth.SubjectDomainCombiner$3;
        r1 := @parameter0: javax.security.auth.SubjectDomainCombiner;
        r2 := @parameter1: javax.security.auth.Subject;
        r3 := @parameter2: java.security.CodeSource;
        r0.<javax.security.auth.SubjectDomainCombiner$3: javax.security.auth.SubjectDomainCombiner this$0> = r1;
        r0.<javax.security.auth.SubjectDomainCombiner$3: javax.security.auth.Subject val$finalS> = r2;
        r0.<javax.security.auth.SubjectDomainCombiner$3: java.security.CodeSource val$finalCs> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.security.PermissionCollection run()
    {
        javax.security.auth.SubjectDomainCombiner$3 r0;
        javax.security.auth.Policy $r1;
        javax.security.auth.Subject $r2;
        java.security.CodeSource $r3;
        java.security.PermissionCollection $r4;

        r0 := @this: javax.security.auth.SubjectDomainCombiner$3;
        $r1 = staticinvoke <javax.security.auth.Policy: javax.security.auth.Policy getPolicy()>();
        $r2 = r0.<javax.security.auth.SubjectDomainCombiner$3: javax.security.auth.Subject val$finalS>;
        $r3 = r0.<javax.security.auth.SubjectDomainCombiner$3: java.security.CodeSource val$finalCs>;
        $r4 = virtualinvoke $r1.<javax.security.auth.Policy: java.security.PermissionCollection getPermissions(javax.security.auth.Subject,java.security.CodeSource)>($r2, $r3);
        return $r4;
    }

    public volatile java.lang.Object run()
    {
        javax.security.auth.SubjectDomainCombiner$3 r0;
        java.security.PermissionCollection $r1;

        r0 := @this: javax.security.auth.SubjectDomainCombiner$3;
        $r1 = virtualinvoke r0.<javax.security.auth.SubjectDomainCombiner$3: java.security.PermissionCollection run()>();
        return $r1;
    }
}
