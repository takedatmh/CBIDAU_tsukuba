class java.text.DateFormatSymbols$DateFormatSymbolsGetter extends java.lang.Object implements sun.util.LocaleServiceProviderPool$LocalizedObjectGetter
{
    private static final java.text.DateFormatSymbols$DateFormatSymbolsGetter INSTANCE;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        java.text.DateFormatSymbols$DateFormatSymbolsGetter r0;

        r0 := @this: java.text.DateFormatSymbols$DateFormatSymbolsGetter;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public transient java.text.DateFormatSymbols getObject(java.text.spi.DateFormatSymbolsProvider, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.text.DateFormatSymbols$DateFormatSymbolsGetter r0;
        java.text.spi.DateFormatSymbolsProvider r1;
        java.util.Locale r2;
        java.lang.String r3;
        java.lang.Object[] r4;
        boolean $z0;
        int $i0;
        java.lang.AssertionError $r5;
        java.text.DateFormatSymbols $r6;

        r0 := @this: java.text.DateFormatSymbols$DateFormatSymbolsGetter;
        r1 := @parameter0: java.text.spi.DateFormatSymbolsProvider;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $z0 = <java.text.DateFormatSymbols$DateFormatSymbolsGetter: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $i0 = lengthof r4;
        if $i0 == 0 goto label0;

        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        throw $r5;

     label0:
        $r6 = virtualinvoke r1.<java.text.spi.DateFormatSymbolsProvider: java.text.DateFormatSymbols getInstance(java.util.Locale)>(r2);
        return $r6;
    }

    public volatile java.lang.Object getObject(java.lang.Object, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.text.DateFormatSymbols$DateFormatSymbolsGetter r0;
        java.lang.Object r1;
        java.util.Locale r2;
        java.lang.String r3;
        java.lang.Object[] r4;
        java.text.spi.DateFormatSymbolsProvider $r5;
        java.text.DateFormatSymbols $r6;

        r0 := @this: java.text.DateFormatSymbols$DateFormatSymbolsGetter;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $r5 = (java.text.spi.DateFormatSymbolsProvider) r1;
        $r6 = virtualinvoke r0.<java.text.DateFormatSymbols$DateFormatSymbolsGetter: java.text.DateFormatSymbols getObject(java.text.spi.DateFormatSymbolsProvider,java.util.Locale,java.lang.String,java.lang.Object[])>($r5, r2, r3, r4);
        return $r6;
    }

    static java.text.DateFormatSymbols$DateFormatSymbolsGetter access$000()
    {
        java.text.DateFormatSymbols$DateFormatSymbolsGetter $r0;

        $r0 = <java.text.DateFormatSymbols$DateFormatSymbolsGetter: java.text.DateFormatSymbols$DateFormatSymbolsGetter INSTANCE>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.text.DateFormatSymbols$DateFormatSymbolsGetter $r1;

        $r0 = class "java/text/DateFormatSymbols";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.text.DateFormatSymbols$DateFormatSymbolsGetter: boolean $assertionsDisabled> = $z1;
        $r1 = new java.text.DateFormatSymbols$DateFormatSymbolsGetter;
        specialinvoke $r1.<java.text.DateFormatSymbols$DateFormatSymbolsGetter: void <init>()>();
        <java.text.DateFormatSymbols$DateFormatSymbolsGetter: java.text.DateFormatSymbols$DateFormatSymbolsGetter INSTANCE> = $r1;
        return;
    }
}
