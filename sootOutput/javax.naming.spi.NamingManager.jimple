public class javax.naming.spi.NamingManager extends java.lang.Object
{
    static final com.sun.naming.internal.VersionHelper helper;
    private static javax.naming.spi.ObjectFactoryBuilder object_factory_builder;
    private static final java.lang.String defaultPkgPrefix;
    private static javax.naming.spi.InitialContextFactoryBuilder initctx_factory_builder;
    public static final java.lang.String CPE;

    void <init>()
    {
        javax.naming.spi.NamingManager r0;

        r0 := @this: javax.naming.spi.NamingManager;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static synchronized void setObjectFactoryBuilder(javax.naming.spi.ObjectFactoryBuilder) throws javax.naming.NamingException
    {
        javax.naming.spi.ObjectFactoryBuilder r0, $r1;
        java.lang.SecurityManager r2;
        java.lang.IllegalStateException $r3;

        r0 := @parameter0: javax.naming.spi.ObjectFactoryBuilder;
        $r1 = <javax.naming.spi.NamingManager: javax.naming.spi.ObjectFactoryBuilder object_factory_builder>;
        if $r1 == null goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ObjectFactoryBuilder already set");
        throw $r3;

     label0:
        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r2 == null goto label1;

        virtualinvoke r2.<java.lang.SecurityManager: void checkSetFactory()>();

     label1:
        <javax.naming.spi.NamingManager: javax.naming.spi.ObjectFactoryBuilder object_factory_builder> = r0;
        return;
    }

    static synchronized javax.naming.spi.ObjectFactoryBuilder getObjectFactoryBuilder()
    {
        javax.naming.spi.ObjectFactoryBuilder $r0;

        $r0 = <javax.naming.spi.NamingManager: javax.naming.spi.ObjectFactoryBuilder object_factory_builder>;
        return $r0;
    }

    static javax.naming.spi.ObjectFactory getObjectFactoryFromReference(javax.naming.Reference, java.lang.String) throws java.lang.IllegalAccessException, java.lang.InstantiationException, java.net.MalformedURLException
    {
        javax.naming.Reference r0;
        java.lang.String r1, $r7, r8;
        java.lang.Class r2;
        java.lang.ClassNotFoundException r3, r4, $r6, $r10;
        com.sun.naming.internal.VersionHelper $r5, $r9;
        java.lang.Object $r11;
        javax.naming.spi.ObjectFactory $r12;

        r0 := @parameter0: javax.naming.Reference;
        r1 := @parameter1: java.lang.String;
        r2 = null;

     label0:
        $r5 = <javax.naming.spi.NamingManager: com.sun.naming.internal.VersionHelper helper>;
        r2 = virtualinvoke $r5.<com.sun.naming.internal.VersionHelper: java.lang.Class loadClass(java.lang.String)>(r1);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;

     label3:
        if r2 != null goto label7;

        $r7 = virtualinvoke r0.<javax.naming.Reference: java.lang.String getFactoryClassLocation()>();
        r8 = $r7;
        if $r7 == null goto label7;

     label4:
        $r9 = <javax.naming.spi.NamingManager: com.sun.naming.internal.VersionHelper helper>;
        r2 = virtualinvoke $r9.<com.sun.naming.internal.VersionHelper: java.lang.Class loadClass(java.lang.String,java.lang.String)>(r1, r8);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;
        r4 = $r10;

     label7:
        if r2 == null goto label8;

        $r11 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();
        $r12 = (javax.naming.spi.ObjectFactory) $r11;
        goto label9;

     label8:
        $r12 = null;

     label9:
        return $r12;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
        catch java.lang.ClassNotFoundException from label4 to label5 with label6;
    }

    private static java.lang.Object createObjectFromFactories(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable) throws java.lang.Exception
    {
        java.lang.Object r0, r5, $r7;
        javax.naming.Name r1;
        javax.naming.Context r2;
        java.util.Hashtable r3;
        com.sun.naming.internal.FactoryEnumeration r4;
        javax.naming.spi.ObjectFactory r6;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: javax.naming.Name;
        r2 := @parameter2: javax.naming.Context;
        r3 := @parameter3: java.util.Hashtable;
        r4 = staticinvoke <com.sun.naming.internal.ResourceManager: com.sun.naming.internal.FactoryEnumeration getFactories(java.lang.String,java.util.Hashtable,javax.naming.Context)>("java.naming.factory.object", r3, r2);
        if r4 != null goto label0;

        return null;

     label0:
        r5 = null;

     label1:
        if r5 != null goto label2;

        $z0 = virtualinvoke r4.<com.sun.naming.internal.FactoryEnumeration: boolean hasMore()>();
        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r4.<com.sun.naming.internal.FactoryEnumeration: java.lang.Object next()>();
        r6 = (javax.naming.spi.ObjectFactory) $r7;
        r5 = interfaceinvoke r6.<javax.naming.spi.ObjectFactory: java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r0, r1, r2, r3);
        goto label1;

     label2:
        return r5;
    }

    private static java.lang.String getURLScheme(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, i1;

        r0 := @parameter0: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);
        i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);
        if i0 <= 0 goto label1;

        if i1 == -1 goto label0;

        if i0 >= i1 goto label1;

     label0:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        return $r1;

     label1:
        return null;
    }

    public static java.lang.Object getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable) throws java.lang.Exception
    {
        java.lang.Object r0, r8, $r9, $r13, r14, $r15;
        javax.naming.Name r1;
        javax.naming.Context r2;
        java.util.Hashtable r3;
        javax.naming.spi.ObjectFactoryBuilder r4;
        javax.naming.spi.ObjectFactory r5, r12;
        javax.naming.Reference r6;
        java.lang.String r7;
        boolean $z0, $z1;
        javax.naming.Referenceable $r10, $r11;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: javax.naming.Name;
        r2 := @parameter2: javax.naming.Context;
        r3 := @parameter3: java.util.Hashtable;
        r4 = staticinvoke <javax.naming.spi.NamingManager: javax.naming.spi.ObjectFactoryBuilder getObjectFactoryBuilder()>();
        if r4 == null goto label0;

        r5 = interfaceinvoke r4.<javax.naming.spi.ObjectFactoryBuilder: javax.naming.spi.ObjectFactory createObjectFactory(java.lang.Object,java.util.Hashtable)>(r0, r3);
        $r9 = interfaceinvoke r5.<javax.naming.spi.ObjectFactory: java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r0, r1, r2, r3);
        return $r9;

     label0:
        r6 = null;
        $z0 = r0 instanceof javax.naming.Reference;
        if $z0 == 0 goto label1;

        r6 = (javax.naming.Reference) r0;
        goto label2;

     label1:
        $z1 = r0 instanceof javax.naming.Referenceable;
        if $z1 == 0 goto label2;

        $r10 = (javax.naming.Referenceable) r0;
        $r11 = (javax.naming.Referenceable) $r10;
        r6 = interfaceinvoke $r11.<javax.naming.Referenceable: javax.naming.Reference getReference()>();

     label2:
        if r6 == null goto label5;

        r7 = virtualinvoke r6.<javax.naming.Reference: java.lang.String getFactoryClassName()>();
        if r7 == null goto label4;

        r12 = staticinvoke <javax.naming.spi.NamingManager: javax.naming.spi.ObjectFactory getObjectFactoryFromReference(javax.naming.Reference,java.lang.String)>(r6, r7);
        if r12 == null goto label3;

        $r13 = interfaceinvoke r12.<javax.naming.spi.ObjectFactory: java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r6, r1, r2, r3);
        return $r13;

     label3:
        return r0;

     label4:
        r8 = staticinvoke <javax.naming.spi.NamingManager: java.lang.Object processURLAddrs(javax.naming.Reference,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r6, r1, r2, r3);
        if r8 == null goto label5;

        return r8;

     label5:
        r14 = staticinvoke <javax.naming.spi.NamingManager: java.lang.Object createObjectFromFactories(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r0, r1, r2, r3);
        if r14 == null goto label6;

        $r15 = r14;
        goto label7;

     label6:
        $r15 = r0;

     label7:
        return $r15;
    }

    static java.lang.Object processURLAddrs(javax.naming.Reference, javax.naming.Name, javax.naming.Context, java.util.Hashtable) throws javax.naming.NamingException
    {
        javax.naming.Reference r0;
        javax.naming.Name r1;
        javax.naming.Context r2;
        java.util.Hashtable r3;
        int i0, $i1;
        javax.naming.RefAddr r4;
        java.lang.String r5, $r7;
        java.lang.Object r6, $r8;
        boolean $z0, $z1;

        r0 := @parameter0: javax.naming.Reference;
        r1 := @parameter1: javax.naming.Name;
        r2 := @parameter2: javax.naming.Context;
        r3 := @parameter3: java.util.Hashtable;
        i0 = 0;

     label0:
        $i1 = virtualinvoke r0.<javax.naming.Reference: int size()>();
        if i0 >= $i1 goto label2;

        r4 = virtualinvoke r0.<javax.naming.Reference: javax.naming.RefAddr get(int)>(i0);
        $z0 = r4 instanceof javax.naming.StringRefAddr;
        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r4.<javax.naming.RefAddr: java.lang.String getType()>();
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("URL");
        if $z1 == 0 goto label1;

        $r8 = virtualinvoke r4.<javax.naming.RefAddr: java.lang.Object getContent()>();
        r5 = (java.lang.String) $r8;
        r6 = staticinvoke <javax.naming.spi.NamingManager: java.lang.Object processURL(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r5, r1, r2, r3);
        if r6 == null goto label1;

        return r6;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return null;
    }

    private static java.lang.Object processURL(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable) throws javax.naming.NamingException
    {
        java.lang.Object r0, r6, r11;
        javax.naming.Name r1;
        javax.naming.Context r2;
        java.util.Hashtable r3;
        java.lang.String r4, r5, r7, $r10;
        boolean $z0, $z1;
        java.lang.String[] $r8, r9;
        int i0, $i1;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: javax.naming.Name;
        r2 := @parameter2: javax.naming.Context;
        r3 := @parameter3: java.util.Hashtable;
        $z0 = r0 instanceof java.lang.String;
        if $z0 == 0 goto label0;

        r4 = (java.lang.String) r0;
        r5 = staticinvoke <javax.naming.spi.NamingManager: java.lang.String getURLScheme(java.lang.String)>(r4);
        if r5 == null goto label0;

        r6 = staticinvoke <javax.naming.spi.NamingManager: java.lang.Object getURLObject(java.lang.String,java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r5, r0, r1, r2, r3);
        if r6 == null goto label0;

        return r6;

     label0:
        $z1 = r0 instanceof java.lang.String[];
        if $z1 == 0 goto label3;

        $r8 = (java.lang.String[]) r0;
        r9 = (java.lang.String[]) $r8;
        i0 = 0;

     label1:
        $i1 = lengthof r9;
        if i0 >= $i1 goto label3;

        $r10 = r9[i0];
        r7 = staticinvoke <javax.naming.spi.NamingManager: java.lang.String getURLScheme(java.lang.String)>($r10);
        if r7 == null goto label2;

        r11 = staticinvoke <javax.naming.spi.NamingManager: java.lang.Object getURLObject(java.lang.String,java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r7, r0, r1, r2, r3);
        if r11 == null goto label2;

        return r11;

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        return null;
    }

    static javax.naming.Context getContext(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable) throws javax.naming.NamingException
    {
        java.lang.Object r0, r4;
        javax.naming.Name r1;
        javax.naming.Context r2, $r7, $r12;
        java.util.Hashtable r3;
        javax.naming.NamingException r5, r6, $r8, $r11;
        boolean $z0, $z1;
        java.lang.Exception $r9, r10;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: javax.naming.Name;
        r2 := @parameter2: javax.naming.Context;
        r3 := @parameter3: java.util.Hashtable;
        $z0 = r0 instanceof javax.naming.Context;
        if $z0 == 0 goto label0;

        $r7 = (javax.naming.Context) r0;
        return $r7;

     label0:
        r4 = staticinvoke <javax.naming.spi.NamingManager: java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r0, r1, r2, r3);

     label1:
        goto label4;

     label2:
        $r8 := @caughtexception;
        r5 = $r8;
        throw r5;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = new javax.naming.NamingException;
        specialinvoke $r11.<javax.naming.NamingException: void <init>()>();
        r6 = $r11;
        virtualinvoke r6.<javax.naming.NamingException: void setRootCause(java.lang.Throwable)>(r10);
        throw r6;

     label4:
        $z1 = r4 instanceof javax.naming.Context;
        if $z1 == 0 goto label5;

        $r12 = (javax.naming.Context) r4;
        goto label6;

     label5:
        $r12 = null;

     label6:
        return $r12;

        catch javax.naming.NamingException from label0 to label1 with label2;
        catch java.lang.Exception from label0 to label1 with label3;
    }

    static javax.naming.spi.Resolver getResolver(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable) throws javax.naming.NamingException
    {
        java.lang.Object r0, r4;
        javax.naming.Name r1;
        javax.naming.Context r2;
        java.util.Hashtable r3;
        javax.naming.NamingException r5, r6, $r8, $r11;
        boolean $z0, $z1;
        javax.naming.spi.Resolver $r7, $r12;
        java.lang.Exception $r9, r10;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: javax.naming.Name;
        r2 := @parameter2: javax.naming.Context;
        r3 := @parameter3: java.util.Hashtable;
        $z0 = r0 instanceof javax.naming.spi.Resolver;
        if $z0 == 0 goto label0;

        $r7 = (javax.naming.spi.Resolver) r0;
        return $r7;

     label0:
        r4 = staticinvoke <javax.naming.spi.NamingManager: java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r0, r1, r2, r3);

     label1:
        goto label4;

     label2:
        $r8 := @caughtexception;
        r5 = $r8;
        throw r5;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = new javax.naming.NamingException;
        specialinvoke $r11.<javax.naming.NamingException: void <init>()>();
        r6 = $r11;
        virtualinvoke r6.<javax.naming.NamingException: void setRootCause(java.lang.Throwable)>(r10);
        throw r6;

     label4:
        $z1 = r4 instanceof javax.naming.spi.Resolver;
        if $z1 == 0 goto label5;

        $r12 = (javax.naming.spi.Resolver) r4;
        goto label6;

     label5:
        $r12 = null;

     label6:
        return $r12;

        catch javax.naming.NamingException from label0 to label1 with label2;
        catch java.lang.Exception from label0 to label1 with label3;
    }

    public static javax.naming.Context getURLContext(java.lang.String, java.util.Hashtable) throws javax.naming.NamingException
    {
        java.lang.String r0;
        java.util.Hashtable r1;
        java.lang.Object r2;
        boolean $z0;
        javax.naming.Context $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Hashtable;
        r2 = staticinvoke <javax.naming.spi.NamingManager: java.lang.Object getURLObject(java.lang.String,java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r0, null, null, null, r1);
        $z0 = r2 instanceof javax.naming.Context;
        if $z0 == 0 goto label0;

        $r3 = (javax.naming.Context) r2;
        return $r3;

     label0:
        return null;
    }

    private static java.lang.Object getURLObject(java.lang.String, java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable) throws javax.naming.NamingException
    {
        java.lang.String r0, $r14;
        java.lang.Object r1, $r15, $r16;
        javax.naming.Name r2;
        javax.naming.Context r3;
        java.util.Hashtable r4;
        java.lang.StringBuilder $r5, $r9, $r10, $r11, $r12, $r13;
        javax.naming.spi.ObjectFactory r6;
        javax.naming.NamingException r7, r8, $r17, $r20;
        java.lang.Exception $r18, r19;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.Object;
        r2 := @parameter2: javax.naming.Name;
        r3 := @parameter3: javax.naming.Context;
        r4 := @parameter4: java.util.Hashtable;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URLContextFactory");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = staticinvoke <com.sun.naming.internal.ResourceManager: java.lang.Object getFactory(java.lang.String,java.util.Hashtable,javax.naming.Context,java.lang.String,java.lang.String)>("java.naming.factory.url.pkgs", r4, r3, $r14, "com.sun.jndi.url");
        r6 = (javax.naming.spi.ObjectFactory) $r15;
        if r6 != null goto label0;

        return null;

     label0:
        $r16 = interfaceinvoke r6.<javax.naming.spi.ObjectFactory: java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r1, r2, r3, r4);

     label1:
        return $r16;

     label2:
        $r17 := @caughtexception;
        r7 = $r17;
        throw r7;

     label3:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = new javax.naming.NamingException;
        specialinvoke $r20.<javax.naming.NamingException: void <init>()>();
        r8 = $r20;
        virtualinvoke r8.<javax.naming.NamingException: void setRootCause(java.lang.Throwable)>(r19);
        throw r8;

        catch javax.naming.NamingException from label0 to label1 with label2;
        catch java.lang.Exception from label0 to label1 with label3;
    }

    private static synchronized javax.naming.spi.InitialContextFactoryBuilder getInitialContextFactoryBuilder()
    {
        javax.naming.spi.InitialContextFactoryBuilder $r0;

        $r0 = <javax.naming.spi.NamingManager: javax.naming.spi.InitialContextFactoryBuilder initctx_factory_builder>;
        return $r0;
    }

    public static javax.naming.Context getInitialContext(java.util.Hashtable) throws javax.naming.NamingException
    {
        java.util.Hashtable r0;
        javax.naming.spi.InitialContextFactoryBuilder r1;
        java.lang.String r2, $r7, $r18;
        javax.naming.NoInitialContextException r3, r5, $r8, $r14;
        javax.naming.spi.InitialContextFactory r4;
        java.lang.Object $r6, $r11;
        com.sun.naming.internal.VersionHelper $r9;
        java.lang.Class $r10;
        java.lang.Exception $r12, r13;
        java.lang.StringBuilder $r15, $r16, $r17;
        javax.naming.Context $r19;

        r0 := @parameter0: java.util.Hashtable;
        r1 = staticinvoke <javax.naming.spi.NamingManager: javax.naming.spi.InitialContextFactoryBuilder getInitialContextFactoryBuilder()>();
        if r1 != null goto label6;

        if r0 == null goto label0;

        $r6 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("java.naming.factory.initial");
        $r7 = (java.lang.String) $r6;
        goto label1;

     label0:
        $r7 = null;

     label1:
        r2 = $r7;
        if r2 != null goto label2;

        $r8 = new javax.naming.NoInitialContextException;
        specialinvoke $r8.<javax.naming.NoInitialContextException: void <init>(java.lang.String)>("Need to specify class name in environment or system property, or as an applet parameter, or in an application resource file:  java.naming.factory.initial");
        r3 = $r8;
        throw r3;

     label2:
        $r9 = <javax.naming.spi.NamingManager: com.sun.naming.internal.VersionHelper helper>;
        $r10 = virtualinvoke $r9.<com.sun.naming.internal.VersionHelper: java.lang.Class loadClass(java.lang.String)>(r2);
        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Object newInstance()>();
        r4 = (javax.naming.spi.InitialContextFactory) $r11;

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new javax.naming.NoInitialContextException;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot instantiate class: ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<javax.naming.NoInitialContextException: void <init>(java.lang.String)>($r18);
        r5 = $r14;
        virtualinvoke r5.<javax.naming.NoInitialContextException: void setRootCause(java.lang.Throwable)>(r13);
        throw r5;

     label5:
        goto label7;

     label6:
        r4 = interfaceinvoke r1.<javax.naming.spi.InitialContextFactoryBuilder: javax.naming.spi.InitialContextFactory createInitialContextFactory(java.util.Hashtable)>(r0);

     label7:
        $r19 = interfaceinvoke r4.<javax.naming.spi.InitialContextFactory: javax.naming.Context getInitialContext(java.util.Hashtable)>(r0);
        return $r19;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static synchronized void setInitialContextFactoryBuilder(javax.naming.spi.InitialContextFactoryBuilder) throws javax.naming.NamingException
    {
        javax.naming.spi.InitialContextFactoryBuilder r0, $r1;
        java.lang.SecurityManager r2;
        java.lang.IllegalStateException $r3;

        r0 := @parameter0: javax.naming.spi.InitialContextFactoryBuilder;
        $r1 = <javax.naming.spi.NamingManager: javax.naming.spi.InitialContextFactoryBuilder initctx_factory_builder>;
        if $r1 == null goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("InitialContextFactoryBuilder already set");
        throw $r3;

     label0:
        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r2 == null goto label1;

        virtualinvoke r2.<java.lang.SecurityManager: void checkSetFactory()>();

     label1:
        <javax.naming.spi.NamingManager: javax.naming.spi.InitialContextFactoryBuilder initctx_factory_builder> = r0;
        return;
    }

    public static boolean hasInitialContextFactoryBuilder()
    {
        javax.naming.spi.InitialContextFactoryBuilder $r0;
        boolean $z0;

        $r0 = staticinvoke <javax.naming.spi.NamingManager: javax.naming.spi.InitialContextFactoryBuilder getInitialContextFactoryBuilder()>();
        if $r0 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static javax.naming.Context getContinuationContext(javax.naming.CannotProceedException) throws javax.naming.NamingException
    {
        javax.naming.CannotProceedException r0;
        java.util.Hashtable r1, $r3, r4;
        javax.naming.spi.ContinuationContext r2, $r7;
        java.lang.Object $r5;
        javax.naming.Context $r8;

        r0 := @parameter0: javax.naming.CannotProceedException;
        r1 = virtualinvoke r0.<javax.naming.CannotProceedException: java.util.Hashtable getEnvironment()>();
        if r1 != null goto label0;

        $r3 = new java.util.Hashtable;
        specialinvoke $r3.<java.util.Hashtable: void <init>(int)>(7);
        r4 = $r3;
        goto label1;

     label0:
        $r5 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object clone()>();
        r4 = (java.util.Hashtable) $r5;

     label1:
        virtualinvoke r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.spi.CannotProceedException", r0);
        $r7 = new javax.naming.spi.ContinuationContext;
        specialinvoke $r7.<javax.naming.spi.ContinuationContext: void <init>(javax.naming.CannotProceedException,java.util.Hashtable)>(r0, r4);
        r2 = $r7;
        $r8 = virtualinvoke r2.<javax.naming.spi.ContinuationContext: javax.naming.Context getTargetContext()>();
        return $r8;
    }

    public static java.lang.Object getStateToBind(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable) throws javax.naming.NamingException
    {
        java.lang.Object r0, r5, $r7, $r8;
        javax.naming.Name r1;
        javax.naming.Context r2;
        java.util.Hashtable r3;
        com.sun.naming.internal.FactoryEnumeration r4;
        javax.naming.spi.StateFactory r6;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: javax.naming.Name;
        r2 := @parameter2: javax.naming.Context;
        r3 := @parameter3: java.util.Hashtable;
        r4 = staticinvoke <com.sun.naming.internal.ResourceManager: com.sun.naming.internal.FactoryEnumeration getFactories(java.lang.String,java.util.Hashtable,javax.naming.Context)>("java.naming.factory.state", r3, r2);
        if r4 != null goto label0;

        return r0;

     label0:
        r5 = null;

     label1:
        if r5 != null goto label2;

        $z0 = virtualinvoke r4.<com.sun.naming.internal.FactoryEnumeration: boolean hasMore()>();
        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r4.<com.sun.naming.internal.FactoryEnumeration: java.lang.Object next()>();
        r6 = (javax.naming.spi.StateFactory) $r7;
        r5 = interfaceinvoke r6.<javax.naming.spi.StateFactory: java.lang.Object getStateToBind(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r0, r1, r2, r3);
        goto label1;

     label2:
        if r5 == null goto label3;

        $r8 = r5;
        goto label4;

     label3:
        $r8 = r0;

     label4:
        return $r8;
    }

    static void <clinit>()
    {
        com.sun.naming.internal.VersionHelper $r0;

        $r0 = staticinvoke <com.sun.naming.internal.VersionHelper: com.sun.naming.internal.VersionHelper getVersionHelper()>();
        <javax.naming.spi.NamingManager: com.sun.naming.internal.VersionHelper helper> = $r0;
        <javax.naming.spi.NamingManager: javax.naming.spi.ObjectFactoryBuilder object_factory_builder> = null;
        <javax.naming.spi.NamingManager: javax.naming.spi.InitialContextFactoryBuilder initctx_factory_builder> = null;
        return;
    }
}
