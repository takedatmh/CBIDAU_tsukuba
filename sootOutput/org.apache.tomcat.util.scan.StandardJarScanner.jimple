public class org.apache.tomcat.util.scan.StandardJarScanner extends java.lang.Object implements org.apache.tomcat.JarScanner
{
    private final org.apache.juli.logging.Log log;
    private static final java.util.Set defaultJarsToSkip;
    private static final org.apache.tomcat.util.res.StringManager sm;
    private boolean scanClassPath;
    private boolean scanAllFiles;
    private boolean scanAllDirectories;
    private boolean scanBootstrapClassPath;

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.lang.String r1, r3, $r6;
        java.util.StringTokenizer r2, $r5;
        org.apache.tomcat.util.res.StringManager $r4;
        int $i0;
        java.util.Set $r7;
        boolean $z1;

        $r0 = new java.util.HashSet;
        specialinvoke $r0.<java.util.HashSet: void <init>()>();
        <org.apache.tomcat.util.scan.StandardJarScanner: java.util.Set defaultJarsToSkip> = $r0;
        $r4 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.tomcat.util.scan");
        <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm> = $r4;
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("tomcat.util.scan.DefaultJarScanner.jarsToSkip");
        if r1 == null goto label2;

        $r5 = new java.util.StringTokenizer;
        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");
        r2 = $r5;
        goto label1;

     label0:
        $r6 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r3 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i0 <= 0 goto label1;

        $r7 = <org.apache.tomcat.util.scan.StandardJarScanner: java.util.Set defaultJarsToSkip>;
        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label1:
        $z1 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreElements()>();
        if $z1 != 0 goto label0;

     label2:
        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        org.apache.juli.logging.Log $r1;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/tomcat/util/scan/StandardJarScanner");
        r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log> = $r1;
        r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanClassPath> = 1;
        r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanAllFiles> = 0;
        r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanAllDirectories> = 0;
        r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanBootstrapClassPath> = 0;
        return;
    }

    public boolean isScanClassPath()
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        $z0 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanClassPath>;
        return $z0;
    }

    public void setScanClassPath(boolean)
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        z0 := @parameter0: boolean;
        r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanClassPath> = z0;
        return;
    }

    public boolean isScanAllFiles()
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        $z0 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanAllFiles>;
        return $z0;
    }

    public void setScanAllFiles(boolean)
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        z0 := @parameter0: boolean;
        r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanAllFiles> = z0;
        return;
    }

    public boolean isScanAllDirectories()
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        $z0 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanAllDirectories>;
        return $z0;
    }

    public void setScanAllDirectories(boolean)
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        z0 := @parameter0: boolean;
        r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanAllDirectories> = z0;
        return;
    }

    public boolean isScanBootstrapClassPath()
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        $z0 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanBootstrapClassPath>;
        return $z0;
    }

    public void setScanBootstrapClassPath(boolean)
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        z0 := @parameter0: boolean;
        r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanBootstrapClassPath> = z0;
        return;
    }

    public void scan(javax.servlet.ServletContext, java.lang.ClassLoader, org.apache.tomcat.JarScannerCallback, java.util.Set)
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        javax.servlet.ServletContext r1;
        java.lang.ClassLoader r2;
        org.apache.tomcat.JarScannerCallback r3;
        java.util.Set r4, r6, r7;
        org.apache.tomcat.util.res.StringManager $r5, $r19, $r27, $r32;
        java.util.Iterator r8;
        java.lang.String r9, r11, $r14, $r16, $r21, $r29, $r34;
        java.net.URL r10;
        org.apache.juli.logging.Log $r12, $r13, $r17, $r18, $r26, $r30, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r15;
        int $i0, $i1;
        java.lang.Object[] $r20, $r28, $r33;
        java.io.File $r22;
        java.net.URI $r23;
        java.io.IOException $r24, r25;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        r1 := @parameter0: javax.servlet.ServletContext;
        r2 := @parameter1: java.lang.ClassLoader;
        r3 := @parameter2: org.apache.tomcat.JarScannerCallback;
        r4 := @parameter3: java.util.Set;
        $r12 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r12.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label0;

        $r13 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r5 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = virtualinvoke $r5.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jarScan.webinflibStart");
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r14);

     label0:
        if r4 != null goto label1;

        r6 = <org.apache.tomcat.util.scan.StandardJarScanner: java.util.Set defaultJarsToSkip>;
        goto label2;

     label1:
        r6 = r4;

     label2:
        r7 = interfaceinvoke r1.<javax.servlet.ServletContext: java.util.Set getResourcePaths(java.lang.String)>("/WEB-INF/lib/");
        if r7 == null goto label12;

        r8 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>();
        goto label11;

     label3:
        $r15 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
        r9 = (java.lang.String) $r15;
        $z1 = virtualinvoke r9.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");
        if $z1 == 0 goto label10;

        $i0 = virtualinvoke r9.<java.lang.String: int lastIndexOf(int)>(47);
        $i1 = $i0 + 1;
        $r16 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i1);
        $z2 = staticinvoke <org.apache.tomcat.util.file.Matcher: boolean matchName(java.util.Set,java.lang.String)>(r6, $r16);
        if $z2 != 0 goto label10;

        $r17 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r17.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label4;

        $r18 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r19 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = newarray (java.lang.Object)[1];
        $r20[0] = r9;
        $r21 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jarScan.webinflibJarScan", $r20);
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r21);

     label4:
        r10 = null;

     label5:
        r11 = interfaceinvoke r1.<javax.servlet.ServletContext: java.lang.String getRealPath(java.lang.String)>(r9);
        if r11 != null goto label6;

        r10 = interfaceinvoke r1.<javax.servlet.ServletContext: java.net.URL getResource(java.lang.String)>(r9);
        goto label7;

     label6:
        $r22 = new java.io.File;
        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>(r11);
        $r23 = virtualinvoke $r22.<java.io.File: java.net.URI toURI()>();
        r10 = virtualinvoke $r23.<java.net.URI: java.net.URL toURL()>();

     label7:
        virtualinvoke r0.<org.apache.tomcat.util.scan.StandardJarScanner: void process(org.apache.tomcat.JarScannerCallback,java.net.URL)>(r3, r10);

     label8:
        goto label11;

     label9:
        $r24 := @caughtexception;
        r25 = $r24;
        $r26 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r27 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r28 = newarray (java.lang.Object)[1];
        $r28[0] = r10;
        $r29 = virtualinvoke $r27.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jarScan.webinflibFail", $r28);
        interfaceinvoke $r26.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r29, r25);
        goto label11;

     label10:
        $r30 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r30.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z4 == 0 goto label11;

        $r31 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r32 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r33 = newarray (java.lang.Object)[1];
        $r33[0] = r9;
        $r34 = virtualinvoke $r32.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jarScan.webinflibJarNoScan", $r33);
        interfaceinvoke $r31.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r34);

     label11:
        $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
        if $z5 != 0 goto label3;

     label12:
        $z6 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanClassPath>;
        if $z6 == 0 goto label13;

        if r2 == null goto label13;

        virtualinvoke r0.<org.apache.tomcat.util.scan.StandardJarScanner: void doScanClassPath(java.lang.ClassLoader,org.apache.tomcat.JarScannerCallback,java.util.Set)>(r2, r3, r6);

     label13:
        return;

        catch java.io.IOException from label5 to label8 with label9;
    }

    protected void doScanClassPath(java.lang.ClassLoader, org.apache.tomcat.JarScannerCallback, java.util.Set)
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        java.lang.ClassLoader r1, r5, r6, $r15;
        org.apache.tomcat.JarScannerCallback r2;
        java.util.Set r3;
        org.apache.tomcat.util.res.StringManager $r4, $r26, $r34, $r40, $r53;
        java.util.HashSet r7, $r16;
        java.net.URL[] r8;
        int i0, $i1;
        java.lang.String r9, $r14, $r20, $r23, $r29, $r37, $r43, $r55;
        java.io.IOException r10, r11, $r32, $r51;
        org.apache.juli.logging.Log $r12, $r13, $r24, $r25, $r33, $r38, $r39, $r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z10, $z12;
        java.net.URLClassLoader $r17;
        java.net.URL $r18, $r19, $r28, $r30, $r31, $r36, $r42, r50;
        java.lang.StringBuilder $r21, $r22;
        java.lang.Object[] $r27, $r35, $r41, $r54;
        java.util.List r44;
        java.util.LinkedList $r45, r46;
        org.apache.tomcat.util.compat.JreCompat $r47;
        java.util.Iterator r48;
        java.lang.Object $r49;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        r1 := @parameter0: java.lang.ClassLoader;
        r2 := @parameter1: org.apache.tomcat.JarScannerCallback;
        r3 := @parameter2: java.util.Set;
        $r12 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r12.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label0;

        $r13 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r4 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = virtualinvoke $r4.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jarScan.classloaderStart");
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r14);

     label0:
        r5 = r1;
        r6 = null;
        $z1 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanBootstrapClassPath>;
        if $z1 != 0 goto label1;

        $r15 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();
        r6 = virtualinvoke $r15.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

     label1:
        $r16 = new java.util.HashSet;
        specialinvoke $r16.<java.util.HashSet: void <init>()>();
        r7 = $r16;
        goto label11;

     label2:
        $z2 = r5 instanceof java.net.URLClassLoader;
        if $z2 == 0 goto label10;

        $r17 = (java.net.URLClassLoader) r5;
        r8 = virtualinvoke $r17.<java.net.URLClassLoader: java.net.URL[] getURLs()>();
        i0 = 0;
        goto label9;

     label3:
        $r18 = r8[i0];
        r9 = specialinvoke r0.<org.apache.tomcat.util.scan.StandardJarScanner: java.lang.String getJarName(java.net.URL)>($r18);
        if r9 == null goto label7;

        $z3 = staticinvoke <org.apache.tomcat.util.file.Matcher: boolean matchName(java.util.Set,java.lang.String)>(r3, r9);
        if $z3 != 0 goto label7;

        $r19 = r8[i0];
        $r20 = virtualinvoke $r19.<java.net.URL: java.lang.String toString()>();
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("/WEB-INF/lib/");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        $z4 = virtualinvoke $r20.<java.lang.String: boolean contains(java.lang.CharSequence)>($r23);
        if $z4 != 0 goto label7;

        $r24 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r24.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label4;

        $r25 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r26 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r27 = newarray (java.lang.Object)[1];
        $r28 = r8[i0];
        $r27[0] = $r28;
        $r29 = virtualinvoke $r26.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jarScan.classloaderJarScan", $r27);
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r29);

     label4:
        $r30 = r8[i0];
        virtualinvoke r0.<org.apache.tomcat.util.scan.StandardJarScanner: void process(org.apache.tomcat.JarScannerCallback,java.net.URL)>(r2, $r30);
        $r31 = r8[i0];
        interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>($r31);

     label5:
        goto label8;

     label6:
        $r32 := @caughtexception;
        r10 = $r32;
        $r33 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r34 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r35 = newarray (java.lang.Object)[1];
        $r36 = r8[i0];
        $r35[0] = $r36;
        $r37 = virtualinvoke $r34.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jarScan.classloaderFail", $r35);
        interfaceinvoke $r33.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r37, r10);
        goto label8;

     label7:
        $r38 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $z7 = interfaceinvoke $r38.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z7 == 0 goto label8;

        $r39 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r40 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r41 = newarray (java.lang.Object)[1];
        $r42 = r8[i0];
        $r41[0] = $r42;
        $r43 = virtualinvoke $r40.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jarScan.classloaderJarNoScan", $r41);
        interfaceinvoke $r39.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r43);

     label8:
        i0 = i0 + 1;

     label9:
        $i1 = lengthof r8;
        if i0 < $i1 goto label3;

     label10:
        r5 = virtualinvoke r5.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

     label11:
        if r5 == null goto label12;

        if r5 != r6 goto label2;

     label12:
        $z8 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: boolean isJre9Available()>();
        if $z8 == 0 goto label18;

        r44 = virtualinvoke r0.<org.apache.tomcat.util.scan.StandardJarScanner: java.util.List getClassPath()>();
        $r45 = new java.util.LinkedList;
        specialinvoke $r45.<java.util.LinkedList: void <init>()>();
        r46 = $r45;
        $r47 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: org.apache.tomcat.util.compat.JreCompat getInstance()>();
        virtualinvoke $r47.<org.apache.tomcat.util.compat.JreCompat: void addBootModulePath(java.util.Deque)>(r46);
        interfaceinvoke r44.<java.util.List: boolean addAll(java.util.Collection)>(r46);
        r48 = interfaceinvoke r44.<java.util.List: java.util.Iterator iterator()>();
        goto label17;

     label13:
        $r49 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();
        r50 = (java.net.URL) $r49;
        $z10 = interfaceinvoke r7.<java.util.Set: boolean contains(java.lang.Object)>(r50);
        if $z10 != 0 goto label17;

     label14:
        virtualinvoke r0.<org.apache.tomcat.util.scan.StandardJarScanner: void process(org.apache.tomcat.JarScannerCallback,java.net.URL)>(r2, r50);
        interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r50);

     label15:
        goto label17;

     label16:
        $r51 := @caughtexception;
        r11 = $r51;
        $r52 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r53 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r54 = newarray (java.lang.Object)[1];
        $r54[0] = r50;
        $r55 = virtualinvoke $r53.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jarScan.classloaderFail", $r54);
        interfaceinvoke $r52.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r55, r11);

     label17:
        $z12 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
        if $z12 != 0 goto label13;

     label18:
        return;

        catch java.io.IOException from label4 to label5 with label6;
        catch java.io.IOException from label14 to label15 with label16;
    }

    protected java.util.List getClassPath()
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        java.lang.String r1, $r2, r6, $r19;
        java.lang.String[] r3, r5;
        java.util.ArrayList r4, $r10;
        int i0, i1, $i2, $i3;
        java.io.File r7, $r12;
        java.net.MalformedURLException r8, $r15;
        java.util.List $r9;
        java.net.URI $r13;
        java.net.URL $r14;
        org.apache.juli.logging.Log $r16;
        org.apache.tomcat.util.res.StringManager $r17;
        java.lang.Object[] $r18;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.class.path");
        if r1 == null goto label0;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i2 != 0 goto label1;

     label0:
        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        return $r9;

     label1:
        $r2 = <java.io.File: java.lang.String pathSeparator>;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r2);
        $r10 = new java.util.ArrayList;
        $i3 = lengthof r3;
        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i3);
        r4 = $r10;
        r5 = r3;
        i0 = lengthof r3;
        i1 = 0;
        goto label7;

     label2:
        r6 = r5[i1];
        $r12 = new java.io.File;
        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>(r6);
        r7 = $r12;

     label3:
        $r13 = virtualinvoke r7.<java.io.File: java.net.URI toURI()>();
        $r14 = virtualinvoke $r13.<java.net.URI: java.net.URL toURL()>();
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r14);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;
        r8 = $r15;
        $r16 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r17 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r18 = newarray (java.lang.Object)[1];
        $r18[0] = r6;
        $r19 = virtualinvoke $r17.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jarScan.classPath.badEntry", $r18);
        interfaceinvoke $r16.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r19, r8);

     label6:
        i1 = i1 + 1;

     label7:
        if i1 < i0 goto label2;

        return r4;

        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    protected void process(org.apache.tomcat.JarScannerCallback, java.net.URL) throws java.io.IOException
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        org.apache.tomcat.JarScannerCallback r1;
        java.net.URL r2, r6, r7;
        org.apache.tomcat.util.res.StringManager $r3;
        java.net.URLConnection r4, $r14, $r19;
        java.lang.String r5, $r12, $r25, $r28;
        java.io.IOException r8, $r32;
        org.apache.juli.logging.Log $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.Object[] $r11;
        java.net.JarURLConnection $r13, $r15, $r20;
        java.io.File $r16, r18, $r21, $r23, r29;
        java.net.URI $r17;
        java.lang.StringBuilder $r22, $r24, $r26, $r27;
        java.lang.Throwable $r30, r31;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        r1 := @parameter0: org.apache.tomcat.JarScannerCallback;
        r2 := @parameter1: java.net.URL;
        $r9 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label0;

        $r10 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: org.apache.juli.logging.Log log>;
        $r3 = <org.apache.tomcat.util.scan.StandardJarScanner: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[1];
        $r11[0] = r2;
        $r12 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jarScan.jarUrlStart", $r11);
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r12);

     label0:
        r4 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>();
        $z1 = r4 instanceof java.net.JarURLConnection;
        if $z1 == 0 goto label1;

        $r13 = (java.net.JarURLConnection) r4;
        interfaceinvoke r1.<org.apache.tomcat.JarScannerCallback: void scan(java.net.JarURLConnection)>($r13);
        goto label7;

     label1:
        r5 = virtualinvoke r2.<java.net.URL: java.lang.String toString()>();
        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("file:");
        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("jndi:");
        if $z3 != 0 goto label2;

        $z4 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("http:");
        if $z4 != 0 goto label2;

        $z5 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("https:");
        if $z5 == 0 goto label7;

     label2:
        $z6 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");
        if $z6 == 0 goto label3;

        r6 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: java.net.URL buildJarUrl(java.lang.String)>(r5);
        $r14 = virtualinvoke r6.<java.net.URL: java.net.URLConnection openConnection()>();
        $r15 = (java.net.JarURLConnection) $r14;
        interfaceinvoke r1.<org.apache.tomcat.JarScannerCallback: void scan(java.net.JarURLConnection)>($r15);
        goto label7;

     label3:
        $r16 = new java.io.File;
        $r17 = virtualinvoke r2.<java.net.URL: java.net.URI toURI()>();
        specialinvoke $r16.<java.io.File: void <init>(java.net.URI)>($r17);
        r18 = $r16;
        $z7 = virtualinvoke r18.<java.io.File: boolean isFile()>();
        if $z7 == 0 goto label4;

        $z8 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanAllFiles>;
        if $z8 == 0 goto label4;

        r7 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: java.net.URL buildJarUrl(java.io.File)>(r18);
        $r19 = virtualinvoke r7.<java.net.URL: java.net.URLConnection openConnection()>();
        $r20 = (java.net.JarURLConnection) $r19;
        interfaceinvoke r1.<org.apache.tomcat.JarScannerCallback: void scan(java.net.JarURLConnection)>($r20);
        goto label7;

     label4:
        $z9 = virtualinvoke r18.<java.io.File: boolean isDirectory()>();
        if $z9 == 0 goto label7;

        $z10 = r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean scanAllDirectories>;
        if $z10 == 0 goto label7;

        $r21 = new java.io.File;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke r18.<java.io.File: java.io.File getAbsoluteFile()>();
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);
        $r25 = <java.io.File: java.lang.String separator>;
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>($r28);
        r29 = $r21;
        $z11 = virtualinvoke r29.<java.io.File: boolean isDirectory()>();
        if $z11 == 0 goto label7;

        interfaceinvoke r1.<org.apache.tomcat.JarScannerCallback: void scan(java.io.File)>(r18);

     label5:
        goto label7;

     label6:
        $r30 := @caughtexception;
        r31 = $r30;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r31);
        $r32 = new java.io.IOException;
        specialinvoke $r32.<java.io.IOException: void <init>()>();
        r8 = $r32;
        virtualinvoke r8.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r31);
        throw r8;

     label7:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
    }

    private java.lang.String getJarName(java.net.URL)
    {
        org.apache.tomcat.util.scan.StandardJarScanner r0;
        java.net.URL r1;
        java.lang.String r2, r3;
        int i0, i1, $i2, $i3, i4, $i5;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.scan.StandardJarScanner;
        r1 := @parameter0: java.net.URL;
        r2 = null;
        r3 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();
        i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(".jar");
        if i0 == -1 goto label0;

        i1 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int,int)>(47, i0);
        $i2 = i1 + 1;
        $i3 = i0 + 4;
        r2 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);
        goto label1;

     label0:
        $z0 = virtualinvoke r0.<org.apache.tomcat.util.scan.StandardJarScanner: boolean isScanAllDirectories()>();
        if $z0 == 0 goto label1;

        i4 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(47);
        $i5 = i4 + 1;
        r2 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i5);

     label1:
        return r2;
    }
}
