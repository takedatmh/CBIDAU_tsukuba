public class javax.xml.transform.TransformerException extends java.lang.Exception
{
    javax.xml.transform.SourceLocator locator;
    java.lang.Throwable containedException;

    public javax.xml.transform.SourceLocator getLocator()
    {
        javax.xml.transform.TransformerException r0;
        javax.xml.transform.SourceLocator $r1;

        r0 := @this: javax.xml.transform.TransformerException;
        $r1 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;
        return $r1;
    }

    public void setLocator(javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.TransformerException r0;
        javax.xml.transform.SourceLocator r1;

        r0 := @this: javax.xml.transform.TransformerException;
        r1 := @parameter0: javax.xml.transform.SourceLocator;
        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = r1;
        return;
    }

    public java.lang.Throwable getException()
    {
        javax.xml.transform.TransformerException r0;
        java.lang.Throwable $r1;

        r0 := @this: javax.xml.transform.TransformerException;
        $r1 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;
        return $r1;
    }

    public java.lang.Throwable getCause()
    {
        javax.xml.transform.TransformerException r0;
        java.lang.Throwable $r1, $r2;

        r0 := @this: javax.xml.transform.TransformerException;
        $r1 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;
        if $r1 != r0 goto label0;

        $r2 = null;
        goto label1;

     label0:
        $r2 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;

     label1:
        return $r2;
    }

    public synchronized java.lang.Throwable initCause(java.lang.Throwable)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.Throwable r1, $r2;
        java.lang.IllegalStateException $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: javax.xml.transform.TransformerException;
        r1 := @parameter0: java.lang.Throwable;
        $r2 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;
        if $r2 == null goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t overwrite cause");
        throw $r3;

     label0:
        if r1 != r0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Self-causation not permitted");
        throw $r4;

     label1:
        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r1;
        return r0;
    }

    public void <init>(java.lang.String)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.String r1;

        r0 := @this: javax.xml.transform.TransformerException;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);
        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = null;
        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = null;
        return;
    }

    public void <init>(java.lang.Throwable)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.Throwable r1;
        java.lang.String $r2;

        r0 := @this: javax.xml.transform.TransformerException;
        r1 := @parameter0: java.lang.Throwable;
        $r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.String toString()>();
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r2);
        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r1;
        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = null;
        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        int $i0;

        r0 := @this: javax.xml.transform.TransformerException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Throwable;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        $r4 = virtualinvoke r2.<java.lang.Throwable: java.lang.String toString()>();
        goto label2;

     label1:
        $r4 = r1;

     label2:
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r4);
        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r2;
        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = null;
        return;
    }

    public void <init>(java.lang.String, javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.String r1;
        javax.xml.transform.SourceLocator r2;

        r0 := @this: javax.xml.transform.TransformerException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.xml.transform.SourceLocator;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);
        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = null;
        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = r2;
        return;
    }

    public void <init>(java.lang.String, javax.xml.transform.SourceLocator, java.lang.Throwable)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.String r1;
        javax.xml.transform.SourceLocator r2;
        java.lang.Throwable r3;

        r0 := @this: javax.xml.transform.TransformerException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.xml.transform.SourceLocator;
        r3 := @parameter2: java.lang.Throwable;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);
        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r3;
        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = r2;
        return;
    }

    public java.lang.String getMessageAndLocation()
    {
        javax.xml.transform.TransformerException r0;
        java.lang.StringBuffer $r1, r2;
        java.lang.String r3, r4, $r16;
        int i0, i1;
        javax.xml.transform.SourceLocator $r6, $r7, $r8, $r9;

        r0 := @this: javax.xml.transform.TransformerException;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        r3 = specialinvoke r0.<java.lang.Exception: java.lang.String getMessage()>();
        if null == r3 goto label0;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

     label0:
        $r6 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;
        if null == $r6 goto label3;

        $r7 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;
        r4 = interfaceinvoke $r7.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();
        $r8 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;
        i0 = interfaceinvoke $r8.<javax.xml.transform.SourceLocator: int getLineNumber()>();
        $r9 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;
        i1 = interfaceinvoke $r9.<javax.xml.transform.SourceLocator: int getColumnNumber()>();
        if null == r4 goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; SystemID: ");
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label1:
        if 0 == i0 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Line#: ");
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

     label2:
        if 0 == i1 goto label3;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Column#: ");
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

     label3:
        $r16 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r16;
    }

    public java.lang.String getLocationAsString()
    {
        javax.xml.transform.TransformerException r0;
        java.lang.StringBuffer r1, $r4;
        java.lang.String r2, $r14;
        int i0, i1;
        javax.xml.transform.SourceLocator $r3, $r5, $r6, $r7;

        r0 := @this: javax.xml.transform.TransformerException;
        $r3 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;
        if null == $r3 goto label3;

        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        r1 = $r4;
        $r5 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;
        r2 = interfaceinvoke $r5.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();
        $r6 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;
        i0 = interfaceinvoke $r6.<javax.xml.transform.SourceLocator: int getLineNumber()>();
        $r7 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;
        i1 = interfaceinvoke $r7.<javax.xml.transform.SourceLocator: int getColumnNumber()>();
        if null == r2 goto label0;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; SystemID: ");
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

     label0:
        if 0 == i0 goto label1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Line#: ");
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

     label1:
        if 0 == i1 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Column#: ");
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

     label2:
        $r14 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r14;

     label3:
        return null;
    }

    public void printStackTrace()
    {
        javax.xml.transform.TransformerException r0;
        java.io.PrintWriter $r1;
        java.io.PrintStream $r2;

        r0 := @this: javax.xml.transform.TransformerException;
        $r1 = new java.io.PrintWriter;
        $r2 = <java.lang.System: java.io.PrintStream err>;
        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r2, 1);
        virtualinvoke r0.<javax.xml.transform.TransformerException: void printStackTrace(java.io.PrintWriter)>($r1);
        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        javax.xml.transform.TransformerException r0;
        java.io.PrintStream r1;
        java.io.PrintWriter $r2;

        r0 := @this: javax.xml.transform.TransformerException;
        r1 := @parameter0: java.io.PrintStream;
        $r2 = new java.io.PrintWriter;
        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r1);
        virtualinvoke r0.<javax.xml.transform.TransformerException: void printStackTrace(java.io.PrintWriter)>($r2);
        return;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        javax.xml.transform.TransformerException r0, $r10;
        java.io.PrintWriter r1, $r6;
        java.io.PrintStream $r2;
        java.lang.String r3, r4;
        int i0;
        java.lang.Throwable r5, $r7, r8, r9, $r11, r12;
        boolean $z0;
        java.lang.Class $r13;
        java.lang.Class[] $r14;
        java.lang.reflect.Method r15;
        java.lang.Object[] $r16;
        java.lang.Object $r17;
        java.lang.reflect.InvocationTargetException $r18, r19;
        java.lang.IllegalAccessException $r20, r21;
        java.lang.NoSuchMethodException $r22, r23;

        r0 := @this: javax.xml.transform.TransformerException;
        r1 := @parameter0: java.io.PrintWriter;
        if r1 != null goto label0;

        $r6 = new java.io.PrintWriter;
        $r2 = <java.lang.System: java.io.PrintStream err>;
        specialinvoke $r6.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r2, 1);
        r1 = $r6;

     label0:
        r3 = virtualinvoke r0.<javax.xml.transform.TransformerException: java.lang.String getLocationAsString()>();
        if null == r3 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r3);

     label1:
        specialinvoke r0.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>(r1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r8 = $r7;

     label4:
        r9 = virtualinvoke r0.<javax.xml.transform.TransformerException: java.lang.Throwable getException()>();
        i0 = 0;

     label5:
        if i0 >= 10 goto label19;

        if null == r9 goto label19;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("---------");

     label6:
        $z0 = r9 instanceof javax.xml.transform.TransformerException;
        if $z0 == 0 goto label7;

        $r10 = (javax.xml.transform.TransformerException) r9;
        r4 = virtualinvoke $r10.<javax.xml.transform.TransformerException: java.lang.String getLocationAsString()>();
        if null == r4 goto label7;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r4);

     label7:
        virtualinvoke r9.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r1);

     label8:
        goto label10;

     label9:
        $r11 := @caughtexception;
        r12 = $r11;
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Could not print stack trace...");

     label10:
        $r13 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();
        $r14 = (java.lang.Class[]) null;
        r15 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getException", $r14);
        if null == r15 goto label13;

        r5 = r9;
        $r16 = (java.lang.Object[]) null;
        $r17 = virtualinvoke r15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r9, $r16);
        r9 = (java.lang.Throwable) $r17;
        if r5 != r9 goto label12;

     label11:
        goto label19;

     label12:
        goto label14;

     label13:
        r9 = null;

     label14:
        goto label18;

     label15:
        $r18 := @caughtexception;
        r19 = $r18;
        r9 = null;
        goto label18;

     label16:
        $r20 := @caughtexception;
        r21 = $r20;
        r9 = null;
        goto label18;

     label17:
        $r22 := @caughtexception;
        r23 = $r22;
        r9 = null;

     label18:
        i0 = i0 + 1;
        goto label5;

     label19:
        virtualinvoke r1.<java.io.PrintWriter: void flush()>();
        return;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label6 to label8 with label9;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label15;
        catch java.lang.reflect.InvocationTargetException from label12 to label14 with label15;
        catch java.lang.IllegalAccessException from label10 to label11 with label16;
        catch java.lang.IllegalAccessException from label12 to label14 with label16;
        catch java.lang.NoSuchMethodException from label10 to label11 with label17;
        catch java.lang.NoSuchMethodException from label12 to label14 with label17;
    }
}
