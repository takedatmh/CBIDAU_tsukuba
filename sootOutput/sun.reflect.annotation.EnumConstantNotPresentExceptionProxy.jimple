public class sun.reflect.annotation.EnumConstantNotPresentExceptionProxy extends sun.reflect.annotation.ExceptionProxy
{
    private static final long serialVersionUID;
    java.lang.Class enumType;
    java.lang.String constName;

    public void <init>(java.lang.Class, java.lang.String)
    {
        sun.reflect.annotation.EnumConstantNotPresentExceptionProxy r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: sun.reflect.annotation.EnumConstantNotPresentExceptionProxy;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<sun.reflect.annotation.ExceptionProxy: void <init>()>();
        r0.<sun.reflect.annotation.EnumConstantNotPresentExceptionProxy: java.lang.Class enumType> = r1;
        r0.<sun.reflect.annotation.EnumConstantNotPresentExceptionProxy: java.lang.String constName> = r2;
        return;
    }

    protected java.lang.RuntimeException generateException()
    {
        sun.reflect.annotation.EnumConstantNotPresentExceptionProxy r0;
        java.lang.EnumConstantNotPresentException $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: sun.reflect.annotation.EnumConstantNotPresentExceptionProxy;
        $r1 = new java.lang.EnumConstantNotPresentException;
        $r2 = r0.<sun.reflect.annotation.EnumConstantNotPresentExceptionProxy: java.lang.Class enumType>;
        $r3 = r0.<sun.reflect.annotation.EnumConstantNotPresentExceptionProxy: java.lang.String constName>;
        specialinvoke $r1.<java.lang.EnumConstantNotPresentException: void <init>(java.lang.Class,java.lang.String)>($r2, $r3);
        return $r1;
    }
}
