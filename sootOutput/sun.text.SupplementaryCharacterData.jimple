public final class sun.text.SupplementaryCharacterData extends java.lang.Object implements java.lang.Cloneable
{
    private int[] dataTable;
    static final boolean $assertionsDisabled;

    public void <init>(int[])
    {
        sun.text.SupplementaryCharacterData r0;
        int[] r1;

        r0 := @this: sun.text.SupplementaryCharacterData;
        r1 := @parameter0: int[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.text.SupplementaryCharacterData: int[] dataTable> = r1;
        return;
    }

    public int getValue(int)
    {
        sun.text.SupplementaryCharacterData r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.AssertionError $r2;
        java.lang.String $r4, $r6;
        int[] $r7, $r8, $r9, $r10;

        r0 := @this: sun.text.SupplementaryCharacterData;
        i0 := @parameter0: int;
        $z0 = <sun.text.SupplementaryCharacterData: boolean $assertionsDisabled>;
        if $z0 != 0 goto label1;

        if i0 < 65536 goto label0;

        if i0 <= 1114111 goto label1;

     label0:
        $r2 = new java.lang.AssertionError;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid code point:");
        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);
        throw $r2;

     label1:
        i1 = 0;
        $r7 = r0.<sun.text.SupplementaryCharacterData: int[] dataTable>;
        $i6 = lengthof $r7;
        i2 = $i6 - 1;

     label2:
        $i7 = i1 + i2;
        i3 = $i7 / 2;
        $r8 = r0.<sun.text.SupplementaryCharacterData: int[] dataTable>;
        $i8 = $r8[i3];
        i4 = $i8 >> 8;
        $r9 = r0.<sun.text.SupplementaryCharacterData: int[] dataTable>;
        $i9 = i3 + 1;
        $i10 = $r9[$i9];
        i5 = $i10 >> 8;
        if i0 >= i4 goto label3;

        i2 = i3;
        goto label5;

     label3:
        $i11 = i5 - 1;
        if i0 <= $i11 goto label4;

        i1 = i3;
        goto label5;

     label4:
        $r10 = r0.<sun.text.SupplementaryCharacterData: int[] dataTable>;
        $i12 = $r10[i3];
        $i13 = $i12 & 255;
        return $i13;

     label5:
        goto label2;
    }

    public int[] getArray()
    {
        sun.text.SupplementaryCharacterData r0;
        int[] $r1;

        r0 := @this: sun.text.SupplementaryCharacterData;
        $r1 = r0.<sun.text.SupplementaryCharacterData: int[] dataTable>;
        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "sun/text/SupplementaryCharacterData";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <sun.text.SupplementaryCharacterData: boolean $assertionsDisabled> = $z1;
        return;
    }
}
