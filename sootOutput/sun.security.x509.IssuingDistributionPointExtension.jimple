public class sun.security.x509.IssuingDistributionPointExtension extends sun.security.x509.Extension implements sun.security.x509.CertAttrSet
{
    public static final java.lang.String IDENT;
    public static final java.lang.String NAME;
    public static final java.lang.String POINT;
    public static final java.lang.String REASONS;
    public static final java.lang.String ONLY_USER_CERTS;
    public static final java.lang.String ONLY_CA_CERTS;
    public static final java.lang.String ONLY_ATTRIBUTE_CERTS;
    public static final java.lang.String INDIRECT_CRL;
    private sun.security.x509.DistributionPointName distributionPoint;
    private sun.security.x509.ReasonFlags revocationReasons;
    private boolean hasOnlyUserCerts;
    private boolean hasOnlyCACerts;
    private boolean hasOnlyAttributeCerts;
    private boolean isIndirectCRL;
    private static final byte TAG_DISTRIBUTION_POINT;
    private static final byte TAG_ONLY_USER_CERTS;
    private static final byte TAG_ONLY_CA_CERTS;
    private static final byte TAG_ONLY_SOME_REASONS;
    private static final byte TAG_INDIRECT_CRL;
    private static final byte TAG_ONLY_ATTRIBUTE_CERTS;

    public void <init>(sun.security.x509.DistributionPointName, sun.security.x509.ReasonFlags, boolean, boolean, boolean, boolean) throws java.io.IOException
    {
        sun.security.x509.IssuingDistributionPointExtension r0;
        sun.security.x509.DistributionPointName r1;
        sun.security.x509.ReasonFlags r2;
        boolean z0, z1, z2, z3;
        java.lang.IllegalArgumentException $r3;
        sun.security.util.ObjectIdentifier $r4;

        r0 := @this: sun.security.x509.IssuingDistributionPointExtension;
        r1 := @parameter0: sun.security.x509.DistributionPointName;
        r2 := @parameter1: sun.security.x509.ReasonFlags;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        z2 := @parameter4: boolean;
        z3 := @parameter5: boolean;
        specialinvoke r0.<sun.security.x509.Extension: void <init>()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint> = null;
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons> = null;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts> = 0;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts> = 0;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts> = 0;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL> = 0;
        if z0 == 0 goto label0;

        if z1 != 0 goto label2;

        if z2 != 0 goto label2;

     label0:
        if z1 == 0 goto label1;

        if z0 != 0 goto label2;

        if z2 != 0 goto label2;

     label1:
        if z2 == 0 goto label3;

        if z0 != 0 goto label2;

        if z1 == 0 goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only one of hasOnlyUserCerts, hasOnlyCACerts, hasOnlyAttributeCerts may be set to true");
        throw $r3;

     label3:
        $r4 = <sun.security.x509.PKIXExtensions: sun.security.util.ObjectIdentifier IssuingDistributionPoint_Id>;
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.util.ObjectIdentifier extensionId> = $r4;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean critical> = 1;
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint> = r1;
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons> = r2;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts> = z0;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts> = z1;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts> = z2;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL> = z3;
        specialinvoke r0.<sun.security.x509.IssuingDistributionPointExtension: void encodeThis()>();
        return;
    }

    public void <init>(java.lang.Boolean, java.lang.Object) throws java.io.IOException
    {
        sun.security.x509.IssuingDistributionPointExtension r0;
        java.lang.Boolean r1;
        java.lang.Object r2;
        sun.security.util.DerValue r3, r5, $r10, $r17;
        sun.security.util.DerInputStream r4, $r13, $r14, $r16;
        sun.security.util.ObjectIdentifier $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        java.io.IOException $r7, $r12, $r19;
        byte[] $r8, $r9, $r11;
        byte $b0;
        int $i1, $i2;
        sun.security.x509.DistributionPointName $r15;
        sun.security.x509.ReasonFlags $r18;

        r0 := @this: sun.security.x509.IssuingDistributionPointExtension;
        r1 := @parameter0: java.lang.Boolean;
        r2 := @parameter1: java.lang.Object;
        specialinvoke r0.<sun.security.x509.Extension: void <init>()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint> = null;
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons> = null;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts> = 0;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts> = 0;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts> = 0;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL> = 0;
        $r6 = <sun.security.x509.PKIXExtensions: sun.security.util.ObjectIdentifier IssuingDistributionPoint_Id>;
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.util.ObjectIdentifier extensionId> = $r6;
        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean critical> = $z0;
        $z1 = r2 instanceof byte[];
        if $z1 != 0 goto label0;

        $r7 = new java.io.IOException;
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Illegal argument type");
        throw $r7;

     label0:
        $r8 = (byte[]) r2;
        $r9 = (byte[]) $r8;
        r0.<sun.security.x509.IssuingDistributionPointExtension: byte[] extensionValue> = $r9;
        $r10 = new sun.security.util.DerValue;
        $r11 = r0.<sun.security.x509.IssuingDistributionPointExtension: byte[] extensionValue>;
        specialinvoke $r10.<sun.security.util.DerValue: void <init>(byte[])>($r11);
        r3 = $r10;
        $b0 = r3.<sun.security.util.DerValue: byte tag>;
        if $b0 == 48 goto label1;

        $r12 = new java.io.IOException;
        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Invalid encoding for IssuingDistributionPointExtension.");
        throw $r12;

     label1:
        $r13 = r3.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        if $r13 == null goto label2;

        $r14 = r3.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i1 = virtualinvoke $r14.<sun.security.util.DerInputStream: int available()>();
        if $i1 != 0 goto label3;

     label2:
        return;

     label3:
        r4 = r3.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;

     label4:
        if r4 == null goto label12;

        $i2 = virtualinvoke r4.<sun.security.util.DerInputStream: int available()>();
        if $i2 == 0 goto label12;

        r5 = virtualinvoke r4.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $z2 = virtualinvoke r5.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(0);
        if $z2 == 0 goto label5;

        $z3 = virtualinvoke r5.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z3 == 0 goto label5;

        $r15 = new sun.security.x509.DistributionPointName;
        $r16 = r5.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $r17 = virtualinvoke $r16.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        specialinvoke $r15.<sun.security.x509.DistributionPointName: void <init>(sun.security.util.DerValue)>($r17);
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint> = $r15;
        goto label11;

     label5:
        $z4 = virtualinvoke r5.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(1);
        if $z4 == 0 goto label6;

        $z5 = virtualinvoke r5.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z5 != 0 goto label6;

        virtualinvoke r5.<sun.security.util.DerValue: void resetTag(byte)>(1);
        $z6 = virtualinvoke r5.<sun.security.util.DerValue: boolean getBoolean()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts> = $z6;
        goto label11;

     label6:
        $z7 = virtualinvoke r5.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(2);
        if $z7 == 0 goto label7;

        $z8 = virtualinvoke r5.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z8 != 0 goto label7;

        virtualinvoke r5.<sun.security.util.DerValue: void resetTag(byte)>(1);
        $z9 = virtualinvoke r5.<sun.security.util.DerValue: boolean getBoolean()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts> = $z9;
        goto label11;

     label7:
        $z10 = virtualinvoke r5.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(3);
        if $z10 == 0 goto label8;

        $z11 = virtualinvoke r5.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z11 != 0 goto label8;

        $r18 = new sun.security.x509.ReasonFlags;
        specialinvoke $r18.<sun.security.x509.ReasonFlags: void <init>(sun.security.util.DerValue)>(r5);
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons> = $r18;
        goto label11;

     label8:
        $z12 = virtualinvoke r5.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(4);
        if $z12 == 0 goto label9;

        $z13 = virtualinvoke r5.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z13 != 0 goto label9;

        virtualinvoke r5.<sun.security.util.DerValue: void resetTag(byte)>(1);
        $z14 = virtualinvoke r5.<sun.security.util.DerValue: boolean getBoolean()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL> = $z14;
        goto label11;

     label9:
        $z15 = virtualinvoke r5.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(5);
        if $z15 == 0 goto label10;

        $z16 = virtualinvoke r5.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z16 != 0 goto label10;

        virtualinvoke r5.<sun.security.util.DerValue: void resetTag(byte)>(1);
        $z17 = virtualinvoke r5.<sun.security.util.DerValue: boolean getBoolean()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts> = $z17;
        goto label11;

     label10:
        $r19 = new java.io.IOException;
        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>("Invalid encoding of IssuingDistributionPoint");
        throw $r19;

     label11:
        goto label4;

     label12:
        return;
    }

    public java.lang.String getName()
    {
        sun.security.x509.IssuingDistributionPointExtension r0;

        r0 := @this: sun.security.x509.IssuingDistributionPointExtension;
        return "IssuingDistributionPoint";
    }

    public void encode(java.io.OutputStream) throws java.io.IOException
    {
        sun.security.x509.IssuingDistributionPointExtension r0;
        java.io.OutputStream r1;
        sun.security.util.DerOutputStream $r2, r3;
        byte[] $r4, $r6;
        sun.security.util.ObjectIdentifier $r5;

        r0 := @this: sun.security.x509.IssuingDistributionPointExtension;
        r1 := @parameter0: java.io.OutputStream;
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        $r4 = r0.<sun.security.x509.IssuingDistributionPointExtension: byte[] extensionValue>;
        if $r4 != null goto label0;

        $r5 = <sun.security.x509.PKIXExtensions: sun.security.util.ObjectIdentifier IssuingDistributionPoint_Id>;
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.util.ObjectIdentifier extensionId> = $r5;
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean critical> = 0;
        specialinvoke r0.<sun.security.x509.IssuingDistributionPointExtension: void encodeThis()>();

     label0:
        specialinvoke r0.<sun.security.x509.Extension: void encode(sun.security.util.DerOutputStream)>(r3);
        $r6 = virtualinvoke r3.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r6);
        return;
    }

    public void set(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        sun.security.x509.IssuingDistributionPointExtension r0;
        java.lang.String r1, $r20;
        java.lang.Object r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.io.IOException $r3, $r5, $r6, $r8, $r10, $r12, $r14;
        sun.security.x509.DistributionPointName $r4;
        java.lang.Boolean $r7, $r9, $r11, $r13;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19;

        r0 := @this: sun.security.x509.IssuingDistributionPointExtension;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("point");
        if $z0 == 0 goto label1;

        $z1 = r2 instanceof sun.security.x509.DistributionPointName;
        if $z1 != 0 goto label0;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Attribute value should be of type DistributionPointName.");
        throw $r3;

     label0:
        $r4 = (sun.security.x509.DistributionPointName) r2;
        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint> = $r4;
        goto label11;

     label1:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("reasons");
        if $z2 == 0 goto label2;

        $z3 = r2 instanceof sun.security.x509.ReasonFlags;
        if $z3 != 0 goto label11;

        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Attribute value should be of type ReasonFlags.");
        throw $r5;

     label2:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("indirect_crl");
        if $z4 == 0 goto label4;

        $z5 = r2 instanceof java.lang.Boolean;
        if $z5 != 0 goto label3;

        $r6 = new java.io.IOException;
        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Attribute value should be of type Boolean.");
        throw $r6;

     label3:
        $r7 = (java.lang.Boolean) r2;
        $z6 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL> = $z6;
        goto label11;

     label4:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("only_user_certs");
        if $z7 == 0 goto label6;

        $z8 = r2 instanceof java.lang.Boolean;
        if $z8 != 0 goto label5;

        $r8 = new java.io.IOException;
        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Attribute value should be of type Boolean.");
        throw $r8;

     label5:
        $r9 = (java.lang.Boolean) r2;
        $z9 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts> = $z9;
        goto label11;

     label6:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("only_ca_certs");
        if $z10 == 0 goto label8;

        $z11 = r2 instanceof java.lang.Boolean;
        if $z11 != 0 goto label7;

        $r10 = new java.io.IOException;
        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("Attribute value should be of type Boolean.");
        throw $r10;

     label7:
        $r11 = (java.lang.Boolean) r2;
        $z12 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts> = $z12;
        goto label11;

     label8:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("only_attribute_certs");
        if $z13 == 0 goto label10;

        $z14 = r2 instanceof java.lang.Boolean;
        if $z14 != 0 goto label9;

        $r12 = new java.io.IOException;
        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Attribute value should be of type Boolean.");
        throw $r12;

     label9:
        $r13 = (java.lang.Boolean) r2;
        $z15 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts> = $z15;
        goto label11;

     label10:
        $r14 = new java.io.IOException;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute name [");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not recognized by ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CertAttrSet:IssuingDistributionPointExtension.");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r20);
        throw $r14;

     label11:
        specialinvoke r0.<sun.security.x509.IssuingDistributionPointExtension: void encodeThis()>();
        return;
    }

    public java.lang.Object get(java.lang.String) throws java.io.IOException
    {
        sun.security.x509.IssuingDistributionPointExtension r0;
        java.lang.String r1, $r14;
        java.lang.StringBuilder $r2, $r10, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        sun.security.x509.DistributionPointName $r3;
        java.lang.Boolean $r4, $r6, $r7, $r8;
        sun.security.x509.ReasonFlags $r5;
        java.io.IOException $r9;

        r0 := @this: sun.security.x509.IssuingDistributionPointExtension;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("point");
        if $z0 == 0 goto label0;

        $r3 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint>;
        return $r3;

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("indirect_crl");
        if $z1 == 0 goto label1;

        $z2 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL>;
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);
        return $r4;

     label1:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("reasons");
        if $z3 == 0 goto label2;

        $r5 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons>;
        return $r5;

     label2:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("only_user_certs");
        if $z4 == 0 goto label3;

        $z5 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts>;
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);
        return $r6;

     label3:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("only_ca_certs");
        if $z6 == 0 goto label4;

        $z7 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts>;
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);
        return $r7;

     label4:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("only_attribute_certs");
        if $z8 == 0 goto label5;

        $z9 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts>;
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9);
        return $r8;

     label5:
        $r9 = new java.io.IOException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute name [");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not recognized by ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CertAttrSet:IssuingDistributionPointExtension.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14);
        throw $r9;
    }

    public void delete(java.lang.String) throws java.io.IOException
    {
        sun.security.x509.IssuingDistributionPointExtension r0;
        java.lang.String r1, $r8;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.IOException $r3;

        r0 := @this: sun.security.x509.IssuingDistributionPointExtension;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("point");
        if $z0 == 0 goto label0;

        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint> = null;
        goto label6;

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("indirect_crl");
        if $z1 == 0 goto label1;

        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL> = 0;
        goto label6;

     label1:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("reasons");
        if $z2 == 0 goto label2;

        r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons> = null;
        goto label6;

     label2:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("only_user_certs");
        if $z3 == 0 goto label3;

        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts> = 0;
        goto label6;

     label3:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("only_ca_certs");
        if $z4 == 0 goto label4;

        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts> = 0;
        goto label6;

     label4:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("only_attribute_certs");
        if $z5 == 0 goto label5;

        r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts> = 0;
        goto label6;

     label5:
        $r3 = new java.io.IOException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute name [");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not recognized by ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CertAttrSet:IssuingDistributionPointExtension.");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r8);
        throw $r3;

     label6:
        specialinvoke r0.<sun.security.x509.IssuingDistributionPointExtension: void encodeThis()>();
        return;
    }

    public java.util.Enumeration getElements()
    {
        sun.security.x509.IssuingDistributionPointExtension r0;
        sun.security.x509.AttributeNameEnumeration $r1, r2;
        java.util.Enumeration $r3;

        r0 := @this: sun.security.x509.IssuingDistributionPointExtension;
        $r1 = new sun.security.x509.AttributeNameEnumeration;
        specialinvoke $r1.<sun.security.x509.AttributeNameEnumeration: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("point");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("reasons");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("only_user_certs");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("only_ca_certs");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("only_attribute_certs");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("indirect_crl");
        $r3 = virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: java.util.Enumeration elements()>();
        return $r3;
    }

    private void encodeThis() throws java.io.IOException
    {
        sun.security.x509.IssuingDistributionPointExtension r0;
        sun.security.util.DerOutputStream r1, r2, $r5, $r7, $r9, r10, $r11, r12, $r14, r15, $r17, r18, $r19, r20, $r21, r22;
        sun.security.x509.DistributionPointName $r3, $r6, $r8;
        sun.security.x509.ReasonFlags $r4, $r13, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        byte[] $r23;

        r0 := @this: sun.security.x509.IssuingDistributionPointExtension;
        $r3 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint>;
        if $r3 != null goto label0;

        $r4 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons>;
        if $r4 != null goto label0;

        $z0 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts>;
        if $z0 != 0 goto label0;

        $z1 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts>;
        if $z1 != 0 goto label0;

        $z2 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts>;
        if $z2 != 0 goto label0;

        $z3 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL>;
        if $z3 != 0 goto label0;

        r0.<sun.security.x509.IssuingDistributionPointExtension: byte[] extensionValue> = null;
        return;

     label0:
        $r5 = new sun.security.util.DerOutputStream;
        specialinvoke $r5.<sun.security.util.DerOutputStream: void <init>()>();
        r1 = $r5;
        $r6 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint>;
        if $r6 == null goto label1;

        $r7 = new sun.security.util.DerOutputStream;
        specialinvoke $r7.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r7;
        $r8 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint>;
        virtualinvoke $r8.<sun.security.x509.DistributionPointName: void encode(sun.security.util.DerOutputStream)>(r2);
        $b0 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 0);
        virtualinvoke r1.<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>($b0, r2);

     label1:
        $z4 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts>;
        if $z4 == 0 goto label2;

        $r9 = new sun.security.util.DerOutputStream;
        specialinvoke $r9.<sun.security.util.DerOutputStream: void <init>()>();
        r10 = $r9;
        $z5 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts>;
        virtualinvoke r10.<sun.security.util.DerOutputStream: void putBoolean(boolean)>($z5);
        $b1 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 0, 1);
        virtualinvoke r1.<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>($b1, r10);

     label2:
        $z6 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts>;
        if $z6 == 0 goto label3;

        $r11 = new sun.security.util.DerOutputStream;
        specialinvoke $r11.<sun.security.util.DerOutputStream: void <init>()>();
        r12 = $r11;
        $z7 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts>;
        virtualinvoke r12.<sun.security.util.DerOutputStream: void putBoolean(boolean)>($z7);
        $b2 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 0, 2);
        virtualinvoke r1.<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>($b2, r12);

     label3:
        $r13 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons>;
        if $r13 == null goto label4;

        $r14 = new sun.security.util.DerOutputStream;
        specialinvoke $r14.<sun.security.util.DerOutputStream: void <init>()>();
        r15 = $r14;
        $r16 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons>;
        virtualinvoke $r16.<sun.security.x509.ReasonFlags: void encode(sun.security.util.DerOutputStream)>(r15);
        $b3 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 0, 3);
        virtualinvoke r1.<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>($b3, r15);

     label4:
        $z8 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL>;
        if $z8 == 0 goto label5;

        $r17 = new sun.security.util.DerOutputStream;
        specialinvoke $r17.<sun.security.util.DerOutputStream: void <init>()>();
        r18 = $r17;
        $z9 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL>;
        virtualinvoke r18.<sun.security.util.DerOutputStream: void putBoolean(boolean)>($z9);
        $b4 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 0, 4);
        virtualinvoke r1.<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>($b4, r18);

     label5:
        $z10 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts>;
        if $z10 == 0 goto label6;

        $r19 = new sun.security.util.DerOutputStream;
        specialinvoke $r19.<sun.security.util.DerOutputStream: void <init>()>();
        r20 = $r19;
        $z11 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts>;
        virtualinvoke r20.<sun.security.util.DerOutputStream: void putBoolean(boolean)>($z11);
        $b5 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 0, 5);
        virtualinvoke r1.<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>($b5, r20);

     label6:
        $r21 = new sun.security.util.DerOutputStream;
        specialinvoke $r21.<sun.security.util.DerOutputStream: void <init>()>();
        r22 = $r21;
        virtualinvoke r22.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r1);
        $r23 = virtualinvoke r22.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        r0.<sun.security.x509.IssuingDistributionPointExtension: byte[] extensionValue> = $r23;
        return;
    }

    public java.lang.String toString()
    {
        sun.security.x509.IssuingDistributionPointExtension r0;
        java.lang.StringBuilder $r1, r2, $r13, $r17, $r21, $r25;
        java.lang.String $r3, $r12, $r16, $r20, $r24, $r28;
        sun.security.x509.DistributionPointName $r5, $r6;
        sun.security.x509.ReasonFlags $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: sun.security.x509.IssuingDistributionPointExtension;
        $r1 = new java.lang.StringBuilder;
        $r3 = specialinvoke r0.<sun.security.x509.Extension: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IssuingDistributionPoint [\n  ");
        $r5 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint>;
        if $r5 == null goto label0;

        $r6 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.DistributionPointName distributionPoint>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

     label0:
        $r8 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons>;
        if $r8 == null goto label1;

        $r9 = r0.<sun.security.x509.IssuingDistributionPointExtension: sun.security.x509.ReasonFlags revocationReasons>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

     label1:
        $z0 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyUserCerts>;
        if $z0 == 0 goto label2;

        $r12 = "  Only contains user certs: true";
        goto label3;

     label2:
        $r12 = "  Only contains user certs: false";

     label3:
        $r13 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $z1 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyCACerts>;
        if $z1 == 0 goto label4;

        $r16 = "  Only contains CA certs: true";
        goto label5;

     label4:
        $r16 = "  Only contains CA certs: false";

     label5:
        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $z2 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean hasOnlyAttributeCerts>;
        if $z2 == 0 goto label6;

        $r20 = "  Only contains attribute certs: true";
        goto label7;

     label6:
        $r20 = "  Only contains attribute certs: false";

     label7:
        $r21 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $z3 = r0.<sun.security.x509.IssuingDistributionPointExtension: boolean isIndirectCRL>;
        if $z3 == 0 goto label8;

        $r24 = "  Indirect CRL: true";
        goto label9;

     label8:
        $r24 = "  Indirect CRL: false";

     label9:
        $r25 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");
        $r28 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r28;
    }
}
