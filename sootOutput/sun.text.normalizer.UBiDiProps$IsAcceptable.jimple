final class sun.text.normalizer.UBiDiProps$IsAcceptable extends java.lang.Object implements sun.text.normalizer.ICUBinary$Authenticate
{
    final sun.text.normalizer.UBiDiProps this$0;

    private void <init>(sun.text.normalizer.UBiDiProps)
    {
        sun.text.normalizer.UBiDiProps$IsAcceptable r0;
        sun.text.normalizer.UBiDiProps r1;

        r0 := @this: sun.text.normalizer.UBiDiProps$IsAcceptable;
        r1 := @parameter0: sun.text.normalizer.UBiDiProps;
        r0.<sun.text.normalizer.UBiDiProps$IsAcceptable: sun.text.normalizer.UBiDiProps this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean isDataVersionAcceptable(byte[])
    {
        sun.text.normalizer.UBiDiProps$IsAcceptable r0;
        byte[] r1;
        byte $b0, $b1, $b2;
        boolean $z0;

        r0 := @this: sun.text.normalizer.UBiDiProps$IsAcceptable;
        r1 := @parameter0: byte[];
        $b0 = r1[0];
        if $b0 != 1 goto label0;

        $b1 = r1[2];
        if $b1 != 5 goto label0;

        $b2 = r1[3];
        if $b2 != 2 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    void <init>(sun.text.normalizer.UBiDiProps, sun.text.normalizer.UBiDiProps$1)
    {
        sun.text.normalizer.UBiDiProps$IsAcceptable r0;
        sun.text.normalizer.UBiDiProps r1;
        sun.text.normalizer.UBiDiProps$1 r2;

        r0 := @this: sun.text.normalizer.UBiDiProps$IsAcceptable;
        r1 := @parameter0: sun.text.normalizer.UBiDiProps;
        r2 := @parameter1: sun.text.normalizer.UBiDiProps$1;
        specialinvoke r0.<sun.text.normalizer.UBiDiProps$IsAcceptable: void <init>(sun.text.normalizer.UBiDiProps)>(r1);
        return;
    }
}
