public class org.apache.coyote.http11.filters.ChunkedOutputFilter extends java.lang.Object implements org.apache.coyote.http11.OutputFilter
{
    protected static final org.apache.tomcat.util.buf.ByteChunk END_CHUNK;
    protected org.apache.coyote.OutputBuffer buffer;
    protected byte[] chunkLength;
    protected org.apache.tomcat.util.buf.ByteChunk chunkHeader;

    static void <clinit>()
    {
        org.apache.tomcat.util.buf.ByteChunk $r0, $r3;
        byte[] r1, $r2;
        int $i0;

        $r0 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r0.<org.apache.tomcat.util.buf.ByteChunk: void <init>()>();
        <org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.tomcat.util.buf.ByteChunk END_CHUNK> = $r0;
        $r2 = newarray (byte)[5];
        $r2[0] = 48;
        $r2[1] = 13;
        $r2[2] = 10;
        $r2[3] = 13;
        $r2[4] = 10;
        r1 = $r2;
        $r3 = <org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.tomcat.util.buf.ByteChunk END_CHUNK>;
        $i0 = lengthof r1;
        virtualinvoke $r3.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>(r1, 0, $i0);
        return;
    }

    public void <init>()
    {
        org.apache.coyote.http11.filters.ChunkedOutputFilter r0;
        byte[] $r1, $r3, $r4, $r5;
        org.apache.tomcat.util.buf.ByteChunk $r2;

        r0 := @this: org.apache.coyote.http11.filters.ChunkedOutputFilter;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (byte)[10];
        r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: byte[] chunkLength> = $r1;
        $r2 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r2.<org.apache.tomcat.util.buf.ByteChunk: void <init>()>();
        r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.tomcat.util.buf.ByteChunk chunkHeader> = $r2;
        $r3 = newarray (byte)[10];
        r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: byte[] chunkLength> = $r3;
        $r4 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: byte[] chunkLength>;
        $r4[8] = 13;
        $r5 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: byte[] chunkLength>;
        $r5[9] = 10;
        return;
    }

    public int doWrite(org.apache.tomcat.util.buf.ByteChunk, org.apache.coyote.Response) throws java.io.IOException
    {
        org.apache.coyote.http11.filters.ChunkedOutputFilter r0;
        org.apache.tomcat.util.buf.ByteChunk r1, $r4, $r7, $r9, $r12;
        org.apache.coyote.Response r2;
        int i0, i1, i2, i3, $i4, $i6, $i7;
        byte[] $r3, $r5, $r10;
        byte $b5;
        org.apache.coyote.OutputBuffer $r6, $r8, $r11;

        r0 := @this: org.apache.coyote.http11.filters.ChunkedOutputFilter;
        r1 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        r2 := @parameter1: org.apache.coyote.Response;
        i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        if i0 > 0 goto label0;

        return 0;

     label0:
        i1 = 7;
        i2 = i0;
        goto label2;

     label1:
        i3 = i2 % 16;
        i2 = i2 / 16;
        $r3 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: byte[] chunkLength>;
        $i4 = i1;
        i1 = i1 + -1;
        $b5 = staticinvoke <org.apache.tomcat.util.buf.HexUtils: byte getHex(int)>(i3);
        $r3[$i4] = $b5;

     label2:
        if i2 > 0 goto label1;

        $r4 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.tomcat.util.buf.ByteChunk chunkHeader>;
        $r5 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: byte[] chunkLength>;
        $i6 = i1 + 1;
        $i7 = 9 - i1;
        virtualinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>($r5, $i6, $i7);
        $r6 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.coyote.OutputBuffer buffer>;
        $r7 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.tomcat.util.buf.ByteChunk chunkHeader>;
        interfaceinvoke $r6.<org.apache.coyote.OutputBuffer: int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)>($r7, r2);
        $r8 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.coyote.OutputBuffer buffer>;
        interfaceinvoke $r8.<org.apache.coyote.OutputBuffer: int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)>(r1, r2);
        $r9 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.tomcat.util.buf.ByteChunk chunkHeader>;
        $r10 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: byte[] chunkLength>;
        virtualinvoke $r9.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>($r10, 8, 2);
        $r11 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.coyote.OutputBuffer buffer>;
        $r12 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.tomcat.util.buf.ByteChunk chunkHeader>;
        interfaceinvoke $r11.<org.apache.coyote.OutputBuffer: int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)>($r12, r2);
        return i0;
    }

    public long getBytesWritten()
    {
        org.apache.coyote.http11.filters.ChunkedOutputFilter r0;
        org.apache.coyote.OutputBuffer $r1;
        long $l0;

        r0 := @this: org.apache.coyote.http11.filters.ChunkedOutputFilter;
        $r1 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.coyote.OutputBuffer buffer>;
        $l0 = interfaceinvoke $r1.<org.apache.coyote.OutputBuffer: long getBytesWritten()>();
        return $l0;
    }

    public void setResponse(org.apache.coyote.Response)
    {
        org.apache.coyote.http11.filters.ChunkedOutputFilter r0;
        org.apache.coyote.Response r1;

        r0 := @this: org.apache.coyote.http11.filters.ChunkedOutputFilter;
        r1 := @parameter0: org.apache.coyote.Response;
        return;
    }

    public void setBuffer(org.apache.coyote.OutputBuffer)
    {
        org.apache.coyote.http11.filters.ChunkedOutputFilter r0;
        org.apache.coyote.OutputBuffer r1;

        r0 := @this: org.apache.coyote.http11.filters.ChunkedOutputFilter;
        r1 := @parameter0: org.apache.coyote.OutputBuffer;
        r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.coyote.OutputBuffer buffer> = r1;
        return;
    }

    public long end() throws java.io.IOException
    {
        org.apache.coyote.http11.filters.ChunkedOutputFilter r0;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        org.apache.coyote.OutputBuffer $r2;

        r0 := @this: org.apache.coyote.http11.filters.ChunkedOutputFilter;
        $r2 = r0.<org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.coyote.OutputBuffer buffer>;
        $r1 = <org.apache.coyote.http11.filters.ChunkedOutputFilter: org.apache.tomcat.util.buf.ByteChunk END_CHUNK>;
        interfaceinvoke $r2.<org.apache.coyote.OutputBuffer: int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)>($r1, null);
        return 0L;
    }

    public void recycle()
    {
        org.apache.coyote.http11.filters.ChunkedOutputFilter r0;

        r0 := @this: org.apache.coyote.http11.filters.ChunkedOutputFilter;
        return;
    }
}
