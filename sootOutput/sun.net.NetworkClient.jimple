public class sun.net.NetworkClient extends java.lang.Object
{
    public static final int DEFAULT_READ_TIMEOUT;
    public static final int DEFAULT_CONNECT_TIMEOUT;
    protected java.net.Proxy proxy;
    protected java.net.Socket serverSocket;
    public java.io.PrintStream serverOutput;
    public java.io.InputStream serverInput;
    protected static int defaultSoTimeout;
    protected static int defaultConnectTimeout;
    protected int readTimeout;
    protected int connectTimeout;
    protected static java.lang.String encoding;

    private static boolean isASCIISuperset(java.lang.String) throws java.lang.Exception
    {
        java.lang.String r0, r1;
        byte[] r2, r3, $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        r1 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_.!~*\'();/?:@&=+$,";
        $r4 = newarray (byte)[81];
        $r4[0] = 48;
        $r4[1] = 49;
        $r4[2] = 50;
        $r4[3] = 51;
        $r4[4] = 52;
        $r4[5] = 53;
        $r4[6] = 54;
        $r4[7] = 55;
        $r4[8] = 56;
        $r4[9] = 57;
        $r4[10] = 65;
        $r4[11] = 66;
        $r4[12] = 67;
        $r4[13] = 68;
        $r4[14] = 69;
        $r4[15] = 70;
        $r4[16] = 71;
        $r4[17] = 72;
        $r4[18] = 73;
        $r4[19] = 74;
        $r4[20] = 75;
        $r4[21] = 76;
        $r4[22] = 77;
        $r4[23] = 78;
        $r4[24] = 79;
        $r4[25] = 80;
        $r4[26] = 81;
        $r4[27] = 82;
        $r4[28] = 83;
        $r4[29] = 84;
        $r4[30] = 85;
        $r4[31] = 86;
        $r4[32] = 87;
        $r4[33] = 88;
        $r4[34] = 89;
        $r4[35] = 90;
        $r4[36] = 97;
        $r4[37] = 98;
        $r4[38] = 99;
        $r4[39] = 100;
        $r4[40] = 101;
        $r4[41] = 102;
        $r4[42] = 103;
        $r4[43] = 104;
        $r4[44] = 105;
        $r4[45] = 106;
        $r4[46] = 107;
        $r4[47] = 108;
        $r4[48] = 109;
        $r4[49] = 110;
        $r4[50] = 111;
        $r4[51] = 112;
        $r4[52] = 113;
        $r4[53] = 114;
        $r4[54] = 115;
        $r4[55] = 116;
        $r4[56] = 117;
        $r4[57] = 118;
        $r4[58] = 119;
        $r4[59] = 120;
        $r4[60] = 121;
        $r4[61] = 122;
        $r4[62] = 45;
        $r4[63] = 95;
        $r4[64] = 46;
        $r4[65] = 33;
        $r4[66] = 126;
        $r4[67] = 42;
        $r4[68] = 39;
        $r4[69] = 40;
        $r4[70] = 41;
        $r4[71] = 59;
        $r4[72] = 47;
        $r4[73] = 63;
        $r4[74] = 58;
        $r4[75] = 64;
        $r4[76] = 38;
        $r4[77] = 61;
        $r4[78] = 43;
        $r4[79] = 36;
        $r4[80] = 44;
        r2 = $r4;
        r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>(r0);
        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r3, r2);
        return $z0;
    }

    public void openServer(java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        sun.net.NetworkClient r0;
        java.lang.String r1, $r9, $r13, $r16;
        int i0;
        java.io.UnsupportedEncodingException r2, $r10;
        java.net.Socket $r3, $r4, $r7, $r18;
        java.io.PrintStream $r5;
        java.io.BufferedOutputStream $r6;
        java.io.OutputStream $r8;
        java.lang.InternalError $r11;
        java.lang.StringBuilder $r12, $r14, $r15;
        java.io.BufferedInputStream $r17;
        java.io.InputStream $r19;

        r0 := @this: sun.net.NetworkClient;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r3 = r0.<sun.net.NetworkClient: java.net.Socket serverSocket>;
        if $r3 == null goto label0;

        virtualinvoke r0.<sun.net.NetworkClient: void closeServer()>();

     label0:
        $r4 = virtualinvoke r0.<sun.net.NetworkClient: java.net.Socket doConnect(java.lang.String,int)>(r1, i0);
        r0.<sun.net.NetworkClient: java.net.Socket serverSocket> = $r4;

     label1:
        $r5 = new java.io.PrintStream;
        $r6 = new java.io.BufferedOutputStream;
        $r7 = r0.<sun.net.NetworkClient: java.net.Socket serverSocket>;
        $r8 = virtualinvoke $r7.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        specialinvoke $r6.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r8);
        $r9 = <sun.net.NetworkClient: java.lang.String encoding>;
        specialinvoke $r5.<java.io.PrintStream: void <init>(java.io.OutputStream,boolean,java.lang.String)>($r6, 1, $r9);
        r0.<sun.net.NetworkClient: java.io.PrintStream serverOutput> = $r5;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r2 = $r10;
        $r11 = new java.lang.InternalError;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = <sun.net.NetworkClient: java.lang.String encoding>;
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoding not found");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.lang.InternalError: void <init>(java.lang.String)>($r16);
        throw $r11;

     label4:
        $r17 = new java.io.BufferedInputStream;
        $r18 = r0.<sun.net.NetworkClient: java.net.Socket serverSocket>;
        $r19 = virtualinvoke $r18.<java.net.Socket: java.io.InputStream getInputStream()>();
        specialinvoke $r17.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r19);
        r0.<sun.net.NetworkClient: java.io.InputStream serverInput> = $r17;
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    protected java.net.Socket doConnect(java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        sun.net.NetworkClient r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.net.Proxy$Type $r2, $r6, $r10, $r11;
        java.net.Socket r3, $r12;
        java.net.Proxy $r4, $r5, $r9, $r13;
        sun.net.NetworkClient$2 $r7;
        java.lang.Object $r8;
        java.net.InetSocketAddress $r14, $r15, $r16;

        r0 := @this: sun.net.NetworkClient;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r4 = r0.<sun.net.NetworkClient: java.net.Proxy proxy>;
        if $r4 == null goto label2;

        $r5 = r0.<sun.net.NetworkClient: java.net.Proxy proxy>;
        $r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>();
        $r2 = <java.net.Proxy$Type: java.net.Proxy$Type SOCKS>;
        if $r6 != $r2 goto label0;

        $r7 = new sun.net.NetworkClient$2;
        specialinvoke $r7.<sun.net.NetworkClient$2: void <init>(sun.net.NetworkClient)>(r0);
        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r7);
        r3 = (java.net.Socket) $r8;
        goto label3;

     label0:
        $r9 = r0.<sun.net.NetworkClient: java.net.Proxy proxy>;
        $r10 = virtualinvoke $r9.<java.net.Proxy: java.net.Proxy$Type type()>();
        $r11 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;
        if $r10 != $r11 goto label1;

        r3 = virtualinvoke r0.<sun.net.NetworkClient: java.net.Socket createSocket()>();
        goto label3;

     label1:
        $r12 = new java.net.Socket;
        $r13 = <java.net.Proxy: java.net.Proxy NO_PROXY>;
        specialinvoke $r12.<java.net.Socket: void <init>(java.net.Proxy)>($r13);
        r3 = $r12;
        goto label3;

     label2:
        r3 = virtualinvoke r0.<sun.net.NetworkClient: java.net.Socket createSocket()>();

     label3:
        $i1 = r0.<sun.net.NetworkClient: int connectTimeout>;
        if $i1 < 0 goto label4;

        $r14 = new java.net.InetSocketAddress;
        specialinvoke $r14.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r1, i0);
        $i2 = r0.<sun.net.NetworkClient: int connectTimeout>;
        virtualinvoke r3.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r14, $i2);
        goto label6;

     label4:
        $i3 = <sun.net.NetworkClient: int defaultConnectTimeout>;
        if $i3 <= 0 goto label5;

        $r15 = new java.net.InetSocketAddress;
        specialinvoke $r15.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r1, i0);
        $i4 = <sun.net.NetworkClient: int defaultConnectTimeout>;
        virtualinvoke r3.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r15, $i4);
        goto label6;

     label5:
        $r16 = new java.net.InetSocketAddress;
        specialinvoke $r16.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r1, i0);
        virtualinvoke r3.<java.net.Socket: void connect(java.net.SocketAddress)>($r16);

     label6:
        $i5 = r0.<sun.net.NetworkClient: int readTimeout>;
        if $i5 < 0 goto label7;

        $i6 = r0.<sun.net.NetworkClient: int readTimeout>;
        virtualinvoke r3.<java.net.Socket: void setSoTimeout(int)>($i6);
        goto label8;

     label7:
        $i7 = <sun.net.NetworkClient: int defaultSoTimeout>;
        if $i7 <= 0 goto label8;

        $i8 = <sun.net.NetworkClient: int defaultSoTimeout>;
        virtualinvoke r3.<java.net.Socket: void setSoTimeout(int)>($i8);

     label8:
        return r3;
    }

    protected java.net.Socket createSocket() throws java.io.IOException
    {
        sun.net.NetworkClient r0;
        java.net.Socket $r1;

        r0 := @this: sun.net.NetworkClient;
        $r1 = new java.net.Socket;
        specialinvoke $r1.<java.net.Socket: void <init>()>();
        return $r1;
    }

    protected java.net.InetAddress getLocalAddress() throws java.io.IOException
    {
        sun.net.NetworkClient r0;
        java.net.Socket $r1;
        java.io.IOException $r2;
        sun.net.NetworkClient$3 $r3;
        java.lang.Object $r4;
        java.net.InetAddress $r5;

        r0 := @this: sun.net.NetworkClient;
        $r1 = r0.<sun.net.NetworkClient: java.net.Socket serverSocket>;
        if $r1 != null goto label0;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("not connected");
        throw $r2;

     label0:
        $r3 = new sun.net.NetworkClient$3;
        specialinvoke $r3.<sun.net.NetworkClient$3: void <init>(sun.net.NetworkClient)>(r0);
        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);
        $r5 = (java.net.InetAddress) $r4;
        return $r5;
    }

    public void closeServer() throws java.io.IOException
    {
        sun.net.NetworkClient r0;
        boolean $z0;
        java.net.Socket $r1;

        r0 := @this: sun.net.NetworkClient;
        $z0 = virtualinvoke r0.<sun.net.NetworkClient: boolean serverIsOpen()>();
        if $z0 != 0 goto label0;

        return;

     label0:
        $r1 = r0.<sun.net.NetworkClient: java.net.Socket serverSocket>;
        virtualinvoke $r1.<java.net.Socket: void close()>();
        r0.<sun.net.NetworkClient: java.net.Socket serverSocket> = null;
        r0.<sun.net.NetworkClient: java.io.InputStream serverInput> = null;
        r0.<sun.net.NetworkClient: java.io.PrintStream serverOutput> = null;
        return;
    }

    public boolean serverIsOpen()
    {
        sun.net.NetworkClient r0;
        java.net.Socket $r1;
        boolean $z0;

        r0 := @this: sun.net.NetworkClient;
        $r1 = r0.<sun.net.NetworkClient: java.net.Socket serverSocket>;
        if $r1 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void <init>(java.lang.String, int) throws java.io.IOException
    {
        sun.net.NetworkClient r0;
        java.lang.String r1;
        int i0;
        java.net.Proxy $r2;

        r0 := @this: sun.net.NetworkClient;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = <java.net.Proxy: java.net.Proxy NO_PROXY>;
        r0.<sun.net.NetworkClient: java.net.Proxy proxy> = $r2;
        r0.<sun.net.NetworkClient: java.net.Socket serverSocket> = null;
        r0.<sun.net.NetworkClient: int readTimeout> = -1;
        r0.<sun.net.NetworkClient: int connectTimeout> = -1;
        virtualinvoke r0.<sun.net.NetworkClient: void openServer(java.lang.String,int)>(r1, i0);
        return;
    }

    public void <init>()
    {
        sun.net.NetworkClient r0;
        java.net.Proxy $r1;

        r0 := @this: sun.net.NetworkClient;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = <java.net.Proxy: java.net.Proxy NO_PROXY>;
        r0.<sun.net.NetworkClient: java.net.Proxy proxy> = $r1;
        r0.<sun.net.NetworkClient: java.net.Socket serverSocket> = null;
        r0.<sun.net.NetworkClient: int readTimeout> = -1;
        r0.<sun.net.NetworkClient: int connectTimeout> = -1;
        return;
    }

    public void setConnectTimeout(int)
    {
        sun.net.NetworkClient r0;
        int i0;

        r0 := @this: sun.net.NetworkClient;
        i0 := @parameter0: int;
        r0.<sun.net.NetworkClient: int connectTimeout> = i0;
        return;
    }

    public int getConnectTimeout()
    {
        sun.net.NetworkClient r0;
        int $i0;

        r0 := @this: sun.net.NetworkClient;
        $i0 = r0.<sun.net.NetworkClient: int connectTimeout>;
        return $i0;
    }

    public void setReadTimeout(int)
    {
        sun.net.NetworkClient r0;
        int i0;
        java.io.IOException r1, $r4;
        java.net.Socket $r2, $r3;

        r0 := @this: sun.net.NetworkClient;
        i0 := @parameter0: int;
        if i0 != -1 goto label0;

        i0 = <sun.net.NetworkClient: int defaultSoTimeout>;

     label0:
        $r2 = r0.<sun.net.NetworkClient: java.net.Socket serverSocket>;
        if $r2 == null goto label4;

        if i0 < 0 goto label4;

     label1:
        $r3 = r0.<sun.net.NetworkClient: java.net.Socket serverSocket>;
        virtualinvoke $r3.<java.net.Socket: void setSoTimeout(int)>(i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;
        r1 = $r4;

     label4:
        r0.<sun.net.NetworkClient: int readTimeout> = i0;
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int getReadTimeout()
    {
        sun.net.NetworkClient r0;
        int $i0;

        r0 := @this: sun.net.NetworkClient;
        $i0 = r0.<sun.net.NetworkClient: int readTimeout>;
        return $i0;
    }

    static void <clinit>()
    {
        int[] r0, $r3;
        java.lang.String[] r1, $r4;
        java.lang.Exception r2, $r9;
        sun.net.NetworkClient$1 $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r7, $r8;
        boolean $z0;

        $r3 = newarray (int)[2];
        $r3[0] = 0;
        $r3[1] = 0;
        r0 = $r3;
        $r4 = newarray (java.lang.String)[1];
        $r4[0] = null;
        r1 = $r4;
        $r5 = new sun.net.NetworkClient$1;
        specialinvoke $r5.<sun.net.NetworkClient$1: void <init>(int[],java.lang.String[])>(r0, r1);
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r5);
        $i0 = r0[0];
        if $i0 == 0 goto label0;

        $i1 = r0[0];
        <sun.net.NetworkClient: int defaultSoTimeout> = $i1;

     label0:
        $i2 = r0[1];
        if $i2 == 0 goto label1;

        $i3 = r0[1];
        <sun.net.NetworkClient: int defaultConnectTimeout> = $i3;

     label1:
        $r7 = r1[0];
        <sun.net.NetworkClient: java.lang.String encoding> = $r7;

     label2:
        $r8 = <sun.net.NetworkClient: java.lang.String encoding>;
        $z0 = staticinvoke <sun.net.NetworkClient: boolean isASCIISuperset(java.lang.String)>($r8);
        if $z0 != 0 goto label3;

        <sun.net.NetworkClient: java.lang.String encoding> = "ISO8859_1";

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;
        r2 = $r9;
        <sun.net.NetworkClient: java.lang.String encoding> = "ISO8859_1";

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
