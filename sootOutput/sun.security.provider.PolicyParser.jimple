public class sun.security.provider.PolicyParser extends java.lang.Object
{
    public static final java.lang.String REPLACE_NAME;
    private static final java.lang.String EXTDIRS_PROPERTY;
    private static final java.lang.String OLD_EXTDIRS_EXPANSION;
    static final java.lang.String EXTDIRS_EXPANSION;
    private java.util.Vector grantEntries;
    private static final sun.security.util.Debug debug;
    private java.io.StreamTokenizer st;
    private int lookahead;
    private boolean expandProp;
    private java.lang.String keyStoreUrlString;
    private java.lang.String keyStoreType;
    private java.lang.String keyStoreProvider;
    private java.lang.String storePassURL;

    private java.lang.String expand(java.lang.String) throws sun.security.util.PropertyExpander$ExpandException
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String r1, $r2;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.lang.String;
        $r2 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String,boolean)>(r1, 0);
        return $r2;
    }

    private java.lang.String expand(java.lang.String, boolean) throws sun.security.util.PropertyExpander$ExpandException
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String r1, $r2;
        boolean z0, $z1;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $z1 = r0.<sun.security.provider.PolicyParser: boolean expandProp>;
        if $z1 != 0 goto label0;

        return r1;

     label0:
        $r2 = staticinvoke <sun.security.util.PropertyExpander: java.lang.String expand(java.lang.String,boolean)>(r1, z0);
        return $r2;
    }

    public void <init>()
    {
        sun.security.provider.PolicyParser r0;
        java.util.Vector $r1;

        r0 := @this: sun.security.provider.PolicyParser;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.provider.PolicyParser: boolean expandProp> = 0;
        r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreUrlString> = null;
        r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreType> = null;
        r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreProvider> = null;
        r0.<sun.security.provider.PolicyParser: java.lang.String storePassURL> = null;
        $r1 = new java.util.Vector;
        specialinvoke $r1.<java.util.Vector: void <init>()>();
        r0.<sun.security.provider.PolicyParser: java.util.Vector grantEntries> = $r1;
        return;
    }

    public void <init>(boolean)
    {
        sun.security.provider.PolicyParser r0;
        boolean z0;

        r0 := @this: sun.security.provider.PolicyParser;
        z0 := @parameter0: boolean;
        specialinvoke r0.<sun.security.provider.PolicyParser: void <init>()>();
        r0.<sun.security.provider.PolicyParser: boolean expandProp> = z0;
        return;
    }

    public void read(java.io.Reader) throws sun.security.provider.PolicyParser$ParsingException, java.io.IOException
    {
        sun.security.provider.PolicyParser r0;
        java.io.Reader r1;
        sun.security.provider.PolicyParser$GrantEntry r2;
        boolean $z0, $z1, $z2, $z3;
        java.io.BufferedReader $r3;
        java.io.StreamTokenizer $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        int $i0, $i1;
        java.lang.String $r22, $r23, $r25, $r26, $r28;
        sun.security.provider.PolicyParser$ParsingException $r27;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.io.Reader;
        $z0 = r1 instanceof java.io.BufferedReader;
        if $z0 != 0 goto label0;

        $r3 = new java.io.BufferedReader;
        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);
        r1 = $r3;

     label0:
        $r4 = new java.io.StreamTokenizer;
        specialinvoke $r4.<java.io.StreamTokenizer: void <init>(java.io.Reader)>(r1);
        r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st> = $r4;
        $r5 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r5.<java.io.StreamTokenizer: void resetSyntax()>();
        $r6 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r6.<java.io.StreamTokenizer: void wordChars(int,int)>(97, 122);
        $r7 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r7.<java.io.StreamTokenizer: void wordChars(int,int)>(65, 90);
        $r8 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r8.<java.io.StreamTokenizer: void wordChars(int,int)>(46, 46);
        $r9 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r9.<java.io.StreamTokenizer: void wordChars(int,int)>(48, 57);
        $r10 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r10.<java.io.StreamTokenizer: void wordChars(int,int)>(95, 95);
        $r11 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r11.<java.io.StreamTokenizer: void wordChars(int,int)>(36, 36);
        $r12 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r12.<java.io.StreamTokenizer: void wordChars(int,int)>(160, 255);
        $r13 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r13.<java.io.StreamTokenizer: void whitespaceChars(int,int)>(0, 32);
        $r14 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r14.<java.io.StreamTokenizer: void commentChar(int)>(47);
        $r15 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r15.<java.io.StreamTokenizer: void quoteChar(int)>(39);
        $r16 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r16.<java.io.StreamTokenizer: void quoteChar(int)>(34);
        $r17 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r17.<java.io.StreamTokenizer: void lowerCaseMode(boolean)>(0);
        $r18 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r18.<java.io.StreamTokenizer: void ordinaryChar(int)>(47);
        $r19 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r19.<java.io.StreamTokenizer: void slashSlashComments(boolean)>(1);
        $r20 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        virtualinvoke $r20.<java.io.StreamTokenizer: void slashStarComments(boolean)>(1);
        $r21 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i0 = virtualinvoke $r21.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i0;

     label1:
        $i1 = r0.<sun.security.provider.PolicyParser: int lookahead>;
        if $i1 == -1 goto label6;

        $z1 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("grant");
        if $z1 == 0 goto label3;

        r2 = specialinvoke r0.<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>();
        if r2 == null goto label2;

        virtualinvoke r0.<sun.security.provider.PolicyParser: void add(sun.security.provider.PolicyParser$GrantEntry)>(r2);

     label2:
        goto label5;

     label3:
        $z2 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("keystore");
        if $z2 == 0 goto label4;

        $r22 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreUrlString>;
        if $r22 != null goto label4;

        specialinvoke r0.<sun.security.provider.PolicyParser: void parseKeyStoreEntry()>();
        goto label5;

     label4:
        $z3 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("keystorePasswordURL");
        if $z3 == 0 goto label5;

        $r23 = r0.<sun.security.provider.PolicyParser: java.lang.String storePassURL>;
        if $r23 != null goto label5;

        specialinvoke r0.<sun.security.provider.PolicyParser: void parseStorePassURL()>();

     label5:
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>(";");
        goto label1;

     label6:
        $r25 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreUrlString>;
        if $r25 != null goto label7;

        $r26 = r0.<sun.security.provider.PolicyParser: java.lang.String storePassURL>;
        if $r26 == null goto label7;

        $r27 = new sun.security.provider.PolicyParser$ParsingException;
        $r28 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("keystorePasswordURL.can.not.be.specified.without.also.specifying.keystore");
        specialinvoke $r27.<sun.security.provider.PolicyParser$ParsingException: void <init>(java.lang.String)>($r28);
        throw $r27;

     label7:
        return;
    }

    public void add(sun.security.provider.PolicyParser$GrantEntry)
    {
        sun.security.provider.PolicyParser r0;
        sun.security.provider.PolicyParser$GrantEntry r1;
        java.util.Vector $r2;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: sun.security.provider.PolicyParser$GrantEntry;
        $r2 = r0.<sun.security.provider.PolicyParser: java.util.Vector grantEntries>;
        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);
        return;
    }

    public void replace(sun.security.provider.PolicyParser$GrantEntry, sun.security.provider.PolicyParser$GrantEntry)
    {
        sun.security.provider.PolicyParser r0;
        sun.security.provider.PolicyParser$GrantEntry r1, r2;
        java.util.Vector $r3, $r4;
        int $i0;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: sun.security.provider.PolicyParser$GrantEntry;
        r2 := @parameter1: sun.security.provider.PolicyParser$GrantEntry;
        $r3 = r0.<sun.security.provider.PolicyParser: java.util.Vector grantEntries>;
        $r4 = r0.<sun.security.provider.PolicyParser: java.util.Vector grantEntries>;
        $i0 = virtualinvoke $r4.<java.util.Vector: int indexOf(java.lang.Object)>(r1);
        virtualinvoke $r3.<java.util.Vector: void setElementAt(java.lang.Object,int)>(r2, $i0);
        return;
    }

    public boolean remove(sun.security.provider.PolicyParser$GrantEntry)
    {
        sun.security.provider.PolicyParser r0;
        sun.security.provider.PolicyParser$GrantEntry r1;
        java.util.Vector $r2;
        boolean $z0;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: sun.security.provider.PolicyParser$GrantEntry;
        $r2 = r0.<sun.security.provider.PolicyParser: java.util.Vector grantEntries>;
        $z0 = virtualinvoke $r2.<java.util.Vector: boolean removeElement(java.lang.Object)>(r1);
        return $z0;
    }

    public java.lang.String getKeyStoreUrl()
    {
        sun.security.provider.PolicyParser r0;
        sun.security.util.PropertyExpander$ExpandException r1, $r7;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r10;
        int $i0;
        char $c1;
        sun.security.util.Debug $r8, $r9;

        r0 := @this: sun.security.provider.PolicyParser;

     label0:
        $r2 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreUrlString>;
        if $r2 == null goto label2;

        $r3 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreUrlString>;
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 == 0 goto label2;

        $r4 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreUrlString>;
        $r5 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String,boolean)>($r4, 1);
        $c1 = <java.io.File: char separatorChar>;
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>($c1, 47);

     label1:
        return $r6;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;
        r1 = $r7;
        $r8 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        if $r8 == null goto label4;

        $r9 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        $r10 = virtualinvoke r1.<sun.security.util.PropertyExpander$ExpandException: java.lang.String toString()>();
        virtualinvoke $r9.<sun.security.util.Debug: void println(java.lang.String)>($r10);

     label4:
        return null;

     label5:
        return null;

        catch sun.security.util.PropertyExpander$ExpandException from label0 to label1 with label3;
    }

    public void setKeyStoreUrl(java.lang.String)
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String r1;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.lang.String;
        r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreUrlString> = r1;
        return;
    }

    public java.lang.String getKeyStoreType()
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String $r1;

        r0 := @this: sun.security.provider.PolicyParser;
        $r1 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreType>;
        return $r1;
    }

    public void setKeyStoreType(java.lang.String)
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String r1;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.lang.String;
        r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreType> = r1;
        return;
    }

    public java.lang.String getKeyStoreProvider()
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String $r1;

        r0 := @this: sun.security.provider.PolicyParser;
        $r1 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreProvider>;
        return $r1;
    }

    public void setKeyStoreProvider(java.lang.String)
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String r1;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.lang.String;
        r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreProvider> = r1;
        return;
    }

    public java.lang.String getStorePassURL()
    {
        sun.security.provider.PolicyParser r0;
        sun.security.util.PropertyExpander$ExpandException r1, $r7;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r10;
        int $i0;
        char $c1;
        sun.security.util.Debug $r8, $r9;

        r0 := @this: sun.security.provider.PolicyParser;

     label0:
        $r2 = r0.<sun.security.provider.PolicyParser: java.lang.String storePassURL>;
        if $r2 == null goto label2;

        $r3 = r0.<sun.security.provider.PolicyParser: java.lang.String storePassURL>;
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 == 0 goto label2;

        $r4 = r0.<sun.security.provider.PolicyParser: java.lang.String storePassURL>;
        $r5 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String,boolean)>($r4, 1);
        $c1 = <java.io.File: char separatorChar>;
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>($c1, 47);

     label1:
        return $r6;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;
        r1 = $r7;
        $r8 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        if $r8 == null goto label4;

        $r9 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        $r10 = virtualinvoke r1.<sun.security.util.PropertyExpander$ExpandException: java.lang.String toString()>();
        virtualinvoke $r9.<sun.security.util.Debug: void println(java.lang.String)>($r10);

     label4:
        return null;

     label5:
        return null;

        catch sun.security.util.PropertyExpander$ExpandException from label0 to label1 with label3;
    }

    public void setStorePassURL(java.lang.String)
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String r1;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.lang.String;
        r0.<sun.security.provider.PolicyParser: java.lang.String storePassURL> = r1;
        return;
    }

    public java.util.Enumeration grantElements()
    {
        sun.security.provider.PolicyParser r0;
        java.util.Vector $r1;
        java.util.Enumeration $r2;

        r0 := @this: sun.security.provider.PolicyParser;
        $r1 = r0.<sun.security.provider.PolicyParser: java.util.Vector grantEntries>;
        $r2 = virtualinvoke $r1.<java.util.Vector: java.util.Enumeration elements()>();
        return $r2;
    }

    public void write(java.io.Writer)
    {
        sun.security.provider.PolicyParser r0;
        java.io.Writer r1;
        java.io.PrintWriter $r2, r4;
        java.io.BufferedWriter $r3;
        java.util.Enumeration r5;
        sun.security.provider.PolicyParser$GrantEntry r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.util.Date $r9;
        java.lang.String $r12, $r13, $r14;
        boolean $z0;
        java.lang.Object $r15;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.io.Writer;
        $r2 = new java.io.PrintWriter;
        $r3 = new java.io.BufferedWriter;
        specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r1);
        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.Writer)>($r3);
        r4 = $r2;
        r5 = virtualinvoke r0.<sun.security.provider.PolicyParser: java.util.Enumeration grantElements()>();
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/* AUTOMATICALLY GENERATED ON ");
        $r9 = new java.util.Date;
        specialinvoke $r9.<java.util.Date: void <init>()>();
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*/");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>($r12);
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("/* DO NOT EDIT */");
        virtualinvoke r4.<java.io.PrintWriter: void println()>();
        $r13 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreUrlString>;
        if $r13 == null goto label0;

        specialinvoke r0.<sun.security.provider.PolicyParser: void writeKeyStoreEntry(java.io.PrintWriter)>(r4);

     label0:
        $r14 = r0.<sun.security.provider.PolicyParser: java.lang.String storePassURL>;
        if $r14 == null goto label1;

        specialinvoke r0.<sun.security.provider.PolicyParser: void writeStorePassURL(java.io.PrintWriter)>(r4);

     label1:
        $z0 = interfaceinvoke r5.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label2;

        $r15 = interfaceinvoke r5.<java.util.Enumeration: java.lang.Object nextElement()>();
        r6 = (sun.security.provider.PolicyParser$GrantEntry) $r15;
        virtualinvoke r6.<sun.security.provider.PolicyParser$GrantEntry: void write(java.io.PrintWriter)>(r4);
        virtualinvoke r4.<java.io.PrintWriter: void println()>();
        goto label1;

     label2:
        virtualinvoke r4.<java.io.PrintWriter: void flush()>();
        return;
    }

    private void parseKeyStoreEntry() throws sun.security.provider.PolicyParser$ParsingException, java.io.IOException
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String $r2, $r4, $r7, $r9, $r12;
        boolean $z0, $z1, $z2, $z3;
        sun.security.provider.PolicyParser$ParsingException $r5, $r10;
        java.io.StreamTokenizer $r6, $r11;
        int $i0, $i1;

        r0 := @this: sun.security.provider.PolicyParser;
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("keystore");
        $r2 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("quoted string");
        r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreUrlString> = $r2;
        $z0 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>(",");
        if $z0 != 0 goto label0;

        return;

     label0:
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>(",");
        $z1 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("\"");
        if $z1 == 0 goto label1;

        $r4 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("quoted string");
        r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreType> = $r4;
        goto label2;

     label1:
        $r5 = new sun.security.provider.PolicyParser$ParsingException;
        $r6 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i0 = virtualinvoke $r6.<java.io.StreamTokenizer: int lineno()>();
        $r7 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("expected.keystore.type");
        specialinvoke $r5.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String)>($i0, $r7);
        throw $r5;

     label2:
        $z2 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>(",");
        if $z2 != 0 goto label3;

        return;

     label3:
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>(",");
        $z3 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("\"");
        if $z3 == 0 goto label4;

        $r9 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("quoted string");
        r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreProvider> = $r9;
        goto label5;

     label4:
        $r10 = new sun.security.provider.PolicyParser$ParsingException;
        $r11 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i1 = virtualinvoke $r11.<java.io.StreamTokenizer: int lineno()>();
        $r12 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("expected.keystore.provider");
        specialinvoke $r10.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String)>($i1, $r12);
        throw $r10;

     label5:
        return;
    }

    private void parseStorePassURL() throws sun.security.provider.PolicyParser$ParsingException, java.io.IOException
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String $r2;

        r0 := @this: sun.security.provider.PolicyParser;
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("keyStorePasswordURL");
        $r2 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("quoted string");
        r0.<sun.security.provider.PolicyParser: java.lang.String storePassURL> = $r2;
        return;
    }

    private void writeKeyStoreEntry(java.io.PrintWriter)
    {
        sun.security.provider.PolicyParser r0;
        java.io.PrintWriter r1;
        java.lang.String $r2, $r3, $r4, $r7, $r10, $r11, $r12, $r15, $r18;
        int $i0, $i1;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r13, $r14, $r16, $r17;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.io.PrintWriter;
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("keystore \"");
        $r2 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreUrlString>;
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r2);
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(34);
        $r3 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreType>;
        if $r3 == null goto label0;

        $r4 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreType>;
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", \"");
        $r7 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreType>;
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r10);

     label0:
        $r11 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreProvider>;
        if $r11 == null goto label1;

        $r12 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreProvider>;
        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();
        if $i1 <= 0 goto label1;

        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", \"");
        $r15 = r0.<sun.security.provider.PolicyParser: java.lang.String keyStoreProvider>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r18);

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(";");
        virtualinvoke r1.<java.io.PrintWriter: void println()>();
        return;
    }

    private void writeStorePassURL(java.io.PrintWriter)
    {
        sun.security.provider.PolicyParser r0;
        java.io.PrintWriter r1;
        java.lang.String $r2;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.io.PrintWriter;
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("keystorePasswordURL \"");
        $r2 = r0.<sun.security.provider.PolicyParser: java.lang.String storePassURL>;
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r2);
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(34);
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(";");
        virtualinvoke r1.<java.io.PrintWriter: void println()>();
        return;
    }

    private sun.security.provider.PolicyParser$GrantEntry parseGrantEntry() throws sun.security.provider.PolicyParser$ParsingException, java.io.IOException
    {
        sun.security.provider.PolicyParser r0;
        sun.security.provider.PolicyParser$GrantEntry $r1, r2, r73, $r87;
        java.util.LinkedList r3, $r23;
        boolean z0, $z1, $z2, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z18, $z19, $z20;
        java.util.StringTokenizer r4, $r17;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i12, i13, $i14;
        java.lang.String r5, $r7, $r10, $r11, $r12, $r15, $r16, $r18, $r19, $r22, r24, r25, $r32, $r35, $r45, $r48, $r55, $r59, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r74, $r79, $r81, $r86;
        sun.security.provider.PolicyParser$ParsingException $r8, $r13, $r20, $r30, $r46, $r57;
        java.io.StreamTokenizer $r9, $r14, $r21, $r31, $r47, $r58;
        sun.security.util.Debug $r28, $r29, $r40, $r41, $r53, $r54, $r75, $r76, $r84, $r85;
        javax.security.auth.x500.X500Principal $r33, $r34, r36;
        sun.security.provider.PolicyParser$PrincipalEntry $r37;
        sun.security.util.PropertyExpander$ExpandException $r38, r39, $r51, r52, $r82, r83;
        java.lang.StringBuilder $r42, $r43, $r44, $r77, $r78, $r80;
        sun.security.provider.PolicyParser$PermissionEntry r50;
        char $c11;
        java.lang.String[] r71;
        java.lang.Object $r72;

        r0 := @this: sun.security.provider.PolicyParser;
        $r1 = new sun.security.provider.PolicyParser$GrantEntry;
        specialinvoke $r1.<sun.security.provider.PolicyParser$GrantEntry: void <init>()>();
        r2 = $r1;
        r3 = null;
        z0 = 0;
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("grant");

     label0:
        $z1 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("{");
        if $z1 != 0 goto label24;

        $z2 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peekAndMatch(java.lang.String)>("Codebase");
        if $z2 == 0 goto label2;

        $r7 = r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase>;
        if $r7 == null goto label1;

        $r8 = new sun.security.provider.PolicyParser$ParsingException;
        $r9 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i2 = virtualinvoke $r9.<java.io.StreamTokenizer: int lineno()>();
        $r10 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("multiple.Codebase.expressions");
        specialinvoke $r8.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String)>($i2, $r10);
        throw $r8;

     label1:
        $r11 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("quoted string");
        r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase> = $r11;
        specialinvoke r0.<sun.security.provider.PolicyParser: boolean peekAndMatch(java.lang.String)>(",");
        goto label0;

     label2:
        $z4 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peekAndMatch(java.lang.String)>("SignedBy");
        if $z4 == 0 goto label9;

        $r12 = r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String signedBy>;
        if $r12 == null goto label3;

        $r13 = new sun.security.provider.PolicyParser$ParsingException;
        $r14 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i3 = virtualinvoke $r14.<java.io.StreamTokenizer: int lineno()>();
        $r15 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("multiple.SignedBy.expressions");
        specialinvoke $r13.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String)>($i3, $r15);
        throw $r13;

     label3:
        $r16 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("quoted string");
        r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String signedBy> = $r16;
        $r17 = new java.util.StringTokenizer;
        $r18 = r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String signedBy>;
        specialinvoke $r17.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r18, ",", 1);
        r4 = $r17;
        i0 = 0;
        i1 = 0;

     label4:
        $z5 = virtualinvoke r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z5 == 0 goto label7;

        $r19 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r5 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();
        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(",");
        if $z6 == 0 goto label5;

        i1 = i1 + 1;
        goto label6;

     label5:
        $i4 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i4 <= 0 goto label6;

        i0 = i0 + 1;

     label6:
        goto label4;

     label7:
        if i0 > i1 goto label8;

        $r20 = new sun.security.provider.PolicyParser$ParsingException;
        $r21 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i5 = virtualinvoke $r21.<java.io.StreamTokenizer: int lineno()>();
        $r22 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("SignedBy.has.empty.alias");
        specialinvoke $r20.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String)>($i5, $r22);
        throw $r20;

     label8:
        specialinvoke r0.<sun.security.provider.PolicyParser: boolean peekAndMatch(java.lang.String)>(",");
        goto label0;

     label9:
        $z8 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peekAndMatch(java.lang.String)>("Principal");
        if $z8 == 0 goto label23;

        if r3 != null goto label10;

        $r23 = new java.util.LinkedList;
        specialinvoke $r23.<java.util.LinkedList: void <init>()>();
        r3 = $r23;

     label10:
        $z9 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("\"");
        if $z9 == 0 goto label11;

        r24 = "PolicyParser.REPLACE_NAME";
        r25 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("principal type");
        goto label17;

     label11:
        $z10 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("*");
        if $z10 == 0 goto label12;

        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("*");
        r24 = "WILDCARD_PRINCIPAL_CLASS";
        goto label13;

     label12:
        r24 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("principal type");

     label13:
        $z11 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("*");
        if $z11 == 0 goto label14;

        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("*");
        r25 = "WILDCARD_PRINCIPAL_NAME";
        goto label15;

     label14:
        r25 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("quoted string");

     label15:
        $z12 = virtualinvoke r24.<java.lang.String: boolean equals(java.lang.Object)>("WILDCARD_PRINCIPAL_CLASS");
        if $z12 == 0 goto label17;

        $z13 = virtualinvoke r25.<java.lang.String: boolean equals(java.lang.Object)>("WILDCARD_PRINCIPAL_NAME");
        if $z13 != 0 goto label17;

        $r28 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        if $r28 == null goto label16;

        $r29 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        virtualinvoke $r29.<sun.security.util.Debug: void println(java.lang.String)>("disallowing principal that has WILDCARD class but no WILDCARD name");

     label16:
        $r30 = new sun.security.provider.PolicyParser$ParsingException;
        $r31 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i6 = virtualinvoke $r31.<java.io.StreamTokenizer: int lineno()>();
        $r32 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("can.not.specify.Principal.with.a.wildcard.class.without.a.wildcard.name");
        specialinvoke $r30.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String)>($i6, $r32);
        throw $r30;

     label17:
        r25 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String)>(r25);
        $z14 = virtualinvoke r24.<java.lang.String: boolean equals(java.lang.Object)>("javax.security.auth.x500.X500Principal");
        if $z14 == 0 goto label18;

        $z15 = virtualinvoke r25.<java.lang.String: boolean equals(java.lang.Object)>("WILDCARD_PRINCIPAL_NAME");
        if $z15 != 0 goto label18;

        $r33 = new javax.security.auth.x500.X500Principal;
        $r34 = new javax.security.auth.x500.X500Principal;
        specialinvoke $r34.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>(r25);
        $r35 = virtualinvoke $r34.<javax.security.auth.x500.X500Principal: java.lang.String toString()>();
        specialinvoke $r33.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r35);
        r36 = $r33;
        r25 = virtualinvoke r36.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

     label18:
        $r37 = new sun.security.provider.PolicyParser$PrincipalEntry;
        specialinvoke $r37.<sun.security.provider.PolicyParser$PrincipalEntry: void <init>(java.lang.String,java.lang.String)>(r24, r25);
        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r37);

     label19:
        goto label22;

     label20:
        $r38 := @caughtexception;
        r39 = $r38;
        $r40 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        if $r40 == null goto label21;

        $r41 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        $r42 = new java.lang.StringBuilder;
        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("principal name expansion failed: ");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r41.<sun.security.util.Debug: void println(java.lang.String)>($r45);

     label21:
        z0 = 1;

     label22:
        specialinvoke r0.<sun.security.provider.PolicyParser: boolean peekAndMatch(java.lang.String)>(",");
        goto label0;

     label23:
        $r46 = new sun.security.provider.PolicyParser$ParsingException;
        $r47 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i7 = virtualinvoke $r47.<java.io.StreamTokenizer: int lineno()>();
        $r48 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("expected.codeBase.or.SignedBy.or.Principal");
        specialinvoke $r46.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String)>($i7, $r48);
        throw $r46;

     label24:
        if r3 == null goto label25;

        r2.<sun.security.provider.PolicyParser$GrantEntry: java.util.LinkedList principals> = r3;

     label25:
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("{");

     label26:
        $z18 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("}");
        if $z18 != 0 goto label33;

        $z19 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("Permission");
        if $z19 == 0 goto label32;

     label27:
        r50 = specialinvoke r0.<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$PermissionEntry parsePermissionEntry()>();
        virtualinvoke r2.<sun.security.provider.PolicyParser$GrantEntry: void add(sun.security.provider.PolicyParser$PermissionEntry)>(r50);

     label28:
        goto label31;

     label29:
        $r51 := @caughtexception;
        r52 = $r51;
        $r53 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        if $r53 == null goto label30;

        $r54 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        $r55 = virtualinvoke r52.<sun.security.util.PropertyExpander$ExpandException: java.lang.String toString()>();
        virtualinvoke $r54.<sun.security.util.Debug: void println(java.lang.String)>($r55);

     label30:
        specialinvoke r0.<sun.security.provider.PolicyParser: void skipEntry()>();

     label31:
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>(";");
        goto label26;

     label32:
        $r57 = new sun.security.provider.PolicyParser$ParsingException;
        $r58 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i8 = virtualinvoke $r58.<java.io.StreamTokenizer: int lineno()>();
        $r59 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("expected.permission.entry");
        specialinvoke $r57.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String)>($i8, $r59);
        throw $r57;

     label33:
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("}");

     label34:
        $r61 = r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String signedBy>;
        if $r61 == null goto label35;

        $r62 = r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String signedBy>;
        $r63 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String)>($r62);
        r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String signedBy> = $r63;

     label35:
        $r64 = r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase>;
        if $r64 == null goto label41;

        $r65 = r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase>;
        $z20 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>("${java.ext.dirs}");
        if $z20 == 0 goto label36;

        r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase> = "${{java.ext.dirs}}";

     label36:
        $r66 = r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase>;
        $i9 = virtualinvoke $r66.<java.lang.String: int indexOf(java.lang.String)>("${{java.ext.dirs}}");
        i10 = $i9;
        if $i9 >= 0 goto label37;

        $r67 = r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase>;
        $r68 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String,boolean)>($r67, 1);
        $c11 = <java.io.File: char separatorChar>;
        $r69 = virtualinvoke $r68.<java.lang.String: java.lang.String replace(char,char)>($c11, 47);
        r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase> = $r69;
        goto label41;

     label37:
        $r70 = r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase>;
        r71 = staticinvoke <sun.security.provider.PolicyParser: java.lang.String[] parseExtDirs(java.lang.String,int)>($r70, i10);
        if r71 == null goto label40;

        $i12 = lengthof r71;
        if $i12 <= 0 goto label40;

        i13 = 0;

     label38:
        $i14 = lengthof r71;
        if i13 >= $i14 goto label40;

        $r72 = virtualinvoke r2.<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()>();
        r73 = (sun.security.provider.PolicyParser$GrantEntry) $r72;
        $r74 = r71[i13];
        r73.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase> = $r74;
        virtualinvoke r0.<sun.security.provider.PolicyParser: void add(sun.security.provider.PolicyParser$GrantEntry)>(r73);
        $r75 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        if $r75 == null goto label39;

        $r76 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        $r77 = new java.lang.StringBuilder;
        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();
        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("creating policy entry for expanded java.ext.dirs path:\n\t\t");
        $r79 = r71[i13];
        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r76.<sun.security.util.Debug: void println(java.lang.String)>($r81);

     label39:
        i13 = i13 + 1;
        goto label38;

     label40:
        z0 = 1;

     label41:
        goto label44;

     label42:
        $r82 := @caughtexception;
        r83 = $r82;
        $r84 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        if $r84 == null goto label43;

        $r85 = <sun.security.provider.PolicyParser: sun.security.util.Debug debug>;
        $r86 = virtualinvoke r83.<sun.security.util.PropertyExpander$ExpandException: java.lang.String toString()>();
        virtualinvoke $r85.<sun.security.util.Debug: void println(java.lang.String)>($r86);

     label43:
        return null;

     label44:
        if z0 != 1 goto label45;

        $r87 = null;
        goto label46;

     label45:
        $r87 = r2;

     label46:
        return $r87;

        catch sun.security.util.PropertyExpander$ExpandException from label17 to label19 with label20;
        catch sun.security.util.PropertyExpander$ExpandException from label27 to label28 with label29;
        catch sun.security.util.PropertyExpander$ExpandException from label34 to label41 with label42;
    }

    private sun.security.provider.PolicyParser$PermissionEntry parsePermissionEntry() throws sun.security.provider.PolicyParser$ParsingException, java.io.IOException, sun.security.util.PropertyExpander$ExpandException
    {
        sun.security.provider.PolicyParser r0;
        sun.security.provider.PolicyParser$PermissionEntry $r1, r2;
        java.lang.String $r4, $r5, $r6, $r8, $r9, $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: sun.security.provider.PolicyParser;
        $r1 = new sun.security.provider.PolicyParser$PermissionEntry;
        specialinvoke $r1.<sun.security.provider.PolicyParser$PermissionEntry: void <init>()>();
        r2 = $r1;
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("Permission");
        $r4 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("permission type");
        r2.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String permission> = $r4;
        $z0 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("\"");
        if $z0 == 0 goto label0;

        $r5 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("quoted string");
        $r6 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String)>($r5);
        r2.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name> = $r6;

     label0:
        $z1 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>(",");
        if $z1 != 0 goto label1;

        return r2;

     label1:
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>(",");
        $z2 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>("\"");
        if $z2 == 0 goto label3;

        $r8 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("quoted string");
        $r9 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String)>($r8);
        r2.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String action> = $r9;
        $z3 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>(",");
        if $z3 != 0 goto label2;

        return r2;

     label2:
        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>(",");

     label3:
        $z4 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peekAndMatch(java.lang.String)>("SignedBy");
        if $z4 == 0 goto label4;

        $r11 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>("quoted string");
        $r12 = specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String)>($r11);
        r2.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String signedBy> = $r12;

     label4:
        return r2;
    }

    static java.lang.String[] parseExtDirs(java.lang.String, int)
    {
        java.lang.String r0, r1, r2, r3, $r5, r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r20, $r22, $r23, $r24, $r27, $r30;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.String[] r4;
        java.util.StringTokenizer r6, $r12;
        java.io.File r7, $r13;
        boolean $z0, $z1;
        java.lang.StringBuilder $r18, $r19, $r21, $r25, $r26, $r28, $r29;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.ext.dirs");
        if i0 <= 0 goto label0;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        goto label1;

     label0:
        $r9 = "file:";

     label1:
        r2 = $r9;
        $r10 = "${{java.ext.dirs}}";
        $i4 = virtualinvoke $r10.<java.lang.String: int length()>();
        i1 = i0 + $i4;
        $i5 = virtualinvoke r0.<java.lang.String: int length()>();
        if i1 >= $i5 goto label2;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i1);
        goto label3;

     label2:
        $r11 = (java.lang.String) null;

     label3:
        r3 = $r11;
        r4 = null;
        if r1 == null goto label9;

        $r12 = new java.util.StringTokenizer;
        $r5 = <java.io.File: java.lang.String pathSeparator>;
        specialinvoke $r12.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, $r5);
        r6 = $r12;
        i2 = virtualinvoke r6.<java.util.StringTokenizer: int countTokens()>();
        r4 = newarray (java.lang.String)[i2];
        i3 = 0;

     label4:
        if i3 >= i2 goto label9;

        $r13 = new java.io.File;
        $r14 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>();
        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r14);
        r7 = $r13;
        $r15 = virtualinvoke r7.<java.io.File: java.lang.String getAbsolutePath()>();
        $r16 = staticinvoke <sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String)>($r15);
        r4[i3] = $r16;
        $r17 = r4[i3];
        $z0 = virtualinvoke $r17.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z0 != 0 goto label5;

        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $r20 = r4[i3];
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        r4[i3] = $r22;

     label5:
        if r3 != null goto label7;

        $r23 = r4[i3];
        $z1 = virtualinvoke $r23.<java.lang.String: boolean endsWith(java.lang.String)>("/");
        if $z1 == 0 goto label6;

        $r24 = "*";
        goto label8;

     label6:
        $r24 = "/*";
        goto label8;

     label7:
        $r24 = r3;

     label8:
        r8 = $r24;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r27 = r4[i3];
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        r4[i3] = $r30;
        i3 = i3 + 1;
        goto label4;

     label9:
        return r4;
    }

    private boolean peekAndMatch(java.lang.String) throws sun.security.provider.PolicyParser$ParsingException, java.io.IOException
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.lang.String;
        $z0 = specialinvoke r0.<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>(r1);
        if $z0 == 0 goto label0;

        specialinvoke r0.<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>(r1);
        return 1;

     label0:
        return 0;
    }

    private boolean peek(java.lang.String)
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String r1, $r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0;
        java.io.StreamTokenizer $r2;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.lang.String;
        z0 = 0;
        $i0 = r0.<sun.security.provider.PolicyParser: int lookahead>;
        lookupswitch($i0)
        {
            case -3: goto label0;
            case 34: goto label4;
            case 42: goto label5;
            case 44: goto label1;
            case 123: goto label2;
            case 125: goto label3;
            default: goto label6;
        };

     label0:
        $r2 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $r3 = $r2.<java.io.StreamTokenizer: java.lang.String sval>;
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);
        if $z1 == 0 goto label6;

        z0 = 1;
        goto label6;

     label1:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(",");
        if $z2 == 0 goto label6;

        z0 = 1;
        goto label6;

     label2:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("{");
        if $z3 == 0 goto label6;

        z0 = 1;
        goto label6;

     label3:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("}");
        if $z4 == 0 goto label6;

        z0 = 1;
        goto label6;

     label4:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("\"");
        if $z5 == 0 goto label6;

        z0 = 1;
        goto label6;

     label5:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("*");
        if $z6 == 0 goto label6;

        z0 = 1;
        goto label6;

     label6:
        return z0;
    }

    private java.lang.String match(java.lang.String) throws sun.security.provider.PolicyParser$ParsingException, java.io.IOException
    {
        sun.security.provider.PolicyParser r0;
        java.lang.String r1, r2, $r8, $r11, $r13, $r15, $r18, $r20, $r29, $r39, $r57;
        java.lang.StringBuilder $r3, $r9, $r12;
        java.text.MessageFormat r4, $r14;
        java.lang.Object[] r5, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        sun.security.provider.PolicyParser$ParsingException $r6, $r17, $r26, $r36, $r41, $r44, $r47, $r50, $r53, $r55;
        java.io.StreamTokenizer $r7, $r10, $r19, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r40, $r42, $r43, $r45, $r46, $r48, $r49, $r51, $r52, $r54, $r56;
        double $d0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        char[] $r58;
        char $c22;

        r0 := @this: sun.security.provider.PolicyParser;
        r1 := @parameter0: java.lang.String;
        r2 = null;
        $i0 = r0.<sun.security.provider.PolicyParser: int lookahead>;
        lookupswitch($i0)
        {
            case -3: goto label2;
            case -2: goto label0;
            case -1: goto label1;
            case 34: goto label6;
            case 42: goto label18;
            case 44: goto label10;
            case 59: goto label16;
            case 123: goto label12;
            case 125: goto label14;
            default: goto label20;
        };

     label0:
        $r6 = new sun.security.provider.PolicyParser$ParsingException;
        $r7 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i1 = virtualinvoke $r7.<java.io.StreamTokenizer: int lineno()>();
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r8 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("number.");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $d0 = $r10.<java.io.StreamTokenizer: double nval>;
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>($i1, r1, $r13);
        throw $r6;

     label1:
        $r14 = new java.text.MessageFormat;
        $r15 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("expected.expect.read.end.of.file.");
        specialinvoke $r14.<java.text.MessageFormat: void <init>(java.lang.String)>($r15);
        r4 = $r14;
        $r16 = newarray (java.lang.Object)[1];
        $r16[0] = r1;
        r5 = $r16;
        $r17 = new sun.security.provider.PolicyParser$ParsingException;
        $r18 = virtualinvoke r4.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r5);
        specialinvoke $r17.<sun.security.provider.PolicyParser$ParsingException: void <init>(java.lang.String)>($r18);
        throw $r17;

     label2:
        $r19 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $r20 = $r19.<java.io.StreamTokenizer: java.lang.String sval>;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r20);
        if $z0 == 0 goto label3;

        $r21 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i2 = virtualinvoke $r21.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i2;
        goto label21;

     label3:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("permission type");
        if $z1 == 0 goto label4;

        $r22 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        r2 = $r22.<java.io.StreamTokenizer: java.lang.String sval>;
        $r23 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i3 = virtualinvoke $r23.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i3;
        goto label21;

     label4:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("principal type");
        if $z2 == 0 goto label5;

        $r24 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        r2 = $r24.<java.io.StreamTokenizer: java.lang.String sval>;
        $r25 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i4 = virtualinvoke $r25.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i4;
        goto label21;

     label5:
        $r26 = new sun.security.provider.PolicyParser$ParsingException;
        $r27 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i5 = virtualinvoke $r27.<java.io.StreamTokenizer: int lineno()>();
        $r28 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $r29 = $r28.<java.io.StreamTokenizer: java.lang.String sval>;
        specialinvoke $r26.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>($i5, r1, $r29);
        throw $r26;

     label6:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("quoted string");
        if $z3 == 0 goto label7;

        $r30 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        r2 = $r30.<java.io.StreamTokenizer: java.lang.String sval>;
        $r31 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i6 = virtualinvoke $r31.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i6;
        goto label21;

     label7:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("permission type");
        if $z4 == 0 goto label8;

        $r32 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        r2 = $r32.<java.io.StreamTokenizer: java.lang.String sval>;
        $r33 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i7 = virtualinvoke $r33.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i7;
        goto label21;

     label8:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("principal type");
        if $z5 == 0 goto label9;

        $r34 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        r2 = $r34.<java.io.StreamTokenizer: java.lang.String sval>;
        $r35 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i8 = virtualinvoke $r35.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i8;
        goto label21;

     label9:
        $r36 = new sun.security.provider.PolicyParser$ParsingException;
        $r37 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i9 = virtualinvoke $r37.<java.io.StreamTokenizer: int lineno()>();
        $r38 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $r39 = $r38.<java.io.StreamTokenizer: java.lang.String sval>;
        specialinvoke $r36.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>($i9, r1, $r39);
        throw $r36;

     label10:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(",");
        if $z6 == 0 goto label11;

        $r40 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i10 = virtualinvoke $r40.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i10;
        goto label21;

     label11:
        $r41 = new sun.security.provider.PolicyParser$ParsingException;
        $r42 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i11 = virtualinvoke $r42.<java.io.StreamTokenizer: int lineno()>();
        specialinvoke $r41.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>($i11, r1, ",");
        throw $r41;

     label12:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("{");
        if $z7 == 0 goto label13;

        $r43 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i12 = virtualinvoke $r43.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i12;
        goto label21;

     label13:
        $r44 = new sun.security.provider.PolicyParser$ParsingException;
        $r45 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i13 = virtualinvoke $r45.<java.io.StreamTokenizer: int lineno()>();
        specialinvoke $r44.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>($i13, r1, "{");
        throw $r44;

     label14:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("}");
        if $z8 == 0 goto label15;

        $r46 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i14 = virtualinvoke $r46.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i14;
        goto label21;

     label15:
        $r47 = new sun.security.provider.PolicyParser$ParsingException;
        $r48 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i15 = virtualinvoke $r48.<java.io.StreamTokenizer: int lineno()>();
        specialinvoke $r47.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>($i15, r1, "}");
        throw $r47;

     label16:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(";");
        if $z9 == 0 goto label17;

        $r49 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i16 = virtualinvoke $r49.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i16;
        goto label21;

     label17:
        $r50 = new sun.security.provider.PolicyParser$ParsingException;
        $r51 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i17 = virtualinvoke $r51.<java.io.StreamTokenizer: int lineno()>();
        specialinvoke $r50.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>($i17, r1, ";");
        throw $r50;

     label18:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("*");
        if $z10 == 0 goto label19;

        $r52 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i18 = virtualinvoke $r52.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i18;
        goto label21;

     label19:
        $r53 = new sun.security.provider.PolicyParser$ParsingException;
        $r54 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i19 = virtualinvoke $r54.<java.io.StreamTokenizer: int lineno()>();
        specialinvoke $r53.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>($i19, r1, "*");
        throw $r53;

     label20:
        $r55 = new sun.security.provider.PolicyParser$ParsingException;
        $r56 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i20 = virtualinvoke $r56.<java.io.StreamTokenizer: int lineno()>();
        $r57 = new java.lang.String;
        $r58 = newarray (char)[1];
        $i21 = r0.<sun.security.provider.PolicyParser: int lookahead>;
        $c22 = (char) $i21;
        $r58[0] = $c22;
        specialinvoke $r57.<java.lang.String: void <init>(char[])>($r58);
        specialinvoke $r55.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>($i20, r1, $r57);
        throw $r55;

     label21:
        return r2;
    }

    private void skipEntry() throws sun.security.provider.PolicyParser$ParsingException, java.io.IOException
    {
        sun.security.provider.PolicyParser r0;
        java.lang.StringBuilder $r1, $r5, $r8;
        int $i0, $i1, $i2, $i3;
        sun.security.provider.PolicyParser$ParsingException $r2, $r10;
        java.io.StreamTokenizer $r3, $r6, $r12;
        java.lang.String $r4, $r7, $r9, $r11;
        double $d0;

        r0 := @this: sun.security.provider.PolicyParser;

     label0:
        $i0 = r0.<sun.security.provider.PolicyParser: int lookahead>;
        if $i0 == 59 goto label4;

        $i1 = r0.<sun.security.provider.PolicyParser: int lookahead>;
        lookupswitch($i1)
        {
            case -2: goto label1;
            case -1: goto label2;
            default: goto label3;
        };

     label1:
        $r2 = new sun.security.provider.PolicyParser$ParsingException;
        $r3 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i2 = virtualinvoke $r3.<java.io.StreamTokenizer: int lineno()>();
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r4 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("number.");
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $d0 = $r6.<java.io.StreamTokenizer: double nval>;
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>($i2, ";", $r9);
        throw $r2;

     label2:
        $r10 = new sun.security.provider.PolicyParser$ParsingException;
        $r11 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("expected.read.end.of.file.");
        specialinvoke $r10.<sun.security.provider.PolicyParser$ParsingException: void <init>(java.lang.String)>($r11);
        throw $r10;

     label3:
        $r12 = r0.<sun.security.provider.PolicyParser: java.io.StreamTokenizer st>;
        $i3 = virtualinvoke $r12.<java.io.StreamTokenizer: int nextToken()>();
        r0.<sun.security.provider.PolicyParser: int lookahead> = $i3;
        goto label0;

     label4:
        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;
        java.io.FileReader r1, $r6;
        java.io.FileWriter r2, $r8;
        sun.security.provider.PolicyParser r3, $r5;
        java.lang.Throwable r4, $r10;
        java.lang.String $r7, $r9;

        r0 := @parameter0: java.lang.String[];
        r1 = null;
        r2 = null;

     label0:
        $r5 = new sun.security.provider.PolicyParser;
        specialinvoke $r5.<sun.security.provider.PolicyParser: void <init>(boolean)>(1);
        r3 = $r5;
        $r6 = new java.io.FileReader;
        $r7 = r0[0];
        specialinvoke $r6.<java.io.FileReader: void <init>(java.lang.String)>($r7);
        r1 = $r6;
        virtualinvoke r3.<sun.security.provider.PolicyParser: void read(java.io.Reader)>(r1);
        $r8 = new java.io.FileWriter;
        $r9 = r0[1];
        specialinvoke $r8.<java.io.FileWriter: void <init>(java.lang.String)>($r9);
        r2 = $r8;
        virtualinvoke r3.<sun.security.provider.PolicyParser: void write(java.io.Writer)>(r2);

     label1:
        if r1 == null goto label2;

        virtualinvoke r1.<java.io.FileReader: void close()>();

     label2:
        if r2 == null goto label8;

        virtualinvoke r2.<java.io.FileWriter: void close()>();
        goto label8;

     label3:
        $r10 := @caughtexception;

     label4:
        r4 = $r10;

     label5:
        if r1 == null goto label6;

        virtualinvoke r1.<java.io.FileReader: void close()>();

     label6:
        if r2 == null goto label7;

        virtualinvoke r2.<java.io.FileWriter: void close()>();

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label0 to label1 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static void <clinit>()
    {
        sun.security.util.Debug $r0;

        $r0 = staticinvoke <sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String,java.lang.String)>("parser", "\t[Policy Parser]");
        <sun.security.provider.PolicyParser: sun.security.util.Debug debug> = $r0;
        return;
    }
}
