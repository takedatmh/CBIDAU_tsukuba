public class sun.misc.ExtensionDependency extends java.lang.Object
{
    private static java.util.Vector providers;
    static final boolean DEBUG;

    public void <init>()
    {
        sun.misc.ExtensionDependency r0;

        r0 := @this: sun.misc.ExtensionDependency;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static synchronized void addExtensionInstallationProvider(sun.misc.ExtensionInstallationProvider)
    {
        sun.misc.ExtensionInstallationProvider r0;
        java.util.Vector $r1, $r2, $r3;

        r0 := @parameter0: sun.misc.ExtensionInstallationProvider;
        $r1 = <sun.misc.ExtensionDependency: java.util.Vector providers>;
        if $r1 != null goto label0;

        $r2 = new java.util.Vector;
        specialinvoke $r2.<java.util.Vector: void <init>()>();
        <sun.misc.ExtensionDependency: java.util.Vector providers> = $r2;

     label0:
        $r3 = <sun.misc.ExtensionDependency: java.util.Vector providers>;
        virtualinvoke $r3.<java.util.Vector: boolean add(java.lang.Object)>(r0);
        return;
    }

    public static synchronized void removeExtensionInstallationProvider(sun.misc.ExtensionInstallationProvider)
    {
        sun.misc.ExtensionInstallationProvider r0;
        java.util.Vector $r1;

        r0 := @parameter0: sun.misc.ExtensionInstallationProvider;
        $r1 = <sun.misc.ExtensionDependency: java.util.Vector providers>;
        virtualinvoke $r1.<java.util.Vector: boolean remove(java.lang.Object)>(r0);
        return;
    }

    public static boolean checkExtensionsDependencies(java.util.jar.JarFile)
    {
        java.util.jar.JarFile r0;
        java.util.Vector $r1;
        sun.misc.ExtensionDependency r2, $r3;
        boolean $z0;
        sun.misc.ExtensionInstallationException $r4, r5;
        java.lang.String $r6;

        r0 := @parameter0: java.util.jar.JarFile;
        $r1 = <sun.misc.ExtensionDependency: java.util.Vector providers>;
        if $r1 != null goto label0;

        return 1;

     label0:
        $r3 = new sun.misc.ExtensionDependency;
        specialinvoke $r3.<sun.misc.ExtensionDependency: void <init>()>();
        r2 = $r3;
        $z0 = virtualinvoke r2.<sun.misc.ExtensionDependency: boolean checkExtensions(java.util.jar.JarFile)>(r0);

     label1:
        return $z0;

     label2:
        $r4 := @caughtexception;
        r5 = $r4;
        $r6 = virtualinvoke r5.<sun.misc.ExtensionInstallationException: java.lang.String getMessage()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r6);
        return 0;

        catch sun.misc.ExtensionInstallationException from label0 to label1 with label2;
    }

    protected boolean checkExtensions(java.util.jar.JarFile) throws sun.misc.ExtensionInstallationException
    {
        sun.misc.ExtensionDependency r0;
        java.util.jar.JarFile r1;
        java.util.jar.Manifest r2;
        java.io.IOException r3, $r10;
        java.util.jar.Attributes r4;
        java.util.jar.Attributes$Name $r5, $r22;
        java.lang.String r6, r8, r9, $r14, $r18, $r23, $r25, $r28, $r35, $r39, $r42, $r44;
        java.util.StringTokenizer r7, $r11;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r24, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r40, $r41, $r43;

        r0 := @this: sun.misc.ExtensionDependency;
        r1 := @parameter0: java.util.jar.JarFile;

     label0:
        r2 = virtualinvoke r1.<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>();

     label1:
        goto label3;

     label2:
        $r10 := @caughtexception;
        r3 = $r10;
        return 0;

     label3:
        if r2 != null goto label4;

        return 1;

     label4:
        z0 = 1;
        r4 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();
        if r4 == null goto label10;

        $r5 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name EXTENSION_LIST>;
        r6 = virtualinvoke r4.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r5);
        if r6 == null goto label9;

        $r11 = new java.util.StringTokenizer;
        specialinvoke $r11.<java.util.StringTokenizer: void <init>(java.lang.String)>(r6);
        r7 = $r11;

     label5:
        $z1 = virtualinvoke r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z1 == 0 goto label8;

        r8 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The file ");
        $r14 = virtualinvoke r1.<java.util.jar.JarFile: java.lang.String getName()>();
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appears to depend on ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r18);
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        $r22 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name EXTENSION_NAME>;
        $r23 = virtualinvoke $r22.<java.util.jar.Attributes$Name: java.lang.String toString()>();
        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        r9 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        $r25 = virtualinvoke r4.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>(r9);
        if $r25 != null goto label6;

        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The jar file ");
        $r28 = virtualinvoke r1.<java.util.jar.JarFile: java.lang.String getName()>();
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appers to depend on ");
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but does not define the ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute in its manifest ");
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r35);
        goto label7;

     label6:
        $z2 = virtualinvoke r0.<sun.misc.ExtensionDependency: boolean checkExtension(java.lang.String,java.util.jar.Attributes)>(r8, r4);
        if $z2 != 0 goto label7;

        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed installing ");
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r39);
        z0 = 0;

     label7:
        goto label5;

     label8:
        goto label10;

     label9:
        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No dependencies for ");
        $r42 = virtualinvoke r1.<java.util.jar.JarFile: java.lang.String getName()>();
        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r44);

     label10:
        return z0;

        catch java.io.IOException from label0 to label1 with label2;
    }

    protected synchronized boolean checkExtension(java.lang.String, java.util.jar.Attributes) throws sun.misc.ExtensionInstallationException
    {
        sun.misc.ExtensionDependency r0;
        java.lang.String r1, $r7;
        java.util.jar.Attributes r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        sun.misc.ExtensionInfo r4, $r8;
        boolean $z0, $z1;

        r0 := @this: sun.misc.ExtensionDependency;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.Attributes;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking extension ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r7);
        $z0 = virtualinvoke r0.<sun.misc.ExtensionDependency: boolean checkExtensionAgainstInstalled(java.lang.String,java.util.jar.Attributes)>(r1, r2);
        if $z0 == 0 goto label0;

        return 1;

     label0:
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>("Extension not currently installed ");
        $r8 = new sun.misc.ExtensionInfo;
        specialinvoke $r8.<sun.misc.ExtensionInfo: void <init>(java.lang.String,java.util.jar.Attributes)>(r1, r2);
        r4 = $r8;
        $z1 = virtualinvoke r0.<sun.misc.ExtensionDependency: boolean installExtension(sun.misc.ExtensionInfo,sun.misc.ExtensionInfo)>(r4, null);
        return $z1;
    }

    boolean checkExtensionAgainstInstalled(java.lang.String, java.util.jar.Attributes) throws sun.misc.ExtensionInstallationException
    {
        sun.misc.ExtensionDependency r0;
        java.lang.String r1;
        java.util.jar.Attributes r2;
        java.io.File r3, $r12;
        java.io.FileNotFoundException r4, r6, $r7, $r13;
        java.io.IOException r5, $r8, r9, $r11, $r14, r15;
        boolean $z0, $z1, $z2, $z3;
        java.io.File[] r10;
        int i0, $i1;

        r0 := @this: sun.misc.ExtensionDependency;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.Attributes;
        r3 = specialinvoke r0.<sun.misc.ExtensionDependency: java.io.File checkExtensionExists(java.lang.String)>(r1);
        if r3 == null goto label6;

     label0:
        $z0 = virtualinvoke r0.<sun.misc.ExtensionDependency: boolean checkExtensionAgainst(java.lang.String,java.util.jar.Attributes,java.io.File)>(r1, r2, r3);
        if $z0 == 0 goto label2;

        $z1 = 1;

     label1:
        return $z1;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;
        r4 = $r7;
        specialinvoke r0.<sun.misc.ExtensionDependency: void debugException(java.lang.Throwable)>(r4);
        goto label5;

     label4:
        $r8 := @caughtexception;
        r9 = $r8;
        specialinvoke r0.<sun.misc.ExtensionDependency: void debugException(java.lang.Throwable)>(r9);

     label5:
        return 0;

     label6:
        r10 = specialinvoke r0.<sun.misc.ExtensionDependency: java.io.File[] getInstalledExtensions()>();

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;
        r5 = $r11;
        specialinvoke r0.<sun.misc.ExtensionDependency: void debugException(java.lang.Throwable)>(r5);
        return 0;

     label9:
        i0 = 0;

     label10:
        $i1 = lengthof r10;
        if i0 >= $i1 goto label17;

     label11:
        $r12 = r10[i0];
        $z2 = virtualinvoke r0.<sun.misc.ExtensionDependency: boolean checkExtensionAgainst(java.lang.String,java.util.jar.Attributes,java.io.File)>(r1, r2, $r12);
        if $z2 == 0 goto label13;

        $z3 = 1;

     label12:
        return $z3;

     label13:
        goto label16;

     label14:
        $r13 := @caughtexception;
        r6 = $r13;
        specialinvoke r0.<sun.misc.ExtensionDependency: void debugException(java.lang.Throwable)>(r6);
        goto label16;

     label15:
        $r14 := @caughtexception;
        r15 = $r14;
        specialinvoke r0.<sun.misc.ExtensionDependency: void debugException(java.lang.Throwable)>(r15);

     label16:
        i0 = i0 + 1;
        goto label10;

     label17:
        return 0;

        catch java.io.FileNotFoundException from label0 to label1 with label3;
        catch java.io.IOException from label0 to label1 with label4;
        catch java.io.IOException from label6 to label7 with label8;
        catch java.io.FileNotFoundException from label11 to label12 with label14;
        catch java.io.IOException from label11 to label12 with label15;
    }

    protected boolean checkExtensionAgainst(java.lang.String, java.util.jar.Attributes, java.io.File) throws java.io.IOException, java.io.FileNotFoundException, sun.misc.ExtensionInstallationException
    {
        sun.misc.ExtensionDependency r0;
        java.lang.String r1, $r11, $r13, $r27, $r33;
        java.util.jar.Attributes r2, r7;
        java.io.File r3;
        java.lang.StringBuilder $r4, $r8, $r9, $r10, $r12, $r24, $r25, $r26, $r30, $r31, $r32;
        java.util.jar.Manifest r5;
        java.security.PrivilegedActionException r6, $r16;
        byte b0;
        null_type n0;
        sun.misc.ExtensionDependency$1 $r14;
        java.lang.Object $r15;
        java.lang.Exception $r17, $r18, $r20;
        boolean $z0, $z1;
        java.io.FileNotFoundException $r19;
        java.io.IOException $r21;
        sun.misc.ExtensionInfo $r22, r23, $r28, r29;
        int i1;

        r0 := @this: sun.misc.ExtensionDependency;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.Attributes;
        r3 := @parameter2: java.io.File;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking extension ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" against ");
        $r11 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r13);

     label0:
        $r14 = new sun.misc.ExtensionDependency$1;
        specialinvoke $r14.<sun.misc.ExtensionDependency$1: void <init>(sun.misc.ExtensionDependency,java.io.File)>(r0, r3);
        $r15 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r14);
        r5 = (java.util.jar.Manifest) $r15;

     label1:
        goto label4;

     label2:
        $r16 := @caughtexception;
        r6 = $r16;
        $r17 = virtualinvoke r6.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $z0 = $r17 instanceof java.io.FileNotFoundException;
        if $z0 == 0 goto label3;

        $r18 = virtualinvoke r6.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $r19 = (java.io.FileNotFoundException) $r18;
        throw $r19;

     label3:
        $r20 = virtualinvoke r6.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $r21 = (java.io.IOException) $r20;
        throw $r21;

     label4:
        $r22 = new sun.misc.ExtensionInfo;
        specialinvoke $r22.<sun.misc.ExtensionInfo: void <init>(java.lang.String,java.util.jar.Attributes)>(r1, r2);
        r23 = $r22;
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested Extension : ");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r27);
        b0 = 4;
        n0 = null;
        if r5 == null goto label8;

        r7 = virtualinvoke r5.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();
        if r7 == null goto label8;

        $r28 = new sun.misc.ExtensionInfo;
        specialinvoke $r28.<sun.misc.ExtensionInfo: void <init>(java.lang.String,java.util.jar.Attributes)>(null, r7);
        r29 = $r28;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extension Installed ");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r33);
        i1 = virtualinvoke r29.<sun.misc.ExtensionInfo: int isCompatibleWith(sun.misc.ExtensionInfo)>(r23);
        lookupswitch(i1)
        {
            case 0: goto label5;
            case 4: goto label6;
            default: goto label7;
        };

     label5:
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>("Extensions are compatible");
        return 1;

     label6:
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>("Extensions are incompatible");
        return 0;

     label7:
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>("Extensions require an upgrade or vendor switch");
        $z1 = virtualinvoke r0.<sun.misc.ExtensionDependency: boolean installExtension(sun.misc.ExtensionInfo,sun.misc.ExtensionInfo)>(r23, r29);
        return $z1;

     label8:
        return 0;

        catch java.security.PrivilegedActionException from label0 to label1 with label2;
    }

    protected boolean installExtension(sun.misc.ExtensionInfo, sun.misc.ExtensionInfo) throws sun.misc.ExtensionInstallationException
    {
        sun.misc.ExtensionDependency r0;
        sun.misc.ExtensionInfo r1, r2;
        java.util.Vector $r3, r4, r5, $r8;
        java.lang.Throwable r6, $r10;
        sun.misc.Launcher$ExtClassLoader r7;
        java.lang.Object $r9, $r12;
        java.util.Enumeration r11;
        boolean $z0, $z1;
        sun.misc.ExtensionInstallationProvider r13;
        java.lang.StringBuilder $r14, $r16, $r17, $r23, $r25, $r26;
        java.lang.String $r15, $r18, $r24, $r27;
        sun.misc.Launcher $r19;
        java.lang.ClassLoader $r20, $r21;

        r0 := @this: sun.misc.ExtensionDependency;
        r1 := @parameter0: sun.misc.ExtensionInfo;
        r2 := @parameter1: sun.misc.ExtensionInfo;
        $r3 = <sun.misc.ExtensionDependency: java.util.Vector providers>;
        r4 = $r3;
        entermonitor $r3;

     label0:
        $r8 = <sun.misc.ExtensionDependency: java.util.Vector providers>;
        $r9 = virtualinvoke $r8.<java.util.Vector: java.lang.Object clone()>();
        r5 = (java.util.Vector) $r9;
        exitmonitor r4;

     label1:
        goto label5;

     label2:
        $r10 := @caughtexception;

     label3:
        r6 = $r10;
        exitmonitor r4;

     label4:
        throw r6;

     label5:
        r11 = virtualinvoke r5.<java.util.Vector: java.util.Enumeration elements()>();

     label6:
        $z0 = interfaceinvoke r11.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label8;

        $r12 = interfaceinvoke r11.<java.util.Enumeration: java.lang.Object nextElement()>();
        r13 = (sun.misc.ExtensionInstallationProvider) $r12;
        if r13 == null goto label7;

        $z1 = interfaceinvoke r13.<sun.misc.ExtensionInstallationProvider: boolean installExtension(sun.misc.ExtensionInfo,sun.misc.ExtensionInfo)>(r1, r2);
        if $z1 == 0 goto label7;

        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = r1.<sun.misc.ExtensionInfo: java.lang.String name>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" installation successful");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r18);
        $r19 = staticinvoke <sun.misc.Launcher: sun.misc.Launcher getLauncher()>();
        $r20 = virtualinvoke $r19.<sun.misc.Launcher: java.lang.ClassLoader getClassLoader()>();
        $r21 = virtualinvoke $r20.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();
        r7 = (sun.misc.Launcher$ExtClassLoader) $r21;
        specialinvoke r0.<sun.misc.ExtensionDependency: java.lang.Boolean addNewExtensionsToClassLoader(sun.misc.Launcher$ExtClassLoader)>(r7);
        return 1;

     label7:
        goto label6;

     label8:
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = r1.<sun.misc.ExtensionInfo: java.lang.String name>;
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" installation failed");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r27);
        return 0;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    private java.io.File checkExtensionExists(java.lang.String)
    {
        sun.misc.ExtensionDependency r0;
        java.lang.String r1, r2;
        java.lang.String[] r3, $r4;
        sun.misc.ExtensionDependency$2 $r5;
        java.lang.Object $r6;
        java.io.File $r7;

        r0 := @this: sun.misc.ExtensionDependency;
        r1 := @parameter0: java.lang.String;
        r2 = r1;
        $r4 = newarray (java.lang.String)[2];
        $r4[0] = ".jar";
        $r4[1] = ".zip";
        r3 = $r4;
        $r5 = new sun.misc.ExtensionDependency$2;
        specialinvoke $r5.<sun.misc.ExtensionDependency$2: void <init>(sun.misc.ExtensionDependency,java.lang.String[],java.lang.String)>(r0, r3, r2);
        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r5);
        $r7 = (java.io.File) $r6;
        return $r7;
    }

    private static java.io.File[] getExtDirs()
    {
        sun.security.action.GetPropertyAction $r0;
        java.lang.String r1, $r2, $r10, $r12, $r19, $r23, $r27;
        java.util.StringTokenizer r3, $r6;
        int i0, i1, $i2;
        java.io.File[] r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r18, $r20, $r21, $r22, $r24, $r25, $r26;
        java.io.File $r11, $r17;

        $r0 = new sun.security.action.GetPropertyAction;
        specialinvoke $r0.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>("java.ext.dirs");
        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        r1 = (java.lang.String) $r5;
        if r1 == null goto label2;

        $r6 = new java.util.StringTokenizer;
        $r2 = <java.io.File: java.lang.String pathSeparator>;
        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, $r2);
        r3 = $r6;
        i0 = virtualinvoke r3.<java.util.StringTokenizer: int countTokens()>();
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getExtDirs count ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r10);
        r4 = newarray (java.io.File)[i0];
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        $r11 = new java.io.File;
        $r12 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r12);
        r4[i1] = $r11;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getExtDirs dirs[");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");
        $r17 = r4[i1];
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r19);
        i1 = i1 + 1;
        goto label0;

     label1:
        goto label3;

     label2:
        r4 = newarray (java.io.File)[0];
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getExtDirs dirs ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r23);

     label3:
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getExtDirs dirs.length ");
        $i2 = lengthof r4;
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r27);
        return r4;
    }

    private static java.io.File[] getExtFiles(java.io.File[]) throws java.io.IOException
    {
        java.io.File[] r0, r20;
        java.util.Vector $r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String[] r3;
        java.io.File r4, $r5, $r11, $r12;
        sun.misc.JarFilter $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r23;
        java.lang.String $r10, $r13, $r19, $r24;

        r0 := @parameter0: java.io.File[];
        $r1 = new java.util.Vector;
        specialinvoke $r1.<java.util.Vector: void <init>()>();
        r2 = $r1;
        i0 = 0;

     label0:
        $i2 = lengthof r0;
        if i0 >= $i2 goto label3;

        $r5 = r0[i0];
        $r6 = new sun.misc.JarFilter;
        specialinvoke $r6.<sun.misc.JarFilter: void <init>()>();
        r3 = virtualinvoke $r5.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>($r6);
        if r3 == null goto label2;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getExtFiles files.length ");
        $i3 = lengthof r3;
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r10);
        i1 = 0;

     label1:
        $i4 = lengthof r3;
        if i1 >= $i4 goto label2;

        $r11 = new java.io.File;
        $r12 = r0[i0];
        $r13 = r3[i1];
        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, $r13);
        r4 = $r11;
        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>(r4);
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getExtFiles f[");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r19);
        i1 = i1 + 1;
        goto label1;

     label2:
        i0 = i0 + 1;
        goto label0;

     label3:
        $i5 = virtualinvoke r2.<java.util.Vector: int size()>();
        r20 = newarray (java.io.File)[$i5];
        virtualinvoke r2.<java.util.Vector: void copyInto(java.lang.Object[])>(r20);
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getExtFiles ua.length ");
        $i6 = lengthof r20;
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r24);
        return r20;
    }

    private java.io.File[] getInstalledExtensions() throws java.io.IOException
    {
        sun.misc.ExtensionDependency r0;
        sun.misc.ExtensionDependency$3 $r1;
        java.lang.Object $r2;
        java.io.File[] $r3;

        r0 := @this: sun.misc.ExtensionDependency;
        $r1 = new sun.misc.ExtensionDependency$3;
        specialinvoke $r1.<sun.misc.ExtensionDependency$3: void <init>(sun.misc.ExtensionDependency)>(r0);
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        $r3 = (java.io.File[]) $r2;
        return $r3;
    }

    private java.lang.Boolean addNewExtensionsToClassLoader(sun.misc.Launcher$ExtClassLoader)
    {
        sun.misc.ExtensionDependency r0;
        sun.misc.Launcher$ExtClassLoader r1;
        java.io.File[] r2;
        int i0, i1, $i2, $i3, $i4;
        java.io.File r3;
        java.net.URL r4, $r12, $r17;
        java.net.URL[] r5;
        boolean z0;
        sun.misc.ExtensionDependency$4 $r6;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r20, $r21, $r22;
        java.lang.String $r16, $r18, $r19, $r23;
        java.net.MalformedURLException $r24, r25;
        java.io.IOException $r26, r27;
        java.lang.Boolean $r28;

        r0 := @this: sun.misc.ExtensionDependency;
        r1 := @parameter0: sun.misc.Launcher$ExtClassLoader;

     label0:
        r2 = specialinvoke r0.<sun.misc.ExtensionDependency: java.io.File[] getInstalledExtensions()>();
        i0 = 0;

     label1:
        $i2 = lengthof r2;
        if i0 >= $i2 goto label6;

        r3 = r2[i0];
        $r6 = new sun.misc.ExtensionDependency$4;
        specialinvoke $r6.<sun.misc.ExtensionDependency$4: void <init>(sun.misc.ExtensionDependency,java.io.File)>(r0, r3);
        $r7 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r6);
        r4 = (java.net.URL) $r7;
        if r4 == null goto label5;

        r5 = virtualinvoke r1.<sun.misc.Launcher$ExtClassLoader: java.net.URL[] getURLs()>();
        z0 = 0;
        i1 = 0;

     label2:
        $i3 = lengthof r5;
        if i1 >= $i3 goto label4;

        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URL[");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is ");
        $r12 = r5[i1];
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" looking for ");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r16);
        $r17 = r5[i1];
        $r18 = virtualinvoke $r17.<java.net.URL: java.lang.String toString()>();
        $r19 = virtualinvoke r4.<java.net.URL: java.lang.String toString()>();
        $i4 = virtualinvoke $r18.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r19);
        if $i4 != 0 goto label3;

        z0 = 1;
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>("Found !");

     label3:
        i1 = i1 + 1;
        goto label2;

     label4:
        if z0 != 0 goto label5;

        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not Found ! adding to the classloader ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>($r23);
        virtualinvoke r1.<sun.misc.Launcher$ExtClassLoader: void addExtURL(java.net.URL)>(r4);

     label5:
        i0 = i0 + 1;
        goto label1;

     label6:
        goto label9;

     label7:
        $r24 := @caughtexception;
        r25 = $r24;
        virtualinvoke r25.<java.net.MalformedURLException: void printStackTrace()>();
        goto label9;

     label8:
        $r26 := @caughtexception;
        r27 = $r26;
        virtualinvoke r27.<java.io.IOException: void printStackTrace()>();

     label9:
        $r28 = <java.lang.Boolean: java.lang.Boolean TRUE>;
        return $r28;

        catch java.net.MalformedURLException from label0 to label6 with label7;
        catch java.io.IOException from label0 to label6 with label8;
    }

    private static void debug(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;
        return;
    }

    private void debugException(java.lang.Throwable)
    {
        sun.misc.ExtensionDependency r0;
        java.lang.Throwable r1;

        r0 := @this: sun.misc.ExtensionDependency;
        r1 := @parameter0: java.lang.Throwable;
        return;
    }

    static java.io.File[] access$000()
    {
        java.io.File[] $r0;

        $r0 = staticinvoke <sun.misc.ExtensionDependency: java.io.File[] getExtDirs()>();
        return $r0;
    }

    static void access$100(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;
        staticinvoke <sun.misc.ExtensionDependency: void debug(java.lang.String)>(r0);
        return;
    }

    static void access$200(sun.misc.ExtensionDependency, java.lang.Throwable)
    {
        sun.misc.ExtensionDependency r0;
        java.lang.Throwable r1;

        r0 := @parameter0: sun.misc.ExtensionDependency;
        r1 := @parameter1: java.lang.Throwable;
        specialinvoke r0.<sun.misc.ExtensionDependency: void debugException(java.lang.Throwable)>(r1);
        return;
    }

    static java.io.File[] access$300(java.io.File[]) throws java.io.IOException
    {
        java.io.File[] r0, $r1;

        r0 := @parameter0: java.io.File[];
        $r1 = staticinvoke <sun.misc.ExtensionDependency: java.io.File[] getExtFiles(java.io.File[])>(r0);
        return $r1;
    }
}
