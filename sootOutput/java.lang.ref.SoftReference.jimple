public class java.lang.ref.SoftReference extends java.lang.ref.Reference
{
    private static long clock;
    private long timestamp;

    public void <init>(java.lang.Object)
    {
        java.lang.ref.SoftReference r0;
        java.lang.Object r1;
        long $l0;

        r0 := @this: java.lang.ref.SoftReference;
        r1 := @parameter0: java.lang.Object;
        specialinvoke r0.<java.lang.ref.Reference: void <init>(java.lang.Object)>(r1);
        $l0 = <java.lang.ref.SoftReference: long clock>;
        r0.<java.lang.ref.SoftReference: long timestamp> = $l0;
        return;
    }

    public void <init>(java.lang.Object, java.lang.ref.ReferenceQueue)
    {
        java.lang.ref.SoftReference r0;
        java.lang.Object r1;
        java.lang.ref.ReferenceQueue r2;
        long $l0;

        r0 := @this: java.lang.ref.SoftReference;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.ref.ReferenceQueue;
        specialinvoke r0.<java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, r2);
        $l0 = <java.lang.ref.SoftReference: long clock>;
        r0.<java.lang.ref.SoftReference: long timestamp> = $l0;
        return;
    }

    public java.lang.Object get()
    {
        java.lang.ref.SoftReference r0;
        java.lang.Object r1;
        long $l0, $l1, $l2;
        byte $b3;

        r0 := @this: java.lang.ref.SoftReference;
        r1 = specialinvoke r0.<java.lang.ref.Reference: java.lang.Object get()>();
        if r1 == null goto label0;

        $l2 = r0.<java.lang.ref.SoftReference: long timestamp>;
        $l0 = <java.lang.ref.SoftReference: long clock>;
        $b3 = $l2 cmp $l0;
        if $b3 == 0 goto label0;

        $l1 = <java.lang.ref.SoftReference: long clock>;
        r0.<java.lang.ref.SoftReference: long timestamp> = $l1;

     label0:
        return r1;
    }
}
