public class org.apache.coyote.http11.filters.GzipOutputFilter extends java.lang.Object implements org.apache.coyote.http11.OutputFilter
{
    protected static org.apache.juli.logging.Log log;
    protected org.apache.coyote.OutputBuffer buffer;
    protected java.util.zip.GZIPOutputStream compressionStream;
    protected java.io.OutputStream fakeOutputStream;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/coyote/http11/filters/GzipOutputFilter");
        <org.apache.coyote.http11.filters.GzipOutputFilter: org.apache.juli.logging.Log log> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.coyote.http11.filters.GzipOutputFilter r0;
        org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream $r1;

        r0 := @this: org.apache.coyote.http11.filters.GzipOutputFilter;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream> = null;
        $r1 = new org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream;
        specialinvoke $r1.<org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream: void <init>(org.apache.coyote.http11.filters.GzipOutputFilter)>(r0);
        r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.io.OutputStream fakeOutputStream> = $r1;
        return;
    }

    public int doWrite(org.apache.tomcat.util.buf.ByteChunk, org.apache.coyote.Response) throws java.io.IOException
    {
        org.apache.coyote.http11.filters.GzipOutputFilter r0;
        org.apache.tomcat.util.buf.ByteChunk r1;
        org.apache.coyote.Response r2;
        org.apache.tomcat.util.compat.JreCompat $r3;
        java.util.zip.GZIPOutputStream $r4, $r6, $r9;
        boolean $z0;
        java.io.OutputStream $r5, $r8;
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream $r7;
        byte[] $r10;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.coyote.http11.filters.GzipOutputFilter;
        r1 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        r2 := @parameter1: org.apache.coyote.Response;
        $r4 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream>;
        if $r4 != null goto label1;

        $z0 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: boolean isJre7Available()>();
        if $z0 == 0 goto label0;

        $r3 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: org.apache.tomcat.util.compat.JreCompat getInstance()>();
        $r5 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.io.OutputStream fakeOutputStream>;
        $r6 = virtualinvoke $r3.<org.apache.tomcat.util.compat.JreCompat: java.util.zip.GZIPOutputStream getFlushableGZipOutputStream(java.io.OutputStream)>($r5);
        r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream> = $r6;
        goto label1;

     label0:
        $r7 = new org.apache.coyote.http11.filters.FlushableGZIPOutputStream;
        $r8 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.io.OutputStream fakeOutputStream>;
        specialinvoke $r7.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void <init>(java.io.OutputStream)>($r8);
        r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream> = $r7;

     label1:
        $r9 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream>;
        $r10 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBytes()>();
        $i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getStart()>();
        $i1 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        virtualinvoke $r9.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r10, $i0, $i1);
        $i2 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        return $i2;
    }

    public long getBytesWritten()
    {
        org.apache.coyote.http11.filters.GzipOutputFilter r0;
        org.apache.coyote.OutputBuffer $r1;
        long $l0;

        r0 := @this: org.apache.coyote.http11.filters.GzipOutputFilter;
        $r1 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: org.apache.coyote.OutputBuffer buffer>;
        $l0 = interfaceinvoke $r1.<org.apache.coyote.OutputBuffer: long getBytesWritten()>();
        return $l0;
    }

    public void flush()
    {
        org.apache.coyote.http11.filters.GzipOutputFilter r0;
        java.io.IOException r1, $r6;
        java.util.zip.GZIPOutputStream $r2, $r5;
        org.apache.juli.logging.Log $r3, $r4, $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.coyote.http11.filters.GzipOutputFilter;
        $r2 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream>;
        if $r2 == null goto label4;

     label0:
        $r3 = <org.apache.coyote.http11.filters.GzipOutputFilter: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label1;

        $r4 = <org.apache.coyote.http11.filters.GzipOutputFilter: org.apache.juli.logging.Log log>;
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Flushing the compression stream!");

     label1:
        $r5 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream>;
        virtualinvoke $r5.<java.util.zip.GZIPOutputStream: void flush()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r1 = $r6;
        $r7 = <org.apache.coyote.http11.filters.GzipOutputFilter: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r7.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label4;

        $r8 = <org.apache.coyote.http11.filters.GzipOutputFilter: org.apache.juli.logging.Log log>;
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Ignored exception while flushing gzip filter", r1);

     label4:
        return;

        catch java.io.IOException from label0 to label2 with label3;
    }

    public void setResponse(org.apache.coyote.Response)
    {
        org.apache.coyote.http11.filters.GzipOutputFilter r0;
        org.apache.coyote.Response r1;

        r0 := @this: org.apache.coyote.http11.filters.GzipOutputFilter;
        r1 := @parameter0: org.apache.coyote.Response;
        return;
    }

    public void setBuffer(org.apache.coyote.OutputBuffer)
    {
        org.apache.coyote.http11.filters.GzipOutputFilter r0;
        org.apache.coyote.OutputBuffer r1;

        r0 := @this: org.apache.coyote.http11.filters.GzipOutputFilter;
        r1 := @parameter0: org.apache.coyote.OutputBuffer;
        r0.<org.apache.coyote.http11.filters.GzipOutputFilter: org.apache.coyote.OutputBuffer buffer> = r1;
        return;
    }

    public long end() throws java.io.IOException
    {
        org.apache.coyote.http11.filters.GzipOutputFilter r0;
        org.apache.tomcat.util.compat.JreCompat $r1;
        java.util.zip.GZIPOutputStream $r2, $r4, $r7, $r8;
        boolean $z0;
        java.io.OutputStream $r3, $r6;
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream $r5;
        org.apache.coyote.OutputBuffer $r9;
        org.apache.coyote.http11.OutputFilter $r10;
        long $l0;

        r0 := @this: org.apache.coyote.http11.filters.GzipOutputFilter;
        $r2 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream>;
        if $r2 != null goto label1;

        $z0 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: boolean isJre7Available()>();
        if $z0 == 0 goto label0;

        $r1 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: org.apache.tomcat.util.compat.JreCompat getInstance()>();
        $r3 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.io.OutputStream fakeOutputStream>;
        $r4 = virtualinvoke $r1.<org.apache.tomcat.util.compat.JreCompat: java.util.zip.GZIPOutputStream getFlushableGZipOutputStream(java.io.OutputStream)>($r3);
        r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream> = $r4;
        goto label1;

     label0:
        $r5 = new org.apache.coyote.http11.filters.FlushableGZIPOutputStream;
        $r6 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.io.OutputStream fakeOutputStream>;
        specialinvoke $r5.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void <init>(java.io.OutputStream)>($r6);
        r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream> = $r5;

     label1:
        $r7 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream>;
        virtualinvoke $r7.<java.util.zip.GZIPOutputStream: void finish()>();
        $r8 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream>;
        virtualinvoke $r8.<java.util.zip.GZIPOutputStream: void close()>();
        $r9 = r0.<org.apache.coyote.http11.filters.GzipOutputFilter: org.apache.coyote.OutputBuffer buffer>;
        $r10 = (org.apache.coyote.http11.OutputFilter) $r9;
        $l0 = interfaceinvoke $r10.<org.apache.coyote.http11.OutputFilter: long end()>();
        return $l0;
    }

    public void recycle()
    {
        org.apache.coyote.http11.filters.GzipOutputFilter r0;

        r0 := @this: org.apache.coyote.http11.filters.GzipOutputFilter;
        r0.<org.apache.coyote.http11.filters.GzipOutputFilter: java.util.zip.GZIPOutputStream compressionStream> = null;
        return;
    }
}
