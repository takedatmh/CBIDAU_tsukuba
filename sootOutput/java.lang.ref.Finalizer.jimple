final class java.lang.ref.Finalizer extends java.lang.ref.FinalReference
{
    private static java.lang.ref.ReferenceQueue queue;
    private static java.lang.ref.Finalizer unfinalized;
    private static final java.lang.Object lock;
    private java.lang.ref.Finalizer next;
    private java.lang.ref.Finalizer prev;

    private boolean hasBeenFinalized()
    {
        java.lang.ref.Finalizer r0, $r1;
        boolean $z0;

        r0 := @this: java.lang.ref.Finalizer;
        $r1 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next>;
        if $r1 != r0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private void add()
    {
        java.lang.ref.Finalizer r0, $r4, $r5, $r6;
        java.lang.Object $r1, r2;
        java.lang.Throwable r3, $r7;

        r0 := @this: java.lang.ref.Finalizer;
        $r1 = <java.lang.ref.Finalizer: java.lang.Object lock>;
        r2 = $r1;
        entermonitor $r1;

     label0:
        $r4 = <java.lang.ref.Finalizer: java.lang.ref.Finalizer unfinalized>;
        if $r4 == null goto label1;

        $r5 = <java.lang.ref.Finalizer: java.lang.ref.Finalizer unfinalized>;
        r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next> = $r5;
        $r6 = <java.lang.ref.Finalizer: java.lang.ref.Finalizer unfinalized>;
        $r6.<java.lang.ref.Finalizer: java.lang.ref.Finalizer prev> = r0;

     label1:
        <java.lang.ref.Finalizer: java.lang.ref.Finalizer unfinalized> = r0;
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r7 := @caughtexception;

     label4:
        r3 = $r7;
        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void remove()
    {
        java.lang.ref.Finalizer r0, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.Object $r1, r2;
        java.lang.Throwable r3, $r14;

        r0 := @this: java.lang.ref.Finalizer;
        $r1 = <java.lang.ref.Finalizer: java.lang.Object lock>;
        r2 = $r1;
        entermonitor $r1;

     label0:
        $r4 = <java.lang.ref.Finalizer: java.lang.ref.Finalizer unfinalized>;
        if $r4 != r0 goto label2;

        $r5 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next>;
        if $r5 == null goto label1;

        $r6 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next>;
        <java.lang.ref.Finalizer: java.lang.ref.Finalizer unfinalized> = $r6;
        goto label2;

     label1:
        $r7 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer prev>;
        <java.lang.ref.Finalizer: java.lang.ref.Finalizer unfinalized> = $r7;

     label2:
        $r8 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next>;
        if $r8 == null goto label3;

        $r9 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next>;
        $r10 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer prev>;
        $r9.<java.lang.ref.Finalizer: java.lang.ref.Finalizer prev> = $r10;

     label3:
        $r11 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer prev>;
        if $r11 == null goto label4;

        $r12 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer prev>;
        $r13 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next>;
        $r12.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next> = $r13;

     label4:
        r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next> = r0;
        r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer prev> = r0;
        exitmonitor r2;

     label5:
        goto label9;

     label6:
        $r14 := @caughtexception;

     label7:
        r3 = $r14;
        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label0 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void <init>(java.lang.Object)
    {
        java.lang.ref.Finalizer r0;
        java.lang.Object r1;
        java.lang.ref.ReferenceQueue $r2;

        r0 := @this: java.lang.ref.Finalizer;
        r1 := @parameter0: java.lang.Object;
        $r2 = <java.lang.ref.Finalizer: java.lang.ref.ReferenceQueue queue>;
        specialinvoke r0.<java.lang.ref.FinalReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, $r2);
        r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next> = null;
        r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer prev> = null;
        specialinvoke r0.<java.lang.ref.Finalizer: void add()>();
        return;
    }

    static void register(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.ref.Finalizer $r1;

        r0 := @parameter0: java.lang.Object;
        $r1 = new java.lang.ref.Finalizer;
        specialinvoke $r1.<java.lang.ref.Finalizer: void <init>(java.lang.Object)>(r0);
        return;
    }

    private void runFinalizer(sun.misc.JavaLangAccess)
    {
        java.lang.ref.Finalizer r0, r3;
        sun.misc.JavaLangAccess r1;
        java.lang.Throwable r4, $r5, $r7, r8;
        boolean $z0, $z1;
        java.lang.Object r6;
        null_type n0;

        r0 := @this: java.lang.ref.Finalizer;
        r1 := @parameter0: sun.misc.JavaLangAccess;
        r3 = r0;
        entermonitor r0;

     label0:
        $z0 = specialinvoke r0.<java.lang.ref.Finalizer: boolean hasBeenFinalized()>();
        if $z0 == 0 goto label2;

        exitmonitor r3;

     label1:
        return;

     label2:
        specialinvoke r0.<java.lang.ref.Finalizer: void remove()>();
        exitmonitor r3;

     label3:
        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        r4 = $r5;
        exitmonitor r3;

     label6:
        throw r4;

     label7:
        r6 = virtualinvoke r0.<java.lang.ref.Finalizer: java.lang.Object get()>();
        if r6 == null goto label8;

        $z1 = r6 instanceof java.lang.Enum;
        if $z1 != 0 goto label8;

        interfaceinvoke r1.<sun.misc.JavaLangAccess: void invokeFinalize(java.lang.Object)>(r6);
        n0 = null;

     label8:
        goto label10;

     label9:
        $r7 := @caughtexception;
        r8 = $r7;

     label10:
        specialinvoke r0.<java.lang.ref.FinalReference: void clear()>();
        return;

        catch java.lang.Throwable from label0 to label1 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    private static void forkSecondaryFinalizer(java.lang.Runnable)
    {
        java.lang.Runnable r0;
        java.lang.ref.Finalizer$1 $r1;

        r0 := @parameter0: java.lang.Runnable;
        $r1 = new java.lang.ref.Finalizer$1;
        specialinvoke $r1.<java.lang.ref.Finalizer$1: void <init>(java.lang.Runnable)>(r0);
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        return;
    }

    static void runFinalization()
    {
        boolean $z0;
        java.lang.ref.Finalizer$2 $r0;

        $z0 = staticinvoke <sun.misc.VM: boolean isBooted()>();
        if $z0 != 0 goto label0;

        return;

     label0:
        $r0 = new java.lang.ref.Finalizer$2;
        specialinvoke $r0.<java.lang.ref.Finalizer$2: void <init>()>();
        staticinvoke <java.lang.ref.Finalizer: void forkSecondaryFinalizer(java.lang.Runnable)>($r0);
        return;
    }

    static void runAllFinalizers()
    {
        boolean $z0;
        java.lang.ref.Finalizer$3 $r0;

        $z0 = staticinvoke <sun.misc.VM: boolean isBooted()>();
        if $z0 != 0 goto label0;

        return;

     label0:
        $r0 = new java.lang.ref.Finalizer$3;
        specialinvoke $r0.<java.lang.ref.Finalizer$3: void <init>()>();
        staticinvoke <java.lang.ref.Finalizer: void forkSecondaryFinalizer(java.lang.Runnable)>($r0);
        return;
    }

    static java.lang.ref.ReferenceQueue access$000()
    {
        java.lang.ref.ReferenceQueue $r0;

        $r0 = <java.lang.ref.Finalizer: java.lang.ref.ReferenceQueue queue>;
        return $r0;
    }

    static void access$100(java.lang.ref.Finalizer, sun.misc.JavaLangAccess)
    {
        java.lang.ref.Finalizer r0;
        sun.misc.JavaLangAccess r1;

        r0 := @parameter0: java.lang.ref.Finalizer;
        r1 := @parameter1: sun.misc.JavaLangAccess;
        specialinvoke r0.<java.lang.ref.Finalizer: void runFinalizer(sun.misc.JavaLangAccess)>(r1);
        return;
    }

    static java.lang.Object access$200()
    {
        java.lang.Object $r0;

        $r0 = <java.lang.ref.Finalizer: java.lang.Object lock>;
        return $r0;
    }

    static java.lang.ref.Finalizer access$300()
    {
        java.lang.ref.Finalizer $r0;

        $r0 = <java.lang.ref.Finalizer: java.lang.ref.Finalizer unfinalized>;
        return $r0;
    }

    static java.lang.ref.Finalizer access$302(java.lang.ref.Finalizer)
    {
        java.lang.ref.Finalizer r0;

        r0 := @parameter0: java.lang.ref.Finalizer;
        <java.lang.ref.Finalizer: java.lang.ref.Finalizer unfinalized> = r0;
        return r0;
    }

    static java.lang.ref.Finalizer access$400(java.lang.ref.Finalizer)
    {
        java.lang.ref.Finalizer r0, $r1;

        r0 := @parameter0: java.lang.ref.Finalizer;
        $r1 = r0.<java.lang.ref.Finalizer: java.lang.ref.Finalizer next>;
        return $r1;
    }

    static void <clinit>()
    {
        java.lang.ref.ReferenceQueue $r0;
        java.lang.ThreadGroup r1, r2;
        java.lang.Object $r3;
        java.lang.Thread $r4;
        java.lang.ref.Finalizer$FinalizerThread $r5, r6;

        $r0 = new java.lang.ref.ReferenceQueue;
        specialinvoke $r0.<java.lang.ref.ReferenceQueue: void <init>()>();
        <java.lang.ref.Finalizer: java.lang.ref.ReferenceQueue queue> = $r0;
        <java.lang.ref.Finalizer: java.lang.ref.Finalizer unfinalized> = null;
        $r3 = new java.lang.Object;
        specialinvoke $r3.<java.lang.Object: void <init>()>();
        <java.lang.ref.Finalizer: java.lang.Object lock> = $r3;
        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r1 = virtualinvoke $r4.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();
        r2 = r1;

     label0:
        if r2 == null goto label1;

        r1 = r2;
        r2 = virtualinvoke r1.<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>();
        goto label0;

     label1:
        $r5 = new java.lang.ref.Finalizer$FinalizerThread;
        specialinvoke $r5.<java.lang.ref.Finalizer$FinalizerThread: void <init>(java.lang.ThreadGroup)>(r1);
        r6 = $r5;
        virtualinvoke r6.<java.lang.Thread: void setPriority(int)>(8);
        virtualinvoke r6.<java.lang.Thread: void setDaemon(boolean)>(1);
        virtualinvoke r6.<java.lang.Thread: void start()>();
        return;
    }
}
