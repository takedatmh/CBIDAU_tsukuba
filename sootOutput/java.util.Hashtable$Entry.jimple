class java.util.Hashtable$Entry extends java.lang.Object implements java.util.Map$Entry
{
    int hash;
    final java.lang.Object key;
    java.lang.Object value;
    java.util.Hashtable$Entry next;

    protected void <init>(int, java.lang.Object, java.lang.Object, java.util.Hashtable$Entry)
    {
        java.util.Hashtable$Entry r0, r3;
        int i0;
        java.lang.Object r1, r2;

        r0 := @this: java.util.Hashtable$Entry;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        r2 := @parameter2: java.lang.Object;
        r3 := @parameter3: java.util.Hashtable$Entry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.Hashtable$Entry: int hash> = i0;
        r0.<java.util.Hashtable$Entry: java.lang.Object key> = r1;
        r0.<java.util.Hashtable$Entry: java.lang.Object value> = r2;
        r0.<java.util.Hashtable$Entry: java.util.Hashtable$Entry next> = r3;
        return;
    }

    protected java.lang.Object clone()
    {
        java.util.Hashtable$Entry r0, $r1, $r5, $r6, $r7;
        int $i0;
        java.lang.Object $r3, $r4, $r8;

        r0 := @this: java.util.Hashtable$Entry;
        $r1 = new java.util.Hashtable$Entry;
        $i0 = r0.<java.util.Hashtable$Entry: int hash>;
        $r3 = r0.<java.util.Hashtable$Entry: java.lang.Object key>;
        $r4 = r0.<java.util.Hashtable$Entry: java.lang.Object value>;
        $r5 = r0.<java.util.Hashtable$Entry: java.util.Hashtable$Entry next>;
        if $r5 != null goto label0;

        $r6 = null;
        goto label1;

     label0:
        $r7 = r0.<java.util.Hashtable$Entry: java.util.Hashtable$Entry next>;
        $r8 = virtualinvoke $r7.<java.util.Hashtable$Entry: java.lang.Object clone()>();
        $r6 = (java.util.Hashtable$Entry) $r8;

     label1:
        specialinvoke $r1.<java.util.Hashtable$Entry: void <init>(int,java.lang.Object,java.lang.Object,java.util.Hashtable$Entry)>($i0, $r3, $r4, $r6);
        return $r1;
    }

    public java.lang.Object getKey()
    {
        java.util.Hashtable$Entry r0;
        java.lang.Object $r1;

        r0 := @this: java.util.Hashtable$Entry;
        $r1 = r0.<java.util.Hashtable$Entry: java.lang.Object key>;
        return $r1;
    }

    public java.lang.Object getValue()
    {
        java.util.Hashtable$Entry r0;
        java.lang.Object $r1;

        r0 := @this: java.util.Hashtable$Entry;
        $r1 = r0.<java.util.Hashtable$Entry: java.lang.Object value>;
        return $r1;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.util.Hashtable$Entry r0;
        java.lang.Object r1, r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.Hashtable$Entry;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label0:
        r2 = r0.<java.util.Hashtable$Entry: java.lang.Object value>;
        r0.<java.util.Hashtable$Entry: java.lang.Object value> = r1;
        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Hashtable$Entry r0;
        java.lang.Object r1, $r3, $r4, $r5, $r6;
        java.util.Map$Entry r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: java.util.Hashtable$Entry;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.util.Map$Entry;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        r2 = (java.util.Map$Entry) r1;
        $r3 = r0.<java.util.Hashtable$Entry: java.lang.Object key>;
        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();
        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);
        if $z1 == 0 goto label1;

        $r5 = r0.<java.util.Hashtable$Entry: java.lang.Object value>;
        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();
        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);
        if $z2 == 0 goto label1;

        $z3 = 1;
        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public int hashCode()
    {
        java.util.Hashtable$Entry r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: java.util.Hashtable$Entry;
        $r1 = r0.<java.util.Hashtable$Entry: java.lang.Object key>;
        $i0 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r1);
        $r2 = r0.<java.util.Hashtable$Entry: java.lang.Object value>;
        $i1 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r2);
        $i2 = $i0 ^ $i1;
        return $i2;
    }

    public java.lang.String toString()
    {
        java.util.Hashtable$Entry r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r8;
        java.lang.Object $r2, $r6;
        java.lang.String $r3, $r7, $r9;

        r0 := @this: java.util.Hashtable$Entry;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = r0.<java.util.Hashtable$Entry: java.lang.Object key>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r6 = r0.<java.util.Hashtable$Entry: java.lang.Object value>;
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r9;
    }
}
