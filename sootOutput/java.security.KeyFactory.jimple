public class java.security.KeyFactory extends java.lang.Object
{
    private static final sun.security.util.Debug debug;
    private final java.lang.String algorithm;
    private java.security.Provider provider;
    private volatile java.security.KeyFactorySpi spi;
    private final java.lang.Object lock;
    private java.util.Iterator serviceIterator;

    protected void <init>(java.security.KeyFactorySpi, java.security.Provider, java.lang.String)
    {
        java.security.KeyFactory r0;
        java.security.KeyFactorySpi r1;
        java.security.Provider r2;
        java.lang.String r3;
        java.lang.Object $r4;

        r0 := @this: java.security.KeyFactory;
        r1 := @parameter0: java.security.KeyFactorySpi;
        r2 := @parameter1: java.security.Provider;
        r3 := @parameter2: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r4 = new java.lang.Object;
        specialinvoke $r4.<java.lang.Object: void <init>()>();
        r0.<java.security.KeyFactory: java.lang.Object lock> = $r4;
        r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi> = r1;
        r0.<java.security.KeyFactory: java.security.Provider provider> = r2;
        r0.<java.security.KeyFactory: java.lang.String algorithm> = r3;
        return;
    }

    private void <init>(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        java.security.KeyFactory r0;
        java.lang.String r1, $r10;
        java.lang.Object $r2;
        java.util.List r3;
        java.util.Iterator $r4;
        java.security.KeyFactorySpi $r5;
        java.security.NoSuchAlgorithmException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: java.security.KeyFactory;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.lang.Object;
        specialinvoke $r2.<java.lang.Object: void <init>()>();
        r0.<java.security.KeyFactory: java.lang.Object lock> = $r2;
        r0.<java.security.KeyFactory: java.lang.String algorithm> = r1;
        r3 = staticinvoke <sun.security.jca.GetInstance: java.util.List getServices(java.lang.String,java.lang.String)>("KeyFactory", r1);
        $r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();
        r0.<java.security.KeyFactory: java.util.Iterator serviceIterator> = $r4;
        $r5 = specialinvoke r0.<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>(null);
        if $r5 != null goto label0;

        $r6 = new java.security.NoSuchAlgorithmException;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" KeyFactory not available");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label0:
        return;
    }

    public static java.security.KeyFactory getInstance(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.security.KeyFactory $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.security.KeyFactory;
        specialinvoke $r1.<java.security.KeyFactory: void <init>(java.lang.String)>(r0);
        return $r1;
    }

    public static java.security.KeyFactory getInstance(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException
    {
        java.lang.String r0, r1;
        sun.security.jca.GetInstance$Instance r2;
        java.security.KeyFactory $r3;
        java.lang.Object $r4;
        java.security.KeyFactorySpi $r5;
        java.security.Provider $r6;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 = staticinvoke <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.lang.String)>("KeyFactory", class "java/security/KeyFactorySpi", r0, r1);
        $r3 = new java.security.KeyFactory;
        $r4 = r2.<sun.security.jca.GetInstance$Instance: java.lang.Object impl>;
        $r5 = (java.security.KeyFactorySpi) $r4;
        $r6 = r2.<sun.security.jca.GetInstance$Instance: java.security.Provider provider>;
        specialinvoke $r3.<java.security.KeyFactory: void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String)>($r5, $r6, r0);
        return $r3;
    }

    public static java.security.KeyFactory getInstance(java.lang.String, java.security.Provider) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.security.Provider r1, $r6;
        sun.security.jca.GetInstance$Instance r2;
        java.security.KeyFactory $r3;
        java.lang.Object $r4;
        java.security.KeyFactorySpi $r5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.security.Provider;
        r2 = staticinvoke <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.security.Provider)>("KeyFactory", class "java/security/KeyFactorySpi", r0, r1);
        $r3 = new java.security.KeyFactory;
        $r4 = r2.<sun.security.jca.GetInstance$Instance: java.lang.Object impl>;
        $r5 = (java.security.KeyFactorySpi) $r4;
        $r6 = r2.<sun.security.jca.GetInstance$Instance: java.security.Provider provider>;
        specialinvoke $r3.<java.security.KeyFactory: void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String)>($r5, $r6, r0);
        return $r3;
    }

    public final java.security.Provider getProvider()
    {
        java.security.KeyFactory r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.security.Provider $r4;

        r0 := @this: java.security.KeyFactory;
        $r3 = r0.<java.security.KeyFactory: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        r0.<java.security.KeyFactory: java.util.Iterator serviceIterator> = null;
        $r4 = r0.<java.security.KeyFactory: java.security.Provider provider>;
        exitmonitor r1;

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;

     label3:
        r2 = $r5;
        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public final java.lang.String getAlgorithm()
    {
        java.security.KeyFactory r0;
        java.lang.String $r1;

        r0 := @this: java.security.KeyFactory;
        $r1 = r0.<java.security.KeyFactory: java.lang.String algorithm>;
        return $r1;
    }

    private java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)
    {
        java.security.KeyFactory r0;
        java.security.KeyFactorySpi r1, r5, $r8, $r9;
        java.lang.Object r2, r4, $r7, $r13;
        java.security.Provider$Service r3;
        java.lang.Throwable r6, $r18;
        java.util.Iterator $r10, $r11, $r12;
        null_type $n0, $n1;
        boolean $z0, $z1;
        java.security.Provider $r14;
        java.security.NoSuchAlgorithmException $r16, r17;

        r0 := @this: java.security.KeyFactory;
        r1 := @parameter0: java.security.KeyFactorySpi;
        $r7 = r0.<java.security.KeyFactory: java.lang.Object lock>;
        r2 = $r7;
        entermonitor $r7;

     label0:
        if r1 == null goto label2;

        $r8 = r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi>;
        if r1 == $r8 goto label2;

        $r9 = r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi>;
        exitmonitor r2;

     label1:
        return $r9;

     label2:
        $r10 = r0.<java.security.KeyFactory: java.util.Iterator serviceIterator>;
        if $r10 != null goto label4;

        $n0 = null;
        exitmonitor r2;

     label3:
        return $n0;

     label4:
        $r11 = r0.<java.security.KeyFactory: java.util.Iterator serviceIterator>;
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label12;

        $r12 = r0.<java.security.KeyFactory: java.util.Iterator serviceIterator>;
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.security.Provider$Service) $r13;

     label5:
        r4 = virtualinvoke r3.<java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>(null);
        $z1 = r4 instanceof java.security.KeyFactorySpi;
        if $z1 != 0 goto label7;

     label6:
        goto label4;

     label7:
        r5 = (java.security.KeyFactorySpi) r4;
        $r14 = virtualinvoke r3.<java.security.Provider$Service: java.security.Provider getProvider()>();
        r0.<java.security.KeyFactory: java.security.Provider provider> = $r14;
        r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi> = r5;

     label8:
        exitmonitor r2;

     label9:
        return r5;

     label10:
        $r16 := @caughtexception;

     label11:
        r17 = $r16;
        goto label4;

     label12:
        r0.<java.security.KeyFactory: java.util.Iterator serviceIterator> = null;
        $n1 = null;
        exitmonitor r2;

     label13:
        return $n1;

     label14:
        $r18 := @caughtexception;

     label15:
        r6 = $r18;
        exitmonitor r2;

     label16:
        throw r6;

        catch java.security.NoSuchAlgorithmException from label5 to label6 with label10;
        catch java.security.NoSuchAlgorithmException from label7 to label8 with label10;
        catch java.lang.Throwable from label0 to label1 with label14;
        catch java.lang.Throwable from label2 to label3 with label14;
        catch java.lang.Throwable from label4 to label9 with label14;
        catch java.lang.Throwable from label11 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public final java.security.PublicKey generatePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        java.security.KeyFactory r0;
        java.security.spec.KeySpec r1;
        java.lang.Exception r2, r4, $r9;
        java.security.KeyFactorySpi r3, $r6;
        java.util.Iterator $r5;
        java.security.PublicKey $r7, $r8;
        boolean $z0, $z1;
        java.lang.RuntimeException $r10;
        java.security.spec.InvalidKeySpecException $r11, $r12;

        r0 := @this: java.security.KeyFactory;
        r1 := @parameter0: java.security.spec.KeySpec;
        $r5 = r0.<java.security.KeyFactory: java.util.Iterator serviceIterator>;
        if $r5 != null goto label0;

        $r6 = r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi>;
        $r7 = virtualinvoke $r6.<java.security.KeyFactorySpi: java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)>(r1);
        return $r7;

     label0:
        r2 = null;
        r3 = r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi>;

     label1:
        $r8 = virtualinvoke r3.<java.security.KeyFactorySpi: java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)>(r1);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;
        r4 = $r9;
        if r2 != null goto label4;

        r2 = r4;

     label4:
        r3 = specialinvoke r0.<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>(r3);
        if r3 != null goto label1;

        $z0 = r2 instanceof java.lang.RuntimeException;
        if $z0 == 0 goto label5;

        $r10 = (java.lang.RuntimeException) r2;
        throw $r10;

     label5:
        $z1 = r2 instanceof java.security.spec.InvalidKeySpecException;
        if $z1 == 0 goto label6;

        $r11 = (java.security.spec.InvalidKeySpecException) r2;
        throw $r11;

     label6:
        $r12 = new java.security.spec.InvalidKeySpecException;
        specialinvoke $r12.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String,java.lang.Throwable)>("Could not generate public key", r2);
        throw $r12;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final java.security.PrivateKey generatePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        java.security.KeyFactory r0;
        java.security.spec.KeySpec r1;
        java.lang.Exception r2, r4, $r9;
        java.security.KeyFactorySpi r3, $r6;
        java.util.Iterator $r5;
        java.security.PrivateKey $r7, $r8;
        boolean $z0, $z1;
        java.lang.RuntimeException $r10;
        java.security.spec.InvalidKeySpecException $r11, $r12;

        r0 := @this: java.security.KeyFactory;
        r1 := @parameter0: java.security.spec.KeySpec;
        $r5 = r0.<java.security.KeyFactory: java.util.Iterator serviceIterator>;
        if $r5 != null goto label0;

        $r6 = r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi>;
        $r7 = virtualinvoke $r6.<java.security.KeyFactorySpi: java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)>(r1);
        return $r7;

     label0:
        r2 = null;
        r3 = r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi>;

     label1:
        $r8 = virtualinvoke r3.<java.security.KeyFactorySpi: java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)>(r1);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;
        r4 = $r9;
        if r2 != null goto label4;

        r2 = r4;

     label4:
        r3 = specialinvoke r0.<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>(r3);
        if r3 != null goto label1;

        $z0 = r2 instanceof java.lang.RuntimeException;
        if $z0 == 0 goto label5;

        $r10 = (java.lang.RuntimeException) r2;
        throw $r10;

     label5:
        $z1 = r2 instanceof java.security.spec.InvalidKeySpecException;
        if $z1 == 0 goto label6;

        $r11 = (java.security.spec.InvalidKeySpecException) r2;
        throw $r11;

     label6:
        $r12 = new java.security.spec.InvalidKeySpecException;
        specialinvoke $r12.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String,java.lang.Throwable)>("Could not generate private key", r2);
        throw $r12;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final java.security.spec.KeySpec getKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        java.security.KeyFactory r0;
        java.security.Key r1;
        java.lang.Class r2;
        java.lang.Exception r3, r5, $r10;
        java.security.KeyFactorySpi r4, $r7;
        java.util.Iterator $r6;
        java.security.spec.KeySpec $r8, $r9;
        boolean $z0, $z1;
        java.lang.RuntimeException $r11;
        java.security.spec.InvalidKeySpecException $r12, $r13;

        r0 := @this: java.security.KeyFactory;
        r1 := @parameter0: java.security.Key;
        r2 := @parameter1: java.lang.Class;
        $r6 = r0.<java.security.KeyFactory: java.util.Iterator serviceIterator>;
        if $r6 != null goto label0;

        $r7 = r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi>;
        $r8 = virtualinvoke $r7.<java.security.KeyFactorySpi: java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)>(r1, r2);
        return $r8;

     label0:
        r3 = null;
        r4 = r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi>;

     label1:
        $r9 = virtualinvoke r4.<java.security.KeyFactorySpi: java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)>(r1, r2);

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;
        r5 = $r10;
        if r3 != null goto label4;

        r3 = r5;

     label4:
        r4 = specialinvoke r0.<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>(r4);
        if r4 != null goto label1;

        $z0 = r3 instanceof java.lang.RuntimeException;
        if $z0 == 0 goto label5;

        $r11 = (java.lang.RuntimeException) r3;
        throw $r11;

     label5:
        $z1 = r3 instanceof java.security.spec.InvalidKeySpecException;
        if $z1 == 0 goto label6;

        $r12 = (java.security.spec.InvalidKeySpecException) r3;
        throw $r12;

     label6:
        $r13 = new java.security.spec.InvalidKeySpecException;
        specialinvoke $r13.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String,java.lang.Throwable)>("Could not get key spec", r3);
        throw $r13;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final java.security.Key translateKey(java.security.Key) throws java.security.InvalidKeyException
    {
        java.security.KeyFactory r0;
        java.security.Key r1, $r7, $r8;
        java.lang.Exception r2, r4, $r9;
        java.security.KeyFactorySpi r3, $r6;
        java.util.Iterator $r5;
        boolean $z0, $z1;
        java.lang.RuntimeException $r10;
        java.security.InvalidKeyException $r11, $r12;

        r0 := @this: java.security.KeyFactory;
        r1 := @parameter0: java.security.Key;
        $r5 = r0.<java.security.KeyFactory: java.util.Iterator serviceIterator>;
        if $r5 != null goto label0;

        $r6 = r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi>;
        $r7 = virtualinvoke $r6.<java.security.KeyFactorySpi: java.security.Key engineTranslateKey(java.security.Key)>(r1);
        return $r7;

     label0:
        r2 = null;
        r3 = r0.<java.security.KeyFactory: java.security.KeyFactorySpi spi>;

     label1:
        $r8 = virtualinvoke r3.<java.security.KeyFactorySpi: java.security.Key engineTranslateKey(java.security.Key)>(r1);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;
        r4 = $r9;
        if r2 != null goto label4;

        r2 = r4;

     label4:
        r3 = specialinvoke r0.<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>(r3);
        if r3 != null goto label1;

        $z0 = r2 instanceof java.lang.RuntimeException;
        if $z0 == 0 goto label5;

        $r10 = (java.lang.RuntimeException) r2;
        throw $r10;

     label5:
        $z1 = r2 instanceof java.security.InvalidKeyException;
        if $z1 == 0 goto label6;

        $r11 = (java.security.InvalidKeyException) r2;
        throw $r11;

     label6:
        $r12 = new java.security.InvalidKeyException;
        specialinvoke $r12.<java.security.InvalidKeyException: void <init>(java.lang.String,java.lang.Throwable)>("Could not translate key", r2);
        throw $r12;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        sun.security.util.Debug $r0;

        $r0 = staticinvoke <sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String,java.lang.String)>("jca", "KeyFactory");
        <java.security.KeyFactory: sun.security.util.Debug debug> = $r0;
        return;
    }
}
