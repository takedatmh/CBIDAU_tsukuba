class java.util.regex.Pattern$3 extends java.util.regex.Pattern$CharProperty
{
    final int val$lower;
    final int val$upper;
    final java.util.regex.Pattern this$0;

    void <init>(java.util.regex.Pattern, int, int)
    {
        java.util.regex.Pattern$3 r0;
        java.util.regex.Pattern r1;
        int i0, i1;

        r0 := @this: java.util.regex.Pattern$3;
        r1 := @parameter0: java.util.regex.Pattern;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r0.<java.util.regex.Pattern$3: java.util.regex.Pattern this$0> = r1;
        r0.<java.util.regex.Pattern$3: int val$lower> = i0;
        r0.<java.util.regex.Pattern$3: int val$upper> = i1;
        specialinvoke r0.<java.util.regex.Pattern$CharProperty: void <init>(java.util.regex.Pattern$1)>(null);
        return;
    }

    boolean isSatisfiedBy(int)
    {
        java.util.regex.Pattern$3 r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: java.util.regex.Pattern$3;
        i0 := @parameter0: int;
        $i1 = r0.<java.util.regex.Pattern$3: int val$lower>;
        $i2 = r0.<java.util.regex.Pattern$3: int val$upper>;
        $z0 = staticinvoke <java.util.regex.Pattern: boolean access$200(int,int,int)>($i1, i0, $i2);
        if $z0 != 0 goto label0;

        $z1 = staticinvoke <java.util.regex.ASCII: boolean isAscii(int)>(i0);
        if $z1 == 0 goto label1;

        $i3 = r0.<java.util.regex.Pattern$3: int val$lower>;
        $i4 = staticinvoke <java.util.regex.ASCII: int toUpper(int)>(i0);
        $i5 = r0.<java.util.regex.Pattern$3: int val$upper>;
        $z2 = staticinvoke <java.util.regex.Pattern: boolean access$200(int,int,int)>($i3, $i4, $i5);
        if $z2 != 0 goto label0;

        $i6 = r0.<java.util.regex.Pattern$3: int val$lower>;
        $i7 = staticinvoke <java.util.regex.ASCII: int toLower(int)>(i0);
        $i8 = r0.<java.util.regex.Pattern$3: int val$upper>;
        $z3 = staticinvoke <java.util.regex.Pattern: boolean access$200(int,int,int)>($i6, $i7, $i8);
        if $z3 == 0 goto label1;

     label0:
        $z4 = 1;
        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;
    }
}
