public interface  org.apache.catalina.Manager extends java.lang.Object
{

    public abstract org.apache.catalina.Container getContainer();

    public abstract void setContainer(org.apache.catalina.Container);

    public abstract boolean getDistributable();

    public abstract void setDistributable(boolean);

    public abstract java.lang.String getInfo();

    public abstract int getMaxInactiveInterval();

    public abstract void setMaxInactiveInterval(int);

    public abstract int getSessionIdLength();

    public abstract void setSessionIdLength(int);

    public abstract long getSessionCounter();

    public abstract void setSessionCounter(long);

    public abstract int getMaxActive();

    public abstract void setMaxActive(int);

    public abstract int getActiveSessions();

    public abstract long getExpiredSessions();

    public abstract void setExpiredSessions(long);

    public abstract int getRejectedSessions();

    public abstract int getSessionMaxAliveTime();

    public abstract void setSessionMaxAliveTime(int);

    public abstract int getSessionAverageAliveTime();

    public abstract int getSessionCreateRate();

    public abstract int getSessionExpireRate();

    public abstract void add(org.apache.catalina.Session);

    public abstract void addPropertyChangeListener(java.beans.PropertyChangeListener);

    public abstract void changeSessionId(org.apache.catalina.Session);

    public abstract org.apache.catalina.Session createEmptySession();

    public abstract org.apache.catalina.Session createSession(java.lang.String);

    public abstract org.apache.catalina.Session findSession(java.lang.String) throws java.io.IOException;

    public abstract org.apache.catalina.Session[] findSessions();

    public abstract void load() throws java.lang.ClassNotFoundException, java.io.IOException;

    public abstract void remove(org.apache.catalina.Session);

    public abstract void remove(org.apache.catalina.Session, boolean);

    public abstract void removePropertyChangeListener(java.beans.PropertyChangeListener);

    public abstract void unload() throws java.io.IOException;

    public abstract void backgroundProcess();

    public abstract boolean willAttributeDistribute(java.lang.String, java.lang.Object);
}
