public class org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream extends java.io.OutputStream
{
    static final int DEFAULT_SIZE;
    private static final byte[] EMPTY_BYTE_ARRAY;
    private final java.util.List buffers;
    private int currentBufferIndex;
    private int filledBufferSum;
    private byte[] currentBuffer;
    private int count;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[0];
        <org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] EMPTY_BYTE_ARRAY> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream r0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
        specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: void <init>(int)>(1024);
        return;
    }

    public void <init>(int)
    {
        org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream r0, r2;
        int i0;
        java.util.ArrayList $r1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5;
        java.lang.String $r6;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
        i0 := @parameter0: int;
        specialinvoke r0.<java.io.OutputStream: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: java.util.List buffers> = $r1;
        if i0 >= 0 goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Negative initial size: ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);
        throw $r3;

     label0:
        r2 = r0;
        entermonitor r0;

     label1:
        specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: void needNewBuffer(int)>(i0);
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void needNewBuffer(int)
    {
        org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.util.List $r1, $r5, $r14;
        byte[] $r3, $r7, $r8, $r9, $r11, $r13, $r15;
        java.lang.Object $r6;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
        i0 := @parameter0: int;
        $i2 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int currentBufferIndex>;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: java.util.List buffers>;
        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i4 = $i3 - 1;
        if $i2 >= $i4 goto label0;

        $i5 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int filledBufferSum>;
        $r3 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $i6 = lengthof $r3;
        $i7 = $i5 + $i6;
        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int filledBufferSum> = $i7;
        $i8 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int currentBufferIndex>;
        $i9 = $i8 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int currentBufferIndex> = $i9;
        $r5 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: java.util.List buffers>;
        $i10 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int currentBufferIndex>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i10);
        $r7 = (byte[]) $r6;
        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer> = $r7;
        goto label3;

     label0:
        $r8 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        if $r8 != null goto label1;

        i1 = i0;
        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int filledBufferSum> = 0;
        goto label2;

     label1:
        $r9 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $i11 = lengthof $r9;
        $i12 = $i11 << 1;
        $i13 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int filledBufferSum>;
        $i14 = i0 - $i13;
        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i14);
        $i15 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int filledBufferSum>;
        $r11 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $i16 = lengthof $r11;
        $i17 = $i15 + $i16;
        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int filledBufferSum> = $i17;

     label2:
        $i18 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int currentBufferIndex>;
        $i19 = $i18 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int currentBufferIndex> = $i19;
        $r13 = newarray (byte)[i1];
        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer> = $r13;
        $r14 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: java.util.List buffers>;
        $r15 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

     label3:
        return;
    }

    public void write(byte[], int, int)
    {
        org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream r0, r2;
        byte[] r1, $r5, $r6;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if i0 < 0 goto label0;

        $i6 = lengthof r1;
        if i0 > $i6 goto label0;

        if i1 < 0 goto label0;

        $i7 = i0 + i1;
        $i8 = lengthof r1;
        if $i7 > $i8 goto label0;

        $i9 = i0 + i1;
        if $i9 >= 0 goto label1;

     label0:
        $r3 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();
        throw $r3;

     label1:
        if i1 != 0 goto label2;

        return;

     label2:
        r2 = r0;
        entermonitor r0;

     label3:
        $i10 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count>;
        i2 = $i10 + i1;
        i3 = i1;
        $i11 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count>;
        $i12 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int filledBufferSum>;
        i4 = $i11 - $i12;
        goto label5;

     label4:
        $r5 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $i13 = lengthof $r5;
        $i14 = $i13 - i4;
        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i14);
        $i15 = i0 + i1;
        $i16 = $i15 - i3;
        $r6 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i16, $r6, i4, i5);
        i3 = i3 - i5;
        if i3 <= 0 goto label5;

        specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: void needNewBuffer(int)>(i2);
        i4 = 0;

     label5:
        if i3 > 0 goto label4;

        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count> = i2;
        exitmonitor r2;

     label6:
        goto label10;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r7;

     label10:
        return;

        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public synchronized void write(int)
    {
        org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        byte[] $r1, $r2;
        byte $b7;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
        i0 := @parameter0: int;
        $i2 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count>;
        $i3 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int filledBufferSum>;
        i1 = $i2 - $i3;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $i4 = lengthof $r1;
        if i1 != $i4 goto label0;

        $i5 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count>;
        $i6 = $i5 + 1;
        specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: void needNewBuffer(int)>($i6);
        i1 = 0;

     label0:
        $r2 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $b7 = (byte) i0;
        $r2[i1] = $b7;
        $i8 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count>;
        $i9 = $i8 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count> = $i9;
        return;
    }

    public synchronized int write(java.io.InputStream) throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream r0;
        java.io.InputStream r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        byte[] $r2, $r3, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
        r1 := @parameter0: java.io.InputStream;
        i0 = 0;
        $i3 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count>;
        $i4 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int filledBufferSum>;
        i1 = $i3 - $i4;
        $r2 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $r3 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $i5 = lengthof $r3;
        $i6 = $i5 - i1;
        i2 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>($r2, i1, $i6);
        goto label2;

     label0:
        i0 = i0 + i2;
        i1 = i1 + i2;
        $i7 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count>;
        $i8 = $i7 + i2;
        r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count> = $i8;
        $r5 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $i9 = lengthof $r5;
        if i1 != $i9 goto label1;

        $r6 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $i10 = lengthof $r6;
        specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: void needNewBuffer(int)>($i10);
        i1 = 0;

     label1:
        $r7 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $r8 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] currentBuffer>;
        $i11 = lengthof $r8;
        $i12 = $i11 - i1;
        i2 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>($r7, i1, $i12);

     label2:
        if i2 != -1 goto label0;

        return i0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream r0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
        return;
    }

    public synchronized void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream r0;
        java.io.OutputStream r1;
        int i0, i1, $i2;
        java.util.Iterator r2;
        byte[] r3;
        java.util.List $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
        r1 := @parameter0: java.io.OutputStream;
        i0 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count>;
        $r4 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: java.util.List buffers>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (byte[]) $r5;
        $i2 = lengthof r3;
        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i2, i0);
        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, i1);
        i0 = i0 - i1;
        if i0 != 0 goto label1;

        goto label2;

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

     label2:
        return;
    }

    public synchronized byte[] toByteArray()
    {
        org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream r0;
        int i0, i1, i2, $i3;
        byte[] r1, r3, $r4;
        java.util.Iterator r2;
        java.util.List $r5;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
        i0 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: int count>;
        if i0 != 0 goto label0;

        $r4 = <org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: byte[] EMPTY_BYTE_ARRAY>;
        return $r4;

     label0:
        r1 = newarray (byte)[i0];
        i1 = 0;
        $r5 = r0.<org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream: java.util.List buffers>;
        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();
        goto label2;

     label1:
        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (byte[]) $r6;
        $i3 = lengthof r3;
        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i0);
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, i1, i2);
        i1 = i1 + i2;
        i0 = i0 - i2;
        if i0 != 0 goto label2;

        goto label3;

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label1;

     label3:
        return r1;
    }
}
