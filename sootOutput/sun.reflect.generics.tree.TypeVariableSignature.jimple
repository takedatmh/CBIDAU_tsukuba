public class sun.reflect.generics.tree.TypeVariableSignature extends java.lang.Object implements sun.reflect.generics.tree.FieldTypeSignature
{
    private java.lang.String identifier;

    private void <init>(java.lang.String)
    {
        sun.reflect.generics.tree.TypeVariableSignature r0;
        java.lang.String r1;

        r0 := @this: sun.reflect.generics.tree.TypeVariableSignature;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.reflect.generics.tree.TypeVariableSignature: java.lang.String identifier> = r1;
        return;
    }

    public static sun.reflect.generics.tree.TypeVariableSignature make(java.lang.String)
    {
        java.lang.String r0;
        sun.reflect.generics.tree.TypeVariableSignature $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = new sun.reflect.generics.tree.TypeVariableSignature;
        specialinvoke $r1.<sun.reflect.generics.tree.TypeVariableSignature: void <init>(java.lang.String)>(r0);
        return $r1;
    }

    public java.lang.String getIdentifier()
    {
        sun.reflect.generics.tree.TypeVariableSignature r0;
        java.lang.String $r1;

        r0 := @this: sun.reflect.generics.tree.TypeVariableSignature;
        $r1 = r0.<sun.reflect.generics.tree.TypeVariableSignature: java.lang.String identifier>;
        return $r1;
    }

    public void accept(sun.reflect.generics.visitor.TypeTreeVisitor)
    {
        sun.reflect.generics.tree.TypeVariableSignature r0;
        sun.reflect.generics.visitor.TypeTreeVisitor r1;

        r0 := @this: sun.reflect.generics.tree.TypeVariableSignature;
        r1 := @parameter0: sun.reflect.generics.visitor.TypeTreeVisitor;
        interfaceinvoke r1.<sun.reflect.generics.visitor.TypeTreeVisitor: void visitTypeVariableSignature(sun.reflect.generics.tree.TypeVariableSignature)>(r0);
        return;
    }
}
