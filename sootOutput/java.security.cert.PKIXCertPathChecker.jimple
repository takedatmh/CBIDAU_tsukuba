public abstract class java.security.cert.PKIXCertPathChecker extends java.lang.Object implements java.lang.Cloneable
{

    protected void <init>()
    {
        java.security.cert.PKIXCertPathChecker r0;

        r0 := @this: java.security.cert.PKIXCertPathChecker;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public abstract void init(boolean) throws java.security.cert.CertPathValidatorException;

    public abstract boolean isForwardCheckingSupported();

    public abstract java.util.Set getSupportedExtensions();

    public abstract void check(java.security.cert.Certificate, java.util.Collection) throws java.security.cert.CertPathValidatorException;

    public java.lang.Object clone()
    {
        java.security.cert.PKIXCertPathChecker r0;
        java.lang.CloneNotSupportedException r1, $r3;
        java.lang.Object $r2;
        java.lang.InternalError $r4;
        java.lang.String $r5;

        r0 := @this: java.security.cert.PKIXCertPathChecker;

     label0:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        $r4 = new java.lang.InternalError;
        $r5 = virtualinvoke r1.<java.lang.CloneNotSupportedException: java.lang.String toString()>();
        specialinvoke $r4.<java.lang.InternalError: void <init>(java.lang.String)>($r5);
        throw $r4;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }
}
