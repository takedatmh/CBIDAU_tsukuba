public class java.security.cert.PKIXCertPathBuilderResult extends java.security.cert.PKIXCertPathValidatorResult implements java.security.cert.CertPathBuilderResult
{
    private java.security.cert.CertPath certPath;

    public void <init>(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey)
    {
        java.security.cert.PKIXCertPathBuilderResult r0;
        java.security.cert.CertPath r1;
        java.security.cert.TrustAnchor r2;
        java.security.cert.PolicyNode r3;
        java.security.PublicKey r4;
        java.lang.NullPointerException $r5;

        r0 := @this: java.security.cert.PKIXCertPathBuilderResult;
        r1 := @parameter0: java.security.cert.CertPath;
        r2 := @parameter1: java.security.cert.TrustAnchor;
        r3 := @parameter2: java.security.cert.PolicyNode;
        r4 := @parameter3: java.security.PublicKey;
        specialinvoke r0.<java.security.cert.PKIXCertPathValidatorResult: void <init>(java.security.cert.TrustAnchor,java.security.cert.PolicyNode,java.security.PublicKey)>(r2, r3, r4);
        if r1 != null goto label0;

        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("certPath must be non-null");
        throw $r5;

     label0:
        r0.<java.security.cert.PKIXCertPathBuilderResult: java.security.cert.CertPath certPath> = r1;
        return;
    }

    public java.security.cert.CertPath getCertPath()
    {
        java.security.cert.PKIXCertPathBuilderResult r0;
        java.security.cert.CertPath $r1;

        r0 := @this: java.security.cert.PKIXCertPathBuilderResult;
        $r1 = r0.<java.security.cert.PKIXCertPathBuilderResult: java.security.cert.CertPath certPath>;
        return $r1;
    }

    public java.lang.String toString()
    {
        java.security.cert.PKIXCertPathBuilderResult r0;
        java.lang.StringBuffer $r1, r2;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r11, $r12, $r15, $r16, $r19, $r20, $r23, $r24, $r27, $r28, $r30, $r31;
        java.security.cert.CertPath $r6;
        java.lang.String $r9, $r14, $r17, $r22, $r25, $r32, $r35;
        java.security.cert.TrustAnchor $r13;
        java.security.cert.PolicyNode $r21;
        java.security.PublicKey $r29;

        r0 := @this: java.security.cert.PKIXCertPathBuilderResult;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PKIXCertPathBuilderResult: [\n");
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Certification Path: ");
        $r6 = r0.<java.security.cert.PKIXCertPathBuilderResult: java.security.cert.CertPath certPath>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Trust Anchor: ");
        $r13 = virtualinvoke r0.<java.security.cert.PKIXCertPathBuilderResult: java.security.cert.TrustAnchor getTrustAnchor()>();
        $r14 = virtualinvoke $r13.<java.security.cert.TrustAnchor: java.lang.String toString()>();
        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Policy Tree: ");
        $r21 = virtualinvoke r0.<java.security.cert.PKIXCertPathBuilderResult: java.security.cert.PolicyNode getPolicyTree()>();
        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21);
        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Subject Public Key: ");
        $r29 = virtualinvoke r0.<java.security.cert.PKIXCertPathBuilderResult: java.security.PublicKey getPublicKey()>();
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r35 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r35;
    }
}
