class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet extends java.util.Collections$UnmodifiableSet
{
    private static final long serialVersionUID;

    void <init>(java.util.Set)
    {
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet r0;
        java.util.Set r1;

        r0 := @this: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet;
        r1 := @parameter0: java.util.Set;
        specialinvoke r0.<java.util.Collections$UnmodifiableSet: void <init>(java.util.Set)>(r1);
        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet r0;
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 $r1;

        r0 := @this: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet;
        $r1 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1;
        specialinvoke $r1.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>(r0);
        return $r1;
    }

    public java.lang.Object[] toArray()
    {
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet r0;
        java.lang.Object[] r1;
        int i0, $i1;
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry $r2;
        java.util.Collection $r3;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;

        r0 := @this: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet;
        $r3 = r0.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Collection c>;
        r1 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray()>();
        i0 = 0;

     label0:
        $i1 = lengthof r1;
        if i0 >= $i1 goto label1;

        $r2 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry;
        $r4 = r1[i0];
        $r5 = (java.util.Map$Entry) $r4;
        specialinvoke $r2.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: void <init>(java.util.Map$Entry)>($r5);
        r1[i0] = $r2;
        i0 = i0 + 1;
        goto label0;

     label1:
        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet r0;
        java.lang.Object[] r1, r2, $r4, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.Collection $r3;
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry $r5;
        java.lang.Object $r6;
        java.util.Map$Entry $r7;

        r0 := @this: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet;
        r1 := @parameter0: java.lang.Object[];
        $r3 = r0.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Collection c>;
        $i1 = lengthof r1;
        if $i1 != 0 goto label0;

        $r4 = r1;
        goto label1;

     label0:
        $r4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, 0);

     label1:
        r2 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);
        i0 = 0;

     label2:
        $i2 = lengthof r2;
        if i0 >= $i2 goto label3;

        $r5 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry;
        $r6 = r2[i0];
        $r7 = (java.util.Map$Entry) $r6;
        specialinvoke $r5.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: void <init>(java.util.Map$Entry)>($r7);
        r2[i0] = $r5;
        i0 = i0 + 1;
        goto label2;

     label3:
        $i3 = lengthof r2;
        $i4 = lengthof r1;
        if $i3 <= $i4 goto label4;

        $r8 = (java.lang.Object[]) r2;
        return $r8;

     label4:
        $i5 = lengthof r2;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, 0, $i5);
        $i6 = lengthof r1;
        $i7 = lengthof r2;
        if $i6 <= $i7 goto label5;

        $i8 = lengthof r2;
        r1[$i8] = null;

     label5:
        return r1;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet r0;
        java.lang.Object r1;
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry $r2;
        boolean $z0, $z1;
        java.util.Collection $r3;
        java.util.Map$Entry $r4;

        r0 := @this: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.util.Map$Entry;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $r3 = r0.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Collection c>;
        $r2 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry;
        $r4 = (java.util.Map$Entry) r1;
        specialinvoke $r2.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: void <init>(java.util.Map$Entry)>($r4);
        $z1 = interfaceinvoke $r3.<java.util.Collection: boolean contains(java.lang.Object)>($r2);
        return $z1;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0, $z1;

        r0 := @this: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet;
        r1 := @parameter0: java.util.Collection;
        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        $z1 = virtualinvoke r0.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean contains(java.lang.Object)>(r3);
        if $z1 != 0 goto label1;

        return 0;

     label1:
        goto label0;

     label2:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet r0;
        java.lang.Object r1;
        java.util.Set r2;
        boolean $z0, $z1;
        int $i0, $i1;
        java.util.Collection $r3;

        r0 := @this: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet;
        r1 := @parameter0: java.lang.Object;
        if r1 != r0 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof java.util.Set;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.Set) r1;
        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();
        $r3 = r0.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Collection c>;
        $i1 = interfaceinvoke $r3.<java.util.Collection: int size()>();
        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r0.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>(r2);
        return $z1;
    }
}
