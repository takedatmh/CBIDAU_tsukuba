final enum class java.lang.UNIXProcess$LaunchMechanism extends java.lang.Enum
{
    public static final enum java.lang.UNIXProcess$LaunchMechanism FORK;
    public static final enum java.lang.UNIXProcess$LaunchMechanism POSIX_SPAWN;
    private int value;
    private static final java.lang.UNIXProcess$LaunchMechanism[] $VALUES;

    public static java.lang.UNIXProcess$LaunchMechanism[] values()
    {
        java.lang.UNIXProcess$LaunchMechanism[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <java.lang.UNIXProcess$LaunchMechanism: java.lang.UNIXProcess$LaunchMechanism[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (java.lang.UNIXProcess$LaunchMechanism[]) $r1;
        return $r2;
    }

    public static java.lang.UNIXProcess$LaunchMechanism valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        java.lang.UNIXProcess$LaunchMechanism $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "java/lang/UNIXProcess$LaunchMechanism", r0);
        $r2 = (java.lang.UNIXProcess$LaunchMechanism) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        java.lang.UNIXProcess$LaunchMechanism r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: java.lang.UNIXProcess$LaunchMechanism;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        r0.<java.lang.UNIXProcess$LaunchMechanism: int value> = i1;
        return;
    }

    static int access$300(java.lang.UNIXProcess$LaunchMechanism)
    {
        java.lang.UNIXProcess$LaunchMechanism r0;
        int $i0;

        r0 := @parameter0: java.lang.UNIXProcess$LaunchMechanism;
        $i0 = r0.<java.lang.UNIXProcess$LaunchMechanism: int value>;
        return $i0;
    }

    static void <clinit>()
    {
        java.lang.UNIXProcess$LaunchMechanism $r0, $r1, $r3, $r4;
        java.lang.UNIXProcess$LaunchMechanism[] $r2;

        $r0 = new java.lang.UNIXProcess$LaunchMechanism;
        specialinvoke $r0.<java.lang.UNIXProcess$LaunchMechanism: void <init>(java.lang.String,int,int)>("FORK", 0, 1);
        <java.lang.UNIXProcess$LaunchMechanism: java.lang.UNIXProcess$LaunchMechanism FORK> = $r0;
        $r1 = new java.lang.UNIXProcess$LaunchMechanism;
        specialinvoke $r1.<java.lang.UNIXProcess$LaunchMechanism: void <init>(java.lang.String,int,int)>("POSIX_SPAWN", 1, 2);
        <java.lang.UNIXProcess$LaunchMechanism: java.lang.UNIXProcess$LaunchMechanism POSIX_SPAWN> = $r1;
        $r2 = newarray (java.lang.UNIXProcess$LaunchMechanism)[2];
        $r3 = <java.lang.UNIXProcess$LaunchMechanism: java.lang.UNIXProcess$LaunchMechanism FORK>;
        $r2[0] = $r3;
        $r4 = <java.lang.UNIXProcess$LaunchMechanism: java.lang.UNIXProcess$LaunchMechanism POSIX_SPAWN>;
        $r2[1] = $r4;
        <java.lang.UNIXProcess$LaunchMechanism: java.lang.UNIXProcess$LaunchMechanism[] $VALUES> = $r2;
        return;
    }
}
