public abstract class sun.reflect.generics.repository.AbstractRepository extends java.lang.Object
{
    private sun.reflect.generics.factory.GenericsFactory factory;
    private sun.reflect.generics.tree.Tree tree;

    private sun.reflect.generics.factory.GenericsFactory getFactory()
    {
        sun.reflect.generics.repository.AbstractRepository r0;
        sun.reflect.generics.factory.GenericsFactory $r1;

        r0 := @this: sun.reflect.generics.repository.AbstractRepository;
        $r1 = r0.<sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.factory.GenericsFactory factory>;
        return $r1;
    }

    protected sun.reflect.generics.tree.Tree getTree()
    {
        sun.reflect.generics.repository.AbstractRepository r0;
        sun.reflect.generics.tree.Tree $r1;

        r0 := @this: sun.reflect.generics.repository.AbstractRepository;
        $r1 = r0.<sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.tree.Tree tree>;
        return $r1;
    }

    protected sun.reflect.generics.visitor.Reifier getReifier()
    {
        sun.reflect.generics.repository.AbstractRepository r0;
        sun.reflect.generics.factory.GenericsFactory $r1;
        sun.reflect.generics.visitor.Reifier $r2;

        r0 := @this: sun.reflect.generics.repository.AbstractRepository;
        $r1 = specialinvoke r0.<sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.factory.GenericsFactory getFactory()>();
        $r2 = staticinvoke <sun.reflect.generics.visitor.Reifier: sun.reflect.generics.visitor.Reifier make(sun.reflect.generics.factory.GenericsFactory)>($r1);
        return $r2;
    }

    protected void <init>(java.lang.String, sun.reflect.generics.factory.GenericsFactory)
    {
        sun.reflect.generics.repository.AbstractRepository r0;
        java.lang.String r1;
        sun.reflect.generics.factory.GenericsFactory r2;
        sun.reflect.generics.tree.Tree $r3;

        r0 := @this: sun.reflect.generics.repository.AbstractRepository;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: sun.reflect.generics.factory.GenericsFactory;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = virtualinvoke r0.<sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.tree.Tree parse(java.lang.String)>(r1);
        r0.<sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.tree.Tree tree> = $r3;
        r0.<sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.factory.GenericsFactory factory> = r2;
        return;
    }

    protected abstract sun.reflect.generics.tree.Tree parse(java.lang.String);
}
