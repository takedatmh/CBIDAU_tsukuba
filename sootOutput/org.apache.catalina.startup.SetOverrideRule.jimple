final class org.apache.catalina.startup.SetOverrideRule extends org.apache.tomcat.util.digester.Rule
{

    public void <init>()
    {
        org.apache.catalina.startup.SetOverrideRule r0;

        r0 := @this: org.apache.catalina.startup.SetOverrideRule;
        specialinvoke r0.<org.apache.tomcat.util.digester.Rule: void <init>()>();
        return;
    }

    public void begin(java.lang.String, java.lang.String, org.xml.sax.Attributes) throws java.lang.Exception
    {
        org.apache.catalina.startup.SetOverrideRule r0;
        java.lang.String r1, r2, $r13, $r14, $r16;
        org.xml.sax.Attributes r3;
        org.apache.catalina.deploy.ContextEnvironment r4;
        org.apache.tomcat.util.digester.Digester $r5, $r7, $r9;
        java.lang.Object $r6;
        org.apache.juli.logging.Log $r8, $r10;
        boolean $z0;
        java.lang.StringBuilder $r11, $r15;
        java.lang.Class $r12;

        r0 := @this: org.apache.catalina.startup.SetOverrideRule;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.xml.sax.Attributes;
        $r5 = r0.<org.apache.catalina.startup.SetOverrideRule: org.apache.tomcat.util.digester.Digester digester>;
        $r6 = virtualinvoke $r5.<org.apache.tomcat.util.digester.Digester: java.lang.Object peek()>();
        r4 = (org.apache.catalina.deploy.ContextEnvironment) $r6;
        virtualinvoke r4.<org.apache.catalina.deploy.ContextEnvironment: void setOverride(boolean)>(0);
        $r7 = r0.<org.apache.catalina.startup.SetOverrideRule: org.apache.tomcat.util.digester.Digester digester>;
        $r8 = virtualinvoke $r7.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log getLogger()>();
        $z0 = interfaceinvoke $r8.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r9 = r0.<org.apache.catalina.startup.SetOverrideRule: org.apache.tomcat.util.digester.Digester digester>;
        $r10 = virtualinvoke $r9.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log getLogger()>();
        $r11 = new java.lang.StringBuilder;
        $r12 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();
        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);
        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".setOverride(false)");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r16);

     label0:
        return;
    }
}
