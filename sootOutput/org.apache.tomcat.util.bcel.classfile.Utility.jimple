final class org.apache.tomcat.util.bcel.classfile.Utility extends java.lang.Object
{

    private void <init>()
    {
        org.apache.tomcat.util.bcel.classfile.Utility r0;

        r0 := @this: org.apache.tomcat.util.bcel.classfile.Utility;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static java.lang.String compactClassName(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(47, 46);
        return $r1;
    }

    static java.lang.String getClassName(org.apache.tomcat.util.bcel.classfile.ConstantPool, int)
    {
        org.apache.tomcat.util.bcel.classfile.ConstantPool r0;
        int i0, i1;
        org.apache.tomcat.util.bcel.classfile.Constant r1, r4;
        java.lang.String r2, $r6;
        org.apache.tomcat.util.bcel.classfile.ConstantClass $r3;
        org.apache.tomcat.util.bcel.classfile.ConstantUtf8 $r5;

        r0 := @parameter0: org.apache.tomcat.util.bcel.classfile.ConstantPool;
        i0 := @parameter1: int;
        r1 = virtualinvoke r0.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant getConstant(int,byte)>(i0, 7);
        $r3 = (org.apache.tomcat.util.bcel.classfile.ConstantClass) r1;
        i1 = virtualinvoke $r3.<org.apache.tomcat.util.bcel.classfile.ConstantClass: int getNameIndex()>();
        r4 = virtualinvoke r0.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant getConstant(int,byte)>(i1, 1);
        $r5 = (org.apache.tomcat.util.bcel.classfile.ConstantUtf8) r4;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.bcel.classfile.ConstantUtf8: java.lang.String getBytes()>();
        $r6 = staticinvoke <org.apache.tomcat.util.bcel.classfile.Utility: java.lang.String compactClassName(java.lang.String)>(r2);
        return $r6;
    }

    static void skipFully(java.io.DataInput, int) throws java.io.IOException
    {
        java.io.DataInput r0;
        int i0, i1;
        java.io.EOFException $r1;

        r0 := @parameter0: java.io.DataInput;
        i0 := @parameter1: int;
        i1 = interfaceinvoke r0.<java.io.DataInput: int skipBytes(int)>(i0);
        if i1 == i0 goto label0;

        $r1 = new java.io.EOFException;
        specialinvoke $r1.<java.io.EOFException: void <init>()>();
        throw $r1;

     label0:
        return;
    }

    static void swallowFieldOrMethod(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r0;
        int i0, i1;

        r0 := @parameter0: java.io.DataInput;
        staticinvoke <org.apache.tomcat.util.bcel.classfile.Utility: void skipFully(java.io.DataInput,int)>(r0, 6);
        i0 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedShort()>();
        i1 = 0;
        goto label1;

     label0:
        staticinvoke <org.apache.tomcat.util.bcel.classfile.Utility: void swallowAttribute(java.io.DataInput)>(r0);
        i1 = i1 + 1;

     label1:
        if i1 < i0 goto label0;

        return;
    }

    static void swallowAttribute(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r0;
        int i0;

        r0 := @parameter0: java.io.DataInput;
        staticinvoke <org.apache.tomcat.util.bcel.classfile.Utility: void skipFully(java.io.DataInput,int)>(r0, 2);
        i0 = interfaceinvoke r0.<java.io.DataInput: int readInt()>();
        staticinvoke <org.apache.tomcat.util.bcel.classfile.Utility: void skipFully(java.io.DataInput,int)>(r0, i0);
        return;
    }
}
