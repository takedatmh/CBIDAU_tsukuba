final class java.security.KeyStore$Builder$FileBuilder extends java.security.KeyStore$Builder
{
    private final java.lang.String type;
    private final java.security.Provider provider;
    private final java.io.File file;
    private java.security.KeyStore$ProtectionParameter protection;
    private java.security.KeyStore$ProtectionParameter keyProtection;
    private final java.security.AccessControlContext context;
    private java.security.KeyStore keyStore;
    private java.lang.Throwable oldException;

    void <init>(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore$ProtectionParameter, java.security.AccessControlContext)
    {
        java.security.KeyStore$Builder$FileBuilder r0;
        java.lang.String r1;
        java.security.Provider r2;
        java.io.File r3;
        java.security.KeyStore$ProtectionParameter r4;
        java.security.AccessControlContext r5;

        r0 := @this: java.security.KeyStore$Builder$FileBuilder;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.security.Provider;
        r3 := @parameter2: java.io.File;
        r4 := @parameter3: java.security.KeyStore$ProtectionParameter;
        r5 := @parameter4: java.security.AccessControlContext;
        specialinvoke r0.<java.security.KeyStore$Builder: void <init>()>();
        r0.<java.security.KeyStore$Builder$FileBuilder: java.lang.String type> = r1;
        r0.<java.security.KeyStore$Builder$FileBuilder: java.security.Provider provider> = r2;
        r0.<java.security.KeyStore$Builder$FileBuilder: java.io.File file> = r3;
        r0.<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore$ProtectionParameter protection> = r4;
        r0.<java.security.KeyStore$Builder$FileBuilder: java.security.AccessControlContext context> = r5;
        return;
    }

    public synchronized java.security.KeyStore getKeyStore() throws java.security.KeyStoreException
    {
        java.security.KeyStore$Builder$FileBuilder r0;
        java.security.KeyStore$Builder$FileBuilder$1 r1, $r8;
        java.security.PrivilegedActionException r2, $r13;
        java.security.KeyStore $r3, $r4, $r11, $r12;
        java.lang.Throwable $r5, $r7, $r14, $r16;
        java.security.KeyStoreException $r6, $r15;
        java.security.AccessControlContext $r9;
        java.lang.Object $r10;

        r0 := @this: java.security.KeyStore$Builder$FileBuilder;
        $r3 = r0.<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore keyStore>;
        if $r3 == null goto label0;

        $r4 = r0.<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore keyStore>;
        return $r4;

     label0:
        $r5 = r0.<java.security.KeyStore$Builder$FileBuilder: java.lang.Throwable oldException>;
        if $r5 == null goto label1;

        $r6 = new java.security.KeyStoreException;
        $r7 = r0.<java.security.KeyStore$Builder$FileBuilder: java.lang.Throwable oldException>;
        specialinvoke $r6.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Previous KeyStore instantiation failed", $r7);
        throw $r6;

     label1:
        $r8 = new java.security.KeyStore$Builder$FileBuilder$1;
        specialinvoke $r8.<java.security.KeyStore$Builder$FileBuilder$1: void <init>(java.security.KeyStore$Builder$FileBuilder)>(r0);
        r1 = $r8;

     label2:
        $r9 = r0.<java.security.KeyStore$Builder$FileBuilder: java.security.AccessControlContext context>;
        $r10 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>(r1, $r9);
        $r11 = (java.security.KeyStore) $r10;
        r0.<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore keyStore> = $r11;
        $r12 = r0.<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore keyStore>;

     label3:
        return $r12;

     label4:
        $r13 := @caughtexception;
        r2 = $r13;
        $r14 = virtualinvoke r2.<java.security.PrivilegedActionException: java.lang.Throwable getCause()>();
        r0.<java.security.KeyStore$Builder$FileBuilder: java.lang.Throwable oldException> = $r14;
        $r15 = new java.security.KeyStoreException;
        $r16 = r0.<java.security.KeyStore$Builder$FileBuilder: java.lang.Throwable oldException>;
        specialinvoke $r15.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>("KeyStore instantiation failed", $r16);
        throw $r15;

        catch java.security.PrivilegedActionException from label2 to label3 with label4;
    }

    public synchronized java.security.KeyStore$ProtectionParameter getProtectionParameter(java.lang.String)
    {
        java.security.KeyStore$Builder$FileBuilder r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;
        java.security.KeyStore $r3;
        java.lang.IllegalStateException $r4;
        java.security.KeyStore$ProtectionParameter $r5;

        r0 := @this: java.security.KeyStore$Builder$FileBuilder;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore keyStore>;
        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalStateException;
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getKeyStore() must be called first");
        throw $r4;

     label1:
        $r5 = r0.<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore$ProtectionParameter keyProtection>;
        return $r5;
    }

    static java.security.KeyStore$ProtectionParameter access$100(java.security.KeyStore$Builder$FileBuilder)
    {
        java.security.KeyStore$Builder$FileBuilder r0;
        java.security.KeyStore$ProtectionParameter $r1;

        r0 := @parameter0: java.security.KeyStore$Builder$FileBuilder;
        $r1 = r0.<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore$ProtectionParameter protection>;
        return $r1;
    }

    static java.security.Provider access$200(java.security.KeyStore$Builder$FileBuilder)
    {
        java.security.KeyStore$Builder$FileBuilder r0;
        java.security.Provider $r1;

        r0 := @parameter0: java.security.KeyStore$Builder$FileBuilder;
        $r1 = r0.<java.security.KeyStore$Builder$FileBuilder: java.security.Provider provider>;
        return $r1;
    }

    static java.lang.String access$300(java.security.KeyStore$Builder$FileBuilder)
    {
        java.security.KeyStore$Builder$FileBuilder r0;
        java.lang.String $r1;

        r0 := @parameter0: java.security.KeyStore$Builder$FileBuilder;
        $r1 = r0.<java.security.KeyStore$Builder$FileBuilder: java.lang.String type>;
        return $r1;
    }

    static java.io.File access$400(java.security.KeyStore$Builder$FileBuilder)
    {
        java.security.KeyStore$Builder$FileBuilder r0;
        java.io.File $r1;

        r0 := @parameter0: java.security.KeyStore$Builder$FileBuilder;
        $r1 = r0.<java.security.KeyStore$Builder$FileBuilder: java.io.File file>;
        return $r1;
    }

    static java.security.KeyStore$ProtectionParameter access$502(java.security.KeyStore$Builder$FileBuilder, java.security.KeyStore$ProtectionParameter)
    {
        java.security.KeyStore$Builder$FileBuilder r0;
        java.security.KeyStore$ProtectionParameter r1;

        r0 := @parameter0: java.security.KeyStore$Builder$FileBuilder;
        r1 := @parameter1: java.security.KeyStore$ProtectionParameter;
        r0.<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore$ProtectionParameter keyProtection> = r1;
        return r1;
    }
}
