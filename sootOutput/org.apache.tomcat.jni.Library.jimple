public final class org.apache.tomcat.jni.Library extends java.lang.Object
{
    private static final java.lang.String[] NAMES;
    private static org.apache.tomcat.jni.Library _instance;
    public static int TCN_MAJOR_VERSION;
    public static int TCN_MINOR_VERSION;
    public static int TCN_PATCH_VERSION;
    public static int TCN_IS_DEV_VERSION;
    public static int APR_MAJOR_VERSION;
    public static int APR_MINOR_VERSION;
    public static int APR_PATCH_VERSION;
    public static int APR_IS_DEV_VERSION;
    public static boolean APR_HAVE_IPV6;
    public static boolean APR_HAS_SHARED_MEMORY;
    public static boolean APR_HAS_THREADS;
    public static boolean APR_HAS_SENDFILE;
    public static boolean APR_HAS_MMAP;
    public static boolean APR_HAS_FORK;
    public static boolean APR_HAS_RANDOM;
    public static boolean APR_HAS_OTHER_CHILD;
    public static boolean APR_HAS_DSO;
    public static boolean APR_HAS_SO_ACCEPTFILTER;
    public static boolean APR_HAS_UNICODE_FS;
    public static boolean APR_HAS_PROC_INVOKED;
    public static boolean APR_HAS_USER;
    public static boolean APR_HAS_LARGE_FILES;
    public static boolean APR_HAS_XTHREAD_FILES;
    public static boolean APR_HAS_OS_UUID;
    public static boolean APR_IS_BIGENDIAN;
    public static boolean APR_FILES_AS_SOCKETS;
    public static boolean APR_CHARSET_EBCDIC;
    public static boolean APR_TCP_NODELAY_INHERITED;
    public static boolean APR_O_NONBLOCK_INHERITED;
    public static int APR_SIZEOF_VOIDP;
    public static int APR_PATH_MAX;
    public static int APRMAXHOSTLEN;
    public static int APR_MAX_IOVEC_SIZE;
    public static int APR_MAX_SECS_TO_LINGER;
    public static int APR_MMAP_THRESHOLD;
    public static int APR_MMAP_LIMIT;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[2];
        $r0[0] = "tcnative-1";
        $r0[1] = "libtcnative-1";
        <org.apache.tomcat.jni.Library: java.lang.String[] NAMES> = $r0;
        <org.apache.tomcat.jni.Library: org.apache.tomcat.jni.Library _instance> = null;
        <org.apache.tomcat.jni.Library: int TCN_MAJOR_VERSION> = 0;
        <org.apache.tomcat.jni.Library: int TCN_MINOR_VERSION> = 0;
        <org.apache.tomcat.jni.Library: int TCN_PATCH_VERSION> = 0;
        <org.apache.tomcat.jni.Library: int TCN_IS_DEV_VERSION> = 0;
        <org.apache.tomcat.jni.Library: int APR_MAJOR_VERSION> = 0;
        <org.apache.tomcat.jni.Library: int APR_MINOR_VERSION> = 0;
        <org.apache.tomcat.jni.Library: int APR_PATCH_VERSION> = 0;
        <org.apache.tomcat.jni.Library: int APR_IS_DEV_VERSION> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAVE_IPV6> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_SHARED_MEMORY> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_THREADS> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_SENDFILE> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_MMAP> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_FORK> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_RANDOM> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_OTHER_CHILD> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_DSO> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_SO_ACCEPTFILTER> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_UNICODE_FS> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_PROC_INVOKED> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_USER> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_LARGE_FILES> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_XTHREAD_FILES> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_HAS_OS_UUID> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_IS_BIGENDIAN> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_FILES_AS_SOCKETS> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_CHARSET_EBCDIC> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_TCP_NODELAY_INHERITED> = 0;
        <org.apache.tomcat.jni.Library: boolean APR_O_NONBLOCK_INHERITED> = 0;
        return;
    }

    private void <init>() throws java.lang.Throwable
    {
        org.apache.tomcat.jni.Library r0;
        boolean z0, $z1;
        java.lang.String r1, $r2, r6, $r10, $r17, $r19, $r21, r28, $r32, $r33;
        java.lang.String[] r3, $r9, $r16, $r23, $r26, r27;
        java.lang.StringBuilder r4, $r8, $r24, r25;
        int i0, i1, $i2, $i3, i4, i5, $i6, $i7;
        java.lang.ThreadDeath r5, $r11;
        java.io.File r7, $r18;
        java.lang.VirtualMachineError $r12, r13;
        java.lang.Throwable $r14, r15;
        org.apache.tomcat.jni.LibraryNotFoundError $r31;

        r0 := @this: org.apache.tomcat.jni.Library;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        z0 = 0;
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.library.path");
        $r2 = <java.io.File: java.lang.String pathSeparator>;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r2);
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        r4 = $r8;
        i0 = 0;
        goto label11;

     label0:
        $r9 = <org.apache.tomcat.jni.Library: java.lang.String[] NAMES>;
        $r10 = $r9[i0];
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>($r10);
        z0 = 1;

     label1:
        goto label9;

     label2:
        $r11 := @caughtexception;
        r5 = $r11;
        throw r5;

     label3:
        $r12 := @caughtexception;
        r13 = $r12;
        throw r13;

     label4:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = <org.apache.tomcat.jni.Library: java.lang.String[] NAMES>;
        $r17 = $r16[i0];
        r6 = staticinvoke <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>($r17);
        i1 = 0;
        goto label7;

     label5:
        $r18 = new java.io.File;
        $r19 = r3[i1];
        specialinvoke $r18.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r19, r6);
        r7 = $r18;
        $z1 = virtualinvoke r7.<java.io.File: boolean exists()>();
        if $z1 == 0 goto label6;

        throw r15;

     label6:
        i1 = i1 + 1;

     label7:
        $i2 = lengthof r3;
        if i1 < $i2 goto label5;

        if i0 <= 0 goto label8;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label8:
        $r21 = virtualinvoke r15.<java.lang.Throwable: java.lang.String getMessage()>();
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label9:
        if z0 == 0 goto label10;

        goto label12;

     label10:
        i0 = i0 + 1;

     label11:
        $r23 = <org.apache.tomcat.jni.Library: java.lang.String[] NAMES>;
        $i3 = lengthof $r23;
        if i0 < $i3 goto label0;

     label12:
        if z0 != 0 goto label15;

        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        r25 = $r24;
        $r26 = <org.apache.tomcat.jni.Library: java.lang.String[] NAMES>;
        r27 = $r26;
        i4 = lengthof $r26;
        i5 = 0;
        goto label14;

     label13:
        r28 = r27[i5];
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        i5 = i5 + 1;

     label14:
        if i5 < i4 goto label13;

        $r31 = new org.apache.tomcat.jni.LibraryNotFoundError;
        $i6 = virtualinvoke r25.<java.lang.StringBuilder: int length()>();
        $i7 = $i6 - 2;
        $r32 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, $i7);
        $r33 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r31.<org.apache.tomcat.jni.LibraryNotFoundError: void <init>(java.lang.String,java.lang.String)>($r32, $r33);
        throw $r31;

     label15:
        return;

        catch java.lang.ThreadDeath from label0 to label1 with label2;
        catch java.lang.VirtualMachineError from label0 to label1 with label3;
        catch java.lang.Throwable from label0 to label1 with label4;
    }

    private void <init>(java.lang.String)
    {
        org.apache.tomcat.jni.Library r0;
        java.lang.String r1;

        r0 := @this: org.apache.tomcat.jni.Library;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>(r1);
        return;
    }

    private static native boolean initialize();

    public static native void terminate();

    private static native boolean has(int);

    private static native int version(int);

    private static native int size(int);

    public static native java.lang.String versionString();

    public static native java.lang.String aprVersionString();

    public static native long globalPool();

    public static synchronized boolean initialize(java.lang.String) throws java.lang.Throwable
    {
        java.lang.String r0, $r6, $r9;
        org.apache.tomcat.jni.Library $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        java.lang.UnsatisfiedLinkError $r4, $r10;
        java.lang.StringBuilder $r5, $r7, $r8;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.apache.tomcat.jni.Library: org.apache.tomcat.jni.Library _instance>;
        if $r1 != null goto label3;

        if r0 != null goto label0;

        $r2 = new org.apache.tomcat.jni.Library;
        specialinvoke $r2.<org.apache.tomcat.jni.Library: void <init>()>();
        <org.apache.tomcat.jni.Library: org.apache.tomcat.jni.Library _instance> = $r2;
        goto label1;

     label0:
        $r3 = new org.apache.tomcat.jni.Library;
        specialinvoke $r3.<org.apache.tomcat.jni.Library: void <init>(java.lang.String)>(r0);
        <org.apache.tomcat.jni.Library: org.apache.tomcat.jni.Library _instance> = $r3;

     label1:
        $i0 = staticinvoke <org.apache.tomcat.jni.Library: int version(int)>(1);
        <org.apache.tomcat.jni.Library: int TCN_MAJOR_VERSION> = $i0;
        $i1 = staticinvoke <org.apache.tomcat.jni.Library: int version(int)>(2);
        <org.apache.tomcat.jni.Library: int TCN_MINOR_VERSION> = $i1;
        $i2 = staticinvoke <org.apache.tomcat.jni.Library: int version(int)>(3);
        <org.apache.tomcat.jni.Library: int TCN_PATCH_VERSION> = $i2;
        $i3 = staticinvoke <org.apache.tomcat.jni.Library: int version(int)>(4);
        <org.apache.tomcat.jni.Library: int TCN_IS_DEV_VERSION> = $i3;
        $i4 = staticinvoke <org.apache.tomcat.jni.Library: int version(int)>(17);
        <org.apache.tomcat.jni.Library: int APR_MAJOR_VERSION> = $i4;
        $i5 = staticinvoke <org.apache.tomcat.jni.Library: int version(int)>(18);
        <org.apache.tomcat.jni.Library: int APR_MINOR_VERSION> = $i5;
        $i6 = staticinvoke <org.apache.tomcat.jni.Library: int version(int)>(19);
        <org.apache.tomcat.jni.Library: int APR_PATCH_VERSION> = $i6;
        $i7 = staticinvoke <org.apache.tomcat.jni.Library: int version(int)>(20);
        <org.apache.tomcat.jni.Library: int APR_IS_DEV_VERSION> = $i7;
        $i8 = staticinvoke <org.apache.tomcat.jni.Library: int size(int)>(1);
        <org.apache.tomcat.jni.Library: int APR_SIZEOF_VOIDP> = $i8;
        $i9 = staticinvoke <org.apache.tomcat.jni.Library: int size(int)>(2);
        <org.apache.tomcat.jni.Library: int APR_PATH_MAX> = $i9;
        $i10 = staticinvoke <org.apache.tomcat.jni.Library: int size(int)>(3);
        <org.apache.tomcat.jni.Library: int APRMAXHOSTLEN> = $i10;
        $i11 = staticinvoke <org.apache.tomcat.jni.Library: int size(int)>(4);
        <org.apache.tomcat.jni.Library: int APR_MAX_IOVEC_SIZE> = $i11;
        $i12 = staticinvoke <org.apache.tomcat.jni.Library: int size(int)>(5);
        <org.apache.tomcat.jni.Library: int APR_MAX_SECS_TO_LINGER> = $i12;
        $i13 = staticinvoke <org.apache.tomcat.jni.Library: int size(int)>(6);
        <org.apache.tomcat.jni.Library: int APR_MMAP_THRESHOLD> = $i13;
        $i14 = staticinvoke <org.apache.tomcat.jni.Library: int size(int)>(7);
        <org.apache.tomcat.jni.Library: int APR_MMAP_LIMIT> = $i14;
        $z0 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(0);
        <org.apache.tomcat.jni.Library: boolean APR_HAVE_IPV6> = $z0;
        $z1 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(1);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_SHARED_MEMORY> = $z1;
        $z2 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(2);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_THREADS> = $z2;
        $z3 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(3);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_SENDFILE> = $z3;
        $z4 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(4);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_MMAP> = $z4;
        $z5 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(5);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_FORK> = $z5;
        $z6 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(6);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_RANDOM> = $z6;
        $z7 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(7);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_OTHER_CHILD> = $z7;
        $z8 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(8);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_DSO> = $z8;
        $z9 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(9);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_SO_ACCEPTFILTER> = $z9;
        $z10 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(10);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_UNICODE_FS> = $z10;
        $z11 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(11);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_PROC_INVOKED> = $z11;
        $z12 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(12);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_USER> = $z12;
        $z13 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(13);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_LARGE_FILES> = $z13;
        $z14 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(14);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_XTHREAD_FILES> = $z14;
        $z15 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(15);
        <org.apache.tomcat.jni.Library: boolean APR_HAS_OS_UUID> = $z15;
        $z16 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(16);
        <org.apache.tomcat.jni.Library: boolean APR_IS_BIGENDIAN> = $z16;
        $z17 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(17);
        <org.apache.tomcat.jni.Library: boolean APR_FILES_AS_SOCKETS> = $z17;
        $z18 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(18);
        <org.apache.tomcat.jni.Library: boolean APR_CHARSET_EBCDIC> = $z18;
        $z19 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(19);
        <org.apache.tomcat.jni.Library: boolean APR_TCP_NODELAY_INHERITED> = $z19;
        $z20 = staticinvoke <org.apache.tomcat.jni.Library: boolean has(int)>(20);
        <org.apache.tomcat.jni.Library: boolean APR_O_NONBLOCK_INHERITED> = $z20;
        $i15 = <org.apache.tomcat.jni.Library: int APR_MAJOR_VERSION>;
        if $i15 >= 1 goto label2;

        $r4 = new java.lang.UnsatisfiedLinkError;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unsupported APR Version (");
        $r6 = staticinvoke <org.apache.tomcat.jni.Library: java.lang.String aprVersionString()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.lang.UnsatisfiedLinkError: void <init>(java.lang.String)>($r9);
        throw $r4;

     label2:
        $z21 = <org.apache.tomcat.jni.Library: boolean APR_HAS_THREADS>;
        if $z21 != 0 goto label3;

        $r10 = new java.lang.UnsatisfiedLinkError;
        specialinvoke $r10.<java.lang.UnsatisfiedLinkError: void <init>(java.lang.String)>("Missing APR_HAS_THREADS");
        throw $r10;

     label3:
        $z22 = staticinvoke <org.apache.tomcat.jni.Library: boolean initialize()>();
        return $z22;
    }
}
