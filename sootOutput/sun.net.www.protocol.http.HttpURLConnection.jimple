public class sun.net.www.protocol.http.HttpURLConnection extends java.net.HttpURLConnection
{
    static java.lang.String HTTP_CONNECT;
    static final java.lang.String version;
    public static final java.lang.String userAgent;
    static final int defaultmaxRedirects;
    static final int maxRedirects;
    static final boolean validateProxy;
    static final boolean validateServer;
    private sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream strOutputStream;
    private static final java.lang.String RETRY_MSG1;
    private static final java.lang.String RETRY_MSG2;
    private static final java.lang.String RETRY_MSG3;
    private static boolean enableESBuffer;
    private static int timeout4ESBuffer;
    private static int bufSize4ES;
    private static final boolean allowRestrictedHeaders;
    private static final java.util.Set restrictedHeaderSet;
    private static final java.lang.String[] restrictedHeaders;
    static final java.lang.String httpVersion;
    static final java.lang.String acceptString;
    private static final java.lang.String[] EXCLUDE_HEADERS;
    private static final java.lang.String[] EXCLUDE_HEADERS2;
    protected sun.net.www.http.HttpClient http;
    protected sun.net.www.protocol.http.Handler handler;
    protected java.net.Proxy instProxy;
    private java.net.CookieHandler cookieHandler;
    private java.net.ResponseCache cacheHandler;
    protected java.net.CacheResponse cachedResponse;
    private sun.net.www.MessageHeader cachedHeaders;
    private java.io.InputStream cachedInputStream;
    protected java.io.PrintStream ps;
    private java.io.InputStream errorStream;
    private boolean setUserCookies;
    private java.lang.String userCookies;
    private java.lang.String userCookies2;
    private static sun.net.www.protocol.http.HttpAuthenticator defaultAuth;
    private sun.net.www.MessageHeader requests;
    java.lang.String domain;
    sun.net.www.protocol.http.DigestAuthentication$Parameters digestparams;
    sun.net.www.protocol.http.AuthenticationInfo currentProxyCredentials;
    sun.net.www.protocol.http.AuthenticationInfo currentServerCredentials;
    boolean needToCheck;
    private boolean doingNTLM2ndStage;
    private boolean doingNTLMp2ndStage;
    private boolean tryTransparentNTLMServer;
    private boolean tryTransparentNTLMProxy;
    private boolean useProxyResponseCode;
    private java.lang.Object authObj;
    boolean isUserServerAuth;
    boolean isUserProxyAuth;
    java.lang.String serverAuthKey;
    java.lang.String proxyAuthKey;
    protected sun.net.ProgressSource pi;
    private sun.net.www.MessageHeader responses;
    private java.io.InputStream inputStream;
    private sun.net.www.http.PosterOutputStream poster;
    private boolean setRequests;
    private boolean failedOnce;
    private java.lang.Exception rememberedException;
    private sun.net.www.http.HttpClient reuseClient;
    private sun.net.www.protocol.http.HttpURLConnection$TunnelState tunnelState;
    private int connectTimeout;
    private int readTimeout;
    private static final sun.util.logging.PlatformLogger logger;
    java.lang.String requestURI;
    byte[] cdata;
    private static final java.lang.String SET_COOKIE;
    private static final java.lang.String SET_COOKIE2;
    private java.util.Map filteredHeaders;

    private static java.net.PasswordAuthentication privilegedRequestPasswordAuthentication(java.lang.String, java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String, java.net.URL, java.net.Authenticator$RequestorType)
    {
        java.lang.String r0, r2, r3, r4;
        java.net.InetAddress r1;
        int i0;
        java.net.URL r5;
        java.net.Authenticator$RequestorType r6;
        sun.net.www.protocol.http.HttpURLConnection$1 $r7;
        java.lang.Object $r8;
        java.net.PasswordAuthentication $r9;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.net.InetAddress;
        i0 := @parameter2: int;
        r2 := @parameter3: java.lang.String;
        r3 := @parameter4: java.lang.String;
        r4 := @parameter5: java.lang.String;
        r5 := @parameter6: java.net.URL;
        r6 := @parameter7: java.net.Authenticator$RequestorType;
        $r7 = new sun.net.www.protocol.http.HttpURLConnection$1;
        specialinvoke $r7.<sun.net.www.protocol.http.HttpURLConnection$1: void <init>(java.lang.String,java.net.URL,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.Authenticator$RequestorType)>(r0, r5, r1, i0, r2, r3, r4, r6);
        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r7);
        $r9 = (java.net.PasswordAuthentication) $r8;
        return $r9;
    }

    private boolean isRestrictedHeader(java.lang.String, java.lang.String)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String r1, r2, r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r4;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $z0 = <sun.net.www.protocol.http.HttpURLConnection: boolean allowRestrictedHeaders>;
        if $z0 == 0 goto label0;

        return 0;

     label0:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = <sun.net.www.protocol.http.HttpURLConnection: java.util.Set restrictedHeaderSet>;
        $z1 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r3);
        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("connection");
        if $z2 == 0 goto label1;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("close");
        if $z3 == 0 goto label1;

        return 0;

     label1:
        return 1;

     label2:
        $z4 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("sec-");
        if $z4 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private boolean isExternalMessageHeaderAllowed(java.lang.String, java.lang.String)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void checkMessageHeader(java.lang.String,java.lang.String)>(r1, r2);
        $z0 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean isRestrictedHeader(java.lang.String,java.lang.String)>(r1, r2);
        if $z0 != 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public static sun.util.logging.PlatformLogger getHttpLogger()
    {
        sun.util.logging.PlatformLogger $r0;

        $r0 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        return $r0;
    }

    public java.lang.Object authObj()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.Object $r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Object authObj>;
        return $r1;
    }

    public void authObj(java.lang.Object)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.Object r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.lang.Object;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Object authObj> = r1;
        return;
    }

    private void checkMessageHeader(java.lang.String, java.lang.String)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String r1, r2, $r7, $r12;
        byte b0;
        int i1, i3, i4, $i5;
        java.lang.StringBuilder $r3, $r5, $r6, $r9, $r10, $r11;
        char c2;
        java.lang.IllegalArgumentException $r4, $r8;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        b0 = 10;
        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(b0);
        if i1 == -1 goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal character(s) in message header field: ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);
        throw $r4;

     label0:
        if r2 != null goto label1;

        return;

     label1:
        i3 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(b0);

     label2:
        if i3 == -1 goto label5;

        i4 = i3 + 1;
        $i5 = virtualinvoke r2.<java.lang.String: int length()>();
        if i4 >= $i5 goto label4;

        c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);
        if c2 == 32 goto label3;

        if c2 != 9 goto label4;

     label3:
        i3 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(b0, i4);
        goto label2;

     label4:
        $r8 = new java.lang.IllegalArgumentException;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal character(s) in message header value: ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);
        throw $r8;

     label5:
        return;
    }

    private void writeRequests() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        sun.net.www.protocol.http.HttpURLConnection$TunnelState $r1, $r9, $r37, $r38;
        int i0, $i2, $i4, $i8, $i9, $i10, i11;
        java.lang.String r2, $r13, $r16, $r20, $r24, $r31, $r46, $r50, $r52, $r53, $r54, $r59, $r61, $r67, $r70, $r77, r83;
        long l1, $l5, $l7;
        java.util.Date r3, $r42;
        java.util.Locale $r4;
        java.text.SimpleDateFormat r5, $r43;
        sun.net.www.http.PosterOutputStream r6, $r55, $r62, $r63, $r64, $r66, $r80;
        java.lang.Throwable r7, $r68;
        sun.net.www.http.HttpClient $r8, $r35, $r36, $r78, $r82, $r84, $r88;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12, $z13, $z14, $z15, $z16;
        sun.net.www.MessageHeader $r10, $r11, $r21, $r22, $r23, $r33, $r34, $r39, $r40, $r41, $r45, $r49, $r56, $r57, $r58, $r60, $r65, $r69, $r71, $r76, $r79, $r91;
        java.lang.StringBuilder $r12, $r14, $r15, $r17, $r18, $r19, $r28, $r29, $r30, $r32;
        java.net.URL $r25, $r26, $r27, $r47, $r51, $r86, $r87;
        byte $b3, $b6;
        java.util.TimeZone $r44;
        sun.net.www.protocol.http.AuthenticationInfo r48;
        sun.util.logging.PlatformLogger $r72, $r73, $r74, $r75;
        java.io.PrintStream $r81, $r90;
        java.io.IOException $r85;
        java.io.OutputStream $r89;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r8 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $z0 = $r8.<sun.net.www.http.HttpClient: boolean usingProxy>;
        if $z0 == 0 goto label0;

        $r9 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$TunnelState tunnelState()>();
        $r1 = <sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState TUNNELING>;
        if $r9 == $r1 goto label0;

        $r10 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setPreemptiveProxyAuthentication(sun.net.www.MessageHeader)>($r10);

     label0:
        $z1 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean setRequests>;
        if $z1 != 0 goto label21;

        $z2 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean failedOnce>;
        if $z2 != 0 goto label1;

        $r11 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r16 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getRequestURI()>();
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP/1.1");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<sun.net.www.MessageHeader: void prepend(java.lang.String,java.lang.String)>($r20, null);

     label1:
        $z3 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean getUseCaches()>();
        if $z3 != 0 goto label2;

        $r21 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r21.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Cache-Control", "no-cache");
        $r22 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r22.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Pragma", "no-cache");

     label2:
        $r23 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r24 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String userAgent>;
        virtualinvoke $r23.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("User-Agent", $r24);
        $r25 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        i0 = virtualinvoke $r25.<java.net.URL: int getPort()>();
        $r26 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        r2 = virtualinvoke $r26.<java.net.URL: java.lang.String getHost()>();
        if i0 == -1 goto label3;

        $r27 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $i2 = virtualinvoke $r27.<java.net.URL: int getDefaultPort()>();
        if i0 == $i2 goto label3;

        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r31 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        r2 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r33 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r33.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Host", r2);
        $r34 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r34.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Accept", "text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2");
        $z4 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean failedOnce>;
        if $z4 != 0 goto label5;

        $r35 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $z5 = virtualinvoke $r35.<sun.net.www.http.HttpClient: boolean getHttpKeepAliveSet()>();
        if $z5 == 0 goto label5;

        $r36 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $z6 = $r36.<sun.net.www.http.HttpClient: boolean usingProxy>;
        if $z6 == 0 goto label4;

        $r37 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$TunnelState tunnelState()>();
        $r38 = <sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState TUNNELING>;
        if $r37 == $r38 goto label4;

        $r39 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r39.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Proxy-Connection", "keep-alive");
        goto label6;

     label4:
        $r40 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r40.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Connection", "keep-alive");
        goto label6;

     label5:
        $r41 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r41.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Connection", "close");

     label6:
        l1 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: long getIfModifiedSince()>();
        $b3 = l1 cmp 0L;
        if $b3 == 0 goto label7;

        $r42 = new java.util.Date;
        specialinvoke $r42.<java.util.Date: void <init>(long)>(l1);
        r3 = $r42;
        $r43 = new java.text.SimpleDateFormat;
        $r4 = <java.util.Locale: java.util.Locale US>;
        specialinvoke $r43.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("EEE, dd MMM yyyy HH:mm:ss \'GMT\'", $r4);
        r5 = $r43;
        $r44 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");
        virtualinvoke r5.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r44);
        $r45 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r46 = virtualinvoke r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);
        virtualinvoke $r45.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("If-Modified-Since", $r46);

     label7:
        $r47 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        r48 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getServerAuth(java.net.URL)>($r47);
        if r48 == null goto label8;

        $z7 = virtualinvoke r48.<sun.net.www.protocol.http.AuthenticationInfo: boolean supportsPreemptiveAuthorization()>();
        if $z7 == 0 goto label8;

        $r49 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r50 = virtualinvoke r48.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getHeaderName()>();
        $r51 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r52 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $r53 = virtualinvoke r48.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getHeaderValue(java.net.URL,java.lang.String)>($r51, $r52);
        virtualinvoke $r49.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>($r50, $r53);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentServerCredentials> = r48;

     label8:
        $r54 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $z8 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>("PUT");
        if $z8 != 0 goto label10;

        $r55 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster>;
        if $r55 != null goto label9;

        $z9 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>();
        if $z9 == 0 goto label10;

     label9:
        $r56 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r56.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Content-type", "application/x-www-form-urlencoded");

     label10:
        z10 = 0;
        $z11 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>();
        if $z11 == 0 goto label13;

        $i4 = r0.<sun.net.www.protocol.http.HttpURLConnection: int chunkLength>;
        if $i4 == -1 goto label11;

        $r57 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r57.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked");
        z10 = 1;
        goto label19;

     label11:
        $l5 = r0.<sun.net.www.protocol.http.HttpURLConnection: long fixedContentLengthLong>;
        $b6 = $l5 cmp -1L;
        if $b6 == 0 goto label12;

        $r58 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $l7 = r0.<sun.net.www.protocol.http.HttpURLConnection: long fixedContentLengthLong>;
        $r59 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l7);
        virtualinvoke $r58.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("Content-Length", $r59);
        goto label19;

     label12:
        $i8 = r0.<sun.net.www.protocol.http.HttpURLConnection: int fixedContentLength>;
        if $i8 == -1 goto label19;

        $r60 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $i9 = r0.<sun.net.www.protocol.http.HttpURLConnection: int fixedContentLength>;
        $r61 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i9);
        virtualinvoke $r60.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("Content-Length", $r61);
        goto label19;

     label13:
        $r62 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster>;
        if $r62 == null goto label19;

        $r63 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster>;
        r6 = $r63;
        entermonitor $r63;

     label14:
        $r64 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster>;
        virtualinvoke $r64.<sun.net.www.http.PosterOutputStream: void close()>();
        $r65 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r66 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster>;
        $i10 = virtualinvoke $r66.<sun.net.www.http.PosterOutputStream: int size()>();
        $r67 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i10);
        virtualinvoke $r65.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("Content-Length", $r67);
        exitmonitor r6;

     label15:
        goto label19;

     label16:
        $r68 := @caughtexception;

     label17:
        r7 = $r68;
        exitmonitor r6;

     label18:
        throw r7;

     label19:
        if z10 != 0 goto label20;

        $r69 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r70 = virtualinvoke $r69.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("Transfer-Encoding");
        if $r70 == null goto label20;

        $r71 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r71.<sun.net.www.MessageHeader: void remove(java.lang.String)>("Transfer-Encoding");
        $r72 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z12 = virtualinvoke $r72.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(900);
        if $z12 == 0 goto label20;

        $r73 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        virtualinvoke $r73.<sun.util.logging.PlatformLogger: void warning(java.lang.String)>("use streaming mode for chunked encoding");

     label20:
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setCookieHeader()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean setRequests> = 1;

     label21:
        $r74 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z13 = virtualinvoke $r74.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(500);
        if $z13 == 0 goto label22;

        $r75 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r76 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r77 = virtualinvoke $r76.<sun.net.www.MessageHeader: java.lang.String toString()>();
        virtualinvoke $r75.<sun.util.logging.PlatformLogger: void fine(java.lang.String)>($r77);

     label22:
        $r78 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r79 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r80 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster>;
        $z14 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>();
        virtualinvoke $r78.<sun.net.www.http.HttpClient: void writeRequests(sun.net.www.MessageHeader,sun.net.www.http.PosterOutputStream,boolean)>($r79, $r80, $z14);
        $r81 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.PrintStream ps>;
        $z15 = virtualinvoke $r81.<java.io.PrintStream: boolean checkError()>();
        if $z15 == 0 goto label26;

        $r82 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        r83 = virtualinvoke $r82.<sun.net.www.http.HttpClient: java.lang.String getProxyHostUsed()>();
        $r84 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        i11 = virtualinvoke $r84.<sun.net.www.http.HttpClient: int getProxyPortUsed()>();
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        $z16 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean failedOnce>;
        if $z16 == 0 goto label23;

        $r85 = new java.io.IOException;
        specialinvoke $r85.<java.io.IOException: void <init>(java.lang.String)>("Error writing to server");
        throw $r85;

     label23:
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean failedOnce> = 1;
        if r83 == null goto label24;

        $r86 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setProxiedClient(java.net.URL,java.lang.String,int)>($r86, r83, i11);
        goto label25;

     label24:
        $r87 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setNewClient(java.net.URL)>($r87);

     label25:
        $r88 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r89 = virtualinvoke $r88.<sun.net.www.http.HttpClient: java.io.OutputStream getOutputStream()>();
        $r90 = (java.io.PrintStream) $r89;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.PrintStream ps> = $r90;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected> = 1;
        $r91 = new sun.net.www.MessageHeader;
        specialinvoke $r91.<sun.net.www.MessageHeader: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses> = $r91;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean setRequests> = 0;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void writeRequests()>();

     label26:
        return;

        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    protected void setNewClient(java.net.URL) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setNewClient(java.net.URL,boolean)>(r1, 0);
        return;
    }

    protected void setNewClient(java.net.URL, boolean) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;
        boolean z0;
        int $i0, $i1;
        sun.net.www.http.HttpClient $r2, $r3;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        z0 := @parameter1: boolean;
        $i0 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;
        $r2 = staticinvoke <sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.lang.String,int,boolean,int,sun.net.www.protocol.http.HttpURLConnection)>(r1, null, -1, z0, $i0, r0);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = $r2;
        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i1 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;
        virtualinvoke $r3.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i1);
        return;
    }

    protected void setProxiedClient(java.net.URL, java.lang.String, int) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;
        java.lang.String r2;
        int i0;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setProxiedClient(java.net.URL,java.lang.String,int,boolean)>(r1, r2, i0, 0);
        return;
    }

    protected void setProxiedClient(java.net.URL, java.lang.String, int, boolean) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;
        java.lang.String r2;
        int i0;
        boolean z0;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        z0 := @parameter3: boolean;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void proxiedConnect(java.net.URL,java.lang.String,int,boolean)>(r1, r2, i0, z0);
        return;
    }

    protected void proxiedConnect(java.net.URL, java.lang.String, int, boolean) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;
        java.lang.String r2;
        int i0, $i1, $i2;
        boolean z0;
        sun.net.www.http.HttpClient $r3, $r4;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        z0 := @parameter3: boolean;
        $i1 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;
        $r3 = staticinvoke <sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.lang.String,int,boolean,int,sun.net.www.protocol.http.HttpURLConnection)>(r1, r2, i0, z0, $i1, r0);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = $r3;
        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i2 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;
        virtualinvoke $r4.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i2);
        return;
    }

    protected void <init>(java.net.URL, sun.net.www.protocol.http.Handler) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;
        sun.net.www.protocol.http.Handler r2;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: sun.net.www.protocol.http.Handler;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void <init>(java.net.URL,java.net.Proxy,sun.net.www.protocol.http.Handler)>(r1, null, r2);
        return;
    }

    public void <init>(java.net.URL, java.lang.String, int)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;
        java.lang.String r2;
        int i0;
        java.net.Proxy $r3;
        java.net.Proxy$Type $r4;
        java.net.InetSocketAddress $r5;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        $r3 = new java.net.Proxy;
        $r4 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;
        $r5 = staticinvoke <java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>(r2, i0);
        specialinvoke $r3.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r4, $r5);
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void <init>(java.net.URL,java.net.Proxy)>(r1, $r3);
        return;
    }

    public void <init>(java.net.URL, java.net.Proxy)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;
        java.net.Proxy r2;
        sun.net.www.protocol.http.Handler $r3;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.net.Proxy;
        $r3 = new sun.net.www.protocol.http.Handler;
        specialinvoke $r3.<sun.net.www.protocol.http.Handler: void <init>()>();
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void <init>(java.net.URL,java.net.Proxy,sun.net.www.protocol.http.Handler)>(r1, r2, $r3);
        return;
    }

    protected void <init>(java.net.URL, java.net.Proxy, sun.net.www.protocol.http.Handler)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;
        java.net.Proxy r2, $r9;
        sun.net.www.protocol.http.Handler r3;
        java.lang.SecurityException r4, $r11;
        sun.net.www.protocol.http.HttpURLConnection$TunnelState $r5;
        byte[] $r6;
        sun.net.www.MessageHeader $r7, $r8;
        boolean $z0;
        java.net.CookieHandler $r10, $r14;
        sun.net.www.protocol.http.HttpURLConnection$2 $r12;
        java.lang.Object $r13, $r16;
        sun.net.www.protocol.http.HttpURLConnection$3 $r15;
        java.net.ResponseCache $r17;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.net.Proxy;
        r3 := @parameter2: sun.net.www.protocol.http.Handler;
        specialinvoke r0.<java.net.HttpURLConnection: void <init>(java.net.URL)>(r1);
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.PrintStream ps> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream errorStream> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean setUserCookies> = 1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies2> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentProxyCredentials> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentServerCredentials> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean needToCheck> = 1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLM2ndStage> = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage> = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMServer> = 1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMProxy> = 1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean useProxyResponseCode> = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean setRequests> = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean failedOnce> = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Exception rememberedException> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient reuseClient> = null;
        $r5 = <sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState NONE>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$TunnelState tunnelState> = $r5;
        r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout> = -1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout> = -1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String requestURI> = null;
        $r6 = newarray (byte)[128];
        r0.<sun.net.www.protocol.http.HttpURLConnection: byte[] cdata> = $r6;
        $r7 = new sun.net.www.MessageHeader;
        specialinvoke $r7.<sun.net.www.MessageHeader: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests> = $r7;
        $r8 = new sun.net.www.MessageHeader;
        specialinvoke $r8.<sun.net.www.MessageHeader: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses> = $r8;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.Handler handler> = r3;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.Proxy instProxy> = r2;
        $r9 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.Proxy instProxy>;
        $z0 = $r9 instanceof sun.net.ApplicationProxy;
        if $z0 == 0 goto label3;

     label0:
        $r10 = staticinvoke <java.net.CookieHandler: java.net.CookieHandler getDefault()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CookieHandler cookieHandler> = $r10;

     label1:
        goto label4;

     label2:
        $r11 := @caughtexception;
        r4 = $r11;
        goto label4;

     label3:
        $r12 = new sun.net.www.protocol.http.HttpURLConnection$2;
        specialinvoke $r12.<sun.net.www.protocol.http.HttpURLConnection$2: void <init>(sun.net.www.protocol.http.HttpURLConnection)>(r0);
        $r13 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r12);
        $r14 = (java.net.CookieHandler) $r13;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CookieHandler cookieHandler> = $r14;

     label4:
        $r15 = new sun.net.www.protocol.http.HttpURLConnection$3;
        specialinvoke $r15.<sun.net.www.protocol.http.HttpURLConnection$3: void <init>(sun.net.www.protocol.http.HttpURLConnection)>(r0);
        $r16 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r15);
        $r17 = (java.net.ResponseCache) $r16;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.ResponseCache cacheHandler> = $r17;
        return;

        catch java.lang.SecurityException from label0 to label1 with label2;
    }

    public static void setDefaultAuthenticator(sun.net.www.protocol.http.HttpAuthenticator)
    {
        sun.net.www.protocol.http.HttpAuthenticator r0;

        r0 := @parameter0: sun.net.www.protocol.http.HttpAuthenticator;
        <sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpAuthenticator defaultAuth> = r0;
        return;
    }

    public static java.io.InputStream openConnectionCheckRedirects(java.net.URLConnection) throws java.io.IOException
    {
        java.net.URLConnection r0;
        int i0, i1, $i2, $i3;
        java.io.InputStream r1;
        boolean z0, $z1, $z2, $z3, $z4;
        sun.net.www.protocol.http.HttpURLConnection r2, $r6;
        java.net.URL r3, r5, $r7;
        java.lang.String r4, $r8, $r9;
        java.lang.SecurityException $r10;

        r0 := @parameter0: java.net.URLConnection;
        i0 = 0;

     label0:
        $z1 = r0 instanceof sun.net.www.protocol.http.HttpURLConnection;
        if $z1 == 0 goto label1;

        $r6 = (sun.net.www.protocol.http.HttpURLConnection) r0;
        virtualinvoke $r6.<sun.net.www.protocol.http.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0);

     label1:
        r1 = virtualinvoke r0.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        z0 = 0;
        $z2 = r0 instanceof sun.net.www.protocol.http.HttpURLConnection;
        if $z2 == 0 goto label5;

        r2 = (sun.net.www.protocol.http.HttpURLConnection) r0;
        i1 = virtualinvoke r2.<sun.net.www.protocol.http.HttpURLConnection: int getResponseCode()>();
        if i1 < 300 goto label5;

        if i1 > 307 goto label5;

        if i1 == 306 goto label5;

        if i1 == 304 goto label5;

        r3 = virtualinvoke r2.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL getURL()>();
        r4 = virtualinvoke r2.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");
        r5 = null;
        if r4 == null goto label2;

        $r7 = new java.net.URL;
        specialinvoke $r7.<java.net.URL: void <init>(java.net.URL,java.lang.String)>(r3, r4);
        r5 = $r7;

     label2:
        virtualinvoke r2.<sun.net.www.protocol.http.HttpURLConnection: void disconnect()>();
        if r5 == null goto label3;

        $r8 = virtualinvoke r3.<java.net.URL: java.lang.String getProtocol()>();
        $r9 = virtualinvoke r5.<java.net.URL: java.lang.String getProtocol()>();
        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        if $z3 == 0 goto label3;

        $i2 = virtualinvoke r3.<java.net.URL: int getPort()>();
        $i3 = virtualinvoke r5.<java.net.URL: int getPort()>();
        if $i2 != $i3 goto label3;

        $z4 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: boolean hostsEqual(java.net.URL,java.net.URL)>(r3, r5);
        if $z4 == 0 goto label3;

        if i0 < 5 goto label4;

     label3:
        $r10 = new java.lang.SecurityException;
        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>("illegal URL redirect");
        throw $r10;

     label4:
        z0 = 1;
        r0 = virtualinvoke r5.<java.net.URL: java.net.URLConnection openConnection()>();
        i0 = i0 + 1;

     label5:
        if z0 != 0 goto label0;

        return r1;
    }

    private static boolean hostsEqual(java.net.URL, java.net.URL)
    {
        java.net.URL r0, r1;
        java.lang.String r2, r3;
        boolean[] r4, $r5;
        boolean $z0, $z1, $z2;
        sun.net.www.protocol.http.HttpURLConnection$4 $r6;

        r0 := @parameter0: java.net.URL;
        r1 := @parameter1: java.net.URL;
        r2 = virtualinvoke r0.<java.net.URL: java.lang.String getHost()>();
        r3 = virtualinvoke r1.<java.net.URL: java.lang.String getHost()>();
        if r2 != null goto label2;

        if r3 != null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;

     label2:
        if r3 != null goto label3;

        return 0;

     label3:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);
        if $z1 == 0 goto label4;

        return 1;

     label4:
        $r5 = newarray (boolean)[1];
        $r5[0] = 0;
        r4 = $r5;
        $r6 = new sun.net.www.protocol.http.HttpURLConnection$4;
        specialinvoke $r6.<sun.net.www.protocol.http.HttpURLConnection$4: void <init>(java.lang.String,java.lang.String,boolean[])>(r2, r3, r4);
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r6);
        $z2 = r4[0];
        return $z2;
    }

    public void connect() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void plainConnect()>();
        return;
    }

    private boolean checkReuseConnection()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        boolean $z0;
        sun.net.www.http.HttpClient $r1, $r2, $r3, $r4;
        int $i0;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $z0 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected>;
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient reuseClient>;
        if $r1 == null goto label1;

        $r2 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient reuseClient>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = $r2;
        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i0 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: int getReadTimeout()>();
        virtualinvoke $r3.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i0);
        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r4.<sun.net.www.http.HttpClient: boolean reuse> = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient reuseClient> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected> = 1;
        return 1;

     label1:
        return 0;
    }

    protected void plainConnect() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URI r1, r3;
        java.lang.String[] $r2;
        java.util.Iterator r4;
        java.net.Proxy r5, $r44, $r71, $r83, $r87;
        java.io.IOException r6, $r40, r41, $r70, $r93, r94;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.net.ResponseCache $r7, $r9;
        java.net.URL $r8, $r48, $r57, $r60, $r73, $r76, $r79, $r82, $r86;
        java.lang.String $r10, $r14, $r15, $r23, $r25, $r31, $r33, $r54, $r67, $r69;
        sun.net.www.MessageHeader $r11, $r37, $r42;
        java.util.Map $r12, $r36;
        java.net.CacheResponse $r13, $r16, $r29, $r30, $r34, $r35, $r38;
        sun.util.logging.PlatformLogger $r17, $r18, $r26, $r49, $r50, $r63, $r64;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r24, $r27, $r28, $r32, $r51, $r52, $r53, $r65, $r66, $r68;
        java.io.InputStream $r39, $r43;
        sun.net.www.protocol.http.HttpURLConnection$5 $r45;
        java.lang.Object $r46, $r56;
        java.net.ProxySelector r47;
        java.util.List $r55;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        sun.net.www.http.HttpClient $r58, $r59, $r61, $r62, $r74, $r75, $r77, $r78, $r80, $r81, $r84, $r85, $r88, $r89, $r90;
        java.net.SocketAddress $r72;
        java.io.OutputStream $r91;
        java.io.PrintStream $r92;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $z0 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r7 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.ResponseCache cacheHandler>;
        if $r7 == null goto label10;

        $z1 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean getUseCaches()>();
        if $z1 == 0 goto label10;

     label1:
        $r8 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        r1 = staticinvoke <sun.net.www.ParseUtil: java.net.URI toURI(java.net.URL)>($r8);
        if r1 == null goto label6;

        $r9 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.ResponseCache cacheHandler>;
        $r10 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getRequestMethod()>();
        $r11 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r2 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] EXCLUDE_HEADERS>;
        $r12 = virtualinvoke $r11.<sun.net.www.MessageHeader: java.util.Map getHeaders(java.lang.String[])>($r2);
        $r13 = virtualinvoke $r9.<java.net.ResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)>(r1, $r10, $r12);
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CacheResponse cachedResponse> = $r13;
        $r14 = "https";
        $r15 = virtualinvoke r1.<java.net.URI: java.lang.String getScheme()>();
        $z2 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r15);
        if $z2 == 0 goto label2;

        $r16 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CacheResponse cachedResponse>;
        $z3 = $r16 instanceof java.net.SecureCacheResponse;
        if $z3 != 0 goto label2;

        r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CacheResponse cachedResponse> = null;

     label2:
        $r17 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z4 = virtualinvoke $r17.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(300);
        if $z4 == 0 goto label5;

        $r18 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cache Request for ");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");
        $r23 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getRequestMethod()>();
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r18.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>($r25);
        $r26 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("From cache: ");
        $r29 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CacheResponse cachedResponse>;
        if $r29 == null goto label3;

        $r30 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CacheResponse cachedResponse>;
        $r31 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();
        goto label4;

     label3:
        $r31 = "null";

     label4:
        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r26.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>($r33);

     label5:
        $r34 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CacheResponse cachedResponse>;
        if $r34 == null goto label6;

        $r35 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CacheResponse cachedResponse>;
        $r36 = virtualinvoke $r35.<java.net.CacheResponse: java.util.Map getHeaders()>();
        $r37 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader mapToMessageHeader(java.util.Map)>($r36);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders> = $r37;
        $r38 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CacheResponse cachedResponse>;
        $r39 = virtualinvoke $r38.<java.net.CacheResponse: java.io.InputStream getBody()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream cachedInputStream> = $r39;

     label6:
        goto label8;

     label7:
        $r40 := @caughtexception;
        r41 = $r40;

     label8:
        $r42 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        if $r42 == null goto label9;

        $r43 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream cachedInputStream>;
        if $r43 == null goto label9;

        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected> = 1;
        return;

     label9:
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CacheResponse cachedResponse> = null;

     label10:
        $r44 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.Proxy instProxy>;
        if $r44 != null goto label24;

        $r45 = new sun.net.www.protocol.http.HttpURLConnection$5;
        specialinvoke $r45.<sun.net.www.protocol.http.HttpURLConnection$5: void <init>(sun.net.www.protocol.http.HttpURLConnection)>(r0);
        $r46 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r45);
        r47 = (java.net.ProxySelector) $r46;
        if r47 == null goto label21;

        $r48 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        r3 = staticinvoke <sun.net.www.ParseUtil: java.net.URI toURI(java.net.URL)>($r48);
        $r49 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z5 = virtualinvoke $r49.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(300);
        if $z5 == 0 goto label11;

        $r50 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r51 = new java.lang.StringBuilder;
        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ProxySelector Request for ");
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r50.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>($r54);

     label11:
        $r55 = virtualinvoke r47.<java.net.ProxySelector: java.util.List select(java.net.URI)>(r3);
        r4 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z6 == 0 goto label20;

        $r56 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.net.Proxy) $r56;

     label13:
        $z7 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean failedOnce>;
        if $z7 != 0 goto label14;

        $r57 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $i0 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;
        $r58 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient getNewHttpClient(java.net.URL,java.net.Proxy,int)>($r57, r5, $i0);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = $r58;
        $r59 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i1 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;
        virtualinvoke $r59.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i1);
        goto label15;

     label14:
        $r60 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $i2 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;
        $r61 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient getNewHttpClient(java.net.URL,java.net.Proxy,int,boolean)>($r60, r5, $i2, 0);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = $r61;
        $r62 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i3 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;
        virtualinvoke $r62.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i3);

     label15:
        $r63 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z8 = virtualinvoke $r63.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(300);
        if $z8 == 0 goto label16;

        if r5 == null goto label16;

        $r64 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r65 = new java.lang.StringBuilder;
        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy used: ");
        $r67 = virtualinvoke r5.<java.net.Proxy: java.lang.String toString()>();
        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r64.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>($r69);

     label16:
        goto label20;

     label17:
        $r70 := @caughtexception;
        r6 = $r70;
        $r71 = <java.net.Proxy: java.net.Proxy NO_PROXY>;
        if r5 == $r71 goto label18;

        $r72 = virtualinvoke r5.<java.net.Proxy: java.net.SocketAddress address()>();
        virtualinvoke r47.<java.net.ProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)>(r3, $r72, r6);
        $z9 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z9 != 0 goto label19;

        $r73 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $i4 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;
        $r74 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient getNewHttpClient(java.net.URL,java.net.Proxy,int,boolean)>($r73, null, $i4, 0);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = $r74;
        $r75 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i5 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;
        virtualinvoke $r75.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i5);
        goto label20;

     label18:
        throw r6;

     label19:
        goto label12;

     label20:
        goto label23;

     label21:
        $z10 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean failedOnce>;
        if $z10 != 0 goto label22;

        $r76 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $i6 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;
        $r77 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient getNewHttpClient(java.net.URL,java.net.Proxy,int)>($r76, null, $i6);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = $r77;
        $r78 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i7 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;
        virtualinvoke $r78.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i7);
        goto label23;

     label22:
        $r79 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $i8 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;
        $r80 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient getNewHttpClient(java.net.URL,java.net.Proxy,int,boolean)>($r79, null, $i8, 0);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = $r80;
        $r81 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i9 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;
        virtualinvoke $r81.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i9);

     label23:
        goto label26;

     label24:
        $z11 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean failedOnce>;
        if $z11 != 0 goto label25;

        $r82 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r83 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.Proxy instProxy>;
        $i10 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;
        $r84 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient getNewHttpClient(java.net.URL,java.net.Proxy,int)>($r82, $r83, $i10);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = $r84;
        $r85 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i11 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;
        virtualinvoke $r85.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i11);
        goto label26;

     label25:
        $r86 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r87 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.Proxy instProxy>;
        $i12 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;
        $r88 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient getNewHttpClient(java.net.URL,java.net.Proxy,int,boolean)>($r86, $r87, $i12, 0);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = $r88;
        $r89 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i13 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;
        virtualinvoke $r89.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i13);

     label26:
        $r90 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r91 = virtualinvoke $r90.<sun.net.www.http.HttpClient: java.io.OutputStream getOutputStream()>();
        $r92 = (java.io.PrintStream) $r91;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.PrintStream ps> = $r92;

     label27:
        goto label29;

     label28:
        $r93 := @caughtexception;
        r94 = $r93;
        throw r94;

     label29:
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected> = 1;
        return;

        catch java.io.IOException from label1 to label6 with label7;
        catch java.io.IOException from label13 to label16 with label17;
        catch java.io.IOException from label10 to label27 with label28;
    }

    protected sun.net.www.http.HttpClient getNewHttpClient(java.net.URL, java.net.Proxy, int) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;
        java.net.Proxy r2;
        int i0;
        sun.net.www.http.HttpClient $r3;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.net.Proxy;
        i0 := @parameter2: int;
        $r3 = staticinvoke <sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.net.Proxy,int,sun.net.www.protocol.http.HttpURLConnection)>(r1, r2, i0, r0);
        return $r3;
    }

    protected sun.net.www.http.HttpClient getNewHttpClient(java.net.URL, java.net.Proxy, int, boolean) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.URL r1;
        java.net.Proxy r2;
        int i0;
        boolean z0;
        sun.net.www.http.HttpClient $r3;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.net.Proxy;
        i0 := @parameter2: int;
        z0 := @parameter3: boolean;
        $r3 = staticinvoke <sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.net.Proxy,int,boolean,sun.net.www.protocol.http.HttpURLConnection)>(r1, r2, i0, z0, r0);
        return $r3;
    }

    private void expect100Continue() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int i0, $i1, $i2, $i3;
        boolean z0, z1, $z3;
        java.net.SocketTimeoutException r1, $r9;
        java.lang.String[] r2;
        java.lang.NumberFormatException r3, $r14;
        sun.net.www.http.HttpClient $r4, $r5, $r6, $r10, $r16;
        sun.net.www.MessageHeader $r7, $r11, $r17;
        sun.net.ProgressSource $r8;
        java.lang.String r12, $r13;
        java.net.ProtocolException $r15;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        i0 = virtualinvoke $r4.<sun.net.www.http.HttpClient: int getReadTimeout()>();
        z0 = 0;
        z1 = 0;
        if i0 > 0 goto label0;

        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        virtualinvoke $r5.<sun.net.www.http.HttpClient: void setReadTimeout(int)>(5000);
        z0 = 1;

     label0:
        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r7 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r8 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi>;
        virtualinvoke $r6.<sun.net.www.http.HttpClient: boolean parseHTTP(sun.net.www.MessageHeader,sun.net.ProgressSource,sun.net.www.protocol.http.HttpURLConnection)>($r7, $r8, r0);

     label1:
        goto label4;

     label2:
        $r9 := @caughtexception;
        r1 = $r9;
        if z0 != 0 goto label3;

        throw r1;

     label3:
        z1 = 1;
        $r10 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        virtualinvoke $r10.<sun.net.www.http.HttpClient: void setIgnoreContinue(boolean)>(1);

     label4:
        if z1 != 0 goto label9;

        $r11 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r12 = virtualinvoke $r11.<sun.net.www.MessageHeader: java.lang.String getValue(int)>(0);
        if r12 == null goto label8;

        $z3 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("HTTP/");
        if $z3 == 0 goto label8;

        r2 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");
        r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode> = -1;

     label5:
        $i1 = lengthof r2;
        if $i1 <= 1 goto label6;

        $r13 = r2[1];
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);
        r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode> = $i2;

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;
        r3 = $r14;

     label8:
        $i3 = r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode>;
        if $i3 == 100 goto label9;

        $r15 = new java.net.ProtocolException;
        specialinvoke $r15.<java.net.ProtocolException: void <init>(java.lang.String)>("Server rejected operation");
        throw $r15;

     label9:
        $r16 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        virtualinvoke $r16.<sun.net.www.http.HttpClient: void setReadTimeout(int)>(i0);
        r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode> = -1;
        $r17 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        virtualinvoke $r17.<sun.net.www.MessageHeader: void reset()>();
        return;

        catch java.net.SocketTimeoutException from label0 to label1 with label2;
        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }

    public synchronized java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.String r1, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r15, $r18, $r22;
        sun.net.www.http.ChunkedOutputStream $r2;
        long l0, $l3;
        java.net.ProtocolException $r3, $r12, $r20, $r39, r40;
        java.net.URL $r10;
        java.lang.StringBuilder $r13, $r14, $r16, $r17;
        java.io.InputStream $r19;
        sun.net.www.MessageHeader $r21;
        sun.net.www.http.HttpClient $r23, $r25;
        sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream $r24, $r28, $r29, $r31, $r33;
        java.io.OutputStream $r26;
        java.io.PrintStream $r27, $r30, $r32;
        int $i1, $i2, $i5, $i6, i7;
        byte $b4;
        sun.net.www.http.PosterOutputStream $r34, $r35, $r36;
        java.lang.RuntimeException $r37, r38;
        java.io.IOException $r41, r42;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;

     label0:
        $z1 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doOutput>;
        if $z1 != 0 goto label1;

        $r3 = new java.net.ProtocolException;
        specialinvoke $r3.<java.net.ProtocolException: void <init>(java.lang.String)>("cannot write to a URLConnection if doOutput=false - call setDoOutput(true)");
        throw $r3;

     label1:
        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("GET");
        if $z2 == 0 goto label2;

        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method> = "POST";

     label2:
        $r5 = "POST";
        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z3 != 0 goto label3;

        $r7 = "PUT";
        $r8 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        if $z4 != 0 goto label3;

        $r9 = "http";
        $r10 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r11 = virtualinvoke $r10.<java.net.URL: java.lang.String getProtocol()>();
        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11);
        if $z5 == 0 goto label3;

        $r12 = new java.net.ProtocolException;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP method ");
        $r15 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t support output");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r12.<java.net.ProtocolException: void <init>(java.lang.String)>($r18);
        throw $r12;

     label3:
        $r19 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        if $r19 == null goto label4;

        $r20 = new java.net.ProtocolException;
        specialinvoke $r20.<java.net.ProtocolException: void <init>(java.lang.String)>("Cannot write output after reading input.");
        throw $r20;

     label4:
        $z6 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean checkReuseConnection()>();
        if $z6 != 0 goto label5;

        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void connect()>();

     label5:
        z0 = 0;
        $r21 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        r1 = virtualinvoke $r21.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("Expect");
        $r22 = "100-Continue";
        $z7 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z7 == 0 goto label6;

        $r23 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        virtualinvoke $r23.<sun.net.www.http.HttpClient: void setIgnoreContinue(boolean)>(0);
        z0 = 1;

     label6:
        $z8 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>();
        if $z8 == 0 goto label7;

        $r24 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream strOutputStream>;
        if $r24 != null goto label7;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void writeRequests()>();

     label7:
        if z0 == 0 goto label8;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void expect100Continue()>();

     label8:
        $r25 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r26 = virtualinvoke $r25.<sun.net.www.http.HttpClient: java.io.OutputStream getOutputStream()>();
        $r27 = (java.io.PrintStream) $r26;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.PrintStream ps> = $r27;
        $z9 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>();
        if $z9 == 0 goto label14;

        $r28 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream strOutputStream>;
        if $r28 != null goto label12;

        $i1 = r0.<sun.net.www.protocol.http.HttpURLConnection: int chunkLength>;
        if $i1 == -1 goto label9;

        $r29 = new sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream;
        $r2 = new sun.net.www.http.ChunkedOutputStream;
        $r30 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.PrintStream ps>;
        $i2 = r0.<sun.net.www.protocol.http.HttpURLConnection: int chunkLength>;
        specialinvoke $r2.<sun.net.www.http.ChunkedOutputStream: void <init>(java.io.PrintStream,int)>($r30, $i2);
        specialinvoke $r29.<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.io.OutputStream,long)>(r0, $r2, -1L);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream strOutputStream> = $r29;
        goto label12;

     label9:
        l0 = 0L;
        $l3 = r0.<sun.net.www.protocol.http.HttpURLConnection: long fixedContentLengthLong>;
        $b4 = $l3 cmp -1L;
        if $b4 == 0 goto label10;

        l0 = r0.<sun.net.www.protocol.http.HttpURLConnection: long fixedContentLengthLong>;
        goto label11;

     label10:
        $i5 = r0.<sun.net.www.protocol.http.HttpURLConnection: int fixedContentLength>;
        if $i5 == -1 goto label11;

        $i6 = r0.<sun.net.www.protocol.http.HttpURLConnection: int fixedContentLength>;
        l0 = (long) $i6;

     label11:
        $r31 = new sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream;
        $r32 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.PrintStream ps>;
        specialinvoke $r31.<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.io.OutputStream,long)>(r0, $r32, l0);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream strOutputStream> = $r31;

     label12:
        $r33 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream strOutputStream>;

     label13:
        return $r33;

     label14:
        $r34 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster>;
        if $r34 != null goto label15;

        $r35 = new sun.net.www.http.PosterOutputStream;
        specialinvoke $r35.<sun.net.www.http.PosterOutputStream: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster> = $r35;

     label15:
        $r36 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster>;

     label16:
        return $r36;

     label17:
        $r37 := @caughtexception;
        r38 = $r37;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        throw r38;

     label18:
        $r39 := @caughtexception;
        r40 = $r39;
        i7 = r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode>;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode> = i7;
        throw r40;

     label19:
        $r41 := @caughtexception;
        r42 = $r41;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        throw r42;

        catch java.lang.RuntimeException from label0 to label13 with label17;
        catch java.lang.RuntimeException from label14 to label16 with label17;
        catch java.net.ProtocolException from label0 to label13 with label18;
        catch java.net.ProtocolException from label14 to label16 with label18;
        catch java.io.IOException from label0 to label13 with label19;
        catch java.io.IOException from label14 to label16 with label19;
    }

    public boolean streaming()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int $i0, $i3;
        long $l1;
        byte $b2;
        boolean $z0;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $i0 = r0.<sun.net.www.protocol.http.HttpURLConnection: int fixedContentLength>;
        if $i0 != -1 goto label0;

        $l1 = r0.<sun.net.www.protocol.http.HttpURLConnection: long fixedContentLengthLong>;
        $b2 = $l1 cmp -1L;
        if $b2 != 0 goto label0;

        $i3 = r0.<sun.net.www.protocol.http.HttpURLConnection: int chunkLength>;
        if $i3 == -1 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void setCookieHeader() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0, r1;
        int i0, i1, $i2, $i3, $i4, i5, $i6, i7;
        java.lang.Throwable r2, $r18;
        java.lang.String[] $r3;
        java.util.Map$Entry r4;
        java.lang.String r5, r9, $r14, $r17, $r28, $r37, $r39, $r44, $r45, $r52, $r55, $r60, $r63, $r65, $r67, $r68, $r73, $r76, $r78, $r80;
        java.util.List r6;
        java.lang.StringBuilder r7, $r25, $r26, $r27, $r35, $r36, $r38, $r47, $r49, $r58, $r61, $r62, $r64, $r71, $r74, $r75, $r77;
        java.util.Iterator r8, r41;
        java.net.CookieHandler $r10, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        sun.net.www.MessageHeader $r12, $r13, $r15, $r16, $r19, $r20, $r30, $r51, $r56, $r57, $r59, $r66, $r69, $r70, $r72, $r79;
        java.net.URL $r21;
        java.net.URI r22;
        sun.util.logging.PlatformLogger $r23, $r24, $r33, $r34;
        java.util.Map $r31, r32;
        java.util.Set $r40;
        java.lang.Object $r42, $r43, $r46, $r48;
        java.lang.StringIndexOutOfBoundsException $r53, r54;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r10 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CookieHandler cookieHandler>;
        if $r10 == null goto label22;

        r1 = r0;
        entermonitor r0;

     label0:
        $z0 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean setUserCookies>;
        if $z0 == 0 goto label3;

        $r12 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        i0 = virtualinvoke $r12.<sun.net.www.MessageHeader: int getKey(java.lang.String)>("Cookie");
        if i0 == -1 goto label1;

        $r13 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r14 = virtualinvoke $r13.<sun.net.www.MessageHeader: java.lang.String getValue(int)>(i0);
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies> = $r14;

     label1:
        $r15 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        i1 = virtualinvoke $r15.<sun.net.www.MessageHeader: int getKey(java.lang.String)>("Cookie2");
        if i1 == -1 goto label2;

        $r16 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r17 = virtualinvoke $r16.<sun.net.www.MessageHeader: java.lang.String getValue(int)>(i1);
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies2> = $r17;

     label2:
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean setUserCookies> = 0;

     label3:
        exitmonitor r1;

     label4:
        goto label8;

     label5:
        $r18 := @caughtexception;

     label6:
        r2 = $r18;
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        $r19 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r19.<sun.net.www.MessageHeader: void remove(java.lang.String)>("Cookie");
        $r20 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r20.<sun.net.www.MessageHeader: void remove(java.lang.String)>("Cookie2");
        $r21 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        r22 = staticinvoke <sun.net.www.ParseUtil: java.net.URI toURI(java.net.URL)>($r21);
        if r22 == null goto label18;

        $r23 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z1 = virtualinvoke $r23.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(300);
        if $z1 == 0 goto label9;

        $r24 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CookieHandler request for ");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r24.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>($r28);

     label9:
        $r29 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CookieHandler cookieHandler>;
        $r30 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r3 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] EXCLUDE_HEADERS>;
        $r31 = virtualinvoke $r30.<sun.net.www.MessageHeader: java.util.Map getHeaders(java.lang.String[])>($r3);
        r32 = virtualinvoke $r29.<java.net.CookieHandler: java.util.Map get(java.net.URI,java.util.Map)>(r22, $r31);
        $z2 = interfaceinvoke r32.<java.util.Map: boolean isEmpty()>();
        if $z2 != 0 goto label18;

        $r33 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z3 = virtualinvoke $r33.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(300);
        if $z3 == 0 goto label10;

        $r34 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r35 = new java.lang.StringBuilder;
        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cookies retrieved: ");
        $r37 = virtualinvoke r32.<java.lang.Object: java.lang.String toString()>();
        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r34.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>($r39);

     label10:
        $r40 = interfaceinvoke r32.<java.util.Map: java.util.Set entrySet()>();
        r41 = interfaceinvoke $r40.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z4 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();
        if $z4 == 0 goto label18;

        $r42 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r42;
        $r43 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        r5 = (java.lang.String) $r43;
        $r44 = "Cookie";
        $z5 = virtualinvoke $r44.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);
        if $z5 != 0 goto label12;

        $r45 = "Cookie2";
        $z6 = virtualinvoke $r45.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);
        if $z6 != 0 goto label12;

        goto label11;

     label12:
        $r46 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        r6 = (java.util.List) $r46;
        if r6 == null goto label17;

        $z7 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();
        if $z7 != 0 goto label17;

        $r47 = new java.lang.StringBuilder;
        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
        r7 = $r47;
        r8 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z8 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
        if $z8 == 0 goto label14;

        $r48 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
        r9 = (java.lang.String) $r48;
        $r49 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");
        goto label13;

     label14:
        $r51 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $i2 = virtualinvoke r7.<java.lang.StringBuilder: int length()>();
        $i3 = $i2 - 2;
        $r52 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, $i3);
        virtualinvoke $r51.<sun.net.www.MessageHeader: void add(java.lang.String,java.lang.String)>(r5, $r52);

     label15:
        goto label17;

     label16:
        $r53 := @caughtexception;
        r54 = $r53;

     label17:
        goto label11;

     label18:
        $r55 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies>;
        if $r55 == null goto label20;

        $r56 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $i4 = virtualinvoke $r56.<sun.net.www.MessageHeader: int getKey(java.lang.String)>("Cookie");
        i5 = $i4;
        if $i4 == -1 goto label19;

        $r57 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r58 = new java.lang.StringBuilder;
        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
        $r59 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r60 = virtualinvoke $r59.<sun.net.www.MessageHeader: java.lang.String getValue(int)>(i5);
        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r63 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies>;
        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r57.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("Cookie", $r65);
        goto label20;

     label19:
        $r66 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r67 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies>;
        virtualinvoke $r66.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("Cookie", $r67);

     label20:
        $r68 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies2>;
        if $r68 == null goto label22;

        $r69 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $i6 = virtualinvoke $r69.<sun.net.www.MessageHeader: int getKey(java.lang.String)>("Cookie2");
        i7 = $i6;
        if $i6 == -1 goto label21;

        $r70 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r71 = new java.lang.StringBuilder;
        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();
        $r72 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r73 = virtualinvoke $r72.<sun.net.www.MessageHeader: java.lang.String getValue(int)>(i7);
        $r74 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);
        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r76 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies2>;
        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);
        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r70.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("Cookie2", $r78);
        goto label22;

     label21:
        $r79 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r80 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies2>;
        virtualinvoke $r79.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("Cookie2", $r80);

     label22:
        return;

        catch java.lang.Throwable from label0 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.StringIndexOutOfBoundsException from label14 to label15 with label16;
    }

    public synchronized java.io.InputStream getInputStream() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int i0, $i2, $i3, i4, $i5, $i6, $i7, $i9;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46;
        long l1;
        sun.net.www.protocol.http.AuthenticationInfo r1, r2;
        sun.net.www.protocol.http.AuthenticationHeader r3, $r67, r74, $r87;
        java.io.InputStream r4, $r20, $r21, $r31, $r61, $r149, $r150, $r152, r165, $r184, $r186;
        java.util.Iterator r5, r83;
        java.lang.String r6, r7, r8, $r32, $r33, $r34, $r35, $r38, $r41, $r52, $r59, $r66, $r72, $r85, r86, r91, $r95, $r97, $r98, $r100, $r102, r103, r104, $r109, r111, $r123, $r126, $r135, $r136, $r155, $r162, $r164, $r166, $r167, $r168, $r169, $r175, r181, $r188, $r189, $r190, $r191;
        java.net.URL r9, $r37, $r40, $r70, $r90, $r96, $r101, $r114, $r115, $r132, $r154, $r161;
        sun.net.www.protocol.http.DigestAuthentication r10, r107, $r116;
        java.lang.Throwable r11, $r187;
        java.net.ProtocolException $r12, $r170;
        java.lang.Exception $r13, $r14, $r16, $r17, $r118, r119, $r124, r125;
        java.lang.RuntimeException $r15, $r176, r177;
        java.io.IOException $r18, $r19, $r26, $r62, $r77, $r79, $r99, $r156, $r178, r179;
        sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream $r22, $r24, $r25;
        sun.net.www.MessageHeader $r28, $r30, $r47, $r51, $r53, $r54, $r58, $r64, $r68, $r75, $r80, $r82, $r88, $r94, $r120, $r121, $r122, $r180;
        sun.net.ProgressMonitor $r36;
        sun.net.ProgressSource $r39, $r42, $r48, $r127, $r128;
        sun.net.www.http.HttpClient $r43, $r46, $r60, $r71, $r73, $r129, $r146, $r147, $r182, $r183, $r185;
        java.io.OutputStream $r44;
        java.io.PrintStream $r45;
        sun.util.logging.PlatformLogger $r49, $r50, $r55, $r56, $r57;
        java.net.HttpRetryException $r63, $r81;
        java.lang.Object $r65, $r84, $r105, $r139;
        sun.net.www.protocol.http.HttpCallerInfo $r69, $r89;
        sun.net.www.HeaderParser $r76, $r78;
        sun.net.www.protocol.http.AuthScheme $r92, $r93;
        sun.net.www.protocol.http.BasicAuthentication r106;
        java.util.StringTokenizer $r108, r110;
        java.net.PasswordAuthentication r112;
        sun.net.www.protocol.http.DigestAuthentication$Parameters $r113, $r117;
        byte $b8, $b10;
        sun.net.www.protocol.http.EmptyInputStream $r130;
        java.net.ResponseCache $r131, $r144;
        java.net.URI r133;
        java.net.URLConnection r134;
        java.lang.Class $r137;
        java.lang.reflect.Field $r138;
        java.lang.IllegalAccessException $r140, r141;
        java.lang.NoSuchFieldException $r142, r143;
        java.net.CacheRequest r145;
        sun.net.www.protocol.http.HttpURLConnection$HttpInputStream $r148, $r151;
        java.io.FileNotFoundException $r153;
        java.lang.StringBuilder $r157, $r158, $r159, $r160, $r163, $r171, $r172, $r173, $r174;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $z6 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doInput>;
        if $z6 != 0 goto label0;

        $r12 = new java.net.ProtocolException;
        specialinvoke $r12.<java.net.ProtocolException: void <init>(java.lang.String)>("Cannot read from URLConnection if doInput=false (call setDoInput(true))");
        throw $r12;

     label0:
        $r13 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Exception rememberedException>;
        if $r13 == null goto label2;

        $r14 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Exception rememberedException>;
        $z7 = $r14 instanceof java.lang.RuntimeException;
        if $z7 == 0 goto label1;

        $r15 = new java.lang.RuntimeException;
        $r16 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Exception rememberedException>;
        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16);
        throw $r15;

     label1:
        $r17 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Exception rememberedException>;
        $r18 = (java.io.IOException) $r17;
        $r19 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.IOException getChainedException(java.io.IOException)>($r18);
        throw $r19;

     label2:
        $r20 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        if $r20 == null goto label3;

        $r21 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        return $r21;

     label3:
        $z8 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>();
        if $z8 == 0 goto label5;

        $r22 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream strOutputStream>;
        if $r22 != null goto label4;

        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.OutputStream getOutputStream()>();

     label4:
        $r24 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream strOutputStream>;
        virtualinvoke $r24.<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: void close()>();
        $r25 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream strOutputStream>;
        $z9 = virtualinvoke $r25.<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: boolean writtenOK()>();
        if $z9 != 0 goto label5;

        $r26 = new java.io.IOException;
        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>("Incomplete output stream");
        throw $r26;

     label5:
        i0 = 0;
        z0 = 0;
        l1 = -1L;
        r1 = null;
        r2 = null;
        r3 = null;
        z1 = 0;
        z2 = 0;
        $r28 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $i2 = virtualinvoke $r28.<sun.net.www.MessageHeader: int getKey(java.lang.String)>("Authorization");
        if $i2 == -1 goto label6;

        $z10 = 1;
        goto label7;

     label6:
        $z10 = 0;

     label7:
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean isUserServerAuth> = $z10;
        $r30 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $i3 = virtualinvoke $r30.<sun.net.www.MessageHeader: int getKey(java.lang.String)>("Proxy-Authorization");
        if $i3 == -1 goto label8;

        $z11 = 1;
        goto label9;

     label8:
        $z11 = 0;

     label9:
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean isUserProxyAuth> = $z11;

     label10:
        $z12 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean checkReuseConnection()>();
        if $z12 != 0 goto label11;

        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void connect()>();

     label11:
        $r31 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream cachedInputStream>;
        if $r31 == null goto label15;

        r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream cachedInputStream>;

     label12:
        $r32 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        if $r32 == null goto label13;

        $r33 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>($r33);

     label13:
        $r34 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String serverAuthKey>;
        if $r34 == null goto label14;

        $r35 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String serverAuthKey>;
        staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>($r35);

     label14:
        return r4;

     label15:
        $r36 = staticinvoke <sun.net.ProgressMonitor: sun.net.ProgressMonitor getDefault()>();
        $r37 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r38 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        z13 = virtualinvoke $r36.<sun.net.ProgressMonitor: boolean shouldMeterInput(java.net.URL,java.lang.String)>($r37, $r38);
        if z13 == 0 goto label16;

        $r39 = new sun.net.ProgressSource;
        $r40 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r41 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        specialinvoke $r39.<sun.net.ProgressSource: void <init>(java.net.URL,java.lang.String)>($r40, $r41);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi> = $r39;
        $r42 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi>;
        virtualinvoke $r42.<sun.net.ProgressSource: void beginTracking()>();

     label16:
        $r43 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r44 = virtualinvoke $r43.<sun.net.www.http.HttpClient: java.io.OutputStream getOutputStream()>();
        $r45 = (java.io.PrintStream) $r44;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.PrintStream ps> = $r45;
        $z14 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>();
        if $z14 != 0 goto label17;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void writeRequests()>();

     label17:
        $r46 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r47 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r48 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi>;
        virtualinvoke $r46.<sun.net.www.http.HttpClient: boolean parseHTTP(sun.net.www.MessageHeader,sun.net.ProgressSource,sun.net.www.protocol.http.HttpURLConnection)>($r47, $r48, r0);
        $r49 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z16 = virtualinvoke $r49.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(500);
        if $z16 == 0 goto label18;

        $r50 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r51 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r52 = virtualinvoke $r51.<sun.net.www.MessageHeader: java.lang.String toString()>();
        virtualinvoke $r50.<sun.util.logging.PlatformLogger: void fine(java.lang.String)>($r52);

     label18:
        $r53 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        z3 = virtualinvoke $r53.<sun.net.www.MessageHeader: boolean filterNTLMResponses(java.lang.String)>("WWW-Authenticate");
        $r54 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        z4 = virtualinvoke $r54.<sun.net.www.MessageHeader: boolean filterNTLMResponses(java.lang.String)>("Proxy-Authenticate");
        if z3 != 0 goto label19;

        if z4 == 0 goto label20;

     label19:
        $r55 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z17 = virtualinvoke $r55.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(500);
        if $z17 == 0 goto label20;

        $r56 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        virtualinvoke $r56.<sun.util.logging.PlatformLogger: void fine(java.lang.String)>(">>>> Headers are filtered");
        $r57 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r58 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r59 = virtualinvoke $r58.<sun.net.www.MessageHeader: java.lang.String toString()>();
        virtualinvoke $r57.<sun.util.logging.PlatformLogger: void fine(java.lang.String)>($r59);

     label20:
        $r60 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r61 = virtualinvoke $r60.<sun.net.www.http.HttpClient: java.io.InputStream getInputStream()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream> = $r61;
        i4 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: int getResponseCode()>();
        if i4 != -1 goto label21;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        $r62 = new java.io.IOException;
        specialinvoke $r62.<java.io.IOException: void <init>(java.lang.String)>("Invalid Http response");
        throw $r62;

     label21:
        if i4 != 407 goto label32;

        $z18 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>();
        if $z18 == 0 goto label22;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        $r63 = new java.net.HttpRetryException;
        specialinvoke $r63.<java.net.HttpRetryException: void <init>(java.lang.String,int)>("cannot retry due to proxy authentication, in streaming mode", 407);
        throw $r63;

     label22:
        z5 = 0;
        $r64 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r5 = virtualinvoke $r64.<sun.net.www.MessageHeader: java.util.Iterator multiValueIterator(java.lang.String)>("Proxy-Authenticate");

     label23:
        $z19 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z19 == 0 goto label27;

        $r65 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        $r66 = (java.lang.String) $r65;
        r6 = virtualinvoke $r66.<java.lang.String: java.lang.String trim()>();
        $z20 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Negotiate");
        if $z20 != 0 goto label24;

        $z21 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Kerberos");
        if $z21 == 0 goto label26;

     label24:
        if z2 != 0 goto label25;

        z2 = 1;
        goto label27;

     label25:
        z5 = 1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage> = 0;
        r2 = null;
        goto label27;

     label26:
        goto label23;

     label27:
        $r67 = new sun.net.www.protocol.http.AuthenticationHeader;
        $r68 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r69 = new sun.net.www.protocol.http.HttpCallerInfo;
        $r70 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r71 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r72 = virtualinvoke $r71.<sun.net.www.http.HttpClient: java.lang.String getProxyHostUsed()>();
        $r73 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i5 = virtualinvoke $r73.<sun.net.www.http.HttpClient: int getProxyPortUsed()>();
        specialinvoke $r69.<sun.net.www.protocol.http.HttpCallerInfo: void <init>(java.net.URL,java.lang.String,int)>($r70, $r72, $i5);
        specialinvoke $r67.<sun.net.www.protocol.http.AuthenticationHeader: void <init>(java.lang.String,sun.net.www.MessageHeader,sun.net.www.protocol.http.HttpCallerInfo,boolean)>("Proxy-Authenticate", $r68, $r69, z5);
        r74 = $r67;
        $z22 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage>;
        if $z22 != 0 goto label28;

        r2 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo resetProxyAuthentication(sun.net.www.protocol.http.AuthenticationInfo,sun.net.www.protocol.http.AuthenticationHeader)>(r2, r74);
        if r2 == null goto label31;

        i0 = i0 + 1;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        goto label82;

     label28:
        $r75 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r7 = virtualinvoke $r75.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("Proxy-Authenticate");
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void reset()>();
        $r76 = virtualinvoke r74.<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.HeaderParser headerParser()>();
        $z23 = virtualinvoke r2.<sun.net.www.protocol.http.AuthenticationInfo: boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection,sun.net.www.HeaderParser,java.lang.String)>(r0, $r76, r7);
        if $z23 != 0 goto label29;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        $r77 = new java.io.IOException;
        specialinvoke $r77.<java.io.IOException: void <init>(java.lang.String)>("Authentication failure");
        throw $r77;

     label29:
        if r1 == null goto label30;

        if r3 == null goto label30;

        $r78 = virtualinvoke r3.<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.HeaderParser headerParser()>();
        $z24 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection,sun.net.www.HeaderParser,java.lang.String)>(r0, $r78, r7);
        if $z24 != 0 goto label30;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        $r79 = new java.io.IOException;
        specialinvoke $r79.<java.io.IOException: void <init>(java.lang.String)>("Authentication failure");
        throw $r79;

     label30:
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Object authObj> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage> = 0;
        goto label82;

     label31:
        goto label33;

     label32:
        z2 = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage> = 0;
        $z25 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean isUserProxyAuth>;
        if $z25 != 0 goto label33;

        $r80 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r80.<sun.net.www.MessageHeader: void remove(java.lang.String)>("Proxy-Authorization");

     label33:
        if r2 == null goto label34;

        virtualinvoke r2.<sun.net.www.protocol.http.AuthenticationInfo: void addToCache()>();

     label34:
        if i4 != 401 goto label45;

        $z26 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>();
        if $z26 == 0 goto label35;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        $r81 = new java.net.HttpRetryException;
        specialinvoke $r81.<java.net.HttpRetryException: void <init>(java.lang.String,int)>("cannot retry due to server authentication, in streaming mode", 401);
        throw $r81;

     label35:
        z27 = 0;
        $r82 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r83 = virtualinvoke $r82.<sun.net.www.MessageHeader: java.util.Iterator multiValueIterator(java.lang.String)>("WWW-Authenticate");

     label36:
        $z28 = interfaceinvoke r83.<java.util.Iterator: boolean hasNext()>();
        if $z28 == 0 goto label40;

        $r84 = interfaceinvoke r83.<java.util.Iterator: java.lang.Object next()>();
        $r85 = (java.lang.String) $r84;
        r86 = virtualinvoke $r85.<java.lang.String: java.lang.String trim()>();
        $z29 = virtualinvoke r86.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Negotiate");
        if $z29 != 0 goto label37;

        $z30 = virtualinvoke r86.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Kerberos");
        if $z30 == 0 goto label39;

     label37:
        if z1 != 0 goto label38;

        z1 = 1;
        goto label40;

     label38:
        z27 = 1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLM2ndStage> = 0;
        r1 = null;
        goto label40;

     label39:
        goto label36;

     label40:
        $r87 = new sun.net.www.protocol.http.AuthenticationHeader;
        $r88 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r89 = new sun.net.www.protocol.http.HttpCallerInfo;
        $r90 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        specialinvoke $r89.<sun.net.www.protocol.http.HttpCallerInfo: void <init>(java.net.URL)>($r90);
        specialinvoke $r87.<sun.net.www.protocol.http.AuthenticationHeader: void <init>(java.lang.String,sun.net.www.MessageHeader,sun.net.www.protocol.http.HttpCallerInfo,boolean)>("WWW-Authenticate", $r88, $r89, z27);
        r3 = $r87;
        r91 = virtualinvoke r3.<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String raw()>();
        $z31 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLM2ndStage>;
        if $z31 != 0 goto label43;

        if r1 == null goto label42;

        $r92 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthScheme getAuthScheme()>();
        $r93 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme NTLM>;
        if $r92 == $r93 goto label42;

        $z32 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: boolean isAuthorizationStale(java.lang.String)>(r91);
        if $z32 == 0 goto label41;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectWeb()>();
        i0 = i0 + 1;
        $r94 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r95 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getHeaderName()>();
        $r96 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r97 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $r98 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getHeaderValue(java.net.URL,java.lang.String)>($r96, $r97);
        virtualinvoke $r94.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>($r95, $r98);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentServerCredentials> = r1;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setCookieHeader()>();
        goto label82;

     label41:
        virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: void removeFromCache()>();

     label42:
        r1 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo getServerAuthentication(sun.net.www.protocol.http.AuthenticationHeader)>(r3);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentServerCredentials> = r1;
        if r1 == null goto label45;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectWeb()>();
        i0 = i0 + 1;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setCookieHeader()>();
        goto label82;

     label43:
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void reset()>();
        $z33 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection,sun.net.www.HeaderParser,java.lang.String)>(r0, null, r91);
        if $z33 != 0 goto label44;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectWeb()>();
        $r99 = new java.io.IOException;
        specialinvoke $r99.<java.io.IOException: void <init>(java.lang.String)>("Authentication failure");
        throw $r99;

     label44:
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLM2ndStage> = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Object authObj> = null;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setCookieHeader()>();
        goto label82;

     label45:
        if r1 == null goto label56;

        $z34 = r1 instanceof sun.net.www.protocol.http.DigestAuthentication;
        if $z34 == 0 goto label46;

        $r100 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String domain>;
        if $r100 != null goto label50;

     label46:
        $z35 = r1 instanceof sun.net.www.protocol.http.BasicAuthentication;
        if $z35 == 0 goto label49;

        $r101 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r102 = virtualinvoke $r101.<java.net.URL: java.lang.String getPath()>();
        r103 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: java.lang.String reducePath(java.lang.String)>($r102);
        r104 = r1.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String path>;
        $z36 = virtualinvoke r104.<java.lang.String: boolean startsWith(java.lang.String)>(r103);
        if $z36 == 0 goto label47;

        $i6 = virtualinvoke r103.<java.lang.String: int length()>();
        $i7 = virtualinvoke r104.<java.lang.String: int length()>();
        if $i6 < $i7 goto label48;

     label47:
        r103 = staticinvoke <sun.net.www.protocol.http.BasicAuthentication: java.lang.String getRootPath(java.lang.String,java.lang.String)>(r104, r103);

     label48:
        $r105 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.Object clone()>();
        r106 = (sun.net.www.protocol.http.BasicAuthentication) $r105;
        virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: void removeFromCache()>();
        r106.<sun.net.www.protocol.http.BasicAuthentication: java.lang.String path> = r103;
        r1 = r106;

     label49:
        virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: void addToCache()>();
        goto label56;

     label50:
        r107 = (sun.net.www.protocol.http.DigestAuthentication) r1;
        $r108 = new java.util.StringTokenizer;
        $r109 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String domain>;
        specialinvoke $r108.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r109, " ");
        r110 = $r108;
        r111 = r107.<sun.net.www.protocol.http.DigestAuthentication: java.lang.String realm>;
        r112 = r107.<sun.net.www.protocol.http.DigestAuthentication: java.net.PasswordAuthentication pw>;
        $r113 = r107.<sun.net.www.protocol.http.DigestAuthentication: sun.net.www.protocol.http.DigestAuthentication$Parameters params>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.DigestAuthentication$Parameters digestparams> = $r113;

     label51:
        $z37 = virtualinvoke r110.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z37 == 0 goto label56;

        r8 = virtualinvoke r110.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label52:
        $r114 = new java.net.URL;
        $r115 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        specialinvoke $r114.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r115, r8);
        r9 = $r114;
        $r116 = new sun.net.www.protocol.http.DigestAuthentication;
        $r117 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.DigestAuthentication$Parameters digestparams>;
        specialinvoke $r116.<sun.net.www.protocol.http.DigestAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.lang.String,java.net.PasswordAuthentication,sun.net.www.protocol.http.DigestAuthentication$Parameters)>(0, r9, r111, "Digest", r112, $r117);
        r10 = $r116;
        virtualinvoke r10.<sun.net.www.protocol.http.DigestAuthentication: void addToCache()>();

     label53:
        goto label55;

     label54:
        $r118 := @caughtexception;
        r119 = $r118;

     label55:
        goto label51;

     label56:
        z1 = 0;
        z2 = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage> = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLM2ndStage> = 0;
        $z38 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean isUserServerAuth>;
        if $z38 != 0 goto label57;

        $r120 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r120.<sun.net.www.MessageHeader: void remove(java.lang.String)>("Authorization");

     label57:
        $z39 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean isUserProxyAuth>;
        if $z39 != 0 goto label58;

        $r121 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r121.<sun.net.www.MessageHeader: void remove(java.lang.String)>("Proxy-Authorization");

     label58:
        if i4 != 200 goto label59;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void checkResponseCredentials(boolean)>(0);
        goto label60;

     label59:
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean needToCheck> = 0;

     label60:
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean needToCheck> = 1;
        $z40 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean followRedirect()>();
        if $z40 == 0 goto label61;

        i0 = i0 + 1;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setCookieHeader()>();
        goto label82;

     label61:
        $r122 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r123 = virtualinvoke $r122.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("content-length");
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r123);

     label62:
        goto label64;

     label63:
        $r124 := @caughtexception;
        r125 = $r124;

     label64:
        $r126 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $z41 = virtualinvoke $r126.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");
        if $z41 != 0 goto label65;

        $b8 = l1 cmp 0L;
        if $b8 == 0 goto label65;

        if i4 == 304 goto label65;

        if i4 != 204 goto label67;

     label65:
        $r127 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi>;
        if $r127 == null goto label66;

        $r128 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi>;
        virtualinvoke $r128.<sun.net.ProgressSource: void finishTracking()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi> = null;

     label66:
        $r129 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        virtualinvoke $r129.<sun.net.www.http.HttpClient: void finished()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = null;
        $r130 = new sun.net.www.protocol.http.EmptyInputStream;
        specialinvoke $r130.<sun.net.www.protocol.http.EmptyInputStream: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream> = $r130;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected> = 0;

     label67:
        if i4 == 200 goto label68;

        if i4 == 203 goto label68;

        if i4 == 206 goto label68;

        if i4 == 300 goto label68;

        if i4 == 301 goto label68;

        if i4 != 410 goto label74;

     label68:
        $r131 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.ResponseCache cacheHandler>;
        if $r131 == null goto label74;

        $r132 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        r133 = staticinvoke <sun.net.www.ParseUtil: java.net.URI toURI(java.net.URL)>($r132);
        if r133 == null goto label74;

        r134 = r0;
        $r135 = "https";
        $r136 = virtualinvoke r133.<java.net.URI: java.lang.String getScheme()>();
        $z42 = virtualinvoke $r135.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r136);
        if $z42 == 0 goto label73;

     label69:
        $r137 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r138 = virtualinvoke $r137.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("httpsURLConnection");
        $r139 = virtualinvoke $r138.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);
        r134 = (java.net.URLConnection) $r139;

     label70:
        goto label73;

     label71:
        $r140 := @caughtexception;
        r141 = $r140;
        goto label73;

     label72:
        $r142 := @caughtexception;
        r143 = $r142;

     label73:
        $r144 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.ResponseCache cacheHandler>;
        r145 = virtualinvoke $r144.<java.net.ResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>(r133, r134);
        if r145 == null goto label74;

        $r146 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        if $r146 == null goto label74;

        $r147 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        virtualinvoke $r147.<sun.net.www.http.HttpClient: void setCacheRequest(java.net.CacheRequest)>(r145);
        $r148 = new sun.net.www.protocol.http.HttpURLConnection$HttpInputStream;
        $r149 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        specialinvoke $r148.<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.io.InputStream,java.net.CacheRequest)>(r0, $r149, r145);
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream> = $r148;

     label74:
        $r150 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        $z43 = $r150 instanceof sun.net.www.protocol.http.HttpURLConnection$HttpInputStream;
        if $z43 != 0 goto label75;

        $r151 = new sun.net.www.protocol.http.HttpURLConnection$HttpInputStream;
        $r152 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        specialinvoke $r151.<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.io.InputStream)>(r0, $r152);
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream> = $r151;

     label75:
        if i4 < 400 goto label78;

        if i4 == 404 goto label76;

        if i4 != 410 goto label77;

     label76:
        $r153 = new java.io.FileNotFoundException;
        $r154 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r155 = virtualinvoke $r154.<java.net.URL: java.lang.String toString()>();
        specialinvoke $r153.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r155);
        throw $r153;

     label77:
        $r156 = new java.io.IOException;
        $r157 = new java.lang.StringBuilder;
        specialinvoke $r157.<java.lang.StringBuilder: void <init>()>();
        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server returned HTTP response code: ");
        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for URL: ");
        $r161 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r162 = virtualinvoke $r161.<java.net.URL: java.lang.String toString()>();
        $r163 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r162);
        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r156.<java.io.IOException: void <init>(java.lang.String)>($r164);
        throw $r156;

     label78:
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream strOutputStream> = null;
        r165 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;

     label79:
        $r166 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        if $r166 == null goto label80;

        $r167 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>($r167);

     label80:
        $r168 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String serverAuthKey>;
        if $r168 == null goto label81;

        $r169 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String serverAuthKey>;
        staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>($r169);

     label81:
        return r165;

     label82:
        $i9 = <sun.net.www.protocol.http.HttpURLConnection: int maxRedirects>;
        if i0 < $i9 goto label10;

        $r170 = new java.net.ProtocolException;
        $r171 = new java.lang.StringBuilder;
        specialinvoke $r171.<java.lang.StringBuilder: void <init>()>();
        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server redirected too many  times (");
        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r170.<java.net.ProtocolException: void <init>(java.lang.String)>($r175);
        throw $r170;

     label83:
        $r176 := @caughtexception;
        r177 = $r176;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Exception rememberedException> = r177;
        throw r177;

     label84:
        $r178 := @caughtexception;
        r179 = $r178;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Exception rememberedException> = r179;
        $r180 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r181 = virtualinvoke $r180.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("Transfer-Encoding");
        $r182 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        if $r182 == null goto label86;

        $r183 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $z44 = virtualinvoke $r183.<sun.net.www.http.HttpClient: boolean isKeepingAlive()>();
        if $z44 == 0 goto label86;

        $z45 = <sun.net.www.protocol.http.HttpURLConnection: boolean enableESBuffer>;
        if $z45 == 0 goto label86;

        $b10 = l1 cmp 0L;
        if $b10 > 0 goto label85;

        if r181 == null goto label86;

        $z46 = virtualinvoke r181.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("chunked");
        if $z46 == 0 goto label86;

     label85:
        $r184 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        $r185 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r186 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream getErrorStream(java.io.InputStream,long,sun.net.www.http.HttpClient)>($r184, l1, $r185);
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream errorStream> = $r186;

     label86:
        throw r179;

     label87:
        $r187 := @caughtexception;
        r11 = $r187;

     label88:
        $r188 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        if $r188 == null goto label89;

        $r189 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>($r189);

     label89:
        $r190 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String serverAuthKey>;
        if $r190 == null goto label90;

        $r191 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String serverAuthKey>;
        staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>($r191);

     label90:
        throw r11;

        catch java.lang.Exception from label52 to label53 with label54;
        catch java.lang.Exception from label61 to label62 with label63;
        catch java.lang.IllegalAccessException from label69 to label70 with label71;
        catch java.lang.NoSuchFieldException from label69 to label70 with label72;
        catch java.lang.RuntimeException from label10 to label12 with label83;
        catch java.lang.RuntimeException from label15 to label79 with label83;
        catch java.lang.RuntimeException from label82 to label83 with label83;
        catch java.io.IOException from label10 to label12 with label84;
        catch java.io.IOException from label15 to label79 with label84;
        catch java.io.IOException from label82 to label83 with label84;
        catch java.lang.Throwable from label10 to label12 with label87;
        catch java.lang.Throwable from label15 to label79 with label87;
        catch java.lang.Throwable from label82 to label88 with label87;
    }

    private java.io.IOException getChainedException(java.io.IOException)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.io.IOException r1, r3;
        java.lang.Object[] r2, $r4;
        java.lang.String $r5;
        sun.net.www.protocol.http.HttpURLConnection$6 $r6;
        java.lang.Object $r7;
        java.lang.Exception $r10, r11;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.io.IOException;

     label0:
        $r4 = newarray (java.lang.Object)[1];
        $r5 = virtualinvoke r1.<java.io.IOException: java.lang.String getMessage()>();
        $r4[0] = $r5;
        r2 = $r4;
        $r6 = new sun.net.www.protocol.http.HttpURLConnection$6;
        specialinvoke $r6.<sun.net.www.protocol.http.HttpURLConnection$6: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.io.IOException,java.lang.Object[])>(r0, r1, r2);
        $r7 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r6);
        r3 = (java.io.IOException) $r7;
        virtualinvoke r3.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

     label1:
        return r3;

     label2:
        $r10 := @caughtexception;
        r11 = $r10;
        return r1;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public java.io.InputStream getErrorStream()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        boolean $z0;
        int $i0;
        java.io.InputStream $r1, $r2, $r3, $r4;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $z0 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected>;
        if $z0 == 0 goto label1;

        $i0 = r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode>;
        if $i0 < 400 goto label1;

        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream errorStream>;
        if $r1 == null goto label0;

        $r2 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream errorStream>;
        return $r2;

     label0:
        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        if $r3 == null goto label1;

        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        return $r4;

     label1:
        return null;
    }

    private sun.net.www.protocol.http.AuthenticationInfo resetProxyAuthentication(sun.net.www.protocol.http.AuthenticationInfo, sun.net.www.protocol.http.AuthenticationHeader) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        sun.net.www.protocol.http.AuthenticationInfo r1, r19;
        sun.net.www.protocol.http.AuthenticationHeader r2;
        sun.net.www.protocol.http.AuthScheme $r3, $r8;
        java.lang.String r4, $r6, r7, $r12, $r13, $r14, $r16, $r18;
        sun.net.www.protocol.http.DigestAuthentication r5;
        boolean $z0, $z1;
        sun.net.www.protocol.http.HttpURLConnection$TunnelState $r9, $r10;
        java.net.URL $r11, $r15;
        sun.net.www.MessageHeader $r17;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: sun.net.www.protocol.http.AuthenticationInfo;
        r2 := @parameter1: sun.net.www.protocol.http.AuthenticationHeader;
        if r1 == null goto label5;

        $r8 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthScheme getAuthScheme()>();
        $r3 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme NTLM>;
        if $r8 == $r3 goto label5;

        r4 = virtualinvoke r2.<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String raw()>();
        $z0 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: boolean isAuthorizationStale(java.lang.String)>(r4);
        if $z0 == 0 goto label4;

        $z1 = r1 instanceof sun.net.www.protocol.http.DigestAuthentication;
        if $z1 == 0 goto label2;

        r5 = (sun.net.www.protocol.http.DigestAuthentication) r1;
        $r9 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$TunnelState tunnelState()>();
        $r10 = <sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState SETUP>;
        if $r9 != $r10 goto label0;

        $r11 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r12 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: java.lang.String connectRequestURI(java.net.URL)>($r11);
        $r6 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String HTTP_CONNECT>;
        r7 = virtualinvoke r5.<sun.net.www.protocol.http.DigestAuthentication: java.lang.String getHeaderValue(java.lang.String,java.lang.String)>($r12, $r6);
        goto label1;

     label0:
        $r13 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getRequestURI()>();
        $r14 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        r7 = virtualinvoke r5.<sun.net.www.protocol.http.DigestAuthentication: java.lang.String getHeaderValue(java.lang.String,java.lang.String)>($r13, $r14);

     label1:
        goto label3;

     label2:
        $r15 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r16 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        r7 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getHeaderValue(java.net.URL,java.lang.String)>($r15, $r16);

     label3:
        $r17 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r18 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getHeaderName()>();
        virtualinvoke $r17.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>($r18, r7);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentProxyCredentials> = r1;
        return r1;

     label4:
        virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationInfo: void removeFromCache()>();

     label5:
        r19 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo getHttpProxyAuthentication(sun.net.www.protocol.http.AuthenticationHeader)>(r2);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentProxyCredentials> = r19;
        return r19;
    }

    sun.net.www.protocol.http.HttpURLConnection$TunnelState tunnelState()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        sun.net.www.protocol.http.HttpURLConnection$TunnelState $r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$TunnelState tunnelState>;
        return $r1;
    }

    public void setTunnelState(sun.net.www.protocol.http.HttpURLConnection$TunnelState)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        sun.net.www.protocol.http.HttpURLConnection$TunnelState r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: sun.net.www.protocol.http.HttpURLConnection$TunnelState;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$TunnelState tunnelState> = r1;
        return;
    }

    public synchronized void doTunneling() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r1, r3, r8, r9, $r19, $r25, r27, $r30, $r31, $r34, $r40, $r55, $r56, $r57, $r59, $r60;
        boolean z0, z1, z2, $z3, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        sun.net.www.protocol.http.AuthenticationInfo r2;
        sun.net.www.MessageHeader r4, $r5, $r13, $r15, $r18, $r20, $r24, $r26, $r32, $r36, $r45, $r61;
        java.util.StringTokenizer r6, $r28;
        java.util.Iterator r7;
        java.lang.Throwable r10, $r58;
        sun.net.www.protocol.http.HttpURLConnection$TunnelState $r11, $r48, $r49;
        java.net.URL $r12, $r38;
        sun.net.www.http.HttpClient $r14, $r39, $r41, $r43, $r44;
        sun.util.logging.PlatformLogger $r16, $r17, $r21, $r22, $r23;
        java.lang.Object $r33;
        sun.net.www.protocol.http.AuthenticationHeader $r35, r42;
        sun.net.www.protocol.http.HttpCallerInfo $r37;
        sun.net.www.HeaderParser $r46;
        java.io.IOException $r47, $r50;
        java.lang.StringBuilder $r51, $r52, $r53, $r54;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        i0 = 0;
        r1 = "";
        z0 = 0;
        r2 = null;
        r3 = null;
        i1 = -1;
        r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r5 = new sun.net.www.MessageHeader;
        specialinvoke $r5.<sun.net.www.MessageHeader: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests> = $r5;
        z1 = 0;

     label0:
        $r11 = <sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState SETUP>;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setTunnelState(sun.net.www.protocol.http.HttpURLConnection$TunnelState)>($r11);

     label1:
        $z3 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean checkReuseConnection()>();
        if $z3 != 0 goto label2;

        $r12 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void proxiedConnect(java.net.URL,java.lang.String,int,boolean)>($r12, r3, i1, 0);

     label2:
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void sendCONNECTRequest()>();
        $r13 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        virtualinvoke $r13.<sun.net.www.MessageHeader: void reset()>();
        $r14 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r15 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        virtualinvoke $r14.<sun.net.www.http.HttpClient: boolean parseHTTP(sun.net.www.MessageHeader,sun.net.ProgressSource,sun.net.www.protocol.http.HttpURLConnection)>($r15, null, r0);
        $r16 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z5 = virtualinvoke $r16.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(500);
        if $z5 == 0 goto label3;

        $r17 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r18 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r19 = virtualinvoke $r18.<sun.net.www.MessageHeader: java.lang.String toString()>();
        virtualinvoke $r17.<sun.util.logging.PlatformLogger: void fine(java.lang.String)>($r19);

     label3:
        $r20 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $z6 = virtualinvoke $r20.<sun.net.www.MessageHeader: boolean filterNTLMResponses(java.lang.String)>("Proxy-Authenticate");
        if $z6 == 0 goto label4;

        $r21 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z7 = virtualinvoke $r21.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(500);
        if $z7 == 0 goto label4;

        $r22 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        virtualinvoke $r22.<sun.util.logging.PlatformLogger: void fine(java.lang.String)>(">>>> Headers are filtered");
        $r23 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r24 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r25 = virtualinvoke $r24.<sun.net.www.MessageHeader: java.lang.String toString()>();
        virtualinvoke $r23.<sun.util.logging.PlatformLogger: void fine(java.lang.String)>($r25);

     label4:
        $r26 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r27 = virtualinvoke $r26.<sun.net.www.MessageHeader: java.lang.String getValue(int)>(0);
        $r28 = new java.util.StringTokenizer;
        specialinvoke $r28.<java.util.StringTokenizer: void <init>(java.lang.String)>(r27);
        r6 = $r28;
        virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r30 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String trim()>();
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r31);
        if i2 != 407 goto label12;

        z2 = 0;
        $r32 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r7 = virtualinvoke $r32.<sun.net.www.MessageHeader: java.util.Iterator multiValueIterator(java.lang.String)>("Proxy-Authenticate");

     label5:
        $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z8 == 0 goto label9;

        $r33 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        $r34 = (java.lang.String) $r33;
        r8 = virtualinvoke $r34.<java.lang.String: java.lang.String trim()>();
        $z9 = virtualinvoke r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Negotiate");
        if $z9 != 0 goto label6;

        $z10 = virtualinvoke r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Kerberos");
        if $z10 == 0 goto label8;

     label6:
        if z1 != 0 goto label7;

        z1 = 1;
        goto label9;

     label7:
        z2 = 1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage> = 0;
        r2 = null;
        goto label9;

     label8:
        goto label5;

     label9:
        $r35 = new sun.net.www.protocol.http.AuthenticationHeader;
        $r36 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r37 = new sun.net.www.protocol.http.HttpCallerInfo;
        $r38 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r39 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r40 = virtualinvoke $r39.<sun.net.www.http.HttpClient: java.lang.String getProxyHostUsed()>();
        $r41 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i3 = virtualinvoke $r41.<sun.net.www.http.HttpClient: int getProxyPortUsed()>();
        specialinvoke $r37.<sun.net.www.protocol.http.HttpCallerInfo: void <init>(java.net.URL,java.lang.String,int)>($r38, $r40, $i3);
        specialinvoke $r35.<sun.net.www.protocol.http.AuthenticationHeader: void <init>(java.lang.String,sun.net.www.MessageHeader,sun.net.www.protocol.http.HttpCallerInfo,boolean)>("Proxy-Authenticate", $r36, $r37, z2);
        r42 = $r35;
        $z11 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage>;
        if $z11 != 0 goto label10;

        r2 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo resetProxyAuthentication(sun.net.www.protocol.http.AuthenticationInfo,sun.net.www.protocol.http.AuthenticationHeader)>(r2, r42);
        if r2 == null goto label12;

        $r43 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        r3 = virtualinvoke $r43.<sun.net.www.http.HttpClient: java.lang.String getProxyHostUsed()>();
        $r44 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        i1 = virtualinvoke $r44.<sun.net.www.http.HttpClient: int getProxyPortUsed()>();
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        i0 = i0 + 1;
        goto label15;

     label10:
        $r45 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r9 = virtualinvoke $r45.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("Proxy-Authenticate");
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void reset()>();
        $r46 = virtualinvoke r42.<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.HeaderParser headerParser()>();
        $z12 = virtualinvoke r2.<sun.net.www.protocol.http.AuthenticationInfo: boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection,sun.net.www.HeaderParser,java.lang.String)>(r0, $r46, r9);
        if $z12 != 0 goto label11;

        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        $r47 = new java.io.IOException;
        specialinvoke $r47.<java.io.IOException: void <init>(java.lang.String)>("Authentication failure");
        throw $r47;

     label11:
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.Object authObj> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage> = 0;
        goto label15;

     label12:
        if r2 == null goto label13;

        virtualinvoke r2.<sun.net.www.protocol.http.AuthenticationInfo: void addToCache()>();

     label13:
        if i2 != 200 goto label14;

        $r48 = <sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState TUNNELING>;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setTunnelState(sun.net.www.protocol.http.HttpURLConnection$TunnelState)>($r48);
        goto label16;

     label14:
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        $r49 = <sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState NONE>;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setTunnelState(sun.net.www.protocol.http.HttpURLConnection$TunnelState)>($r49);
        goto label16;

     label15:
        $i4 = <sun.net.www.protocol.http.HttpURLConnection: int maxRedirects>;
        if i0 < $i4 goto label1;

     label16:
        $i5 = <sun.net.www.protocol.http.HttpURLConnection: int maxRedirects>;
        if i0 >= $i5 goto label17;

        if i2 == 200 goto label18;

     label17:
        $r50 = new java.io.IOException;
        $r51 = new java.lang.StringBuilder;
        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to tunnel through proxy. Proxy returns \"");
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r50.<java.io.IOException: void <init>(java.lang.String)>($r55);
        throw $r50;

     label18:
        $r56 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        if $r56 == null goto label23;

        $r57 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>($r57);
        goto label23;

     label19:
        $r58 := @caughtexception;

     label20:
        r10 = $r58;

     label21:
        $r59 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        if $r59 == null goto label22;

        $r60 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>($r60);

     label22:
        throw r10;

     label23:
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests> = r4;
        $r61 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        virtualinvoke $r61.<sun.net.www.MessageHeader: void reset()>();
        return;

        catch java.lang.Throwable from label0 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    static java.lang.String connectRequestURI(java.net.URL)
    {
        java.net.URL r0;
        java.lang.String r1, $r6;
        int i0, $i1, i2;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.net.URL;
        r1 = virtualinvoke r0.<java.net.URL: java.lang.String getHost()>();
        i0 = virtualinvoke r0.<java.net.URL: int getPort()>();
        if i0 == -1 goto label0;

        $i1 = i0;
        goto label1;

     label0:
        $i1 = virtualinvoke r0.<java.net.URL: int getDefaultPort()>();

     label1:
        i2 = $i1;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    private void sendCONNECTRequest() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int i0, $i1;
        java.lang.StringBuilder $r1, $r6, $r7, $r10, $r11, $r12, $r18, $r19, $r20, $r22;
        java.lang.String r2, $r5, $r9, $r13, $r15, $r21, $r31;
        java.net.URL $r3, $r8, $r16, $r17;
        sun.net.www.MessageHeader $r4, $r14, $r23, $r24, $r26, $r27, $r30, $r33;
        sun.net.www.http.HttpClient $r25, $r32;
        boolean $z0, $z1;
        sun.util.logging.PlatformLogger $r28, $r29;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        i0 = virtualinvoke $r3.<java.net.URL: int getPort()>();
        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r5 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String HTTP_CONNECT>;
        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r8 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r9 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: java.lang.String connectRequestURI(java.net.URL)>($r8);
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP/1.1");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<sun.net.www.MessageHeader: void set(int,java.lang.String,java.lang.String)>(0, $r13, null);
        $r14 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r15 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String userAgent>;
        virtualinvoke $r14.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("User-Agent", $r15);
        $r16 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        r2 = virtualinvoke $r16.<java.net.URL: java.lang.String getHost()>();
        if i0 == -1 goto label0;

        $r17 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $i1 = virtualinvoke $r17.<java.net.URL: int getDefaultPort()>();
        if i0 == $i1 goto label0;

        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $r23 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r23.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Host", r2);
        $r24 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r24.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Accept", "text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2");
        $r25 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $z0 = virtualinvoke $r25.<sun.net.www.http.HttpClient: boolean getHttpKeepAliveSet()>();
        if $z0 == 0 goto label1;

        $r26 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r26.<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>("Proxy-Connection", "keep-alive");

     label1:
        $r27 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setPreemptiveProxyAuthentication(sun.net.www.MessageHeader)>($r27);
        $r28 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z1 = virtualinvoke $r28.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(500);
        if $z1 == 0 goto label2;

        $r29 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r30 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r31 = virtualinvoke $r30.<sun.net.www.MessageHeader: java.lang.String toString()>();
        virtualinvoke $r29.<sun.util.logging.PlatformLogger: void fine(java.lang.String)>($r31);

     label2:
        $r32 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r33 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r32.<sun.net.www.http.HttpClient: void writeRequests(sun.net.www.MessageHeader,sun.net.www.http.PosterOutputStream)>($r33, null);
        return;
    }

    private void setPreemptiveProxyAuthentication(sun.net.www.MessageHeader) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        sun.net.www.MessageHeader r1;
        sun.net.www.protocol.http.AuthenticationInfo r2;
        sun.net.www.protocol.http.DigestAuthentication r3;
        java.lang.String $r4, r5, $r7, $r12, $r13, $r14, $r16, $r17;
        sun.net.www.http.HttpClient $r6, $r8;
        int $i0;
        boolean $z0, $z1;
        sun.net.www.protocol.http.HttpURLConnection$TunnelState $r9, $r10;
        java.net.URL $r11, $r15;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: sun.net.www.MessageHeader;
        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r7 = virtualinvoke $r6.<sun.net.www.http.HttpClient: java.lang.String getProxyHostUsed()>();
        $r8 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $i0 = virtualinvoke $r8.<sun.net.www.http.HttpClient: int getProxyPortUsed()>();
        r2 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getProxyAuth(java.lang.String,int)>($r7, $i0);
        if r2 == null goto label4;

        $z0 = virtualinvoke r2.<sun.net.www.protocol.http.AuthenticationInfo: boolean supportsPreemptiveAuthorization()>();
        if $z0 == 0 goto label4;

        $z1 = r2 instanceof sun.net.www.protocol.http.DigestAuthentication;
        if $z1 == 0 goto label2;

        r3 = (sun.net.www.protocol.http.DigestAuthentication) r2;
        $r9 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$TunnelState tunnelState()>();
        $r10 = <sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState SETUP>;
        if $r9 != $r10 goto label0;

        $r11 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r12 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: java.lang.String connectRequestURI(java.net.URL)>($r11);
        $r4 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String HTTP_CONNECT>;
        r5 = virtualinvoke r3.<sun.net.www.protocol.http.DigestAuthentication: java.lang.String getHeaderValue(java.lang.String,java.lang.String)>($r12, $r4);
        goto label1;

     label0:
        $r13 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getRequestURI()>();
        $r14 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        r5 = virtualinvoke r3.<sun.net.www.protocol.http.DigestAuthentication: java.lang.String getHeaderValue(java.lang.String,java.lang.String)>($r13, $r14);

     label1:
        goto label3;

     label2:
        $r15 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r16 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        r5 = virtualinvoke r2.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getHeaderValue(java.net.URL,java.lang.String)>($r15, $r16);

     label3:
        $r17 = virtualinvoke r2.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getHeaderName()>();
        virtualinvoke r1.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>($r17, r5);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentProxyCredentials> = r2;

     label4:
        return;
    }

    private sun.net.www.protocol.http.AuthenticationInfo getHttpProxyAuthentication(sun.net.www.protocol.http.AuthenticationHeader)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        sun.net.www.protocol.http.AuthenticationHeader r1;
        sun.net.www.protocol.http.AuthenticationInfo r2;
        java.lang.String r3, r4, r6, r7, r10, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r31, $r42, $r56, r63, $r71, $r74, $r76;
        int i0, $i1, $i2;
        sun.net.www.HeaderParser r5;
        sun.net.www.protocol.http.AuthScheme r8;
        java.net.InetAddress r9;
        java.net.Authenticator$RequestorType $r11, $r33, $r44;
        sun.net.www.protocol.http.DigestAuthentication$Parameters r12, $r35;
        sun.net.www.http.HttpClient $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        int[] $r22;
        sun.net.www.protocol.http.HttpURLConnection$7 $r23;
        java.lang.Object $r24;
        java.security.PrivilegedActionException $r25, r26;
        java.net.URL $r27, $r30, $r32, $r41, $r43, $r60, r61;
        java.net.PasswordAuthentication r28, r34, r39;
        sun.net.www.protocol.http.BasicAuthentication $r29, $r64;
        sun.net.www.protocol.http.DigestAuthentication $r36;
        sun.net.www.protocol.http.NTLMAuthenticationProxy $r37, $r38, $r45;
        sun.util.logging.PlatformLogger $r40, $r52, $r67, $r68;
        sun.net.www.protocol.http.NegotiateAuthentication $r46, $r49;
        sun.net.www.protocol.http.HttpCallerInfo $r47, $r48, $r50, $r51;
        java.lang.StringBuilder $r53, $r54, $r55, $r69, $r70, $r72, $r73, $r75;
        java.lang.AssertionError $r57;
        sun.net.www.protocol.http.HttpAuthenticator $r58, $r59, $r62;
        java.net.MalformedURLException $r65, r66;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: sun.net.www.protocol.http.AuthenticationHeader;
        r2 = null;
        r3 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String raw()>();
        $r13 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        r4 = virtualinvoke $r13.<sun.net.www.http.HttpClient: java.lang.String getProxyHostUsed()>();
        $r14 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        i0 = virtualinvoke $r14.<sun.net.www.http.HttpClient: int getProxyPortUsed()>();
        if r4 == null goto label27;

        $z0 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: boolean isPresent()>();
        if $z0 == 0 goto label27;

        r5 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.HeaderParser headerParser()>();
        r6 = virtualinvoke r5.<sun.net.www.HeaderParser: java.lang.String findValue(java.lang.String)>("realm");
        r7 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String scheme()>();
        r8 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme UNKNOWN>;
        $r15 = "basic";
        $z1 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
        if $z1 == 0 goto label0;

        r8 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme BASIC>;
        goto label4;

     label0:
        $r16 = "digest";
        $z2 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
        if $z2 == 0 goto label1;

        r8 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme DIGEST>;
        goto label4;

     label1:
        $r17 = "ntlm";
        $z3 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
        if $z3 == 0 goto label2;

        r8 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme NTLM>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage> = 1;
        goto label4;

     label2:
        $r18 = "Kerberos";
        $z4 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
        if $z4 == 0 goto label3;

        r8 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme KERBEROS>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage> = 1;
        goto label4;

     label3:
        $r19 = "Negotiate";
        $z5 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);
        if $z5 == 0 goto label4;

        r8 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme NEGOTIATE>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLMp2ndStage> = 1;

     label4:
        if r6 != null goto label5;

        r6 = "";

     label5:
        $r20 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getProxyAuthKey(java.lang.String,int,java.lang.String,sun.net.www.protocol.http.AuthScheme)>(r4, i0, r6, r8);
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey> = $r20;
        $r21 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String proxyAuthKey>;
        r2 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getProxyAuth(java.lang.String)>($r21);
        if r2 != null goto label22;

        $r22 = <sun.net.www.protocol.http.HttpURLConnection$8: int[] $SwitchMap$sun$net$www$protocol$http$AuthScheme>;
        $i1 = virtualinvoke r8.<sun.net.www.protocol.http.AuthScheme: int ordinal()>();
        $i2 = $r22[$i1];
        tableswitch($i2)
        {
            case 1: goto label6;
            case 2: goto label11;
            case 3: goto label12;
            case 4: goto label18;
            case 5: goto label19;
            case 6: goto label20;
            default: goto label21;
        };

     label6:
        r9 = null;

     label7:
        r10 = r4;
        $r23 = new sun.net.www.protocol.http.HttpURLConnection$7;
        specialinvoke $r23.<sun.net.www.protocol.http.HttpURLConnection$7: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.lang.String)>(r0, r10);
        $r24 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r23);
        r9 = (java.net.InetAddress) $r24;

     label8:
        goto label10;

     label9:
        $r25 := @caughtexception;
        r26 = $r25;

     label10:
        $r27 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r11 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType PROXY>;
        r28 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: java.net.PasswordAuthentication privilegedRequestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>(r4, r9, i0, "http", r6, r7, $r27, $r11);
        if r28 == null goto label22;

        $r29 = new sun.net.www.protocol.http.BasicAuthentication;
        specialinvoke $r29.<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.lang.String,int,java.lang.String,java.net.PasswordAuthentication)>(1, r4, i0, r6, r28);
        r2 = $r29;
        goto label22;

     label11:
        $r30 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r31 = virtualinvoke $r30.<java.net.URL: java.lang.String getProtocol()>();
        $r32 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r33 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType PROXY>;
        r34 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: java.net.PasswordAuthentication privilegedRequestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>(r4, null, i0, $r31, r6, r7, $r32, $r33);
        if r34 == null goto label22;

        $r35 = new sun.net.www.protocol.http.DigestAuthentication$Parameters;
        specialinvoke $r35.<sun.net.www.protocol.http.DigestAuthentication$Parameters: void <init>()>();
        r12 = $r35;
        $r36 = new sun.net.www.protocol.http.DigestAuthentication;
        specialinvoke $r36.<sun.net.www.protocol.http.DigestAuthentication: void <init>(boolean,java.lang.String,int,java.lang.String,java.lang.String,java.net.PasswordAuthentication,sun.net.www.protocol.http.DigestAuthentication$Parameters)>(1, r4, i0, r6, r7, r34, r12);
        r2 = $r36;
        goto label22;

     label12:
        $r37 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.NTLMAuthenticationProxy proxy>;
        $z6 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: boolean supported>;
        if $z6 == 0 goto label22;

        $z7 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMProxy>;
        if $z7 == 0 goto label13;

        $r38 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.NTLMAuthenticationProxy proxy>;
        $z8 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: boolean supportsTransparentAuth>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMProxy> = $z8;
        $z9 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMProxy>;
        if $z9 == 0 goto label13;

        $z10 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean useProxyResponseCode>;
        if $z10 == 0 goto label13;

        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMProxy> = 0;

     label13:
        r39 = null;
        $z11 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMProxy>;
        if $z11 == 0 goto label14;

        $r40 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        virtualinvoke $r40.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>("Trying Transparent NTLM authentication");
        goto label15;

     label14:
        $r41 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r42 = virtualinvoke $r41.<java.net.URL: java.lang.String getProtocol()>();
        $r43 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r44 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType PROXY>;
        r39 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: java.net.PasswordAuthentication privilegedRequestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>(r4, null, i0, $r42, "", r7, $r43, $r44);

     label15:
        $z12 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMProxy>;
        if $z12 != 0 goto label16;

        $z13 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMProxy>;
        if $z13 != 0 goto label17;

        if r39 == null goto label17;

     label16:
        $r45 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.NTLMAuthenticationProxy proxy>;
        r2 = virtualinvoke $r45.<sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.AuthenticationInfo create(boolean,java.lang.String,int,java.net.PasswordAuthentication)>(1, r4, i0, r39);

     label17:
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMProxy> = 0;
        goto label22;

     label18:
        $r46 = new sun.net.www.protocol.http.NegotiateAuthentication;
        $r47 = new sun.net.www.protocol.http.HttpCallerInfo;
        $r48 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.protocol.http.HttpCallerInfo getHttpCallerInfo()>();
        specialinvoke $r47.<sun.net.www.protocol.http.HttpCallerInfo: void <init>(sun.net.www.protocol.http.HttpCallerInfo,java.lang.String)>($r48, "Negotiate");
        specialinvoke $r46.<sun.net.www.protocol.http.NegotiateAuthentication: void <init>(sun.net.www.protocol.http.HttpCallerInfo)>($r47);
        r2 = $r46;
        goto label22;

     label19:
        $r49 = new sun.net.www.protocol.http.NegotiateAuthentication;
        $r50 = new sun.net.www.protocol.http.HttpCallerInfo;
        $r51 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.protocol.http.HttpCallerInfo getHttpCallerInfo()>();
        specialinvoke $r50.<sun.net.www.protocol.http.HttpCallerInfo: void <init>(sun.net.www.protocol.http.HttpCallerInfo,java.lang.String)>($r51, "Kerberos");
        specialinvoke $r49.<sun.net.www.protocol.http.NegotiateAuthentication: void <init>(sun.net.www.protocol.http.HttpCallerInfo)>($r50);
        r2 = $r49;
        goto label22;

     label20:
        $r52 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r53 = new java.lang.StringBuilder;
        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown/Unsupported authentication scheme: ");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r52.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>($r56);

     label21:
        $r57 = new java.lang.AssertionError;
        specialinvoke $r57.<java.lang.AssertionError: void <init>(java.lang.Object)>("should not reach here");
        throw $r57;

     label22:
        if r2 != null goto label26;

        $r58 = <sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpAuthenticator defaultAuth>;
        if $r58 == null goto label26;

        $r59 = <sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpAuthenticator defaultAuth>;
        $z14 = interfaceinvoke $r59.<sun.net.www.protocol.http.HttpAuthenticator: boolean schemeSupported(java.lang.String)>(r7);
        if $z14 == 0 goto label26;

     label23:
        $r60 = new java.net.URL;
        specialinvoke $r60.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>("http", r4, i0, "/");
        r61 = $r60;
        $r62 = <sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpAuthenticator defaultAuth>;
        r63 = interfaceinvoke $r62.<sun.net.www.protocol.http.HttpAuthenticator: java.lang.String authString(java.net.URL,java.lang.String,java.lang.String)>(r61, r7, r6);
        if r63 == null goto label24;

        $r64 = new sun.net.www.protocol.http.BasicAuthentication;
        specialinvoke $r64.<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.lang.String,int,java.lang.String,java.lang.String)>(1, r4, i0, r6, r63);
        r2 = $r64;

     label24:
        goto label26;

     label25:
        $r65 := @caughtexception;
        r66 = $r65;

     label26:
        if r2 == null goto label27;

        $z15 = virtualinvoke r2.<sun.net.www.protocol.http.AuthenticationInfo: boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection,sun.net.www.HeaderParser,java.lang.String)>(r0, r5, r3);
        if $z15 != 0 goto label27;

        r2 = null;

     label27:
        $r67 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z16 = virtualinvoke $r67.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(400);
        if $z16 == 0 goto label30;

        $r68 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r69 = new java.lang.StringBuilder;
        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy Authentication for ");
        $r71 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String toString()>();
        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned ");
        if r2 == null goto label28;

        $r74 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();
        goto label29;

     label28:
        $r74 = "null";

     label29:
        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);
        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r68.<sun.util.logging.PlatformLogger: void finer(java.lang.String)>($r76);

     label30:
        return r2;

        catch java.security.PrivilegedActionException from label7 to label8 with label9;
        catch java.net.MalformedURLException from label23 to label24 with label25;
    }

    private sun.net.www.protocol.http.AuthenticationInfo getServerAuthentication(sun.net.www.protocol.http.AuthenticationHeader)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        sun.net.www.protocol.http.AuthenticationHeader r1;
        sun.net.www.protocol.http.AuthenticationInfo r2;
        java.lang.String r3, r5, r6, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r24, $r36, $r38, $r43, $r45, $r63, $r65, $r73, r79, $r86, $r89, $r91;
        sun.net.www.HeaderParser r4;
        sun.net.www.protocol.http.AuthScheme r7;
        java.net.InetAddress r8;
        java.net.UnknownHostException r9, $r25;
        java.net.Authenticator$RequestorType $r10, $r47, $r67;
        java.net.PasswordAuthentication r11, r48, r60;
        java.net.URL r12, $r20, $r23, $r26, $r27, $r35, $r37, $r39, $r41, $r42, $r44, $r46, $r51, $r54, $r55, $r59, $r62, $r64, $r66, $r78, $r81;
        java.lang.Exception r13, $r56;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        int i0, $i1, $i2;
        int[] $r28;
        sun.net.www.protocol.http.NegotiateAuthentication $r29, $r32;
        sun.net.www.protocol.http.HttpCallerInfo $r30, $r31, $r33, $r34;
        sun.net.www.protocol.http.BasicAuthentication $r40, $r80;
        sun.net.www.protocol.http.DigestAuthentication$Parameters $r49, $r52;
        sun.net.www.protocol.http.DigestAuthentication $r50;
        sun.net.www.protocol.http.NTLMAuthenticationProxy $r53, $r57, $r58, $r68;
        sun.util.logging.PlatformLogger $r61, $r69, $r82, $r83;
        java.lang.StringBuilder $r70, $r71, $r72, $r84, $r85, $r87, $r88, $r90;
        java.lang.AssertionError $r74;
        sun.net.www.protocol.http.HttpAuthenticator $r75, $r76, $r77;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: sun.net.www.protocol.http.AuthenticationHeader;
        r2 = null;
        r3 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String raw()>();
        $z0 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: boolean isPresent()>();
        if $z0 == 0 goto label29;

        r4 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.HeaderParser headerParser()>();
        r5 = virtualinvoke r4.<sun.net.www.HeaderParser: java.lang.String findValue(java.lang.String)>("realm");
        r6 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String scheme()>();
        r7 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme UNKNOWN>;
        $r14 = "basic";
        $z1 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);
        if $z1 == 0 goto label0;

        r7 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme BASIC>;
        goto label4;

     label0:
        $r15 = "digest";
        $z2 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);
        if $z2 == 0 goto label1;

        r7 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme DIGEST>;
        goto label4;

     label1:
        $r16 = "ntlm";
        $z3 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);
        if $z3 == 0 goto label2;

        r7 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme NTLM>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLM2ndStage> = 1;
        goto label4;

     label2:
        $r17 = "Kerberos";
        $z4 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);
        if $z4 == 0 goto label3;

        r7 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme KERBEROS>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLM2ndStage> = 1;
        goto label4;

     label3:
        $r18 = "Negotiate";
        $z5 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);
        if $z5 == 0 goto label4;

        r7 = <sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme NEGOTIATE>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean doingNTLM2ndStage> = 1;

     label4:
        $r19 = virtualinvoke r4.<sun.net.www.HeaderParser: java.lang.String findValue(java.lang.String)>("domain");
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String domain> = $r19;
        if r5 != null goto label5;

        r5 = "";

     label5:
        $r20 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r21 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getServerAuthKey(java.net.URL,java.lang.String,sun.net.www.protocol.http.AuthScheme)>($r20, r5, r7);
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String serverAuthKey> = $r21;
        $r22 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String serverAuthKey>;
        r2 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getServerAuth(java.lang.String)>($r22);
        r8 = null;
        if r2 != null goto label9;

     label6:
        $r23 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r24 = virtualinvoke $r23.<java.net.URL: java.lang.String getHost()>();
        r8 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r24);

     label7:
        goto label9;

     label8:
        $r25 := @caughtexception;
        r9 = $r25;

     label9:
        $r26 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        i0 = virtualinvoke $r26.<java.net.URL: int getPort()>();
        if i0 != -1 goto label10;

        $r27 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        i0 = virtualinvoke $r27.<java.net.URL: int getDefaultPort()>();

     label10:
        if r2 != null goto label27;

        $r28 = <sun.net.www.protocol.http.HttpURLConnection$8: int[] $SwitchMap$sun$net$www$protocol$http$AuthScheme>;
        $i1 = virtualinvoke r7.<sun.net.www.protocol.http.AuthScheme: int ordinal()>();
        $i2 = $r28[$i1];
        tableswitch($i2)
        {
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label15;
            case 4: goto label12;
            case 5: goto label11;
            case 6: goto label25;
            default: goto label26;
        };

     label11:
        $r29 = new sun.net.www.protocol.http.NegotiateAuthentication;
        $r30 = new sun.net.www.protocol.http.HttpCallerInfo;
        $r31 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.protocol.http.HttpCallerInfo getHttpCallerInfo()>();
        specialinvoke $r30.<sun.net.www.protocol.http.HttpCallerInfo: void <init>(sun.net.www.protocol.http.HttpCallerInfo,java.lang.String)>($r31, "Kerberos");
        specialinvoke $r29.<sun.net.www.protocol.http.NegotiateAuthentication: void <init>(sun.net.www.protocol.http.HttpCallerInfo)>($r30);
        r2 = $r29;
        goto label27;

     label12:
        $r32 = new sun.net.www.protocol.http.NegotiateAuthentication;
        $r33 = new sun.net.www.protocol.http.HttpCallerInfo;
        $r34 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.protocol.http.HttpCallerInfo getHttpCallerInfo()>();
        specialinvoke $r33.<sun.net.www.protocol.http.HttpCallerInfo: void <init>(sun.net.www.protocol.http.HttpCallerInfo,java.lang.String)>($r34, "Negotiate");
        specialinvoke $r32.<sun.net.www.protocol.http.NegotiateAuthentication: void <init>(sun.net.www.protocol.http.HttpCallerInfo)>($r33);
        r2 = $r32;
        goto label27;

     label13:
        $r35 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r36 = virtualinvoke $r35.<java.net.URL: java.lang.String getHost()>();
        $r37 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r38 = virtualinvoke $r37.<java.net.URL: java.lang.String getProtocol()>();
        $r39 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r10 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType SERVER>;
        r11 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: java.net.PasswordAuthentication privilegedRequestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>($r36, r8, i0, $r38, r5, r6, $r39, $r10);
        if r11 == null goto label27;

        $r40 = new sun.net.www.protocol.http.BasicAuthentication;
        $r41 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        specialinvoke $r40.<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.net.PasswordAuthentication)>(0, $r41, r5, r11);
        r2 = $r40;
        goto label27;

     label14:
        $r42 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r43 = virtualinvoke $r42.<java.net.URL: java.lang.String getHost()>();
        $r44 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r45 = virtualinvoke $r44.<java.net.URL: java.lang.String getProtocol()>();
        $r46 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r47 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType SERVER>;
        r48 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: java.net.PasswordAuthentication privilegedRequestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>($r43, r8, i0, $r45, r5, r6, $r46, $r47);
        if r48 == null goto label27;

        $r49 = new sun.net.www.protocol.http.DigestAuthentication$Parameters;
        specialinvoke $r49.<sun.net.www.protocol.http.DigestAuthentication$Parameters: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.DigestAuthentication$Parameters digestparams> = $r49;
        $r50 = new sun.net.www.protocol.http.DigestAuthentication;
        $r51 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r52 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.DigestAuthentication$Parameters digestparams>;
        specialinvoke $r50.<sun.net.www.protocol.http.DigestAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.lang.String,java.net.PasswordAuthentication,sun.net.www.protocol.http.DigestAuthentication$Parameters)>(0, $r51, r5, r6, r48, $r52);
        r2 = $r50;
        goto label27;

     label15:
        $r53 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.NTLMAuthenticationProxy proxy>;
        $z6 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: boolean supported>;
        if $z6 == 0 goto label27;

     label16:
        $r54 = new java.net.URL;
        $r55 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        specialinvoke $r54.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r55, "/");
        r12 = $r54;

     label17:
        goto label19;

     label18:
        $r56 := @caughtexception;
        r13 = $r56;
        r12 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;

     label19:
        $z7 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMServer>;
        if $z7 == 0 goto label20;

        $r57 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.NTLMAuthenticationProxy proxy>;
        $z8 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: boolean supportsTransparentAuth>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMServer> = $z8;
        $z9 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMServer>;
        if $z9 == 0 goto label20;

        $r58 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.NTLMAuthenticationProxy proxy>;
        $r59 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $z10 = staticinvoke <sun.net.www.protocol.http.NTLMAuthenticationProxy: boolean isTrustedSite(java.net.URL)>($r59);
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMServer> = $z10;

     label20:
        r60 = null;
        $z11 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMServer>;
        if $z11 == 0 goto label21;

        $r61 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        virtualinvoke $r61.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>("Trying Transparent NTLM authentication");
        goto label22;

     label21:
        $r62 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r63 = virtualinvoke $r62.<java.net.URL: java.lang.String getHost()>();
        $r64 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r65 = virtualinvoke $r64.<java.net.URL: java.lang.String getProtocol()>();
        $r66 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r67 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType SERVER>;
        r60 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: java.net.PasswordAuthentication privilegedRequestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>($r63, r8, i0, $r65, "", r6, $r66, $r67);

     label22:
        $z12 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMServer>;
        if $z12 != 0 goto label23;

        $z13 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMServer>;
        if $z13 != 0 goto label24;

        if r60 == null goto label24;

     label23:
        $r68 = <sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.NTLMAuthenticationProxy proxy>;
        r2 = virtualinvoke $r68.<sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.AuthenticationInfo create(boolean,java.net.URL,java.net.PasswordAuthentication)>(0, r12, r60);

     label24:
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean tryTransparentNTLMServer> = 0;
        goto label27;

     label25:
        $r69 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r70 = new java.lang.StringBuilder;
        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown/Unsupported authentication scheme: ");
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r69.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>($r73);

     label26:
        $r74 = new java.lang.AssertionError;
        specialinvoke $r74.<java.lang.AssertionError: void <init>(java.lang.Object)>("should not reach here");
        throw $r74;

     label27:
        if r2 != null goto label28;

        $r75 = <sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpAuthenticator defaultAuth>;
        if $r75 == null goto label28;

        $r76 = <sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpAuthenticator defaultAuth>;
        $z14 = interfaceinvoke $r76.<sun.net.www.protocol.http.HttpAuthenticator: boolean schemeSupported(java.lang.String)>(r6);
        if $z14 == 0 goto label28;

        $r77 = <sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpAuthenticator defaultAuth>;
        $r78 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        r79 = interfaceinvoke $r77.<sun.net.www.protocol.http.HttpAuthenticator: java.lang.String authString(java.net.URL,java.lang.String,java.lang.String)>($r78, r6, r5);
        if r79 == null goto label28;

        $r80 = new sun.net.www.protocol.http.BasicAuthentication;
        $r81 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        specialinvoke $r80.<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.lang.String)>(0, $r81, r5, r79);
        r2 = $r80;

     label28:
        if r2 == null goto label29;

        $z15 = virtualinvoke r2.<sun.net.www.protocol.http.AuthenticationInfo: boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection,sun.net.www.HeaderParser,java.lang.String)>(r0, r4, r3);
        if $z15 != 0 goto label29;

        r2 = null;

     label29:
        $r82 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z16 = virtualinvoke $r82.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(400);
        if $z16 == 0 goto label32;

        $r83 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r84 = new java.lang.StringBuilder;
        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();
        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server Authentication for ");
        $r86 = virtualinvoke r1.<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String toString()>();
        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);
        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned ");
        if r2 == null goto label30;

        $r89 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();
        goto label31;

     label30:
        $r89 = "null";

     label31:
        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);
        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r83.<sun.util.logging.PlatformLogger: void finer(java.lang.String)>($r91);

     label32:
        return r2;

        catch java.net.UnknownHostException from label6 to label7 with label8;
        catch java.lang.Exception from label16 to label17 with label18;
    }

    private void checkResponseCredentials(boolean) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String r1, $r7, $r8, r12, $r15;
        sun.net.www.protocol.http.DigestAuthentication r2, r14;
        sun.net.www.protocol.http.AuthenticationInfo $r3, $r4, $r6, $r9, $r10, $r13, $r17, $r18;
        sun.net.www.MessageHeader $r5, $r11;
        java.net.URL $r16;
        java.io.IOException $r19, r20;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        z0 := @parameter0: boolean;

     label0:
        $z1 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean needToCheck>;
        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $z2 = <sun.net.www.protocol.http.HttpURLConnection: boolean validateProxy>;
        if $z2 == 0 goto label4;

        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentProxyCredentials>;
        if $r3 == null goto label4;

        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentProxyCredentials>;
        $z3 = $r4 instanceof sun.net.www.protocol.http.DigestAuthentication;
        if $z3 == 0 goto label4;

        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r1 = virtualinvoke $r5.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("Proxy-Authentication-Info");
        if z0 != 0 goto label3;

        if r1 == null goto label4;

     label3:
        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentProxyCredentials>;
        r2 = (sun.net.www.protocol.http.DigestAuthentication) $r6;
        $r7 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $r8 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getRequestURI()>();
        virtualinvoke r2.<sun.net.www.protocol.http.DigestAuthentication: void checkResponse(java.lang.String,java.lang.String,java.lang.String)>(r1, $r7, $r8);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentProxyCredentials> = null;

     label4:
        $z4 = <sun.net.www.protocol.http.HttpURLConnection: boolean validateServer>;
        if $z4 == 0 goto label6;

        $r9 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentServerCredentials>;
        if $r9 == null goto label6;

        $r10 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentServerCredentials>;
        $z5 = $r10 instanceof sun.net.www.protocol.http.DigestAuthentication;
        if $z5 == 0 goto label6;

        $r11 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r12 = virtualinvoke $r11.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("Authentication-Info");
        if z0 != 0 goto label5;

        if r12 == null goto label6;

     label5:
        $r13 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentServerCredentials>;
        r14 = (sun.net.www.protocol.http.DigestAuthentication) $r13;
        $r15 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $r16 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        virtualinvoke r14.<sun.net.www.protocol.http.DigestAuthentication: void checkResponse(java.lang.String,java.lang.String,java.net.URL)>(r12, $r15, $r16);
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentServerCredentials> = null;

     label6:
        $r17 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentServerCredentials>;
        if $r17 != null goto label7;

        $r18 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo currentProxyCredentials>;
        if $r18 != null goto label7;

        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean needToCheck> = 0;

     label7:
        goto label9;

     label8:
        $r19 := @caughtexception;
        r20 = $r19;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected> = 0;
        throw r20;

     label9:
        return;

        catch java.io.IOException from label0 to label1 with label8;
        catch java.io.IOException from label2 to label7 with label8;
    }

    java.lang.String getRequestURI() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String $r1, $r3, $r4;
        sun.net.www.http.HttpClient $r2;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String requestURI>;
        if $r1 != null goto label0;

        $r2 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r3 = virtualinvoke $r2.<sun.net.www.http.HttpClient: java.lang.String getURLFile()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String requestURI> = $r3;

     label0:
        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String requestURI>;
        return $r4;
    }

    private boolean followRedirect() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int i0, i1, i2, $i3;
        java.lang.String r1, $r7, $r8, $r21, r23, $r27, $r30, $r34, $r35, $r40, $r43, $r47, r50, $r55;
        java.net.URL r2, $r5, $r6, $r10, $r11, $r17, $r24, $r48, $r49, $r51;
        java.net.MalformedURLException r3, $r9;
        java.lang.SecurityManager r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.net.HttpRetryException $r12;
        sun.util.logging.PlatformLogger $r13, $r14;
        java.lang.StringBuilder $r15, $r16, $r18, $r19, $r20, $r26, $r28, $r29, $r31, $r32, $r33, $r39, $r41, $r42, $r44, $r45, $r46, $r52, $r53, $r54, $r56;
        sun.net.www.MessageHeader $r22, $r25, $r36, $r38, $r57;
        sun.net.www.http.HttpClient $r37;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $z0 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean getInstanceFollowRedirects()>();
        if $z0 != 0 goto label0;

        return 0;

     label0:
        i0 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: int getResponseCode()>();
        if i0 < 300 goto label1;

        if i0 > 307 goto label1;

        if i0 == 306 goto label1;

        if i0 != 304 goto label2;

     label1:
        return 0;

     label2:
        r1 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");
        if r1 != null goto label3;

        return 0;

     label3:
        $r5 = new java.net.URL;
        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>(r1);
        r2 = $r5;
        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r7 = virtualinvoke $r6.<java.net.URL: java.lang.String getProtocol()>();
        $r8 = virtualinvoke r2.<java.net.URL: java.lang.String getProtocol()>();
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);
        if $z1 != 0 goto label5;

        $z2 = 0;

     label4:
        return $z2;

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;
        r3 = $r9;
        $r10 = new java.net.URL;
        $r11 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        specialinvoke $r10.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r11, r1);
        r2 = $r10;

     label7:
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        $z3 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>();
        if $z3 == 0 goto label8;

        $r12 = new java.net.HttpRetryException;
        specialinvoke $r12.<java.net.HttpRetryException: void <init>(java.lang.String,int,java.lang.String)>("cannot retry due to redirection, in streaming mode", i0, r1);
        throw $r12;

     label8:
        $r13 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $z4 = virtualinvoke $r13.<sun.util.logging.PlatformLogger: boolean isLoggable(int)>(500);
        if $z4 == 0 goto label9;

        $r14 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Redirected from ");
        $r17 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r14.<sun.util.logging.PlatformLogger: void fine(java.lang.String)>($r21);

     label9:
        $r22 = new sun.net.www.MessageHeader;
        specialinvoke $r22.<sun.net.www.MessageHeader: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses> = $r22;
        if i0 != 305 goto label11;

        r23 = virtualinvoke r2.<java.net.URL: java.lang.String getHost()>();
        i1 = virtualinvoke r2.<java.net.URL: int getPort()>();
        r4 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r4 == null goto label10;

        virtualinvoke r4.<java.lang.SecurityManager: void checkConnect(java.lang.String,int)>(r23, i1);

     label10:
        $r24 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setProxiedClient(java.net.URL,java.lang.String,int)>($r24, r23, i1);
        $r25 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r30 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getRequestURI()>();
        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP/1.1");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r25.<sun.net.www.MessageHeader: void set(int,java.lang.String,java.lang.String)>(0, $r34, null);
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected> = 1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean useProxyResponseCode> = 1;
        goto label15;

     label11:
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url> = r2;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String requestURI> = null;
        $r35 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $z5 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>("POST");
        if $z5 == 0 goto label12;

        $z6 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("http.strictPostRedirect");
        if $z6 != 0 goto label12;

        if i0 == 307 goto label12;

        $r36 = new sun.net.www.MessageHeader;
        specialinvoke $r36.<sun.net.www.MessageHeader: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests> = $r36;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean setRequests> = 0;
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.PosterOutputStream poster> = null;
        $z7 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean checkReuseConnection()>();
        if $z7 != 0 goto label15;

        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void connect()>();
        goto label15;

     label12:
        $z8 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean checkReuseConnection()>();
        if $z8 != 0 goto label13;

        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void connect()>();

     label13:
        $r37 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        if $r37 == null goto label15;

        $r38 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r39 = new java.lang.StringBuilder;
        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
        $r40 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r43 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getRequestURI()>();
        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP/1.1");
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r38.<sun.net.www.MessageHeader: void set(int,java.lang.String,java.lang.String)>(0, $r47, null);
        $r48 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        i2 = virtualinvoke $r48.<java.net.URL: int getPort()>();
        $r49 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        r50 = virtualinvoke $r49.<java.net.URL: java.lang.String getHost()>();
        if i2 == -1 goto label14;

        $r51 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.URL url>;
        $i3 = virtualinvoke $r51.<java.net.URL: int getDefaultPort()>();
        if i2 == $i3 goto label14;

        $r52 = new java.lang.StringBuilder;
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r55 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i2);
        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);
        r50 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        $r57 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r57.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("Host", r50);

     label15:
        return 1;

        catch java.net.MalformedURLException from label3 to label4 with label6;
    }

    private void reset() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.io.InputStream r1;
        long l0, l2, $l6;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String r2, $r7;
        java.lang.NumberFormatException r3, $r10;
        sun.net.www.http.HttpClient $r4, $r5, $r6, $r14;
        byte[] $r8, $r11;
        int $i1, $i4, i5;
        sun.net.www.MessageHeader $r9, $r17;
        byte $b3;
        java.io.IOException $r12, r13, $r15, r16;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r4.<sun.net.www.http.HttpClient: boolean reuse> = 1;
        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient reuseClient> = $r5;
        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        r1 = virtualinvoke $r6.<sun.net.www.http.HttpClient: java.io.InputStream getInputStream()>();
        $r7 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");
        if $z1 != 0 goto label14;

     label0:
        $z2 = r1 instanceof sun.net.www.http.ChunkedInputStream;
        if $z2 != 0 goto label1;

        $z3 = r1 instanceof sun.net.www.MeteredStream;
        if $z3 == 0 goto label2;

     label1:
        $r8 = r0.<sun.net.www.protocol.http.HttpURLConnection: byte[] cdata>;
        $i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>($r8);
        if $i1 <= 0 goto label9;

        goto label1;

     label2:
        l0 = 0L;
        z0 = 0;
        $r9 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r2 = virtualinvoke $r9.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("Content-Length");
        if r2 == null goto label6;

     label3:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;
        r3 = $r10;
        l0 = 0L;

     label6:
        l2 = 0L;

     label7:
        $b3 = l2 cmp l0;
        if $b3 >= 0 goto label9;

        $r11 = r0.<sun.net.www.protocol.http.HttpURLConnection: byte[] cdata>;
        $i4 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>($r11);
        i5 = $i4;
        if $i4 != -1 goto label8;

        goto label9;

     label8:
        $l6 = (long) i5;
        l2 = l2 + $l6;
        goto label7;

     label9:
        goto label11;

     label10:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r14.<sun.net.www.http.HttpClient: boolean reuse> = 0;
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient reuseClient> = null;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();
        return;

     label11:
        $z4 = r1 instanceof sun.net.www.MeteredStream;
        if $z4 == 0 goto label12;

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;
        r16 = $r15;

     label14:
        r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode> = -1;
        $r17 = new sun.net.www.MessageHeader;
        specialinvoke $r17.<sun.net.www.MessageHeader: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses> = $r17;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected> = 0;
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
        catch java.io.IOException from label0 to label9 with label10;
        catch java.io.IOException from label11 to label12 with label13;
    }

    private void disconnectWeb() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        boolean $z0, $z1;
        sun.net.www.http.HttpClient $r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $z0 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean usingProxy()>();
        if $z0 == 0 goto label0;

        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $z1 = virtualinvoke $r1.<sun.net.www.http.HttpClient: boolean isKeepingAlive()>();
        if $z1 == 0 goto label0;

        r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode> = -1;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void reset()>();
        goto label1;

     label0:
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>();

     label1:
        return;
    }

    private void disconnectInternal()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        sun.net.ProgressSource $r1, $r2;
        sun.net.www.http.HttpClient $r3, $r4;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode> = -1;
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream> = null;
        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi>;
        if $r1 == null goto label0;

        $r2 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi>;
        virtualinvoke $r2.<sun.net.ProgressSource: void finishTracking()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi> = null;

     label0:
        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        if $r3 == null goto label1;

        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        virtualinvoke $r4.<sun.net.www.http.HttpClient: void closeServer()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected> = 0;

     label1:
        return;
    }

    public void disconnect()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        sun.net.www.http.HttpClient r1, $r5, $r9, $r10;
        boolean z0;
        java.io.IOException r2, $r8;
        sun.net.ProgressSource $r3, $r4;
        java.io.InputStream $r6, $r7;
        sun.net.www.MessageHeader $r11, $r12;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r0.<sun.net.www.protocol.http.HttpURLConnection: int responseCode> = -1;
        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi>;
        if $r3 == null goto label0;

        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi>;
        virtualinvoke $r4.<sun.net.ProgressSource: void finishTracking()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.ProgressSource pi> = null;

     label0:
        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        if $r5 == null goto label8;

        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        if $r6 == null goto label6;

        r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        z0 = virtualinvoke r1.<sun.net.www.http.HttpClient: boolean isKeepingAlive()>();

     label1:
        $r7 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream inputStream>;
        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;
        r2 = $r8;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r1.<sun.net.www.http.HttpClient: void closeIdleConnection()>();

     label5:
        goto label7;

     label6:
        $r9 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        virtualinvoke $r9.<sun.net.www.http.HttpClient: void setDoNotRetry(boolean)>(1);
        $r10 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        virtualinvoke $r10.<sun.net.www.http.HttpClient: void closeServer()>();

     label7:
        r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http> = null;
        r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected> = 0;

     label8:
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream cachedInputStream> = null;
        $r11 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        if $r11 == null goto label9;

        $r12 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        virtualinvoke $r12.<sun.net.www.MessageHeader: void reset()>();

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean usingProxy()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        sun.net.www.http.HttpClient $r1, $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        if $r1 == null goto label2;

        $r2 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient http>;
        $r3 = virtualinvoke $r2.<sun.net.www.http.HttpClient: java.lang.String getProxyHostUsed()>();
        if $r3 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;

     label2:
        return 0;
    }

    private java.lang.String filterHeaderField(java.lang.String, java.lang.String)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String r1, r2, $r8, $r9, $r14, $r16;
        sun.misc.JavaNetHttpCookieAccess r3;
        java.lang.StringBuilder r4, $r11;
        java.util.List r5;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Iterator r6;
        java.net.HttpCookie r7;
        java.net.CookieHandler $r10;
        java.lang.Object $r12;
        int $i0;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        if r2 != null goto label0;

        return null;

     label0:
        $r8 = "set-cookie";
        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z1 != 0 goto label1;

        $r9 = "set-cookie2";
        $z2 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z2 == 0 goto label9;

     label1:
        $r10 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CookieHandler cookieHandler>;
        if $r10 != null goto label2;

        return r2;

     label2:
        r3 = staticinvoke <sun.misc.SharedSecrets: sun.misc.JavaNetHttpCookieAccess getJavaNetHttpCookieAccess()>();
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        r4 = $r11;
        r5 = interfaceinvoke r3.<sun.misc.JavaNetHttpCookieAccess: java.util.List parse(java.lang.String)>(r2);
        z0 = 0;
        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label6;

        $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.net.HttpCookie) $r12;
        $z4 = virtualinvoke r7.<java.net.HttpCookie: boolean isHttpOnly()>();
        if $z4 == 0 goto label4;

        goto label3;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label5:
        $r14 = interfaceinvoke r3.<sun.misc.JavaNetHttpCookieAccess: java.lang.String header(java.net.HttpCookie)>(r7);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        z0 = 1;
        goto label3;

     label6:
        $i0 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();
        if $i0 != 0 goto label7;

        $r16 = "";
        goto label8;

     label7:
        $r16 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        return $r16;

     label9:
        return r2;
    }

    private java.util.Map getFilteredHeaderFields()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.util.HashMap r1, $r13;
        java.util.Map r2, $r11, $r12, $r25;
        java.util.Iterator r3, r8;
        java.util.Map$Entry r4;
        java.lang.String r5, r9, r10;
        java.util.List r6, $r23;
        java.util.ArrayList r7, $r21;
        sun.net.www.MessageHeader $r14, $r15, $r16;
        java.util.Set $r17;
        boolean $z0, $z1, $z3;
        java.lang.Object $r18, $r19, $r20, $r22;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r11 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.util.Map filteredHeaders>;
        if $r11 == null goto label0;

        $r12 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.util.Map filteredHeaders>;
        return $r12;

     label0:
        $r13 = new java.util.HashMap;
        specialinvoke $r13.<java.util.HashMap: void <init>()>();
        r1 = $r13;
        $r14 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        if $r14 == null goto label1;

        $r15 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        r2 = virtualinvoke $r15.<sun.net.www.MessageHeader: java.util.Map getHeaders()>();
        goto label2;

     label1:
        $r16 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        r2 = virtualinvoke $r16.<sun.net.www.MessageHeader: java.util.Map getHeaders()>();

     label2:
        $r17 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label8;

        $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r18;
        $r19 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        r5 = (java.lang.String) $r19;
        $r20 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        r6 = (java.util.List) $r20;
        $r21 = new java.util.ArrayList;
        specialinvoke $r21.<java.util.ArrayList: void <init>()>();
        r7 = $r21;
        r8 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label6;

        $r22 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
        r9 = (java.lang.String) $r22;
        r10 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String filterHeaderField(java.lang.String,java.lang.String)>(r5, r9);
        if r10 == null goto label5;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r10);

     label5:
        goto label4;

     label6:
        $z3 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>();
        if $z3 != 0 goto label7;

        $r23 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r7);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r23);

     label7:
        goto label3;

     label8:
        $r25 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);
        r0.<sun.net.www.protocol.http.HttpURLConnection: java.util.Map filteredHeaders> = $r25;
        return $r25;
    }

    public java.lang.String getHeaderField(java.lang.String)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String r1, $r7, $r8, $r10, $r11;
        java.io.IOException r2, $r4;
        sun.net.www.MessageHeader $r5, $r6, $r9;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.lang.String;

     label0:
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream getInputStream()>();

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;

     label3:
        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        if $r5 == null goto label4;

        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        $r7 = virtualinvoke $r6.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>(r1);
        $r8 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String filterHeaderField(java.lang.String,java.lang.String)>(r1, $r7);
        return $r8;

     label4:
        $r9 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r10 = virtualinvoke $r9.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>(r1);
        $r11 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String filterHeaderField(java.lang.String,java.lang.String)>(r1, $r10);
        return $r11;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public java.util.Map getHeaderFields()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.io.IOException r1, $r3;
        java.util.Map $r4;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;

     label0:
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream getInputStream()>();

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;

     label3:
        $r4 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.util.Map getFilteredHeaderFields()>();
        return $r4;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public java.lang.String getHeaderField(int)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int i0;
        java.io.IOException r1, $r3;
        sun.net.www.MessageHeader $r4, $r5, $r7, $r10, $r12;
        java.lang.String $r6, $r8, $r9, $r11, $r13, $r14;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        i0 := @parameter0: int;

     label0:
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream getInputStream()>();

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;

     label3:
        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        if $r4 == null goto label4;

        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        $r6 = virtualinvoke $r5.<sun.net.www.MessageHeader: java.lang.String getKey(int)>(i0);
        $r7 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        $r8 = virtualinvoke $r7.<sun.net.www.MessageHeader: java.lang.String getValue(int)>(i0);
        $r9 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String filterHeaderField(java.lang.String,java.lang.String)>($r6, $r8);
        return $r9;

     label4:
        $r10 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r11 = virtualinvoke $r10.<sun.net.www.MessageHeader: java.lang.String getKey(int)>(i0);
        $r12 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r13 = virtualinvoke $r12.<sun.net.www.MessageHeader: java.lang.String getValue(int)>(i0);
        $r14 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String filterHeaderField(java.lang.String,java.lang.String)>($r11, $r13);
        return $r14;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public java.lang.String getHeaderFieldKey(int)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int i0;
        java.io.IOException r1, $r3;
        sun.net.www.MessageHeader $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        i0 := @parameter0: int;

     label0:
        virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream getInputStream()>();

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;

     label3:
        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        if $r4 == null goto label4;

        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader cachedHeaders>;
        $r6 = virtualinvoke $r5.<sun.net.www.MessageHeader: java.lang.String getKey(int)>(i0);
        return $r6;

     label4:
        $r7 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader responses>;
        $r8 = virtualinvoke $r7.<sun.net.www.MessageHeader: java.lang.String getKey(int)>(i0);
        return $r8;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void setRequestProperty(java.lang.String, java.lang.String)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String r1, r2;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r3;
        java.lang.NullPointerException $r4;
        sun.net.www.MessageHeader $r5;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $z0 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected>;
        if $z0 == 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected");
        throw $r3;

     label0:
        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("key is null");
        throw $r4;

     label1:
        $z1 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean isExternalMessageHeaderAllowed(java.lang.String,java.lang.String)>(r1, r2);
        if $z1 == 0 goto label2;

        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r5.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return;
    }

    public void addRequestProperty(java.lang.String, java.lang.String)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String r1, r2;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r3;
        java.lang.NullPointerException $r4;
        sun.net.www.MessageHeader $r5;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $z0 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected>;
        if $z0 == 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected");
        throw $r3;

     label0:
        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("key is null");
        throw $r4;

     label1:
        $z1 = specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: boolean isExternalMessageHeaderAllowed(java.lang.String,java.lang.String)>(r1, r2);
        if $z1 == 0 goto label2;

        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r5.<sun.net.www.MessageHeader: void add(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return;
    }

    public void setAuthenticationProperty(java.lang.String, java.lang.String)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String r1, r2;
        sun.net.www.MessageHeader $r3;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void checkMessageHeader(java.lang.String,java.lang.String)>(r1, r2);
        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        virtualinvoke $r3.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    public synchronized java.lang.String getRequestProperty(java.lang.String)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String r1, $r4, $r5, $r6, $r8;
        int i0, $i1;
        java.lang.String[] $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        sun.net.www.MessageHeader $r7;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        return null;

     label0:
        i0 = 0;

     label1:
        $r2 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] EXCLUDE_HEADERS>;
        $i1 = lengthof $r2;
        if i0 >= $i1 goto label3;

        $r3 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] EXCLUDE_HEADERS>;
        $r4 = $r3[i0];
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);
        if $z0 == 0 goto label2;

        return null;

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        $z1 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean setUserCookies>;
        if $z1 != 0 goto label5;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Cookie");
        if $z2 == 0 goto label4;

        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies>;
        return $r5;

     label4:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Cookie2");
        if $z3 == 0 goto label5;

        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies2>;
        return $r6;

     label5:
        $r7 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r8 = virtualinvoke $r7.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>(r1);
        return $r8;
    }

    public synchronized java.util.Map getRequestProperties()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.util.HashMap r1, $r8;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        sun.net.www.MessageHeader $r3, $r15;
        java.lang.String[] $r4, $r16;
        java.util.Map $r5, $r17;
        java.lang.String $r6, $r7, $r9, $r10, $r12, $r13;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $z0 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean connected>;
        if $z0 == 0 goto label0;

        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected");
        throw $r2;

     label0:
        $z1 = r0.<sun.net.www.protocol.http.HttpURLConnection: boolean setUserCookies>;
        if $z1 == 0 goto label1;

        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r4 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] EXCLUDE_HEADERS>;
        $r5 = virtualinvoke $r3.<sun.net.www.MessageHeader: java.util.Map getHeaders(java.lang.String[])>($r4);
        return $r5;

     label1:
        r1 = null;
        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies>;
        if $r6 != null goto label2;

        $r7 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies2>;
        if $r7 == null goto label4;

     label2:
        $r8 = new java.util.HashMap;
        specialinvoke $r8.<java.util.HashMap: void <init>()>();
        r1 = $r8;
        $r9 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies>;
        if $r9 == null goto label3;

        $r10 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies>;
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cookie", $r10);

     label3:
        $r12 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies2>;
        if $r12 == null goto label4;

        $r13 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String userCookies2>;
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cookie2", $r13);

     label4:
        $r15 = r0.<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader requests>;
        $r16 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] EXCLUDE_HEADERS2>;
        $r17 = virtualinvoke $r15.<sun.net.www.MessageHeader: java.util.Map filterAndAddHeaders(java.lang.String[],java.util.Map)>($r16, r1);
        return $r17;
    }

    public void setConnectTimeout(int)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        i0 := @parameter0: int;
        if i0 >= 0 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeouts can\'t be negative");
        throw $r1;

     label0:
        r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout> = i0;
        return;
    }

    public int getConnectTimeout()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int $i0, $i1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $i0 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;
        if $i0 >= 0 goto label0;

        $i1 = 0;
        goto label1;

     label0:
        $i1 = r0.<sun.net.www.protocol.http.HttpURLConnection: int connectTimeout>;

     label1:
        return $i1;
    }

    public void setReadTimeout(int)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        i0 := @parameter0: int;
        if i0 >= 0 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeouts can\'t be negative");
        throw $r1;

     label0:
        r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout> = i0;
        return;
    }

    public int getReadTimeout()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        int $i0, $i1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $i0 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;
        if $i0 >= 0 goto label0;

        $i1 = 0;
        goto label1;

     label0:
        $i1 = r0.<sun.net.www.protocol.http.HttpURLConnection: int readTimeout>;

     label1:
        return $i1;
    }

    public java.net.CookieHandler getCookieHandler()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.net.CookieHandler $r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.net.CookieHandler cookieHandler>;
        return $r1;
    }

    java.lang.String getMethod()
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.lang.String $r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection: java.lang.String method>;
        return $r1;
    }

    private sun.net.www.MessageHeader mapToMessageHeader(java.util.Map)
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        java.util.Map r1;
        sun.net.www.MessageHeader $r2, r3;
        java.util.Iterator r4, r8;
        java.util.Map$Entry r5;
        java.lang.String r6, r9;
        java.util.List r7;
        boolean $z0, $z1, $z2;
        java.util.Set $r10;
        java.lang.Object $r11, $r12, $r13, $r14;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection;
        r1 := @parameter0: java.util.Map;
        $r2 = new sun.net.www.MessageHeader;
        specialinvoke $r2.<sun.net.www.MessageHeader: void <init>()>();
        r3 = $r2;
        if r1 == null goto label0;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();
        if $z0 == 0 goto label1;

     label0:
        return r3;

     label1:
        $r10 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label7;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.Map$Entry) $r11;
        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        r6 = (java.lang.String) $r12;
        $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        r7 = (java.util.List) $r13;
        r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label6;

        $r14 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
        r9 = (java.lang.String) $r14;
        if r6 != null goto label4;

        virtualinvoke r3.<sun.net.www.MessageHeader: void prepend(java.lang.String,java.lang.String)>(r6, r9);
        goto label5;

     label4:
        virtualinvoke r3.<sun.net.www.MessageHeader: void add(java.lang.String,java.lang.String)>(r6, r9);

     label5:
        goto label3;

     label6:
        goto label2;

     label7:
        return r3;
    }

    static sun.util.logging.PlatformLogger access$000()
    {
        sun.util.logging.PlatformLogger $r0;

        $r0 = <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger>;
        return $r0;
    }

    static void access$100(sun.net.www.protocol.http.HttpURLConnection, boolean) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection r0;
        boolean z0;

        r0 := @parameter0: sun.net.www.protocol.http.HttpURLConnection;
        z0 := @parameter1: boolean;
        specialinvoke r0.<sun.net.www.protocol.http.HttpURLConnection: void checkResponseCredentials(boolean)>(z0);
        return;
    }

    static int access$200()
    {
        int $i0;

        $i0 = <sun.net.www.protocol.http.HttpURLConnection: int timeout4ESBuffer>;
        return $i0;
    }

    static int access$300()
    {
        int $i0;

        $i0 = <sun.net.www.protocol.http.HttpURLConnection: int bufSize4ES>;
        return $i0;
    }

    static void <clinit>()
    {
        java.lang.String r0, $r7, $r12, r14, $r18, $r43, $r44;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String[] $r1, $r39, $r40, $r42, $r45, $r46;
        sun.security.action.GetIntegerAction $r2, $r29, $r32;
        java.lang.Object $r3, $r6, $r9, $r21, $r24, $r27, $r30, $r33, $r36;
        java.lang.Integer $r4, $r31, $r34;
        sun.security.action.GetPropertyAction $r5, $r8;
        java.lang.StringBuilder $r10, $r11, $r13, $r15, $r16, $r17, $r19;
        sun.security.action.GetBooleanAction $r20, $r23, $r26, $r35;
        java.lang.Boolean $r22, $r25, $r28, $r37;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.HashSet $r38;
        java.util.Set $r41;
        sun.util.logging.PlatformLogger $r47;

        <sun.net.www.protocol.http.HttpURLConnection: java.lang.String HTTP_CONNECT> = "CONNECT";
        <sun.net.www.protocol.http.HttpURLConnection: boolean enableESBuffer> = 0;
        <sun.net.www.protocol.http.HttpURLConnection: int timeout4ESBuffer> = 0;
        <sun.net.www.protocol.http.HttpURLConnection: int bufSize4ES> = 0;
        $r1 = newarray (java.lang.String)[12];
        $r1[0] = "Access-Control-Request-Headers";
        $r1[1] = "Access-Control-Request-Method";
        $r1[2] = "Connection";
        $r1[3] = "Content-Length";
        $r1[4] = "Content-Transfer-Encoding";
        $r1[5] = "Host";
        $r1[6] = "Keep-Alive";
        $r1[7] = "Origin";
        $r1[8] = "Trailer";
        $r1[9] = "Transfer-Encoding";
        $r1[10] = "Upgrade";
        $r1[11] = "Via";
        <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] restrictedHeaders> = $r1;
        $r2 = new sun.security.action.GetIntegerAction;
        specialinvoke $r2.<sun.security.action.GetIntegerAction: void <init>(java.lang.String,int)>("http.maxRedirects", 20);
        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);
        $r4 = (java.lang.Integer) $r3;
        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
        <sun.net.www.protocol.http.HttpURLConnection: int maxRedirects> = $i1;
        $r5 = new sun.security.action.GetPropertyAction;
        specialinvoke $r5.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>("java.version");
        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r5);
        $r7 = (java.lang.String) $r6;
        <sun.net.www.protocol.http.HttpURLConnection: java.lang.String version> = $r7;
        $r8 = new sun.security.action.GetPropertyAction;
        specialinvoke $r8.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>("http.agent");
        $r9 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r8);
        r0 = (java.lang.String) $r9;
        if r0 != null goto label0;

        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Java/");
        $r12 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String version>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label1;

     label0:
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Java/");
        $r18 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String version>;
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        r14 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        <sun.net.www.protocol.http.HttpURLConnection: java.lang.String userAgent> = r14;
        $r20 = new sun.security.action.GetBooleanAction;
        specialinvoke $r20.<sun.security.action.GetBooleanAction: void <init>(java.lang.String)>("http.auth.digest.validateProxy");
        $r21 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r20);
        $r22 = (java.lang.Boolean) $r21;
        $z0 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();
        <sun.net.www.protocol.http.HttpURLConnection: boolean validateProxy> = $z0;
        $r23 = new sun.security.action.GetBooleanAction;
        specialinvoke $r23.<sun.security.action.GetBooleanAction: void <init>(java.lang.String)>("http.auth.digest.validateServer");
        $r24 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r23);
        $r25 = (java.lang.Boolean) $r24;
        $z1 = virtualinvoke $r25.<java.lang.Boolean: boolean booleanValue()>();
        <sun.net.www.protocol.http.HttpURLConnection: boolean validateServer> = $z1;
        $r26 = new sun.security.action.GetBooleanAction;
        specialinvoke $r26.<sun.security.action.GetBooleanAction: void <init>(java.lang.String)>("sun.net.http.errorstream.enableBuffering");
        $r27 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r26);
        $r28 = (java.lang.Boolean) $r27;
        $z2 = virtualinvoke $r28.<java.lang.Boolean: boolean booleanValue()>();
        <sun.net.www.protocol.http.HttpURLConnection: boolean enableESBuffer> = $z2;
        $r29 = new sun.security.action.GetIntegerAction;
        specialinvoke $r29.<sun.security.action.GetIntegerAction: void <init>(java.lang.String,int)>("sun.net.http.errorstream.timeout", 300);
        $r30 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r29);
        $r31 = (java.lang.Integer) $r30;
        $i2 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();
        <sun.net.www.protocol.http.HttpURLConnection: int timeout4ESBuffer> = $i2;
        $i3 = <sun.net.www.protocol.http.HttpURLConnection: int timeout4ESBuffer>;
        if $i3 > 0 goto label2;

        <sun.net.www.protocol.http.HttpURLConnection: int timeout4ESBuffer> = 300;

     label2:
        $r32 = new sun.security.action.GetIntegerAction;
        specialinvoke $r32.<sun.security.action.GetIntegerAction: void <init>(java.lang.String,int)>("sun.net.http.errorstream.bufferSize", 4096);
        $r33 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r32);
        $r34 = (java.lang.Integer) $r33;
        $i4 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();
        <sun.net.www.protocol.http.HttpURLConnection: int bufSize4ES> = $i4;
        $i5 = <sun.net.www.protocol.http.HttpURLConnection: int bufSize4ES>;
        if $i5 > 0 goto label3;

        <sun.net.www.protocol.http.HttpURLConnection: int bufSize4ES> = 4096;

     label3:
        $r35 = new sun.security.action.GetBooleanAction;
        specialinvoke $r35.<sun.security.action.GetBooleanAction: void <init>(java.lang.String)>("sun.net.http.allowRestrictedHeaders");
        $r36 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r35);
        $r37 = (java.lang.Boolean) $r36;
        $z3 = virtualinvoke $r37.<java.lang.Boolean: boolean booleanValue()>();
        <sun.net.www.protocol.http.HttpURLConnection: boolean allowRestrictedHeaders> = $z3;
        $z4 = <sun.net.www.protocol.http.HttpURLConnection: boolean allowRestrictedHeaders>;
        if $z4 != 0 goto label6;

        $r38 = new java.util.HashSet;
        $r39 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] restrictedHeaders>;
        $i6 = lengthof $r39;
        specialinvoke $r38.<java.util.HashSet: void <init>(int)>($i6);
        <sun.net.www.protocol.http.HttpURLConnection: java.util.Set restrictedHeaderSet> = $r38;
        i0 = 0;

     label4:
        $r40 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] restrictedHeaders>;
        $i7 = lengthof $r40;
        if i0 >= $i7 goto label5;

        $r41 = <sun.net.www.protocol.http.HttpURLConnection: java.util.Set restrictedHeaderSet>;
        $r42 = <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] restrictedHeaders>;
        $r43 = $r42[i0];
        $r44 = virtualinvoke $r43.<java.lang.String: java.lang.String toLowerCase()>();
        interfaceinvoke $r41.<java.util.Set: boolean add(java.lang.Object)>($r44);
        i0 = i0 + 1;
        goto label4;

     label5:
        goto label7;

     label6:
        <sun.net.www.protocol.http.HttpURLConnection: java.util.Set restrictedHeaderSet> = null;

     label7:
        $r45 = newarray (java.lang.String)[2];
        $r45[0] = "Proxy-Authorization";
        $r45[1] = "Authorization";
        <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] EXCLUDE_HEADERS> = $r45;
        $r46 = newarray (java.lang.String)[4];
        $r46[0] = "Proxy-Authorization";
        $r46[1] = "Authorization";
        $r46[2] = "Cookie";
        $r46[3] = "Cookie2";
        <sun.net.www.protocol.http.HttpURLConnection: java.lang.String[] EXCLUDE_HEADERS2> = $r46;
        $r47 = staticinvoke <sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>("sun.net.www.protocol.http.HttpURLConnection");
        <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger logger> = $r47;
        return;
    }
}
