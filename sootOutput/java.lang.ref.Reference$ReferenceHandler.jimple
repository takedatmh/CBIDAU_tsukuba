class java.lang.ref.Reference$ReferenceHandler extends java.lang.Thread
{

    void <init>(java.lang.ThreadGroup, java.lang.String)
    {
        java.lang.ref.Reference$ReferenceHandler r0;
        java.lang.ThreadGroup r1;
        java.lang.String r2;

        r0 := @this: java.lang.ref.Reference$ReferenceHandler;
        r1 := @parameter0: java.lang.ThreadGroup;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>(r1, r2);
        return;
    }

    public void run()
    {
        java.lang.ref.Reference$ReferenceHandler r0;
        java.lang.ref.Reference$Lock $r1, r2, $r9;
        java.lang.ref.Reference r3, r4, $r6, $r7;
        java.lang.Throwable r5, $r12;
        java.lang.InterruptedException $r10, r11;
        boolean $z0;
        sun.misc.Cleaner $r13;
        java.lang.ref.ReferenceQueue r14, $r15;

        r0 := @this: java.lang.ref.Reference$ReferenceHandler;

     label0:
        $r1 = staticinvoke <java.lang.ref.Reference: java.lang.ref.Reference$Lock access$100()>();
        r2 = $r1;
        entermonitor $r1;

     label1:
        $r6 = staticinvoke <java.lang.ref.Reference: java.lang.ref.Reference access$200()>();
        if $r6 == null goto label4;

        r3 = staticinvoke <java.lang.ref.Reference: java.lang.ref.Reference access$200()>();
        r4 = r3.<java.lang.ref.Reference: java.lang.ref.Reference next>;
        if r4 != r3 goto label2;

        $r7 = null;
        goto label3;

     label2:
        $r7 = r4;

     label3:
        staticinvoke <java.lang.ref.Reference: java.lang.ref.Reference access$202(java.lang.ref.Reference)>($r7);
        r3.<java.lang.ref.Reference: java.lang.ref.Reference next> = r3;
        goto label9;

     label4:
        $r9 = staticinvoke <java.lang.ref.Reference: java.lang.ref.Reference$Lock access$100()>();
        virtualinvoke $r9.<java.lang.Object: void wait()>();

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;
        r11 = $r10;

     label7:
        exitmonitor r2;

     label8:
        goto label0;

     label9:
        exitmonitor r2;

     label10:
        goto label14;

     label11:
        $r12 := @caughtexception;

     label12:
        r5 = $r12;
        exitmonitor r2;

     label13:
        throw r5;

     label14:
        $z0 = r3 instanceof sun.misc.Cleaner;
        if $z0 == 0 goto label15;

        $r13 = (sun.misc.Cleaner) r3;
        virtualinvoke $r13.<sun.misc.Cleaner: void clean()>();
        goto label0;

     label15:
        r14 = r3.<java.lang.ref.Reference: java.lang.ref.ReferenceQueue queue>;
        $r15 = <java.lang.ref.ReferenceQueue: java.lang.ref.ReferenceQueue NULL>;
        if r14 == $r15 goto label16;

        virtualinvoke r14.<java.lang.ref.ReferenceQueue: boolean enqueue(java.lang.ref.Reference)>(r3);

     label16:
        goto label0;

        catch java.lang.InterruptedException from label4 to label5 with label6;
        catch java.lang.Throwable from label1 to label8 with label11;
        catch java.lang.Throwable from label9 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }
}
