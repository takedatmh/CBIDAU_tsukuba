final class sun.nio.ch.Util$4 extends java.lang.Object implements java.security.PrivilegedAction
{

    void <init>()
    {
        sun.nio.ch.Util$4 r0;

        r0 := @this: sun.nio.ch.Util$4;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run()
    {
        sun.nio.ch.Util$4 r0;
        java.lang.Class r1, $r2, $r5;
        java.lang.reflect.Constructor r3;
        java.lang.Class[] $r4;
        java.lang.ClassNotFoundException $r7, r8;
        java.lang.InternalError $r9, $r12, $r15, $r18;
        java.lang.NoSuchMethodException $r10, r11;
        java.lang.IllegalArgumentException $r13, r14;
        java.lang.ClassCastException $r16, r17;

        r0 := @this: sun.nio.ch.Util$4;

     label0:
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.nio.DirectByteBufferR");
        $r4 = newarray (java.lang.Class)[4];
        $r2 = <java.lang.Integer: java.lang.Class TYPE>;
        $r4[0] = $r2;
        $r5 = <java.lang.Long: java.lang.Class TYPE>;
        $r4[1] = $r5;
        $r4[2] = class "java/io/FileDescriptor";
        $r4[3] = class "java/lang/Runnable";
        r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r4);
        virtualinvoke r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);
        staticinvoke <sun.nio.ch.Util: java.lang.reflect.Constructor access$402(java.lang.reflect.Constructor)>(r3);

     label1:
        goto label6;

     label2:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = new java.lang.InternalError;
        specialinvoke $r9.<java.lang.InternalError: void <init>()>();
        throw $r9;

     label3:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = new java.lang.InternalError;
        specialinvoke $r12.<java.lang.InternalError: void <init>()>();
        throw $r12;

     label4:
        $r13 := @caughtexception;
        r14 = $r13;
        $r15 = new java.lang.InternalError;
        specialinvoke $r15.<java.lang.InternalError: void <init>()>();
        throw $r15;

     label5:
        $r16 := @caughtexception;
        r17 = $r16;
        $r18 = new java.lang.InternalError;
        specialinvoke $r18.<java.lang.InternalError: void <init>()>();
        throw $r18;

     label6:
        return null;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
        catch java.lang.NoSuchMethodException from label0 to label1 with label3;
        catch java.lang.IllegalArgumentException from label0 to label1 with label4;
        catch java.lang.ClassCastException from label0 to label1 with label5;
    }

    public volatile java.lang.Object run()
    {
        sun.nio.ch.Util$4 r0;
        java.lang.Void $r1;

        r0 := @this: sun.nio.ch.Util$4;
        $r1 = virtualinvoke r0.<sun.nio.ch.Util$4: java.lang.Void run()>();
        return $r1;
    }
}
