class sun.security.x509.AVAKeyword extends java.lang.Object
{
    private static final java.util.Map oidMap;
    private static final java.util.Map keywordMap;
    private java.lang.String keyword;
    private sun.security.util.ObjectIdentifier oid;
    private boolean rfc1779Compliant;
    private boolean rfc2253Compliant;

    private void <init>(java.lang.String, sun.security.util.ObjectIdentifier, boolean, boolean)
    {
        sun.security.x509.AVAKeyword r0;
        java.lang.String r1;
        sun.security.util.ObjectIdentifier r2;
        boolean z0, z1;
        java.util.Map $r3, $r5;

        r0 := @this: sun.security.x509.AVAKeyword;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: sun.security.util.ObjectIdentifier;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.AVAKeyword: java.lang.String keyword> = r1;
        r0.<sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier oid> = r2;
        r0.<sun.security.x509.AVAKeyword: boolean rfc1779Compliant> = z0;
        r0.<sun.security.x509.AVAKeyword: boolean rfc2253Compliant> = z1;
        $r3 = <sun.security.x509.AVAKeyword: java.util.Map oidMap>;
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);
        $r5 = <sun.security.x509.AVAKeyword: java.util.Map keywordMap>;
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r0);
        return;
    }

    private boolean isCompliant(int)
    {
        sun.security.x509.AVAKeyword r0;
        int i0;
        java.lang.StringBuilder $r1, $r3, $r4;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r5;

        r0 := @this: sun.security.x509.AVAKeyword;
        i0 := @parameter0: int;
        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label0;
            case 3: goto label1;
            default: goto label3;
        };

     label0:
        $z0 = r0.<sun.security.x509.AVAKeyword: boolean rfc1779Compliant>;
        return $z0;

     label1:
        $z1 = r0.<sun.security.x509.AVAKeyword: boolean rfc2253Compliant>;
        return $z1;

     label2:
        return 1;

     label3:
        $r2 = new java.lang.IllegalArgumentException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid standard ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r2;
    }

    static sun.security.util.ObjectIdentifier getOID(java.lang.String, int) throws java.io.IOException
    {
        java.lang.String r0;
        int i0;
        java.util.Map $r1;
        sun.security.util.ObjectIdentifier $r2;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
        $r2 = staticinvoke <sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map)>(r0, i0, $r1);
        return $r2;
    }

    static sun.security.util.ObjectIdentifier getOID(java.lang.String, int, java.util.Map) throws java.io.IOException
    {
        java.lang.String r0, r4, r6, $r11, $r21, $r27;
        int i0, $i2;
        java.util.Map r1, $r13;
        java.util.Locale $r2;
        java.lang.StringBuilder $r3, $r8, $r9, $r10, $r18, $r19, $r20, $r23, $r24, $r25, $r26;
        sun.security.x509.AVAKeyword r5;
        char c1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.io.IOException $r7, $r17, $r22;
        java.lang.Object $r12, $r14;
        sun.security.util.ObjectIdentifier $r15, $r16, $r28;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r1 := @parameter2: java.util.Map;
        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;
        r6 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);
        if i0 != 3 goto label1;

        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(" ");
        if $z0 != 0 goto label0;

        $z1 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>(" ");
        if $z1 == 0 goto label2;

     label0:
        $r7 = new java.io.IOException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid leading or trailing space in keyword \"");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r11);
        throw $r7;

     label1:
        r6 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

     label2:
        $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);
        r4 = (java.lang.String) $r12;
        if r4 != null goto label4;

        $r13 = <sun.security.x509.AVAKeyword: java.util.Map keywordMap>;
        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);
        r5 = (sun.security.x509.AVAKeyword) $r14;
        if r5 == null goto label3;

        $z2 = specialinvoke r5.<sun.security.x509.AVAKeyword: boolean isCompliant(int)>(i0);
        if $z2 == 0 goto label3;

        $r15 = r5.<sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier oid>;
        return $r15;

     label3:
        goto label5;

     label4:
        $r16 = new sun.security.util.ObjectIdentifier;
        specialinvoke $r16.<sun.security.util.ObjectIdentifier: void <init>(java.lang.String)>(r4);
        return $r16;

     label5:
        if i0 != 2 goto label7;

        $z3 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("OID.");
        if $z3 != 0 goto label6;

        $r17 = new java.io.IOException;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid RFC1779 keyword: ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r21);
        throw $r17;

     label6:
        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(4);
        goto label8;

     label7:
        if i0 != 1 goto label8;

        $z4 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("OID.");
        if $z4 == 0 goto label8;

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(4);

     label8:
        z5 = 0;
        $i2 = virtualinvoke r6.<java.lang.String: int length()>();
        if $i2 == 0 goto label9;

        c1 = virtualinvoke r6.<java.lang.String: char charAt(int)>(0);
        if c1 < 48 goto label9;

        if c1 > 57 goto label9;

        z5 = 1;

     label9:
        if z5 != 0 goto label10;

        $r22 = new java.io.IOException;
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid keyword \"");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>($r27);
        throw $r22;

     label10:
        $r28 = new sun.security.util.ObjectIdentifier;
        specialinvoke $r28.<sun.security.util.ObjectIdentifier: void <init>(java.lang.String)>(r6);
        return $r28;
    }

    static java.lang.String getKeyword(sun.security.util.ObjectIdentifier, int)
    {
        sun.security.util.ObjectIdentifier r0;
        int i0;
        java.util.Map $r1;
        java.lang.String $r2;

        r0 := @parameter0: sun.security.util.ObjectIdentifier;
        i0 := @parameter1: int;
        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
        $r2 = staticinvoke <sun.security.x509.AVAKeyword: java.lang.String getKeyword(sun.security.util.ObjectIdentifier,int,java.util.Map)>(r0, i0, $r1);
        return $r2;
    }

    static java.lang.String getKeyword(sun.security.util.ObjectIdentifier, int, java.util.Map)
    {
        sun.security.util.ObjectIdentifier r0;
        int i0, i1, $i2, $i4;
        java.util.Map r1, $r6;
        java.lang.String r2, r3, $r8, r10, $r16;
        sun.security.x509.AVAKeyword r4;
        java.lang.Object $r5, $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r9, $r11, $r12;
        char c3, c5;
        java.lang.StringBuilder $r13, $r14, $r15;

        r0 := @parameter0: sun.security.util.ObjectIdentifier;
        i0 := @parameter1: int;
        r1 := @parameter2: java.util.Map;
        r2 = virtualinvoke r0.<sun.security.util.ObjectIdentifier: java.lang.String toString()>();
        $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);
        r3 = (java.lang.String) $r5;
        if r3 != null goto label1;

        $r6 = <sun.security.x509.AVAKeyword: java.util.Map oidMap>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        r4 = (sun.security.x509.AVAKeyword) $r7;
        if r4 == null goto label0;

        $z0 = specialinvoke r4.<sun.security.x509.AVAKeyword: boolean isCompliant(int)>(i0);
        if $z0 == 0 goto label0;

        $r8 = r4.<sun.security.x509.AVAKeyword: java.lang.String keyword>;
        return $r8;

     label0:
        goto label10;

     label1:
        $i2 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i2 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;
        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("keyword cannot be empty");
        throw $r9;

     label2:
        r10 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();
        c3 = virtualinvoke r10.<java.lang.String: char charAt(int)>(0);
        if c3 < 65 goto label3;

        if c3 > 122 goto label3;

        if c3 <= 90 goto label4;

        if c3 >= 97 goto label4;

     label3:
        $r11 = new java.lang.IllegalArgumentException;
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("keyword does not start with letter");
        throw $r11;

     label4:
        i1 = 1;

     label5:
        $i4 = virtualinvoke r10.<java.lang.String: int length()>();
        if i1 >= $i4 goto label9;

        c5 = virtualinvoke r10.<java.lang.String: char charAt(int)>(i1);
        if c5 < 65 goto label6;

        if c5 > 122 goto label6;

        if c5 <= 90 goto label8;

        if c5 >= 97 goto label8;

     label6:
        if c5 < 48 goto label7;

        if c5 <= 57 goto label8;

     label7:
        if c5 == 95 goto label8;

        $r12 = new java.lang.IllegalArgumentException;
        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("keyword character is not a letter, digit, or underscore");
        throw $r12;

     label8:
        i1 = i1 + 1;
        goto label5;

     label9:
        return r10;

     label10:
        if i0 != 3 goto label11;

        return r2;

     label11:
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OID.");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r16;
    }

    static boolean hasKeyword(sun.security.util.ObjectIdentifier, int)
    {
        sun.security.util.ObjectIdentifier r0;
        int i0;
        java.util.Map $r1;
        sun.security.x509.AVAKeyword r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: sun.security.util.ObjectIdentifier;
        i0 := @parameter1: int;
        $r1 = <sun.security.x509.AVAKeyword: java.util.Map oidMap>;
        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (sun.security.x509.AVAKeyword) $r3;
        if r2 != null goto label0;

        return 0;

     label0:
        $z0 = specialinvoke r2.<sun.security.x509.AVAKeyword: boolean isCompliant(int)>(i0);
        return $z0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r2;
        sun.security.util.ObjectIdentifier $r1, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43;
        sun.security.x509.AVAKeyword $r3, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <sun.security.x509.AVAKeyword: java.util.Map oidMap> = $r0;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        <sun.security.x509.AVAKeyword: java.util.Map keywordMap> = $r2;
        $r3 = new sun.security.x509.AVAKeyword;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier commonName_oid>;
        specialinvoke $r3.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("CN", $r1, 1, 1);
        $r4 = new sun.security.x509.AVAKeyword;
        $r5 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier countryName_oid>;
        specialinvoke $r4.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("C", $r5, 1, 1);
        $r6 = new sun.security.x509.AVAKeyword;
        $r7 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier localityName_oid>;
        specialinvoke $r6.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("L", $r7, 1, 1);
        $r8 = new sun.security.x509.AVAKeyword;
        $r9 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier stateName_oid>;
        specialinvoke $r8.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("S", $r9, 0, 0);
        $r10 = new sun.security.x509.AVAKeyword;
        $r11 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier stateName_oid>;
        specialinvoke $r10.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("ST", $r11, 1, 1);
        $r12 = new sun.security.x509.AVAKeyword;
        $r13 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier orgName_oid>;
        specialinvoke $r12.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("O", $r13, 1, 1);
        $r14 = new sun.security.x509.AVAKeyword;
        $r15 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier orgUnitName_oid>;
        specialinvoke $r14.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("OU", $r15, 1, 1);
        $r16 = new sun.security.x509.AVAKeyword;
        $r17 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier title_oid>;
        specialinvoke $r16.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("T", $r17, 0, 0);
        $r18 = new sun.security.x509.AVAKeyword;
        $r19 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier ipAddress_oid>;
        specialinvoke $r18.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("IP", $r19, 0, 0);
        $r20 = new sun.security.x509.AVAKeyword;
        $r21 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier streetAddress_oid>;
        specialinvoke $r20.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("STREET", $r21, 1, 1);
        $r22 = new sun.security.x509.AVAKeyword;
        $r23 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier DOMAIN_COMPONENT_OID>;
        specialinvoke $r22.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("DC", $r23, 0, 1);
        $r24 = new sun.security.x509.AVAKeyword;
        $r25 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier DNQUALIFIER_OID>;
        specialinvoke $r24.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("DNQUALIFIER", $r25, 0, 0);
        $r26 = new sun.security.x509.AVAKeyword;
        $r27 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier DNQUALIFIER_OID>;
        specialinvoke $r26.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("DNQ", $r27, 0, 0);
        $r28 = new sun.security.x509.AVAKeyword;
        $r29 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier SURNAME_OID>;
        specialinvoke $r28.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("SURNAME", $r29, 0, 0);
        $r30 = new sun.security.x509.AVAKeyword;
        $r31 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier GIVENNAME_OID>;
        specialinvoke $r30.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("GIVENNAME", $r31, 0, 0);
        $r32 = new sun.security.x509.AVAKeyword;
        $r33 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier INITIALS_OID>;
        specialinvoke $r32.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("INITIALS", $r33, 0, 0);
        $r34 = new sun.security.x509.AVAKeyword;
        $r35 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier GENERATIONQUALIFIER_OID>;
        specialinvoke $r34.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("GENERATION", $r35, 0, 0);
        $r36 = new sun.security.x509.AVAKeyword;
        $r37 = <sun.security.pkcs.PKCS9Attribute: sun.security.util.ObjectIdentifier EMAIL_ADDRESS_OID>;
        specialinvoke $r36.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("EMAIL", $r37, 0, 0);
        $r38 = new sun.security.x509.AVAKeyword;
        $r39 = <sun.security.pkcs.PKCS9Attribute: sun.security.util.ObjectIdentifier EMAIL_ADDRESS_OID>;
        specialinvoke $r38.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("EMAILADDRESS", $r39, 0, 0);
        $r40 = new sun.security.x509.AVAKeyword;
        $r41 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier userid_oid>;
        specialinvoke $r40.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("UID", $r41, 0, 1);
        $r42 = new sun.security.x509.AVAKeyword;
        $r43 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier SERIALNUMBER_OID>;
        specialinvoke $r42.<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>("SERIALNUMBER", $r43, 0, 0);
        return;
    }
}
