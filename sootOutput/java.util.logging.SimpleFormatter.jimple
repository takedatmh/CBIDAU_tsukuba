public class java.util.logging.SimpleFormatter extends java.util.logging.Formatter
{
    private static final java.lang.String format;
    private final java.util.Date dat;

    public void <init>()
    {
        java.util.logging.SimpleFormatter r0;
        java.util.Date $r1;

        r0 := @this: java.util.logging.SimpleFormatter;
        specialinvoke r0.<java.util.logging.Formatter: void <init>()>();
        $r1 = new java.util.Date;
        specialinvoke $r1.<java.util.Date: void <init>()>();
        r0.<java.util.logging.SimpleFormatter: java.util.Date dat> = $r1;
        return;
    }

    public synchronized java.lang.String format(java.util.logging.LogRecord)
    {
        java.util.logging.SimpleFormatter r0;
        java.util.logging.LogRecord r1;
        java.lang.String r2, r3, r4, $r8, $r9, $r13, $r19, $r22, $r24, $r25;
        java.io.StringWriter r5, $r16;
        java.io.PrintWriter r6, $r17;
        java.util.Date $r7, $r21;
        long $l0;
        java.lang.StringBuilder $r10, $r11, $r12, $r14;
        java.lang.Throwable $r15, $r18;
        java.lang.Object[] $r20;
        java.util.logging.Level $r23;

        r0 := @this: java.util.logging.SimpleFormatter;
        r1 := @parameter0: java.util.logging.LogRecord;
        $r7 = r0.<java.util.logging.SimpleFormatter: java.util.Date dat>;
        $l0 = virtualinvoke r1.<java.util.logging.LogRecord: long getMillis()>();
        virtualinvoke $r7.<java.util.Date: void setTime(long)>($l0);
        $r8 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();
        if $r8 == null goto label0;

        r2 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();
        $r9 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();
        if $r9 == null goto label1;

        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r13 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label1;

     label0:
        r2 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();

     label1:
        r3 = virtualinvoke r0.<java.util.logging.SimpleFormatter: java.lang.String formatMessage(java.util.logging.LogRecord)>(r1);
        r4 = "";
        $r15 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();
        if $r15 == null goto label2;

        $r16 = new java.io.StringWriter;
        specialinvoke $r16.<java.io.StringWriter: void <init>()>();
        r5 = $r16;
        $r17 = new java.io.PrintWriter;
        specialinvoke $r17.<java.io.PrintWriter: void <init>(java.io.Writer)>(r5);
        r6 = $r17;
        virtualinvoke r6.<java.io.PrintWriter: void println()>();
        $r18 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();
        virtualinvoke $r18.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r6);
        virtualinvoke r6.<java.io.PrintWriter: void close()>();
        r4 = virtualinvoke r5.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        $r19 = <java.util.logging.SimpleFormatter: java.lang.String format>;
        $r20 = newarray (java.lang.Object)[6];
        $r21 = r0.<java.util.logging.SimpleFormatter: java.util.Date dat>;
        $r20[0] = $r21;
        $r20[1] = r2;
        $r22 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();
        $r20[2] = $r22;
        $r23 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();
        $r24 = virtualinvoke $r23.<java.util.logging.Level: java.lang.String getLocalizedLevelName()>();
        $r20[3] = $r24;
        $r20[4] = r3;
        $r20[5] = r4;
        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r19, $r20);
        return $r25;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <sun.util.logging.LoggingSupport: java.lang.String getSimpleFormat()>();
        <java.util.logging.SimpleFormatter: java.lang.String format> = $r0;
        return;
    }
}
