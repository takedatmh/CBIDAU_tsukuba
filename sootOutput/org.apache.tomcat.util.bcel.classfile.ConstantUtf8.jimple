public final class org.apache.tomcat.util.bcel.classfile.ConstantUtf8 extends org.apache.tomcat.util.bcel.classfile.Constant
{
    private final java.lang.String bytes;

    static org.apache.tomcat.util.bcel.classfile.ConstantUtf8 getInstance(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r0;
        org.apache.tomcat.util.bcel.classfile.ConstantUtf8 $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.io.DataInput;
        $r1 = new org.apache.tomcat.util.bcel.classfile.ConstantUtf8;
        $r2 = interfaceinvoke r0.<java.io.DataInput: java.lang.String readUTF()>();
        specialinvoke $r1.<org.apache.tomcat.util.bcel.classfile.ConstantUtf8: void <init>(java.lang.String)>($r2);
        return $r1;
    }

    private void <init>(java.lang.String)
    {
        org.apache.tomcat.util.bcel.classfile.ConstantUtf8 r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.tomcat.util.bcel.classfile.ConstantUtf8;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.apache.tomcat.util.bcel.classfile.Constant: void <init>(byte)>(1);
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bytes must not be null!");
        throw $r2;

     label0:
        r0.<org.apache.tomcat.util.bcel.classfile.ConstantUtf8: java.lang.String bytes> = r1;
        return;
    }

    public final java.lang.String getBytes()
    {
        org.apache.tomcat.util.bcel.classfile.ConstantUtf8 r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.bcel.classfile.ConstantUtf8;
        $r1 = r0.<org.apache.tomcat.util.bcel.classfile.ConstantUtf8: java.lang.String bytes>;
        return $r1;
    }
}
