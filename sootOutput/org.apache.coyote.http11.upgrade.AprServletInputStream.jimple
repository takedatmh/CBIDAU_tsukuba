public class org.apache.coyote.http11.upgrade.AprServletInputStream extends org.apache.coyote.http11.upgrade.AbstractServletInputStream
{
    private static final org.apache.juli.logging.Log log;
    private final org.apache.tomcat.util.net.SocketWrapper wrapper;
    private final long socket;
    private volatile boolean eagain;
    private volatile boolean closed;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/coyote/http11/upgrade/AprServletInputStream");
        <org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.juli.logging.Log log> = $r0;
        return;
    }

    public void <init>(org.apache.tomcat.util.net.SocketWrapper)
    {
        org.apache.coyote.http11.upgrade.AprServletInputStream r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        java.lang.Object $r2;
        java.lang.Long $r3;
        long $l0;

        r0 := @this: org.apache.coyote.http11.upgrade.AprServletInputStream;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        specialinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: void <init>()>();
        r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: boolean eagain> = 0;
        r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: boolean closed> = 0;
        r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.net.SocketWrapper wrapper> = r1;
        $r2 = virtualinvoke r1.<org.apache.tomcat.util.net.SocketWrapper: java.lang.Object getSocket()>();
        $r3 = (java.lang.Long) $r2;
        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();
        r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: long socket> = $l0;
        return;
    }

    protected int doRead(boolean, byte[], int, int) throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AprServletInputStream r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        byte[] r1;
        int i0, i1, i2, $i10, $i11, $i13, $i14, $i15;
        org.apache.tomcat.util.res.StringManager $r2, $r22, $r28, $r31, $r34;
        java.util.concurrent.locks.Lock r3;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock r4;
        java.lang.Throwable r5, r6, $r14, $r16, r17, $r18;
        java.io.IOException $r7, $r33;
        java.lang.Object[] $r8, $r23, $r35;
        long $l3, $l4, $l5, $l9, $l12, $l16;
        java.lang.Long $r9, $r24, $r37;
        java.lang.String $r10, $r26, $r29, $r32, $r39;
        org.apache.tomcat.util.net.SocketWrapper $r11, $r12, $r13, $r15, $r19, $r25, $r38;
        byte $b6, $b7;
        org.apache.juli.logging.Log $r20, $r21;
        java.io.EOFException $r27, $r30;
        java.lang.Integer $r36;

        r0 := @this: org.apache.coyote.http11.upgrade.AprServletInputStream;
        z0 := @parameter0: boolean;
        r1 := @parameter1: byte[];
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $z2 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: boolean closed>;
        if $z2 == 0 goto label0;

        $r7 = new java.io.IOException;
        $r2 = <org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = newarray (java.lang.Object)[1];
        $l3 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: long socket>;
        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
        $r8[0] = $r9;
        $r10 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("apr.closed", $r8);
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r10);
        throw $r7;

     label0:
        $r11 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        r3 = virtualinvoke $r11.<org.apache.tomcat.util.net.SocketWrapper: java.util.concurrent.locks.Lock getBlockingStatusReadLock()>();
        $r12 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        r4 = virtualinvoke $r12.<org.apache.tomcat.util.net.SocketWrapper: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock getBlockingStatusWriteLock()>();
        z1 = 0;
        i2 = 0;

     label1:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void lock()>();
        $r13 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        $z3 = virtualinvoke $r13.<org.apache.tomcat.util.net.SocketWrapper: boolean getBlockingStatus()>();
        if $z3 != z0 goto label3;

        $l4 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: long socket>;
        i2 = staticinvoke <org.apache.tomcat.jni.Socket: int recv(long,byte[],int,int)>($l4, r1, i0, i1);
        z1 = 1;
        goto label3;

     label2:
        $r14 := @caughtexception;
        r5 = $r14;
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r5;

     label3:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();
        if z1 != 0 goto label13;

     label4:
        virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();
        $r15 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        virtualinvoke $r15.<org.apache.tomcat.util.net.SocketWrapper: void setBlockingStatus(boolean)>(z0);
        $l5 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: long socket>;
        $b6 = 8;
        if z0 == 0 goto label5;

        $b7 = 0;
        goto label6;

     label5:
        $b7 = 1;

     label6:
        staticinvoke <org.apache.tomcat.jni.Socket: int optSet(long,int,int)>($l5, $b6, $b7);

     label7:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void lock()>();
        virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        $l9 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: long socket>;
        i2 = staticinvoke <org.apache.tomcat.jni.Socket: int recv(long,byte[],int,int)>($l9, r1, i0, i1);
        goto label9;

     label8:
        $r16 := @caughtexception;
        r17 = $r16;
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r17;

     label9:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();
        goto label12;

     label10:
        $r18 := @caughtexception;
        r6 = $r18;
        $z4 = virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: boolean isHeldByCurrentThread()>();
        if $z4 == 0 goto label11;

        virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

     label11:
        throw r6;

     label12:
        $z5 = virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: boolean isHeldByCurrentThread()>();
        if $z5 == 0 goto label13;

        virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

     label13:
        if i2 <= 0 goto label14;

        r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: boolean eagain> = 0;
        return i2;

     label14:
        $i10 = neg i2;
        if $i10 != 120002 goto label15;

        r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: boolean eagain> = 1;
        return 0;

     label15:
        $i11 = neg i2;
        if $i11 != 20014 goto label17;

        $r19 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        $z6 = virtualinvoke $r19.<org.apache.tomcat.util.net.SocketWrapper: boolean isSecure()>();
        if $z6 == 0 goto label17;

        $r20 = <org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.juli.logging.Log log>;
        $z7 = interfaceinvoke $r20.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z7 == 0 goto label16;

        $r21 = <org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.juli.logging.Log log>;
        $r22 = <org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r23 = newarray (java.lang.Object)[2];
        $l12 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: long socket>;
        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);
        $r23[0] = $r24;
        $r25 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        $r23[1] = $r25;
        $r26 = virtualinvoke $r22.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("apr.read.sslGeneralError", $r23);
        interfaceinvoke $r21.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r26);

     label16:
        r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: boolean eagain> = 1;
        return 0;

     label17:
        $i13 = neg i2;
        if $i13 != 70014 goto label18;

        $r27 = new java.io.EOFException;
        $r28 = <org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r29 = virtualinvoke $r28.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("apr.clientAbort");
        specialinvoke $r27.<java.io.EOFException: void <init>(java.lang.String)>($r29);
        throw $r27;

     label18:
        $z8 = <org.apache.tomcat.jni.OS: boolean IS_WIN32>;
        if $z8 != 0 goto label19;

        $z9 = <org.apache.tomcat.jni.OS: boolean IS_WIN64>;
        if $z9 == 0 goto label20;

     label19:
        $i14 = neg i2;
        if $i14 != 730053 goto label20;

        $r30 = new java.io.EOFException;
        $r31 = <org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r32 = virtualinvoke $r31.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("apr.clientAbort");
        specialinvoke $r30.<java.io.EOFException: void <init>(java.lang.String)>($r32);
        throw $r30;

     label20:
        $r33 = new java.io.IOException;
        $r34 = <org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r35 = newarray (java.lang.Object)[3];
        $i15 = neg i2;
        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);
        $r35[0] = $r36;
        $l16 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: long socket>;
        $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l16);
        $r35[1] = $r37;
        $r38 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        $r35[2] = $r38;
        $r39 = virtualinvoke $r34.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("apr.read.error", $r35);
        specialinvoke $r33.<java.io.IOException: void <init>(java.lang.String)>($r39);
        throw $r33;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label7 to label8 with label8;
        catch java.lang.Throwable from label4 to label10 with label10;
    }

    protected boolean doIsReady()
    {
        org.apache.coyote.http11.upgrade.AprServletInputStream r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.coyote.http11.upgrade.AprServletInputStream;
        $z0 = r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: boolean eagain>;
        if $z0 == 0 goto label0;

        $z1 = 0;
        goto label1;

     label0:
        $z1 = 1;

     label1:
        return $z1;
    }

    protected void doClose() throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AprServletInputStream r0;

        r0 := @this: org.apache.coyote.http11.upgrade.AprServletInputStream;
        r0.<org.apache.coyote.http11.upgrade.AprServletInputStream: boolean closed> = 1;
        return;
    }
}
