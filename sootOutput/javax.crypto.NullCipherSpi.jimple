final class javax.crypto.NullCipherSpi extends javax.crypto.CipherSpi
{

    protected void <init>()
    {
        javax.crypto.NullCipherSpi r0;

        r0 := @this: javax.crypto.NullCipherSpi;
        specialinvoke r0.<javax.crypto.CipherSpi: void <init>()>();
        return;
    }

    public void engineSetMode(java.lang.String)
    {
        javax.crypto.NullCipherSpi r0;
        java.lang.String r1;

        r0 := @this: javax.crypto.NullCipherSpi;
        r1 := @parameter0: java.lang.String;
        return;
    }

    public void engineSetPadding(java.lang.String)
    {
        javax.crypto.NullCipherSpi r0;
        java.lang.String r1;

        r0 := @this: javax.crypto.NullCipherSpi;
        r1 := @parameter0: java.lang.String;
        return;
    }

    protected int engineGetBlockSize()
    {
        javax.crypto.NullCipherSpi r0;

        r0 := @this: javax.crypto.NullCipherSpi;
        return 1;
    }

    protected int engineGetOutputSize(int)
    {
        javax.crypto.NullCipherSpi r0;
        int i0;

        r0 := @this: javax.crypto.NullCipherSpi;
        i0 := @parameter0: int;
        return i0;
    }

    protected byte[] engineGetIV()
    {
        javax.crypto.NullCipherSpi r0;
        byte[] r1;

        r0 := @this: javax.crypto.NullCipherSpi;
        r1 = newarray (byte)[8];
        return r1;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        javax.crypto.NullCipherSpi r0;

        r0 := @this: javax.crypto.NullCipherSpi;
        return null;
    }

    protected void engineInit(int, java.security.Key, java.security.SecureRandom)
    {
        javax.crypto.NullCipherSpi r0;
        int i0;
        java.security.Key r1;
        java.security.SecureRandom r2;

        r0 := @this: javax.crypto.NullCipherSpi;
        i0 := @parameter0: int;
        r1 := @parameter1: java.security.Key;
        r2 := @parameter2: java.security.SecureRandom;
        return;
    }

    protected void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)
    {
        javax.crypto.NullCipherSpi r0;
        int i0;
        java.security.Key r1;
        java.security.spec.AlgorithmParameterSpec r2;
        java.security.SecureRandom r3;

        r0 := @this: javax.crypto.NullCipherSpi;
        i0 := @parameter0: int;
        r1 := @parameter1: java.security.Key;
        r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;
        r3 := @parameter3: java.security.SecureRandom;
        return;
    }

    protected void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom)
    {
        javax.crypto.NullCipherSpi r0;
        int i0;
        java.security.Key r1;
        java.security.AlgorithmParameters r2;
        java.security.SecureRandom r3;

        r0 := @this: javax.crypto.NullCipherSpi;
        i0 := @parameter0: int;
        r1 := @parameter1: java.security.Key;
        r2 := @parameter2: java.security.AlgorithmParameters;
        r3 := @parameter3: java.security.SecureRandom;
        return;
    }

    protected byte[] engineUpdate(byte[], int, int)
    {
        javax.crypto.NullCipherSpi r0;
        byte[] r1, r2;
        int i0, i1;

        r0 := @this: javax.crypto.NullCipherSpi;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r1 != null goto label0;

        return null;

     label0:
        r2 = newarray (byte)[i1];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r2, 0, i1);
        return r2;
    }

    protected int engineUpdate(byte[], int, int, byte[], int)
    {
        javax.crypto.NullCipherSpi r0;
        byte[] r1, r2;
        int i0, i1, i2;

        r0 := @this: javax.crypto.NullCipherSpi;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: byte[];
        i2 := @parameter4: int;
        if r1 != null goto label0;

        return 0;

     label0:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r2, i2, i1);
        return i1;
    }

    protected byte[] engineDoFinal(byte[], int, int)
    {
        javax.crypto.NullCipherSpi r0;
        byte[] r1, $r2;
        int i0, i1;

        r0 := @this: javax.crypto.NullCipherSpi;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = virtualinvoke r0.<javax.crypto.NullCipherSpi: byte[] engineUpdate(byte[],int,int)>(r1, i0, i1);
        return $r2;
    }

    protected int engineDoFinal(byte[], int, int, byte[], int)
    {
        javax.crypto.NullCipherSpi r0;
        byte[] r1, r2;
        int i0, i1, i2, $i3;

        r0 := @this: javax.crypto.NullCipherSpi;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: byte[];
        i2 := @parameter4: int;
        $i3 = virtualinvoke r0.<javax.crypto.NullCipherSpi: int engineUpdate(byte[],int,int,byte[],int)>(r1, i0, i1, r2, i2);
        return $i3;
    }

    protected int engineGetKeySize(java.security.Key)
    {
        javax.crypto.NullCipherSpi r0;
        java.security.Key r1;

        r0 := @this: javax.crypto.NullCipherSpi;
        r1 := @parameter0: java.security.Key;
        return 0;
    }
}
