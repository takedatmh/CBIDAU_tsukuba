abstract class java.util.WeakHashMap$HashIterator extends java.lang.Object implements java.util.Iterator
{
    private int index;
    private java.util.WeakHashMap$Entry entry;
    private java.util.WeakHashMap$Entry lastReturned;
    private int expectedModCount;
    private java.lang.Object nextKey;
    private java.lang.Object currentKey;
    final java.util.WeakHashMap this$0;

    void <init>(java.util.WeakHashMap)
    {
        java.util.WeakHashMap$HashIterator r0;
        java.util.WeakHashMap r1, $r2;
        int $i0, $i1;
        boolean $z0;
        java.util.WeakHashMap$Entry[] $r4;

        r0 := @this: java.util.WeakHashMap$HashIterator;
        r1 := @parameter0: java.util.WeakHashMap;
        r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry entry> = null;
        r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned> = null;
        $r2 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap this$0>;
        $i0 = $r2.<java.util.WeakHashMap: int modCount>;
        r0.<java.util.WeakHashMap$HashIterator: int expectedModCount> = $i0;
        r0.<java.util.WeakHashMap$HashIterator: java.lang.Object nextKey> = null;
        r0.<java.util.WeakHashMap$HashIterator: java.lang.Object currentKey> = null;
        $z0 = virtualinvoke r1.<java.util.WeakHashMap: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $i1 = 0;
        goto label1;

     label0:
        $r4 = r1.<java.util.WeakHashMap: java.util.WeakHashMap$Entry[] table>;
        $i1 = lengthof $r4;

     label1:
        r0.<java.util.WeakHashMap$HashIterator: int index> = $i1;
        return;
    }

    public boolean hasNext()
    {
        java.util.WeakHashMap$HashIterator r0;
        java.util.WeakHashMap$Entry[] r1;
        java.util.WeakHashMap$Entry r2, $r7, $r8;
        int i0;
        java.util.WeakHashMap $r3;
        java.lang.Object $r4, $r5, $r6;

        r0 := @this: java.util.WeakHashMap$HashIterator;
        $r3 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap this$0>;
        r1 = $r3.<java.util.WeakHashMap: java.util.WeakHashMap$Entry[] table>;

     label0:
        $r4 = r0.<java.util.WeakHashMap$HashIterator: java.lang.Object nextKey>;
        if $r4 != null goto label5;

        r2 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry entry>;
        i0 = r0.<java.util.WeakHashMap$HashIterator: int index>;

     label1:
        if r2 != null goto label2;

        if i0 <= 0 goto label2;

        i0 = i0 + -1;
        r2 = r1[i0];
        goto label1;

     label2:
        r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry entry> = r2;
        r0.<java.util.WeakHashMap$HashIterator: int index> = i0;
        if r2 != null goto label3;

        r0.<java.util.WeakHashMap$HashIterator: java.lang.Object currentKey> = null;
        return 0;

     label3:
        $r5 = virtualinvoke r2.<java.util.WeakHashMap$Entry: java.lang.Object get()>();
        r0.<java.util.WeakHashMap$HashIterator: java.lang.Object nextKey> = $r5;
        $r6 = r0.<java.util.WeakHashMap$HashIterator: java.lang.Object nextKey>;
        if $r6 != null goto label4;

        $r7 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry entry>;
        $r8 = $r7.<java.util.WeakHashMap$Entry: java.util.WeakHashMap$Entry next>;
        r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry entry> = $r8;

     label4:
        goto label0;

     label5:
        return 1;
    }

    protected java.util.WeakHashMap$Entry nextEntry()
    {
        java.util.WeakHashMap$HashIterator r0;
        java.util.WeakHashMap $r1;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r2;
        java.lang.Object $r3, $r8;
        boolean $z0;
        java.util.NoSuchElementException $r4;
        java.util.WeakHashMap$Entry $r5, $r6, $r7, $r9;

        r0 := @this: java.util.WeakHashMap$HashIterator;
        $r1 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap this$0>;
        $i0 = $r1.<java.util.WeakHashMap: int modCount>;
        $i1 = r0.<java.util.WeakHashMap$HashIterator: int expectedModCount>;
        if $i0 == $i1 goto label0;

        $r2 = new java.util.ConcurrentModificationException;
        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<java.util.WeakHashMap$HashIterator: java.lang.Object nextKey>;
        if $r3 != null goto label1;

        $z0 = virtualinvoke r0.<java.util.WeakHashMap$HashIterator: boolean hasNext()>();
        if $z0 != 0 goto label1;

        $r4 = new java.util.NoSuchElementException;
        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();
        throw $r4;

     label1:
        $r5 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry entry>;
        r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned> = $r5;
        $r6 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry entry>;
        $r7 = $r6.<java.util.WeakHashMap$Entry: java.util.WeakHashMap$Entry next>;
        r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry entry> = $r7;
        $r8 = r0.<java.util.WeakHashMap$HashIterator: java.lang.Object nextKey>;
        r0.<java.util.WeakHashMap$HashIterator: java.lang.Object currentKey> = $r8;
        r0.<java.util.WeakHashMap$HashIterator: java.lang.Object nextKey> = null;
        $r9 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>;
        return $r9;
    }

    public void remove()
    {
        java.util.WeakHashMap$HashIterator r0;
        java.util.WeakHashMap$Entry $r1;
        java.lang.IllegalStateException $r2;
        java.util.WeakHashMap $r3, $r5, $r8;
        int $i0, $i1, $i2;
        java.util.ConcurrentModificationException $r4;
        java.lang.Object $r6;

        r0 := @this: java.util.WeakHashMap$HashIterator;
        $r1 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned>;
        if $r1 != null goto label0;

        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap this$0>;
        $i0 = $r3.<java.util.WeakHashMap: int modCount>;
        $i1 = r0.<java.util.WeakHashMap$HashIterator: int expectedModCount>;
        if $i0 == $i1 goto label1;

        $r4 = new java.util.ConcurrentModificationException;
        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();
        throw $r4;

     label1:
        $r5 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap this$0>;
        $r6 = r0.<java.util.WeakHashMap$HashIterator: java.lang.Object currentKey>;
        virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>($r6);
        $r8 = r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap this$0>;
        $i2 = $r8.<java.util.WeakHashMap: int modCount>;
        r0.<java.util.WeakHashMap$HashIterator: int expectedModCount> = $i2;
        r0.<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry lastReturned> = null;
        r0.<java.util.WeakHashMap$HashIterator: java.lang.Object currentKey> = null;
        return;
    }
}
