public abstract class java.nio.channels.AsynchronousServerSocketChannel extends java.lang.Object implements java.nio.channels.AsynchronousChannel, java.nio.channels.NetworkChannel
{
    private final java.nio.channels.spi.AsynchronousChannelProvider provider;

    protected void <init>(java.nio.channels.spi.AsynchronousChannelProvider)
    {
        java.nio.channels.AsynchronousServerSocketChannel r0;
        java.nio.channels.spi.AsynchronousChannelProvider r1;

        r0 := @this: java.nio.channels.AsynchronousServerSocketChannel;
        r1 := @parameter0: java.nio.channels.spi.AsynchronousChannelProvider;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.spi.AsynchronousChannelProvider provider> = r1;
        return;
    }

    public final java.nio.channels.spi.AsynchronousChannelProvider provider()
    {
        java.nio.channels.AsynchronousServerSocketChannel r0;
        java.nio.channels.spi.AsynchronousChannelProvider $r1;

        r0 := @this: java.nio.channels.AsynchronousServerSocketChannel;
        $r1 = r0.<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.spi.AsynchronousChannelProvider provider>;
        return $r1;
    }

    public static java.nio.channels.AsynchronousServerSocketChannel open(java.nio.channels.AsynchronousChannelGroup) throws java.io.IOException
    {
        java.nio.channels.AsynchronousChannelGroup r0;
        java.nio.channels.spi.AsynchronousChannelProvider r1, $r2;
        java.nio.channels.AsynchronousServerSocketChannel $r3;

        r0 := @parameter0: java.nio.channels.AsynchronousChannelGroup;
        if r0 != null goto label0;

        $r2 = staticinvoke <java.nio.channels.spi.AsynchronousChannelProvider: java.nio.channels.spi.AsynchronousChannelProvider provider()>();
        goto label1;

     label0:
        $r2 = virtualinvoke r0.<java.nio.channels.AsynchronousChannelGroup: java.nio.channels.spi.AsynchronousChannelProvider provider()>();

     label1:
        r1 = $r2;
        $r3 = virtualinvoke r1.<java.nio.channels.spi.AsynchronousChannelProvider: java.nio.channels.AsynchronousServerSocketChannel openAsynchronousServerSocketChannel(java.nio.channels.AsynchronousChannelGroup)>(r0);
        return $r3;
    }

    public static java.nio.channels.AsynchronousServerSocketChannel open() throws java.io.IOException
    {
        java.nio.channels.AsynchronousServerSocketChannel $r0;

        $r0 = staticinvoke <java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.AsynchronousServerSocketChannel open(java.nio.channels.AsynchronousChannelGroup)>(null);
        return $r0;
    }

    public final java.nio.channels.AsynchronousServerSocketChannel bind(java.net.SocketAddress) throws java.io.IOException
    {
        java.nio.channels.AsynchronousServerSocketChannel r0, $r2;
        java.net.SocketAddress r1;

        r0 := @this: java.nio.channels.AsynchronousServerSocketChannel;
        r1 := @parameter0: java.net.SocketAddress;
        $r2 = virtualinvoke r0.<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.AsynchronousServerSocketChannel bind(java.net.SocketAddress,int)>(r1, 0);
        return $r2;
    }

    public abstract java.nio.channels.AsynchronousServerSocketChannel bind(java.net.SocketAddress, int) throws java.io.IOException;

    public abstract java.nio.channels.AsynchronousServerSocketChannel setOption(java.net.SocketOption, java.lang.Object) throws java.io.IOException;

    public abstract void accept(java.lang.Object, java.nio.channels.CompletionHandler);

    public abstract java.util.concurrent.Future accept();

    public volatile java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) throws java.io.IOException
    {
        java.nio.channels.AsynchronousServerSocketChannel r0, $r3;
        java.net.SocketOption r1;
        java.lang.Object r2;

        r0 := @this: java.nio.channels.AsynchronousServerSocketChannel;
        r1 := @parameter0: java.net.SocketOption;
        r2 := @parameter1: java.lang.Object;
        $r3 = virtualinvoke r0.<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.AsynchronousServerSocketChannel setOption(java.net.SocketOption,java.lang.Object)>(r1, r2);
        return $r3;
    }

    public volatile java.nio.channels.NetworkChannel bind(java.net.SocketAddress) throws java.io.IOException
    {
        java.nio.channels.AsynchronousServerSocketChannel r0, $r2;
        java.net.SocketAddress r1;

        r0 := @this: java.nio.channels.AsynchronousServerSocketChannel;
        r1 := @parameter0: java.net.SocketAddress;
        $r2 = virtualinvoke r0.<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.AsynchronousServerSocketChannel bind(java.net.SocketAddress)>(r1);
        return $r2;
    }
}
