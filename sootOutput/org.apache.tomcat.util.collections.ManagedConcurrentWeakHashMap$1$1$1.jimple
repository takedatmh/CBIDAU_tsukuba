class org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1 extends java.lang.Object implements java.util.Map$Entry
{
    private final java.util.Map$Entry en;
    final org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1 this$2;

    void <init>(org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1)
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1 r0;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1 r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.util.Map$Entry $r4;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1;
        r1 := @parameter0: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1;
        r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1 this$2> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = staticinvoke <org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1: java.util.Iterator access$1(org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1)>(r1);
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();
        $r4 = (java.util.Map$Entry) $r3;
        r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1: java.util.Map$Entry en> = $r4;
        return;
    }

    public java.lang.Object getKey()
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1 r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2, $r4;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key $r3;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1;
        $r1 = r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1: java.util.Map$Entry en>;
        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r3 = (org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key) $r2;
        $r4 = virtualinvoke $r3.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key: java.lang.Object get()>();
        return $r4;
    }

    public java.lang.Object getValue()
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1 r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1;
        $r1 = r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1: java.util.Map$Entry en>;
        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();
        return $r2;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1 r0;
        java.lang.Object r1, $r3;
        java.util.Map$Entry $r2;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1;
        r1 := @parameter0: java.lang.Object;
        staticinvoke <org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap: void access$1(java.lang.Object)>(r1);
        $r2 = r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1: java.util.Map$Entry en>;
        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(r1);
        return $r3;
    }
}
