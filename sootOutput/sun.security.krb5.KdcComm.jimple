public final class sun.security.krb5.KdcComm extends java.lang.Object
{
    private static int defaultKdcRetryLimit;
    private static int defaultKdcTimeout;
    private static int defaultUdpPrefLimit;
    private static final boolean DEBUG;
    private static final java.lang.String BAD_POLICY_KEY;
    private static int tryLessMaxRetries;
    private static int tryLessTimeout;
    private static sun.security.krb5.KdcComm$BpType badPolicy;
    private java.lang.String realm;

    public static void initStatic()
    {
        sun.security.krb5.KdcComm$1 $r0;
        java.lang.String r1, r5, r8, $r9, $r10, $r11, $r12, $r13, $r21, $r23, $r24, r28, r29, $r35, $r37;
        java.lang.String[] r2, r3;
        int i0, $i1, $i2, $i3, i4, i5, i6, $i7, $i8;
        sun.security.krb5.Config r4;
        java.lang.Object $r6;
        java.util.Locale $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.NumberFormatException $r14, r15;
        java.io.PrintStream $r16, $r32;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r33, $r34, $r36;
        sun.security.krb5.KdcComm$BpType $r22, $r25, $r26, $r27;
        java.lang.Exception $r30, r31;

        $r0 = new sun.security.krb5.KdcComm$1;
        specialinvoke $r0.<sun.security.krb5.KdcComm$1: void <init>()>();
        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        r1 = (java.lang.String) $r6;
        if r1 == null goto label8;

        $r7 = <java.util.Locale: java.util.Locale ENGLISH>;
        r8 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);
        r2 = virtualinvoke r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");
        $r9 = "tryless";
        $r10 = r2[0];
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if $z0 == 0 goto label5;

        $i1 = lengthof r2;
        if $i1 <= 1 goto label4;

        $r11 = r2[1];
        r3 = virtualinvoke $r11.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

     label0:
        $r12 = r3[0];
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);
        $i2 = lengthof r3;
        if $i2 <= 1 goto label1;

        $r13 = r3[1];
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);
        <sun.security.krb5.KdcComm: int tryLessTimeout> = $i3;

     label1:
        <sun.security.krb5.KdcComm: int tryLessMaxRetries> = i0;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;
        r15 = $r14;
        $z1 = <sun.security.krb5.KdcComm: boolean DEBUG>;
        if $z1 == 0 goto label4;

        $r16 = <java.lang.System: java.io.PrintStream out>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid krb5.kdc.bad.policy parameter for tryLess: ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", use default");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label4:
        $r22 = <sun.security.krb5.KdcComm$BpType: sun.security.krb5.KdcComm$BpType TRY_LESS>;
        <sun.security.krb5.KdcComm: sun.security.krb5.KdcComm$BpType badPolicy> = $r22;
        goto label7;

     label5:
        $r23 = "trylast";
        $r24 = r2[0];
        $z2 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);
        if $z2 == 0 goto label6;

        $r25 = <sun.security.krb5.KdcComm$BpType: sun.security.krb5.KdcComm$BpType TRY_LAST>;
        <sun.security.krb5.KdcComm: sun.security.krb5.KdcComm$BpType badPolicy> = $r25;
        goto label7;

     label6:
        $r26 = <sun.security.krb5.KdcComm$BpType: sun.security.krb5.KdcComm$BpType NONE>;
        <sun.security.krb5.KdcComm: sun.security.krb5.KdcComm$BpType badPolicy> = $r26;

     label7:
        goto label9;

     label8:
        $r27 = <sun.security.krb5.KdcComm$BpType: sun.security.krb5.KdcComm$BpType NONE>;
        <sun.security.krb5.KdcComm: sun.security.krb5.KdcComm$BpType badPolicy> = $r27;

     label9:
        i4 = -1;
        i5 = -1;
        i6 = -1;

     label10:
        r4 = staticinvoke <sun.security.krb5.Config: sun.security.krb5.Config getInstance()>();
        r5 = virtualinvoke r4.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>("kdc_timeout", "libdefaults");
        i4 = staticinvoke <sun.security.krb5.KdcComm: int parsePositiveIntString(java.lang.String)>(r5);
        r28 = virtualinvoke r4.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>("max_retries", "libdefaults");
        i5 = staticinvoke <sun.security.krb5.KdcComm: int parsePositiveIntString(java.lang.String)>(r28);
        r29 = virtualinvoke r4.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>("udp_preference_limit", "libdefaults");
        i6 = staticinvoke <sun.security.krb5.KdcComm: int parsePositiveIntString(java.lang.String)>(r29);

     label11:
        goto label13;

     label12:
        $r30 := @caughtexception;
        r31 = $r30;
        $z3 = <sun.security.krb5.KdcComm: boolean DEBUG>;
        if $z3 == 0 goto label13;

        $r32 = <java.lang.System: java.io.PrintStream out>;
        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in getting KDC communication settings, using default value ");
        $r35 = virtualinvoke r31.<java.lang.Exception: java.lang.String getMessage()>();
        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r37);

     label13:
        if i4 <= 0 goto label14;

        $i7 = i4;
        goto label15;

     label14:
        $i7 = 30000;

     label15:
        <sun.security.krb5.KdcComm: int defaultKdcTimeout> = $i7;
        if i5 <= 0 goto label16;

        $i8 = i5;
        goto label17;

     label16:
        $i8 = 3;

     label17:
        <sun.security.krb5.KdcComm: int defaultKdcRetryLimit> = $i8;
        <sun.security.krb5.KdcComm: int defaultUdpPrefLimit> = i6;
        staticinvoke <sun.security.krb5.KdcComm$KdcAccessibility: void access$000()>();
        return;

        catch java.lang.NumberFormatException from label0 to label2 with label3;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public void <init>(java.lang.String) throws sun.security.krb5.KrbException
    {
        sun.security.krb5.KdcComm r0;
        java.lang.String r1;
        sun.security.krb5.Config $r2;
        sun.security.krb5.KrbException $r3;

        r0 := @this: sun.security.krb5.KdcComm;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r2 = staticinvoke <sun.security.krb5.Config: sun.security.krb5.Config getInstance()>();
        r1 = virtualinvoke $r2.<sun.security.krb5.Config: java.lang.String getDefaultRealm()>();
        if r1 != null goto label0;

        $r3 = new sun.security.krb5.KrbException;
        specialinvoke $r3.<sun.security.krb5.KrbException: void <init>(int,java.lang.String)>(60, "Cannot find default realm");
        throw $r3;

     label0:
        r0.<sun.security.krb5.KdcComm: java.lang.String realm> = r1;
        return;
    }

    public byte[] send(byte[]) throws java.io.IOException, sun.security.krb5.KrbException
    {
        sun.security.krb5.KdcComm r0;
        byte[] r1, $r3;
        int $i0, i1, $i2;
        boolean z0, $z1;
        java.lang.String $r2;

        r0 := @this: sun.security.krb5.KdcComm;
        r1 := @parameter0: byte[];
        $r2 = r0.<sun.security.krb5.KdcComm: java.lang.String realm>;
        $i0 = <sun.security.krb5.KdcComm: int defaultUdpPrefLimit>;
        i1 = specialinvoke r0.<sun.security.krb5.KdcComm: int getRealmSpecificValue(java.lang.String,java.lang.String,int)>($r2, "udp_preference_limit", $i0);
        if i1 <= 0 goto label0;

        if r1 == null goto label0;

        $i2 = lengthof r1;
        if $i2 <= i1 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;
        $r3 = specialinvoke r0.<sun.security.krb5.KdcComm: byte[] send(byte[],boolean)>(r1, z0);
        return $r3;
    }

    private byte[] send(byte[], boolean) throws java.io.IOException, sun.security.krb5.KrbException
    {
        sun.security.krb5.KdcComm r0;
        byte[] r1, r5;
        boolean z0, $z1, $z2;
        java.lang.Exception r2, r9, $r23, $r24, r25;
        sun.security.krb5.Config r3;
        java.lang.String r4, r7, $r10, $r11, $r12, $r14, $r18, $r20, r21, $r30;
        null_type n0;
        java.lang.String[] r6;
        int i0, i1, $i2;
        sun.security.krb5.internal.KRBError r8, $r22;
        sun.security.krb5.KrbException $r13, $r15, $r33;
        java.lang.StringBuilder $r16, $r17, $r19, $r27, $r28, $r29;
        java.io.PrintStream $r26, $r31;
        java.io.IOException $r32, $r34;

        r0 := @this: sun.security.krb5.KdcComm;
        r1 := @parameter0: byte[];
        z0 := @parameter1: boolean;
        if r1 != null goto label0;

        return null;

     label0:
        r2 = null;
        r3 = staticinvoke <sun.security.krb5.Config: sun.security.krb5.Config getInstance()>();
        $r10 = r0.<sun.security.krb5.KdcComm: java.lang.String realm>;
        if $r10 != null goto label1;

        $r11 = virtualinvoke r3.<sun.security.krb5.Config: java.lang.String getDefaultRealm()>();
        r0.<sun.security.krb5.KdcComm: java.lang.String realm> = $r11;
        $r12 = r0.<sun.security.krb5.KdcComm: java.lang.String realm>;
        if $r12 != null goto label1;

        $r13 = new sun.security.krb5.KrbException;
        specialinvoke $r13.<sun.security.krb5.KrbException: void <init>(int,java.lang.String)>(60, "Cannot find default realm");
        throw $r13;

     label1:
        $r14 = r0.<sun.security.krb5.KdcComm: java.lang.String realm>;
        r4 = virtualinvoke r3.<sun.security.krb5.Config: java.lang.String getKDCList(java.lang.String)>($r14);
        if r4 != null goto label2;

        $r15 = new sun.security.krb5.KrbException;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get kdc for realm ");
        $r18 = r0.<sun.security.krb5.KdcComm: java.lang.String realm>;
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r15.<sun.security.krb5.KrbException: void <init>(java.lang.String)>($r20);
        throw $r15;

     label2:
        n0 = null;
        r5 = null;
        r6 = staticinvoke <sun.security.krb5.KdcComm$KdcAccessibility: java.lang.String[] access$100(java.lang.String)>(r4);
        i0 = lengthof r6;
        i1 = 0;

     label3:
        if i1 >= i0 goto label13;

        r7 = r6[i1];
        r21 = r7;

     label4:
        r5 = specialinvoke r0.<sun.security.krb5.KdcComm: byte[] send(byte[],java.lang.String,boolean)>(r1, r21, z0);
        r8 = null;

     label5:
        $r22 = new sun.security.krb5.internal.KRBError;
        specialinvoke $r22.<sun.security.krb5.internal.KRBError: void <init>(byte[])>(r5);
        r8 = $r22;

     label6:
        goto label8;

     label7:
        $r23 := @caughtexception;
        r9 = $r23;

     label8:
        if r8 == null goto label9;

        $i2 = virtualinvoke r8.<sun.security.krb5.internal.KRBError: int getErrorCode()>();
        if $i2 != 52 goto label9;

        r5 = specialinvoke r0.<sun.security.krb5.KdcComm: byte[] send(byte[],java.lang.String,boolean)>(r1, r21, 1);

     label9:
        staticinvoke <sun.security.krb5.KdcComm$KdcAccessibility: void access$200(java.lang.String)>(r21);

     label10:
        goto label13;

     label11:
        $r24 := @caughtexception;
        r25 = $r24;
        $z1 = <sun.security.krb5.KdcComm: boolean DEBUG>;
        if $z1 == 0 goto label12;

        $r26 = <java.lang.System: java.io.PrintStream out>;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> KrbKdcReq send: error trying ");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r30);
        $r31 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke r25.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r31);

     label12:
        staticinvoke <sun.security.krb5.KdcComm$KdcAccessibility: void access$300(java.lang.String)>(r21);
        r2 = r25;
        i1 = i1 + 1;
        goto label3;

     label13:
        if r5 != null goto label16;

        if r2 == null goto label15;

        $z2 = r2 instanceof java.io.IOException;
        if $z2 == 0 goto label14;

        $r32 = (java.io.IOException) r2;
        throw $r32;

     label14:
        $r33 = (sun.security.krb5.KrbException) r2;
        throw $r33;

     label15:
        $r34 = new java.io.IOException;
        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>("Cannot get a KDC reply");
        throw $r34;

     label16:
        return r5;

        catch java.lang.Exception from label5 to label6 with label7;
        catch java.lang.Exception from label4 to label10 with label11;
    }

    private byte[] send(byte[], java.lang.String, boolean) throws java.io.IOException, sun.security.krb5.KrbException
    {
        sun.security.krb5.KdcComm r0;
        byte[] r1, r37;
        java.lang.String r2, r3, $r5, $r6, $r13, r14, $r19, $r24, $r33, $r42;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, $i1, i2, i3, i4, i5, $i6, $i7, $i8, $i10, $i11, $i12, $i14, i15, $i16, $i17, i18, $i19, $i20;
        null_type n0;
        java.lang.Exception r4;
        sun.security.krb5.KdcComm$BpType $r7, $r8;
        char $c9, $c13;
        java.io.IOException $r9, $r15, $r46;
        java.lang.StringBuilder $r10, $r11, $r12, $r16, $r17, $r18, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r39, $r40, $r41;
        java.io.PrintStream $r20, $r38;
        sun.security.krb5.KdcComm$KdcCommunication $r34, r35;
        java.lang.Object $r36;
        java.security.PrivilegedActionException $r44, r45;
        sun.security.krb5.KrbException $r47;

        r0 := @this: sun.security.krb5.KdcComm;
        r1 := @parameter0: byte[];
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        if r1 != null goto label0;

        return null;

     label0:
        i0 = 88;
        $r5 = r0.<sun.security.krb5.KdcComm: java.lang.String realm>;
        $i1 = <sun.security.krb5.KdcComm: int defaultKdcRetryLimit>;
        i2 = specialinvoke r0.<sun.security.krb5.KdcComm: int getRealmSpecificValue(java.lang.String,java.lang.String,int)>($r5, "max_retries", $i1);
        $r6 = r0.<sun.security.krb5.KdcComm: java.lang.String realm>;
        $i6 = <sun.security.krb5.KdcComm: int defaultKdcTimeout>;
        i3 = specialinvoke r0.<sun.security.krb5.KdcComm: int getRealmSpecificValue(java.lang.String,java.lang.String,int)>($r6, "kdc_timeout", $i6);
        $r7 = <sun.security.krb5.KdcComm: sun.security.krb5.KdcComm$BpType badPolicy>;
        $r8 = <sun.security.krb5.KdcComm$BpType: sun.security.krb5.KdcComm$BpType TRY_LESS>;
        if $r7 != $r8 goto label2;

        $z1 = staticinvoke <sun.security.krb5.KdcComm$KdcAccessibility: boolean access$400(java.lang.String)>(r2);
        if $z1 == 0 goto label2;

        $i7 = <sun.security.krb5.KdcComm: int tryLessMaxRetries>;
        if i2 <= $i7 goto label1;

        i2 = <sun.security.krb5.KdcComm: int tryLessMaxRetries>;

     label1:
        $i8 = <sun.security.krb5.KdcComm: int tryLessTimeout>;
        if i3 <= $i8 goto label2;

        i3 = <sun.security.krb5.KdcComm: int tryLessTimeout>;

     label2:
        n0 = null;
        r3 = null;
        $c9 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);
        if $c9 != 91 goto label6;

        i4 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(93, 1);
        if i4 != -1 goto label3;

        $r9 = new java.io.IOException;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal KDC: ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r13);
        throw $r9;

     label3:
        r14 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(1, i4);
        $i10 = virtualinvoke r2.<java.lang.String: int length()>();
        $i11 = $i10 - 1;
        if i4 == $i11 goto label5;

        $i12 = i4 + 1;
        $c13 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i12);
        if $c13 == 58 goto label4;

        $r15 = new java.io.IOException;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal KDC: ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r19);
        throw $r15;

     label4:
        $i14 = i4 + 2;
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i14);

     label5:
        goto label9;

     label6:
        i15 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(58);
        if i15 != -1 goto label7;

        r14 = r2;
        goto label9;

     label7:
        $i16 = i15 + 1;
        i5 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(58, $i16);
        if i5 <= 0 goto label8;

        r14 = r2;
        goto label9;

     label8:
        r14 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i15);
        $i17 = i15 + 1;
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i17);

     label9:
        if r3 == null goto label10;

        i18 = staticinvoke <sun.security.krb5.KdcComm: int parsePositiveIntString(java.lang.String)>(r3);
        if i18 <= 0 goto label10;

        i0 = i18;

     label10:
        $z2 = <sun.security.krb5.KdcComm: boolean DEBUG>;
        if $z2 == 0 goto label13;

        $r20 = <java.lang.System: java.io.PrintStream out>;
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> KrbKdcReq send: kdc=");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        if z0 == 0 goto label11;

        $r24 = " TCP:";
        goto label12;

     label11:
        $r24 = " UDP:";

     label12:
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timeout=");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", number of retries =");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", #bytes=");
        $i19 = lengthof r1;
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r33);

     label13:
        $r34 = new sun.security.krb5.KdcComm$KdcCommunication;
        specialinvoke $r34.<sun.security.krb5.KdcComm$KdcCommunication: void <init>(java.lang.String,int,boolean,int,int,byte[])>(r14, i0, z0, i3, i2, r1);
        r35 = $r34;

     label14:
        $r36 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>(r35);
        r37 = (byte[]) $r36;
        $z3 = <sun.security.krb5.KdcComm: boolean DEBUG>;
        if $z3 == 0 goto label17;

        $r38 = <java.lang.System: java.io.PrintStream out>;
        $r39 = new java.lang.StringBuilder;
        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> KrbKdcReq send: #bytes read=");
        if r37 == null goto label15;

        $i20 = lengthof r37;
        goto label16;

     label15:
        $i20 = 0;

     label16:
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r42);

     label17:
        return r37;

     label18:
        $r44 := @caughtexception;
        r45 = $r44;
        r4 = virtualinvoke r45.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $z4 = r4 instanceof java.io.IOException;
        if $z4 == 0 goto label19;

        $r46 = (java.io.IOException) r4;
        throw $r46;

     label19:
        $r47 = (sun.security.krb5.KrbException) r4;
        throw $r47;

        catch java.security.PrivilegedActionException from label14 to label17 with label18;
    }

    private int getRealmSpecificValue(java.lang.String, java.lang.String, int)
    {
        sun.security.krb5.KdcComm r0;
        java.lang.String r1, r2, r3;
        int i0, i1, i2;
        sun.security.krb5.Config $r4;
        java.lang.Exception $r5, r6;

        r0 := @this: sun.security.krb5.KdcComm;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        i1 = i0;
        if r1 != null goto label0;

        return i1;

     label0:
        i2 = -1;

     label1:
        $r4 = staticinvoke <sun.security.krb5.Config: sun.security.krb5.Config getInstance()>();
        r3 = virtualinvoke $r4.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>(r2, r1);
        i2 = staticinvoke <sun.security.krb5.KdcComm: int parsePositiveIntString(java.lang.String)>(r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r6 = $r5;

     label4:
        if i2 <= 0 goto label5;

        i1 = i2;

     label5:
        return i1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static int parsePositiveIntString(java.lang.String)
    {
        java.lang.String r0;
        byte b0;
        java.lang.Exception r1, $r2;
        int i1;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return -1;

     label0:
        b0 = -1;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;
        r1 = $r2;
        return -1;

     label4:
        if i1 < 0 goto label5;

        return i1;

     label5:
        return -1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static boolean access$500()
    {
        boolean $z0;

        $z0 = <sun.security.krb5.KdcComm: boolean DEBUG>;
        return $z0;
    }

    static sun.security.krb5.KdcComm$BpType access$600()
    {
        sun.security.krb5.KdcComm$BpType $r0;

        $r0 = <sun.security.krb5.KdcComm: sun.security.krb5.KdcComm$BpType badPolicy>;
        return $r0;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        <sun.security.krb5.KdcComm: boolean DEBUG> = $z0;
        <sun.security.krb5.KdcComm: int tryLessMaxRetries> = 1;
        <sun.security.krb5.KdcComm: int tryLessTimeout> = 5000;
        staticinvoke <sun.security.krb5.KdcComm: void initStatic()>();
        return;
    }
}
