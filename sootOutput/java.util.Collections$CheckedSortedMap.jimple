class java.util.Collections$CheckedSortedMap extends java.util.Collections$CheckedMap implements java.util.SortedMap, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.SortedMap sm;

    void <init>(java.util.SortedMap, java.lang.Class, java.lang.Class)
    {
        java.util.Collections$CheckedSortedMap r0;
        java.util.SortedMap r1;
        java.lang.Class r2, r3;

        r0 := @this: java.util.Collections$CheckedSortedMap;
        r1 := @parameter0: java.util.SortedMap;
        r2 := @parameter1: java.lang.Class;
        r3 := @parameter2: java.lang.Class;
        specialinvoke r0.<java.util.Collections$CheckedMap: void <init>(java.util.Map,java.lang.Class,java.lang.Class)>(r1, r2, r3);
        r0.<java.util.Collections$CheckedSortedMap: java.util.SortedMap sm> = r1;
        return;
    }

    public java.util.Comparator comparator()
    {
        java.util.Collections$CheckedSortedMap r0;
        java.util.SortedMap $r1;
        java.util.Comparator $r2;

        r0 := @this: java.util.Collections$CheckedSortedMap;
        $r1 = r0.<java.util.Collections$CheckedSortedMap: java.util.SortedMap sm>;
        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.util.Comparator comparator()>();
        return $r2;
    }

    public java.lang.Object firstKey()
    {
        java.util.Collections$CheckedSortedMap r0;
        java.util.SortedMap $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.Collections$CheckedSortedMap;
        $r1 = r0.<java.util.Collections$CheckedSortedMap: java.util.SortedMap sm>;
        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object firstKey()>();
        return $r2;
    }

    public java.lang.Object lastKey()
    {
        java.util.Collections$CheckedSortedMap r0;
        java.util.SortedMap $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.Collections$CheckedSortedMap;
        $r1 = r0.<java.util.Collections$CheckedSortedMap: java.util.SortedMap sm>;
        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object lastKey()>();
        return $r2;
    }

    public java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
    {
        java.util.Collections$CheckedSortedMap r0;
        java.lang.Object r1, r2;
        java.util.SortedMap $r3, $r4, $r7;
        java.lang.Class $r5, $r6;

        r0 := @this: java.util.Collections$CheckedSortedMap;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = r0.<java.util.Collections$CheckedSortedMap: java.util.SortedMap sm>;
        $r4 = interfaceinvoke $r3.<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>(r1, r2);
        $r5 = r0.<java.util.Collections$CheckedSortedMap: java.lang.Class keyType>;
        $r6 = r0.<java.util.Collections$CheckedSortedMap: java.lang.Class valueType>;
        $r7 = staticinvoke <java.util.Collections: java.util.SortedMap checkedSortedMap(java.util.SortedMap,java.lang.Class,java.lang.Class)>($r4, $r5, $r6);
        return $r7;
    }

    public java.util.SortedMap headMap(java.lang.Object)
    {
        java.util.Collections$CheckedSortedMap r0;
        java.lang.Object r1;
        java.util.SortedMap $r2, $r3, $r6;
        java.lang.Class $r4, $r5;

        r0 := @this: java.util.Collections$CheckedSortedMap;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.Collections$CheckedSortedMap: java.util.SortedMap sm>;
        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(r1);
        $r4 = r0.<java.util.Collections$CheckedSortedMap: java.lang.Class keyType>;
        $r5 = r0.<java.util.Collections$CheckedSortedMap: java.lang.Class valueType>;
        $r6 = staticinvoke <java.util.Collections: java.util.SortedMap checkedSortedMap(java.util.SortedMap,java.lang.Class,java.lang.Class)>($r3, $r4, $r5);
        return $r6;
    }

    public java.util.SortedMap tailMap(java.lang.Object)
    {
        java.util.Collections$CheckedSortedMap r0;
        java.lang.Object r1;
        java.util.SortedMap $r2, $r3, $r6;
        java.lang.Class $r4, $r5;

        r0 := @this: java.util.Collections$CheckedSortedMap;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.Collections$CheckedSortedMap: java.util.SortedMap sm>;
        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>(r1);
        $r4 = r0.<java.util.Collections$CheckedSortedMap: java.lang.Class keyType>;
        $r5 = r0.<java.util.Collections$CheckedSortedMap: java.lang.Class valueType>;
        $r6 = staticinvoke <java.util.Collections: java.util.SortedMap checkedSortedMap(java.util.SortedMap,java.lang.Class,java.lang.Class)>($r3, $r4, $r5);
        return $r6;
    }
}
