public final enum class java.security.CryptoPrimitive extends java.lang.Enum
{
    public static final enum java.security.CryptoPrimitive MESSAGE_DIGEST;
    public static final enum java.security.CryptoPrimitive SECURE_RANDOM;
    public static final enum java.security.CryptoPrimitive BLOCK_CIPHER;
    public static final enum java.security.CryptoPrimitive STREAM_CIPHER;
    public static final enum java.security.CryptoPrimitive MAC;
    public static final enum java.security.CryptoPrimitive KEY_WRAP;
    public static final enum java.security.CryptoPrimitive PUBLIC_KEY_ENCRYPTION;
    public static final enum java.security.CryptoPrimitive SIGNATURE;
    public static final enum java.security.CryptoPrimitive KEY_ENCAPSULATION;
    public static final enum java.security.CryptoPrimitive KEY_AGREEMENT;
    private static final java.security.CryptoPrimitive[] $VALUES;

    public static java.security.CryptoPrimitive[] values()
    {
        java.security.CryptoPrimitive[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (java.security.CryptoPrimitive[]) $r1;
        return $r2;
    }

    public static java.security.CryptoPrimitive valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        java.security.CryptoPrimitive $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "java/security/CryptoPrimitive", r0);
        $r2 = (java.security.CryptoPrimitive) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        java.security.CryptoPrimitive r0;
        java.lang.String r1;
        int i0;

        r0 := @this: java.security.CryptoPrimitive;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        java.security.CryptoPrimitive $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        java.security.CryptoPrimitive[] $r10;

        $r0 = new java.security.CryptoPrimitive;
        specialinvoke $r0.<java.security.CryptoPrimitive: void <init>(java.lang.String,int)>("MESSAGE_DIGEST", 0);
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive MESSAGE_DIGEST> = $r0;
        $r1 = new java.security.CryptoPrimitive;
        specialinvoke $r1.<java.security.CryptoPrimitive: void <init>(java.lang.String,int)>("SECURE_RANDOM", 1);
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive SECURE_RANDOM> = $r1;
        $r2 = new java.security.CryptoPrimitive;
        specialinvoke $r2.<java.security.CryptoPrimitive: void <init>(java.lang.String,int)>("BLOCK_CIPHER", 2);
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive BLOCK_CIPHER> = $r2;
        $r3 = new java.security.CryptoPrimitive;
        specialinvoke $r3.<java.security.CryptoPrimitive: void <init>(java.lang.String,int)>("STREAM_CIPHER", 3);
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive STREAM_CIPHER> = $r3;
        $r4 = new java.security.CryptoPrimitive;
        specialinvoke $r4.<java.security.CryptoPrimitive: void <init>(java.lang.String,int)>("MAC", 4);
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive MAC> = $r4;
        $r5 = new java.security.CryptoPrimitive;
        specialinvoke $r5.<java.security.CryptoPrimitive: void <init>(java.lang.String,int)>("KEY_WRAP", 5);
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive KEY_WRAP> = $r5;
        $r6 = new java.security.CryptoPrimitive;
        specialinvoke $r6.<java.security.CryptoPrimitive: void <init>(java.lang.String,int)>("PUBLIC_KEY_ENCRYPTION", 6);
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive PUBLIC_KEY_ENCRYPTION> = $r6;
        $r7 = new java.security.CryptoPrimitive;
        specialinvoke $r7.<java.security.CryptoPrimitive: void <init>(java.lang.String,int)>("SIGNATURE", 7);
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive SIGNATURE> = $r7;
        $r8 = new java.security.CryptoPrimitive;
        specialinvoke $r8.<java.security.CryptoPrimitive: void <init>(java.lang.String,int)>("KEY_ENCAPSULATION", 8);
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive KEY_ENCAPSULATION> = $r8;
        $r9 = new java.security.CryptoPrimitive;
        specialinvoke $r9.<java.security.CryptoPrimitive: void <init>(java.lang.String,int)>("KEY_AGREEMENT", 9);
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive KEY_AGREEMENT> = $r9;
        $r10 = newarray (java.security.CryptoPrimitive)[10];
        $r11 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive MESSAGE_DIGEST>;
        $r10[0] = $r11;
        $r12 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive SECURE_RANDOM>;
        $r10[1] = $r12;
        $r13 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive BLOCK_CIPHER>;
        $r10[2] = $r13;
        $r14 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive STREAM_CIPHER>;
        $r10[3] = $r14;
        $r15 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive MAC>;
        $r10[4] = $r15;
        $r16 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive KEY_WRAP>;
        $r10[5] = $r16;
        $r17 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive PUBLIC_KEY_ENCRYPTION>;
        $r10[6] = $r17;
        $r18 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive SIGNATURE>;
        $r10[7] = $r18;
        $r19 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive KEY_ENCAPSULATION>;
        $r10[8] = $r19;
        $r20 = <java.security.CryptoPrimitive: java.security.CryptoPrimitive KEY_AGREEMENT>;
        $r10[9] = $r20;
        <java.security.CryptoPrimitive: java.security.CryptoPrimitive[] $VALUES> = $r10;
        return;
    }
}
