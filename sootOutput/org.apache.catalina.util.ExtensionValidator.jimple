public final class org.apache.catalina.util.ExtensionValidator extends java.lang.Object
{
    private static final org.apache.juli.logging.Log log;
    private static final org.apache.tomcat.util.res.StringManager sm;
    private static volatile java.util.ArrayList containerAvailableExtensions;
    private static java.util.ArrayList containerManifestResources;

    static void <clinit>()
    {
        java.lang.String r0, $r1, r3, $r11, $r17;
        java.util.StringTokenizer r2, $r9;
        java.io.File r4, $r12;
        java.io.IOException r5, $r13;
        org.apache.juli.logging.Log $r6, $r14;
        org.apache.tomcat.util.res.StringManager $r7, $r15;
        java.util.ArrayList $r8;
        java.util.Locale $r10;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r16;

        $r6 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/util/ExtensionValidator");
        <org.apache.catalina.util.ExtensionValidator: org.apache.juli.logging.Log log> = $r6;
        $r7 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.catalina.util");
        <org.apache.catalina.util.ExtensionValidator: org.apache.tomcat.util.res.StringManager sm> = $r7;
        <org.apache.catalina.util.ExtensionValidator: java.util.ArrayList containerAvailableExtensions> = null;
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        <org.apache.catalina.util.ExtensionValidator: java.util.ArrayList containerManifestResources> = $r8;
        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.class.path");
        $r9 = new java.util.StringTokenizer;
        $r1 = <java.io.File: java.lang.String pathSeparator>;
        specialinvoke $r9.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, $r1);
        r2 = $r9;
        goto label4;

     label0:
        r3 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r10 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r11 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r10);
        $z0 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");
        if $z0 == 0 goto label4;

        $r12 = new java.io.File;
        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>(r3);
        r4 = $r12;
        $z1 = virtualinvoke r4.<java.io.File: boolean isFile()>();
        if $z1 == 0 goto label4;

     label1:
        staticinvoke <org.apache.catalina.util.ExtensionValidator: void addSystemResource(java.io.File)>(r4);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;
        r5 = $r13;
        $r14 = <org.apache.catalina.util.ExtensionValidator: org.apache.juli.logging.Log log>;
        $r15 = <org.apache.catalina.util.ExtensionValidator: org.apache.tomcat.util.res.StringManager sm>;
        $r16 = newarray (java.lang.Object)[1];
        $r16[0] = r4;
        $r17 = virtualinvoke $r15.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("extensionValidator.failload", $r16);
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r17, r5);

     label4:
        $z2 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z2 != 0 goto label0;

        staticinvoke <org.apache.catalina.util.ExtensionValidator: void addFolderList(java.lang.String)>("java.ext.dirs");
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void <init>()
    {
        org.apache.catalina.util.ExtensionValidator r0;

        r0 := @this: org.apache.catalina.util.ExtensionValidator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static synchronized boolean validateApplication(javax.naming.directory.DirContext, org.apache.catalina.Context) throws java.io.IOException
    {
        javax.naming.directory.DirContext r0;
        org.apache.catalina.Context r1;
        java.lang.String r2, $r16, $r18, $r20, $r22, $r27, r40, $r45, $r48, $r62;
        java.util.ArrayList r3, $r14;
        java.io.InputStream r4;
        javax.naming.NamingEnumeration r5, r41;
        javax.naming.Binding r6, r43;
        org.apache.naming.resources.Resource r7, r50;
        java.util.jar.Manifest r8, $r24, r51;
        org.apache.catalina.util.ManifestResource r9, $r25, $r52, r53;
        java.lang.Throwable r10, r11, r12, r13, $r30, $r33, r34, $r35, $r36, r37, $r38, r39, $r56, $r63, $r64, r65, $r66, r67;
        java.lang.Object $r15, $r23, $r42, r49;
        java.util.Locale $r17, $r44;
        boolean $z0, $z2, $z3, $z5, $z6;
        java.lang.StringBuilder $r19, $r21, $r46, $r47, $r60, $r61;
        org.apache.tomcat.util.res.StringManager $r26;
        javax.naming.NamingException $r28, r29, $r54, r55;
        java.util.NoSuchElementException $r31, r32;
        null_type n0;
        java.io.IOException $r57, r58, $r59;

        r0 := @parameter0: javax.naming.directory.DirContext;
        r1 := @parameter1: org.apache.catalina.Context;
        r2 = interfaceinvoke r1.<org.apache.catalina.Context: java.lang.String getName()>();
        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        r3 = $r14;
        if r0 != null goto label0;

        return 0;

     label0:
        r4 = null;

     label1:
        r5 = interfaceinvoke r0.<javax.naming.directory.DirContext: javax.naming.NamingEnumeration listBindings(java.lang.String)>("/META-INF/");
        $r15 = interfaceinvoke r5.<javax.naming.NamingEnumeration: java.lang.Object nextElement()>();
        r6 = (javax.naming.Binding) $r15;
        $r16 = virtualinvoke r6.<javax.naming.Binding: java.lang.String getName()>();
        $r17 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r18 = virtualinvoke $r16.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r17);
        $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("MANIFEST.MF");
        if $z0 == 0 goto label19;

        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("/META-INF/");
        $r20 = virtualinvoke r6.<javax.naming.Binding: java.lang.String getName()>();
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        $r23 = interfaceinvoke r0.<javax.naming.directory.DirContext: java.lang.Object lookup(java.lang.String)>($r22);
        r7 = (org.apache.naming.resources.Resource) $r23;
        r4 = virtualinvoke r7.<org.apache.naming.resources.Resource: java.io.InputStream streamContent()>();
        $r24 = new java.util.jar.Manifest;
        specialinvoke $r24.<java.util.jar.Manifest: void <init>(java.io.InputStream)>(r4);
        r8 = $r24;
        virtualinvoke r4.<java.io.InputStream: void close()>();
        r4 = null;
        $r25 = new org.apache.catalina.util.ManifestResource;
        $r26 = <org.apache.catalina.util.ExtensionValidator: org.apache.tomcat.util.res.StringManager sm>;
        $r27 = virtualinvoke $r26.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("extensionValidator.web-application-manifest");
        specialinvoke $r25.<org.apache.catalina.util.ManifestResource: void <init>(java.lang.String,java.util.jar.Manifest,int)>($r27, r8, 2);
        r9 = $r25;
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

     label2:
        goto label19;

     label3:
        $r28 := @caughtexception;
        r29 = $r28;

     label4:
        if r4 == null goto label23;

     label5:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label6:
        goto label23;

     label7:
        $r30 := @caughtexception;
        r10 = $r30;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r10);
        goto label23;

     label8:
        $r31 := @caughtexception;

     label9:
        r32 = $r31;

     label10:
        if r4 == null goto label23;

     label11:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label12:
        goto label23;

     label13:
        $r33 := @caughtexception;
        r34 = $r33;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r34);
        goto label23;

     label14:
        $r35 := @caughtexception;
        r11 = $r35;
        if r4 == null goto label18;

     label15:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r36 := @caughtexception;
        r37 = $r36;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r37);

     label18:
        throw r11;

     label19:
        if r4 == null goto label23;

     label20:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label21:
        goto label23;

     label22:
        $r38 := @caughtexception;
        r39 = $r38;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r39);

     label23:
        n0 = null;
        r40 = null;

     label24:
        r41 = interfaceinvoke r0.<javax.naming.directory.DirContext: javax.naming.NamingEnumeration listBindings(java.lang.String)>("WEB-INF/lib/");
        goto label28;

     label25:
        $r42 = interfaceinvoke r41.<javax.naming.NamingEnumeration: java.lang.Object nextElement()>();
        r43 = (javax.naming.Binding) $r42;
        r40 = virtualinvoke r43.<javax.naming.Binding: java.lang.String getName()>();
        $r44 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r45 = virtualinvoke r40.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r44);
        $z2 = virtualinvoke $r45.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");
        if $z2 != 0 goto label26;

        goto label28;

     label26:
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>("/WEB-INF/lib/");
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();
        r49 = interfaceinvoke r0.<javax.naming.directory.DirContext: java.lang.Object lookup(java.lang.String)>($r48);
        $z3 = r49 instanceof org.apache.naming.resources.Resource;
        if $z3 != 0 goto label27;

        goto label28;

     label27:
        r50 = (org.apache.naming.resources.Resource) r49;
        r4 = virtualinvoke r50.<org.apache.naming.resources.Resource: java.io.InputStream streamContent()>();
        r51 = staticinvoke <org.apache.catalina.util.ExtensionValidator: java.util.jar.Manifest getManifest(java.io.InputStream)>(r4);
        if r51 == null goto label28;

        $r52 = new org.apache.catalina.util.ManifestResource;
        specialinvoke $r52.<org.apache.catalina.util.ManifestResource: void <init>(java.lang.String,java.util.jar.Manifest,int)>(r40, r51, 3);
        r53 = $r52;
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r53);

     label28:
        if r41 == null goto label42;

        $z5 = interfaceinvoke r41.<javax.naming.NamingEnumeration: boolean hasMoreElements()>();
        if $z5 != 0 goto label25;

     label29:
        goto label42;

     label30:
        $r54 := @caughtexception;
        r55 = $r54;

     label31:
        if r4 == null goto label46;

     label32:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label33:
        goto label46;

     label34:
        $r56 := @caughtexception;
        r12 = $r56;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r12);
        goto label46;

     label35:
        $r57 := @caughtexception;

     label36:
        r58 = $r57;
        $r59 = new java.io.IOException;
        $r60 = new java.lang.StringBuilder;
        specialinvoke $r60.<java.lang.StringBuilder: void <init>(java.lang.String)>("Jar: ");
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r59.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r62, r58);
        throw $r59;

     label37:
        $r63 := @caughtexception;
        r13 = $r63;
        if r4 == null goto label41;

     label38:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label39:
        goto label41;

     label40:
        $r64 := @caughtexception;
        r65 = $r64;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r65);

     label41:
        throw r13;

     label42:
        if r4 == null goto label46;

     label43:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label44:
        goto label46;

     label45:
        $r66 := @caughtexception;
        r67 = $r66;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r67);

     label46:
        $z6 = staticinvoke <org.apache.catalina.util.ExtensionValidator: boolean validateManifestResources(java.lang.String,java.util.ArrayList)>(r2, r3);
        return $z6;

        catch javax.naming.NamingException from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.util.NoSuchElementException from label1 to label2 with label8;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label1 to label4 with label14;
        catch java.lang.Throwable from label9 to label10 with label14;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch javax.naming.NamingException from label24 to label29 with label30;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.io.IOException from label24 to label29 with label35;
        catch java.lang.Throwable from label24 to label31 with label37;
        catch java.lang.Throwable from label36 to label37 with label37;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch java.lang.Throwable from label43 to label44 with label45;
    }

    public static void addSystemResource(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        java.io.FileInputStream r1, $r6;
        java.util.jar.Manifest r2;
        org.apache.catalina.util.ManifestResource r3, $r7;
        java.lang.Throwable r4, $r10;
        java.io.IOException r5, $r11, $r12, r13;
        java.lang.String $r8;
        java.util.ArrayList $r9;

        r0 := @parameter0: java.io.File;
        r1 = null;

     label0:
        $r6 = new java.io.FileInputStream;
        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>(r0);
        r1 = $r6;
        r2 = staticinvoke <org.apache.catalina.util.ExtensionValidator: java.util.jar.Manifest getManifest(java.io.InputStream)>(r1);
        if r2 == null goto label6;

        $r7 = new org.apache.catalina.util.ManifestResource;
        $r8 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();
        specialinvoke $r7.<org.apache.catalina.util.ManifestResource: void <init>(java.lang.String,java.util.jar.Manifest,int)>($r8, r2, 1);
        r3 = $r7;
        $r9 = <org.apache.catalina.util.ExtensionValidator: java.util.ArrayList containerManifestResources>;
        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);
        goto label6;

     label1:
        $r10 := @caughtexception;
        r4 = $r10;
        if r1 == null goto label5;

     label2:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;
        r5 = $r11;

     label5:
        throw r4;

     label6:
        if r1 == null goto label10;

     label7:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label8:
        goto label10;

     label9:
        $r12 := @caughtexception;
        r13 = $r12;

     label10:
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
        catch java.io.IOException from label2 to label3 with label4;
        catch java.io.IOException from label7 to label8 with label9;
    }

    private static boolean validateManifestResources(java.lang.String, java.util.ArrayList)
    {
        java.lang.String r0, $r24, $r25, $r26, $r31, $r32, $r33;
        java.util.ArrayList r1, r2, r5, $r11, $r12, $r13, $r16, $r17;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int i0;
        java.util.Iterator r3, r6, r8, r18;
        org.apache.catalina.util.ManifestResource r4;
        org.apache.catalina.util.Extension r7, r9, r20;
        java.lang.Object $r10, $r14, $r15, $r19;
        org.apache.juli.logging.Log $r21, $r27;
        org.apache.tomcat.util.res.StringManager $r22, $r28;
        java.lang.Object[] $r23, $r29;
        java.lang.StringBuilder $r30;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.ArrayList;
        z0 = 1;
        i0 = 0;
        r2 = null;
        r3 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label12;

     label0:
        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.apache.catalina.util.ManifestResource) $r10;
        r5 = virtualinvoke r4.<org.apache.catalina.util.ManifestResource: java.util.ArrayList getRequiredExtensions()>();
        if r5 != null goto label1;

        goto label12;

     label1:
        if r2 != null goto label2;

        r2 = staticinvoke <org.apache.catalina.util.ExtensionValidator: java.util.ArrayList buildAvailableExtensionsList(java.util.ArrayList)>(r1);

     label2:
        $r11 = <org.apache.catalina.util.ExtensionValidator: java.util.ArrayList containerAvailableExtensions>;
        if $r11 != null goto label3;

        $r12 = <org.apache.catalina.util.ExtensionValidator: java.util.ArrayList containerManifestResources>;
        $r13 = staticinvoke <org.apache.catalina.util.ExtensionValidator: java.util.ArrayList buildAvailableExtensionsList(java.util.ArrayList)>($r12);
        <org.apache.catalina.util.ExtensionValidator: java.util.ArrayList containerAvailableExtensions> = $r13;

     label3:
        r6 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label11;

     label4:
        z1 = 0;
        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (org.apache.catalina.util.Extension) $r14;
        if r2 == null goto label7;

        r8 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label6;

     label5:
        $r15 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
        r9 = (org.apache.catalina.util.Extension) $r15;
        $z2 = virtualinvoke r9.<org.apache.catalina.util.Extension: boolean isCompatibleWith(org.apache.catalina.util.Extension)>(r7);
        if $z2 == 0 goto label6;

        virtualinvoke r7.<org.apache.catalina.util.Extension: void setFulfilled(boolean)>(1);
        z1 = 1;
        goto label7;

     label6:
        $z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label5;

     label7:
        if z1 != 0 goto label10;

        $r16 = <org.apache.catalina.util.ExtensionValidator: java.util.ArrayList containerAvailableExtensions>;
        if $r16 == null goto label10;

        $r17 = <org.apache.catalina.util.ExtensionValidator: java.util.ArrayList containerAvailableExtensions>;
        r18 = virtualinvoke $r17.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label9;

     label8:
        $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();
        r20 = (org.apache.catalina.util.Extension) $r19;
        $z4 = virtualinvoke r20.<org.apache.catalina.util.Extension: boolean isCompatibleWith(org.apache.catalina.util.Extension)>(r7);
        if $z4 == 0 goto label9;

        virtualinvoke r7.<org.apache.catalina.util.Extension: void setFulfilled(boolean)>(1);
        z1 = 1;
        goto label10;

     label9:
        $z5 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();
        if $z5 != 0 goto label8;

     label10:
        if z1 != 0 goto label11;

        $r21 = <org.apache.catalina.util.ExtensionValidator: org.apache.juli.logging.Log log>;
        $r22 = <org.apache.catalina.util.ExtensionValidator: org.apache.tomcat.util.res.StringManager sm>;
        $r23 = newarray (java.lang.Object)[3];
        $r23[0] = r0;
        $r24 = virtualinvoke r4.<org.apache.catalina.util.ManifestResource: java.lang.String getResourceName()>();
        $r23[1] = $r24;
        $r25 = virtualinvoke r7.<org.apache.catalina.util.Extension: java.lang.String getExtensionName()>();
        $r23[2] = $r25;
        $r26 = virtualinvoke $r22.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("extensionValidator.extension-not-found-error", $r23);
        interfaceinvoke $r21.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r26);
        z0 = 0;
        i0 = i0 + 1;

     label11:
        $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z6 != 0 goto label4;

     label12:
        $z7 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z7 != 0 goto label0;

        if z0 != 0 goto label13;

        $r27 = <org.apache.catalina.util.ExtensionValidator: org.apache.juli.logging.Log log>;
        $r28 = <org.apache.catalina.util.ExtensionValidator: org.apache.tomcat.util.res.StringManager sm>;
        $r29 = newarray (java.lang.Object)[2];
        $r29[0] = r0;
        $r30 = new java.lang.StringBuilder;
        $r31 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>($r31);
        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        $r29[1] = $r32;
        $r33 = virtualinvoke $r28.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("extensionValidator.extension-validation-error", $r29);
        interfaceinvoke $r27.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r33);

     label13:
        return z0;
    }

    private static java.util.ArrayList buildAvailableExtensionsList(java.util.ArrayList)
    {
        java.util.ArrayList r0, r1, r4, $r9;
        java.util.Iterator r2, r5;
        org.apache.catalina.util.ManifestResource r3;
        org.apache.catalina.util.Extension r6;
        java.lang.Object $r7, $r8;
        boolean $z2, $z3;

        r0 := @parameter0: java.util.ArrayList;
        r1 = null;
        r2 = virtualinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label4;

     label0:
        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.apache.catalina.util.ManifestResource) $r7;
        r4 = virtualinvoke r3.<org.apache.catalina.util.ManifestResource: java.util.ArrayList getAvailableExtensions()>();
        if r4 == null goto label4;

        r5 = virtualinvoke r4.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label3;

     label1:
        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (org.apache.catalina.util.Extension) $r8;
        if r1 != null goto label2;

        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r1 = $r9;
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);
        goto label3;

     label2:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label3:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label1;

     label4:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label0;

        return r1;
    }

    private static java.util.jar.Manifest getManifest(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        null_type n0;
        java.util.jar.JarInputStream r1, $r4;
        java.lang.Throwable r2, r3, $r6, $r7, $r8, r9;
        java.util.jar.Manifest r5;

        r0 := @parameter0: java.io.InputStream;
        n0 = null;
        r1 = null;

     label0:
        $r4 = new java.util.jar.JarInputStream;
        specialinvoke $r4.<java.util.jar.JarInputStream: void <init>(java.io.InputStream)>(r0);
        r1 = $r4;
        r5 = virtualinvoke r1.<java.util.jar.JarInputStream: java.util.jar.Manifest getManifest()>();
        virtualinvoke r1.<java.util.jar.JarInputStream: void close()>();
        r1 = null;
        goto label6;

     label1:
        $r6 := @caughtexception;
        r2 = $r6;
        if r1 == null goto label5;

     label2:
        virtualinvoke r1.<java.util.jar.JarInputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;
        r3 = $r7;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r3);

     label5:
        throw r2;

     label6:
        if r1 == null goto label10;

     label7:
        virtualinvoke r1.<java.util.jar.JarInputStream: void close()>();

     label8:
        goto label10;

     label9:
        $r8 := @caughtexception;
        r9 = $r8;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r9);

     label10:
        return r5;

        catch java.lang.Throwable from label0 to label1 with label1;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    private static void addFolderList(java.lang.String)
    {
        java.lang.String r0, r1, $r2, $r9, $r11, $r13, $r21;
        java.util.StringTokenizer r3, $r7;
        java.io.File r4, $r8, $r10, $r14, $r15, $r20;
        java.io.File[] r5;
        int i0, $i1;
        java.io.IOException r6, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.Locale $r12;
        org.apache.juli.logging.Log $r17;
        org.apache.tomcat.util.res.StringManager $r18;
        java.lang.Object[] $r19;

        r0 := @parameter0: java.lang.String;
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);
        if r1 == null goto label10;

        $r7 = new java.util.StringTokenizer;
        $r2 = <java.io.File: java.lang.String pathSeparator>;
        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, $r2);
        r3 = $r7;
        goto label9;

     label0:
        $r8 = new java.io.File;
        $r9 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9);
        r4 = $r8;
        $z0 = virtualinvoke r4.<java.io.File: boolean isDirectory()>();
        if $z0 != 0 goto label1;

        goto label9;

     label1:
        r5 = virtualinvoke r4.<java.io.File: java.io.File[] listFiles()>();
        if r5 != null goto label2;

        goto label9;

     label2:
        i0 = 0;
        goto label8;

     label3:
        $r10 = r5[i0];
        $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>();
        $r12 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r13 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r12);
        $z1 = virtualinvoke $r13.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");
        if $z1 == 0 goto label7;

        $r14 = r5[i0];
        $z2 = virtualinvoke $r14.<java.io.File: boolean isFile()>();
        if $z2 == 0 goto label7;

     label4:
        $r15 = r5[i0];
        staticinvoke <org.apache.catalina.util.ExtensionValidator: void addSystemResource(java.io.File)>($r15);

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;
        r6 = $r16;
        $r17 = <org.apache.catalina.util.ExtensionValidator: org.apache.juli.logging.Log log>;
        $r18 = <org.apache.catalina.util.ExtensionValidator: org.apache.tomcat.util.res.StringManager sm>;
        $r19 = newarray (java.lang.Object)[1];
        $r20 = r5[i0];
        $r19[0] = $r20;
        $r21 = virtualinvoke $r18.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("extensionValidator.failload", $r19);
        interfaceinvoke $r17.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r21, r6);

     label7:
        i0 = i0 + 1;

     label8:
        $i1 = lengthof r5;
        if i0 < $i1 goto label3;

     label9:
        $z3 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z3 != 0 goto label0;

     label10:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }
}
