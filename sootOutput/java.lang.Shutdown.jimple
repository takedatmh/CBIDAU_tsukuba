class java.lang.Shutdown extends java.lang.Object
{
    private static final int RUNNING;
    private static final int HOOKS;
    private static final int FINALIZERS;
    private static int state;
    private static boolean runFinalizersOnExit;
    private static final int MAX_SYSTEM_HOOKS;
    private static final java.lang.Runnable[] hooks;
    private static int currentRunningHook;
    private static java.lang.Object lock;
    private static java.lang.Object haltLock;

    void <init>()
    {
        java.lang.Shutdown r0;

        r0 := @this: java.lang.Shutdown;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static void setRunFinalizersOnExit(boolean)
    {
        boolean z0;
        java.lang.Object $r0, r1;
        java.lang.Throwable r2, $r3;

        z0 := @parameter0: boolean;
        $r0 = <java.lang.Shutdown: java.lang.Object lock>;
        r1 = $r0;
        entermonitor $r0;

     label0:
        <java.lang.Shutdown: boolean runFinalizersOnExit> = z0;
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r3 := @caughtexception;

     label3:
        r2 = $r3;
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    static void add(int, boolean, java.lang.Runnable)
    {
        int i0, $i1, $i2, $i3, $i4;
        boolean z0;
        java.lang.Runnable r0, $r6;
        java.lang.Object $r1, r2;
        java.lang.StringBuilder $r3, $r8, $r9, $r10;
        java.lang.Throwable r4, $r15;
        java.lang.Runnable[] $r5, $r14;
        java.lang.InternalError $r7;
        java.lang.String $r11;
        java.lang.IllegalStateException $r12, $r13;

        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        r0 := @parameter2: java.lang.Runnable;
        $r1 = <java.lang.Shutdown: java.lang.Object lock>;
        r2 = $r1;
        entermonitor $r1;

     label0:
        $r5 = <java.lang.Shutdown: java.lang.Runnable[] hooks>;
        $r6 = $r5[i0];
        if $r6 == null goto label1;

        $r7 = new java.lang.InternalError;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shutdown hook at slot ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already registered");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.lang.InternalError: void <init>(java.lang.String)>($r11);
        throw $r7;

     label1:
        if z0 != 0 goto label2;

        $i1 = <java.lang.Shutdown: int state>;
        if $i1 <= 0 goto label4;

        $r12 = new java.lang.IllegalStateException;
        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Shutdown in progress");
        throw $r12;

     label2:
        $i2 = <java.lang.Shutdown: int state>;
        if $i2 > 1 goto label3;

        $i3 = <java.lang.Shutdown: int state>;
        if $i3 != 1 goto label4;

        $i4 = <java.lang.Shutdown: int currentRunningHook>;
        if i0 > $i4 goto label4;

     label3:
        $r13 = new java.lang.IllegalStateException;
        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Shutdown in progress");
        throw $r13;

     label4:
        $r14 = <java.lang.Shutdown: java.lang.Runnable[] hooks>;
        $r14[i0] = r0;
        exitmonitor r2;

     label5:
        goto label9;

     label6:
        $r15 := @caughtexception;

     label7:
        r4 = $r15;
        exitmonitor r2;

     label8:
        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label0 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private static void runHooks()
    {
        int i0;
        java.lang.Object r0, $r3;
        java.lang.Runnable r1;
        java.lang.Throwable r2, $r5, $r6, r7;
        java.lang.Runnable[] $r4;
        boolean $z0;
        java.lang.ThreadDeath r8;

        i0 = 0;

     label0:
        if i0 >= 10 goto label11;

     label1:
        $r3 = <java.lang.Shutdown: java.lang.Object lock>;
        r0 = $r3;
        entermonitor $r3;

     label2:
        <java.lang.Shutdown: int currentRunningHook> = i0;
        $r4 = <java.lang.Shutdown: java.lang.Runnable[] hooks>;
        r1 = $r4[i0];
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        r2 = $r5;
        exitmonitor r0;

     label6:
        throw r2;

     label7:
        if r1 == null goto label8;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label8:
        goto label10;

     label9:
        $r6 := @caughtexception;
        r7 = $r6;
        $z0 = r7 instanceof java.lang.ThreadDeath;
        if $z0 == 0 goto label10;

        r8 = (java.lang.ThreadDeath) r7;
        throw r8;

     label10:
        i0 = i0 + 1;
        goto label0;

     label11:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label1 to label8 with label9;
    }

    static void halt(int)
    {
        int i0;
        java.lang.Object $r0, r1;
        java.lang.Throwable r2, $r3;

        i0 := @parameter0: int;
        $r0 = <java.lang.Shutdown: java.lang.Object haltLock>;
        r1 = $r0;
        entermonitor $r0;

     label0:
        staticinvoke <java.lang.Shutdown: void halt0(int)>(i0);
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r3 := @caughtexception;

     label3:
        r2 = $r3;
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    static native void halt0(int);

    private static native void runAllFinalizers();

    private static void sequence()
    {
        java.lang.Object $r0, r1, $r5, r6;
        java.lang.Throwable r2, r3, $r4, $r7;
        int $i0;
        boolean z0;

        $r0 = <java.lang.Shutdown: java.lang.Object lock>;
        r1 = $r0;
        entermonitor $r0;

     label0:
        $i0 = <java.lang.Shutdown: int state>;
        if $i0 == 1 goto label2;

        exitmonitor r1;

     label1:
        return;

     label2:
        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r4 := @caughtexception;

     label5:
        r2 = $r4;
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        staticinvoke <java.lang.Shutdown: void runHooks()>();
        $r5 = <java.lang.Shutdown: java.lang.Object lock>;
        r6 = $r5;
        entermonitor $r5;

     label8:
        <java.lang.Shutdown: int state> = 2;
        z0 = <java.lang.Shutdown: boolean runFinalizersOnExit>;
        exitmonitor r6;

     label9:
        goto label13;

     label10:
        $r7 := @caughtexception;

     label11:
        r3 = $r7;
        exitmonitor r6;

     label12:
        throw r3;

     label13:
        if z0 == 0 goto label14;

        staticinvoke <java.lang.Shutdown: void runAllFinalizers()>();

     label14:
        return;

        catch java.lang.Throwable from label0 to label1 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label8 to label9 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    static void exit(int)
    {
        int i0, $i1;
        boolean z0;
        java.lang.Object r0, $r3;
        java.lang.Throwable r1, r2, $r4, $r7;
        java.lang.Class $r5, r6;

        i0 := @parameter0: int;
        z0 = 0;
        $r3 = <java.lang.Shutdown: java.lang.Object lock>;
        r0 = $r3;
        entermonitor $r3;

     label0:
        if i0 == 0 goto label1;

        <java.lang.Shutdown: boolean runFinalizersOnExit> = 0;

     label1:
        $i1 = <java.lang.Shutdown: int state>;
        tableswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label6;
        };

     label2:
        <java.lang.Shutdown: int state> = 1;
        goto label6;

     label3:
        goto label6;

     label4:
        if i0 == 0 goto label5;

        staticinvoke <java.lang.Shutdown: void halt(int)>(i0);
        goto label6;

     label5:
        z0 = <java.lang.Shutdown: boolean runFinalizersOnExit>;

     label6:
        exitmonitor r0;

     label7:
        goto label11;

     label8:
        $r4 := @caughtexception;

     label9:
        r1 = $r4;
        exitmonitor r0;

     label10:
        throw r1;

     label11:
        if z0 == 0 goto label12;

        staticinvoke <java.lang.Shutdown: void runAllFinalizers()>();
        staticinvoke <java.lang.Shutdown: void halt(int)>(i0);

     label12:
        $r5 = class "java/lang/Shutdown";
        r6 = $r5;
        entermonitor $r5;

     label13:
        staticinvoke <java.lang.Shutdown: void sequence()>();
        staticinvoke <java.lang.Shutdown: void halt(int)>(i0);
        exitmonitor r6;

     label14:
        goto label18;

     label15:
        $r7 := @caughtexception;

     label16:
        r2 = $r7;
        exitmonitor r6;

     label17:
        throw r2;

     label18:
        return;

        catch java.lang.Throwable from label0 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    static void shutdown()
    {
        java.lang.Object $r0, r1;
        java.lang.Throwable r2, r3, $r4, $r7;
        int $i0;
        java.lang.Class $r5, r6;

        $r0 = <java.lang.Shutdown: java.lang.Object lock>;
        r1 = $r0;
        entermonitor $r0;

     label0:
        $i0 = <java.lang.Shutdown: int state>;
        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label2;
            default: goto label2;
        };

     label1:
        <java.lang.Shutdown: int state> = 1;
        goto label2;

     label2:
        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r4 := @caughtexception;

     label5:
        r2 = $r4;
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r5 = class "java/lang/Shutdown";
        r6 = $r5;
        entermonitor $r5;

     label8:
        staticinvoke <java.lang.Shutdown: void sequence()>();
        exitmonitor r6;

     label9:
        goto label13;

     label10:
        $r7 := @caughtexception;

     label11:
        r3 = $r7;
        exitmonitor r6;

     label12:
        throw r3;

     label13:
        return;

        catch java.lang.Throwable from label0 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label8 to label9 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    static void <clinit>()
    {
        java.lang.Runnable[] $r0;
        java.lang.Shutdown$Lock $r1, $r2;

        <java.lang.Shutdown: int state> = 0;
        <java.lang.Shutdown: boolean runFinalizersOnExit> = 0;
        $r0 = newarray (java.lang.Runnable)[10];
        <java.lang.Shutdown: java.lang.Runnable[] hooks> = $r0;
        <java.lang.Shutdown: int currentRunningHook> = 0;
        $r1 = new java.lang.Shutdown$Lock;
        specialinvoke $r1.<java.lang.Shutdown$Lock: void <init>(java.lang.Shutdown$1)>(null);
        <java.lang.Shutdown: java.lang.Object lock> = $r1;
        $r2 = new java.lang.Shutdown$Lock;
        specialinvoke $r2.<java.lang.Shutdown$Lock: void <init>(java.lang.Shutdown$1)>(null);
        <java.lang.Shutdown: java.lang.Object haltLock> = $r2;
        return;
    }
}
