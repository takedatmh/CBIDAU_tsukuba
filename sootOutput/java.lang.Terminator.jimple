class java.lang.Terminator extends java.lang.Object
{
    private static sun.misc.SignalHandler handler;

    void <init>()
    {
        java.lang.Terminator r0;

        r0 := @this: java.lang.Terminator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static void setup()
    {
        sun.misc.SignalHandler $r0;
        java.lang.Terminator$1 r1, $r3;
        java.lang.IllegalArgumentException r2, $r6, $r9, r10, $r13, r14;
        sun.misc.Signal $r4, $r7, $r11;

        $r0 = <java.lang.Terminator: sun.misc.SignalHandler handler>;
        if $r0 == null goto label0;

        return;

     label0:
        $r3 = new java.lang.Terminator$1;
        specialinvoke $r3.<java.lang.Terminator$1: void <init>()>();
        r1 = $r3;
        <java.lang.Terminator: sun.misc.SignalHandler handler> = r1;

     label1:
        $r4 = new sun.misc.Signal;
        specialinvoke $r4.<sun.misc.Signal: void <init>(java.lang.String)>("HUP");
        staticinvoke <sun.misc.Signal: sun.misc.SignalHandler handle(sun.misc.Signal,sun.misc.SignalHandler)>($r4, r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r2 = $r6;

     label4:
        $r7 = new sun.misc.Signal;
        specialinvoke $r7.<sun.misc.Signal: void <init>(java.lang.String)>("INT");
        staticinvoke <sun.misc.Signal: sun.misc.SignalHandler handle(sun.misc.Signal,sun.misc.SignalHandler)>($r7, r1);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;
        r10 = $r9;

     label7:
        $r11 = new sun.misc.Signal;
        specialinvoke $r11.<sun.misc.Signal: void <init>(java.lang.String)>("TERM");
        staticinvoke <sun.misc.Signal: sun.misc.SignalHandler handle(sun.misc.Signal,sun.misc.SignalHandler)>($r11, r1);

     label8:
        goto label10;

     label9:
        $r13 := @caughtexception;
        r14 = $r13;

     label10:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
        catch java.lang.IllegalArgumentException from label7 to label8 with label9;
    }

    static void teardown()
    {
        return;
    }

    static void <clinit>()
    {
        <java.lang.Terminator: sun.misc.SignalHandler handler> = null;
        return;
    }
}
