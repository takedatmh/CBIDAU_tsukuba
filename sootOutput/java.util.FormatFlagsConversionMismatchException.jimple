public class java.util.FormatFlagsConversionMismatchException extends java.util.IllegalFormatException
{
    private static final long serialVersionUID;
    private java.lang.String f;
    private char c;

    public void <init>(java.lang.String, char)
    {
        java.util.FormatFlagsConversionMismatchException r0;
        java.lang.String r1;
        char c0;
        java.lang.NullPointerException $r2;

        r0 := @this: java.util.FormatFlagsConversionMismatchException;
        r1 := @parameter0: java.lang.String;
        c0 := @parameter1: char;
        specialinvoke r0.<java.util.IllegalFormatException: void <init>()>();
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        r0.<java.util.FormatFlagsConversionMismatchException: java.lang.String f> = r1;
        r0.<java.util.FormatFlagsConversionMismatchException: char c> = c0;
        return;
    }

    public java.lang.String getFlags()
    {
        java.util.FormatFlagsConversionMismatchException r0;
        java.lang.String $r1;

        r0 := @this: java.util.FormatFlagsConversionMismatchException;
        $r1 = r0.<java.util.FormatFlagsConversionMismatchException: java.lang.String f>;
        return $r1;
    }

    public char getConversion()
    {
        java.util.FormatFlagsConversionMismatchException r0;
        char $c0;

        r0 := @this: java.util.FormatFlagsConversionMismatchException;
        $c0 = r0.<java.util.FormatFlagsConversionMismatchException: char c>;
        return $c0;
    }

    public java.lang.String getMessage()
    {
        java.util.FormatFlagsConversionMismatchException r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6;
        char $c0;
        java.lang.String $r5, $r7;

        r0 := @this: java.util.FormatFlagsConversionMismatchException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conversion = ");
        $c0 = r0.<java.util.FormatFlagsConversionMismatchException: char c>;
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Flags = ");
        $r5 = r0.<java.util.FormatFlagsConversionMismatchException: java.lang.String f>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }
}
