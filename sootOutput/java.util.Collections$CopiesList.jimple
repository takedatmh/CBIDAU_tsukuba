class java.util.Collections$CopiesList extends java.util.AbstractList implements java.util.RandomAccess, java.io.Serializable
{
    private static final long serialVersionUID;
    final int n;
    final java.lang.Object element;
    static final boolean $assertionsDisabled;

    void <init>(int, java.lang.Object)
    {
        java.util.Collections$CopiesList r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.AssertionError $r2;

        r0 := @this: java.util.Collections$CopiesList;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        specialinvoke r0.<java.util.AbstractList: void <init>()>();
        $z0 = <java.util.Collections$CopiesList: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        if i0 >= 0 goto label0;

        $r2 = new java.lang.AssertionError;
        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();
        throw $r2;

     label0:
        r0.<java.util.Collections$CopiesList: int n> = i0;
        r0.<java.util.Collections$CopiesList: java.lang.Object element> = r1;
        return;
    }

    public int size()
    {
        java.util.Collections$CopiesList r0;
        int $i0;

        r0 := @this: java.util.Collections$CopiesList;
        $i0 = r0.<java.util.Collections$CopiesList: int n>;
        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Collections$CopiesList r0;
        java.lang.Object r1, $r2;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: java.util.Collections$CopiesList;
        r1 := @parameter0: java.lang.Object;
        $i0 = r0.<java.util.Collections$CopiesList: int n>;
        if $i0 == 0 goto label0;

        $r2 = r0.<java.util.Collections$CopiesList: java.lang.Object element>;
        $z0 = staticinvoke <java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>(r1, $r2);
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public int indexOf(java.lang.Object)
    {
        java.util.Collections$CopiesList r0;
        java.lang.Object r1;
        boolean $z0;
        byte $b0;

        r0 := @this: java.util.Collections$CopiesList;
        r1 := @parameter0: java.lang.Object;
        $z0 = virtualinvoke r0.<java.util.Collections$CopiesList: boolean contains(java.lang.Object)>(r1);
        if $z0 == 0 goto label0;

        $b0 = 0;
        goto label1;

     label0:
        $b0 = -1;

     label1:
        return $b0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.util.Collections$CopiesList r0;
        java.lang.Object r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: java.util.Collections$CopiesList;
        r1 := @parameter0: java.lang.Object;
        $z0 = virtualinvoke r0.<java.util.Collections$CopiesList: boolean contains(java.lang.Object)>(r1);
        if $z0 == 0 goto label0;

        $i0 = r0.<java.util.Collections$CopiesList: int n>;
        $i1 = $i0 - 1;
        goto label1;

     label0:
        $i1 = -1;

     label1:
        return $i1;
    }

    public java.lang.Object get(int)
    {
        java.util.Collections$CopiesList r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.String $r7;
        java.lang.Object $r8;

        r0 := @this: java.util.Collections$CopiesList;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i1 = r0.<java.util.Collections$CopiesList: int n>;
        if i0 < $i1 goto label1;

     label0:
        $r2 = new java.lang.IndexOutOfBoundsException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Size: ");
        $i2 = r0.<java.util.Collections$CopiesList: int n>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);
        throw $r2;

     label1:
        $r8 = r0.<java.util.Collections$CopiesList: java.lang.Object element>;
        return $r8;
    }

    public java.lang.Object[] toArray()
    {
        java.util.Collections$CopiesList r0;
        java.lang.Object[] r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3;

        r0 := @this: java.util.Collections$CopiesList;
        $i0 = r0.<java.util.Collections$CopiesList: int n>;
        r1 = newarray (java.lang.Object)[$i0];
        $r2 = r0.<java.util.Collections$CopiesList: java.lang.Object element>;
        if $r2 == null goto label0;

        $i1 = r0.<java.util.Collections$CopiesList: int n>;
        $r3 = r0.<java.util.Collections$CopiesList: java.lang.Object element>;
        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>(r1, 0, $i1, $r3);

     label0:
        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.Collections$CopiesList r0;
        java.lang.Object[] r1, $r5;
        int i0, $i1, $i2;
        java.lang.Class $r2, $r3;
        java.lang.Object $r4, $r6, $r7, $r8;

        r0 := @this: java.util.Collections$CopiesList;
        r1 := @parameter0: java.lang.Object[];
        i0 = r0.<java.util.Collections$CopiesList: int n>;
        $i1 = lengthof r1;
        if $i1 >= i0 goto label0;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();
        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, i0);
        $r5 = (java.lang.Object[]) $r4;
        r1 = (java.lang.Object[]) $r5;
        $r6 = r0.<java.util.Collections$CopiesList: java.lang.Object element>;
        if $r6 == null goto label1;

        $r7 = r0.<java.util.Collections$CopiesList: java.lang.Object element>;
        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>(r1, 0, i0, $r7);
        goto label1;

     label0:
        $r8 = r0.<java.util.Collections$CopiesList: java.lang.Object element>;
        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>(r1, 0, i0, $r8);
        $i2 = lengthof r1;
        if $i2 <= i0 goto label1;

        r1[i0] = null;

     label1:
        return r1;
    }

    public java.util.List subList(int, int)
    {
        java.util.Collections$CopiesList r0, $r19;
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r3, $r4, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.IndexOutOfBoundsException $r2, $r6;
        java.lang.String $r5, $r10, $r18;
        java.lang.IllegalArgumentException $r11;
        java.lang.Object $r20;

        r0 := @this: java.util.Collections$CopiesList;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 >= 0 goto label0;

        $r2 = new java.lang.IndexOutOfBoundsException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromIndex = ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $i2 = r0.<java.util.Collections$CopiesList: int n>;
        if i1 <= $i2 goto label1;

        $r6 = new java.lang.IndexOutOfBoundsException;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("toIndex = ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label1:
        if i0 <= i1 goto label2;

        $r11 = new java.lang.IllegalArgumentException;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromIndex(");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") > toIndex(");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);
        throw $r11;

     label2:
        $r19 = new java.util.Collections$CopiesList;
        $i3 = i1 - i0;
        $r20 = r0.<java.util.Collections$CopiesList: java.lang.Object element>;
        specialinvoke $r19.<java.util.Collections$CopiesList: void <init>(int,java.lang.Object)>($i3, $r20);
        return $r19;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "java/util/Collections";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.util.Collections$CopiesList: boolean $assertionsDisabled> = $z1;
        return;
    }
}
