final class org.apache.catalina.startup.IgnoreAnnotationsRule extends org.apache.tomcat.util.digester.Rule
{

    public void <init>()
    {
        org.apache.catalina.startup.IgnoreAnnotationsRule r0;

        r0 := @this: org.apache.catalina.startup.IgnoreAnnotationsRule;
        specialinvoke r0.<org.apache.tomcat.util.digester.Rule: void <init>()>();
        return;
    }

    public void begin(java.lang.String, java.lang.String, org.xml.sax.Attributes) throws java.lang.Exception
    {
        org.apache.catalina.startup.IgnoreAnnotationsRule r0;
        java.lang.String r1, r2, r5, $r9, $r10, $r17, $r18, $r22;
        org.xml.sax.Attributes r3;
        org.apache.catalina.deploy.WebXml r4;
        org.apache.tomcat.util.digester.Digester $r6, $r7, $r11, $r13;
        int $i0, $i1;
        java.lang.Object $r8;
        boolean $z0, $z1, $z2, $z3;
        org.apache.juli.logging.Log $r12, $r14;
        java.lang.StringBuilder $r15, $r19, $r20, $r21;
        java.lang.Class $r16;

        r0 := @this: org.apache.catalina.startup.IgnoreAnnotationsRule;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.xml.sax.Attributes;
        $r6 = r0.<org.apache.catalina.startup.IgnoreAnnotationsRule: org.apache.tomcat.util.digester.Digester digester>;
        $r7 = r0.<org.apache.catalina.startup.IgnoreAnnotationsRule: org.apache.tomcat.util.digester.Digester digester>;
        $i0 = virtualinvoke $r7.<org.apache.tomcat.util.digester.Digester: int getCount()>();
        $i1 = $i0 - 1;
        $r8 = virtualinvoke $r6.<org.apache.tomcat.util.digester.Digester: java.lang.Object peek(int)>($i1);
        r4 = (org.apache.catalina.deploy.WebXml) $r8;
        r5 = interfaceinvoke r3.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("metadata-complete");
        $r9 = "true";
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z0 == 0 goto label0;

        virtualinvoke r4.<org.apache.catalina.deploy.WebXml: void setMetadataComplete(boolean)>(1);
        goto label1;

     label0:
        $r10 = "false";
        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z1 == 0 goto label1;

        virtualinvoke r4.<org.apache.catalina.deploy.WebXml: void setMetadataComplete(boolean)>(0);

     label1:
        $r11 = r0.<org.apache.catalina.startup.IgnoreAnnotationsRule: org.apache.tomcat.util.digester.Digester digester>;
        $r12 = virtualinvoke $r11.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log getLogger()>();
        $z2 = interfaceinvoke $r12.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label2;

        $r13 = r0.<org.apache.catalina.startup.IgnoreAnnotationsRule: org.apache.tomcat.util.digester.Digester digester>;
        $r14 = virtualinvoke $r13.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log getLogger()>();
        $r15 = new java.lang.StringBuilder;
        $r16 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();
        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r18);
        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".setMetadataComplete( ");
        $z3 = virtualinvoke r4.<org.apache.catalina.deploy.WebXml: boolean isMetadataComplete()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r22);

     label2:
        return;
    }
}
