public class sun.net.www.http.KeepAliveCache extends java.util.HashMap implements java.lang.Runnable
{
    private static final long serialVersionUID;
    static final int MAX_CONNECTIONS;
    static int result;
    static final int LIFETIME;
    private java.lang.Thread keepAliveTimer;

    static int getMaxConnections()
    {
        int $i0, $i1, $i2, $i3;
        sun.security.action.GetIntegerAction $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;

        $i0 = <sun.net.www.http.KeepAliveCache: int result>;
        if $i0 != -1 goto label0;

        $r0 = new sun.security.action.GetIntegerAction;
        specialinvoke $r0.<sun.security.action.GetIntegerAction: void <init>(java.lang.String,int)>("http.maxConnections", 5);
        $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        $r2 = (java.lang.Integer) $r1;
        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();
        <sun.net.www.http.KeepAliveCache: int result> = $i1;
        $i2 = <sun.net.www.http.KeepAliveCache: int result>;
        if $i2 > 0 goto label0;

        <sun.net.www.http.KeepAliveCache: int result> = 5;

     label0:
        $i3 = <sun.net.www.http.KeepAliveCache: int result>;
        return $i3;
    }

    public void <init>()
    {
        sun.net.www.http.KeepAliveCache r0;

        r0 := @this: sun.net.www.http.KeepAliveCache;
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        r0.<sun.net.www.http.KeepAliveCache: java.lang.Thread keepAliveTimer> = null;
        return;
    }

    public synchronized void put(java.net.URL, java.lang.Object, sun.net.www.http.HttpClient)
    {
        sun.net.www.http.KeepAliveCache r0, r4;
        java.net.URL r1;
        java.lang.Object r2, $r12;
        sun.net.www.http.HttpClient r3;
        boolean z0, $z1, $z2;
        sun.net.www.http.ClientVector r5, $r13, r15;
        int i0, $i1;
        java.lang.Thread $r6, $r7;
        sun.net.www.http.KeepAliveCache$1 $r8;
        sun.net.www.http.KeepAliveKey $r10, r11;

        r0 := @this: sun.net.www.http.KeepAliveCache;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: sun.net.www.http.HttpClient;
        $r6 = r0.<sun.net.www.http.KeepAliveCache: java.lang.Thread keepAliveTimer>;
        if $r6 != null goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;
        if z0 != 0 goto label2;

        $r7 = r0.<sun.net.www.http.KeepAliveCache: java.lang.Thread keepAliveTimer>;
        $z2 = virtualinvoke $r7.<java.lang.Thread: boolean isAlive()>();
        if $z2 != 0 goto label2;

        z0 = 1;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<sun.net.www.http.KeepAliveCache: void clear()>();
        r4 = r0;
        $r8 = new sun.net.www.http.KeepAliveCache$1;
        specialinvoke $r8.<sun.net.www.http.KeepAliveCache$1: void <init>(sun.net.www.http.KeepAliveCache,sun.net.www.http.KeepAliveCache)>(r0, r4);
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r8);

     label3:
        $r10 = new sun.net.www.http.KeepAliveKey;
        specialinvoke $r10.<sun.net.www.http.KeepAliveKey: void <init>(java.net.URL,java.lang.Object)>(r1, r2);
        r11 = $r10;
        $r12 = specialinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r11);
        r5 = (sun.net.www.http.ClientVector) $r12;
        if r5 != null goto label6;

        i0 = virtualinvoke r3.<sun.net.www.http.HttpClient: int getKeepAliveTimeout()>();
        $r13 = new sun.net.www.http.ClientVector;
        if i0 <= 0 goto label4;

        $i1 = i0 * 1000;
        goto label5;

     label4:
        $i1 = 5000;

     label5:
        specialinvoke $r13.<sun.net.www.http.ClientVector: void <init>(int)>($i1);
        r15 = $r13;
        virtualinvoke r15.<sun.net.www.http.ClientVector: void put(sun.net.www.http.HttpClient)>(r3);
        specialinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r15);
        goto label7;

     label6:
        virtualinvoke r5.<sun.net.www.http.ClientVector: void put(sun.net.www.http.HttpClient)>(r3);

     label7:
        return;
    }

    public synchronized void remove(sun.net.www.http.HttpClient, java.lang.Object)
    {
        sun.net.www.http.KeepAliveCache r0;
        sun.net.www.http.HttpClient r1;
        java.lang.Object r2, $r7;
        sun.net.www.http.KeepAliveKey $r3, r4;
        sun.net.www.http.ClientVector r5;
        java.net.URL $r6;
        boolean $z1;

        r0 := @this: sun.net.www.http.KeepAliveCache;
        r1 := @parameter0: sun.net.www.http.HttpClient;
        r2 := @parameter1: java.lang.Object;
        $r3 = new sun.net.www.http.KeepAliveKey;
        $r6 = r1.<sun.net.www.http.HttpClient: java.net.URL url>;
        specialinvoke $r3.<sun.net.www.http.KeepAliveKey: void <init>(java.net.URL,java.lang.Object)>($r6, r2);
        r4 = $r3;
        $r7 = specialinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (sun.net.www.http.ClientVector) $r7;
        if r5 == null goto label0;

        virtualinvoke r5.<sun.net.www.http.ClientVector: boolean remove(java.lang.Object)>(r1);
        $z1 = virtualinvoke r5.<sun.net.www.http.ClientVector: boolean empty()>();
        if $z1 == 0 goto label0;

        virtualinvoke r0.<sun.net.www.http.KeepAliveCache: void removeVector(sun.net.www.http.KeepAliveKey)>(r4);

     label0:
        return;
    }

    synchronized void removeVector(sun.net.www.http.KeepAliveKey)
    {
        sun.net.www.http.KeepAliveCache r0;
        sun.net.www.http.KeepAliveKey r1;

        r0 := @this: sun.net.www.http.KeepAliveCache;
        r1 := @parameter0: sun.net.www.http.KeepAliveKey;
        specialinvoke r0.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        return;
    }

    public synchronized sun.net.www.http.HttpClient get(java.net.URL, java.lang.Object)
    {
        sun.net.www.http.KeepAliveCache r0;
        java.net.URL r1;
        java.lang.Object r2, $r6;
        sun.net.www.http.KeepAliveKey $r3, r4;
        sun.net.www.http.ClientVector r5;
        sun.net.www.http.HttpClient $r7;

        r0 := @this: sun.net.www.http.KeepAliveCache;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.Object;
        $r3 = new sun.net.www.http.KeepAliveKey;
        specialinvoke $r3.<sun.net.www.http.KeepAliveKey: void <init>(java.net.URL,java.lang.Object)>(r1, r2);
        r4 = $r3;
        $r6 = specialinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (sun.net.www.http.ClientVector) $r6;
        if r5 != null goto label0;

        return null;

     label0:
        $r7 = virtualinvoke r5.<sun.net.www.http.ClientVector: sun.net.www.http.HttpClient get()>();
        return $r7;
    }

    public void run()
    {
        sun.net.www.http.KeepAliveCache r0, r13;
        java.lang.InterruptedException r1, $r11;
        long l0, $l3, $l4, $l6;
        java.util.ArrayList r2, $r14;
        java.util.Iterator r3, r22;
        sun.net.www.http.KeepAliveKey r4, r24;
        sun.net.www.http.ClientVector r5, r6;
        int i1, $i2, $i5, $i8, $i9;
        sun.net.www.http.KeepAliveEntry r7;
        sun.net.www.http.HttpClient r8;
        java.lang.Throwable r9, r10, $r21, $r25;
        java.util.Set $r15;
        boolean $z0, $z2;
        java.lang.Object $r16, $r17, $r19, $r23;
        byte $b7;
        java.util.List $r20;

        r0 := @this: sun.net.www.http.KeepAliveCache;

     label0:
        staticinvoke <java.lang.Thread: void sleep(long)>(5000L);

     label1:
        goto label3;

     label2:
        $r11 := @caughtexception;
        r1 = $r11;

     label3:
        r13 = r0;
        entermonitor r0;

     label4:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        r2 = $r14;
        $r15 = virtualinvoke r0.<sun.net.www.http.KeepAliveCache: java.util.Set keySet()>();
        r3 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label15;

        $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (sun.net.www.http.KeepAliveKey) $r16;
        $r17 = virtualinvoke r0.<sun.net.www.http.KeepAliveCache: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (sun.net.www.http.ClientVector) $r17;
        r6 = r5;
        entermonitor r5;

     label6:
        i1 = 0;

     label7:
        $i2 = virtualinvoke r5.<sun.net.www.http.ClientVector: int size()>();
        if i1 >= $i2 goto label8;

        $r19 = virtualinvoke r5.<sun.net.www.http.ClientVector: java.lang.Object elementAt(int)>(i1);
        r7 = (sun.net.www.http.KeepAliveEntry) $r19;
        $l3 = r7.<sun.net.www.http.KeepAliveEntry: long idleStartTime>;
        $l4 = l0 - $l3;
        $i5 = r5.<sun.net.www.http.ClientVector: int nap>;
        $l6 = (long) $i5;
        $b7 = $l4 cmp $l6;
        if $b7 <= 0 goto label8;

        r8 = r7.<sun.net.www.http.KeepAliveEntry: sun.net.www.http.HttpClient hc>;
        virtualinvoke r8.<sun.net.www.http.HttpClient: void closeServer()>();
        i1 = i1 + 1;
        goto label7;

     label8:
        $r20 = virtualinvoke r5.<sun.net.www.http.ClientVector: java.util.List subList(int,int)>(0, i1);
        interfaceinvoke $r20.<java.util.List: void clear()>();
        $i8 = virtualinvoke r5.<sun.net.www.http.ClientVector: int size()>();
        if $i8 != 0 goto label9;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label9:
        exitmonitor r6;

     label10:
        goto label14;

     label11:
        $r21 := @caughtexception;

     label12:
        r9 = $r21;
        exitmonitor r6;

     label13:
        throw r9;

     label14:
        goto label5;

     label15:
        r22 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label17;

        $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();
        r24 = (sun.net.www.http.KeepAliveKey) $r23;
        virtualinvoke r0.<sun.net.www.http.KeepAliveCache: void removeVector(sun.net.www.http.KeepAliveKey)>(r24);
        goto label16;

     label17:
        exitmonitor r13;

     label18:
        goto label22;

     label19:
        $r25 := @caughtexception;

     label20:
        r10 = $r25;
        exitmonitor r13;

     label21:
        throw r10;

     label22:
        $i9 = virtualinvoke r0.<sun.net.www.http.KeepAliveCache: int size()>();
        if $i9 > 0 goto label0;

        return;

        catch java.lang.InterruptedException from label0 to label1 with label2;
        catch java.lang.Throwable from label6 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label4 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        sun.net.www.http.KeepAliveCache r0;
        java.io.ObjectOutputStream r1;
        java.io.NotSerializableException $r2;

        r0 := @this: sun.net.www.http.KeepAliveCache;
        r1 := @parameter0: java.io.ObjectOutputStream;
        $r2 = new java.io.NotSerializableException;
        specialinvoke $r2.<java.io.NotSerializableException: void <init>()>();
        throw $r2;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        sun.net.www.http.KeepAliveCache r0;
        java.io.ObjectInputStream r1;
        java.io.NotSerializableException $r2;

        r0 := @this: sun.net.www.http.KeepAliveCache;
        r1 := @parameter0: java.io.ObjectInputStream;
        $r2 = new java.io.NotSerializableException;
        specialinvoke $r2.<java.io.NotSerializableException: void <init>()>();
        throw $r2;
    }

    static java.lang.Thread access$002(sun.net.www.http.KeepAliveCache, java.lang.Thread)
    {
        sun.net.www.http.KeepAliveCache r0;
        java.lang.Thread r1;

        r0 := @parameter0: sun.net.www.http.KeepAliveCache;
        r1 := @parameter1: java.lang.Thread;
        r0.<sun.net.www.http.KeepAliveCache: java.lang.Thread keepAliveTimer> = r1;
        return r1;
    }

    static java.lang.Thread access$000(sun.net.www.http.KeepAliveCache)
    {
        sun.net.www.http.KeepAliveCache r0;
        java.lang.Thread $r1;

        r0 := @parameter0: sun.net.www.http.KeepAliveCache;
        $r1 = r0.<sun.net.www.http.KeepAliveCache: java.lang.Thread keepAliveTimer>;
        return $r1;
    }

    static void <clinit>()
    {
        <sun.net.www.http.KeepAliveCache: int result> = -1;
        return;
    }
}
