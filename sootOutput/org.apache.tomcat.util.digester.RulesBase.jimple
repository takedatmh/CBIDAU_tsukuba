public class org.apache.tomcat.util.digester.RulesBase extends java.lang.Object implements org.apache.tomcat.util.digester.Rules
{
    protected java.util.HashMap cache;
    protected org.apache.tomcat.util.digester.Digester digester;
    protected java.lang.String namespaceURI;
    protected java.util.ArrayList rules;

    public void <init>()
    {
        org.apache.tomcat.util.digester.RulesBase r0;
        java.util.HashMap $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.tomcat.util.digester.RulesBase;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.digester.RulesBase: java.util.HashMap cache> = $r1;
        r0.<org.apache.tomcat.util.digester.RulesBase: org.apache.tomcat.util.digester.Digester digester> = null;
        r0.<org.apache.tomcat.util.digester.RulesBase: java.lang.String namespaceURI> = null;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.tomcat.util.digester.RulesBase: java.util.ArrayList rules> = $r2;
        return;
    }

    public org.apache.tomcat.util.digester.Digester getDigester()
    {
        org.apache.tomcat.util.digester.RulesBase r0;
        org.apache.tomcat.util.digester.Digester $r1;

        r0 := @this: org.apache.tomcat.util.digester.RulesBase;
        $r1 = r0.<org.apache.tomcat.util.digester.RulesBase: org.apache.tomcat.util.digester.Digester digester>;
        return $r1;
    }

    public void setDigester(org.apache.tomcat.util.digester.Digester)
    {
        org.apache.tomcat.util.digester.RulesBase r0;
        org.apache.tomcat.util.digester.Digester r1;
        java.util.Iterator r2;
        org.apache.tomcat.util.digester.Rule r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.RulesBase;
        r1 := @parameter0: org.apache.tomcat.util.digester.Digester;
        r0.<org.apache.tomcat.util.digester.RulesBase: org.apache.tomcat.util.digester.Digester digester> = r1;
        $r4 = r0.<org.apache.tomcat.util.digester.RulesBase: java.util.ArrayList rules>;
        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.apache.tomcat.util.digester.Rule) $r5;
        virtualinvoke r3.<org.apache.tomcat.util.digester.Rule: void setDigester(org.apache.tomcat.util.digester.Digester)>(r1);

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        return;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.tomcat.util.digester.RulesBase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.digester.RulesBase;
        $r1 = r0.<org.apache.tomcat.util.digester.RulesBase: java.lang.String namespaceURI>;
        return $r1;
    }

    public void setNamespaceURI(java.lang.String)
    {
        org.apache.tomcat.util.digester.RulesBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.tomcat.util.digester.RulesBase;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.tomcat.util.digester.RulesBase: java.lang.String namespaceURI> = r1;
        return;
    }

    public void add(java.lang.String, org.apache.tomcat.util.digester.Rule)
    {
        org.apache.tomcat.util.digester.RulesBase r0;
        java.lang.String r1, $r12, $r13;
        org.apache.tomcat.util.digester.Rule r2;
        int i0, $i1;
        java.util.List r3;
        boolean $z0;
        java.util.HashMap $r4, $r7;
        java.lang.Object $r5;
        java.util.ArrayList $r6, $r9;
        org.apache.tomcat.util.digester.Digester $r10, $r11;

        r0 := @this: org.apache.tomcat.util.digester.RulesBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.apache.tomcat.util.digester.Rule;
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if i0 <= 1 goto label0;

        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");
        if $z0 == 0 goto label0;

        $i1 = i0 - 1;
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label0:
        $r4 = r0.<org.apache.tomcat.util.digester.RulesBase: java.util.HashMap cache>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (java.util.List) $r5;
        if r3 != null goto label1;

        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r3 = $r6;
        $r7 = r0.<org.apache.tomcat.util.digester.RulesBase: java.util.HashMap cache>;
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label1:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);
        $r9 = r0.<org.apache.tomcat.util.digester.RulesBase: java.util.ArrayList rules>;
        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);
        $r10 = r0.<org.apache.tomcat.util.digester.RulesBase: org.apache.tomcat.util.digester.Digester digester>;
        if $r10 == null goto label2;

        $r11 = r0.<org.apache.tomcat.util.digester.RulesBase: org.apache.tomcat.util.digester.Digester digester>;
        virtualinvoke r2.<org.apache.tomcat.util.digester.Rule: void setDigester(org.apache.tomcat.util.digester.Digester)>($r11);

     label2:
        $r12 = r0.<org.apache.tomcat.util.digester.RulesBase: java.lang.String namespaceURI>;
        if $r12 == null goto label3;

        $r13 = r0.<org.apache.tomcat.util.digester.RulesBase: java.lang.String namespaceURI>;
        virtualinvoke r2.<org.apache.tomcat.util.digester.Rule: void setNamespaceURI(java.lang.String)>($r13);

     label3:
        return;
    }

    public void clear()
    {
        org.apache.tomcat.util.digester.RulesBase r0;
        java.util.HashMap $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.tomcat.util.digester.RulesBase;
        $r1 = r0.<org.apache.tomcat.util.digester.RulesBase: java.util.HashMap cache>;
        virtualinvoke $r1.<java.util.HashMap: void clear()>();
        $r2 = r0.<org.apache.tomcat.util.digester.RulesBase: java.util.ArrayList rules>;
        virtualinvoke $r2.<java.util.ArrayList: void clear()>();
        return;
    }

    public java.util.List match(java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.RulesBase r0;
        java.lang.String r1, r2, r4, r6, $r10, $r11;
        java.util.List r3;
        java.util.Iterator r5;
        int $i0, $i1, $i2;
        java.util.HashMap $r7;
        java.util.Set $r8;
        java.lang.Object $r9;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r12;

        r0 := @this: org.apache.tomcat.util.digester.RulesBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = virtualinvoke r0.<org.apache.tomcat.util.digester.RulesBase: java.util.List lookup(java.lang.String,java.lang.String)>(r1, r2);
        if r3 == null goto label0;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();
        if $i0 >= 1 goto label4;

     label0:
        r4 = "";
        $r7 = r0.<org.apache.tomcat.util.digester.RulesBase: java.util.HashMap cache>;
        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Set keySet()>();
        r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();
        goto label3;

     label1:
        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.lang.String) $r9;
        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("*/");
        if $z0 == 0 goto label3;

        $r10 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(2);
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if $z1 != 0 goto label2;

        $r11 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(1);
        $z2 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>($r11);
        if $z2 == 0 goto label3;

     label2:
        $i1 = virtualinvoke r6.<java.lang.String: int length()>();
        $i2 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i1 <= $i2 goto label3;

        r3 = virtualinvoke r0.<org.apache.tomcat.util.digester.RulesBase: java.util.List lookup(java.lang.String,java.lang.String)>(r1, r6);
        r4 = r6;

     label3:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label1;

     label4:
        if r3 != null goto label5;

        $r12 = new java.util.ArrayList;
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();
        r3 = $r12;

     label5:
        return r3;
    }

    public java.util.List rules()
    {
        org.apache.tomcat.util.digester.RulesBase r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.tomcat.util.digester.RulesBase;
        $r1 = r0.<org.apache.tomcat.util.digester.RulesBase: java.util.ArrayList rules>;
        return $r1;
    }

    protected java.util.List lookup(java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.RulesBase r0;
        java.lang.String r1, r2, $r11, $r12;
        java.util.List r3;
        java.util.ArrayList r4, $r9;
        java.util.Iterator r5;
        org.apache.tomcat.util.digester.Rule r6;
        java.util.HashMap $r7;
        java.lang.Object $r8, $r10;
        int $i0;
        boolean $z0, $z2;

        r0 := @this: org.apache.tomcat.util.digester.RulesBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r7 = r0.<org.apache.tomcat.util.digester.RulesBase: java.util.HashMap cache>;
        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);
        r3 = (java.util.List) $r8;
        if r3 != null goto label0;

        return null;

     label0:
        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label2;

     label1:
        return r3;

     label2:
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r4 = $r9;
        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();
        goto label5;

     label3:
        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (org.apache.tomcat.util.digester.Rule) $r10;
        $r11 = virtualinvoke r6.<org.apache.tomcat.util.digester.Rule: java.lang.String getNamespaceURI()>();
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r11);
        if $z0 != 0 goto label4;

        $r12 = virtualinvoke r6.<org.apache.tomcat.util.digester.Rule: java.lang.String getNamespaceURI()>();
        if $r12 != null goto label5;

     label4:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label5:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label3;

        return r4;
    }
}
