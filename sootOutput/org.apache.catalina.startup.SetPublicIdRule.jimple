final class org.apache.catalina.startup.SetPublicIdRule extends org.apache.tomcat.util.digester.Rule
{
    private java.lang.String method;

    public void <init>(java.lang.String)
    {
        org.apache.catalina.startup.SetPublicIdRule r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.startup.SetPublicIdRule;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.apache.tomcat.util.digester.Rule: void <init>()>();
        r0.<org.apache.catalina.startup.SetPublicIdRule: java.lang.String method> = null;
        r0.<org.apache.catalina.startup.SetPublicIdRule: java.lang.String method> = r1;
        return;
    }

    public void begin(java.lang.String, java.lang.String, org.xml.sax.Attributes) throws java.lang.Exception
    {
        org.apache.catalina.startup.SetPublicIdRule r0;
        java.lang.String r1, r2, $r6, $r12, $r14, $r20, $r27, $r35, $r38, $r41, $r44;
        org.xml.sax.Attributes r3;
        java.lang.Object r4;
        java.lang.Class[] r5;
        java.lang.String[] r7;
        null_type n0;
        java.lang.NoSuchMethodException r8, $r16;
        org.apache.tomcat.util.digester.Digester $r9, $r11, $r17, $r29, $r31;
        java.lang.Class $r10, $r13, $r25, $r34;
        java.lang.reflect.Method r15;
        org.apache.juli.logging.Log $r18, $r30, $r32;
        java.lang.StringBuilder $r19, $r21, $r22, $r23, $r24, $r26, $r33, $r36, $r37, $r39, $r40, $r42, $r43;
        boolean $z0;

        r0 := @this: org.apache.catalina.startup.SetPublicIdRule;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.xml.sax.Attributes;
        $r9 = r0.<org.apache.catalina.startup.SetPublicIdRule: org.apache.tomcat.util.digester.Digester digester>;
        r4 = virtualinvoke $r9.<org.apache.tomcat.util.digester.Digester: java.lang.Object peek()>();
        r5 = newarray (java.lang.Class)[1];
        $r6 = "String";
        $r10 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();
        r5[0] = $r10;
        r7 = newarray (java.lang.String)[1];
        $r11 = r0.<org.apache.catalina.startup.SetPublicIdRule: org.apache.tomcat.util.digester.Digester digester>;
        $r12 = virtualinvoke $r11.<org.apache.tomcat.util.digester.Digester: java.lang.String getPublicId()>();
        r7[0] = $r12;
        n0 = null;

     label0:
        $r13 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r14 = r0.<org.apache.catalina.startup.SetPublicIdRule: java.lang.String method>;
        r15 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r14, r5);

     label1:
        goto label3;

     label2:
        $r16 := @caughtexception;
        r8 = $r16;
        $r17 = r0.<org.apache.catalina.startup.SetPublicIdRule: org.apache.tomcat.util.digester.Digester digester>;
        $r18 = virtualinvoke $r17.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log getLogger()>();
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can\'t find method ");
        $r20 = r0.<org.apache.catalina.startup.SetPublicIdRule: java.lang.String method>;
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CLASS ");
        $r25 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r27);
        return;

     label3:
        virtualinvoke r15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, r7);
        $r29 = r0.<org.apache.catalina.startup.SetPublicIdRule: org.apache.tomcat.util.digester.Digester digester>;
        $r30 = virtualinvoke $r29.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log getLogger()>();
        $z0 = interfaceinvoke $r30.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label4;

        $r31 = r0.<org.apache.catalina.startup.SetPublicIdRule: org.apache.tomcat.util.digester.Digester digester>;
        $r32 = virtualinvoke $r31.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log getLogger()>();
        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        $r34 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r35 = virtualinvoke $r34.<java.lang.Class: java.lang.String getName()>();
        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r38 = r0.<org.apache.catalina.startup.SetPublicIdRule: java.lang.String method>;
        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
        $r41 = r7[0];
        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r32.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r44);

     label4:
        return;

        catch java.lang.NoSuchMethodException from label0 to label1 with label2;
    }
}
