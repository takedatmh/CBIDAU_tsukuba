public abstract class org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream extends java.io.OutputStream
{
    private final int threshold;
    private long written;
    private boolean thresholdExceeded;

    public void <init>(int)
    {
        org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream r0;
        int i0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream;
        i0 := @parameter0: int;
        specialinvoke r0.<java.io.OutputStream: void <init>()>();
        r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: int threshold> = i0;
        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream r0;
        int i0;
        java.io.OutputStream $r1;
        long $l1, $l2;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream;
        i0 := @parameter0: int;
        virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: void checkThreshold(int)>(1);
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: java.io.OutputStream getStream()>();
        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);
        $l1 = r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: long written>;
        $l2 = $l1 + 1L;
        r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: long written> = $l2;
        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream r0;
        byte[] r1;
        int $i0, $i2;
        java.io.OutputStream $r2;
        long $l1, $l3, $l4;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream;
        r1 := @parameter0: byte[];
        $i0 = lengthof r1;
        virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: void checkThreshold(int)>($i0);
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: java.io.OutputStream getStream()>();
        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>(r1);
        $l1 = r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: long written>;
        $i2 = lengthof r1;
        $l3 = (long) $i2;
        $l4 = $l1 + $l3;
        r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: long written> = $l4;
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream r0;
        byte[] r1;
        int i0, i1;
        java.io.OutputStream $r2;
        long $l2, $l3, $l4;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: void checkThreshold(int)>(i1);
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: java.io.OutputStream getStream()>();
        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);
        $l2 = r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: long written>;
        $l3 = (long) i1;
        $l4 = $l2 + $l3;
        r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: long written> = $l4;
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: java.io.OutputStream getStream()>();
        virtualinvoke $r1.<java.io.OutputStream: void flush()>();
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream r0;
        java.io.IOException r1, $r2;
        java.io.OutputStream $r3;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream;

     label0:
        virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: void flush()>();

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        r1 = $r2;

     label3:
        $r3 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: java.io.OutputStream getStream()>();
        virtualinvoke $r3.<java.io.OutputStream: void close()>();
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public boolean isThresholdExceeded()
    {
        org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream r0;
        long $l0, $l2;
        int $i1;
        byte $b3;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream;
        $l0 = r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: long written>;
        $i1 = r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: int threshold>;
        $l2 = (long) $i1;
        $b3 = $l0 cmp $l2;
        if $b3 <= 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    protected void checkThreshold(int) throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream r0;
        int i0, $i4;
        boolean $z0;
        long $l1, $l2, $l3, $l5;
        byte $b6;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream;
        i0 := @parameter0: int;
        $z0 = r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: boolean thresholdExceeded>;
        if $z0 != 0 goto label0;

        $l1 = r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: long written>;
        $l2 = (long) i0;
        $l3 = $l1 + $l2;
        $i4 = r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: int threshold>;
        $l5 = (long) $i4;
        $b6 = $l3 cmp $l5;
        if $b6 <= 0 goto label0;

        r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: boolean thresholdExceeded> = 1;
        virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream: void thresholdReached()>();

     label0:
        return;
    }

    protected abstract java.io.OutputStream getStream() throws java.io.IOException;

    protected abstract void thresholdReached() throws java.io.IOException;
}
