public class sun.net.www.MimeTable extends java.lang.Object implements java.net.FileNameMap
{
    private java.util.Hashtable entries;
    private java.util.Hashtable extensionMap;
    private static java.lang.String tempFileTemplate;
    private static final java.lang.String filePreamble;
    private static final java.lang.String fileMagic;
    protected static java.lang.String[] mailcapLocations;

    void <init>()
    {
        sun.net.www.MimeTable r0;
        java.util.Hashtable $r1, $r2;

        r0 := @this: sun.net.www.MimeTable;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.Hashtable;
        specialinvoke $r1.<java.util.Hashtable: void <init>()>();
        r0.<sun.net.www.MimeTable: java.util.Hashtable entries> = $r1;
        $r2 = new java.util.Hashtable;
        specialinvoke $r2.<java.util.Hashtable: void <init>()>();
        r0.<sun.net.www.MimeTable: java.util.Hashtable extensionMap> = $r2;
        virtualinvoke r0.<sun.net.www.MimeTable: void load()>();
        return;
    }

    public static sun.net.www.MimeTable getDefaultTable()
    {
        sun.net.www.MimeTable $r0;

        $r0 = <sun.net.www.MimeTable$DefaultInstanceHolder: sun.net.www.MimeTable defaultInstance>;
        return $r0;
    }

    public static java.net.FileNameMap loadTable()
    {
        sun.net.www.MimeTable r0;

        r0 = staticinvoke <sun.net.www.MimeTable: sun.net.www.MimeTable getDefaultTable()>();
        return r0;
    }

    public synchronized int getSize()
    {
        sun.net.www.MimeTable r0;
        java.util.Hashtable $r1;
        int $i0;

        r0 := @this: sun.net.www.MimeTable;
        $r1 = r0.<sun.net.www.MimeTable: java.util.Hashtable entries>;
        $i0 = virtualinvoke $r1.<java.util.Hashtable: int size()>();
        return $i0;
    }

    public synchronized java.lang.String getContentTypeFor(java.lang.String)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1, $r3;
        sun.net.www.MimeEntry r2;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<sun.net.www.MimeTable: sun.net.www.MimeEntry findByFileName(java.lang.String)>(r1);
        if r2 == null goto label0;

        $r3 = virtualinvoke r2.<sun.net.www.MimeEntry: java.lang.String getType()>();
        return $r3;

     label0:
        return null;
    }

    public synchronized void add(sun.net.www.MimeEntry)
    {
        sun.net.www.MimeTable r0;
        sun.net.www.MimeEntry r1;
        java.lang.String[] r2;
        int i0, $i1;
        java.util.Hashtable $r3, $r6;
        java.lang.String $r4, $r7;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: sun.net.www.MimeEntry;
        $r3 = r0.<sun.net.www.MimeTable: java.util.Hashtable entries>;
        $r4 = virtualinvoke r1.<sun.net.www.MimeEntry: java.lang.String getType()>();
        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1);
        r2 = virtualinvoke r1.<sun.net.www.MimeEntry: java.lang.String[] getExtensions()>();
        if r2 != null goto label0;

        return;

     label0:
        i0 = 0;

     label1:
        $i1 = lengthof r2;
        if i0 >= $i1 goto label2;

        $r6 = r0.<sun.net.www.MimeTable: java.util.Hashtable extensionMap>;
        $r7 = r2[i0];
        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r1);
        i0 = i0 + 1;
        goto label1;

     label2:
        return;
    }

    public synchronized sun.net.www.MimeEntry remove(java.lang.String)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1;
        sun.net.www.MimeEntry r2, $r5;
        java.util.Hashtable $r3;
        java.lang.Object $r4;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<sun.net.www.MimeTable: java.util.Hashtable entries>;
        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (sun.net.www.MimeEntry) $r4;
        $r5 = virtualinvoke r0.<sun.net.www.MimeTable: sun.net.www.MimeEntry remove(sun.net.www.MimeEntry)>(r2);
        return $r5;
    }

    public synchronized sun.net.www.MimeEntry remove(sun.net.www.MimeEntry)
    {
        sun.net.www.MimeTable r0;
        sun.net.www.MimeEntry r1, $r9;
        java.lang.String[] r2;
        int i0, $i1;
        java.util.Hashtable $r3, $r6;
        java.lang.String $r4, $r7;
        java.lang.Object $r8;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: sun.net.www.MimeEntry;
        r2 = virtualinvoke r1.<sun.net.www.MimeEntry: java.lang.String[] getExtensions()>();
        if r2 == null goto label1;

        i0 = 0;

     label0:
        $i1 = lengthof r2;
        if i0 >= $i1 goto label1;

        $r3 = r0.<sun.net.www.MimeTable: java.util.Hashtable extensionMap>;
        $r4 = r2[i0];
        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r4);
        i0 = i0 + 1;
        goto label0;

     label1:
        $r6 = r0.<sun.net.www.MimeTable: java.util.Hashtable entries>;
        $r7 = virtualinvoke r1.<sun.net.www.MimeEntry: java.lang.String getType()>();
        $r8 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r7);
        $r9 = (sun.net.www.MimeEntry) $r8;
        return $r9;
    }

    public synchronized sun.net.www.MimeEntry find(java.lang.String)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1;
        sun.net.www.MimeEntry r2, r4;
        java.util.Enumeration r3;
        java.util.Hashtable $r5, $r7;
        java.lang.Object $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        $r5 = r0.<sun.net.www.MimeTable: java.util.Hashtable entries>;
        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (sun.net.www.MimeEntry) $r6;
        if r2 != null goto label2;

        $r7 = r0.<sun.net.www.MimeTable: java.util.Hashtable entries>;
        r3 = virtualinvoke $r7.<java.util.Hashtable: java.util.Enumeration elements()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (sun.net.www.MimeEntry) $r8;
        $z1 = virtualinvoke r4.<sun.net.www.MimeEntry: boolean matches(java.lang.String)>(r1);
        if $z1 == 0 goto label1;

        return r4;

     label1:
        goto label0;

     label2:
        return r2;
    }

    public sun.net.www.MimeEntry findByFileName(java.lang.String)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1, r2, $r3;
        int i0, $i1, i2, $i3, i4, $i5, i6;
        char $c7;
        sun.net.www.MimeEntry $r4;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        r2 = "";
        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(35);
        if i0 <= 0 goto label0;

        $i1 = i0 - 1;
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label0:
        i2 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);
        $i3 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(47);
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i3);
        $i5 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(63);
        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i5);
        if i6 == -1 goto label1;

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);
        if $c7 != 46 goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i6);
        r2 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

     label1:
        $r4 = virtualinvoke r0.<sun.net.www.MimeTable: sun.net.www.MimeEntry findByExt(java.lang.String)>(r2);
        return $r4;
    }

    public synchronized sun.net.www.MimeEntry findByExt(java.lang.String)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        java.lang.Object $r3;
        sun.net.www.MimeEntry $r4;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<sun.net.www.MimeTable: java.util.Hashtable extensionMap>;
        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (sun.net.www.MimeEntry) $r3;
        return $r4;
    }

    public synchronized sun.net.www.MimeEntry findByDescription(java.lang.String)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1, $r5;
        java.util.Enumeration r2;
        sun.net.www.MimeEntry r3, $r6;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<sun.net.www.MimeTable: java.util.Enumeration elements()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();
        r3 = (sun.net.www.MimeEntry) $r4;
        $r5 = virtualinvoke r3.<sun.net.www.MimeEntry: java.lang.String getDescription()>();
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z1 == 0 goto label1;

        return r3;

     label1:
        goto label0;

     label2:
        $r6 = virtualinvoke r0.<sun.net.www.MimeTable: sun.net.www.MimeEntry find(java.lang.String)>(r1);
        return $r6;
    }

    java.lang.String getTempFileTemplate()
    {
        sun.net.www.MimeTable r0;
        java.lang.String $r1;

        r0 := @this: sun.net.www.MimeTable;
        $r1 = <sun.net.www.MimeTable: java.lang.String tempFileTemplate>;
        return $r1;
    }

    public synchronized java.util.Enumeration elements()
    {
        sun.net.www.MimeTable r0;
        java.util.Hashtable $r1;
        java.util.Enumeration $r2;

        r0 := @this: sun.net.www.MimeTable;
        $r1 = r0.<sun.net.www.MimeTable: java.util.Hashtable entries>;
        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration elements()>();
        return $r2;
    }

    public synchronized void load()
    {
        sun.net.www.MimeTable r0;
        java.util.Properties $r1, r2;
        java.io.File r3, $r6, $r7, $r18;
        java.lang.String r4, $r9, $r11, $r14, $r17, $r20, $r22, $r25, $r28, $r36, $r38;
        java.io.BufferedInputStream r5, $r29;
        boolean $z0;
        java.lang.StringBuilder $r8, $r10, $r12, $r13, $r15, $r16, $r19, $r21, $r23, $r24, $r26, $r27, $r34, $r35, $r37;
        java.io.FileInputStream $r30;
        java.io.IOException $r31, r32;
        java.io.PrintStream $r33;

        r0 := @this: sun.net.www.MimeTable;
        $r1 = new java.util.Properties;
        specialinvoke $r1.<java.util.Properties: void <init>()>();
        r2 = $r1;
        r3 = null;

     label0:
        r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("content.types.user.table");
        if r4 == null goto label1;

        $r6 = new java.io.File;
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r4);
        r3 = $r6;
        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();
        if $z0 != 0 goto label2;

        $r7 = new java.io.File;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = <java.io.File: java.lang.String separator>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");
        $r14 = <java.io.File: java.lang.String separator>;
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content-types.properties");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r17);
        r3 = $r7;
        goto label2;

     label1:
        $r18 = new java.io.File;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = <java.io.File: java.lang.String separator>;
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");
        $r25 = <java.io.File: java.lang.String separator>;
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content-types.properties");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r28);
        r3 = $r18;

     label2:
        $r29 = new java.io.BufferedInputStream;
        $r30 = new java.io.FileInputStream;
        specialinvoke $r30.<java.io.FileInputStream: void <init>(java.io.File)>(r3);
        specialinvoke $r29.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r30);
        r5 = $r29;
        virtualinvoke r2.<java.util.Properties: void load(java.io.InputStream)>(r5);
        virtualinvoke r5.<java.io.InputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r31 := @caughtexception;
        r32 = $r31;
        $r33 = <java.lang.System: java.io.PrintStream err>;
        $r34 = new java.lang.StringBuilder;
        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning: default mime table not found: ");
        $r36 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();
        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r38);
        return;

     label5:
        virtualinvoke r0.<sun.net.www.MimeTable: void parse(java.util.Properties)>(r2);
        return;

        catch java.io.IOException from label0 to label3 with label4;
    }

    void parse(java.util.Properties)
    {
        sun.net.www.MimeTable r0;
        java.util.Properties r1;
        java.lang.String r2, r4, r5;
        java.util.Enumeration r3;
        java.lang.Object $r6, $r9;
        boolean $z0;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.util.Properties;
        $r6 = virtualinvoke r1.<java.util.Properties: java.lang.Object get(java.lang.Object)>("temp.file.template");
        r2 = (java.lang.String) $r6;
        if r2 == null goto label0;

        virtualinvoke r1.<java.util.Properties: java.lang.Object remove(java.lang.Object)>("temp.file.template");
        <sun.net.www.MimeTable: java.lang.String tempFileTemplate> = r2;

     label0:
        r3 = virtualinvoke r1.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (java.lang.String) $r9;
        r5 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r4);
        virtualinvoke r0.<sun.net.www.MimeTable: void parse(java.lang.String,java.lang.String)>(r4, r5);
        goto label1;

     label2:
        return;
    }

    void parse(java.lang.String, java.lang.String)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1, r2, r6;
        sun.net.www.MimeEntry $r3, r4;
        java.util.StringTokenizer r5, $r7;
        boolean $z0;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new sun.net.www.MimeEntry;
        specialinvoke $r3.<sun.net.www.MimeEntry: void <init>(java.lang.String)>(r1);
        r4 = $r3;
        $r7 = new java.util.StringTokenizer;
        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, ";");
        r5 = $r7;

     label0:
        $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        r6 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>();
        virtualinvoke r0.<sun.net.www.MimeTable: void parse(java.lang.String,sun.net.www.MimeEntry)>(r6, r4);
        goto label0;

     label1:
        virtualinvoke r0.<sun.net.www.MimeTable: void add(sun.net.www.MimeEntry)>(r4);
        return;
    }

    void parse(java.lang.String, sun.net.www.MimeEntry)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1, r3, r4, $r7, $r8;
        sun.net.www.MimeEntry r2;
        boolean z0, $z1;
        java.util.StringTokenizer r5, $r6;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: sun.net.www.MimeEntry;
        r3 = null;
        r4 = null;
        z0 = 0;
        $r6 = new java.util.StringTokenizer;
        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, "=");
        r5 = $r6;

     label0:
        $z1 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z1 == 0 goto label2;

        if z0 == 0 goto label1;

        $r7 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r4 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();
        goto label0;

     label1:
        $r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r3 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();
        z0 = 1;
        goto label0;

     label2:
        virtualinvoke r0.<sun.net.www.MimeTable: void fill(sun.net.www.MimeEntry,java.lang.String,java.lang.String)>(r2, r3, r4);
        return;
    }

    void fill(sun.net.www.MimeEntry, java.lang.String, java.lang.String)
    {
        sun.net.www.MimeTable r0;
        sun.net.www.MimeEntry r1;
        java.lang.String r2, r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: sun.net.www.MimeEntry;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = "description";
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        if $z0 == 0 goto label0;

        virtualinvoke r1.<sun.net.www.MimeEntry: void setDescription(java.lang.String)>(r3);
        goto label4;

     label0:
        $r5 = "action";
        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        if $z1 == 0 goto label1;

        $i0 = virtualinvoke r0.<sun.net.www.MimeTable: int getActionCode(java.lang.String)>(r3);
        virtualinvoke r1.<sun.net.www.MimeEntry: void setAction(int)>($i0);
        goto label4;

     label1:
        $r6 = "application";
        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        if $z2 == 0 goto label2;

        virtualinvoke r1.<sun.net.www.MimeEntry: void setCommand(java.lang.String)>(r3);
        goto label4;

     label2:
        $r7 = "icon";
        $z3 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        if $z3 == 0 goto label3;

        virtualinvoke r1.<sun.net.www.MimeEntry: void setImageFileName(java.lang.String)>(r3);
        goto label4;

     label3:
        $r8 = "file_extensions";
        $z4 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        if $z4 == 0 goto label4;

        virtualinvoke r1.<sun.net.www.MimeEntry: void setExtensions(java.lang.String)>(r3);

     label4:
        return;
    }

    java.lang.String[] getExtensions(java.lang.String)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1, $r5;
        java.util.StringTokenizer $r2, r3;
        int i0, i1;
        java.lang.String[] r4;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.StringTokenizer;
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");
        r3 = $r2;
        i0 = virtualinvoke r3.<java.util.StringTokenizer: int countTokens()>();
        r4 = newarray (java.lang.String)[i0];
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        $r5 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r4[i1] = $r5;
        i1 = i1 + 1;
        goto label0;

     label1:
        return r4;
    }

    int getActionCode(java.lang.String)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1, $r4;
        int i0, $i1;
        java.lang.String[] $r2, $r3;
        boolean $z0;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        i0 = 0;

     label0:
        $r2 = <sun.net.www.MimeEntry: java.lang.String[] actionKeywords>;
        $i1 = lengthof $r2;
        if i0 >= $i1 goto label2;

        $r3 = <sun.net.www.MimeEntry: java.lang.String[] actionKeywords>;
        $r4 = $r3[i0];
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);
        if $z0 == 0 goto label1;

        return i0;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return 0;
    }

    public synchronized boolean save(java.lang.String)
    {
        sun.net.www.MimeTable r0;
        java.lang.String r1, $r4, $r7, $r10;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9;
        java.io.File $r11;
        boolean $z0;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user.home");
        $r4 = <java.io.File: java.lang.String separator>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");
        $r7 = <java.io.File: java.lang.String separator>;
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content-types.properties");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r10);

     label0:
        $r11 = new java.io.File;
        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>(r1);
        $z0 = virtualinvoke r0.<sun.net.www.MimeTable: boolean saveAsProperties(java.io.File)>($r11);
        return $z0;
    }

    public java.util.Properties getAsProperties()
    {
        sun.net.www.MimeTable r0;
        java.util.Properties $r1, r2;
        java.util.Enumeration r3;
        sun.net.www.MimeEntry r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;

        r0 := @this: sun.net.www.MimeTable;
        $r1 = new java.util.Properties;
        specialinvoke $r1.<java.util.Properties: void <init>()>();
        r2 = $r1;
        r3 = virtualinvoke r0.<sun.net.www.MimeTable: java.util.Enumeration elements()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (sun.net.www.MimeEntry) $r5;
        $r6 = virtualinvoke r4.<sun.net.www.MimeEntry: java.lang.String getType()>();
        $r7 = virtualinvoke r4.<sun.net.www.MimeEntry: java.lang.String toProperty()>();
        virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);
        goto label0;

     label1:
        return r2;
    }

    protected boolean saveAsProperties(java.io.File)
    {
        sun.net.www.MimeTable r0;
        java.io.File r1;
        java.io.FileOutputStream r2, $r8;
        java.util.Properties r3;
        java.lang.String r4, r5, $r9, $r17;
        java.lang.Throwable r6, $r24;
        java.io.IOException r7, $r18, r19, $r20, r21, $r22, r23, $r25;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16;
        boolean z0;

        r0 := @this: sun.net.www.MimeTable;
        r1 := @parameter0: java.io.File;
        r2 = null;

     label0:
        $r8 = new java.io.FileOutputStream;
        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);
        r2 = $r8;
        r3 = virtualinvoke r0.<sun.net.www.MimeTable: java.util.Properties getAsProperties()>();
        $r9 = <sun.net.www.MimeTable: java.lang.String tempFileTemplate>;
        virtualinvoke r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("temp.file.template", $r9);
        r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.name");
        if r4 == null goto label1;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; customized for ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sun.net.www MIME content-types table");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.util.Properties: void save(java.io.OutputStream,java.lang.String)>(r2, $r17);
        goto label2;

     label1:
        virtualinvoke r3.<java.util.Properties: void save(java.io.OutputStream,java.lang.String)>(r2, "sun.net.www MIME content-types table");

     label2:
        if r2 == null goto label20;

     label3:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label4:
        goto label20;

     label5:
        $r18 := @caughtexception;
        r19 = $r18;
        goto label20;

     label6:
        $r20 := @caughtexception;

     label7:
        r21 = $r20;
        virtualinvoke r21.<java.io.IOException: void printStackTrace()>();
        z0 = 0;

     label8:
        if r2 == null goto label12;

     label9:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r22 := @caughtexception;
        r23 = $r22;

     label12:
        return z0;

     label13:
        $r24 := @caughtexception;

     label14:
        r6 = $r24;

     label15:
        if r2 == null goto label19;

     label16:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label17:
        goto label19;

     label18:
        $r25 := @caughtexception;
        r7 = $r25;

     label19:
        throw r6;

     label20:
        return 1;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.io.IOException from label0 to label2 with label6;
        catch java.io.IOException from label9 to label10 with label11;
        catch java.lang.Throwable from label0 to label2 with label13;
        catch java.lang.Throwable from label7 to label8 with label13;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    static java.lang.String access$002(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;
        <sun.net.www.MimeTable: java.lang.String tempFileTemplate> = r0;
        return r0;
    }

    static void <clinit>()
    {
        sun.net.www.MimeTable$1 $r0;

        $r0 = new sun.net.www.MimeTable$1;
        specialinvoke $r0.<sun.net.www.MimeTable$1: void <init>()>();
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        return;
    }
}
