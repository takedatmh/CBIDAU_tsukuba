public class sun.security.krb5.SCDynamicStoreConfig extends java.lang.Object
{

    public void <init>()
    {
        sun.security.krb5.SCDynamicStoreConfig r0;

        r0 := @this: sun.security.krb5.SCDynamicStoreConfig;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static native void installNotificationCallback();

    private static native java.util.Hashtable getKerberosConfig();

    private static java.util.Vector unwrapHost(java.util.Collection)
    {
        java.util.Collection r0;
        java.util.Vector $r1, r2;
        java.util.Iterator r3;
        java.util.Hashtable r4;
        boolean $z0;
        java.lang.Object $r5, $r6;

        r0 := @parameter0: java.util.Collection;
        $r1 = new java.util.Vector;
        specialinvoke $r1.<java.util.Vector: void <init>()>();
        r2 = $r1;
        r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Hashtable) $r5;
        $r6 = virtualinvoke r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("host");
        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r6);
        goto label0;

     label1:
        return r2;
    }

    private static java.util.Hashtable convertRealmConfigs(java.util.Hashtable)
    {
        java.util.Hashtable r0, $r1, r2, r5, r7, $r13;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.Collection r6, r8;
        java.util.Set $r9;
        boolean $z0;
        java.lang.Object $r10, $r11, $r12, $r16;
        java.util.Vector $r14, $r17;

        r0 := @parameter0: java.util.Hashtable;
        $r1 = new java.util.Hashtable;
        specialinvoke $r1.<java.util.Hashtable: void <init>()>();
        r2 = $r1;
        $r9 = virtualinvoke r0.<java.util.Hashtable: java.util.Set keySet()>();
        r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.lang.String) $r10;
        $r11 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (java.util.Hashtable) $r11;
        $r12 = virtualinvoke r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("kdc");
        r6 = (java.util.Collection) $r12;
        $r13 = new java.util.Hashtable;
        specialinvoke $r13.<java.util.Hashtable: void <init>()>();
        r7 = $r13;
        if r6 == null goto label1;

        $r14 = staticinvoke <sun.security.krb5.SCDynamicStoreConfig: java.util.Vector unwrapHost(java.util.Collection)>(r6);
        virtualinvoke r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("kdc", $r14);

     label1:
        $r16 = virtualinvoke r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("kadmin");
        r8 = (java.util.Collection) $r16;
        if r8 == null goto label2;

        $r17 = staticinvoke <sun.security.krb5.SCDynamicStoreConfig: java.util.Vector unwrapHost(java.util.Collection)>(r8);
        virtualinvoke r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("admin_server", $r17);

     label2:
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r7);
        goto label0;

     label3:
        return r2;
    }

    public static java.util.Hashtable getConfig() throws java.io.IOException
    {
        java.util.Hashtable r0, r1, r2;
        java.io.IOException $r3;
        java.lang.Object $r4;

        r0 = staticinvoke <sun.security.krb5.SCDynamicStoreConfig: java.util.Hashtable getKerberosConfig()>();
        if r0 != null goto label0;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Could not load configuration from SCDynamicStore");
        throw $r3;

     label0:
        $r4 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("realms");
        r1 = (java.util.Hashtable) $r4;
        if r1 == null goto label1;

        virtualinvoke r0.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>("realms");
        r2 = staticinvoke <sun.security.krb5.SCDynamicStoreConfig: java.util.Hashtable convertRealmConfigs(java.util.Hashtable)>(r1);
        virtualinvoke r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("realms", r2);

     label1:
        return r0;
    }

    static void <clinit>()
    {
        sun.security.action.LoadLibraryAction $r0;

        $r0 = new sun.security.action.LoadLibraryAction;
        specialinvoke $r0.<sun.security.action.LoadLibraryAction: void <init>(java.lang.String)>("osx");
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        staticinvoke <sun.security.krb5.SCDynamicStoreConfig: void installNotificationCallback()>();
        return;
    }
}
