public final class sun.security.provider.MD4 extends sun.security.provider.DigestBase
{
    private final int[] state;
    private final int[] x;
    private static final int S11;
    private static final int S12;
    private static final int S13;
    private static final int S14;
    private static final int S21;
    private static final int S22;
    private static final int S23;
    private static final int S24;
    private static final int S31;
    private static final int S32;
    private static final int S33;
    private static final int S34;
    private static final java.security.Provider md4Provider;

    public static java.security.MessageDigest getInstance()
    {
        java.security.Provider $r0;
        java.security.NoSuchAlgorithmException r1, $r3;
        java.security.MessageDigest $r2;
        java.security.ProviderException $r4;

     label0:
        $r0 = <sun.security.provider.MD4: java.security.Provider md4Provider>;
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>("MD4", $r0);

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        $r4 = new java.security.ProviderException;
        specialinvoke $r4.<java.security.ProviderException: void <init>(java.lang.Throwable)>(r1);
        throw $r4;

        catch java.security.NoSuchAlgorithmException from label0 to label1 with label2;
    }

    public void <init>()
    {
        sun.security.provider.MD4 r0;
        int[] $r1, $r2;

        r0 := @this: sun.security.provider.MD4;
        specialinvoke r0.<sun.security.provider.DigestBase: void <init>(java.lang.String,int,int)>("MD4", 16, 64);
        $r1 = newarray (int)[4];
        r0.<sun.security.provider.MD4: int[] state> = $r1;
        $r2 = newarray (int)[16];
        r0.<sun.security.provider.MD4: int[] x> = $r2;
        virtualinvoke r0.<sun.security.provider.MD4: void implReset()>();
        return;
    }

    private void <init>(sun.security.provider.MD4)
    {
        sun.security.provider.MD4 r0, r1;
        int[] $r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @this: sun.security.provider.MD4;
        r1 := @parameter0: sun.security.provider.MD4;
        specialinvoke r0.<sun.security.provider.DigestBase: void <init>(sun.security.provider.DigestBase)>(r1);
        $r2 = r1.<sun.security.provider.MD4: int[] state>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (int[]) $r3;
        r0.<sun.security.provider.MD4: int[] state> = $r4;
        $r5 = newarray (int)[16];
        r0.<sun.security.provider.MD4: int[] x> = $r5;
        return;
    }

    public java.lang.Object clone()
    {
        sun.security.provider.MD4 r0, $r1;

        r0 := @this: sun.security.provider.MD4;
        $r1 = new sun.security.provider.MD4;
        specialinvoke $r1.<sun.security.provider.MD4: void <init>(sun.security.provider.MD4)>(r0);
        return $r1;
    }

    void implReset()
    {
        sun.security.provider.MD4 r0;
        int[] $r1, $r2, $r3, $r4;

        r0 := @this: sun.security.provider.MD4;
        $r1 = r0.<sun.security.provider.MD4: int[] state>;
        $r1[0] = 1732584193;
        $r2 = r0.<sun.security.provider.MD4: int[] state>;
        $r2[1] = -271733879;
        $r3 = r0.<sun.security.provider.MD4: int[] state>;
        $r3[2] = -1732584194;
        $r4 = r0.<sun.security.provider.MD4: int[] state>;
        $r4[3] = 271733878;
        return;
    }

    void implDigest(byte[], int)
    {
        sun.security.provider.MD4 r0;
        byte[] r1, $r2, $r3, $r4, $r5;
        int i0, i2, i3, $i6, $i7, $i8, $i10;
        long l1, $l4, $l5, $l9;
        int[] $r6;

        r0 := @this: sun.security.provider.MD4;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        $l4 = r0.<sun.security.provider.MD4: long bytesProcessed>;
        l1 = $l4 << 3;
        $l5 = r0.<sun.security.provider.MD4: long bytesProcessed>;
        $i6 = (int) $l5;
        i2 = $i6 & 63;
        if i2 >= 56 goto label0;

        $i7 = 56 - i2;
        goto label1;

     label0:
        $i7 = 120 - i2;

     label1:
        i3 = $i7;
        $r2 = <sun.security.provider.MD4: byte[] padding>;
        virtualinvoke r0.<sun.security.provider.MD4: void engineUpdate(byte[],int,int)>($r2, 0, i3);
        $i8 = (int) l1;
        $r3 = r0.<sun.security.provider.MD4: byte[] buffer>;
        staticinvoke <sun.security.provider.ByteArrayAccess: void i2bLittle4(int,byte[],int)>($i8, $r3, 56);
        $l9 = l1 >>> 32;
        $i10 = (int) $l9;
        $r4 = r0.<sun.security.provider.MD4: byte[] buffer>;
        staticinvoke <sun.security.provider.ByteArrayAccess: void i2bLittle4(int,byte[],int)>($i10, $r4, 60);
        $r5 = r0.<sun.security.provider.MD4: byte[] buffer>;
        virtualinvoke r0.<sun.security.provider.MD4: void implCompress(byte[],int)>($r5, 0);
        $r6 = r0.<sun.security.provider.MD4: int[] state>;
        staticinvoke <sun.security.provider.ByteArrayAccess: void i2bLittle(int[],int,byte[],int,int)>($r6, 0, r1, i0, 16);
        return;
    }

    private static int FF(int, int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        i5 := @parameter5: int;
        $i6 = i1 & i2;
        $i7 = i1 ^ -1;
        $i8 = $i7 & i3;
        $i9 = $i6 | $i8;
        $i10 = $i9 + i4;
        i11 = i0 + $i10;
        $i12 = i11 << i5;
        $i13 = 32 - i5;
        $i14 = i11 >>> $i13;
        $i15 = $i12 | $i14;
        return $i15;
    }

    private static int GG(int, int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i17;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        i5 := @parameter5: int;
        $i6 = i1 & i2;
        $i7 = i1 & i3;
        $i8 = $i6 | $i7;
        $i9 = i2 & i3;
        $i10 = $i8 | $i9;
        $i11 = $i10 + i4;
        $i12 = $i11 + 1518500249;
        i13 = i0 + $i12;
        $i14 = i13 << i5;
        $i15 = 32 - i5;
        $i16 = i13 >>> $i15;
        $i17 = $i14 | $i16;
        return $i17;
    }

    private static int HH(int, int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        i5 := @parameter5: int;
        $i6 = i1 ^ i2;
        $i7 = $i6 ^ i3;
        $i8 = $i7 + i4;
        $i9 = $i8 + 1859775393;
        i10 = i0 + $i9;
        $i11 = i10 << i5;
        $i12 = 32 - i5;
        $i13 = i10 >>> $i12;
        $i14 = $i11 | $i13;
        return $i14;
    }

    void implCompress(byte[], int)
    {
        sun.security.provider.MD4 r0;
        byte[] r1;
        int i0, i1, i2, i3, i4, $i5, i6, $i7, i8, $i9, i10, $i11, i12, $i13, i14, $i15, i16, $i17, i18, $i19, i20, $i21, i22, $i23, i24, $i25, i26, $i27, i28, $i29, i30, $i31, i32, $i33, i34, $i35, i36, $i37, i38, $i39, i40, $i41, i42, $i43, i44, $i45, i46, $i47, i48, $i49, i50, $i51, i52, $i53, i54, $i55, i56, $i57, i58, $i59, i60, $i61, i62, $i63, i64, $i65, i66, $i67, i68, $i69, i70, $i71, i72, $i73, i74, $i75, i76, $i77, i78, $i79, i80, $i81, i82, $i83, i84, $i85, i86, $i87, i88, $i89, i90, $i91, i92, $i93, i94, $i95, i96, $i97, i98, $i99, i100, $i102, $i103, $i105, $i106, $i108, $i109, $i111, $i112;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58;
        byte $b101, $b104, $b107, $b110;

        r0 := @this: sun.security.provider.MD4;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        $r2 = r0.<sun.security.provider.MD4: int[] x>;
        staticinvoke <sun.security.provider.ByteArrayAccess: void b2iLittle64(byte[],int,int[])>(r1, i0, $r2);
        $r3 = r0.<sun.security.provider.MD4: int[] state>;
        i1 = $r3[0];
        $r4 = r0.<sun.security.provider.MD4: int[] state>;
        i2 = $r4[1];
        $r5 = r0.<sun.security.provider.MD4: int[] state>;
        i3 = $r5[2];
        $r6 = r0.<sun.security.provider.MD4: int[] state>;
        i4 = $r6[3];
        $r7 = r0.<sun.security.provider.MD4: int[] x>;
        $i5 = $r7[0];
        i6 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i1, i2, i3, i4, $i5, 3);
        $r8 = r0.<sun.security.provider.MD4: int[] x>;
        $i7 = $r8[1];
        i8 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i4, i6, i2, i3, $i7, 7);
        $r9 = r0.<sun.security.provider.MD4: int[] x>;
        $i9 = $r9[2];
        i10 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i3, i8, i6, i2, $i9, 11);
        $r10 = r0.<sun.security.provider.MD4: int[] x>;
        $i11 = $r10[3];
        i12 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i2, i10, i8, i6, $i11, 19);
        $r11 = r0.<sun.security.provider.MD4: int[] x>;
        $i13 = $r11[4];
        i14 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i6, i12, i10, i8, $i13, 3);
        $r12 = r0.<sun.security.provider.MD4: int[] x>;
        $i15 = $r12[5];
        i16 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i8, i14, i12, i10, $i15, 7);
        $r13 = r0.<sun.security.provider.MD4: int[] x>;
        $i17 = $r13[6];
        i18 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i10, i16, i14, i12, $i17, 11);
        $r14 = r0.<sun.security.provider.MD4: int[] x>;
        $i19 = $r14[7];
        i20 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i12, i18, i16, i14, $i19, 19);
        $r15 = r0.<sun.security.provider.MD4: int[] x>;
        $i21 = $r15[8];
        i22 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i14, i20, i18, i16, $i21, 3);
        $r16 = r0.<sun.security.provider.MD4: int[] x>;
        $i23 = $r16[9];
        i24 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i16, i22, i20, i18, $i23, 7);
        $r17 = r0.<sun.security.provider.MD4: int[] x>;
        $i25 = $r17[10];
        i26 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i18, i24, i22, i20, $i25, 11);
        $r18 = r0.<sun.security.provider.MD4: int[] x>;
        $i27 = $r18[11];
        i28 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i20, i26, i24, i22, $i27, 19);
        $r19 = r0.<sun.security.provider.MD4: int[] x>;
        $i29 = $r19[12];
        i30 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i22, i28, i26, i24, $i29, 3);
        $r20 = r0.<sun.security.provider.MD4: int[] x>;
        $i31 = $r20[13];
        i32 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i24, i30, i28, i26, $i31, 7);
        $r21 = r0.<sun.security.provider.MD4: int[] x>;
        $i33 = $r21[14];
        i34 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i26, i32, i30, i28, $i33, 11);
        $r22 = r0.<sun.security.provider.MD4: int[] x>;
        $i35 = $r22[15];
        i36 = staticinvoke <sun.security.provider.MD4: int FF(int,int,int,int,int,int)>(i28, i34, i32, i30, $i35, 19);
        $r23 = r0.<sun.security.provider.MD4: int[] x>;
        $i37 = $r23[0];
        i38 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i30, i36, i34, i32, $i37, 3);
        $r24 = r0.<sun.security.provider.MD4: int[] x>;
        $i39 = $r24[4];
        i40 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i32, i38, i36, i34, $i39, 5);
        $r25 = r0.<sun.security.provider.MD4: int[] x>;
        $i41 = $r25[8];
        i42 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i34, i40, i38, i36, $i41, 9);
        $r26 = r0.<sun.security.provider.MD4: int[] x>;
        $i43 = $r26[12];
        i44 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i36, i42, i40, i38, $i43, 13);
        $r27 = r0.<sun.security.provider.MD4: int[] x>;
        $i45 = $r27[1];
        i46 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i38, i44, i42, i40, $i45, 3);
        $r28 = r0.<sun.security.provider.MD4: int[] x>;
        $i47 = $r28[5];
        i48 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i40, i46, i44, i42, $i47, 5);
        $r29 = r0.<sun.security.provider.MD4: int[] x>;
        $i49 = $r29[9];
        i50 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i42, i48, i46, i44, $i49, 9);
        $r30 = r0.<sun.security.provider.MD4: int[] x>;
        $i51 = $r30[13];
        i52 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i44, i50, i48, i46, $i51, 13);
        $r31 = r0.<sun.security.provider.MD4: int[] x>;
        $i53 = $r31[2];
        i54 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i46, i52, i50, i48, $i53, 3);
        $r32 = r0.<sun.security.provider.MD4: int[] x>;
        $i55 = $r32[6];
        i56 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i48, i54, i52, i50, $i55, 5);
        $r33 = r0.<sun.security.provider.MD4: int[] x>;
        $i57 = $r33[10];
        i58 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i50, i56, i54, i52, $i57, 9);
        $r34 = r0.<sun.security.provider.MD4: int[] x>;
        $i59 = $r34[14];
        i60 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i52, i58, i56, i54, $i59, 13);
        $r35 = r0.<sun.security.provider.MD4: int[] x>;
        $i61 = $r35[3];
        i62 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i54, i60, i58, i56, $i61, 3);
        $r36 = r0.<sun.security.provider.MD4: int[] x>;
        $i63 = $r36[7];
        i64 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i56, i62, i60, i58, $i63, 5);
        $r37 = r0.<sun.security.provider.MD4: int[] x>;
        $i65 = $r37[11];
        i66 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i58, i64, i62, i60, $i65, 9);
        $r38 = r0.<sun.security.provider.MD4: int[] x>;
        $i67 = $r38[15];
        i68 = staticinvoke <sun.security.provider.MD4: int GG(int,int,int,int,int,int)>(i60, i66, i64, i62, $i67, 13);
        $r39 = r0.<sun.security.provider.MD4: int[] x>;
        $i69 = $r39[0];
        i70 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i62, i68, i66, i64, $i69, 3);
        $r40 = r0.<sun.security.provider.MD4: int[] x>;
        $i71 = $r40[8];
        i72 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i64, i70, i68, i66, $i71, 9);
        $r41 = r0.<sun.security.provider.MD4: int[] x>;
        $i73 = $r41[4];
        i74 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i66, i72, i70, i68, $i73, 11);
        $r42 = r0.<sun.security.provider.MD4: int[] x>;
        $i75 = $r42[12];
        i76 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i68, i74, i72, i70, $i75, 15);
        $r43 = r0.<sun.security.provider.MD4: int[] x>;
        $i77 = $r43[2];
        i78 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i70, i76, i74, i72, $i77, 3);
        $r44 = r0.<sun.security.provider.MD4: int[] x>;
        $i79 = $r44[10];
        i80 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i72, i78, i76, i74, $i79, 9);
        $r45 = r0.<sun.security.provider.MD4: int[] x>;
        $i81 = $r45[6];
        i82 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i74, i80, i78, i76, $i81, 11);
        $r46 = r0.<sun.security.provider.MD4: int[] x>;
        $i83 = $r46[14];
        i84 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i76, i82, i80, i78, $i83, 15);
        $r47 = r0.<sun.security.provider.MD4: int[] x>;
        $i85 = $r47[1];
        i86 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i78, i84, i82, i80, $i85, 3);
        $r48 = r0.<sun.security.provider.MD4: int[] x>;
        $i87 = $r48[9];
        i88 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i80, i86, i84, i82, $i87, 9);
        $r49 = r0.<sun.security.provider.MD4: int[] x>;
        $i89 = $r49[5];
        i90 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i82, i88, i86, i84, $i89, 11);
        $r50 = r0.<sun.security.provider.MD4: int[] x>;
        $i91 = $r50[13];
        i92 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i84, i90, i88, i86, $i91, 15);
        $r51 = r0.<sun.security.provider.MD4: int[] x>;
        $i93 = $r51[3];
        i94 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i86, i92, i90, i88, $i93, 3);
        $r52 = r0.<sun.security.provider.MD4: int[] x>;
        $i95 = $r52[11];
        i96 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i88, i94, i92, i90, $i95, 9);
        $r53 = r0.<sun.security.provider.MD4: int[] x>;
        $i97 = $r53[7];
        i98 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i90, i96, i94, i92, $i97, 11);
        $r54 = r0.<sun.security.provider.MD4: int[] x>;
        $i99 = $r54[15];
        i100 = staticinvoke <sun.security.provider.MD4: int HH(int,int,int,int,int,int)>(i92, i98, i96, i94, $i99, 15);
        $r55 = r0.<sun.security.provider.MD4: int[] state>;
        $b101 = 0;
        $i102 = $r55[$b101];
        $i103 = $i102 + i94;
        $r55[$b101] = $i103;
        $r56 = r0.<sun.security.provider.MD4: int[] state>;
        $b104 = 1;
        $i105 = $r56[$b104];
        $i106 = $i105 + i100;
        $r56[$b104] = $i106;
        $r57 = r0.<sun.security.provider.MD4: int[] state>;
        $b107 = 2;
        $i108 = $r57[$b107];
        $i109 = $i108 + i98;
        $r57[$b107] = $i109;
        $r58 = r0.<sun.security.provider.MD4: int[] state>;
        $b110 = 3;
        $i111 = $r58[$b110];
        $i112 = $i111 + i96;
        $r58[$b110] = $i112;
        return;
    }

    static java.security.Provider access$000()
    {
        java.security.Provider $r0;

        $r0 = <sun.security.provider.MD4: java.security.Provider md4Provider>;
        return $r0;
    }

    static void <clinit>()
    {
        sun.security.provider.MD4$1 $r0;
        sun.security.provider.MD4$2 $r1;

        $r0 = new sun.security.provider.MD4$1;
        specialinvoke $r0.<sun.security.provider.MD4$1: void <init>(java.lang.String,double,java.lang.String)>("MD4Provider", 1.0, "MD4 MessageDigest");
        <sun.security.provider.MD4: java.security.Provider md4Provider> = $r0;
        $r1 = new sun.security.provider.MD4$2;
        specialinvoke $r1.<sun.security.provider.MD4$2: void <init>()>();
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        return;
    }
}
