public abstract class java.lang.ProcessBuilder$Redirect extends java.lang.Object
{
    public static final java.lang.ProcessBuilder$Redirect PIPE;
    public static final java.lang.ProcessBuilder$Redirect INHERIT;
    static final boolean $assertionsDisabled;

    public abstract java.lang.ProcessBuilder$Redirect$Type type();

    public java.io.File file()
    {
        java.lang.ProcessBuilder$Redirect r0;

        r0 := @this: java.lang.ProcessBuilder$Redirect;
        return null;
    }

    boolean append()
    {
        java.lang.ProcessBuilder$Redirect r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.lang.ProcessBuilder$Redirect;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r1;
    }

    public static java.lang.ProcessBuilder$Redirect 'from'(java.io.File)
    {
        java.io.File r0;
        java.lang.NullPointerException $r1;
        java.lang.ProcessBuilder$Redirect$3 $r2;

        r0 := @parameter0: java.io.File;
        if r0 != null goto label0;

        $r1 = new java.lang.NullPointerException;
        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();
        throw $r1;

     label0:
        $r2 = new java.lang.ProcessBuilder$Redirect$3;
        specialinvoke $r2.<java.lang.ProcessBuilder$Redirect$3: void <init>(java.io.File)>(r0);
        return $r2;
    }

    public static java.lang.ProcessBuilder$Redirect 'to'(java.io.File)
    {
        java.io.File r0;
        java.lang.NullPointerException $r1;
        java.lang.ProcessBuilder$Redirect$4 $r2;

        r0 := @parameter0: java.io.File;
        if r0 != null goto label0;

        $r1 = new java.lang.NullPointerException;
        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();
        throw $r1;

     label0:
        $r2 = new java.lang.ProcessBuilder$Redirect$4;
        specialinvoke $r2.<java.lang.ProcessBuilder$Redirect$4: void <init>(java.io.File)>(r0);
        return $r2;
    }

    public static java.lang.ProcessBuilder$Redirect appendTo(java.io.File)
    {
        java.io.File r0;
        java.lang.NullPointerException $r1;
        java.lang.ProcessBuilder$Redirect$5 $r2;

        r0 := @parameter0: java.io.File;
        if r0 != null goto label0;

        $r1 = new java.lang.NullPointerException;
        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();
        throw $r1;

     label0:
        $r2 = new java.lang.ProcessBuilder$Redirect$5;
        specialinvoke $r2.<java.lang.ProcessBuilder$Redirect$5: void <init>(java.io.File)>(r0);
        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.ProcessBuilder$Redirect r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.ProcessBuilder$Redirect$Type $r3, $r4;
        java.io.File $r5, $r7, $r8;
        java.lang.AssertionError $r6;

        r0 := @this: java.lang.ProcessBuilder$Redirect;
        r1 := @parameter0: java.lang.Object;
        if r1 != r0 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof java.lang.ProcessBuilder$Redirect;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.lang.ProcessBuilder$Redirect) r1;
        $r3 = virtualinvoke r2.<java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect$Type type()>();
        $r4 = virtualinvoke r0.<java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect$Type type()>();
        if $r3 == $r4 goto label2;

        return 0;

     label2:
        $z1 = <java.lang.ProcessBuilder$Redirect: boolean $assertionsDisabled>;
        if $z1 != 0 goto label3;

        $r5 = virtualinvoke r0.<java.lang.ProcessBuilder$Redirect: java.io.File file()>();
        if $r5 != null goto label3;

        $r6 = new java.lang.AssertionError;
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
        throw $r6;

     label3:
        $r7 = virtualinvoke r0.<java.lang.ProcessBuilder$Redirect: java.io.File file()>();
        $r8 = virtualinvoke r2.<java.lang.ProcessBuilder$Redirect: java.io.File file()>();
        $z2 = virtualinvoke $r7.<java.io.File: boolean equals(java.lang.Object)>($r8);
        return $z2;
    }

    public int hashCode()
    {
        java.lang.ProcessBuilder$Redirect r0;
        java.io.File r1;
        int $i0, $i1;

        r0 := @this: java.lang.ProcessBuilder$Redirect;
        r1 = virtualinvoke r0.<java.lang.ProcessBuilder$Redirect: java.io.File file()>();
        if r1 != null goto label0;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();
        return $i0;

     label0:
        $i1 = virtualinvoke r1.<java.io.File: int hashCode()>();
        return $i1;
    }

    private void <init>()
    {
        java.lang.ProcessBuilder$Redirect r0;

        r0 := @this: java.lang.ProcessBuilder$Redirect;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    void <init>(java.lang.ProcessBuilder$1)
    {
        java.lang.ProcessBuilder$Redirect r0;
        java.lang.ProcessBuilder$1 r1;

        r0 := @this: java.lang.ProcessBuilder$Redirect;
        r1 := @parameter0: java.lang.ProcessBuilder$1;
        specialinvoke r0.<java.lang.ProcessBuilder$Redirect: void <init>()>();
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.lang.ProcessBuilder$Redirect$1 $r1;
        java.lang.ProcessBuilder$Redirect$2 $r2;

        $r0 = class "java/lang/ProcessBuilder";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.lang.ProcessBuilder$Redirect: boolean $assertionsDisabled> = $z1;
        $r1 = new java.lang.ProcessBuilder$Redirect$1;
        specialinvoke $r1.<java.lang.ProcessBuilder$Redirect$1: void <init>()>();
        <java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect PIPE> = $r1;
        $r2 = new java.lang.ProcessBuilder$Redirect$2;
        specialinvoke $r2.<java.lang.ProcessBuilder$Redirect$2: void <init>()>();
        <java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect INHERIT> = $r2;
        return;
    }
}
