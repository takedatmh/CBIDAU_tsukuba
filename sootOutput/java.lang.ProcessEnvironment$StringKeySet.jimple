class java.lang.ProcessEnvironment$StringKeySet extends java.util.AbstractSet
{
    private final java.util.Set s;

    public void <init>(java.util.Set)
    {
        java.lang.ProcessEnvironment$StringKeySet r0;
        java.util.Set r1;

        r0 := @this: java.lang.ProcessEnvironment$StringKeySet;
        r1 := @parameter0: java.util.Set;
        specialinvoke r0.<java.util.AbstractSet: void <init>()>();
        r0.<java.lang.ProcessEnvironment$StringKeySet: java.util.Set s> = r1;
        return;
    }

    public int size()
    {
        java.lang.ProcessEnvironment$StringKeySet r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: java.lang.ProcessEnvironment$StringKeySet;
        $r1 = r0.<java.lang.ProcessEnvironment$StringKeySet: java.util.Set s>;
        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();
        return $i0;
    }

    public boolean isEmpty()
    {
        java.lang.ProcessEnvironment$StringKeySet r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: java.lang.ProcessEnvironment$StringKeySet;
        $r1 = r0.<java.lang.ProcessEnvironment$StringKeySet: java.util.Set s>;
        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();
        return $z0;
    }

    public void clear()
    {
        java.lang.ProcessEnvironment$StringKeySet r0;
        java.util.Set $r1;

        r0 := @this: java.lang.ProcessEnvironment$StringKeySet;
        $r1 = r0.<java.lang.ProcessEnvironment$StringKeySet: java.util.Set s>;
        interfaceinvoke $r1.<java.util.Set: void clear()>();
        return;
    }

    public java.util.Iterator iterator()
    {
        java.lang.ProcessEnvironment$StringKeySet r0;
        java.lang.ProcessEnvironment$StringKeySet$1 $r1;

        r0 := @this: java.lang.ProcessEnvironment$StringKeySet;
        $r1 = new java.lang.ProcessEnvironment$StringKeySet$1;
        specialinvoke $r1.<java.lang.ProcessEnvironment$StringKeySet$1: void <init>(java.lang.ProcessEnvironment$StringKeySet)>(r0);
        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.ProcessEnvironment$StringKeySet r0;
        java.lang.Object r1;
        java.util.Set $r2;
        java.lang.ProcessEnvironment$Variable $r3;
        boolean $z0;

        r0 := @this: java.lang.ProcessEnvironment$StringKeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.lang.ProcessEnvironment$StringKeySet: java.util.Set s>;
        $r3 = staticinvoke <java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOfQueryOnly(java.lang.Object)>(r1);
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);
        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.ProcessEnvironment$StringKeySet r0;
        java.lang.Object r1;
        java.util.Set $r2;
        java.lang.ProcessEnvironment$Variable $r3;
        boolean $z0;

        r0 := @this: java.lang.ProcessEnvironment$StringKeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.lang.ProcessEnvironment$StringKeySet: java.util.Set s>;
        $r3 = staticinvoke <java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOfQueryOnly(java.lang.Object)>(r1);
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r3);
        return $z0;
    }

    static java.util.Set access$800(java.lang.ProcessEnvironment$StringKeySet)
    {
        java.lang.ProcessEnvironment$StringKeySet r0;
        java.util.Set $r1;

        r0 := @parameter0: java.lang.ProcessEnvironment$StringKeySet;
        $r1 = r0.<java.lang.ProcessEnvironment$StringKeySet: java.util.Set s>;
        return $r1;
    }
}
