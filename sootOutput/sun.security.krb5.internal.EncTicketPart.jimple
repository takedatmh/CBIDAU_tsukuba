public class sun.security.krb5.internal.EncTicketPart extends java.lang.Object
{
    public sun.security.krb5.internal.TicketFlags flags;
    public sun.security.krb5.EncryptionKey key;
    public sun.security.krb5.Realm crealm;
    public sun.security.krb5.PrincipalName cname;
    public sun.security.krb5.internal.TransitedEncoding transited;
    public sun.security.krb5.internal.KerberosTime authtime;
    public sun.security.krb5.internal.KerberosTime starttime;
    public sun.security.krb5.internal.KerberosTime endtime;
    public sun.security.krb5.internal.KerberosTime renewTill;
    public sun.security.krb5.internal.HostAddresses caddr;
    public sun.security.krb5.internal.AuthorizationData authorizationData;

    public void <init>(sun.security.krb5.internal.TicketFlags, sun.security.krb5.EncryptionKey, sun.security.krb5.Realm, sun.security.krb5.PrincipalName, sun.security.krb5.internal.TransitedEncoding, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.HostAddresses, sun.security.krb5.internal.AuthorizationData)
    {
        sun.security.krb5.internal.EncTicketPart r0;
        sun.security.krb5.internal.TicketFlags r1;
        sun.security.krb5.EncryptionKey r2;
        sun.security.krb5.Realm r3;
        sun.security.krb5.PrincipalName r4;
        sun.security.krb5.internal.TransitedEncoding r5;
        sun.security.krb5.internal.KerberosTime r6, r7, r8, r9;
        sun.security.krb5.internal.HostAddresses r10;
        sun.security.krb5.internal.AuthorizationData r11;

        r0 := @this: sun.security.krb5.internal.EncTicketPart;
        r1 := @parameter0: sun.security.krb5.internal.TicketFlags;
        r2 := @parameter1: sun.security.krb5.EncryptionKey;
        r3 := @parameter2: sun.security.krb5.Realm;
        r4 := @parameter3: sun.security.krb5.PrincipalName;
        r5 := @parameter4: sun.security.krb5.internal.TransitedEncoding;
        r6 := @parameter5: sun.security.krb5.internal.KerberosTime;
        r7 := @parameter6: sun.security.krb5.internal.KerberosTime;
        r8 := @parameter7: sun.security.krb5.internal.KerberosTime;
        r9 := @parameter8: sun.security.krb5.internal.KerberosTime;
        r10 := @parameter9: sun.security.krb5.internal.HostAddresses;
        r11 := @parameter10: sun.security.krb5.internal.AuthorizationData;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.TicketFlags flags> = r1;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.EncryptionKey key> = r2;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.Realm crealm> = r3;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.PrincipalName cname> = r4;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.TransitedEncoding transited> = r5;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime authtime> = r6;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime starttime> = r7;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime endtime> = r8;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime renewTill> = r9;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.HostAddresses caddr> = r10;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.AuthorizationData authorizationData> = r11;
        return;
    }

    public void <init>(byte[]) throws sun.security.krb5.Asn1Exception, sun.security.krb5.KrbException, java.io.IOException
    {
        sun.security.krb5.internal.EncTicketPart r0;
        byte[] r1;
        sun.security.util.DerValue $r2;

        r0 := @this: sun.security.krb5.internal.EncTicketPart;
        r1 := @parameter0: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new sun.security.util.DerValue;
        specialinvoke $r2.<sun.security.util.DerValue: void <init>(byte[])>(r1);
        specialinvoke r0.<sun.security.krb5.internal.EncTicketPart: void init(sun.security.util.DerValue)>($r2);
        return;
    }

    public void <init>(sun.security.util.DerValue) throws sun.security.krb5.Asn1Exception, sun.security.krb5.KrbException, java.io.IOException
    {
        sun.security.krb5.internal.EncTicketPart r0;
        sun.security.util.DerValue r1;

        r0 := @this: sun.security.krb5.internal.EncTicketPart;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        specialinvoke r0.<sun.security.krb5.internal.EncTicketPart: void init(sun.security.util.DerValue)>(r1);
        return;
    }

    private static java.lang.String getHexBytes(byte[], int) throws java.io.IOException
    {
        byte[] r0;
        int i0, i1;
        java.lang.StringBuffer $r1, r2;
        byte b2, b3, $b4, $b5, $b6;
        java.lang.String $r3, $r5, $r8;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        $b4 = r0[i1];
        $b5 = $b4 >> 4;
        b2 = $b5 & 15;
        $b6 = r0[i1];
        b3 = $b6 & 15;
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(b2);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(b3);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);
        i1 = i1 + 1;
        goto label0;

     label1:
        $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r8;
    }

    private void init(sun.security.util.DerValue) throws sun.security.krb5.Asn1Exception, java.io.IOException, sun.security.krb5.RealmException
    {
        sun.security.krb5.internal.EncTicketPart r0;
        sun.security.util.DerValue r1, r2;
        byte $b0, $b1, $b2;
        boolean $z0, $z1;
        sun.security.krb5.Asn1Exception $r3, $r5, $r32;
        sun.security.util.DerInputStream $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r31;
        sun.security.krb5.internal.TicketFlags $r7;
        sun.security.krb5.EncryptionKey $r9;
        sun.security.krb5.Realm $r11;
        sun.security.krb5.PrincipalName $r13;
        sun.security.krb5.internal.TransitedEncoding $r15;
        sun.security.krb5.internal.KerberosTime $r17, $r19, $r21, $r24;
        int $i3, $i4, $i5, $i6;
        sun.security.krb5.internal.HostAddresses $r27;
        sun.security.krb5.internal.AuthorizationData $r30;

        r0 := @this: sun.security.krb5.internal.EncTicketPart;
        r1 := @parameter0: sun.security.util.DerValue;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime renewTill> = null;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.HostAddresses caddr> = null;
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.AuthorizationData authorizationData> = null;
        $b0 = virtualinvoke r1.<sun.security.util.DerValue: byte getTag()>();
        $b1 = $b0 & 31;
        if $b1 != 3 goto label0;

        $z0 = virtualinvoke r1.<sun.security.util.DerValue: boolean isApplication()>();
        if $z0 != 1 goto label0;

        $z1 = virtualinvoke r1.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z1 == 1 goto label1;

     label0:
        $r3 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r3.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r3;

     label1:
        $r4 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r2 = virtualinvoke $r4.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b2 = virtualinvoke r2.<sun.security.util.DerValue: byte getTag()>();
        if $b2 == 48 goto label2;

        $r5 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r5.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r5;

     label2:
        $r6 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r7 = staticinvoke <sun.security.krb5.internal.TicketFlags: sun.security.krb5.internal.TicketFlags parse(sun.security.util.DerInputStream,byte,boolean)>($r6, 0, 0);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.TicketFlags flags> = $r7;
        $r8 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r9 = staticinvoke <sun.security.krb5.EncryptionKey: sun.security.krb5.EncryptionKey parse(sun.security.util.DerInputStream,byte,boolean)>($r8, 1, 0);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.EncryptionKey key> = $r9;
        $r10 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r11 = staticinvoke <sun.security.krb5.Realm: sun.security.krb5.Realm parse(sun.security.util.DerInputStream,byte,boolean)>($r10, 2, 0);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.Realm crealm> = $r11;
        $r12 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r13 = staticinvoke <sun.security.krb5.PrincipalName: sun.security.krb5.PrincipalName parse(sun.security.util.DerInputStream,byte,boolean)>($r12, 3, 0);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.PrincipalName cname> = $r13;
        $r14 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r15 = staticinvoke <sun.security.krb5.internal.TransitedEncoding: sun.security.krb5.internal.TransitedEncoding parse(sun.security.util.DerInputStream,byte,boolean)>($r14, 4, 0);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.TransitedEncoding transited> = $r15;
        $r16 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r17 = staticinvoke <sun.security.krb5.internal.KerberosTime: sun.security.krb5.internal.KerberosTime parse(sun.security.util.DerInputStream,byte,boolean)>($r16, 5, 0);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime authtime> = $r17;
        $r18 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r19 = staticinvoke <sun.security.krb5.internal.KerberosTime: sun.security.krb5.internal.KerberosTime parse(sun.security.util.DerInputStream,byte,boolean)>($r18, 6, 1);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime starttime> = $r19;
        $r20 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r21 = staticinvoke <sun.security.krb5.internal.KerberosTime: sun.security.krb5.internal.KerberosTime parse(sun.security.util.DerInputStream,byte,boolean)>($r20, 7, 0);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime endtime> = $r21;
        $r22 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i3 = virtualinvoke $r22.<sun.security.util.DerInputStream: int available()>();
        if $i3 <= 0 goto label3;

        $r23 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r24 = staticinvoke <sun.security.krb5.internal.KerberosTime: sun.security.krb5.internal.KerberosTime parse(sun.security.util.DerInputStream,byte,boolean)>($r23, 8, 1);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime renewTill> = $r24;

     label3:
        $r25 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i4 = virtualinvoke $r25.<sun.security.util.DerInputStream: int available()>();
        if $i4 <= 0 goto label4;

        $r26 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r27 = staticinvoke <sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddresses parse(sun.security.util.DerInputStream,byte,boolean)>($r26, 9, 1);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.HostAddresses caddr> = $r27;

     label4:
        $r28 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i5 = virtualinvoke $r28.<sun.security.util.DerInputStream: int available()>();
        if $i5 <= 0 goto label5;

        $r29 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r30 = staticinvoke <sun.security.krb5.internal.AuthorizationData: sun.security.krb5.internal.AuthorizationData parse(sun.security.util.DerInputStream,byte,boolean)>($r29, 10, 1);
        r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.AuthorizationData authorizationData> = $r30;

     label5:
        $r31 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i6 = virtualinvoke $r31.<sun.security.util.DerInputStream: int available()>();
        if $i6 <= 0 goto label6;

        $r32 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r32.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r32;

     label6:
        return;
    }

    public byte[] asn1Encode() throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.internal.EncTicketPart r0;
        sun.security.util.DerOutputStream $r1, r2, r3, $r4, $r31, r32;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11;
        sun.security.krb5.internal.TicketFlags $r5;
        byte[] $r6, $r8, $r10, $r12, $r14, $r16, $r19, $r21, $r24, $r27, $r30, $r33;
        sun.security.krb5.EncryptionKey $r7;
        sun.security.krb5.Realm $r9;
        sun.security.krb5.PrincipalName $r11;
        sun.security.krb5.internal.TransitedEncoding $r13;
        sun.security.krb5.internal.KerberosTime $r15, $r17, $r18, $r20, $r22, $r23;
        sun.security.krb5.internal.HostAddresses $r25, $r26;
        sun.security.krb5.internal.AuthorizationData $r28, $r29;

        r0 := @this: sun.security.krb5.internal.EncTicketPart;
        $r1 = new sun.security.util.DerOutputStream;
        specialinvoke $r1.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r1;
        $r4 = new sun.security.util.DerOutputStream;
        specialinvoke $r4.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r4;
        $b0 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 0);
        $r5 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.TicketFlags flags>;
        $r6 = virtualinvoke $r5.<sun.security.krb5.internal.TicketFlags: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b0, $r6);
        $b1 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 1);
        $r7 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.EncryptionKey key>;
        $r8 = virtualinvoke $r7.<sun.security.krb5.EncryptionKey: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b1, $r8);
        $b2 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 2);
        $r9 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.Realm crealm>;
        $r10 = virtualinvoke $r9.<sun.security.krb5.Realm: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b2, $r10);
        $b3 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 3);
        $r11 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.PrincipalName cname>;
        $r12 = virtualinvoke $r11.<sun.security.krb5.PrincipalName: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b3, $r12);
        $b4 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 4);
        $r13 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.TransitedEncoding transited>;
        $r14 = virtualinvoke $r13.<sun.security.krb5.internal.TransitedEncoding: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b4, $r14);
        $b5 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 5);
        $r15 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime authtime>;
        $r16 = virtualinvoke $r15.<sun.security.krb5.internal.KerberosTime: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b5, $r16);
        $r17 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime starttime>;
        if $r17 == null goto label0;

        $b6 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 6);
        $r18 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime starttime>;
        $r19 = virtualinvoke $r18.<sun.security.krb5.internal.KerberosTime: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b6, $r19);

     label0:
        $b7 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 7);
        $r20 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime endtime>;
        $r21 = virtualinvoke $r20.<sun.security.krb5.internal.KerberosTime: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b7, $r21);
        $r22 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime renewTill>;
        if $r22 == null goto label1;

        $b8 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 8);
        $r23 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.KerberosTime renewTill>;
        $r24 = virtualinvoke $r23.<sun.security.krb5.internal.KerberosTime: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b8, $r24);

     label1:
        $r25 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.HostAddresses caddr>;
        if $r25 == null goto label2;

        $b9 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 9);
        $r26 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.HostAddresses caddr>;
        $r27 = virtualinvoke $r26.<sun.security.krb5.internal.HostAddresses: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b9, $r27);

     label2:
        $r28 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.AuthorizationData authorizationData>;
        if $r28 == null goto label3;

        $b10 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 10);
        $r29 = r0.<sun.security.krb5.internal.EncTicketPart: sun.security.krb5.internal.AuthorizationData authorizationData>;
        $r30 = virtualinvoke $r29.<sun.security.krb5.internal.AuthorizationData: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b10, $r30);

     label3:
        virtualinvoke r3.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r2);
        $r31 = new sun.security.util.DerOutputStream;
        specialinvoke $r31.<sun.security.util.DerOutputStream: void <init>()>();
        r32 = $r31;
        $b11 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(64, 1, 3);
        virtualinvoke r32.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b11, r3);
        $r33 = virtualinvoke r32.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        return $r33;
    }
}
