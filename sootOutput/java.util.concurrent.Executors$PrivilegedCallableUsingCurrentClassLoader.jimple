final class java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader extends java.lang.Object implements java.util.concurrent.Callable
{
    private final java.util.concurrent.Callable task;
    private final java.security.AccessControlContext acc;
    private final java.lang.ClassLoader ccl;

    void <init>(java.util.concurrent.Callable)
    {
        java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader r0;
        java.util.concurrent.Callable r1;
        java.lang.SecurityManager r2;
        java.lang.RuntimePermission $r3, $r4;
        java.security.AccessControlContext $r5;
        java.lang.Thread $r6;
        java.lang.ClassLoader $r7;

        r0 := @this: java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader;
        r1 := @parameter0: java.util.concurrent.Callable;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r2 == null goto label0;

        $r3 = <sun.security.util.SecurityConstants: java.lang.RuntimePermission GET_CLASSLOADER_PERMISSION>;
        virtualinvoke r2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r3);
        $r4 = new java.lang.RuntimePermission;
        specialinvoke $r4.<java.lang.RuntimePermission: void <init>(java.lang.String)>("setContextClassLoader");
        virtualinvoke r2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r4);

     label0:
        r0.<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader: java.util.concurrent.Callable task> = r1;
        $r5 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();
        r0.<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader: java.security.AccessControlContext acc> = $r5;
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        r0.<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader: java.lang.ClassLoader ccl> = $r7;
        return;
    }

    public java.lang.Object call() throws java.lang.Exception
    {
        java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader r0;
        java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader$1 $r1;
        java.security.PrivilegedActionException r2, $r5;
        java.security.AccessControlContext $r3;
        java.lang.Object $r4;
        java.lang.Exception $r6;

        r0 := @this: java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader;

     label0:
        $r1 = new java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader$1;
        specialinvoke $r1.<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader$1: void <init>(java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader)>(r0);
        $r3 = r0.<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader: java.security.AccessControlContext acc>;
        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>($r1, $r3);

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        $r6 = virtualinvoke r2.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        throw $r6;

        catch java.security.PrivilegedActionException from label0 to label1 with label2;
    }

    static java.lang.ClassLoader access$100(java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader)
    {
        java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader r0;
        java.lang.ClassLoader $r1;

        r0 := @parameter0: java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader;
        $r1 = r0.<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader: java.lang.ClassLoader ccl>;
        return $r1;
    }

    static java.util.concurrent.Callable access$200(java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader)
    {
        java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader r0;
        java.util.concurrent.Callable $r1;

        r0 := @parameter0: java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader;
        $r1 = r0.<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader: java.util.concurrent.Callable task>;
        return $r1;
    }
}
