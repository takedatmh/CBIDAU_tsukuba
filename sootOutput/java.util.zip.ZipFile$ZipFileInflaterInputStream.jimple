class java.util.zip.ZipFile$ZipFileInflaterInputStream extends java.util.zip.InflaterInputStream
{
    private volatile boolean closeRequested;
    private boolean eof;
    private final java.util.zip.ZipFile$ZipFileInputStream zfin;
    final java.util.zip.ZipFile this$0;

    void <init>(java.util.zip.ZipFile, java.util.zip.ZipFile$ZipFileInputStream, java.util.zip.Inflater, int)
    {
        java.util.zip.ZipFile$ZipFileInflaterInputStream r0;
        java.util.zip.ZipFile r1;
        java.util.zip.ZipFile$ZipFileInputStream r2;
        java.util.zip.Inflater r3;
        int i0;

        r0 := @this: java.util.zip.ZipFile$ZipFileInflaterInputStream;
        r1 := @parameter0: java.util.zip.ZipFile;
        r2 := @parameter1: java.util.zip.ZipFile$ZipFileInputStream;
        r3 := @parameter2: java.util.zip.Inflater;
        i0 := @parameter3: int;
        r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: java.util.zip.ZipFile this$0> = r1;
        specialinvoke r0.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>(r2, r3, i0);
        r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: boolean closeRequested> = 0;
        r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: boolean eof> = 0;
        r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: java.util.zip.ZipFile$ZipFileInputStream zfin> = r2;
        return;
    }

    public void close() throws java.io.IOException
    {
        java.util.zip.ZipFile$ZipFileInflaterInputStream r0;
        java.util.Map r1, $r5, $r7;
        java.util.zip.Inflater r2;
        java.lang.Throwable r3, $r9;
        boolean $z0;
        java.util.zip.ZipFile $r4, $r6, $r10;
        java.lang.Object $r8;

        r0 := @this: java.util.zip.ZipFile$ZipFileInflaterInputStream;
        $z0 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: boolean closeRequested>;
        if $z0 == 0 goto label0;

        return;

     label0:
        r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: boolean closeRequested> = 1;
        specialinvoke r0.<java.util.zip.InflaterInputStream: void close()>();
        $r4 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: java.util.zip.ZipFile this$0>;
        $r5 = staticinvoke <java.util.zip.ZipFile: java.util.Map access$000(java.util.zip.ZipFile)>($r4);
        r1 = $r5;
        entermonitor $r5;

     label1:
        $r6 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: java.util.zip.ZipFile this$0>;
        $r7 = staticinvoke <java.util.zip.ZipFile: java.util.Map access$000(java.util.zip.ZipFile)>($r6);
        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);
        r2 = (java.util.zip.Inflater) $r8;
        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r9 := @caughtexception;

     label4:
        r3 = $r9;
        exitmonitor r1;

     label5:
        throw r3;

     label6:
        if r2 == null goto label7;

        $r10 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: java.util.zip.ZipFile this$0>;
        staticinvoke <java.util.zip.ZipFile: void access$100(java.util.zip.ZipFile,java.util.zip.Inflater)>($r10, r2);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void fill() throws java.io.IOException
    {
        java.util.zip.ZipFile$ZipFileInflaterInputStream r0;
        boolean $z0;
        java.io.EOFException $r1;
        java.io.InputStream $r2;
        byte[] $r3, $r4, $r5, $r7;
        int $i0, $i1, $i2, $i3;
        java.util.zip.Inflater $r6;

        r0 := @this: java.util.zip.ZipFile$ZipFileInflaterInputStream;
        $z0 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: boolean eof>;
        if $z0 == 0 goto label0;

        $r1 = new java.io.EOFException;
        specialinvoke $r1.<java.io.EOFException: void <init>(java.lang.String)>("Unexpected end of ZLIB input stream");
        throw $r1;

     label0:
        $r2 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: java.io.InputStream in>;
        $r3 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: byte[] buf>;
        $r4 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: byte[] buf>;
        $i0 = lengthof $r4;
        $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r3, 0, $i0);
        r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: int len> = $i1;
        $i2 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: int len>;
        if $i2 != -1 goto label1;

        $r5 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: byte[] buf>;
        $r5[0] = 0;
        r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: int len> = 1;
        r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: boolean eof> = 1;

     label1:
        $r6 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: java.util.zip.Inflater inf>;
        $r7 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: byte[] buf>;
        $i3 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: int len>;
        virtualinvoke $r6.<java.util.zip.Inflater: void setInput(byte[],int,int)>($r7, 0, $i3);
        return;
    }

    public int available() throws java.io.IOException
    {
        java.util.zip.ZipFile$ZipFileInflaterInputStream r0;
        long l0, $l1, $l2;
        boolean $z0;
        java.util.zip.ZipFile$ZipFileInputStream $r1;
        java.util.zip.Inflater $r2;
        byte $b3;
        int $i4;

        r0 := @this: java.util.zip.ZipFile$ZipFileInflaterInputStream;
        $z0 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: boolean closeRequested>;
        if $z0 == 0 goto label0;

        return 0;

     label0:
        $r1 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: java.util.zip.ZipFile$ZipFileInputStream zfin>;
        $l1 = virtualinvoke $r1.<java.util.zip.ZipFile$ZipFileInputStream: long size()>();
        $r2 = r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: java.util.zip.Inflater inf>;
        $l2 = virtualinvoke $r2.<java.util.zip.Inflater: long getBytesWritten()>();
        l0 = $l1 - $l2;
        $b3 = l0 cmp 2147483647L;
        if $b3 <= 0 goto label1;

        $i4 = 2147483647;
        goto label2;

     label1:
        $i4 = (int) l0;

     label2:
        return $i4;
    }

    protected void finalize() throws java.lang.Throwable
    {
        java.util.zip.ZipFile$ZipFileInflaterInputStream r0;

        r0 := @this: java.util.zip.ZipFile$ZipFileInflaterInputStream;
        virtualinvoke r0.<java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>();
        return;
    }
}
