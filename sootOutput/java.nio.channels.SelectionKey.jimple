public abstract class java.nio.channels.SelectionKey extends java.lang.Object
{
    public static final int OP_READ;
    public static final int OP_WRITE;
    public static final int OP_CONNECT;
    public static final int OP_ACCEPT;
    private volatile java.lang.Object attachment;
    private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater attachmentUpdater;

    protected void <init>()
    {
        java.nio.channels.SelectionKey r0;

        r0 := @this: java.nio.channels.SelectionKey;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.nio.channels.SelectionKey: java.lang.Object attachment> = null;
        return;
    }

    public abstract java.nio.channels.SelectableChannel channel();

    public abstract java.nio.channels.Selector selector();

    public abstract boolean isValid();

    public abstract void cancel();

    public abstract int interestOps();

    public abstract java.nio.channels.SelectionKey interestOps(int);

    public abstract int readyOps();

    public final boolean isReadable()
    {
        java.nio.channels.SelectionKey r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.nio.channels.SelectionKey;
        $i0 = virtualinvoke r0.<java.nio.channels.SelectionKey: int readyOps()>();
        $i1 = $i0 & 1;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final boolean isWritable()
    {
        java.nio.channels.SelectionKey r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.nio.channels.SelectionKey;
        $i0 = virtualinvoke r0.<java.nio.channels.SelectionKey: int readyOps()>();
        $i1 = $i0 & 4;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final boolean isConnectable()
    {
        java.nio.channels.SelectionKey r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.nio.channels.SelectionKey;
        $i0 = virtualinvoke r0.<java.nio.channels.SelectionKey: int readyOps()>();
        $i1 = $i0 & 8;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final boolean isAcceptable()
    {
        java.nio.channels.SelectionKey r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.nio.channels.SelectionKey;
        $i0 = virtualinvoke r0.<java.nio.channels.SelectionKey: int readyOps()>();
        $i1 = $i0 & 16;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final java.lang.Object attach(java.lang.Object)
    {
        java.nio.channels.SelectionKey r0;
        java.lang.Object r1, $r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r2;

        r0 := @this: java.nio.channels.SelectionKey;
        r1 := @parameter0: java.lang.Object;
        $r2 = <java.nio.channels.SelectionKey: java.util.concurrent.atomic.AtomicReferenceFieldUpdater attachmentUpdater>;
        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)>(r0, r1);
        return $r3;
    }

    public final java.lang.Object attachment()
    {
        java.nio.channels.SelectionKey r0;
        java.lang.Object $r1;

        r0 := @this: java.nio.channels.SelectionKey;
        $r1 = r0.<java.nio.channels.SelectionKey: java.lang.Object attachment>;
        return $r1;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "java/nio/channels/SelectionKey", class "java/lang/Object", "attachment");
        <java.nio.channels.SelectionKey: java.util.concurrent.atomic.AtomicReferenceFieldUpdater attachmentUpdater> = $r0;
        return;
    }
}
