public class org.apache.catalina.realm.JNDIRealm extends org.apache.catalina.realm.RealmBase
{
    protected java.lang.String authentication;
    protected java.lang.String connectionName;
    protected java.lang.String connectionPassword;
    protected java.lang.String connectionURL;
    protected javax.naming.directory.DirContext context;
    protected java.lang.String contextFactory;
    protected java.lang.String derefAliases;
    public static final java.lang.String DEREF_ALIASES;
    protected static final java.lang.String info;
    protected static final java.lang.String name;
    protected java.lang.String protocol;
    protected boolean adCompat;
    protected java.lang.String referrals;
    protected java.lang.String userBase;
    protected java.lang.String userSearch;
    private boolean userSearchAsUser;
    protected java.text.MessageFormat userSearchFormat;
    protected boolean userSubtree;
    protected java.lang.String userPassword;
    protected java.lang.String userRoleAttribute;
    protected java.lang.String[] userPatternArray;
    protected java.lang.String userPattern;
    protected java.text.MessageFormat[] userPatternFormatArray;
    protected java.lang.String roleBase;
    protected java.text.MessageFormat roleBaseFormat;
    protected java.text.MessageFormat roleFormat;
    protected java.lang.String userRoleName;
    protected java.lang.String roleName;
    protected java.lang.String roleSearch;
    protected boolean roleSubtree;
    protected boolean roleNested;
    protected boolean roleSearchAsUser;
    protected java.lang.String alternateURL;
    protected int connectionAttempt;
    protected java.lang.String commonRole;
    protected java.lang.String connectionTimeout;
    protected java.lang.String readTimeout;
    protected long sizeLimit;
    protected int timeLimit;
    protected boolean useDelegatedCredential;
    protected java.lang.String spnegoDelegationQop;
    private boolean useStartTls;
    private javax.naming.ldap.StartTlsResponse tls;
    private java.lang.String[] cipherSuitesArray;
    private javax.net.ssl.HostnameVerifier hostnameVerifier;
    private javax.net.ssl.SSLSocketFactory sslSocketFactory;
    private java.lang.String sslSocketFactoryClassName;
    private java.lang.String cipherSuites;
    private java.lang.String hostNameVerifierClassName;
    private java.lang.String sslProtocol;

    public void <init>()
    {
        org.apache.catalina.realm.JNDIRealm r0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        specialinvoke r0.<org.apache.catalina.realm.RealmBase: void <init>()>();
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String authentication> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionName> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionPassword> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionURL> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext context> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String contextFactory> = "com.sun.jndi.ldap.LdapCtxFactory";
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String derefAliases> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String protocol> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean adCompat> = 0;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String referrals> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userBase> = "";
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userSearch> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean userSearchAsUser> = 0;
        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat userSearchFormat> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean userSubtree> = 0;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleAttribute> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] userPatternArray> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPattern> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat[] userPatternFormatArray> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleBase> = "";
        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleBaseFormat> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleFormat> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleName> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleName> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleSearch> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean roleSubtree> = 0;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean roleNested> = 0;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean roleSearchAsUser> = 0;
        r0.<org.apache.catalina.realm.JNDIRealm: int connectionAttempt> = 0;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String commonRole> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionTimeout> = "5000";
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String readTimeout> = "5000";
        r0.<org.apache.catalina.realm.JNDIRealm: long sizeLimit> = 0L;
        r0.<org.apache.catalina.realm.JNDIRealm: int timeLimit> = 0;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean useDelegatedCredential> = 1;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String spnegoDelegationQop> = "auth-conf";
        r0.<org.apache.catalina.realm.JNDIRealm: boolean useStartTls> = 0;
        r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.ldap.StartTlsResponse tls> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] cipherSuitesArray> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.HostnameVerifier hostnameVerifier> = null;
        r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.SSLSocketFactory sslSocketFactory> = null;
        return;
    }

    public java.lang.String getAuthentication()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String authentication>;
        return $r1;
    }

    public void setAuthentication(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String authentication> = r1;
        return;
    }

    public java.lang.String getConnectionName()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionName>;
        return $r1;
    }

    public void setConnectionName(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionName> = r1;
        return;
    }

    public java.lang.String getConnectionPassword()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionPassword>;
        return $r1;
    }

    public void setConnectionPassword(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionPassword> = r1;
        return;
    }

    public java.lang.String getConnectionURL()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionURL>;
        return $r1;
    }

    public void setConnectionURL(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionURL> = r1;
        return;
    }

    public java.lang.String getContextFactory()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String contextFactory>;
        return $r1;
    }

    public void setContextFactory(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String contextFactory> = r1;
        return;
    }

    public java.lang.String getDerefAliases()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String derefAliases>;
        return $r1;
    }

    public void setDerefAliases(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String derefAliases> = r1;
        return;
    }

    public java.lang.String getProtocol()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String protocol>;
        return $r1;
    }

    public void setProtocol(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String protocol> = r1;
        return;
    }

    public boolean getAdCompat()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $z0 = r0.<org.apache.catalina.realm.JNDIRealm: boolean adCompat>;
        return $z0;
    }

    public void setAdCompat(boolean)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean adCompat> = z0;
        return;
    }

    public java.lang.String getReferrals()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String referrals>;
        return $r1;
    }

    public void setReferrals(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String referrals> = r1;
        return;
    }

    public java.lang.String getUserBase()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userBase>;
        return $r1;
    }

    public void setUserBase(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userBase> = r1;
        return;
    }

    public java.lang.String getUserSearch()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userSearch>;
        return $r1;
    }

    public void setUserSearch(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;
        java.text.MessageFormat $r2;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userSearch> = r1;
        if r1 != null goto label0;

        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat userSearchFormat> = null;
        goto label1;

     label0:
        $r2 = new java.text.MessageFormat;
        specialinvoke $r2.<java.text.MessageFormat: void <init>(java.lang.String)>(r1);
        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat userSearchFormat> = $r2;

     label1:
        return;
    }

    public boolean isUserSearchAsUser()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $z0 = r0.<org.apache.catalina.realm.JNDIRealm: boolean userSearchAsUser>;
        return $z0;
    }

    public void setUserSearchAsUser(boolean)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean userSearchAsUser> = z0;
        return;
    }

    public boolean getUserSubtree()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $z0 = r0.<org.apache.catalina.realm.JNDIRealm: boolean userSubtree>;
        return $z0;
    }

    public void setUserSubtree(boolean)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean userSubtree> = z0;
        return;
    }

    public java.lang.String getUserRoleName()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleName>;
        return $r1;
    }

    public void setUserRoleName(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleName> = r1;
        return;
    }

    public java.lang.String getRoleBase()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleBase>;
        return $r1;
    }

    public void setRoleBase(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;
        java.text.MessageFormat $r2;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleBase> = r1;
        if r1 != null goto label0;

        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleBaseFormat> = null;
        goto label1;

     label0:
        $r2 = new java.text.MessageFormat;
        specialinvoke $r2.<java.text.MessageFormat: void <init>(java.lang.String)>(r1);
        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleBaseFormat> = $r2;

     label1:
        return;
    }

    public java.lang.String getRoleName()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleName>;
        return $r1;
    }

    public void setRoleName(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleName> = r1;
        return;
    }

    public java.lang.String getRoleSearch()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleSearch>;
        return $r1;
    }

    public void setRoleSearch(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;
        java.text.MessageFormat $r2;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleSearch> = r1;
        if r1 != null goto label0;

        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleFormat> = null;
        goto label1;

     label0:
        $r2 = new java.text.MessageFormat;
        specialinvoke $r2.<java.text.MessageFormat: void <init>(java.lang.String)>(r1);
        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleFormat> = $r2;

     label1:
        return;
    }

    public boolean isRoleSearchAsUser()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $z0 = r0.<org.apache.catalina.realm.JNDIRealm: boolean roleSearchAsUser>;
        return $z0;
    }

    public void setRoleSearchAsUser(boolean)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean roleSearchAsUser> = z0;
        return;
    }

    public boolean getRoleSubtree()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $z0 = r0.<org.apache.catalina.realm.JNDIRealm: boolean roleSubtree>;
        return $z0;
    }

    public void setRoleSubtree(boolean)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean roleSubtree> = z0;
        return;
    }

    public boolean getRoleNested()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $z0 = r0.<org.apache.catalina.realm.JNDIRealm: boolean roleNested>;
        return $z0;
    }

    public void setRoleNested(boolean)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean roleNested> = z0;
        return;
    }

    public java.lang.String getUserPassword()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword>;
        return $r1;
    }

    public void setUserPassword(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword> = r1;
        return;
    }

    public java.lang.String getUserRoleAttribute()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleAttribute>;
        return $r1;
    }

    public void setUserRoleAttribute(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleAttribute> = r1;
        return;
    }

    public java.lang.String getUserPattern()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPattern>;
        return $r1;
    }

    public void setUserPattern(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, $r8;
        int i0, i1;
        java.lang.String[] $r2, $r3, $r7;
        java.text.MessageFormat[] $r4, $r5;
        java.text.MessageFormat $r6;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPattern> = r1;
        if r1 != null goto label0;

        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] userPatternArray> = null;
        goto label3;

     label0:
        $r2 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] parseUserPatternString(java.lang.String)>(r1);
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] userPatternArray> = $r2;
        $r3 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] userPatternArray>;
        i0 = lengthof $r3;
        $r4 = newarray (java.text.MessageFormat)[i0];
        r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat[] userPatternFormatArray> = $r4;
        i1 = 0;
        goto label2;

     label1:
        $r5 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat[] userPatternFormatArray>;
        $r6 = new java.text.MessageFormat;
        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] userPatternArray>;
        $r8 = $r7[i1];
        specialinvoke $r6.<java.text.MessageFormat: void <init>(java.lang.String)>($r8);
        $r5[i1] = $r6;
        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        return;
    }

    public java.lang.String getAlternateURL()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String alternateURL>;
        return $r1;
    }

    public void setAlternateURL(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String alternateURL> = r1;
        return;
    }

    public java.lang.String getCommonRole()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String commonRole>;
        return $r1;
    }

    public void setCommonRole(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String commonRole> = r1;
        return;
    }

    public java.lang.String getConnectionTimeout()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionTimeout>;
        return $r1;
    }

    public void setConnectionTimeout(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionTimeout> = r1;
        return;
    }

    public java.lang.String getReadTimeout()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String readTimeout>;
        return $r1;
    }

    public void setReadTimeout(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String readTimeout> = r1;
        return;
    }

    public long getSizeLimit()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        long $l0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $l0 = r0.<org.apache.catalina.realm.JNDIRealm: long sizeLimit>;
        return $l0;
    }

    public void setSizeLimit(long)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        long l0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        l0 := @parameter0: long;
        r0.<org.apache.catalina.realm.JNDIRealm: long sizeLimit> = l0;
        return;
    }

    public int getTimeLimit()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        int $i0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $i0 = r0.<org.apache.catalina.realm.JNDIRealm: int timeLimit>;
        return $i0;
    }

    public void setTimeLimit(int)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        int i0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        i0 := @parameter0: int;
        r0.<org.apache.catalina.realm.JNDIRealm: int timeLimit> = i0;
        return;
    }

    public boolean isUseDelegatedCredential()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $z0 = r0.<org.apache.catalina.realm.JNDIRealm: boolean useDelegatedCredential>;
        return $z0;
    }

    public void setUseDelegatedCredential(boolean)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean useDelegatedCredential> = z0;
        return;
    }

    public java.lang.String getSpnegoDelegationQop()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String spnegoDelegationQop>;
        return $r1;
    }

    public void setSpnegoDelegationQop(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String spnegoDelegationQop> = r1;
        return;
    }

    public java.lang.String getInfo()
    {
        org.apache.catalina.realm.JNDIRealm r0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        return "org.apache.catalina.realm.JNDIRealm/1.0";
    }

    public boolean getUseStartTls()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $z0 = r0.<org.apache.catalina.realm.JNDIRealm: boolean useStartTls>;
        return $z0;
    }

    public void setUseStartTls(boolean)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        boolean z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.realm.JNDIRealm: boolean useStartTls> = z0;
        return;
    }

    private java.lang.String[] getCipherSuitesArray()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        org.apache.tomcat.util.res.StringManager $r1, $r13;
        java.lang.String $r2, $r5, $r6, $r8, $r9, $r10, $r17;
        java.lang.String[] $r3, $r4, $r11, $r15, $r18;
        boolean $z0;
        org.apache.juli.logging.Log $r7, $r12;
        java.lang.Object[] $r14;
        java.util.List $r16;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r2 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String cipherSuites>;
        if $r2 == null goto label0;

        $r3 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] cipherSuitesArray>;
        if $r3 == null goto label1;

     label0:
        $r4 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] cipherSuitesArray>;
        return $r4;

     label1:
        $r5 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String cipherSuites>;
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke $r6.<java.lang.String: boolean isEmpty()>();
        if $z0 == 0 goto label2;

        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r1 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.emptyCipherSuites");
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r8);
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] cipherSuitesArray> = null;
        goto label3;

     label2:
        $r9 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String cipherSuites>;
        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();
        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s*,\\s*");
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] cipherSuitesArray> = $r11;
        $r12 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r13 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = newarray (java.lang.Object)[1];
        $r15 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] cipherSuitesArray>;
        $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r15);
        $r14[0] = $r16;
        $r17 = virtualinvoke $r13.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.cipherSuites", $r14);
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r17);

     label3:
        $r18 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] cipherSuitesArray>;
        return $r18;
    }

    public void setCipherSuites(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String cipherSuites> = r1;
        return;
    }

    public java.lang.String getHostnameVerifierClassName()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.net.ssl.HostnameVerifier $r1, $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.HostnameVerifier hostnameVerifier>;
        if $r1 != null goto label0;

        return "";

     label0:
        $r2 = r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.HostnameVerifier hostnameVerifier>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getCanonicalName()>();
        return $r4;
    }

    public void setHostnameVerifierClassName(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String hostNameVerifierClassName> = $r2;
        goto label1;

     label0:
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String hostNameVerifierClassName> = null;

     label1:
        return;
    }

    public javax.net.ssl.HostnameVerifier getHostnameVerifier()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.Object r1;
        org.apache.tomcat.util.res.StringManager $r2, $r17, $r24, $r31, $r38;
        javax.net.ssl.HostnameVerifier $r3, $r4, $r8, $r9;
        java.lang.String $r5, $r6, $r7, $r12, $r13, $r19, $r20, $r26, $r27, $r33, $r34, $r40, $r41;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r10, $r16, $r23, $r30, $r37;
        java.lang.Object[] $r11, $r18, $r25, $r32, $r39;
        java.lang.ClassNotFoundException $r14, r15;
        java.lang.SecurityException $r21, r22;
        java.lang.InstantiationException $r28, r29;
        java.lang.IllegalAccessException $r35, r36;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r3 = r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.HostnameVerifier hostnameVerifier>;
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.HostnameVerifier hostnameVerifier>;
        return $r4;

     label0:
        $r5 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String hostNameVerifierClassName>;
        if $r5 == null goto label1;

        $r6 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String hostNameVerifierClassName>;
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String hostNameVerifierClassName>;
        r1 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.Object constructInstance(java.lang.String)>($r7);
        $z1 = r1 instanceof javax.net.ssl.HostnameVerifier;
        if $z1 == 0 goto label4;

        $r8 = (javax.net.ssl.HostnameVerifier) r1;
        r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.HostnameVerifier hostnameVerifier> = $r8;
        $r9 = r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.HostnameVerifier hostnameVerifier>;

     label3:
        return $r9;

     label4:
        $r10 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[1];
        $r12 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String hostNameVerifierClassName>;
        $r11[0] = $r12;
        $r13 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidHostnameVerifier", $r11);
        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);
        throw $r10;

     label5:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = new java.lang.IllegalArgumentException;
        $r17 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r18 = newarray (java.lang.Object)[1];
        $r19 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String hostNameVerifierClassName>;
        $r18[0] = $r19;
        $r20 = virtualinvoke $r17.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidHostnameVerifier", $r18);
        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r20, r15);
        throw $r16;

     label6:
        $r21 := @caughtexception;
        r22 = $r21;
        $r23 = new java.lang.IllegalArgumentException;
        $r24 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r25 = newarray (java.lang.Object)[1];
        $r26 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String hostNameVerifierClassName>;
        $r25[0] = $r26;
        $r27 = virtualinvoke $r24.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidHostnameVerifier", $r25);
        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r27, r22);
        throw $r23;

     label7:
        $r28 := @caughtexception;
        r29 = $r28;
        $r30 = new java.lang.IllegalArgumentException;
        $r31 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r32 = newarray (java.lang.Object)[1];
        $r33 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String hostNameVerifierClassName>;
        $r32[0] = $r33;
        $r34 = virtualinvoke $r31.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidHostnameVerifier", $r32);
        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r34, r29);
        throw $r30;

     label8:
        $r35 := @caughtexception;
        r36 = $r35;
        $r37 = new java.lang.IllegalArgumentException;
        $r38 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r39 = newarray (java.lang.Object)[1];
        $r40 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String hostNameVerifierClassName>;
        $r39[0] = $r40;
        $r41 = virtualinvoke $r38.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidHostnameVerifier", $r39);
        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r41, r36);
        throw $r37;

        catch java.lang.ClassNotFoundException from label2 to label3 with label5;
        catch java.lang.ClassNotFoundException from label4 to label5 with label5;
        catch java.lang.SecurityException from label2 to label3 with label6;
        catch java.lang.SecurityException from label4 to label5 with label6;
        catch java.lang.InstantiationException from label2 to label3 with label7;
        catch java.lang.InstantiationException from label4 to label5 with label7;
        catch java.lang.IllegalAccessException from label2 to label3 with label8;
        catch java.lang.IllegalAccessException from label4 to label5 with label8;
    }

    public void setSslSocketFactoryClassName(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String sslSocketFactoryClassName> = r1;
        return;
    }

    public void setSslProtocol(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String sslProtocol> = r1;
        return;
    }

    private java.lang.String[] getSupportedSslProtocols()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.net.ssl.SSLContext r1;
        org.apache.tomcat.util.res.StringManager $r2;
        javax.net.ssl.SSLParameters $r3;
        java.lang.String[] $r4;
        java.security.NoSuchAlgorithmException $r5, r6;
        java.lang.RuntimeException $r7;
        java.lang.String $r8;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;

     label0:
        r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>();
        $r3 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()>();
        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLParameters: java.lang.String[] getProtocols()>();

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;
        r6 = $r5;
        $r7 = new java.lang.RuntimeException;
        $r2 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.exception");
        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r8, r6);
        throw $r7;

        catch java.security.NoSuchAlgorithmException from label0 to label1 with label2;
    }

    private java.lang.Object constructInstance(java.lang.String) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;
        java.lang.Class r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);
        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();
        return $r3;
    }

    public java.security.Principal authenticate(java.lang.String, java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, r2, $r9, $r14, $r20;
        javax.naming.directory.DirContext r3;
        null_type n0;
        java.lang.NullPointerException r4, $r6;
        java.security.Principal r5;
        org.apache.juli.logging.Log $r7, $r12, $r18, $r21, $r22;
        org.apache.tomcat.util.res.StringManager $r8, $r13, $r19;
        javax.naming.NamingException $r10, r11, $r16, r17;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = null;
        n0 = null;

     label0:
        r3 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext open()>();

     label1:
        r5 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.security.Principal authenticate(javax.naming.directory.DirContext,java.lang.String,java.lang.String)>(r3, r1, r2);

     label2:
        goto label7;

     label3:
        $r6 := @caughtexception;
        r4 = $r6;
        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r8 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.exception.retry");
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r9, r4);
        if r3 == null goto label4;

        virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: void close(javax.naming.directory.DirContext)>(r3);

     label4:
        r3 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext open()>();
        r5 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.security.Principal authenticate(javax.naming.directory.DirContext,java.lang.String,java.lang.String)>(r3, r1, r2);
        goto label7;

     label5:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r13 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = virtualinvoke $r13.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.exception.retry");
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r14, r11);
        if r3 == null goto label6;

        virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: void close(javax.naming.directory.DirContext)>(r3);

     label6:
        r3 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext open()>();
        r5 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.security.Principal authenticate(javax.naming.directory.DirContext,java.lang.String,java.lang.String)>(r3, r1, r2);

     label7:
        virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: void release(javax.naming.directory.DirContext)>(r3);

     label8:
        return r5;

     label9:
        $r16 := @caughtexception;
        r17 = $r16;
        $r18 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r19 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.exception");
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r20, r17);
        if r3 == null goto label10;

        virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: void close(javax.naming.directory.DirContext)>(r3);

     label10:
        $r21 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z0 = interfaceinvoke $r21.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label11;

        $r22 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        interfaceinvoke $r22.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Returning null principal.");

     label11:
        return null;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch javax.naming.NamingException from label1 to label2 with label5;
        catch javax.naming.NamingException from label0 to label8 with label9;
    }

    public synchronized java.security.Principal authenticate(javax.naming.directory.DirContext, java.lang.String, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2, r3, $r14, $r16, $r22, $r31, $r33;
        int i0, $i1;
        org.apache.catalina.realm.JNDIRealm$User r4, r24;
        java.util.List r5, r25;
        java.util.Iterator r6, r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.juli.logging.Log $r7, $r8, $r10, $r11, $r20, $r26, $r28;
        java.lang.String[] $r9;
        java.lang.StringBuilder $r12, $r15, $r29, $r32;
        java.lang.Object $r13, $r30;
        org.apache.catalina.realm.GenericPrincipal $r17, $r34;
        javax.naming.InvalidNameException $r18, r19;
        org.apache.tomcat.util.res.StringManager $r21;
        java.text.MessageFormat[] $r23;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        if r2 == null goto label0;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 != 0 goto label0;

        if r3 == null goto label0;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z1 == 0 goto label2;

     label0:
        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z2 = interfaceinvoke $r7.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label1;

        $r8 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("username null or empty: returning null principal.");

     label1:
        return null;

     label2:
        $r9 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] userPatternArray>;
        if $r9 == null goto label12;

        i0 = 0;
        goto label11;

     label3:
        r4 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String,java.lang.String,int)>(r1, r2, r3, i0);
        if r4 == null goto label10;

     label4:
        $z3 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: boolean checkCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)>(r1, r4, r3);
        if $z3 == 0 goto label10;

        r5 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.util.List getRoles(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User)>(r1, r4);
        $r10 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z4 = interfaceinvoke $r10.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label7;

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();
        goto label6;

     label5:
        $r11 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found role: ");
        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        $r14 = (java.lang.String) $r13;
        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r16);

     label6:
        $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z5 != 0 goto label5;

     label7:
        $r17 = new org.apache.catalina.realm.GenericPrincipal;
        specialinvoke $r17.<org.apache.catalina.realm.GenericPrincipal: void <init>(java.lang.String,java.lang.String,java.util.List)>(r2, r3, r5);

     label8:
        return $r17;

     label9:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r21 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r22 = virtualinvoke $r21.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.exception");
        interfaceinvoke $r20.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r22, r19);

     label10:
        i0 = i0 + 1;

     label11:
        $r23 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat[] userPatternFormatArray>;
        $i1 = lengthof $r23;
        if i0 < $i1 goto label3;

        return null;

     label12:
        r24 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String,java.lang.String)>(r1, r2, r3);
        if r24 != null goto label13;

        return null;

     label13:
        $z6 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: boolean checkCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)>(r1, r24, r3);
        if $z6 != 0 goto label14;

        return null;

     label14:
        r25 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.util.List getRoles(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User)>(r1, r24);
        $r26 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z7 = interfaceinvoke $r26.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z7 == 0 goto label17;

        r27 = interfaceinvoke r25.<java.util.List: java.util.Iterator iterator()>();
        goto label16;

     label15:
        $r28 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r29 = new java.lang.StringBuilder;
        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found role: ");
        $r30 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();
        $r31 = (java.lang.String) $r30;
        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r28.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r33);

     label16:
        $z8 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();
        if $z8 != 0 goto label15;

     label17:
        $r34 = new org.apache.catalina.realm.GenericPrincipal;
        specialinvoke $r34.<org.apache.catalina.realm.GenericPrincipal: void <init>(java.lang.String,java.lang.String,java.util.List)>(r2, r3, r25);
        return $r34;

        catch javax.naming.InvalidNameException from label4 to label8 with label9;
    }

    protected org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2;
        org.apache.catalina.realm.JNDIRealm$User $r3;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        $r3 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String,java.lang.String,int)>(r1, r2, null, -1);
        return $r3;
    }

    protected org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext, java.lang.String, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2, r3;
        org.apache.catalina.realm.JNDIRealm$User $r4;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String,java.lang.String,int)>(r1, r2, r3, -1);
        return $r4;
    }

    protected org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext, java.lang.String, java.lang.String, int) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2, r3, $r8, $r9, $r10, $r11, $r12, $r13, $r22, $r29, $r30, $r32, $r33, $r35;
        int i0, $i1;
        null_type n0;
        java.util.ArrayList r4, $r7;
        java.lang.String[] r5;
        boolean z0, $z4, $z5;
        java.lang.Throwable r6, $r23;
        java.text.MessageFormat[] $r15;
        org.apache.catalina.realm.JNDIRealm$User r16, $r31;
        org.apache.juli.logging.Log $r17, $r18, $r24, $r25;
        java.lang.StringBuilder $r19, $r20, $r21, $r26, $r27, $r28;
        java.util.List $r34;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        i0 := @parameter3: int;
        n0 = null;
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r4 = $r7;
        $r8 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword>;
        if $r8 == null goto label0;

        $r9 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword>;
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label0:
        $r10 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleName>;
        if $r10 == null goto label1;

        $r11 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleName>;
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label1:
        $r12 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleAttribute>;
        if $r12 == null goto label2;

        $r13 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleAttribute>;
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label2:
        $i1 = virtualinvoke r4.<java.util.ArrayList: int size()>();
        r5 = newarray (java.lang.String)[$i1];
        virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r5);
        $r15 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat[] userPatternFormatArray>;
        if $r15 == null goto label3;

        if i0 < 0 goto label3;

        r16 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: org.apache.catalina.realm.JNDIRealm$User getUserByPattern(javax.naming.directory.DirContext,java.lang.String,java.lang.String,java.lang.String[],int)>(r1, r2, r3, r5, i0);
        $r17 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z4 = interfaceinvoke $r17.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label10;

        $r18 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found user by pattern [");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r22);
        goto label10;

     label3:
        z0 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: boolean isUserSearchAsUser()>();

     label4:
        if z0 == 0 goto label5;

        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsAdd(javax.naming.directory.DirContext,java.lang.String,java.lang.String)>(r1, r2, r3);

     label5:
        r16 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: org.apache.catalina.realm.JNDIRealm$User getUserBySearch(javax.naming.directory.DirContext,java.lang.String,java.lang.String[])>(r1, r2, r5);
        goto label8;

     label6:
        $r23 := @caughtexception;
        r6 = $r23;
        if z0 == 0 goto label7;

        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsRemove(javax.naming.directory.DirContext)>(r1);

     label7:
        throw r6;

     label8:
        if z0 == 0 goto label9;

        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsRemove(javax.naming.directory.DirContext)>(r1);

     label9:
        $r24 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z5 = interfaceinvoke $r24.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label10;

        $r25 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found user by search [");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r29);

     label10:
        $r30 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword>;
        if $r30 != null goto label11;

        if r3 == null goto label11;

        if r16 == null goto label11;

        $r31 = new org.apache.catalina.realm.JNDIRealm$User;
        $r32 = virtualinvoke r16.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getUserName()>();
        $r33 = virtualinvoke r16.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getDN()>();
        $r34 = virtualinvoke r16.<org.apache.catalina.realm.JNDIRealm$User: java.util.List getRoles()>();
        $r35 = virtualinvoke r16.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getUserRoleId()>();
        specialinvoke $r31.<org.apache.catalina.realm.JNDIRealm$User: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String)>($r32, $r33, r3, $r34, $r35);
        return $r31;

     label11:
        return r16;

        catch java.lang.Throwable from label4 to label6 with label6;
    }

    protected org.apache.catalina.realm.JNDIRealm$User getUserByPattern(javax.naming.directory.DirContext, java.lang.String, java.lang.String[], java.lang.String) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2, r4, r6, r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.String[] r3;
        null_type n0;
        javax.naming.NameNotFoundException r5, $r10;
        java.util.ArrayList r7;
        int $i0;
        org.apache.catalina.realm.JNDIRealm$User $r8, $r18;
        javax.naming.directory.Attributes r9;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String[];
        r4 := @parameter3: java.lang.String;
        if r3 == null goto label0;

        $i0 = lengthof r3;
        if $i0 != 0 goto label1;

     label0:
        $r8 = new org.apache.catalina.realm.JNDIRealm$User;
        specialinvoke $r8.<org.apache.catalina.realm.JNDIRealm$User: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String)>(r2, r4, null, null, null);
        return $r8;

     label1:
        n0 = null;

     label2:
        r9 = interfaceinvoke r1.<javax.naming.directory.DirContext: javax.naming.directory.Attributes getAttributes(java.lang.String,java.lang.String[])>(r4, r3);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;
        r5 = $r10;
        return null;

     label5:
        if r9 != null goto label6;

        return null;

     label6:
        r11 = null;
        $r12 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword>;
        if $r12 == null goto label7;

        $r13 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword>;
        r11 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)>($r13, r9);

     label7:
        r6 = null;
        $r14 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleAttribute>;
        if $r14 == null goto label8;

        $r15 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleAttribute>;
        r6 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)>($r15, r9);

     label8:
        r7 = null;
        $r16 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleName>;
        if $r16 == null goto label9;

        $r17 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleName>;
        r7 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.util.ArrayList addAttributeValues(java.lang.String,javax.naming.directory.Attributes,java.util.ArrayList)>($r17, r9, r7);

     label9:
        $r18 = new org.apache.catalina.realm.JNDIRealm$User;
        specialinvoke $r18.<org.apache.catalina.realm.JNDIRealm$User: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String)>(r2, r4, r11, r7, r6);
        return $r18;

        catch javax.naming.NameNotFoundException from label2 to label3 with label4;
    }

    protected org.apache.catalina.realm.JNDIRealm$User getUserByPattern(javax.naming.directory.DirContext, java.lang.String, java.lang.String, java.lang.String[], int) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2, r3, r5;
        java.lang.String[] r4, $r12;
        int i0;
        null_type n0;
        javax.naming.NameNotFoundException r6, $r14;
        java.lang.Throwable r7, $r17;
        java.text.MessageFormat[] $r8, $r10;
        java.text.MessageFormat $r9, $r11;
        org.apache.catalina.realm.JNDIRealm$User r13;
        javax.naming.NamingException $r15, r16;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String[];
        i0 := @parameter4: int;
        n0 = null;
        if r2 == null goto label0;

        $r8 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat[] userPatternFormatArray>;
        $r9 = $r8[i0];
        if $r9 != null goto label1;

     label0:
        return null;

     label1:
        $r10 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat[] userPatternFormatArray>;
        $r11 = $r10[i0];
        $r12 = newarray (java.lang.String)[1];
        $r12[0] = r2;
        r5 = virtualinvoke $r11.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r12);

     label2:
        r13 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: org.apache.catalina.realm.JNDIRealm$User getUserByPattern(javax.naming.directory.DirContext,java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r4, r5);

     label3:
        goto label9;

     label4:
        $r14 := @caughtexception;
        r6 = $r14;
        return null;

     label5:
        $r15 := @caughtexception;
        r16 = $r15;

     label6:
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsAdd(javax.naming.directory.DirContext,java.lang.String,java.lang.String)>(r1, r5, r3);
        r13 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: org.apache.catalina.realm.JNDIRealm$User getUserByPattern(javax.naming.directory.DirContext,java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r4, r5);
        goto label8;

     label7:
        $r17 := @caughtexception;
        r7 = $r17;
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsRemove(javax.naming.directory.DirContext)>(r1);
        throw r7;

     label8:
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsRemove(javax.naming.directory.DirContext)>(r1);

     label9:
        return r13;

        catch javax.naming.NameNotFoundException from label2 to label3 with label4;
        catch javax.naming.NamingException from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    protected org.apache.catalina.realm.JNDIRealm$User getUserBySearch(javax.naming.directory.DirContext, java.lang.String, java.lang.String[]) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2, r4, r10, r11, $r19, $r28, $r30, r31, $r38, $r39, $r40, $r41, $r42, $r43, $r44;
        java.lang.String[] r3, $r17;
        javax.naming.directory.SearchControls r5, $r18;
        javax.naming.NamingEnumeration r6;
        javax.naming.PartialResultException r7, r8, $r20, $r29;
        javax.naming.directory.Attributes r9;
        java.util.ArrayList r12;
        org.apache.catalina.realm.JNDIRealm$User r13, $r45;
        java.lang.Throwable r14, $r46;
        java.text.MessageFormat $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        long $l0;
        int $i1;
        java.lang.Object $r21;
        javax.naming.directory.SearchResult r22;
        org.apache.juli.logging.Log $r23, $r24, $r32, $r33;
        java.lang.StringBuilder $r25, $r26, $r27, $r34, $r35, $r36, $r37;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String[];
        if r2 == null goto label0;

        $r15 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat userSearchFormat>;
        if $r15 != null goto label1;

     label0:
        return null;

     label1:
        $r16 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat userSearchFormat>;
        $r17 = newarray (java.lang.String)[1];
        $r17[0] = r2;
        r4 = virtualinvoke $r16.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r17);
        $r18 = new javax.naming.directory.SearchControls;
        specialinvoke $r18.<javax.naming.directory.SearchControls: void <init>()>();
        r5 = $r18;
        $z0 = r0.<org.apache.catalina.realm.JNDIRealm: boolean userSubtree>;
        if $z0 == 0 goto label2;

        virtualinvoke r5.<javax.naming.directory.SearchControls: void setSearchScope(int)>(2);
        goto label3;

     label2:
        virtualinvoke r5.<javax.naming.directory.SearchControls: void setSearchScope(int)>(1);

     label3:
        $l0 = r0.<org.apache.catalina.realm.JNDIRealm: long sizeLimit>;
        virtualinvoke r5.<javax.naming.directory.SearchControls: void setCountLimit(long)>($l0);
        $i1 = r0.<org.apache.catalina.realm.JNDIRealm: int timeLimit>;
        virtualinvoke r5.<javax.naming.directory.SearchControls: void setTimeLimit(int)>($i1);
        if r3 != null goto label4;

        r3 = newarray (java.lang.String)[0];

     label4:
        virtualinvoke r5.<javax.naming.directory.SearchControls: void setReturningAttributes(java.lang.String[])>(r3);
        $r19 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userBase>;
        r6 = interfaceinvoke r1.<javax.naming.directory.DirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>($r19, r4, r5);

     label5:
        if r6 == null goto label6;

        $z1 = interfaceinvoke r6.<javax.naming.NamingEnumeration: boolean hasMore()>();
        if $z1 != 0 goto label12;

     label6:
        if r6 == null goto label7;

        interfaceinvoke r6.<javax.naming.NamingEnumeration: void close()>();

     label7:
        return null;

     label8:
        $r20 := @caughtexception;

     label9:
        r7 = $r20;
        $z2 = r0.<org.apache.catalina.realm.JNDIRealm: boolean adCompat>;
        if $z2 != 0 goto label10;

        throw r7;

     label10:
        if r6 == null goto label11;

        interfaceinvoke r6.<javax.naming.NamingEnumeration: void close()>();

     label11:
        return null;

     label12:
        $r21 = interfaceinvoke r6.<javax.naming.NamingEnumeration: java.lang.Object next()>();
        r22 = (javax.naming.directory.SearchResult) $r21;

     label13:
        $z3 = interfaceinvoke r6.<javax.naming.NamingEnumeration: boolean hasMore()>();
        if $z3 == 0 goto label18;

        $r23 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z4 = interfaceinvoke $r23.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z4 == 0 goto label14;

        $r24 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("username ");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has multiple entries");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r24.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r28);

     label14:
        if r6 == null goto label15;

        interfaceinvoke r6.<javax.naming.NamingEnumeration: void close()>();

     label15:
        return null;

     label16:
        $r29 := @caughtexception;

     label17:
        r8 = $r29;
        $z5 = r0.<org.apache.catalina.realm.JNDIRealm: boolean adCompat>;
        if $z5 != 0 goto label18;

        throw r8;

     label18:
        $r30 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userBase>;
        r31 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String getDistinguishedName(javax.naming.directory.DirContext,java.lang.String,javax.naming.directory.SearchResult)>(r1, $r30, r22);
        $r32 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z6 = interfaceinvoke $r32.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z6 == 0 goto label19;

        $r33 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r34 = new java.lang.StringBuilder;
        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>("  entry found for ");
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with dn ");
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r33.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r38);

     label19:
        r9 = virtualinvoke r22.<javax.naming.directory.SearchResult: javax.naming.directory.Attributes getAttributes()>();
        if r9 != null goto label22;

     label20:
        if r6 == null goto label21;

        interfaceinvoke r6.<javax.naming.NamingEnumeration: void close()>();

     label21:
        return null;

     label22:
        r10 = null;
        $r39 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword>;
        if $r39 == null goto label23;

        $r40 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword>;
        r10 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)>($r40, r9);

     label23:
        r11 = null;
        $r41 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleAttribute>;
        if $r41 == null goto label24;

        $r42 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleAttribute>;
        r11 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)>($r42, r9);

     label24:
        r12 = null;
        $r43 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleName>;
        if $r43 == null goto label25;

        $r44 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userRoleName>;
        r12 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.util.ArrayList addAttributeValues(java.lang.String,javax.naming.directory.Attributes,java.util.ArrayList)>($r44, r9, r12);

     label25:
        $r45 = new org.apache.catalina.realm.JNDIRealm$User;
        specialinvoke $r45.<org.apache.catalina.realm.JNDIRealm$User: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String)>(r2, r31, r10, r12, r11);
        r13 = $r45;

     label26:
        if r6 == null goto label27;

        interfaceinvoke r6.<javax.naming.NamingEnumeration: void close()>();

     label27:
        return r13;

     label28:
        $r46 := @caughtexception;
        r14 = $r46;
        if r6 == null goto label29;

        interfaceinvoke r6.<javax.naming.NamingEnumeration: void close()>();

     label29:
        throw r14;

        catch javax.naming.PartialResultException from label5 to label6 with label8;
        catch javax.naming.PartialResultException from label13 to label14 with label16;
        catch java.lang.Throwable from label5 to label6 with label28;
        catch java.lang.Throwable from label9 to label10 with label28;
        catch java.lang.Throwable from label12 to label14 with label28;
        catch java.lang.Throwable from label17 to label20 with label28;
        catch java.lang.Throwable from label22 to label26 with label28;
    }

    protected boolean checkCredentials(javax.naming.directory.DirContext, org.apache.catalina.realm.JNDIRealm$User, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        org.apache.catalina.realm.JNDIRealm$User r2;
        java.lang.String r3, $r4, $r9, $r10, $r14, $r15;
        boolean z0, z1, $z2;
        org.apache.juli.logging.Log $r5, $r6, $r11;
        org.apache.tomcat.util.res.StringManager $r7, $r12;
        java.lang.Object[] $r8, $r13;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: org.apache.catalina.realm.JNDIRealm$User;
        r3 := @parameter2: java.lang.String;
        z0 = 0;
        $r4 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String userPassword>;
        if $r4 != null goto label0;

        z1 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: boolean bindAsUser(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)>(r1, r2, r3);
        goto label1;

     label0:
        z1 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: boolean compareCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)>(r1, r2, r3);

     label1:
        $r5 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z2 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z2 == 0 goto label3;

        if z1 == 0 goto label2;

        $r6 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r7 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = newarray (java.lang.Object)[1];
        $r9 = virtualinvoke r2.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getUserName()>();
        $r8[0] = $r9;
        $r10 = virtualinvoke $r7.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.authenticateSuccess", $r8);
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r10);
        goto label3;

     label2:
        $r11 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r12 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r13 = newarray (java.lang.Object)[1];
        $r14 = virtualinvoke r2.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getUserName()>();
        $r13[0] = $r14;
        $r15 = virtualinvoke $r12.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.authenticateFailure", $r13);
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r15);

     label3:
        return z1;
    }

    protected boolean compareCredentials(javax.naming.directory.DirContext, org.apache.catalina.realm.JNDIRealm$User, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        org.apache.catalina.realm.JNDIRealm$User r2;
        java.lang.String r3, r4;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: org.apache.catalina.realm.JNDIRealm$User;
        r3 := @parameter2: java.lang.String;
        $r5 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void trace(java.lang.Object)>("  validating credentials");

     label0:
        if r2 == null goto label1;

        if r3 != null goto label2;

     label1:
        return 0;

     label2:
        r4 = virtualinvoke r2.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getPassword()>();
        $z1 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: boolean compareCredentials(java.lang.String,java.lang.String)>(r3, r4);
        return $z1;
    }

    protected boolean bindAsUser(javax.naming.directory.DirContext, org.apache.catalina.realm.JNDIRealm$User, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        org.apache.catalina.realm.JNDIRealm$User r2;
        java.lang.String r3, r4, $r12;
        boolean z0, $z1, $z2, $z3;
        javax.naming.AuthenticationException r5, $r14;
        org.apache.juli.logging.Log $r6, $r7, $r8, $r9, $r15, $r16;
        java.lang.StringBuilder $r10, $r11;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: org.apache.catalina.realm.JNDIRealm$User;
        r3 := @parameter2: java.lang.String;
        if r3 == null goto label0;

        if r2 != null goto label1;

     label0:
        return 0;

     label1:
        r4 = virtualinvoke r2.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getDN()>();
        if r4 != null goto label2;

        return 0;

     label2:
        $r6 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z1 = interfaceinvoke $r6.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z1 == 0 goto label3;

        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void trace(java.lang.Object)>("  validating credentials by binding as the user");

     label3:
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsAdd(javax.naming.directory.DirContext,java.lang.String,java.lang.String)>(r1, r4, r3);
        z0 = 0;

     label4:
        $r8 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z2 = interfaceinvoke $r8.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z2 == 0 goto label5;

        $r9 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("  binding as ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r12);

     label5:
        interfaceinvoke r1.<javax.naming.directory.DirContext: javax.naming.directory.Attributes getAttributes(java.lang.String,java.lang.String[])>("", null);
        z0 = 1;

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;
        r5 = $r14;
        $r15 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z3 = interfaceinvoke $r15.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z3 == 0 goto label8;

        $r16 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        interfaceinvoke $r16.<org.apache.juli.logging.Log: void trace(java.lang.Object)>("  bind attempt failed");

     label8:
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsRemove(javax.naming.directory.DirContext)>(r1);
        return z0;

        catch javax.naming.AuthenticationException from label4 to label6 with label7;
    }

    private void userCredentialsAdd(javax.naming.directory.DirContext, java.lang.String, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2, r3;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>("java.naming.security.principal", r2);
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>("java.naming.security.credentials", r3);
        return;
    }

    private void userCredentialsRemove(javax.naming.directory.DirContext) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String $r2, $r3, $r6, $r7;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        $r2 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionName>;
        if $r2 == null goto label0;

        $r3 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionName>;
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>("java.naming.security.principal", $r3);
        goto label1;

     label0:
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object removeFromEnvironment(java.lang.String)>("java.naming.security.principal");

     label1:
        $r6 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionPassword>;
        if $r6 == null goto label2;

        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionPassword>;
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>("java.naming.security.credentials", $r7);
        goto label3;

     label2:
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object removeFromEnvironment(java.lang.String)>("java.naming.security.credentials");

     label3:
        return;
    }

    protected java.util.List getRoles(javax.naming.directory.DirContext, org.apache.catalina.realm.JNDIRealm$User) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        org.apache.catalina.realm.JNDIRealm$User r2;
        java.lang.String r3, r4, r5, r13, r14, r17, r18, $r24, $r26, $r27, $r33, $r37, $r39, $r41, $r44, r45, $r48, $r50, r52, $r59, $r60, $r71, $r78, $r82, $r84, $r96, $r98, $r100, r101, $r105, $r109, $r110, $r114, $r115, $r125;
        java.lang.StringBuilder $r6, $r22, $r23, $r30, $r31, $r32, $r35, $r38, $r68, $r69, $r70, $r76, $r79, $r80, $r83, $r104, $r106, $r107, $r108, $r121, $r122, $r123, $r124;
        java.util.ArrayList r7, $r25;
        java.util.List r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        javax.naming.directory.SearchControls r9, $r46;
        null_type n0;
        javax.naming.NameParser r10;
        javax.naming.Name r11;
        java.lang.String[] r12, $r43, $r47, $r94;
        java.lang.Throwable r15, r19, $r64, $r128;
        javax.naming.directory.Attributes r16, r58;
        org.apache.juli.logging.Log $r20, $r21, $r28, $r29, $r34, $r65, $r67, $r75, $r102, $r103, $r119, $r120;
        boolean $z0, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.lang.Object $r36, $r56, $r73, $r77, $r81, $r91, $r95, $r97, $r99, $r112;
        java.text.MessageFormat $r40, $r42, $r49, $r51, $r93;
        javax.naming.NamingEnumeration r53, r111;
        java.util.HashMap $r54, r55, $r85, r86, $r87, r88;
        javax.naming.directory.SearchResult r57, r113;
        javax.naming.PartialResultException $r62, r63, $r126, r127;
        java.util.Set r66, $r89, $r116;
        java.util.Iterator r72, r90;
        java.util.Map$Entry r74, r92;
        java.util.Collection $r129;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: org.apache.catalina.realm.JNDIRealm$User;
        if r2 != null goto label0;

        return null;

     label0:
        r3 = virtualinvoke r2.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getDN()>();
        r4 = virtualinvoke r2.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getUserName()>();
        r5 = virtualinvoke r2.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getUserRoleId()>();
        if r3 == null goto label1;

        if r4 != null goto label2;

     label1:
        return null;

     label2:
        $r20 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z0 = interfaceinvoke $r20.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label3;

        $r21 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("  getRoles(");
        $r22 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r21.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r24);

     label3:
        $r25 = new java.util.ArrayList;
        specialinvoke $r25.<java.util.ArrayList: void <init>()>();
        r7 = $r25;
        r8 = virtualinvoke r2.<org.apache.catalina.realm.JNDIRealm$User: java.util.List getRoles()>();
        if r8 == null goto label4;

        interfaceinvoke r7.<java.util.List: boolean addAll(java.util.Collection)>(r8);

     label4:
        $r26 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String commonRole>;
        if $r26 == null goto label5;

        $r27 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String commonRole>;
        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r27);

     label5:
        $r28 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z3 = interfaceinvoke $r28.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z3 == 0 goto label8;

        $r29 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Found ");
        $i2 = interfaceinvoke r7.<java.util.List: int size()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user internal roles");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r29.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r33);
        i0 = 0;
        goto label7;

     label6:
        $r34 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r35 = new java.lang.StringBuilder;
        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Found user internal role ");
        $r36 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i0);
        $r37 = (java.lang.String) $r36;
        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r34.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r39);
        i0 = i0 + 1;

     label7:
        $i3 = interfaceinvoke r7.<java.util.List: int size()>();
        if i0 < $i3 goto label6;

     label8:
        $r40 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleFormat>;
        if $r40 == null goto label9;

        $r41 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleName>;
        if $r41 != null goto label10;

     label9:
        return r7;

     label10:
        $r42 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleFormat>;
        $r43 = newarray (java.lang.String)[3];
        $r44 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String doRFC2254Encoding(java.lang.String)>(r3);
        $r43[0] = $r44;
        $r43[1] = r4;
        $r43[2] = r5;
        r45 = virtualinvoke $r42.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r43);
        $r46 = new javax.naming.directory.SearchControls;
        specialinvoke $r46.<javax.naming.directory.SearchControls: void <init>()>();
        r9 = $r46;
        $z4 = r0.<org.apache.catalina.realm.JNDIRealm: boolean roleSubtree>;
        if $z4 == 0 goto label11;

        virtualinvoke r9.<javax.naming.directory.SearchControls: void setSearchScope(int)>(2);
        goto label12;

     label11:
        virtualinvoke r9.<javax.naming.directory.SearchControls: void setSearchScope(int)>(1);

     label12:
        $r47 = newarray (java.lang.String)[1];
        $r48 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleName>;
        $r47[0] = $r48;
        virtualinvoke r9.<javax.naming.directory.SearchControls: void setReturningAttributes(java.lang.String[])>($r47);
        n0 = null;
        $r49 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleBaseFormat>;
        if $r49 == null goto label15;

        r10 = interfaceinvoke r1.<javax.naming.directory.DirContext: javax.naming.NameParser getNameParser(java.lang.String)>("");
        r11 = interfaceinvoke r10.<javax.naming.NameParser: javax.naming.Name parse(java.lang.String)>(r3);
        $i4 = interfaceinvoke r11.<javax.naming.Name: int size()>();
        r12 = newarray (java.lang.String)[$i4];
        i1 = 0;
        goto label14;

     label13:
        $r50 = interfaceinvoke r11.<javax.naming.Name: java.lang.String get(int)>(i1);
        r12[i1] = $r50;
        i1 = i1 + 1;

     label14:
        $i5 = interfaceinvoke r11.<javax.naming.Name: int size()>();
        if i1 < $i5 goto label13;

        $r51 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleBaseFormat>;
        r52 = virtualinvoke $r51.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r12);
        goto label16;

     label15:
        r52 = "";

     label16:
        $z5 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: boolean isRoleSearchAsUser()>();
        r53 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.NamingEnumeration searchAsUser(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String,java.lang.String,javax.naming.directory.SearchControls,boolean)>(r1, r2, r52, r45, r9, $z5);
        if r53 != null goto label17;

        return r7;

     label17:
        $r54 = new java.util.HashMap;
        specialinvoke $r54.<java.util.HashMap: void <init>()>();
        r55 = $r54;

     label18:
        goto label21;

     label19:
        $r56 = interfaceinvoke r53.<javax.naming.NamingEnumeration: java.lang.Object next()>();
        r57 = (javax.naming.directory.SearchResult) $r56;
        r58 = virtualinvoke r57.<javax.naming.directory.SearchResult: javax.naming.directory.Attributes getAttributes()>();
        if r58 != null goto label20;

        goto label21;

     label20:
        $r59 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleBase>;
        r13 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String getDistinguishedName(javax.naming.directory.DirContext,java.lang.String,javax.naming.directory.SearchResult)>(r1, $r59, r57);
        $r60 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleName>;
        r14 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)>($r60, r58);
        if r14 == null goto label21;

        if r13 == null goto label21;

        virtualinvoke r55.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r14);

     label21:
        $z6 = interfaceinvoke r53.<javax.naming.NamingEnumeration: boolean hasMore()>();
        if $z6 != 0 goto label19;

     label22:
        goto label26;

     label23:
        $r62 := @caughtexception;
        r63 = $r62;
        $z7 = r0.<org.apache.catalina.realm.JNDIRealm: boolean adCompat>;
        if $z7 != 0 goto label24;

        throw r63;

     label24:
        interfaceinvoke r53.<javax.naming.NamingEnumeration: void close()>();
        goto label27;

     label25:
        $r64 := @caughtexception;
        r15 = $r64;
        interfaceinvoke r53.<javax.naming.NamingEnumeration: void close()>();
        throw r15;

     label26:
        interfaceinvoke r53.<javax.naming.NamingEnumeration: void close()>();

     label27:
        $r65 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z8 = interfaceinvoke $r65.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z8 == 0 goto label30;

        r66 = virtualinvoke r55.<java.util.HashMap: java.util.Set entrySet()>();
        $r67 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r68 = new java.lang.StringBuilder;
        specialinvoke $r68.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Found ");
        $i6 = interfaceinvoke r66.<java.util.Set: int size()>();
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" direct roles");
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r67.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r71);
        r72 = interfaceinvoke r66.<java.util.Set: java.util.Iterator iterator()>();
        goto label29;

     label28:
        $r73 = interfaceinvoke r72.<java.util.Iterator: java.lang.Object next()>();
        r74 = (java.util.Map$Entry) $r73;
        $r75 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r76 = new java.lang.StringBuilder;
        specialinvoke $r76.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Found direct role ");
        $r77 = interfaceinvoke r74.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r78 = (java.lang.String) $r77;
        $r79 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");
        $r81 = interfaceinvoke r74.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r82 = (java.lang.String) $r81;
        $r83 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r75.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r84);

     label29:
        $z9 = interfaceinvoke r72.<java.util.Iterator: boolean hasNext()>();
        if $z9 != 0 goto label28;

     label30:
        $z10 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: boolean getRoleNested()>();
        if $z10 == 0 goto label45;

        $r85 = new java.util.HashMap;
        specialinvoke $r85.<java.util.HashMap: void <init>(java.util.Map)>(r55);
        r86 = $r85;
        goto label44;

     label31:
        $r87 = new java.util.HashMap;
        specialinvoke $r87.<java.util.HashMap: void <init>()>();
        r88 = $r87;
        $r89 = interfaceinvoke r86.<java.util.Map: java.util.Set entrySet()>();
        r90 = interfaceinvoke $r89.<java.util.Set: java.util.Iterator iterator()>();
        goto label43;

     label32:
        $r91 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>();
        r92 = (java.util.Map$Entry) $r91;
        $r93 = r0.<org.apache.catalina.realm.JNDIRealm: java.text.MessageFormat roleFormat>;
        $r94 = newarray (java.lang.String)[3];
        $r95 = interfaceinvoke r92.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r96 = (java.lang.String) $r95;
        $r94[0] = $r96;
        $r97 = interfaceinvoke r92.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r98 = (java.lang.String) $r97;
        $r94[1] = $r98;
        $r99 = interfaceinvoke r92.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r100 = (java.lang.String) $r99;
        $r94[2] = $r100;
        r101 = virtualinvoke $r93.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r94);
        $r102 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z11 = interfaceinvoke $r102.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z11 == 0 goto label33;

        $r103 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r104 = new java.lang.StringBuilder;
        specialinvoke $r104.<java.lang.StringBuilder: void <init>(java.lang.String)>("Perform a nested group search with base ");
        $r105 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleBase>;
        $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);
        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and filter ");
        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r101);
        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r103.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r109);

     label33:
        $r110 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleBase>;
        $z12 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: boolean isRoleSearchAsUser()>();
        r111 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.NamingEnumeration searchAsUser(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String,java.lang.String,javax.naming.directory.SearchControls,boolean)>(r1, r2, $r110, r101, r9, $z12);

     label34:
        goto label37;

     label35:
        $r112 = interfaceinvoke r111.<javax.naming.NamingEnumeration: java.lang.Object next()>();
        r113 = (javax.naming.directory.SearchResult) $r112;
        r16 = virtualinvoke r113.<javax.naming.directory.SearchResult: javax.naming.directory.Attributes getAttributes()>();
        if r16 != null goto label36;

        goto label37;

     label36:
        $r114 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleBase>;
        r17 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String getDistinguishedName(javax.naming.directory.DirContext,java.lang.String,javax.naming.directory.SearchResult)>(r1, $r114, r113);
        $r115 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String roleName>;
        r18 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)>($r115, r16);
        if r18 == null goto label37;

        if r17 == null goto label37;

        $r116 = virtualinvoke r55.<java.util.HashMap: java.util.Set keySet()>();
        $z13 = interfaceinvoke $r116.<java.util.Set: boolean contains(java.lang.Object)>(r17);
        if $z13 != 0 goto label37;

        virtualinvoke r55.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, r18);
        interfaceinvoke r88.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, r18);
        $r119 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z14 = interfaceinvoke $r119.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z14 == 0 goto label37;

        $r120 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r121 = new java.lang.StringBuilder;
        specialinvoke $r121.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Found nested role ");
        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);
        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");
        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);
        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r120.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r125);

     label37:
        $z15 = interfaceinvoke r111.<javax.naming.NamingEnumeration: boolean hasMore()>();
        if $z15 != 0 goto label35;

     label38:
        goto label42;

     label39:
        $r126 := @caughtexception;
        r127 = $r126;
        $z16 = r0.<org.apache.catalina.realm.JNDIRealm: boolean adCompat>;
        if $z16 != 0 goto label40;

        throw r127;

     label40:
        interfaceinvoke r111.<javax.naming.NamingEnumeration: void close()>();
        goto label43;

     label41:
        $r128 := @caughtexception;
        r19 = $r128;
        interfaceinvoke r111.<javax.naming.NamingEnumeration: void close()>();
        throw r19;

     label42:
        interfaceinvoke r111.<javax.naming.NamingEnumeration: void close()>();

     label43:
        $z17 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>();
        if $z17 != 0 goto label32;

        r86 = r88;

     label44:
        $z18 = interfaceinvoke r86.<java.util.Map: boolean isEmpty()>();
        if $z18 == 0 goto label31;

     label45:
        $r129 = virtualinvoke r55.<java.util.HashMap: java.util.Collection values()>();
        interfaceinvoke r7.<java.util.List: boolean addAll(java.util.Collection)>($r129);
        return r7;

        catch javax.naming.PartialResultException from label18 to label22 with label23;
        catch java.lang.Throwable from label18 to label24 with label25;
        catch javax.naming.PartialResultException from label34 to label38 with label39;
        catch java.lang.Throwable from label34 to label40 with label41;
    }

    private javax.naming.NamingEnumeration searchAsUser(javax.naming.directory.DirContext, org.apache.catalina.realm.JNDIRealm$User, java.lang.String, java.lang.String, javax.naming.directory.SearchControls, boolean) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        org.apache.catalina.realm.JNDIRealm$User r2;
        java.lang.String r3, r4, $r8, $r9;
        javax.naming.directory.SearchControls r5;
        boolean z0;
        javax.naming.NamingEnumeration r6;
        java.lang.Throwable r7, $r10;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: org.apache.catalina.realm.JNDIRealm$User;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: javax.naming.directory.SearchControls;
        z0 := @parameter5: boolean;

     label0:
        if z0 == 0 goto label1;

        $r8 = virtualinvoke r2.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getDN()>();
        $r9 = virtualinvoke r2.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getPassword()>();
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsAdd(javax.naming.directory.DirContext,java.lang.String,java.lang.String)>(r1, $r8, $r9);

     label1:
        r6 = interfaceinvoke r1.<javax.naming.directory.DirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>(r3, r4, r5);
        goto label4;

     label2:
        $r10 := @caughtexception;
        r7 = $r10;
        if z0 == 0 goto label3;

        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsRemove(javax.naming.directory.DirContext)>(r1);

     label3:
        throw r7;

     label4:
        if z0 == 0 goto label5;

        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void userCredentialsRemove(javax.naming.directory.DirContext)>(r1);

     label5:
        return r6;

        catch java.lang.Throwable from label0 to label2 with label2;
    }

    private java.lang.String getAttributeValue(java.lang.String, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, $r9, $r10, r12;
        javax.naming.directory.Attributes r2;
        java.lang.StringBuilder $r3, $r8;
        javax.naming.directory.Attribute r4;
        java.lang.Object r5;
        null_type n0;
        org.apache.juli.logging.Log $r6, $r7;
        boolean $z0, $z1;
        byte[] $r11;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.naming.directory.Attributes;
        $r6 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z0 = interfaceinvoke $r6.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label0;

        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("  retrieving attribute ");
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r9);

     label0:
        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return null;

     label2:
        r4 = interfaceinvoke r2.<javax.naming.directory.Attributes: javax.naming.directory.Attribute get(java.lang.String)>(r1);
        if r4 != null goto label3;

        return null;

     label3:
        r5 = interfaceinvoke r4.<javax.naming.directory.Attribute: java.lang.Object get()>();
        if r5 != null goto label4;

        return null;

     label4:
        n0 = null;
        $z1 = r5 instanceof byte[];
        if $z1 == 0 goto label5;

        $r10 = new java.lang.String;
        $r11 = (byte[]) r5;
        specialinvoke $r10.<java.lang.String: void <init>(byte[])>($r11);
        r12 = $r10;
        goto label6;

     label5:
        r12 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

     label6:
        return r12;
    }

    private java.util.ArrayList addAttributeValues(java.lang.String, javax.naming.directory.Attributes, java.util.ArrayList) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, r7, $r12;
        javax.naming.directory.Attributes r2;
        java.util.ArrayList r3, $r13;
        java.lang.StringBuilder $r4, $r11;
        javax.naming.directory.Attribute r5;
        javax.naming.NamingEnumeration r6;
        java.lang.Throwable r8, $r17;
        org.apache.juli.logging.Log $r9, $r10;
        boolean $z0, $z2, $z3;
        java.lang.Object $r14;
        javax.naming.PartialResultException $r15, r16;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.naming.directory.Attributes;
        r3 := @parameter2: java.util.ArrayList;
        $r9 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z0 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label0;

        $r10 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("  retrieving values for attribute ");
        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r12);

     label0:
        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return r3;

     label2:
        if r3 != null goto label3;

        $r13 = new java.util.ArrayList;
        specialinvoke $r13.<java.util.ArrayList: void <init>()>();
        r3 = $r13;

     label3:
        r5 = interfaceinvoke r2.<javax.naming.directory.Attributes: javax.naming.directory.Attribute get(java.lang.String)>(r1);
        if r5 != null goto label4;

        return r3;

     label4:
        r6 = interfaceinvoke r5.<javax.naming.directory.Attribute: javax.naming.NamingEnumeration getAll()>();

     label5:
        goto label7;

     label6:
        $r14 = interfaceinvoke r6.<javax.naming.NamingEnumeration: java.lang.Object next()>();
        r7 = (java.lang.String) $r14;
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label7:
        $z2 = interfaceinvoke r6.<javax.naming.NamingEnumeration: boolean hasMore()>();
        if $z2 != 0 goto label6;

     label8:
        goto label12;

     label9:
        $r15 := @caughtexception;
        r16 = $r15;
        $z3 = r0.<org.apache.catalina.realm.JNDIRealm: boolean adCompat>;
        if $z3 != 0 goto label10;

        throw r16;

     label10:
        interfaceinvoke r6.<javax.naming.NamingEnumeration: void close()>();
        goto label13;

     label11:
        $r17 := @caughtexception;
        r8 = $r17;
        interfaceinvoke r6.<javax.naming.NamingEnumeration: void close()>();
        throw r8;

     label12:
        interfaceinvoke r6.<javax.naming.NamingEnumeration: void close()>();

     label13:
        return r3;

        catch javax.naming.PartialResultException from label5 to label8 with label9;
        catch java.lang.Throwable from label5 to label10 with label11;
    }

    protected void close(javax.naming.directory.DirContext)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.io.IOException r2, $r6;
        org.apache.tomcat.util.res.StringManager $r3, $r14;
        javax.naming.ldap.StartTlsResponse $r4, $r5;
        org.apache.juli.logging.Log $r7, $r9, $r10, $r13;
        java.lang.String $r8, $r15;
        boolean $z0;
        javax.naming.NamingException $r11, r12;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        if r1 != null goto label0;

        return;

     label0:
        $r4 = r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.ldap.StartTlsResponse tls>;
        if $r4 == null goto label4;

     label1:
        $r5 = r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.ldap.StartTlsResponse tls>;
        virtualinvoke $r5.<javax.naming.ldap.StartTlsResponse: void close()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r3 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.tlsClose");
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r8, r2);

     label4:
        $r9 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z0 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label5;

        $r10 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Closing directory context");

     label5:
        interfaceinvoke r1.<javax.naming.directory.DirContext: void close()>();

     label6:
        goto label8;

     label7:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r14 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r15 = virtualinvoke $r14.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.close");
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r15, r12);

     label8:
        r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext context> = null;
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch javax.naming.NamingException from label4 to label6 with label7;
    }

    protected java.lang.String getName()
    {
        org.apache.catalina.realm.JNDIRealm r0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        return "JNDIRealm";
    }

    protected java.lang.String getPassword(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, r2, $r5;
        org.apache.catalina.realm.JNDIRealm$User r3;
        boolean $z0;
        javax.naming.directory.DirContext $r4;
        javax.naming.NamingException $r6, r7;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String getUserPassword()>();
        if r2 == null goto label0;

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();
        if $z0 == 0 goto label1;

     label0:
        return null;

     label1:
        $r4 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext open()>();
        r3 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String,java.lang.String)>($r4, r1, null);
        if r3 != null goto label3;

     label2:
        return null;

     label3:
        $r5 = virtualinvoke r3.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getPassword()>();

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;
        r7 = $r6;
        return null;

        catch javax.naming.NamingException from label1 to label2 with label5;
        catch javax.naming.NamingException from label3 to label4 with label5;
    }

    protected java.security.Principal getPrincipal(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1;
        java.security.Principal $r2;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.security.Principal getPrincipal(java.lang.String,org.ietf.jgss.GSSCredential)>(r1, null);
        return $r2;
    }

    protected java.security.Principal getPrincipal(java.lang.String, org.ietf.jgss.GSSCredential)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, $r9, $r14, $r20;
        org.ietf.jgss.GSSCredential r2;
        javax.naming.directory.DirContext r3;
        null_type n0;
        javax.naming.CommunicationException r4, $r6;
        java.security.Principal r5;
        org.apache.juli.logging.Log $r7, $r12, $r18;
        org.apache.tomcat.util.res.StringManager $r8, $r13, $r19;
        javax.naming.ServiceUnavailableException $r10, r11;
        javax.naming.NamingException $r16, r17;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.ietf.jgss.GSSCredential;
        r3 = null;
        n0 = null;

     label0:
        r3 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext open()>();

     label1:
        r5 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.security.Principal getPrincipal(javax.naming.directory.DirContext,java.lang.String,org.ietf.jgss.GSSCredential)>(r3, r1, r2);

     label2:
        goto label7;

     label3:
        $r6 := @caughtexception;
        r4 = $r6;
        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r8 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.exception.retry");
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r9, r4);
        if r3 == null goto label4;

        virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: void close(javax.naming.directory.DirContext)>(r3);

     label4:
        r3 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext open()>();
        r5 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.security.Principal getPrincipal(javax.naming.directory.DirContext,java.lang.String,org.ietf.jgss.GSSCredential)>(r3, r1, r2);
        goto label7;

     label5:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r13 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = virtualinvoke $r13.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.exception.retry");
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r14, r11);
        if r3 == null goto label6;

        virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: void close(javax.naming.directory.DirContext)>(r3);

     label6:
        r3 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext open()>();
        r5 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.security.Principal getPrincipal(javax.naming.directory.DirContext,java.lang.String,org.ietf.jgss.GSSCredential)>(r3, r1, r2);

     label7:
        virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: void release(javax.naming.directory.DirContext)>(r3);

     label8:
        return r5;

     label9:
        $r16 := @caughtexception;
        r17 = $r16;
        $r18 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r19 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.exception");
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r20, r17);
        if r3 == null goto label10;

        virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: void close(javax.naming.directory.DirContext)>(r3);

     label10:
        return null;

        catch javax.naming.CommunicationException from label1 to label2 with label3;
        catch javax.naming.ServiceUnavailableException from label1 to label2 with label5;
        catch javax.naming.NamingException from label0 to label8 with label9;
    }

    protected synchronized java.security.Principal getPrincipal(javax.naming.directory.DirContext, java.lang.String, org.ietf.jgss.GSSCredential) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2, $r9, $r14, $r15;
        org.ietf.jgss.GSSCredential r3;
        null_type n0;
        java.util.List r4;
        java.util.Hashtable r5;
        java.lang.Throwable r6, $r12;
        boolean $z0;
        org.apache.catalina.realm.JNDIRealm$User r11;
        org.apache.catalina.realm.GenericPrincipal $r13;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.ietf.jgss.GSSCredential;
        n0 = null;
        r4 = null;
        r5 = null;

     label0:
        if r3 == null goto label1;

        $z0 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: boolean isUseDelegatedCredential()>();
        if $z0 == 0 goto label1;

        r5 = interfaceinvoke r1.<javax.naming.directory.DirContext: java.util.Hashtable getEnvironment()>();
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>("java.naming.security.authentication", "GSSAPI");
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>("javax.security.sasl.server.authentication", "true");
        $r9 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String spnegoDelegationQop>;
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>("javax.security.sasl.qop", $r9);

     label1:
        r11 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String)>(r1, r2);
        if r11 == null goto label3;

        r4 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.util.List getRoles(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User)>(r1, r11);
        goto label3;

     label2:
        $r12 := @caughtexception;
        r6 = $r12;
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void restoreEnvironmentParameter(javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)>(r1, "java.naming.security.authentication", r5);
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void restoreEnvironmentParameter(javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)>(r1, "javax.security.sasl.server.authentication", r5);
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void restoreEnvironmentParameter(javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)>(r1, "javax.security.sasl.qop", r5);
        throw r6;

     label3:
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void restoreEnvironmentParameter(javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)>(r1, "java.naming.security.authentication", r5);
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void restoreEnvironmentParameter(javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)>(r1, "javax.security.sasl.server.authentication", r5);
        specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: void restoreEnvironmentParameter(javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)>(r1, "javax.security.sasl.qop", r5);
        if r11 == null goto label4;

        $r13 = new org.apache.catalina.realm.GenericPrincipal;
        $r14 = virtualinvoke r11.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getUserName()>();
        $r15 = virtualinvoke r11.<org.apache.catalina.realm.JNDIRealm$User: java.lang.String getPassword()>();
        specialinvoke $r13.<org.apache.catalina.realm.GenericPrincipal: void <init>(java.lang.String,java.lang.String,java.util.List,java.security.Principal,javax.security.auth.login.LoginContext,org.ietf.jgss.GSSCredential)>($r14, $r15, r4, null, null, r3);
        return $r13;

     label4:
        return null;

        catch java.lang.Throwable from label0 to label2 with label2;
    }

    private void restoreEnvironmentParameter(javax.naming.directory.DirContext, java.lang.String, java.util.Hashtable)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2;
        java.util.Hashtable r3;
        javax.naming.NamingException r4, $r8;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.util.Hashtable;

     label0:
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object removeFromEnvironment(java.lang.String)>(r2);
        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r2);
        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);
        interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>(r2, $r6);

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r4 = $r8;

     label3:
        return;

        catch javax.naming.NamingException from label0 to label1 with label2;
    }

    protected javax.naming.directory.DirContext open() throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.Exception r1, $r7;
        java.lang.Throwable r2, $r13;
        javax.naming.directory.DirContext $r3, $r4, $r6, $r12, $r14;
        java.util.Hashtable $r5, $r11;
        org.apache.juli.logging.Log $r8;
        org.apache.tomcat.util.res.StringManager $r9;
        java.lang.String $r10;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r3 = r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext context>;
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext context>;
        return $r4;

     label0:
        $r5 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.util.Hashtable getDirectoryContextEnvironment()>();
        $r6 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext createDirContext(java.util.Hashtable)>($r5);
        r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext context> = $r6;

     label1:
        goto label5;

     label2:
        $r7 := @caughtexception;
        r1 = $r7;
        r0.<org.apache.catalina.realm.JNDIRealm: int connectionAttempt> = 1;
        $r8 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r9 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = virtualinvoke $r9.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.exception.retry");
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r10, r1);
        $r11 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.util.Hashtable getDirectoryContextEnvironment()>();
        $r12 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext createDirContext(java.util.Hashtable)>($r11);
        r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext context> = $r12;

     label3:
        r0.<org.apache.catalina.realm.JNDIRealm: int connectionAttempt> = 0;
        goto label6;

     label4:
        $r13 := @caughtexception;
        r2 = $r13;
        r0.<org.apache.catalina.realm.JNDIRealm: int connectionAttempt> = 0;
        throw r2;

     label5:
        r0.<org.apache.catalina.realm.JNDIRealm: int connectionAttempt> = 0;

     label6:
        $r14 = r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext context>;
        return $r14;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.lang.Throwable from label0 to label3 with label4;
    }

    private javax.naming.directory.DirContext createDirContext(java.util.Hashtable) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.util.Hashtable r1;
        boolean $z0;
        javax.naming.directory.DirContext $r2;
        javax.naming.directory.InitialDirContext $r3;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.util.Hashtable;
        $z0 = r0.<org.apache.catalina.realm.JNDIRealm: boolean useStartTls>;
        if $z0 == 0 goto label0;

        $r2 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext createTlsDirContext(java.util.Hashtable)>(r1);
        return $r2;

     label0:
        $r3 = new javax.naming.directory.InitialDirContext;
        specialinvoke $r3.<javax.naming.directory.InitialDirContext: void <init>(java.util.Hashtable)>(r1);
        return $r3;
    }

    private javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.net.ssl.SSLSocketFactory r1, $r2, $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r2 = r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.SSLSocketFactory sslSocketFactory>;
        if $r2 == null goto label0;

        $r3 = r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.SSLSocketFactory sslSocketFactory>;
        return $r3;

     label0:
        $r4 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String sslSocketFactoryClassName>;
        if $r4 == null goto label1;

        $r5 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String sslSocketFactoryClassName>;
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 != 0 goto label1;

        $r7 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String sslSocketFactoryClassName>;
        r1 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.SSLSocketFactory createSSLSocketFactoryFromClassName(java.lang.String)>($r7);
        goto label2;

     label1:
        $r8 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String sslProtocol>;
        r1 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.SSLSocketFactory createSSLContextFactoryFromProtocol(java.lang.String)>($r8);

     label2:
        r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.SSLSocketFactory sslSocketFactory> = r1;
        return r1;
    }

    private javax.net.ssl.SSLSocketFactory createSSLSocketFactoryFromClassName(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, $r7, $r13, $r19, $r25, $r31;
        java.lang.Object r2;
        org.apache.tomcat.util.res.StringManager $r3, $r11, $r17, $r23, $r29;
        boolean $z0;
        javax.net.ssl.SSLSocketFactory $r4;
        java.lang.IllegalArgumentException $r5, $r10, $r16, $r22, $r28;
        java.lang.Object[] $r6, $r12, $r18, $r24, $r30;
        java.lang.ClassNotFoundException $r8, r9;
        java.lang.SecurityException $r14, r15;
        java.lang.InstantiationException $r20, r21;
        java.lang.IllegalAccessException $r26, r27;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;

     label0:
        r2 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.Object constructInstance(java.lang.String)>(r1);
        $z0 = r2 instanceof javax.net.ssl.SSLSocketFactory;
        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

     label1:
        return $r4;

     label2:
        $r5 = new java.lang.IllegalArgumentException;
        $r3 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = newarray (java.lang.Object)[1];
        $r6[0] = r1;
        $r7 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidSslSocketFactory", $r6);
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);
        throw $r5;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.IllegalArgumentException;
        $r11 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = newarray (java.lang.Object)[1];
        $r12[0] = r1;
        $r13 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidSslSocketFactory", $r12);
        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r9);
        throw $r10;

     label4:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = new java.lang.IllegalArgumentException;
        $r17 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r18 = newarray (java.lang.Object)[1];
        $r18[0] = r1;
        $r19 = virtualinvoke $r17.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidSslSocketFactory", $r18);
        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r19, r15);
        throw $r16;

     label5:
        $r20 := @caughtexception;
        r21 = $r20;
        $r22 = new java.lang.IllegalArgumentException;
        $r23 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r24 = newarray (java.lang.Object)[1];
        $r24[0] = r1;
        $r25 = virtualinvoke $r23.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidSslSocketFactory", $r24);
        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r25, r21);
        throw $r22;

     label6:
        $r26 := @caughtexception;
        r27 = $r26;
        $r28 = new java.lang.IllegalArgumentException;
        $r29 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r30 = newarray (java.lang.Object)[1];
        $r30[0] = r1;
        $r31 = virtualinvoke $r29.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidSslSocketFactory", $r30);
        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r31, r27);
        throw $r28;

        catch java.lang.ClassNotFoundException from label0 to label1 with label3;
        catch java.lang.ClassNotFoundException from label2 to label3 with label3;
        catch java.lang.SecurityException from label0 to label1 with label4;
        catch java.lang.SecurityException from label2 to label3 with label4;
        catch java.lang.InstantiationException from label0 to label1 with label5;
        catch java.lang.InstantiationException from label2 to label3 with label5;
        catch java.lang.IllegalAccessException from label0 to label1 with label6;
        catch java.lang.IllegalAccessException from label2 to label3 with label6;
    }

    private javax.net.ssl.SSLSocketFactory createSSLContextFactoryFromProtocol(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, $r11, $r19;
        javax.net.ssl.SSLContext r2;
        java.util.List r3, r15;
        javax.net.ssl.SSLSocketFactory $r4;
        java.security.NoSuchAlgorithmException $r5, r6;
        java.lang.String[] $r7, $r14;
        java.lang.IllegalArgumentException $r8, $r16;
        org.apache.tomcat.util.res.StringManager $r9, $r17;
        java.lang.Object[] $r10, $r18;
        java.security.KeyManagementException $r12, r13;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;

     label0:
        if r1 == null goto label1;

        r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1);
        virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, null, null);
        goto label2;

     label1:
        r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>();

     label2:
        $r4 = virtualinvoke r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;
        r6 = $r5;
        $r7 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] getSupportedSslProtocols()>();
        r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);
        $r8 = new java.lang.IllegalArgumentException;
        $r9 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = newarray (java.lang.Object)[2];
        $r10[0] = r1;
        $r10[1] = r3;
        $r11 = virtualinvoke $r9.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidSslProtocol", $r10);
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r6);
        throw $r8;

     label5:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] getSupportedSslProtocols()>();
        r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14);
        $r16 = new java.lang.IllegalArgumentException;
        $r17 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r18 = newarray (java.lang.Object)[2];
        $r18[0] = r1;
        $r18[1] = r15;
        $r19 = virtualinvoke $r17.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.invalidSslProtocol", $r18);
        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r19, r13);
        throw $r16;

        catch java.security.NoSuchAlgorithmException from label0 to label3 with label4;
        catch java.security.KeyManagementException from label0 to label3 with label5;
    }

    private javax.naming.directory.DirContext createTlsDirContext(java.util.Hashtable) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.util.Hashtable r1;
        java.util.HashMap $r2, r3;
        java.util.Iterator r4, r7, r45;
        java.lang.String r5, $r30, $r31, $r35, $r41, $r49;
        java.lang.Object r6, $r11, $r39, $r40, $r42, $r46, $r48, $r50;
        java.util.Map$Entry r8, r47;
        java.lang.String[] $r9, $r21, $r23;
        java.util.List $r10;
        boolean $z0, $z1, $z2;
        javax.naming.ldap.InitialLdapContext r13, $r14;
        javax.naming.ldap.StartTlsRequest $r15;
        javax.naming.ldap.ExtendedResponse $r16;
        javax.naming.ldap.StartTlsResponse $r17, $r19, $r22, $r24;
        javax.net.ssl.HostnameVerifier $r18, $r20;
        javax.net.ssl.SSLSocketFactory $r25;
        javax.net.ssl.SSLSession r26;
        org.apache.juli.logging.Log $r27;
        org.apache.tomcat.util.res.StringManager $r28;
        java.lang.Object[] $r29;
        java.io.IOException $r32, r33;
        javax.naming.NamingException $r34;
        java.lang.Throwable $r36, r37;
        java.util.Set $r38, $r44;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.util.Hashtable;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        r3 = $r2;
        $r9 = newarray (java.lang.String)[4];
        $r9[0] = "java.naming.security.authentication";
        $r9[1] = "java.naming.security.credentials";
        $r9[2] = "java.naming.security.principal";
        $r9[3] = "java.naming.security.protocol";
        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);
        r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.lang.String) $r11;
        r6 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r5);
        if r6 == null goto label1;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        r13 = null;

     label2:
        $r14 = new javax.naming.ldap.InitialLdapContext;
        specialinvoke $r14.<javax.naming.ldap.InitialLdapContext: void <init>(java.util.Hashtable,javax.naming.ldap.Control[])>(r1, null);
        r13 = $r14;
        $r15 = new javax.naming.ldap.StartTlsRequest;
        specialinvoke $r15.<javax.naming.ldap.StartTlsRequest: void <init>()>();
        $r16 = interfaceinvoke r13.<javax.naming.ldap.LdapContext: javax.naming.ldap.ExtendedResponse extendedOperation(javax.naming.ldap.ExtendedRequest)>($r15);
        $r17 = (javax.naming.ldap.StartTlsResponse) $r16;
        r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.ldap.StartTlsResponse tls> = $r17;
        $r18 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.HostnameVerifier getHostnameVerifier()>();
        if $r18 == null goto label3;

        $r19 = r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.ldap.StartTlsResponse tls>;
        $r20 = virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.HostnameVerifier getHostnameVerifier()>();
        virtualinvoke $r19.<javax.naming.ldap.StartTlsResponse: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r20);

     label3:
        $r21 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] getCipherSuitesArray()>();
        if $r21 == null goto label4;

        $r22 = r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.ldap.StartTlsResponse tls>;
        $r23 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String[] getCipherSuitesArray()>();
        virtualinvoke $r22.<javax.naming.ldap.StartTlsResponse: void setEnabledCipherSuites(java.lang.String[])>($r23);

     label4:
        $r24 = r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.ldap.StartTlsResponse tls>;
        $r25 = specialinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()>();
        r26 = virtualinvoke $r24.<javax.naming.ldap.StartTlsResponse: javax.net.ssl.SSLSession negotiate(javax.net.ssl.SSLSocketFactory)>($r25);
        $r27 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r28 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r29 = newarray (java.lang.Object)[1];
        $r30 = interfaceinvoke r26.<javax.net.ssl.SSLSession: java.lang.String getProtocol()>();
        $r29[0] = $r30;
        $r31 = virtualinvoke $r28.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jndiRealm.negotiatedTls", $r29);
        interfaceinvoke $r27.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r31);

     label5:
        goto label11;

     label6:
        $r32 := @caughtexception;
        r33 = $r32;
        $r34 = new javax.naming.NamingException;
        $r35 = virtualinvoke r33.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r34.<javax.naming.NamingException: void <init>(java.lang.String)>($r35);
        throw $r34;

     label7:
        $r36 := @caughtexception;
        r37 = $r36;
        if r13 == null goto label10;

        $r38 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();
        r7 = interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>();
        goto label9;

     label8:
        $r39 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        r8 = (java.util.Map$Entry) $r39;
        $r40 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r41 = (java.lang.String) $r40;
        $r42 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();
        interfaceinvoke r13.<javax.naming.ldap.LdapContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>($r41, $r42);

     label9:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label8;

     label10:
        throw r37;

     label11:
        if r13 == null goto label14;

        $r44 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();
        r45 = interfaceinvoke $r44.<java.util.Set: java.util.Iterator iterator()>();
        goto label13;

     label12:
        $r46 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();
        r47 = (java.util.Map$Entry) $r46;
        $r48 = interfaceinvoke r47.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r49 = (java.lang.String) $r48;
        $r50 = interfaceinvoke r47.<java.util.Map$Entry: java.lang.Object getValue()>();
        interfaceinvoke r13.<javax.naming.ldap.LdapContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>($r49, $r50);

     label13:
        $z2 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label12;

     label14:
        return r13;

        catch java.io.IOException from label4 to label5 with label6;
        catch java.lang.Throwable from label2 to label7 with label7;
    }

    protected java.util.Hashtable getDirectoryContextEnvironment()
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.util.Hashtable $r1, r2;
        org.apache.juli.logging.Log $r3, $r4, $r9, $r10;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r5, $r7, $r11, $r13;
        java.lang.String $r6, $r8, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r44, $r45;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        $r1 = new java.util.Hashtable;
        specialinvoke $r1.<java.util.Hashtable: void <init>()>();
        r2 = $r1;
        $r3 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $i0 = r0.<org.apache.catalina.realm.JNDIRealm: int connectionAttempt>;
        if $i0 != 0 goto label0;

        $r4 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Connecting to URL ");
        $r6 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionURL>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r8);
        goto label1;

     label0:
        $r9 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z1 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label1;

        $i1 = r0.<org.apache.catalina.realm.JNDIRealm: int connectionAttempt>;
        if $i1 <= 0 goto label1;

        $r10 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Connecting to URL ");
        $r12 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String alternateURL>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r14);

     label1:
        $r15 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String contextFactory>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", $r15);
        $r17 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionName>;
        if $r17 == null goto label2;

        $r18 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionName>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", $r18);

     label2:
        $r20 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionPassword>;
        if $r20 == null goto label3;

        $r21 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionPassword>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", $r21);

     label3:
        $r23 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionURL>;
        if $r23 == null goto label4;

        $i2 = r0.<org.apache.catalina.realm.JNDIRealm: int connectionAttempt>;
        if $i2 != 0 goto label4;

        $r24 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionURL>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r24);
        goto label5;

     label4:
        $r26 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String alternateURL>;
        if $r26 == null goto label5;

        $i3 = r0.<org.apache.catalina.realm.JNDIRealm: int connectionAttempt>;
        if $i3 <= 0 goto label5;

        $r27 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String alternateURL>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r27);

     label5:
        $r29 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String authentication>;
        if $r29 == null goto label6;

        $r30 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String authentication>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.authentication", $r30);

     label6:
        $r32 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String protocol>;
        if $r32 == null goto label7;

        $r33 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String protocol>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.protocol", $r33);

     label7:
        $r35 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String referrals>;
        if $r35 == null goto label8;

        $r36 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String referrals>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.referral", $r36);

     label8:
        $r38 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String derefAliases>;
        if $r38 == null goto label9;

        $r39 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String derefAliases>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.ldap.derefAliases", $r39);

     label9:
        $r41 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionTimeout>;
        if $r41 == null goto label10;

        $r42 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String connectionTimeout>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.sun.jndi.ldap.connect.timeout", $r42);

     label10:
        $r44 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String readTimeout>;
        if $r44 == null goto label11;

        $r45 = r0.<org.apache.catalina.realm.JNDIRealm: java.lang.String readTimeout>;
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.sun.jndi.ldap.read.timeout", $r45);

     label11:
        return r2;
    }

    protected void release(javax.naming.directory.DirContext)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        return;
    }

    protected void startInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.NamingException r1, $r4;
        org.apache.tomcat.util.res.StringManager $r2;
        org.apache.juli.logging.Log $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;

     label0:
        virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext open()>();

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r2 = <org.apache.catalina.realm.JNDIRealm: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jndiRealm.open");
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r6, r1);

     label3:
        specialinvoke r0.<org.apache.catalina.realm.RealmBase: void startInternal()>();
        return;

        catch javax.naming.NamingException from label0 to label1 with label2;
    }

    protected void stopInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext $r1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        specialinvoke r0.<org.apache.catalina.realm.RealmBase: void stopInternal()>();
        $r1 = r0.<org.apache.catalina.realm.JNDIRealm: javax.naming.directory.DirContext context>;
        virtualinvoke r0.<org.apache.catalina.realm.JNDIRealm: void close(javax.naming.directory.DirContext)>($r1);
        return;
    }

    protected java.lang.String[] parseUserPatternString(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, r3;
        java.util.ArrayList r2, $r4;
        int i0, $i1, $i2, $i4, $i6, i7, $i8, $i9, $i11, i12;
        boolean z0, z1;
        java.lang.String[] $r5, $r6, $r8;
        char $c3, $c5, $c10;
        java.lang.Object[] $r7;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label8;

        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r2 = $r4;
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(40);
        if i0 != -1 goto label0;

        $r5 = newarray (java.lang.String)[1];
        $r5[0] = r1;
        return $r5;

     label0:
        z0 = 0;
        goto label7;

     label1:
        z1 = 0;
        goto label3;

     label2:
        $i1 = i0 + 1;
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(40, $i1);

     label3:
        $i2 = i0 + 1;
        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);
        if $c3 == 124 goto label2;

        if i0 == 0 goto label4;

        $i4 = i0 - 1;
        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);
        if $c5 == 92 goto label2;

     label4:
        $i6 = i0 + 1;
        i7 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(41, $i6);
        goto label6;

     label5:
        $i8 = i7 + 1;
        i7 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(41, $i8);

     label6:
        $i9 = i7 - 1;
        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);
        if $c10 == 92 goto label5;

        $i11 = i0 + 1;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i11, i7);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);
        i12 = i7 + 1;
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(40, i12);

     label7:
        if i0 > -1 goto label1;

        $r6 = newarray (java.lang.String)[0];
        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);
        $r8 = (java.lang.String[]) $r7;
        return $r8;

     label8:
        return null;
    }

    protected java.lang.String doRFC2254Encoding(java.lang.String)
    {
        org.apache.catalina.realm.JNDIRealm r0;
        java.lang.String r1, $r10;
        java.lang.StringBuilder $r2, r3;
        int i0, $i2, $i3;
        char c1;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.lang.StringBuilder;
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);
        r3 = $r2;
        i0 = 0;
        goto label8;

     label0:
        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
        lookupswitch(c1)
        {
            case 0: goto label5;
            case 40: goto label3;
            case 41: goto label4;
            case 42: goto label2;
            case 92: goto label1;
            default: goto label6;
        };

     label1:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\5c");
        goto label7;

     label2:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\2a");
        goto label7;

     label3:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\28");
        goto label7;

     label4:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\29");
        goto label7;

     label5:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\00");
        goto label7;

     label6:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label7:
        i0 = i0 + 1;

     label8:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();
        if i0 < $i3 goto label0;

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r10;
    }

    protected java.lang.String getDistinguishedName(javax.naming.directory.DirContext, java.lang.String, javax.naming.directory.SearchResult) throws javax.naming.NamingException
    {
        org.apache.catalina.realm.JNDIRealm r0;
        javax.naming.directory.DirContext r1;
        java.lang.String r2, $r12, $r14, $r15, $r17, $r18, $r20, r21, $r25, $r27, r31, $r35, $r36, $r38, $r44;
        javax.naming.directory.SearchResult r3;
        java.lang.StringBuilder $r4, $r13, $r24, $r26, $r33, $r34, $r42, $r43;
        javax.naming.NameParser r5, r28;
        javax.naming.Name r6, r7, r8, r9, r19, r37;
        boolean $z0, $z1, $z2;
        org.apache.juli.logging.Log $r10, $r11, $r22, $r23;
        javax.naming.CompositeName $r16;
        java.net.URI $r29, r30;
        int $i0;
        javax.naming.InvalidNameException $r32, $r41;
        java.net.URISyntaxException $r39, r40;

        r0 := @this: org.apache.catalina.realm.JNDIRealm;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: javax.naming.directory.SearchResult;
        $z0 = virtualinvoke r3.<javax.naming.directory.SearchResult: boolean isRelative()>();
        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z1 = interfaceinvoke $r10.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z1 == 0 goto label0;

        $r11 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("  search returned relative name: ");
        $r12 = virtualinvoke r3.<javax.naming.directory.SearchResult: java.lang.String getName()>();
        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r14);

     label0:
        r5 = interfaceinvoke r1.<javax.naming.directory.DirContext: javax.naming.NameParser getNameParser(java.lang.String)>("");
        $r15 = interfaceinvoke r1.<javax.naming.directory.DirContext: java.lang.String getNameInNamespace()>();
        r6 = interfaceinvoke r5.<javax.naming.NameParser: javax.naming.Name parse(java.lang.String)>($r15);
        r7 = interfaceinvoke r5.<javax.naming.NameParser: javax.naming.Name parse(java.lang.String)>(r2);
        $r16 = new javax.naming.CompositeName;
        $r17 = virtualinvoke r3.<javax.naming.directory.SearchResult: java.lang.String getName()>();
        specialinvoke $r16.<javax.naming.CompositeName: void <init>(java.lang.String)>($r17);
        $r18 = virtualinvoke $r16.<javax.naming.CompositeName: java.lang.String get(int)>(0);
        r8 = interfaceinvoke r5.<javax.naming.NameParser: javax.naming.Name parse(java.lang.String)>($r18);
        r9 = interfaceinvoke r6.<javax.naming.Name: javax.naming.Name addAll(javax.naming.Name)>(r7);
        r19 = interfaceinvoke r9.<javax.naming.Name: javax.naming.Name addAll(javax.naming.Name)>(r8);
        $r20 = virtualinvoke r19.<java.lang.Object: java.lang.String toString()>();
        return $r20;

     label1:
        r21 = virtualinvoke r3.<javax.naming.directory.SearchResult: java.lang.String getName()>();
        $r22 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $z2 = interfaceinvoke $r22.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z2 == 0 goto label2;

        $r23 = r0.<org.apache.catalina.realm.JNDIRealm: org.apache.juli.logging.Log containerLog>;
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("  search returned absolute name: ");
        $r25 = virtualinvoke r3.<javax.naming.directory.SearchResult: java.lang.String getName()>();
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r23.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r27);

     label2:
        r28 = interfaceinvoke r1.<javax.naming.directory.DirContext: javax.naming.NameParser getNameParser(java.lang.String)>("");
        $r29 = new java.net.URI;
        specialinvoke $r29.<java.net.URI: void <init>(java.lang.String)>(r21);
        r30 = $r29;
        r31 = virtualinvoke r30.<java.net.URI: java.lang.String getPath()>();
        $i0 = virtualinvoke r31.<java.lang.String: int length()>();
        if $i0 >= 1 goto label3;

        $r32 = new javax.naming.InvalidNameException;
        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>("Search returned unparseable absolute name: ");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r32.<javax.naming.InvalidNameException: void <init>(java.lang.String)>($r35);
        throw $r32;

     label3:
        $r36 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int)>(1);
        r37 = interfaceinvoke r28.<javax.naming.NameParser: javax.naming.Name parse(java.lang.String)>($r36);
        $r38 = virtualinvoke r37.<java.lang.Object: java.lang.String toString()>();

     label4:
        return $r38;

     label5:
        $r39 := @caughtexception;
        r40 = $r39;
        $r41 = new javax.naming.InvalidNameException;
        $r42 = new java.lang.StringBuilder;
        specialinvoke $r42.<java.lang.StringBuilder: void <init>(java.lang.String)>("Search returned unparseable absolute name: ");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r41.<javax.naming.InvalidNameException: void <init>(java.lang.String)>($r44);
        throw $r41;

        catch java.net.URISyntaxException from label2 to label4 with label5;
    }
}
