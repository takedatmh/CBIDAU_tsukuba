final class org.apache.tomcat.util.http.fileupload.util.mime.QuotedPrintableDecoder extends java.lang.Object
{
    private static final int UPPER_NIBBLE_SHIFT;

    private void <init>()
    {
        org.apache.tomcat.util.http.fileupload.util.mime.QuotedPrintableDecoder r0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.util.mime.QuotedPrintableDecoder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static int decode(byte[], java.io.OutputStream) throws java.io.IOException
    {
        byte[] r0;
        java.io.OutputStream r1;
        int i0, i1, i2, i3, i7, i8, $i9, $i10, i11, $i12, $i13;
        byte b4, b5, b6;
        java.io.IOException $r2, $r3;

        r0 := @parameter0: byte[];
        r1 := @parameter1: java.io.OutputStream;
        i0 = 0;
        i1 = lengthof r0;
        i2 = i0 + i1;
        i3 = 0;
        goto label5;

     label0:
        $i9 = i0;
        i0 = i0 + 1;
        b4 = r0[$i9];
        if b4 != 95 goto label1;

        virtualinvoke r1.<java.io.OutputStream: void write(int)>(32);
        goto label5;

     label1:
        if b4 != 61 goto label4;

        $i10 = i0 + 1;
        if $i10 < i2 goto label2;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Invalid quoted printable encoding; truncated escape sequence");
        throw $r2;

     label2:
        i11 = i0 + 1;
        b5 = r0[i0];
        i0 = i11 + 1;
        b6 = r0[i11];
        if b5 != 13 goto label3;

        if b6 == 10 goto label5;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Invalid quoted printable encoding; CR must be followed by LF");
        throw $r3;

     label3:
        i7 = staticinvoke <org.apache.tomcat.util.http.fileupload.util.mime.QuotedPrintableDecoder: int hexToBinary(byte)>(b5);
        i8 = staticinvoke <org.apache.tomcat.util.http.fileupload.util.mime.QuotedPrintableDecoder: int hexToBinary(byte)>(b6);
        $i12 = i7 << 4;
        $i13 = $i12 | i8;
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($i13);
        i3 = i3 + 1;
        goto label5;

     label4:
        virtualinvoke r1.<java.io.OutputStream: void write(int)>(b4);
        i3 = i3 + 1;

     label5:
        if i0 < i2 goto label0;

        return i3;
    }

    private static int hexToBinary(byte) throws java.io.IOException
    {
        byte b0;
        int i1;
        java.lang.StringBuilder $r0, $r2;
        char $c2;
        java.io.IOException $r1;
        java.lang.String $r3;

        b0 := @parameter0: byte;
        $c2 = (char) b0;
        i1 = staticinvoke <java.lang.Character: int digit(char,int)>($c2, 16);
        if i1 != -1 goto label0;

        $r1 = new java.io.IOException;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid quoted printable encoding: not a valid hex digit: ");
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r1;

     label0:
        return i1;
    }
}
