public class sun.misc.MetaIndex extends java.lang.Object
{
    private static volatile java.util.Map jarMap;
    private java.lang.String[] contents;
    private boolean isClassOnlyJar;
    static final boolean $assertionsDisabled;

    public static sun.misc.MetaIndex forJar(java.io.File)
    {
        java.io.File r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        sun.misc.MetaIndex $r3;

        r0 := @parameter0: java.io.File;
        $r1 = staticinvoke <sun.misc.MetaIndex: java.util.Map getJarMap()>();
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        $r3 = (sun.misc.MetaIndex) $r2;
        return $r3;
    }

    public static synchronized void registerDirectory(java.io.File)
    {
        java.io.File r0, $r1, r2, r10, $r14, $r17;
        java.io.BufferedReader r3, $r7;
        null_type n0;
        java.lang.String r4, r11, $r12, r13;
        boolean z0, $z1, $z2;
        java.util.ArrayList r5, $r9;
        java.util.Map r6;
        java.io.FileReader $r8;
        char $c0, $c2;
        int $i1, $i3;
        sun.misc.MetaIndex $r15, $r18;
        java.io.IOException $r20, r21;

        r0 := @parameter0: java.io.File;
        $r1 = new java.io.File;
        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "meta-index");
        r2 = $r1;
        $z1 = virtualinvoke r2.<java.io.File: boolean exists()>();
        if $z1 == 0 goto label13;

     label0:
        $r7 = new java.io.BufferedReader;
        $r8 = new java.io.FileReader;
        specialinvoke $r8.<java.io.FileReader: void <init>(java.io.File)>(r2);
        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);
        r3 = $r7;
        n0 = null;
        r4 = null;
        z0 = 0;
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r5 = $r9;
        r6 = staticinvoke <sun.misc.MetaIndex: java.util.Map getJarMap()>();
        r10 = virtualinvoke r0.<java.io.File: java.io.File getCanonicalFile()>();
        r11 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();
        if r11 == null goto label1;

        $z2 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("% VERSION 2");
        if $z2 != 0 goto label3;

     label1:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label2:
        return;

     label3:
        $r12 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();
        r13 = $r12;
        if $r12 == null goto label9;

        $c0 = virtualinvoke r13.<java.lang.String: char charAt(int)>(0);
        lookupswitch($c0)
        {
            case 33: goto label4;
            case 35: goto label4;
            case 37: goto label7;
            case 64: goto label4;
            default: goto label8;
        };

     label4:
        if r4 == null goto label5;

        $i1 = interfaceinvoke r5.<java.util.List: int size()>();
        if $i1 <= 0 goto label5;

        $r14 = new java.io.File;
        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, r4);
        $r15 = new sun.misc.MetaIndex;
        specialinvoke $r15.<sun.misc.MetaIndex: void <init>(java.util.List,boolean)>(r5, z0);
        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);
        interfaceinvoke r5.<java.util.List: void clear()>();

     label5:
        r4 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>(2);
        $c2 = virtualinvoke r13.<java.lang.String: char charAt(int)>(0);
        if $c2 != 33 goto label6;

        z0 = 1;
        goto label3;

     label6:
        if z0 == 0 goto label3;

        z0 = 0;
        goto label3;

     label7:
        goto label3;

     label8:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r13);
        goto label3;

     label9:
        if r4 == null goto label10;

        $i3 = interfaceinvoke r5.<java.util.List: int size()>();
        if $i3 <= 0 goto label10;

        $r17 = new java.io.File;
        specialinvoke $r17.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, r4);
        $r18 = new sun.misc.MetaIndex;
        specialinvoke $r18.<sun.misc.MetaIndex: void <init>(java.util.List,boolean)>(r5, z0);
        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18);

     label10:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label11:
        goto label13;

     label12:
        $r20 := @caughtexception;
        r21 = $r20;

     label13:
        return;

        catch java.io.IOException from label0 to label2 with label12;
        catch java.io.IOException from label3 to label11 with label12;
    }

    public boolean mayContain(java.lang.String)
    {
        sun.misc.MetaIndex r0;
        java.lang.String r1, $r3;
        java.lang.String[] r2;
        int i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: sun.misc.MetaIndex;
        r1 := @parameter0: java.lang.String;
        $z0 = r0.<sun.misc.MetaIndex: boolean isClassOnlyJar>;
        if $z0 == 0 goto label0;

        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".class");
        if $z1 != 0 goto label0;

        return 0;

     label0:
        r2 = r0.<sun.misc.MetaIndex: java.lang.String[] contents>;
        i0 = 0;

     label1:
        $i1 = lengthof r2;
        if i0 >= $i1 goto label3;

        $r3 = r2[i0];
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r3);
        if $z2 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        return 0;
    }

    private void <init>(java.util.List, boolean) throws java.lang.IllegalArgumentException
    {
        sun.misc.MetaIndex r0;
        java.util.List r1;
        boolean z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: sun.misc.MetaIndex;
        r1 := @parameter0: java.util.List;
        z0 := @parameter1: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r2;

     label0:
        $r3 = newarray (java.lang.String)[0];
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);
        $r5 = (java.lang.String[]) $r4;
        r0.<sun.misc.MetaIndex: java.lang.String[] contents> = $r5;
        r0.<sun.misc.MetaIndex: boolean isClassOnlyJar> = z0;
        return;
    }

    private static java.util.Map getJarMap()
    {
        java.util.Map $r0, $r4, $r7, $r9;
        java.lang.Class r1, $r3;
        java.lang.Throwable r2, $r6;
        java.util.HashMap $r5;
        boolean $z0;
        java.lang.AssertionError $r8;

        $r0 = <sun.misc.MetaIndex: java.util.Map jarMap>;
        if $r0 != null goto label6;

        $r3 = class "sun/misc/MetaIndex";
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = <sun.misc.MetaIndex: java.util.Map jarMap>;
        if $r4 != null goto label1;

        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>()>();
        <sun.misc.MetaIndex: java.util.Map jarMap> = $r5;

     label1:
        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

     label4:
        r2 = $r6;
        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $z0 = <sun.misc.MetaIndex: boolean $assertionsDisabled>;
        if $z0 != 0 goto label7;

        $r7 = <sun.misc.MetaIndex: java.util.Map jarMap>;
        if $r7 != null goto label7;

        $r8 = new java.lang.AssertionError;
        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();
        throw $r8;

     label7:
        $r9 = <sun.misc.MetaIndex: java.util.Map jarMap>;
        return $r9;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "sun/misc/MetaIndex";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <sun.misc.MetaIndex: boolean $assertionsDisabled> = $z1;
        return;
    }
}
