final class javax.crypto.CryptoAllPermissionCollection extends java.security.PermissionCollection implements java.io.Serializable
{
    private static final long serialVersionUID;
    private boolean all_allowed;

    void <init>()
    {
        javax.crypto.CryptoAllPermissionCollection r0;

        r0 := @this: javax.crypto.CryptoAllPermissionCollection;
        specialinvoke r0.<java.security.PermissionCollection: void <init>()>();
        r0.<javax.crypto.CryptoAllPermissionCollection: boolean all_allowed> = 0;
        return;
    }

    public void add(java.security.Permission)
    {
        javax.crypto.CryptoAllPermissionCollection r0;
        java.security.Permission r1;
        boolean $z0;
        java.lang.SecurityException $r2;
        javax.crypto.CryptoAllPermission $r3;

        r0 := @this: javax.crypto.CryptoAllPermissionCollection;
        r1 := @parameter0: java.security.Permission;
        $z0 = virtualinvoke r0.<javax.crypto.CryptoAllPermissionCollection: boolean isReadOnly()>();
        if $z0 == 0 goto label0;

        $r2 = new java.lang.SecurityException;
        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("attempt to add a Permission to a readonly PermissionCollection");
        throw $r2;

     label0:
        $r3 = <javax.crypto.CryptoAllPermission: javax.crypto.CryptoAllPermission INSTANCE>;
        if r1 == $r3 goto label1;

        return;

     label1:
        r0.<javax.crypto.CryptoAllPermissionCollection: boolean all_allowed> = 1;
        return;
    }

    public boolean implies(java.security.Permission)
    {
        javax.crypto.CryptoAllPermissionCollection r0;
        java.security.Permission r1;
        boolean $z0, $z1;

        r0 := @this: javax.crypto.CryptoAllPermissionCollection;
        r1 := @parameter0: java.security.Permission;
        $z0 = r1 instanceof javax.crypto.CryptoPermission;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $z1 = r0.<javax.crypto.CryptoAllPermissionCollection: boolean all_allowed>;
        return $z1;
    }

    public java.util.Enumeration elements()
    {
        javax.crypto.CryptoAllPermissionCollection r0;
        java.util.Vector $r1, r2;
        boolean $z0;
        javax.crypto.CryptoAllPermission $r3;
        java.util.Enumeration $r4;

        r0 := @this: javax.crypto.CryptoAllPermissionCollection;
        $r1 = new java.util.Vector;
        specialinvoke $r1.<java.util.Vector: void <init>(int)>(1);
        r2 = $r1;
        $z0 = r0.<javax.crypto.CryptoAllPermissionCollection: boolean all_allowed>;
        if $z0 == 0 goto label0;

        $r3 = <javax.crypto.CryptoAllPermission: javax.crypto.CryptoAllPermission INSTANCE>;
        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r3);

     label0:
        $r4 = virtualinvoke r2.<java.util.Vector: java.util.Enumeration elements()>();
        return $r4;
    }
}
