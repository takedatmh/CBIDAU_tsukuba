public class sun.net.util.IPAddressUtil extends java.lang.Object
{
    private static final int INADDR4SZ;
    private static final int INADDR16SZ;
    private static final int INT16SZ;

    public void <init>()
    {
        sun.net.util.IPAddressUtil r0;

        r0 := @this: sun.net.util.IPAddressUtil;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static byte[] textToNumericFormatV4(java.lang.String)
    {
        java.lang.String r0, $r3, $r4, $r5, $r6, $r7, $r8;
        byte[] r1;
        java.lang.String[] r2;
        long l0, $l6, $l7, $l10, $l11, $l12, $l15, $l16, $l17, $l20, l24, $l27, l31, $l34, $l35, $l38, $l39, $l40, $l43, l47, $l50, l54, $l57, $l58, $l61, l66, $l69;
        int i1, $i2, $i3, $i8, $i13, $i18, $i21, $i23, $i28, $i30, $i36, $i41, $i44, $i46, $i51, $i53, $i59, $i62, i64, $i65, $i70;
        byte $b4, $b5, $b9, $b14, $b19, $b22, $b25, $b26, $b29, $b32, $b33, $b37, $b42, $b45, $b48, $b49, $b52, $b55, $b56, $b60, $b63, $b67, $b68, $b71;
        null_type $n0, $n1, $n2, $n3, $n4, $n5, $n6;
        java.lang.NumberFormatException $r9, r10;

        r0 := @parameter0: java.lang.String;
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i2 != 0 goto label0;

        return null;

     label0:
        r1 = newarray (byte)[4];
        r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", -1);

     label1:
        $i3 = lengthof r2;
        tableswitch($i3)
        {
            case 1: goto label2;
            case 2: goto label6;
            case 3: goto label13;
            case 4: goto label22;
            default: goto label28;
        };

     label2:
        $r3 = r2[0];
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);
        $b4 = l0 cmp 0L;
        if $b4 < 0 goto label3;

        $b5 = l0 cmp 4294967295L;
        if $b5 <= 0 goto label5;

     label3:
        $n0 = null;

     label4:
        return $n0;

     label5:
        $l6 = l0 >> 24;
        $l7 = $l6 & 255L;
        $i8 = (int) $l7;
        $b9 = (byte) $i8;
        r1[0] = $b9;
        $l10 = l0 & 16777215L;
        $l11 = $l10 >> 16;
        $l12 = $l11 & 255L;
        $i13 = (int) $l12;
        $b14 = (byte) $i13;
        r1[1] = $b14;
        $l15 = l0 & 65535L;
        $l16 = $l15 >> 8;
        $l17 = $l16 & 255L;
        $i18 = (int) $l17;
        $b19 = (byte) $i18;
        r1[2] = $b19;
        $l20 = l0 & 255L;
        $i21 = (int) $l20;
        $b22 = (byte) $i21;
        r1[3] = $b22;
        goto label30;

     label6:
        $r4 = r2[0];
        $i23 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
        l24 = (long) $i23;
        $b25 = l24 cmp 0L;
        if $b25 < 0 goto label7;

        $b26 = l24 cmp 255L;
        if $b26 <= 0 goto label9;

     label7:
        $n1 = null;

     label8:
        return $n1;

     label9:
        $l27 = l24 & 255L;
        $i28 = (int) $l27;
        $b29 = (byte) $i28;
        r1[0] = $b29;
        $r5 = r2[1];
        $i30 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
        l31 = (long) $i30;
        $b32 = l31 cmp 0L;
        if $b32 < 0 goto label10;

        $b33 = l31 cmp 16777215L;
        if $b33 <= 0 goto label12;

     label10:
        $n2 = null;

     label11:
        return $n2;

     label12:
        $l34 = l31 >> 16;
        $l35 = $l34 & 255L;
        $i36 = (int) $l35;
        $b37 = (byte) $i36;
        r1[1] = $b37;
        $l38 = l31 & 65535L;
        $l39 = $l38 >> 8;
        $l40 = $l39 & 255L;
        $i41 = (int) $l40;
        $b42 = (byte) $i41;
        r1[2] = $b42;
        $l43 = l31 & 255L;
        $i44 = (int) $l43;
        $b45 = (byte) $i44;
        r1[3] = $b45;
        goto label30;

     label13:
        i1 = 0;

     label14:
        if i1 >= 2 goto label18;

        $r6 = r2[i1];
        $i46 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);
        l47 = (long) $i46;
        $b48 = l47 cmp 0L;
        if $b48 < 0 goto label15;

        $b49 = l47 cmp 255L;
        if $b49 <= 0 goto label17;

     label15:
        $n3 = null;

     label16:
        return $n3;

     label17:
        $l50 = l47 & 255L;
        $i51 = (int) $l50;
        $b52 = (byte) $i51;
        r1[i1] = $b52;
        i1 = i1 + 1;
        goto label14;

     label18:
        $r7 = r2[2];
        $i53 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);
        l54 = (long) $i53;
        $b55 = l54 cmp 0L;
        if $b55 < 0 goto label19;

        $b56 = l54 cmp 65535L;
        if $b56 <= 0 goto label21;

     label19:
        $n4 = null;

     label20:
        return $n4;

     label21:
        $l57 = l54 >> 8;
        $l58 = $l57 & 255L;
        $i59 = (int) $l58;
        $b60 = (byte) $i59;
        r1[2] = $b60;
        $l61 = l54 & 255L;
        $i62 = (int) $l61;
        $b63 = (byte) $i62;
        r1[3] = $b63;
        goto label30;

     label22:
        i64 = 0;

     label23:
        if i64 >= 4 goto label27;

        $r8 = r2[i64];
        $i65 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);
        l66 = (long) $i65;
        $b67 = l66 cmp 0L;
        if $b67 < 0 goto label24;

        $b68 = l66 cmp 255L;
        if $b68 <= 0 goto label26;

     label24:
        $n5 = null;

     label25:
        return $n5;

     label26:
        $l69 = l66 & 255L;
        $i70 = (int) $l69;
        $b71 = (byte) $i70;
        r1[i64] = $b71;
        i64 = i64 + 1;
        goto label23;

     label27:
        goto label30;

     label28:
        $n6 = null;

     label29:
        return $n6;

     label30:
        goto label32;

     label31:
        $r9 := @caughtexception;
        r10 = $r9;
        return null;

     label32:
        return r1;

        catch java.lang.NumberFormatException from label1 to label4 with label31;
        catch java.lang.NumberFormatException from label5 to label8 with label31;
        catch java.lang.NumberFormatException from label9 to label11 with label31;
        catch java.lang.NumberFormatException from label12 to label16 with label31;
        catch java.lang.NumberFormatException from label17 to label20 with label31;
        catch java.lang.NumberFormatException from label21 to label25 with label31;
        catch java.lang.NumberFormatException from label26 to label29 with label31;
    }

    public static byte[] textToNumericFormatV6(java.lang.String)
    {
        java.lang.String r0, r3;
        char[] r1;
        byte[] r2, r4, r5;
        int i0, i1, i2, i3, i4, i5, i6, i8, i9, i10, i11, $i12, $i13, $i16, i17, $i18, i19, $i20, $i21, $i23, $i25, $i26, i27, $i28, $i30, i31, $i32, $i33, $i35, i37, i38, $i39, $i40, $i41, $i43, $i44;
        boolean z0;
        char c7, $c14, $c15;
        byte $b22, $b24, $b29, $b34, $b36, $b42;

        r0 := @parameter0: java.lang.String;
        $i12 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i12 >= 2 goto label0;

        return null;

     label0:
        r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
        r2 = newarray (byte)[16];
        i0 = lengthof r1;
        i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("%");
        $i13 = i0 - 1;
        if i1 != $i13 goto label1;

        return null;

     label1:
        if i1 == -1 goto label2;

        i0 = i1;

     label2:
        i2 = -1;
        i3 = 0;
        i4 = 0;
        $c14 = r1[i3];
        if $c14 != 58 goto label3;

        i3 = i3 + 1;
        $c15 = r1[i3];
        if $c15 == 58 goto label3;

        return null;

     label3:
        i5 = i3;
        z0 = 0;
        i6 = 0;

     label4:
        if i3 >= i0 goto label19;

        $i16 = i3;
        i3 = i3 + 1;
        c7 = r1[$i16];
        i8 = staticinvoke <java.lang.Character: int digit(char,int)>(c7, 16);
        if i8 == -1 goto label6;

        i17 = i6 << 4;
        i6 = i17 | i8;
        if i6 <= 65535 goto label5;

        return null;

     label5:
        z0 = 1;
        goto label4;

     label6:
        if c7 != 58 goto label11;

        i5 = i3;
        if z0 != 0 goto label8;

        if i2 == -1 goto label7;

        return null;

     label7:
        i2 = i4;
        goto label4;

     label8:
        if i3 != i0 goto label9;

        return null;

     label9:
        $i18 = i4 + 2;
        if $i18 <= 16 goto label10;

        return null;

     label10:
        i19 = i4 + 1;
        $i20 = i6 >> 8;
        $i21 = $i20 & 255;
        $b22 = (byte) $i21;
        r2[i4] = $b22;
        i4 = i19 + 1;
        $i23 = i6 & 255;
        $b24 = (byte) $i23;
        r2[i19] = $b24;
        z0 = 0;
        i6 = 0;
        goto label4;

     label11:
        if c7 != 46 goto label18;

        $i25 = i4 + 4;
        if $i25 > 16 goto label18;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i5, i0);
        i9 = 0;
        i10 = 0;

     label12:
        $i26 = virtualinvoke r3.<java.lang.String: int indexOf(int,int)>(46, i10);
        i27 = $i26;
        if $i26 == -1 goto label13;

        i9 = i9 + 1;
        i10 = i27 + 1;
        goto label12;

     label13:
        if i9 == 3 goto label14;

        return null;

     label14:
        r4 = staticinvoke <sun.net.util.IPAddressUtil: byte[] textToNumericFormatV4(java.lang.String)>(r3);
        if r4 != null goto label15;

        return null;

     label15:
        i11 = 0;

     label16:
        if i11 >= 4 goto label17;

        $i28 = i4;
        i4 = i4 + 1;
        $b29 = r4[i11];
        r2[$i28] = $b29;
        i11 = i11 + 1;
        goto label16;

     label17:
        z0 = 0;
        goto label19;

     label18:
        return null;

     label19:
        if z0 == 0 goto label21;

        $i30 = i4 + 2;
        if $i30 <= 16 goto label20;

        return null;

     label20:
        i31 = i4 + 1;
        $i32 = i6 >> 8;
        $i33 = $i32 & 255;
        $b34 = (byte) $i33;
        r2[i4] = $b34;
        i4 = i31 + 1;
        $i35 = i6 & 255;
        $b36 = (byte) $i35;
        r2[i31] = $b36;

     label21:
        if i2 == -1 goto label25;

        i37 = i4 - i2;
        if i4 != 16 goto label22;

        return null;

     label22:
        i38 = 1;

     label23:
        if i38 > i37 goto label24;

        $i39 = 16 - i38;
        $i40 = i2 + i37;
        $i41 = $i40 - i38;
        $b42 = r2[$i41];
        r2[$i39] = $b42;
        $i43 = i2 + i37;
        $i44 = $i43 - i38;
        r2[$i44] = 0;
        i38 = i38 + 1;
        goto label23;

     label24:
        i4 = 16;

     label25:
        if i4 == 16 goto label26;

        return null;

     label26:
        r5 = staticinvoke <sun.net.util.IPAddressUtil: byte[] convertFromIPv4MappedAddress(byte[])>(r2);
        if r5 == null goto label27;

        return r5;

     label27:
        return r2;
    }

    public static boolean isIPv4LiteralAddress(java.lang.String)
    {
        java.lang.String r0;
        byte[] $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <sun.net.util.IPAddressUtil: byte[] textToNumericFormatV4(java.lang.String)>(r0);
        if $r1 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isIPv6LiteralAddress(java.lang.String)
    {
        java.lang.String r0;
        byte[] $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <sun.net.util.IPAddressUtil: byte[] textToNumericFormatV6(java.lang.String)>(r0);
        if $r1 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static byte[] convertFromIPv4MappedAddress(byte[])
    {
        byte[] r0, r1;
        boolean $z0;

        r0 := @parameter0: byte[];
        $z0 = staticinvoke <sun.net.util.IPAddressUtil: boolean isIPv4MappedAddress(byte[])>(r0);
        if $z0 == 0 goto label0;

        r1 = newarray (byte)[4];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 12, r1, 0, 4);
        return r1;

     label0:
        return null;
    }

    private static boolean isIPv4MappedAddress(byte[])
    {
        byte[] r0;
        int $i0;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12;

        r0 := @parameter0: byte[];
        $i0 = lengthof r0;
        if $i0 >= 16 goto label0;

        return 0;

     label0:
        $b1 = r0[0];
        if $b1 != 0 goto label1;

        $b2 = r0[1];
        if $b2 != 0 goto label1;

        $b3 = r0[2];
        if $b3 != 0 goto label1;

        $b4 = r0[3];
        if $b4 != 0 goto label1;

        $b5 = r0[4];
        if $b5 != 0 goto label1;

        $b6 = r0[5];
        if $b6 != 0 goto label1;

        $b7 = r0[6];
        if $b7 != 0 goto label1;

        $b8 = r0[7];
        if $b8 != 0 goto label1;

        $b9 = r0[8];
        if $b9 != 0 goto label1;

        $b10 = r0[9];
        if $b10 != 0 goto label1;

        $b11 = r0[10];
        if $b11 != -1 goto label1;

        $b12 = r0[11];
        if $b12 != -1 goto label1;

        return 1;

     label1:
        return 0;
    }
}
