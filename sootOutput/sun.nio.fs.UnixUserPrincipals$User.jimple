class sun.nio.fs.UnixUserPrincipals$User extends java.lang.Object implements java.nio.file.attribute.UserPrincipal
{
    private final int id;
    private final boolean isGroup;
    private final java.lang.String name;

    private void <init>(int, boolean, java.lang.String)
    {
        sun.nio.fs.UnixUserPrincipals$User r0;
        int i0;
        boolean z0;
        java.lang.String r1;

        r0 := @this: sun.nio.fs.UnixUserPrincipals$User;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        r1 := @parameter2: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.nio.fs.UnixUserPrincipals$User: int id> = i0;
        r0.<sun.nio.fs.UnixUserPrincipals$User: boolean isGroup> = z0;
        r0.<sun.nio.fs.UnixUserPrincipals$User: java.lang.String name> = r1;
        return;
    }

    void <init>(int, java.lang.String)
    {
        sun.nio.fs.UnixUserPrincipals$User r0;
        int i0;
        java.lang.String r1;

        r0 := @this: sun.nio.fs.UnixUserPrincipals$User;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        specialinvoke r0.<sun.nio.fs.UnixUserPrincipals$User: void <init>(int,boolean,java.lang.String)>(i0, 0, r1);
        return;
    }

    int uid()
    {
        sun.nio.fs.UnixUserPrincipals$User r0;
        boolean $z0;
        java.lang.AssertionError $r1;
        int $i0;

        r0 := @this: sun.nio.fs.UnixUserPrincipals$User;
        $z0 = r0.<sun.nio.fs.UnixUserPrincipals$User: boolean isGroup>;
        if $z0 == 0 goto label0;

        $r1 = new java.lang.AssertionError;
        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();
        throw $r1;

     label0:
        $i0 = r0.<sun.nio.fs.UnixUserPrincipals$User: int id>;
        return $i0;
    }

    int gid()
    {
        sun.nio.fs.UnixUserPrincipals$User r0;
        boolean $z0;
        int $i0;
        java.lang.AssertionError $r1;

        r0 := @this: sun.nio.fs.UnixUserPrincipals$User;
        $z0 = r0.<sun.nio.fs.UnixUserPrincipals$User: boolean isGroup>;
        if $z0 == 0 goto label0;

        $i0 = r0.<sun.nio.fs.UnixUserPrincipals$User: int id>;
        return $i0;

     label0:
        $r1 = new java.lang.AssertionError;
        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();
        throw $r1;
    }

    boolean isSpecial()
    {
        sun.nio.fs.UnixUserPrincipals$User r0;
        int $i0;
        boolean $z0;

        r0 := @this: sun.nio.fs.UnixUserPrincipals$User;
        $i0 = r0.<sun.nio.fs.UnixUserPrincipals$User: int id>;
        if $i0 != -1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.String getName()
    {
        sun.nio.fs.UnixUserPrincipals$User r0;
        java.lang.String $r1;

        r0 := @this: sun.nio.fs.UnixUserPrincipals$User;
        $r1 = r0.<sun.nio.fs.UnixUserPrincipals$User: java.lang.String name>;
        return $r1;
    }

    public java.lang.String toString()
    {
        sun.nio.fs.UnixUserPrincipals$User r0;
        java.lang.String $r1;

        r0 := @this: sun.nio.fs.UnixUserPrincipals$User;
        $r1 = r0.<sun.nio.fs.UnixUserPrincipals$User: java.lang.String name>;
        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        sun.nio.fs.UnixUserPrincipals$User r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r4;

        r0 := @this: sun.nio.fs.UnixUserPrincipals$User;
        r1 := @parameter0: java.lang.Object;
        if r1 != r0 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.nio.fs.UnixUserPrincipals$User;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (sun.nio.fs.UnixUserPrincipals$User) r1;
        $i0 = r0.<sun.nio.fs.UnixUserPrincipals$User: int id>;
        $i1 = r2.<sun.nio.fs.UnixUserPrincipals$User: int id>;
        if $i0 != $i1 goto label2;

        $z1 = r0.<sun.nio.fs.UnixUserPrincipals$User: boolean isGroup>;
        $z2 = r2.<sun.nio.fs.UnixUserPrincipals$User: boolean isGroup>;
        if $z1 == $z2 goto label3;

     label2:
        return 0;

     label3:
        $i2 = r0.<sun.nio.fs.UnixUserPrincipals$User: int id>;
        if $i2 != -1 goto label4;

        $i3 = r2.<sun.nio.fs.UnixUserPrincipals$User: int id>;
        if $i3 != -1 goto label4;

        $r3 = r0.<sun.nio.fs.UnixUserPrincipals$User: java.lang.String name>;
        $r4 = r2.<sun.nio.fs.UnixUserPrincipals$User: java.lang.String name>;
        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        return $z3;

     label4:
        return 1;
    }

    public int hashCode()
    {
        sun.nio.fs.UnixUserPrincipals$User r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: sun.nio.fs.UnixUserPrincipals$User;
        $i0 = r0.<sun.nio.fs.UnixUserPrincipals$User: int id>;
        if $i0 == -1 goto label0;

        $i1 = r0.<sun.nio.fs.UnixUserPrincipals$User: int id>;
        goto label1;

     label0:
        $r1 = r0.<sun.nio.fs.UnixUserPrincipals$User: java.lang.String name>;
        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label1:
        return $i1;
    }

    void <init>(int, boolean, java.lang.String, sun.nio.fs.UnixUserPrincipals$1)
    {
        sun.nio.fs.UnixUserPrincipals$User r0;
        int i0;
        boolean z0;
        java.lang.String r1;
        sun.nio.fs.UnixUserPrincipals$1 r2;

        r0 := @this: sun.nio.fs.UnixUserPrincipals$User;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: sun.nio.fs.UnixUserPrincipals$1;
        specialinvoke r0.<sun.nio.fs.UnixUserPrincipals$User: void <init>(int,boolean,java.lang.String)>(i0, z0, r1);
        return;
    }
}
