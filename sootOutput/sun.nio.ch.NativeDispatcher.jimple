abstract class sun.nio.ch.NativeDispatcher extends java.lang.Object
{

    void <init>()
    {
        sun.nio.ch.NativeDispatcher r0;

        r0 := @this: sun.nio.ch.NativeDispatcher;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    abstract int read(java.io.FileDescriptor, long, int) throws java.io.IOException;

    boolean needsPositionLock()
    {
        sun.nio.ch.NativeDispatcher r0;

        r0 := @this: sun.nio.ch.NativeDispatcher;
        return 0;
    }

    int pread(java.io.FileDescriptor, long, int, long) throws java.io.IOException
    {
        sun.nio.ch.NativeDispatcher r0;
        java.io.FileDescriptor r1;
        long l0, l2;
        int i1;
        java.io.IOException $r2;

        r0 := @this: sun.nio.ch.NativeDispatcher;
        r1 := @parameter0: java.io.FileDescriptor;
        l0 := @parameter1: long;
        i1 := @parameter2: int;
        l2 := @parameter3: long;
        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Operation Unsupported");
        throw $r2;
    }

    abstract long readv(java.io.FileDescriptor, long, int) throws java.io.IOException;

    abstract int write(java.io.FileDescriptor, long, int) throws java.io.IOException;

    int pwrite(java.io.FileDescriptor, long, int, long) throws java.io.IOException
    {
        sun.nio.ch.NativeDispatcher r0;
        java.io.FileDescriptor r1;
        long l0, l2;
        int i1;
        java.io.IOException $r2;

        r0 := @this: sun.nio.ch.NativeDispatcher;
        r1 := @parameter0: java.io.FileDescriptor;
        l0 := @parameter1: long;
        i1 := @parameter2: int;
        l2 := @parameter3: long;
        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Operation Unsupported");
        throw $r2;
    }

    abstract long writev(java.io.FileDescriptor, long, int) throws java.io.IOException;

    abstract void close(java.io.FileDescriptor) throws java.io.IOException;

    void preClose(java.io.FileDescriptor) throws java.io.IOException
    {
        sun.nio.ch.NativeDispatcher r0;
        java.io.FileDescriptor r1;

        r0 := @this: sun.nio.ch.NativeDispatcher;
        r1 := @parameter0: java.io.FileDescriptor;
        return;
    }
}
