public class java.util.StringTokenizer extends java.lang.Object implements java.util.Enumeration
{
    private int currentPosition;
    private int newPosition;
    private int maxPosition;
    private java.lang.String str;
    private java.lang.String delimiters;
    private boolean retDelims;
    private boolean delimsChanged;
    private int maxDelimCodePoint;
    private boolean hasSurrogates;
    private int[] delimiterCodePoints;

    private void setMaxDelimCodePoint()
    {
        java.util.StringTokenizer r0;
        int i0, i1, i2, i3, i4, $i5, $i6, i7, i8, $i9;
        java.lang.String $r1, $r2, $r3, $r4, $r6;
        boolean $z0;
        int[] $r5, $r7;

        r0 := @this: java.util.StringTokenizer;
        $r1 = r0.<java.util.StringTokenizer: java.lang.String delimiters>;
        if $r1 != null goto label0;

        r0.<java.util.StringTokenizer: int maxDelimCodePoint> = 0;
        return;

     label0:
        i0 = 0;
        i1 = 0;
        i2 = 0;

     label1:
        $r2 = r0.<java.util.StringTokenizer: java.lang.String delimiters>;
        $i5 = virtualinvoke $r2.<java.lang.String: int length()>();
        if i2 >= $i5 goto label4;

        $r3 = r0.<java.util.StringTokenizer: java.lang.String delimiters>;
        i3 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i2);
        if i3 < 55296 goto label2;

        if i3 > 57343 goto label2;

        $r4 = r0.<java.util.StringTokenizer: java.lang.String delimiters>;
        i3 = virtualinvoke $r4.<java.lang.String: int codePointAt(int)>(i2);
        r0.<java.util.StringTokenizer: boolean hasSurrogates> = 1;

     label2:
        if i0 >= i3 goto label3;

        i0 = i3;

     label3:
        i1 = i1 + 1;
        $i6 = staticinvoke <java.lang.Character: int charCount(int)>(i3);
        i2 = i2 + $i6;
        goto label1;

     label4:
        r0.<java.util.StringTokenizer: int maxDelimCodePoint> = i0;
        $z0 = r0.<java.util.StringTokenizer: boolean hasSurrogates>;
        if $z0 == 0 goto label6;

        $r5 = newarray (int)[i1];
        r0.<java.util.StringTokenizer: int[] delimiterCodePoints> = $r5;
        i7 = 0;
        i4 = 0;

     label5:
        if i7 >= i1 goto label6;

        $r6 = r0.<java.util.StringTokenizer: java.lang.String delimiters>;
        i8 = virtualinvoke $r6.<java.lang.String: int codePointAt(int)>(i4);
        $r7 = r0.<java.util.StringTokenizer: int[] delimiterCodePoints>;
        $r7[i7] = i8;
        i7 = i7 + 1;
        $i9 = staticinvoke <java.lang.Character: int charCount(int)>(i8);
        i4 = i4 + $i9;
        goto label5;

     label6:
        return;
    }

    public void <init>(java.lang.String, java.lang.String, boolean)
    {
        java.util.StringTokenizer r0;
        java.lang.String r1, r2;
        boolean z0;
        int $i0;

        r0 := @this: java.util.StringTokenizer;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.StringTokenizer: boolean hasSurrogates> = 0;
        r0.<java.util.StringTokenizer: int currentPosition> = 0;
        r0.<java.util.StringTokenizer: int newPosition> = -1;
        r0.<java.util.StringTokenizer: boolean delimsChanged> = 0;
        r0.<java.util.StringTokenizer: java.lang.String str> = r1;
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        r0.<java.util.StringTokenizer: int maxPosition> = $i0;
        r0.<java.util.StringTokenizer: java.lang.String delimiters> = r2;
        r0.<java.util.StringTokenizer: boolean retDelims> = z0;
        specialinvoke r0.<java.util.StringTokenizer: void setMaxDelimCodePoint()>();
        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.util.StringTokenizer r0;
        java.lang.String r1, r2;

        r0 := @this: java.util.StringTokenizer;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);
        return;
    }

    public void <init>(java.lang.String)
    {
        java.util.StringTokenizer r0;
        java.lang.String r1;

        r0 := @this: java.util.StringTokenizer;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r1, " \t\n\r\f", 0);
        return;
    }

    private int skipDelimiters(int)
    {
        java.util.StringTokenizer r0;
        int i0, i1, $i3, $i4, $i5, i6, $i7, $i8;
        char c2;
        java.lang.String $r1, $r3, $r4, $r5;
        java.lang.NullPointerException $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: java.util.StringTokenizer;
        i0 := @parameter0: int;
        $r1 = r0.<java.util.StringTokenizer: java.lang.String delimiters>;
        if $r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        i1 = i0;

     label1:
        $z0 = r0.<java.util.StringTokenizer: boolean retDelims>;
        if $z0 != 0 goto label5;

        $i3 = r0.<java.util.StringTokenizer: int maxPosition>;
        if i1 >= $i3 goto label5;

        $z1 = r0.<java.util.StringTokenizer: boolean hasSurrogates>;
        if $z1 != 0 goto label3;

        $r3 = r0.<java.util.StringTokenizer: java.lang.String str>;
        c2 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i1);
        $i4 = r0.<java.util.StringTokenizer: int maxDelimCodePoint>;
        if c2 > $i4 goto label5;

        $r4 = r0.<java.util.StringTokenizer: java.lang.String delimiters>;
        $i5 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(c2);
        if $i5 >= 0 goto label2;

        goto label5;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        $r5 = r0.<java.util.StringTokenizer: java.lang.String str>;
        i6 = virtualinvoke $r5.<java.lang.String: int codePointAt(int)>(i1);
        $i7 = r0.<java.util.StringTokenizer: int maxDelimCodePoint>;
        if i6 > $i7 goto label5;

        $z2 = specialinvoke r0.<java.util.StringTokenizer: boolean isDelimiter(int)>(i6);
        if $z2 != 0 goto label4;

        goto label5;

     label4:
        $i8 = staticinvoke <java.lang.Character: int charCount(int)>(i6);
        i1 = i1 + $i8;
        goto label1;

     label5:
        return i1;
    }

    private int scanToken(int)
    {
        java.util.StringTokenizer r0;
        int i0, i1, $i3, $i4, $i5, i6, $i7, $i8, $i10, $i11, i12, $i13, $i14;
        char c2, c9;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: java.util.StringTokenizer;
        i0 := @parameter0: int;
        i1 = i0;

     label0:
        $i3 = r0.<java.util.StringTokenizer: int maxPosition>;
        if i1 >= $i3 goto label4;

        $z0 = r0.<java.util.StringTokenizer: boolean hasSurrogates>;
        if $z0 != 0 goto label2;

        $r1 = r0.<java.util.StringTokenizer: java.lang.String str>;
        c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);
        $i4 = r0.<java.util.StringTokenizer: int maxDelimCodePoint>;
        if c2 > $i4 goto label1;

        $r2 = r0.<java.util.StringTokenizer: java.lang.String delimiters>;
        $i5 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(c2);
        if $i5 < 0 goto label1;

        goto label4;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        $r3 = r0.<java.util.StringTokenizer: java.lang.String str>;
        i6 = virtualinvoke $r3.<java.lang.String: int codePointAt(int)>(i1);
        $i7 = r0.<java.util.StringTokenizer: int maxDelimCodePoint>;
        if i6 > $i7 goto label3;

        $z1 = specialinvoke r0.<java.util.StringTokenizer: boolean isDelimiter(int)>(i6);
        if $z1 == 0 goto label3;

        goto label4;

     label3:
        $i8 = staticinvoke <java.lang.Character: int charCount(int)>(i6);
        i1 = i1 + $i8;
        goto label0;

     label4:
        $z2 = r0.<java.util.StringTokenizer: boolean retDelims>;
        if $z2 == 0 goto label7;

        if i0 != i1 goto label7;

        $z3 = r0.<java.util.StringTokenizer: boolean hasSurrogates>;
        if $z3 != 0 goto label6;

        $r4 = r0.<java.util.StringTokenizer: java.lang.String str>;
        c9 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(i1);
        $i10 = r0.<java.util.StringTokenizer: int maxDelimCodePoint>;
        if c9 > $i10 goto label5;

        $r5 = r0.<java.util.StringTokenizer: java.lang.String delimiters>;
        $i11 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(c9);
        if $i11 < 0 goto label5;

        i1 = i1 + 1;

     label5:
        goto label7;

     label6:
        $r6 = r0.<java.util.StringTokenizer: java.lang.String str>;
        i12 = virtualinvoke $r6.<java.lang.String: int codePointAt(int)>(i1);
        $i13 = r0.<java.util.StringTokenizer: int maxDelimCodePoint>;
        if i12 > $i13 goto label7;

        $z4 = specialinvoke r0.<java.util.StringTokenizer: boolean isDelimiter(int)>(i12);
        if $z4 == 0 goto label7;

        $i14 = staticinvoke <java.lang.Character: int charCount(int)>(i12);
        i1 = i1 + $i14;

     label7:
        return i1;
    }

    private boolean isDelimiter(int)
    {
        java.util.StringTokenizer r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;

        r0 := @this: java.util.StringTokenizer;
        i0 := @parameter0: int;
        i1 = 0;

     label0:
        $r1 = r0.<java.util.StringTokenizer: int[] delimiterCodePoints>;
        $i2 = lengthof $r1;
        if i1 >= $i2 goto label2;

        $r2 = r0.<java.util.StringTokenizer: int[] delimiterCodePoints>;
        $i3 = $r2[i1];
        if $i3 != i0 goto label1;

        return 1;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        return 0;
    }

    public boolean hasMoreTokens()
    {
        java.util.StringTokenizer r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: java.util.StringTokenizer;
        $i0 = r0.<java.util.StringTokenizer: int currentPosition>;
        $i1 = specialinvoke r0.<java.util.StringTokenizer: int skipDelimiters(int)>($i0);
        r0.<java.util.StringTokenizer: int newPosition> = $i1;
        $i2 = r0.<java.util.StringTokenizer: int newPosition>;
        $i3 = r0.<java.util.StringTokenizer: int maxPosition>;
        if $i2 >= $i3 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.String nextToken()
    {
        java.util.StringTokenizer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        java.util.NoSuchElementException $r2;
        java.lang.String $r3, $r4;

        r0 := @this: java.util.StringTokenizer;
        $i1 = r0.<java.util.StringTokenizer: int newPosition>;
        if $i1 < 0 goto label0;

        $z0 = r0.<java.util.StringTokenizer: boolean delimsChanged>;
        if $z0 != 0 goto label0;

        $i2 = r0.<java.util.StringTokenizer: int newPosition>;
        goto label1;

     label0:
        $i3 = r0.<java.util.StringTokenizer: int currentPosition>;
        $i2 = specialinvoke r0.<java.util.StringTokenizer: int skipDelimiters(int)>($i3);

     label1:
        r0.<java.util.StringTokenizer: int currentPosition> = $i2;
        r0.<java.util.StringTokenizer: boolean delimsChanged> = 0;
        r0.<java.util.StringTokenizer: int newPosition> = -1;
        $i4 = r0.<java.util.StringTokenizer: int currentPosition>;
        $i5 = r0.<java.util.StringTokenizer: int maxPosition>;
        if $i4 < $i5 goto label2;

        $r2 = new java.util.NoSuchElementException;
        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();
        throw $r2;

     label2:
        i0 = r0.<java.util.StringTokenizer: int currentPosition>;
        $i6 = r0.<java.util.StringTokenizer: int currentPosition>;
        $i7 = specialinvoke r0.<java.util.StringTokenizer: int scanToken(int)>($i6);
        r0.<java.util.StringTokenizer: int currentPosition> = $i7;
        $r3 = r0.<java.util.StringTokenizer: java.lang.String str>;
        $i8 = r0.<java.util.StringTokenizer: int currentPosition>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i8);
        return $r4;
    }

    public java.lang.String nextToken(java.lang.String)
    {
        java.util.StringTokenizer r0;
        java.lang.String r1, $r2;

        r0 := @this: java.util.StringTokenizer;
        r1 := @parameter0: java.lang.String;
        r0.<java.util.StringTokenizer: java.lang.String delimiters> = r1;
        r0.<java.util.StringTokenizer: boolean delimsChanged> = 1;
        specialinvoke r0.<java.util.StringTokenizer: void setMaxDelimCodePoint()>();
        $r2 = virtualinvoke r0.<java.util.StringTokenizer: java.lang.String nextToken()>();
        return $r2;
    }

    public boolean hasMoreElements()
    {
        java.util.StringTokenizer r0;
        boolean $z0;

        r0 := @this: java.util.StringTokenizer;
        $z0 = virtualinvoke r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        return $z0;
    }

    public java.lang.Object nextElement()
    {
        java.util.StringTokenizer r0;
        java.lang.String $r1;

        r0 := @this: java.util.StringTokenizer;
        $r1 = virtualinvoke r0.<java.util.StringTokenizer: java.lang.String nextToken()>();
        return $r1;
    }

    public int countTokens()
    {
        java.util.StringTokenizer r0;
        int i0, i1, $i2, i3, $i4;

        r0 := @this: java.util.StringTokenizer;
        i0 = 0;
        i1 = r0.<java.util.StringTokenizer: int currentPosition>;

     label0:
        $i2 = r0.<java.util.StringTokenizer: int maxPosition>;
        if i1 >= $i2 goto label2;

        i3 = specialinvoke r0.<java.util.StringTokenizer: int skipDelimiters(int)>(i1);
        $i4 = r0.<java.util.StringTokenizer: int maxPosition>;
        if i3 < $i4 goto label1;

        goto label2;

     label1:
        i1 = specialinvoke r0.<java.util.StringTokenizer: int scanToken(int)>(i3);
        i0 = i0 + 1;
        goto label0;

     label2:
        return i0;
    }
}
