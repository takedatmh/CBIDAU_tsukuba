public class sun.net.ProgressSource extends java.lang.Object
{
    private java.net.URL url;
    private java.lang.String method;
    private java.lang.String contentType;
    private long progress;
    private long lastProgress;
    private long expected;
    private sun.net.ProgressSource$State state;
    private boolean connected;
    private int threshold;
    private sun.net.ProgressMonitor progressMonitor;

    public void <init>(java.net.URL, java.lang.String)
    {
        sun.net.ProgressSource r0;
        java.net.URL r1;
        java.lang.String r2;

        r0 := @this: sun.net.ProgressSource;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<sun.net.ProgressSource: void <init>(java.net.URL,java.lang.String,long)>(r1, r2, -1L);
        return;
    }

    public void <init>(java.net.URL, java.lang.String, long)
    {
        sun.net.ProgressSource r0;
        java.net.URL r1;
        java.lang.String r2;
        long l0;
        sun.net.ProgressSource$State $r3;
        sun.net.ProgressMonitor $r4, $r5;
        int $i1;

        r0 := @this: sun.net.ProgressSource;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        l0 := @parameter2: long;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.net.ProgressSource: long progress> = 0L;
        r0.<sun.net.ProgressSource: long lastProgress> = 0L;
        r0.<sun.net.ProgressSource: long expected> = -1L;
        r0.<sun.net.ProgressSource: boolean connected> = 0;
        r0.<sun.net.ProgressSource: int threshold> = 8192;
        r0.<sun.net.ProgressSource: java.net.URL url> = r1;
        r0.<sun.net.ProgressSource: java.lang.String method> = r2;
        r0.<sun.net.ProgressSource: java.lang.String contentType> = "content/unknown";
        r0.<sun.net.ProgressSource: long progress> = 0L;
        r0.<sun.net.ProgressSource: long lastProgress> = 0L;
        r0.<sun.net.ProgressSource: long expected> = l0;
        $r3 = <sun.net.ProgressSource$State: sun.net.ProgressSource$State NEW>;
        r0.<sun.net.ProgressSource: sun.net.ProgressSource$State state> = $r3;
        $r4 = staticinvoke <sun.net.ProgressMonitor: sun.net.ProgressMonitor getDefault()>();
        r0.<sun.net.ProgressSource: sun.net.ProgressMonitor progressMonitor> = $r4;
        $r5 = r0.<sun.net.ProgressSource: sun.net.ProgressMonitor progressMonitor>;
        $i1 = virtualinvoke $r5.<sun.net.ProgressMonitor: int getProgressUpdateThreshold()>();
        r0.<sun.net.ProgressSource: int threshold> = $i1;
        return;
    }

    public boolean connected()
    {
        sun.net.ProgressSource r0;
        boolean $z0;
        sun.net.ProgressSource$State $r1;

        r0 := @this: sun.net.ProgressSource;
        $z0 = r0.<sun.net.ProgressSource: boolean connected>;
        if $z0 != 0 goto label0;

        r0.<sun.net.ProgressSource: boolean connected> = 1;
        $r1 = <sun.net.ProgressSource$State: sun.net.ProgressSource$State CONNECTED>;
        r0.<sun.net.ProgressSource: sun.net.ProgressSource$State state> = $r1;
        return 0;

     label0:
        return 1;
    }

    public void close()
    {
        sun.net.ProgressSource r0;
        sun.net.ProgressSource$State $r1;

        r0 := @this: sun.net.ProgressSource;
        $r1 = <sun.net.ProgressSource$State: sun.net.ProgressSource$State DELETE>;
        r0.<sun.net.ProgressSource: sun.net.ProgressSource$State state> = $r1;
        return;
    }

    public java.net.URL getURL()
    {
        sun.net.ProgressSource r0;
        java.net.URL $r1;

        r0 := @this: sun.net.ProgressSource;
        $r1 = r0.<sun.net.ProgressSource: java.net.URL url>;
        return $r1;
    }

    public java.lang.String getMethod()
    {
        sun.net.ProgressSource r0;
        java.lang.String $r1;

        r0 := @this: sun.net.ProgressSource;
        $r1 = r0.<sun.net.ProgressSource: java.lang.String method>;
        return $r1;
    }

    public java.lang.String getContentType()
    {
        sun.net.ProgressSource r0;
        java.lang.String $r1;

        r0 := @this: sun.net.ProgressSource;
        $r1 = r0.<sun.net.ProgressSource: java.lang.String contentType>;
        return $r1;
    }

    public void setContentType(java.lang.String)
    {
        sun.net.ProgressSource r0;
        java.lang.String r1;

        r0 := @this: sun.net.ProgressSource;
        r1 := @parameter0: java.lang.String;
        r0.<sun.net.ProgressSource: java.lang.String contentType> = r1;
        return;
    }

    public long getProgress()
    {
        sun.net.ProgressSource r0;
        long $l0;

        r0 := @this: sun.net.ProgressSource;
        $l0 = r0.<sun.net.ProgressSource: long progress>;
        return $l0;
    }

    public long getExpected()
    {
        sun.net.ProgressSource r0;
        long $l0;

        r0 := @this: sun.net.ProgressSource;
        $l0 = r0.<sun.net.ProgressSource: long expected>;
        return $l0;
    }

    public sun.net.ProgressSource$State getState()
    {
        sun.net.ProgressSource r0;
        sun.net.ProgressSource$State $r1;

        r0 := @this: sun.net.ProgressSource;
        $r1 = r0.<sun.net.ProgressSource: sun.net.ProgressSource$State state>;
        return $r1;
    }

    public void beginTracking()
    {
        sun.net.ProgressSource r0;
        sun.net.ProgressMonitor $r1;

        r0 := @this: sun.net.ProgressSource;
        $r1 = r0.<sun.net.ProgressSource: sun.net.ProgressMonitor progressMonitor>;
        virtualinvoke $r1.<sun.net.ProgressMonitor: void registerSource(sun.net.ProgressSource)>(r0);
        return;
    }

    public void finishTracking()
    {
        sun.net.ProgressSource r0;
        sun.net.ProgressMonitor $r1;

        r0 := @this: sun.net.ProgressSource;
        $r1 = r0.<sun.net.ProgressSource: sun.net.ProgressMonitor progressMonitor>;
        virtualinvoke $r1.<sun.net.ProgressMonitor: void unregisterSource(sun.net.ProgressSource)>(r0);
        return;
    }

    public void updateProgress(long, long)
    {
        sun.net.ProgressSource r0;
        long l0, l1, $l2, $l3, $l5, $l6, $l7, $l9, $l10, $l12, $l14, $l15, $l17;
        boolean $z0;
        sun.net.ProgressSource$State $r1, $r2;
        int $i4, $i8;
        byte $b11, $b13, $b16, $b18;
        sun.net.ProgressMonitor $r3;

        r0 := @this: sun.net.ProgressSource;
        l0 := @parameter0: long;
        l1 := @parameter1: long;
        $l2 = r0.<sun.net.ProgressSource: long progress>;
        r0.<sun.net.ProgressSource: long lastProgress> = $l2;
        r0.<sun.net.ProgressSource: long progress> = l0;
        r0.<sun.net.ProgressSource: long expected> = l1;
        $z0 = virtualinvoke r0.<sun.net.ProgressSource: boolean connected()>();
        if $z0 != 0 goto label0;

        $r1 = <sun.net.ProgressSource$State: sun.net.ProgressSource$State CONNECTED>;
        r0.<sun.net.ProgressSource: sun.net.ProgressSource$State state> = $r1;
        goto label1;

     label0:
        $r2 = <sun.net.ProgressSource$State: sun.net.ProgressSource$State UPDATE>;
        r0.<sun.net.ProgressSource: sun.net.ProgressSource$State state> = $r2;

     label1:
        $l3 = r0.<sun.net.ProgressSource: long lastProgress>;
        $i4 = r0.<sun.net.ProgressSource: int threshold>;
        $l5 = (long) $i4;
        $l6 = $l3 / $l5;
        $l7 = r0.<sun.net.ProgressSource: long progress>;
        $i8 = r0.<sun.net.ProgressSource: int threshold>;
        $l9 = (long) $i8;
        $l10 = $l7 / $l9;
        $b11 = $l6 cmp $l10;
        if $b11 == 0 goto label2;

        $r3 = r0.<sun.net.ProgressSource: sun.net.ProgressMonitor progressMonitor>;
        virtualinvoke $r3.<sun.net.ProgressMonitor: void updateProgress(sun.net.ProgressSource)>(r0);

     label2:
        $l12 = r0.<sun.net.ProgressSource: long expected>;
        $b13 = $l12 cmp -1L;
        if $b13 == 0 goto label3;

        $l14 = r0.<sun.net.ProgressSource: long progress>;
        $l15 = r0.<sun.net.ProgressSource: long expected>;
        $b16 = $l14 cmp $l15;
        if $b16 < 0 goto label3;

        $l17 = r0.<sun.net.ProgressSource: long progress>;
        $b18 = $l17 cmp 0L;
        if $b18 == 0 goto label3;

        virtualinvoke r0.<sun.net.ProgressSource: void close()>();

     label3:
        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        sun.net.ProgressSource r0;
        java.lang.Object $r1;

        r0 := @this: sun.net.ProgressSource;
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        return $r1;
    }

    public java.lang.String toString()
    {
        sun.net.ProgressSource r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.Class $r2;
        java.lang.String $r3, $r9, $r15, $r22;
        java.net.URL $r6;
        sun.net.ProgressSource$State $r12;
        long $l0, $l1;

        r0 := @this: sun.net.ProgressSource;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[url=");
        $r6 = r0.<sun.net.ProgressSource: java.net.URL url>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", method=");
        $r9 = r0.<sun.net.ProgressSource: java.lang.String method>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state=");
        $r12 = r0.<sun.net.ProgressSource: sun.net.ProgressSource$State state>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", content-type=");
        $r15 = r0.<sun.net.ProgressSource: java.lang.String contentType>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", progress=");
        $l0 = r0.<sun.net.ProgressSource: long progress>;
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected=");
        $l1 = r0.<sun.net.ProgressSource: long expected>;
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r22;
    }
}
