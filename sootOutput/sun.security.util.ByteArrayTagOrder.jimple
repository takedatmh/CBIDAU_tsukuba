public class sun.security.util.ByteArrayTagOrder extends java.lang.Object implements java.util.Comparator
{

    public void <init>()
    {
        sun.security.util.ByteArrayTagOrder r0;

        r0 := @this: sun.security.util.ByteArrayTagOrder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public final int compare(byte[], byte[])
    {
        sun.security.util.ByteArrayTagOrder r0;
        byte[] r1, r2;
        byte $b0, $b1, $b2, $b3;
        int $i4;

        r0 := @this: sun.security.util.ByteArrayTagOrder;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        $b0 = r1[0];
        $b1 = $b0 | 32;
        $b2 = r2[0];
        $b3 = $b2 | 32;
        $i4 = $b1 - $b3;
        return $i4;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        sun.security.util.ByteArrayTagOrder r0;
        java.lang.Object r1, r2;
        byte[] $r3, $r4;
        int $i0;

        r0 := @this: sun.security.util.ByteArrayTagOrder;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (byte[]) r1;
        $r4 = (byte[]) r2;
        $i0 = virtualinvoke r0.<sun.security.util.ByteArrayTagOrder: int compare(byte[],byte[])>($r3, $r4);
        return $i0;
    }
}
