public class sun.text.normalizer.ReplaceableString extends java.lang.Object implements sun.text.normalizer.Replaceable
{
    private java.lang.StringBuffer buf;

    public void <init>(java.lang.String)
    {
        sun.text.normalizer.ReplaceableString r0;
        java.lang.String r1;
        java.lang.StringBuffer $r2;

        r0 := @this: sun.text.normalizer.ReplaceableString;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>(r1);
        r0.<sun.text.normalizer.ReplaceableString: java.lang.StringBuffer buf> = $r2;
        return;
    }

    public void <init>(java.lang.StringBuffer)
    {
        sun.text.normalizer.ReplaceableString r0;
        java.lang.StringBuffer r1;

        r0 := @this: sun.text.normalizer.ReplaceableString;
        r1 := @parameter0: java.lang.StringBuffer;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.text.normalizer.ReplaceableString: java.lang.StringBuffer buf> = r1;
        return;
    }

    public int length()
    {
        sun.text.normalizer.ReplaceableString r0;
        java.lang.StringBuffer $r1;
        int $i0;

        r0 := @this: sun.text.normalizer.ReplaceableString;
        $r1 = r0.<sun.text.normalizer.ReplaceableString: java.lang.StringBuffer buf>;
        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();
        return $i0;
    }

    public char charAt(int)
    {
        sun.text.normalizer.ReplaceableString r0;
        int i0;
        java.lang.StringBuffer $r1;
        char $c1;

        r0 := @this: sun.text.normalizer.ReplaceableString;
        i0 := @parameter0: int;
        $r1 = r0.<sun.text.normalizer.ReplaceableString: java.lang.StringBuffer buf>;
        $c1 = virtualinvoke $r1.<java.lang.StringBuffer: char charAt(int)>(i0);
        return $c1;
    }

    public void getChars(int, int, char[], int)
    {
        sun.text.normalizer.ReplaceableString r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.StringBuffer $r2;

        r0 := @this: sun.text.normalizer.ReplaceableString;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: char[];
        i2 := @parameter3: int;
        $r2 = r0.<sun.text.normalizer.ReplaceableString: java.lang.StringBuffer buf>;
        staticinvoke <sun.text.normalizer.Utility: void getChars(java.lang.StringBuffer,int,int,char[],int)>($r2, i0, i1, r1, i2);
        return;
    }
}
