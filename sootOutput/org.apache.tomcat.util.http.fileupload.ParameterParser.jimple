public class org.apache.tomcat.util.http.fileupload.ParameterParser extends java.lang.Object
{
    private char[] chars;
    private int pos;
    private int len;
    private int i1;
    private int i2;
    private boolean lowerCaseNames;

    public void <init>()
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: char[] chars> = null;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos> = 0;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int len> = 0;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1> = 0;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2> = 0;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean lowerCaseNames> = 0;
        return;
    }

    private boolean hasChar()
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        int $i0, $i1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        $i0 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        $i1 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int len>;
        if $i0 >= $i1 goto label0;

        return 1;

     label0:
        return 0;
    }

    private java.lang.String getToken(boolean)
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        boolean z0, $z1, $z2;
        java.lang.String r2, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        char[] $r3, $r5, $r6, $r7, $r11;
        char $c5, $c12, $c17, $c20;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        z0 := @parameter0: boolean;
        goto label1;

     label0:
        $i0 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1>;
        $i1 = $i0 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1> = $i1;

     label1:
        $i2 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1>;
        $i3 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        if $i2 >= $i3 goto label3;

        $r3 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: char[] chars>;
        $i4 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1>;
        $c5 = $r3[$i4];
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5);
        if $z1 != 0 goto label0;

        goto label3;

     label2:
        $i6 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        $i7 = $i6 - 1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2> = $i7;

     label3:
        $i8 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        $i9 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1>;
        if $i8 <= $i9 goto label4;

        $r5 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: char[] chars>;
        $i10 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        $i11 = $i10 - 1;
        $c12 = $r5[$i11];
        $z2 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c12);
        if $z2 != 0 goto label2;

     label4:
        if z0 == 0 goto label5;

        $i13 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        $i14 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1>;
        $i15 = $i13 - $i14;
        if $i15 < 2 goto label5;

        $r6 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: char[] chars>;
        $i16 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1>;
        $c17 = $r6[$i16];
        if $c17 != 34 goto label5;

        $r7 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: char[] chars>;
        $i18 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        $i19 = $i18 - 1;
        $c20 = $r7[$i19];
        if $c20 != 34 goto label5;

        $i21 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1>;
        $i22 = $i21 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1> = $i22;
        $i23 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        $i24 = $i23 - 1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2> = $i24;

     label5:
        r2 = null;
        $i25 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        $i26 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1>;
        if $i25 <= $i26 goto label6;

        $r10 = new java.lang.String;
        $r11 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: char[] chars>;
        $i27 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1>;
        $i28 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        $i29 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1>;
        $i30 = $i28 - $i29;
        specialinvoke $r10.<java.lang.String: void <init>(char[],int,int)>($r11, $i27, $i30);
        r2 = $r10;

     label6:
        return r2;
    }

    private boolean isOneOf(char, char[])
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        char c0, c3;
        char[] r1, r2;
        boolean z0;
        int i1, i2;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        c0 := @parameter0: char;
        r1 := @parameter1: char[];
        z0 = 0;
        r2 = r1;
        i1 = lengthof r1;
        i2 = 0;
        goto label2;

     label0:
        c3 = r2[i2];
        if c0 != c3 goto label1;

        z0 = 1;
        goto label3;

     label1:
        i2 = i2 + 1;

     label2:
        if i2 < i1 goto label0;

     label3:
        return z0;
    }

    private java.lang.String parseToken(char[])
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        char[] r1, $r2;
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;
        java.lang.String $r5;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        r1 := @parameter0: char[];
        $i1 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1> = $i1;
        $i2 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2> = $i2;
        goto label2;

     label0:
        $r2 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: char[] chars>;
        $i3 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        c0 = $r2[$i3];
        $z0 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean isOneOf(char,char[])>(c0, r1);
        if $z0 == 0 goto label1;

        goto label3;

     label1:
        $i4 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        $i5 = $i4 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2> = $i5;
        $i6 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        $i7 = $i6 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos> = $i7;

     label2:
        $z1 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean hasChar()>();
        if $z1 != 0 goto label0;

     label3:
        $r5 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: java.lang.String getToken(boolean)>(0);
        return $r5;
    }

    private java.lang.String parseQuotedToken(char[])
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        char[] r1, $r2;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r5;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        r1 := @parameter0: char[];
        $i1 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i1> = $i1;
        $i2 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2> = $i2;
        z0 = 0;
        z1 = 0;
        goto label7;

     label0:
        $r2 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: char[] chars>;
        $i3 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        c0 = $r2[$i3];
        if z0 != 0 goto label1;

        $z2 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean isOneOf(char,char[])>(c0, r1);
        if $z2 == 0 goto label1;

        goto label8;

     label1:
        if z1 != 0 goto label4;

        if c0 != 34 goto label4;

        if z0 == 0 goto label2;

        $z3 = 0;
        goto label3;

     label2:
        $z3 = 1;

     label3:
        z0 = $z3;

     label4:
        if z1 != 0 goto label5;

        if c0 != 92 goto label5;

        $z4 = 1;
        goto label6;

     label5:
        $z4 = 0;

     label6:
        z1 = $z4;
        $i4 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2>;
        $i5 = $i4 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int i2> = $i5;
        $i6 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        $i7 = $i6 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos> = $i7;

     label7:
        $z5 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean hasChar()>();
        if $z5 != 0 goto label0;

     label8:
        $r5 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: java.lang.String getToken(boolean)>(1);
        return $r5;
    }

    public boolean isLowerCaseNames()
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        $z0 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean lowerCaseNames>;
        return $z0;
    }

    public void setLowerCaseNames(boolean)
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        z0 := @parameter0: boolean;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean lowerCaseNames> = z0;
        return;
    }

    public java.util.Map parse(java.lang.String, char[])
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        java.lang.String r1;
        char[] r2, r3;
        char c0, c4;
        int i1, i2, i3, i5, $i6;
        java.util.HashMap $r4;
        java.util.Map $r6;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: char[];
        if r2 == null goto label0;

        $i6 = lengthof r2;
        if $i6 != 0 goto label1;

     label0:
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        return $r4;

     label1:
        c0 = r2[0];
        if r1 == null goto label5;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();
        r3 = r2;
        i2 = lengthof r2;
        i3 = 0;
        goto label4;

     label2:
        c4 = r3[i3];
        i5 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(c4);
        if i5 == -1 goto label3;

        if i5 >= i1 goto label3;

        i1 = i5;
        c0 = c4;

     label3:
        i3 = i3 + 1;

     label4:
        if i3 < i2 goto label2;

     label5:
        $r6 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: java.util.Map parse(java.lang.String,char)>(r1, c0);
        return $r6;
    }

    public java.util.Map parse(java.lang.String, char)
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        java.lang.String r1;
        char c0;
        java.util.HashMap $r2;
        char[] $r3;
        java.util.Map $r4;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        r1 := @parameter0: java.lang.String;
        c0 := @parameter1: char;
        if r1 != null goto label0;

        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        return $r2;

     label0:
        $r3 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
        $r4 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: java.util.Map parse(char[],char)>($r3, c0);
        return $r4;
    }

    public java.util.Map parse(char[], char)
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        char[] r1;
        char c0;
        java.util.HashMap $r2;
        int $i1;
        java.util.Map $r3;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        r1 := @parameter0: char[];
        c0 := @parameter1: char;
        if r1 != null goto label0;

        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        return $r2;

     label0:
        $i1 = lengthof r1;
        $r3 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: java.util.Map parse(char[],int,int,char)>(r1, 0, $i1, c0);
        return $r3;
    }

    public java.util.Map parse(char[], int, int, char)
    {
        org.apache.tomcat.util.http.fileupload.ParameterParser r0;
        char[] r1, $r6, $r10;
        int i0, i1, $i3, $i5, $i6, $i7, $i9, $i10, $i11;
        char c2, $c4, $c8;
        java.util.HashMap r2, $r4, $r5;
        null_type n0, n1;
        java.io.UnsupportedEncodingException r3, $r11;
        java.lang.String r7, r8;
        boolean $z0, $z1, $z2, $z3;
        java.util.Locale $r13;

        r0 := @this: org.apache.tomcat.util.http.fileupload.ParameterParser;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        c2 := @parameter3: char;
        if r1 != null goto label0;

        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        return $r4;

     label0:
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>()>();
        r2 = $r5;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: char[] chars> = r1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos> = i0;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int len> = i1;
        n0 = null;
        n1 = null;
        goto label8;

     label1:
        $r6 = newarray (char)[2];
        $r6[0] = 61;
        $r6[1] = c2;
        r7 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: java.lang.String parseToken(char[])>($r6);
        r8 = null;
        $z0 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean hasChar()>();
        if $z0 == 0 goto label5;

        $i3 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        $c4 = r1[$i3];
        if $c4 != 61 goto label5;

        $i5 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        $i6 = $i5 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos> = $i6;
        $r10 = newarray (char)[1];
        $r10[0] = c2;
        r8 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: java.lang.String parseQuotedToken(char[])>($r10);
        if r8 == null goto label5;

     label2:
        r8 = staticinvoke <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.lang.String decodeText(java.lang.String)>(r8);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;
        r3 = $r11;

     label5:
        $z1 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean hasChar()>();
        if $z1 == 0 goto label6;

        $i7 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        $c8 = r1[$i7];
        if $c8 != c2 goto label6;

        $i9 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos>;
        $i10 = $i9 + 1;
        r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: int pos> = $i10;

     label6:
        if r7 == null goto label8;

        $i11 = virtualinvoke r7.<java.lang.String: int length()>();
        if $i11 <= 0 goto label8;

        $z2 = r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean lowerCaseNames>;
        if $z2 == 0 goto label7;

        $r13 = <java.util.Locale: java.util.Locale ENGLISH>;
        r7 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13);

     label7:
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8);

     label8:
        $z3 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.ParameterParser: boolean hasChar()>();
        if $z3 != 0 goto label1;

        return r2;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }
}
