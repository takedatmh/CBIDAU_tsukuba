class java.util.logging.LogManager$2 extends java.lang.Object implements java.security.PrivilegedExceptionAction
{
    final java.util.logging.LogManager this$0;

    void <init>(java.util.logging.LogManager)
    {
        java.util.logging.LogManager$2 r0;
        java.util.logging.LogManager r1;

        r0 := @this: java.util.logging.LogManager$2;
        r1 := @parameter0: java.util.logging.LogManager;
        r0.<java.util.logging.LogManager$2: java.util.logging.LogManager this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run() throws java.lang.Exception
    {
        java.util.logging.LogManager$2 r0;
        java.util.logging.LogManager $r1;

        r0 := @this: java.util.logging.LogManager$2;
        $r1 = r0.<java.util.logging.LogManager$2: java.util.logging.LogManager this$0>;
        virtualinvoke $r1.<java.util.logging.LogManager: void readConfiguration()>();
        staticinvoke <sun.util.logging.PlatformLogger: void redirectPlatformLoggers()>();
        return null;
    }

    public volatile java.lang.Object run() throws java.lang.Exception
    {
        java.util.logging.LogManager$2 r0;
        java.lang.Void $r1;

        r0 := @this: java.util.logging.LogManager$2;
        $r1 = virtualinvoke r0.<java.util.logging.LogManager$2: java.lang.Void run()>();
        return $r1;
    }
}
