public class sun.security.krb5.internal.ccache.CCacheOutputStream extends sun.security.krb5.internal.util.KrbDataOutputStream implements sun.security.krb5.internal.ccache.FileCCacheConstants
{

    public void <init>(java.io.OutputStream)
    {
        sun.security.krb5.internal.ccache.CCacheOutputStream r0;
        java.io.OutputStream r1;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheOutputStream;
        r1 := @parameter0: java.io.OutputStream;
        specialinvoke r0.<sun.security.krb5.internal.util.KrbDataOutputStream: void <init>(java.io.OutputStream)>(r1);
        return;
    }

    public void writeHeader(sun.security.krb5.PrincipalName, int) throws java.io.IOException
    {
        sun.security.krb5.internal.ccache.CCacheOutputStream r0;
        sun.security.krb5.PrincipalName r1;
        int i0, $i1, $i2, $i3;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheOutputStream;
        r1 := @parameter0: sun.security.krb5.PrincipalName;
        i0 := @parameter1: int;
        $i1 = i0 & 65280;
        $i2 = $i1 >> 8;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write(int)>($i2);
        $i3 = i0 & 255;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write(int)>($i3);
        virtualinvoke r1.<sun.security.krb5.PrincipalName: void writePrincipal(sun.security.krb5.internal.ccache.CCacheOutputStream)>(r0);
        return;
    }

    public void addCreds(sun.security.krb5.internal.ccache.Credentials) throws java.io.IOException, sun.security.krb5.Asn1Exception
    {
        sun.security.krb5.internal.ccache.CCacheOutputStream r0;
        sun.security.krb5.internal.ccache.Credentials r1;
        sun.security.krb5.PrincipalName $r2, $r3;
        sun.security.krb5.EncryptionKey $r4;
        sun.security.krb5.internal.KerberosTime $r5, $r6, $r7, $r8, $r9, $r10;
        long $l0, $l1, $l3, $l4, $l6, $l7, $l9, $l10;
        int $i2, $i5, $i8, $i11;
        boolean $z0;
        sun.security.krb5.internal.TicketFlags $r11;
        sun.security.krb5.internal.HostAddresses $r12, $r13;
        sun.security.krb5.internal.AuthorizationData $r14, $r15;
        sun.security.krb5.internal.Ticket $r16, $r17;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheOutputStream;
        r1 := @parameter0: sun.security.krb5.internal.ccache.Credentials;
        $r2 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.PrincipalName cname>;
        virtualinvoke $r2.<sun.security.krb5.PrincipalName: void writePrincipal(sun.security.krb5.internal.ccache.CCacheOutputStream)>(r0);
        $r3 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.PrincipalName sname>;
        virtualinvoke $r3.<sun.security.krb5.PrincipalName: void writePrincipal(sun.security.krb5.internal.ccache.CCacheOutputStream)>(r0);
        $r4 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.EncryptionKey key>;
        virtualinvoke $r4.<sun.security.krb5.EncryptionKey: void writeKey(sun.security.krb5.internal.ccache.CCacheOutputStream)>(r0);
        $r5 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.KerberosTime authtime>;
        $l0 = virtualinvoke $r5.<sun.security.krb5.internal.KerberosTime: long getTime()>();
        $l1 = $l0 / 1000L;
        $i2 = (int) $l1;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>($i2);
        $r6 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.KerberosTime starttime>;
        if $r6 == null goto label0;

        $r7 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.KerberosTime starttime>;
        $l3 = virtualinvoke $r7.<sun.security.krb5.internal.KerberosTime: long getTime()>();
        $l4 = $l3 / 1000L;
        $i5 = (int) $l4;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>($i5);
        goto label1;

     label0:
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>(0);

     label1:
        $r8 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.KerberosTime endtime>;
        $l6 = virtualinvoke $r8.<sun.security.krb5.internal.KerberosTime: long getTime()>();
        $l7 = $l6 / 1000L;
        $i8 = (int) $l7;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>($i8);
        $r9 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.KerberosTime renewTill>;
        if $r9 == null goto label2;

        $r10 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.KerberosTime renewTill>;
        $l9 = virtualinvoke $r10.<sun.security.krb5.internal.KerberosTime: long getTime()>();
        $l10 = $l9 / 1000L;
        $i11 = (int) $l10;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>($i11);
        goto label3;

     label2:
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>(0);

     label3:
        $z0 = r1.<sun.security.krb5.internal.ccache.Credentials: boolean isEncInSKey>;
        if $z0 == 0 goto label4;

        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write8(int)>(1);
        goto label5;

     label4:
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write8(int)>(0);

     label5:
        $r11 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void writeFlags(sun.security.krb5.internal.TicketFlags)>($r11);
        $r12 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.HostAddresses caddr>;
        if $r12 != null goto label6;

        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>(0);
        goto label7;

     label6:
        $r13 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.HostAddresses caddr>;
        virtualinvoke $r13.<sun.security.krb5.internal.HostAddresses: void writeAddrs(sun.security.krb5.internal.ccache.CCacheOutputStream)>(r0);

     label7:
        $r14 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.AuthorizationData authorizationData>;
        if $r14 != null goto label8;

        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>(0);
        goto label9;

     label8:
        $r15 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.AuthorizationData authorizationData>;
        virtualinvoke $r15.<sun.security.krb5.internal.AuthorizationData: void writeAuth(sun.security.krb5.internal.ccache.CCacheOutputStream)>(r0);

     label9:
        $r16 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.Ticket ticket>;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void writeTicket(sun.security.krb5.internal.Ticket)>($r16);
        $r17 = r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.internal.Ticket secondTicket>;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void writeTicket(sun.security.krb5.internal.Ticket)>($r17);
        return;
    }

    void writeTicket(sun.security.krb5.internal.Ticket) throws java.io.IOException, sun.security.krb5.Asn1Exception
    {
        sun.security.krb5.internal.ccache.CCacheOutputStream r0;
        sun.security.krb5.internal.Ticket r1;
        byte[] r2;
        int $i0, $i1;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheOutputStream;
        r1 := @parameter0: sun.security.krb5.internal.Ticket;
        if r1 != null goto label0;

        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>(0);
        goto label1;

     label0:
        r2 = virtualinvoke r1.<sun.security.krb5.internal.Ticket: byte[] asn1Encode()>();
        $i0 = lengthof r2;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>($i0);
        $i1 = lengthof r2;
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write(byte[],int,int)>(r2, 0, $i1);

     label1:
        return;
    }

    void writeFlags(sun.security.krb5.internal.TicketFlags) throws java.io.IOException
    {
        sun.security.krb5.internal.ccache.CCacheOutputStream r0;
        sun.security.krb5.internal.TicketFlags r1;
        int i0;
        boolean[] r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheOutputStream;
        r1 := @parameter0: sun.security.krb5.internal.TicketFlags;
        i0 = 0;
        r2 = virtualinvoke r1.<sun.security.krb5.internal.TicketFlags: boolean[] toBooleanArray()>();
        $z0 = r2[1];
        if $z0 != 1 goto label0;

        i0 = i0 | 1073741824;

     label0:
        $z1 = r2[2];
        if $z1 != 1 goto label1;

        i0 = i0 | 536870912;

     label1:
        $z2 = r2[3];
        if $z2 != 1 goto label2;

        i0 = i0 | 268435456;

     label2:
        $z3 = r2[4];
        if $z3 != 1 goto label3;

        i0 = i0 | 134217728;

     label3:
        $z4 = r2[5];
        if $z4 != 1 goto label4;

        i0 = i0 | 67108864;

     label4:
        $z5 = r2[6];
        if $z5 != 1 goto label5;

        i0 = i0 | 33554432;

     label5:
        $z6 = r2[7];
        if $z6 != 1 goto label6;

        i0 = i0 | 16777216;

     label6:
        $z7 = r2[8];
        if $z7 != 1 goto label7;

        i0 = i0 | 8388608;

     label7:
        $z8 = r2[9];
        if $z8 != 1 goto label8;

        i0 = i0 | 4194304;

     label8:
        $z9 = r2[10];
        if $z9 != 1 goto label9;

        i0 = i0 | 2097152;

     label9:
        $z10 = r2[11];
        if $z10 != 1 goto label10;

        i0 = i0 | 1048576;

     label10:
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>(i0);
        return;
    }
}
