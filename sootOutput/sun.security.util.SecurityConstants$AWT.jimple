public class sun.security.util.SecurityConstants$AWT extends java.lang.Object
{
    private static final java.lang.String AWTFactory;
    private static final sun.security.util.PermissionFactory factory;
    public static final java.security.Permission TOPLEVEL_WINDOW_PERMISSION;
    public static final java.security.Permission ACCESS_CLIPBOARD_PERMISSION;
    public static final java.security.Permission CHECK_AWT_EVENTQUEUE_PERMISSION;
    public static final java.security.Permission TOOLKIT_MODALITY_PERMISSION;
    public static final java.security.Permission READ_DISPLAY_PIXELS_PERMISSION;
    public static final java.security.Permission CREATE_ROBOT_PERMISSION;
    public static final java.security.Permission WATCH_MOUSE_PERMISSION;
    public static final java.security.Permission SET_WINDOW_ALWAYS_ON_TOP_PERMISSION;
    public static final java.security.Permission ALL_AWT_EVENTS_PERMISSION;
    public static final java.security.Permission ACCESS_SYSTEM_TRAY_PERMISSION;

    private void <init>()
    {
        sun.security.util.SecurityConstants$AWT r0;

        r0 := @this: sun.security.util.SecurityConstants$AWT;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static sun.security.util.PermissionFactory permissionFactory()
    {
        sun.security.util.SecurityConstants$AWT$1 $r0;
        java.lang.Class r1;
        java.lang.InstantiationException r2, $r6;
        java.lang.Object $r3, $r4;
        sun.security.util.PermissionFactory $r5;
        java.lang.InternalError $r7, $r11;
        java.lang.String $r8, $r12;
        java.lang.IllegalAccessException $r9, r10;
        sun.security.util.SecurityConstants$FakeAWTPermissionFactory $r13;

        $r0 = new sun.security.util.SecurityConstants$AWT$1;
        specialinvoke $r0.<sun.security.util.SecurityConstants$AWT$1: void <init>()>();
        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        r1 = (java.lang.Class) $r3;
        if r1 == null goto label4;

     label0:
        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>();
        $r5 = (sun.security.util.PermissionFactory) $r4;

     label1:
        return $r5;

     label2:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = new java.lang.InternalError;
        $r8 = virtualinvoke r2.<java.lang.InstantiationException: java.lang.String getMessage()>();
        specialinvoke $r7.<java.lang.InternalError: void <init>(java.lang.String)>($r8);
        throw $r7;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = new java.lang.InternalError;
        $r12 = virtualinvoke r10.<java.lang.IllegalAccessException: java.lang.String getMessage()>();
        specialinvoke $r11.<java.lang.InternalError: void <init>(java.lang.String)>($r12);
        throw $r11;

     label4:
        $r13 = new sun.security.util.SecurityConstants$FakeAWTPermissionFactory;
        specialinvoke $r13.<sun.security.util.SecurityConstants$FakeAWTPermissionFactory: void <init>(sun.security.util.SecurityConstants$1)>(null);
        return $r13;

        catch java.lang.InstantiationException from label0 to label1 with label2;
        catch java.lang.IllegalAccessException from label0 to label1 with label3;
    }

    private static java.security.Permission newAWTPermission(java.lang.String)
    {
        java.lang.String r0;
        sun.security.util.PermissionFactory $r1;
        java.security.Permission $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = <sun.security.util.SecurityConstants$AWT: sun.security.util.PermissionFactory factory>;
        $r2 = interfaceinvoke $r1.<sun.security.util.PermissionFactory: java.security.Permission newPermission(java.lang.String)>(r0);
        return $r2;
    }

    static void <clinit>()
    {
        sun.security.util.PermissionFactory $r0;
        java.security.Permission $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = staticinvoke <sun.security.util.SecurityConstants$AWT: sun.security.util.PermissionFactory permissionFactory()>();
        <sun.security.util.SecurityConstants$AWT: sun.security.util.PermissionFactory factory> = $r0;
        $r1 = staticinvoke <sun.security.util.SecurityConstants$AWT: java.security.Permission newAWTPermission(java.lang.String)>("showWindowWithoutWarningBanner");
        <sun.security.util.SecurityConstants$AWT: java.security.Permission TOPLEVEL_WINDOW_PERMISSION> = $r1;
        $r2 = staticinvoke <sun.security.util.SecurityConstants$AWT: java.security.Permission newAWTPermission(java.lang.String)>("accessClipboard");
        <sun.security.util.SecurityConstants$AWT: java.security.Permission ACCESS_CLIPBOARD_PERMISSION> = $r2;
        $r3 = staticinvoke <sun.security.util.SecurityConstants$AWT: java.security.Permission newAWTPermission(java.lang.String)>("accessEventQueue");
        <sun.security.util.SecurityConstants$AWT: java.security.Permission CHECK_AWT_EVENTQUEUE_PERMISSION> = $r3;
        $r4 = staticinvoke <sun.security.util.SecurityConstants$AWT: java.security.Permission newAWTPermission(java.lang.String)>("toolkitModality");
        <sun.security.util.SecurityConstants$AWT: java.security.Permission TOOLKIT_MODALITY_PERMISSION> = $r4;
        $r5 = staticinvoke <sun.security.util.SecurityConstants$AWT: java.security.Permission newAWTPermission(java.lang.String)>("readDisplayPixels");
        <sun.security.util.SecurityConstants$AWT: java.security.Permission READ_DISPLAY_PIXELS_PERMISSION> = $r5;
        $r6 = staticinvoke <sun.security.util.SecurityConstants$AWT: java.security.Permission newAWTPermission(java.lang.String)>("createRobot");
        <sun.security.util.SecurityConstants$AWT: java.security.Permission CREATE_ROBOT_PERMISSION> = $r6;
        $r7 = staticinvoke <sun.security.util.SecurityConstants$AWT: java.security.Permission newAWTPermission(java.lang.String)>("watchMousePointer");
        <sun.security.util.SecurityConstants$AWT: java.security.Permission WATCH_MOUSE_PERMISSION> = $r7;
        $r8 = staticinvoke <sun.security.util.SecurityConstants$AWT: java.security.Permission newAWTPermission(java.lang.String)>("setWindowAlwaysOnTop");
        <sun.security.util.SecurityConstants$AWT: java.security.Permission SET_WINDOW_ALWAYS_ON_TOP_PERMISSION> = $r8;
        $r9 = staticinvoke <sun.security.util.SecurityConstants$AWT: java.security.Permission newAWTPermission(java.lang.String)>("listenToAllAWTEvents");
        <sun.security.util.SecurityConstants$AWT: java.security.Permission ALL_AWT_EVENTS_PERMISSION> = $r9;
        $r10 = staticinvoke <sun.security.util.SecurityConstants$AWT: java.security.Permission newAWTPermission(java.lang.String)>("accessSystemTray");
        <sun.security.util.SecurityConstants$AWT: java.security.Permission ACCESS_SYSTEM_TRAY_PERMISSION> = $r10;
        return;
    }
}
