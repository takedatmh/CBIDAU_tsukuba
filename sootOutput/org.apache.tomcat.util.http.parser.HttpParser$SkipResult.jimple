final enum class org.apache.tomcat.util.http.parser.HttpParser$SkipResult extends java.lang.Enum
{
    public static final enum org.apache.tomcat.util.http.parser.HttpParser$SkipResult FOUND;
    public static final enum org.apache.tomcat.util.http.parser.HttpParser$SkipResult NOT_FOUND;
    public static final enum org.apache.tomcat.util.http.parser.HttpParser$SkipResult EOF;
    private static final org.apache.tomcat.util.http.parser.HttpParser$SkipResult[] ENUM$VALUES;

    static void <clinit>()
    {
        org.apache.tomcat.util.http.parser.HttpParser$SkipResult $r0, $r1, $r2, $r4, $r5, $r6;
        org.apache.tomcat.util.http.parser.HttpParser$SkipResult[] $r3;

        $r0 = new org.apache.tomcat.util.http.parser.HttpParser$SkipResult;
        specialinvoke $r0.<org.apache.tomcat.util.http.parser.HttpParser$SkipResult: void <init>(java.lang.String,int)>("FOUND", 0);
        <org.apache.tomcat.util.http.parser.HttpParser$SkipResult: org.apache.tomcat.util.http.parser.HttpParser$SkipResult FOUND> = $r0;
        $r1 = new org.apache.tomcat.util.http.parser.HttpParser$SkipResult;
        specialinvoke $r1.<org.apache.tomcat.util.http.parser.HttpParser$SkipResult: void <init>(java.lang.String,int)>("NOT_FOUND", 1);
        <org.apache.tomcat.util.http.parser.HttpParser$SkipResult: org.apache.tomcat.util.http.parser.HttpParser$SkipResult NOT_FOUND> = $r1;
        $r2 = new org.apache.tomcat.util.http.parser.HttpParser$SkipResult;
        specialinvoke $r2.<org.apache.tomcat.util.http.parser.HttpParser$SkipResult: void <init>(java.lang.String,int)>("EOF", 2);
        <org.apache.tomcat.util.http.parser.HttpParser$SkipResult: org.apache.tomcat.util.http.parser.HttpParser$SkipResult EOF> = $r2;
        $r3 = newarray (org.apache.tomcat.util.http.parser.HttpParser$SkipResult)[3];
        $r4 = <org.apache.tomcat.util.http.parser.HttpParser$SkipResult: org.apache.tomcat.util.http.parser.HttpParser$SkipResult FOUND>;
        $r3[0] = $r4;
        $r5 = <org.apache.tomcat.util.http.parser.HttpParser$SkipResult: org.apache.tomcat.util.http.parser.HttpParser$SkipResult NOT_FOUND>;
        $r3[1] = $r5;
        $r6 = <org.apache.tomcat.util.http.parser.HttpParser$SkipResult: org.apache.tomcat.util.http.parser.HttpParser$SkipResult EOF>;
        $r3[2] = $r6;
        <org.apache.tomcat.util.http.parser.HttpParser$SkipResult: org.apache.tomcat.util.http.parser.HttpParser$SkipResult[] ENUM$VALUES> = $r3;
        return;
    }

    private void <init>(java.lang.String, int)
    {
        org.apache.tomcat.util.http.parser.HttpParser$SkipResult r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.apache.tomcat.util.http.parser.HttpParser$SkipResult;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    public static org.apache.tomcat.util.http.parser.HttpParser$SkipResult[] values()
    {
        org.apache.tomcat.util.http.parser.HttpParser$SkipResult[] $r0, r1, r2, $r3;
        int i0, $i1;

        $r0 = <org.apache.tomcat.util.http.parser.HttpParser$SkipResult: org.apache.tomcat.util.http.parser.HttpParser$SkipResult[] ENUM$VALUES>;
        r1 = $r0;
        $i1 = lengthof r1;
        i0 = $i1;
        $r3 = newarray (org.apache.tomcat.util.http.parser.HttpParser$SkipResult)[$i1];
        r2 = $r3;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r3, 0, i0);
        return r2;
    }

    public static org.apache.tomcat.util.http.parser.HttpParser$SkipResult valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.tomcat.util.http.parser.HttpParser$SkipResult $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/tomcat/util/http/parser/HttpParser$SkipResult", r0);
        $r2 = (org.apache.tomcat.util.http.parser.HttpParser$SkipResult) $r1;
        return $r2;
    }
}
