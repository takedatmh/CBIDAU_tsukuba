final class sun.security.provider.ByteArrayAccess extends java.lang.Object
{
    private static final sun.misc.Unsafe unsafe;
    private static final boolean littleEndianUnaligned;
    private static final boolean bigEndian;
    private static final int byteArrayOfs;

    private void <init>()
    {
        sun.security.provider.ByteArrayAccess r0;

        r0 := @this: sun.security.provider.ByteArrayAccess;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static boolean unaligned()
    {
        sun.security.action.GetPropertyAction $r0;
        java.lang.String r1;
        java.lang.Object $r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        $r0 = new sun.security.action.GetPropertyAction;
        specialinvoke $r0.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>("os.arch", "");
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        r1 = (java.lang.String) $r2;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("i386");
        if $z0 != 0 goto label0;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("x86");
        if $z1 != 0 goto label0;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("amd64");
        if $z2 != 0 goto label0;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("x86_64");
        if $z3 == 0 goto label1;

     label0:
        $z4 = 1;
        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;
    }

    static void b2iLittle(byte[], int, int[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, $i13, $i14, $i15, i16, i17, $i18, $i20, $i21, i22, $i23, $i26, $i29, $i30, $i31, $i34, $i35, $i36, $i38, $i39;
        int[] r1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        boolean $z0, $z1;
        sun.misc.Unsafe $r3, $r4;
        long $l12, $l19;
        byte $b24, $b27, $b32, $b37;
        short $s25, $s28, $s33;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        r1 := @parameter2: int[];
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        if i0 < 0 goto label0;

        $i3 = lengthof r0;
        $i4 = $i3 - i0;
        if $i4 < i2 goto label0;

        if i1 < 0 goto label0;

        $i5 = lengthof r1;
        $i6 = $i5 - i1;
        $i7 = i2 / 4;
        if $i6 >= $i7 goto label1;

     label0:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label1:
        $z0 = <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned>;
        if $z0 == 0 goto label3;

        $i8 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i9 = i0 + $i8;
        i10 = i2 + i9;

     label2:
        if i9 >= i10 goto label7;

        $i11 = i1;
        i1 = i1 + 1;
        $r3 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l12 = (long) i9;
        $i13 = virtualinvoke $r3.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l12);
        r1[$i11] = $i13;
        i9 = i9 + 4;
        goto label2;

     label3:
        $z1 = <sun.security.provider.ByteArrayAccess: boolean bigEndian>;
        if $z1 == 0 goto label5;

        $i14 = i0 & 3;
        if $i14 != 0 goto label5;

        $i15 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i16 = i0 + $i15;
        i17 = i2 + i16;

     label4:
        if i16 >= i17 goto label7;

        $i18 = i1;
        i1 = i1 + 1;
        $r4 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l19 = (long) i16;
        $i20 = virtualinvoke $r4.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l19);
        $i21 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i20);
        r1[$i18] = $i21;
        i16 = i16 + 4;
        goto label4;

     label5:
        i22 = i2 + i0;

     label6:
        if i0 >= i22 goto label7;

        $i23 = i1;
        i1 = i1 + 1;
        $b24 = r0[i0];
        $s25 = $b24 & 255;
        $i26 = i0 + 1;
        $b27 = r0[$i26];
        $s28 = $b27 & 255;
        $i29 = $s28 << 8;
        $i30 = $s25 | $i29;
        $i31 = i0 + 2;
        $b32 = r0[$i31];
        $s33 = $b32 & 255;
        $i34 = $s33 << 16;
        $i35 = $i30 | $i34;
        $i36 = i0 + 3;
        $b37 = r0[$i36];
        $i38 = $b37 << 24;
        $i39 = $i35 | $i38;
        r1[$i23] = $i39;
        i0 = i0 + 4;
        goto label6;

     label7:
        return;
    }

    static void b2iLittle64(byte[], int, int[])
    {
        byte[] r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i7, $i8, $i10, $i11, $i13, $i14, $i16, $i17, $i19, $i20, $i22, $i23, $i25, $i26, $i28, $i29, $i31, $i32, $i34, $i35, $i37, $i38, $i40, $i41, $i43, $i44, $i46, $i47, $i49, $i50, $i52, $i53, $i54, i55, $i57, $i58, $i59, $i61, $i62, $i63, $i65, $i66, $i67, $i69, $i70, $i71, $i73, $i74, $i75, $i77, $i78, $i79, $i81, $i82, $i83, $i85, $i86, $i87, $i89, $i90, $i91, $i93, $i94, $i95, $i97, $i98, $i99, $i101, $i102, $i103, $i105, $i106, $i107, $i109, $i110, $i111, $i113, $i114, $i115, $i117, $i118;
        int[] r1;
        sun.misc.Unsafe $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        boolean $z0, $z1;
        long $l6, $l9, $l12, $l15, $l18, $l21, $l24, $l27, $l30, $l33, $l36, $l39, $l42, $l45, $l48, $l51, $l56, $l60, $l64, $l68, $l72, $l76, $l80, $l84, $l88, $l92, $l96, $l100, $l104, $l108, $l112, $l116;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        r1 := @parameter2: int[];
        if i0 < 0 goto label0;

        $i1 = lengthof r0;
        $i2 = $i1 - i0;
        if $i2 < 64 goto label0;

        $i3 = lengthof r1;
        if $i3 >= 16 goto label1;

     label0:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r3;

     label1:
        $z0 = <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned>;
        if $z0 == 0 goto label2;

        $i4 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i5 = i0 + $i4;
        $r2 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l6 = (long) i5;
        $i7 = virtualinvoke $r2.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l6);
        r1[0] = $i7;
        $r4 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i8 = i5 + 4;
        $l9 = (long) $i8;
        $i10 = virtualinvoke $r4.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l9);
        r1[1] = $i10;
        $r5 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i11 = i5 + 8;
        $l12 = (long) $i11;
        $i13 = virtualinvoke $r5.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l12);
        r1[2] = $i13;
        $r6 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i14 = i5 + 12;
        $l15 = (long) $i14;
        $i16 = virtualinvoke $r6.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l15);
        r1[3] = $i16;
        $r7 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i17 = i5 + 16;
        $l18 = (long) $i17;
        $i19 = virtualinvoke $r7.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l18);
        r1[4] = $i19;
        $r8 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i20 = i5 + 20;
        $l21 = (long) $i20;
        $i22 = virtualinvoke $r8.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l21);
        r1[5] = $i22;
        $r9 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i23 = i5 + 24;
        $l24 = (long) $i23;
        $i25 = virtualinvoke $r9.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l24);
        r1[6] = $i25;
        $r10 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i26 = i5 + 28;
        $l27 = (long) $i26;
        $i28 = virtualinvoke $r10.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l27);
        r1[7] = $i28;
        $r11 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i29 = i5 + 32;
        $l30 = (long) $i29;
        $i31 = virtualinvoke $r11.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l30);
        r1[8] = $i31;
        $r12 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i32 = i5 + 36;
        $l33 = (long) $i32;
        $i34 = virtualinvoke $r12.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l33);
        r1[9] = $i34;
        $r13 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i35 = i5 + 40;
        $l36 = (long) $i35;
        $i37 = virtualinvoke $r13.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l36);
        r1[10] = $i37;
        $r14 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i38 = i5 + 44;
        $l39 = (long) $i38;
        $i40 = virtualinvoke $r14.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l39);
        r1[11] = $i40;
        $r15 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i41 = i5 + 48;
        $l42 = (long) $i41;
        $i43 = virtualinvoke $r15.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l42);
        r1[12] = $i43;
        $r16 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i44 = i5 + 52;
        $l45 = (long) $i44;
        $i46 = virtualinvoke $r16.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l45);
        r1[13] = $i46;
        $r17 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i47 = i5 + 56;
        $l48 = (long) $i47;
        $i49 = virtualinvoke $r17.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l48);
        r1[14] = $i49;
        $r18 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i50 = i5 + 60;
        $l51 = (long) $i50;
        $i52 = virtualinvoke $r18.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l51);
        r1[15] = $i52;
        goto label4;

     label2:
        $z1 = <sun.security.provider.ByteArrayAccess: boolean bigEndian>;
        if $z1 == 0 goto label3;

        $i53 = i0 & 3;
        if $i53 != 0 goto label3;

        $i54 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i55 = i0 + $i54;
        $r19 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l56 = (long) i55;
        $i57 = virtualinvoke $r19.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l56);
        $i58 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i57);
        r1[0] = $i58;
        $r20 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i59 = i55 + 4;
        $l60 = (long) $i59;
        $i61 = virtualinvoke $r20.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l60);
        $i62 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i61);
        r1[1] = $i62;
        $r21 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i63 = i55 + 8;
        $l64 = (long) $i63;
        $i65 = virtualinvoke $r21.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l64);
        $i66 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i65);
        r1[2] = $i66;
        $r22 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i67 = i55 + 12;
        $l68 = (long) $i67;
        $i69 = virtualinvoke $r22.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l68);
        $i70 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i69);
        r1[3] = $i70;
        $r23 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i71 = i55 + 16;
        $l72 = (long) $i71;
        $i73 = virtualinvoke $r23.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l72);
        $i74 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i73);
        r1[4] = $i74;
        $r24 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i75 = i55 + 20;
        $l76 = (long) $i75;
        $i77 = virtualinvoke $r24.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l76);
        $i78 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i77);
        r1[5] = $i78;
        $r25 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i79 = i55 + 24;
        $l80 = (long) $i79;
        $i81 = virtualinvoke $r25.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l80);
        $i82 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i81);
        r1[6] = $i82;
        $r26 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i83 = i55 + 28;
        $l84 = (long) $i83;
        $i85 = virtualinvoke $r26.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l84);
        $i86 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i85);
        r1[7] = $i86;
        $r27 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i87 = i55 + 32;
        $l88 = (long) $i87;
        $i89 = virtualinvoke $r27.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l88);
        $i90 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i89);
        r1[8] = $i90;
        $r28 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i91 = i55 + 36;
        $l92 = (long) $i91;
        $i93 = virtualinvoke $r28.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l92);
        $i94 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i93);
        r1[9] = $i94;
        $r29 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i95 = i55 + 40;
        $l96 = (long) $i95;
        $i97 = virtualinvoke $r29.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l96);
        $i98 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i97);
        r1[10] = $i98;
        $r30 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i99 = i55 + 44;
        $l100 = (long) $i99;
        $i101 = virtualinvoke $r30.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l100);
        $i102 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i101);
        r1[11] = $i102;
        $r31 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i103 = i55 + 48;
        $l104 = (long) $i103;
        $i105 = virtualinvoke $r31.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l104);
        $i106 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i105);
        r1[12] = $i106;
        $r32 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i107 = i55 + 52;
        $l108 = (long) $i107;
        $i109 = virtualinvoke $r32.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l108);
        $i110 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i109);
        r1[13] = $i110;
        $r33 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i111 = i55 + 56;
        $l112 = (long) $i111;
        $i113 = virtualinvoke $r33.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l112);
        $i114 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i113);
        r1[14] = $i114;
        $r34 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i115 = i55 + 60;
        $l116 = (long) $i115;
        $i117 = virtualinvoke $r34.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l116);
        $i118 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i117);
        r1[15] = $i118;
        goto label4;

     label3:
        staticinvoke <sun.security.provider.ByteArrayAccess: void b2iLittle(byte[],int,int[],int,int)>(r0, i0, r1, 0, 64);

     label4:
        return;
    }

    static void i2bLittle(int[], int, byte[], int, int)
    {
        int[] r0;
        int i0, i1, i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i14, $i15, $i16, i17, i18, $i20, $i21, $i22, i23, $i24, i25, i27, $i28, i30, $i31, $i33;
        byte[] r1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        boolean $z0, $z1;
        sun.misc.Unsafe $r3, $r4;
        long $l13, $l19;
        byte $b26, $b29, $b32, $b34;

        r0 := @parameter0: int[];
        i0 := @parameter1: int;
        r1 := @parameter2: byte[];
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        if i0 < 0 goto label0;

        $i5 = lengthof r0;
        $i6 = $i5 - i0;
        $i7 = i2 / 4;
        if $i6 < $i7 goto label0;

        if i1 < 0 goto label0;

        $i8 = lengthof r1;
        $i9 = $i8 - i1;
        if $i9 >= i2 goto label1;

     label0:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label1:
        $z0 = <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned>;
        if $z0 == 0 goto label3;

        $i10 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i11 = i1 + $i10;
        i12 = i2 + i11;

     label2:
        if i11 >= i12 goto label7;

        $r3 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l13 = (long) i11;
        $i3 = i0;
        i0 = i0 + 1;
        $i14 = r0[$i3];
        virtualinvoke $r3.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(r1, $l13, $i14);
        i11 = i11 + 4;
        goto label2;

     label3:
        $z1 = <sun.security.provider.ByteArrayAccess: boolean bigEndian>;
        if $z1 == 0 goto label5;

        $i15 = i1 & 3;
        if $i15 != 0 goto label5;

        $i16 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i17 = i1 + $i16;
        i18 = i2 + i17;

     label4:
        if i17 >= i18 goto label7;

        $r4 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l19 = (long) i17;
        $i20 = i0;
        i0 = i0 + 1;
        $i21 = r0[$i20];
        $i22 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i21);
        virtualinvoke $r4.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(r1, $l19, $i22);
        i17 = i17 + 4;
        goto label4;

     label5:
        i23 = i2 + i1;

     label6:
        if i1 >= i23 goto label7;

        $i24 = i0;
        i0 = i0 + 1;
        i4 = r0[$i24];
        i25 = i1 + 1;
        $b26 = (byte) i4;
        r1[i1] = $b26;
        i27 = i25 + 1;
        $i28 = i4 >> 8;
        $b29 = (byte) $i28;
        r1[i25] = $b29;
        i30 = i27 + 1;
        $i31 = i4 >> 16;
        $b32 = (byte) $i31;
        r1[i27] = $b32;
        i1 = i30 + 1;
        $i33 = i4 >> 24;
        $b34 = (byte) $i33;
        r1[i30] = $b34;
        goto label6;

     label7:
        return;
    }

    static void i2bLittle4(int, byte[], int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i11, $i13, $i14, $i16, $i17, $i19, $i20;
        byte[] r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        boolean $z0, $z1;
        sun.misc.Unsafe $r2, $r3;
        long $l6, $l10;
        byte $b12, $b15, $b18, $b21;

        i0 := @parameter0: int;
        r0 := @parameter1: byte[];
        i1 := @parameter2: int;
        if i1 < 0 goto label0;

        $i3 = lengthof r0;
        $i4 = $i3 - i1;
        if $i4 >= 4 goto label1;

     label0:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r1;

     label1:
        $z0 = <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned>;
        if $z0 == 0 goto label2;

        $r2 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i2 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        $i5 = $i2 + i1;
        $l6 = (long) $i5;
        virtualinvoke $r2.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(r0, $l6, i0);
        goto label4;

     label2:
        $z1 = <sun.security.provider.ByteArrayAccess: boolean bigEndian>;
        if $z1 == 0 goto label3;

        $i7 = i1 & 3;
        if $i7 != 0 goto label3;

        $r3 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i8 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        $i9 = $i8 + i1;
        $l10 = (long) $i9;
        $i11 = staticinvoke <java.lang.Integer: int reverseBytes(int)>(i0);
        virtualinvoke $r3.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(r0, $l10, $i11);
        goto label4;

     label3:
        $b12 = (byte) i0;
        r0[i1] = $b12;
        $i13 = i1 + 1;
        $i14 = i0 >> 8;
        $b15 = (byte) $i14;
        r0[$i13] = $b15;
        $i16 = i1 + 2;
        $i17 = i0 >> 16;
        $b18 = (byte) $i17;
        r0[$i16] = $b18;
        $i19 = i1 + 3;
        $i20 = i0 >> 24;
        $b21 = (byte) $i20;
        r0[$i19] = $b21;

     label4:
        return;
    }

    static void b2iBig(byte[], int, int[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, $i13, $i14, $i15, $i16, i17, i18, $i19, $i21, i22, $i23, $i24, $i27, $i30, $i31, $i32, $i35, $i36, $i38, $i39;
        int[] r1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        boolean $z0, $z1;
        sun.misc.Unsafe $r3, $r4;
        long $l12, $l20;
        byte $b25, $b28, $b33, $b37;
        short $s26, $s29, $s34;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        r1 := @parameter2: int[];
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        if i0 < 0 goto label0;

        $i3 = lengthof r0;
        $i4 = $i3 - i0;
        if $i4 < i2 goto label0;

        if i1 < 0 goto label0;

        $i5 = lengthof r1;
        $i6 = $i5 - i1;
        $i7 = i2 / 4;
        if $i6 >= $i7 goto label1;

     label0:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label1:
        $z0 = <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned>;
        if $z0 == 0 goto label3;

        $i8 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i9 = i0 + $i8;
        i10 = i2 + i9;

     label2:
        if i9 >= i10 goto label7;

        $i11 = i1;
        i1 = i1 + 1;
        $r3 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l12 = (long) i9;
        $i13 = virtualinvoke $r3.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l12);
        $i14 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i13);
        r1[$i11] = $i14;
        i9 = i9 + 4;
        goto label2;

     label3:
        $z1 = <sun.security.provider.ByteArrayAccess: boolean bigEndian>;
        if $z1 == 0 goto label5;

        $i15 = i0 & 3;
        if $i15 != 0 goto label5;

        $i16 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i17 = i0 + $i16;
        i18 = i2 + i17;

     label4:
        if i17 >= i18 goto label7;

        $i19 = i1;
        i1 = i1 + 1;
        $r4 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l20 = (long) i17;
        $i21 = virtualinvoke $r4.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l20);
        r1[$i19] = $i21;
        i17 = i17 + 4;
        goto label4;

     label5:
        i22 = i2 + i0;

     label6:
        if i0 >= i22 goto label7;

        $i23 = i1;
        i1 = i1 + 1;
        $i24 = i0 + 3;
        $b25 = r0[$i24];
        $s26 = $b25 & 255;
        $i27 = i0 + 2;
        $b28 = r0[$i27];
        $s29 = $b28 & 255;
        $i30 = $s29 << 8;
        $i31 = $s26 | $i30;
        $i32 = i0 + 1;
        $b33 = r0[$i32];
        $s34 = $b33 & 255;
        $i35 = $s34 << 16;
        $i36 = $i31 | $i35;
        $b37 = r0[i0];
        $i38 = $b37 << 24;
        $i39 = $i36 | $i38;
        r1[$i23] = $i39;
        i0 = i0 + 4;
        goto label6;

     label7:
        return;
    }

    static void b2iBig64(byte[], int, int[])
    {
        byte[] r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i7, $i8, $i9, $i11, $i12, $i13, $i15, $i16, $i17, $i19, $i20, $i21, $i23, $i24, $i25, $i27, $i28, $i29, $i31, $i32, $i33, $i35, $i36, $i37, $i39, $i40, $i41, $i43, $i44, $i45, $i47, $i48, $i49, $i51, $i52, $i53, $i55, $i56, $i57, $i59, $i60, $i61, $i63, $i64, $i65, $i67, $i68, $i69, $i70, i71, $i73, $i74, $i76, $i77, $i79, $i80, $i82, $i83, $i85, $i86, $i88, $i89, $i91, $i92, $i94, $i95, $i97, $i98, $i100, $i101, $i103, $i104, $i106, $i107, $i109, $i110, $i112, $i113, $i115, $i116, $i118;
        int[] r1;
        sun.misc.Unsafe $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        boolean $z0, $z1;
        long $l6, $l10, $l14, $l18, $l22, $l26, $l30, $l34, $l38, $l42, $l46, $l50, $l54, $l58, $l62, $l66, $l72, $l75, $l78, $l81, $l84, $l87, $l90, $l93, $l96, $l99, $l102, $l105, $l108, $l111, $l114, $l117;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        r1 := @parameter2: int[];
        if i0 < 0 goto label0;

        $i1 = lengthof r0;
        $i2 = $i1 - i0;
        if $i2 < 64 goto label0;

        $i3 = lengthof r1;
        if $i3 >= 16 goto label1;

     label0:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r3;

     label1:
        $z0 = <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned>;
        if $z0 == 0 goto label2;

        $i4 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i5 = i0 + $i4;
        $r2 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l6 = (long) i5;
        $i7 = virtualinvoke $r2.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l6);
        $i8 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i7);
        r1[0] = $i8;
        $r4 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i9 = i5 + 4;
        $l10 = (long) $i9;
        $i11 = virtualinvoke $r4.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l10);
        $i12 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i11);
        r1[1] = $i12;
        $r5 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i13 = i5 + 8;
        $l14 = (long) $i13;
        $i15 = virtualinvoke $r5.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l14);
        $i16 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i15);
        r1[2] = $i16;
        $r6 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i17 = i5 + 12;
        $l18 = (long) $i17;
        $i19 = virtualinvoke $r6.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l18);
        $i20 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i19);
        r1[3] = $i20;
        $r7 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i21 = i5 + 16;
        $l22 = (long) $i21;
        $i23 = virtualinvoke $r7.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l22);
        $i24 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i23);
        r1[4] = $i24;
        $r8 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i25 = i5 + 20;
        $l26 = (long) $i25;
        $i27 = virtualinvoke $r8.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l26);
        $i28 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i27);
        r1[5] = $i28;
        $r9 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i29 = i5 + 24;
        $l30 = (long) $i29;
        $i31 = virtualinvoke $r9.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l30);
        $i32 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i31);
        r1[6] = $i32;
        $r10 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i33 = i5 + 28;
        $l34 = (long) $i33;
        $i35 = virtualinvoke $r10.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l34);
        $i36 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i35);
        r1[7] = $i36;
        $r11 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i37 = i5 + 32;
        $l38 = (long) $i37;
        $i39 = virtualinvoke $r11.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l38);
        $i40 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i39);
        r1[8] = $i40;
        $r12 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i41 = i5 + 36;
        $l42 = (long) $i41;
        $i43 = virtualinvoke $r12.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l42);
        $i44 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i43);
        r1[9] = $i44;
        $r13 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i45 = i5 + 40;
        $l46 = (long) $i45;
        $i47 = virtualinvoke $r13.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l46);
        $i48 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i47);
        r1[10] = $i48;
        $r14 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i49 = i5 + 44;
        $l50 = (long) $i49;
        $i51 = virtualinvoke $r14.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l50);
        $i52 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i51);
        r1[11] = $i52;
        $r15 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i53 = i5 + 48;
        $l54 = (long) $i53;
        $i55 = virtualinvoke $r15.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l54);
        $i56 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i55);
        r1[12] = $i56;
        $r16 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i57 = i5 + 52;
        $l58 = (long) $i57;
        $i59 = virtualinvoke $r16.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l58);
        $i60 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i59);
        r1[13] = $i60;
        $r17 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i61 = i5 + 56;
        $l62 = (long) $i61;
        $i63 = virtualinvoke $r17.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l62);
        $i64 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i63);
        r1[14] = $i64;
        $r18 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i65 = i5 + 60;
        $l66 = (long) $i65;
        $i67 = virtualinvoke $r18.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l66);
        $i68 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i67);
        r1[15] = $i68;
        goto label4;

     label2:
        $z1 = <sun.security.provider.ByteArrayAccess: boolean bigEndian>;
        if $z1 == 0 goto label3;

        $i69 = i0 & 3;
        if $i69 != 0 goto label3;

        $i70 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i71 = i0 + $i70;
        $r19 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l72 = (long) i71;
        $i73 = virtualinvoke $r19.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l72);
        r1[0] = $i73;
        $r20 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i74 = i71 + 4;
        $l75 = (long) $i74;
        $i76 = virtualinvoke $r20.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l75);
        r1[1] = $i76;
        $r21 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i77 = i71 + 8;
        $l78 = (long) $i77;
        $i79 = virtualinvoke $r21.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l78);
        r1[2] = $i79;
        $r22 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i80 = i71 + 12;
        $l81 = (long) $i80;
        $i82 = virtualinvoke $r22.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l81);
        r1[3] = $i82;
        $r23 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i83 = i71 + 16;
        $l84 = (long) $i83;
        $i85 = virtualinvoke $r23.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l84);
        r1[4] = $i85;
        $r24 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i86 = i71 + 20;
        $l87 = (long) $i86;
        $i88 = virtualinvoke $r24.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l87);
        r1[5] = $i88;
        $r25 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i89 = i71 + 24;
        $l90 = (long) $i89;
        $i91 = virtualinvoke $r25.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l90);
        r1[6] = $i91;
        $r26 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i92 = i71 + 28;
        $l93 = (long) $i92;
        $i94 = virtualinvoke $r26.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l93);
        r1[7] = $i94;
        $r27 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i95 = i71 + 32;
        $l96 = (long) $i95;
        $i97 = virtualinvoke $r27.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l96);
        r1[8] = $i97;
        $r28 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i98 = i71 + 36;
        $l99 = (long) $i98;
        $i100 = virtualinvoke $r28.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l99);
        r1[9] = $i100;
        $r29 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i101 = i71 + 40;
        $l102 = (long) $i101;
        $i103 = virtualinvoke $r29.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l102);
        r1[10] = $i103;
        $r30 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i104 = i71 + 44;
        $l105 = (long) $i104;
        $i106 = virtualinvoke $r30.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l105);
        r1[11] = $i106;
        $r31 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i107 = i71 + 48;
        $l108 = (long) $i107;
        $i109 = virtualinvoke $r31.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l108);
        r1[12] = $i109;
        $r32 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i110 = i71 + 52;
        $l111 = (long) $i110;
        $i112 = virtualinvoke $r32.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l111);
        r1[13] = $i112;
        $r33 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i113 = i71 + 56;
        $l114 = (long) $i113;
        $i115 = virtualinvoke $r33.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l114);
        r1[14] = $i115;
        $r34 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i116 = i71 + 60;
        $l117 = (long) $i116;
        $i118 = virtualinvoke $r34.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l117);
        r1[15] = $i118;
        goto label4;

     label3:
        staticinvoke <sun.security.provider.ByteArrayAccess: void b2iBig(byte[],int,int[],int,int)>(r0, i0, r1, 0, 64);

     label4:
        return;
    }

    static void i2bBig(int[], int, byte[], int, int)
    {
        int[] r0;
        int i0, i1, i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i14, $i15, $i16, $i17, i18, i19, $i21, $i22, i23, $i24, i25, $i26, i28, $i29, i31, $i32;
        byte[] r1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        boolean $z0, $z1;
        sun.misc.Unsafe $r3, $r4;
        long $l13, $l20;
        byte $b27, $b30, $b33, $b34;

        r0 := @parameter0: int[];
        i0 := @parameter1: int;
        r1 := @parameter2: byte[];
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        if i0 < 0 goto label0;

        $i5 = lengthof r0;
        $i6 = $i5 - i0;
        $i7 = i2 / 4;
        if $i6 < $i7 goto label0;

        if i1 < 0 goto label0;

        $i8 = lengthof r1;
        $i9 = $i8 - i1;
        if $i9 >= i2 goto label1;

     label0:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label1:
        $z0 = <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned>;
        if $z0 == 0 goto label3;

        $i10 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i11 = i1 + $i10;
        i12 = i2 + i11;

     label2:
        if i11 >= i12 goto label7;

        $r3 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l13 = (long) i11;
        $i3 = i0;
        i0 = i0 + 1;
        $i14 = r0[$i3];
        $i15 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i14);
        virtualinvoke $r3.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(r1, $l13, $i15);
        i11 = i11 + 4;
        goto label2;

     label3:
        $z1 = <sun.security.provider.ByteArrayAccess: boolean bigEndian>;
        if $z1 == 0 goto label5;

        $i16 = i1 & 3;
        if $i16 != 0 goto label5;

        $i17 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i18 = i1 + $i17;
        i19 = i2 + i18;

     label4:
        if i18 >= i19 goto label7;

        $r4 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l20 = (long) i18;
        $i21 = i0;
        i0 = i0 + 1;
        $i22 = r0[$i21];
        virtualinvoke $r4.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(r1, $l20, $i22);
        i18 = i18 + 4;
        goto label4;

     label5:
        i23 = i2 + i1;

     label6:
        if i1 >= i23 goto label7;

        $i24 = i0;
        i0 = i0 + 1;
        i4 = r0[$i24];
        i25 = i1 + 1;
        $i26 = i4 >> 24;
        $b27 = (byte) $i26;
        r1[i1] = $b27;
        i28 = i25 + 1;
        $i29 = i4 >> 16;
        $b30 = (byte) $i29;
        r1[i25] = $b30;
        i31 = i28 + 1;
        $i32 = i4 >> 8;
        $b33 = (byte) $i32;
        r1[i28] = $b33;
        i1 = i31 + 1;
        $b34 = (byte) i4;
        r1[i31] = $b34;
        goto label6;

     label7:
        return;
    }

    static void i2bBig4(int, byte[], int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i12, $i14, $i15, $i17, $i18, $i20;
        byte[] r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        boolean $z0, $z1;
        sun.misc.Unsafe $r2, $r3;
        long $l6, $l11;
        byte $b13, $b16, $b19, $b21;

        i0 := @parameter0: int;
        r0 := @parameter1: byte[];
        i1 := @parameter2: int;
        if i1 < 0 goto label0;

        $i3 = lengthof r0;
        $i4 = $i3 - i1;
        if $i4 >= 4 goto label1;

     label0:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r1;

     label1:
        $z0 = <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned>;
        if $z0 == 0 goto label2;

        $r2 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i2 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        $i5 = $i2 + i1;
        $l6 = (long) $i5;
        $i7 = staticinvoke <java.lang.Integer: int reverseBytes(int)>(i0);
        virtualinvoke $r2.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(r0, $l6, $i7);
        goto label4;

     label2:
        $z1 = <sun.security.provider.ByteArrayAccess: boolean bigEndian>;
        if $z1 == 0 goto label3;

        $i8 = i1 & 3;
        if $i8 != 0 goto label3;

        $r3 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i9 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        $i10 = $i9 + i1;
        $l11 = (long) $i10;
        virtualinvoke $r3.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(r0, $l11, i0);
        goto label4;

     label3:
        $i12 = i0 >> 24;
        $b13 = (byte) $i12;
        r0[i1] = $b13;
        $i14 = i1 + 1;
        $i15 = i0 >> 16;
        $b16 = (byte) $i15;
        r0[$i14] = $b16;
        $i17 = i1 + 2;
        $i18 = i0 >> 8;
        $b19 = (byte) $i18;
        r0[$i17] = $b19;
        $i20 = i1 + 3;
        $b21 = (byte) i0;
        r0[$i20] = $b21;

     label4:
        return;
    }

    static void b2lBig(byte[], int, long[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13, $i17, $i18, i19, i20, $i21, $i23, $i26, $i28, i32, $i33, $i36, $i39, $i40, $i41, $i44, $i45, $i47, i48, $i49, $i52, $i55, $i56, $i57, $i60, $i61, $i63, $i64;
        long[] r1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        boolean $z0, $z1;
        sun.misc.Unsafe $r3, $r4, $r5;
        long $l14, $l15, $l16, $l22, $l24, $l25, $l27, $l29, $l30, $l31, $l65, $l66, $l67, $l68, $l69;
        byte $b34, $b37, $b42, $b46, $b50, $b53, $b58, $b62;
        short $s35, $s38, $s43, $s51, $s54, $s59;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        r1 := @parameter2: long[];
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        if i0 < 0 goto label0;

        $i5 = lengthof r0;
        $i6 = $i5 - i0;
        if $i6 < i2 goto label0;

        if i1 < 0 goto label0;

        $i7 = lengthof r1;
        $i8 = $i7 - i1;
        $i9 = i2 / 8;
        if $i8 >= $i9 goto label1;

     label0:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label1:
        $z0 = <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned>;
        if $z0 == 0 goto label3;

        $i10 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i11 = i0 + $i10;
        i12 = i2 + i11;

     label2:
        if i11 >= i12 goto label7;

        $i13 = i1;
        i1 = i1 + 1;
        $r3 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l14 = (long) i11;
        $l15 = virtualinvoke $r3.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l14);
        $l16 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l15);
        r1[$i13] = $l16;
        i11 = i11 + 8;
        goto label2;

     label3:
        $z1 = <sun.security.provider.ByteArrayAccess: boolean bigEndian>;
        if $z1 == 0 goto label5;

        $i17 = i0 & 3;
        if $i17 != 0 goto label5;

        $i18 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i19 = i0 + $i18;
        i20 = i2 + i19;

     label4:
        if i19 >= i20 goto label7;

        $i21 = i1;
        i1 = i1 + 1;
        $r4 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l22 = (long) i19;
        $i23 = virtualinvoke $r4.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l22);
        $l24 = (long) $i23;
        $l25 = $l24 << 32;
        $r5 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i26 = i19 + 4;
        $l27 = (long) $i26;
        $i28 = virtualinvoke $r5.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r0, $l27);
        $l29 = (long) $i28;
        $l30 = $l29 & 4294967295L;
        $l31 = $l25 | $l30;
        r1[$i21] = $l31;
        i19 = i19 + 8;
        goto label4;

     label5:
        i32 = i2 + i0;

     label6:
        if i0 >= i32 goto label7;

        $i33 = i0 + 3;
        $b34 = r0[$i33];
        $s35 = $b34 & 255;
        $i36 = i0 + 2;
        $b37 = r0[$i36];
        $s38 = $b37 & 255;
        $i39 = $s38 << 8;
        $i40 = $s35 | $i39;
        $i41 = i0 + 1;
        $b42 = r0[$i41];
        $s43 = $b42 & 255;
        $i44 = $s43 << 16;
        $i45 = $i40 | $i44;
        $b46 = r0[i0];
        $i47 = $b46 << 24;
        i3 = $i45 | $i47;
        i48 = i0 + 4;
        $i49 = i48 + 3;
        $b50 = r0[$i49];
        $s51 = $b50 & 255;
        $i52 = i48 + 2;
        $b53 = r0[$i52];
        $s54 = $b53 & 255;
        $i55 = $s54 << 8;
        $i56 = $s51 | $i55;
        $i57 = i48 + 1;
        $b58 = r0[$i57];
        $s59 = $b58 & 255;
        $i60 = $s59 << 16;
        $i61 = $i56 | $i60;
        $b62 = r0[i48];
        $i63 = $b62 << 24;
        i4 = $i61 | $i63;
        $i64 = i1;
        i1 = i1 + 1;
        $l65 = (long) i3;
        $l66 = $l65 << 32;
        $l67 = (long) i4;
        $l68 = $l67 & 4294967295L;
        $l69 = $l66 | $l68;
        r1[$i64] = $l69;
        i0 = i48 + 4;
        goto label6;

     label7:
        return;
    }

    static void b2lBig128(byte[], int, long[])
    {
        byte[] r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i9, $i13, $i17, $i21, $i25, $i29, $i33, $i37, $i41, $i45, $i49, $i53, $i57, $i61, $i65;
        long[] r1;
        sun.misc.Unsafe $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        boolean $z0;
        long $l6, $l7, $l8, $l10, $l11, $l12, $l14, $l15, $l16, $l18, $l19, $l20, $l22, $l23, $l24, $l26, $l27, $l28, $l30, $l31, $l32, $l34, $l35, $l36, $l38, $l39, $l40, $l42, $l43, $l44, $l46, $l47, $l48, $l50, $l51, $l52, $l54, $l55, $l56, $l58, $l59, $l60, $l62, $l63, $l64, $l66, $l67, $l68;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        r1 := @parameter2: long[];
        if i0 < 0 goto label0;

        $i1 = lengthof r0;
        $i2 = $i1 - i0;
        if $i2 < 128 goto label0;

        $i3 = lengthof r1;
        if $i3 >= 16 goto label1;

     label0:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r3;

     label1:
        $z0 = <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned>;
        if $z0 == 0 goto label2;

        $i4 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        i5 = i0 + $i4;
        $r2 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $l6 = (long) i5;
        $l7 = virtualinvoke $r2.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l6);
        $l8 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l7);
        r1[0] = $l8;
        $r4 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i9 = i5 + 8;
        $l10 = (long) $i9;
        $l11 = virtualinvoke $r4.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l10);
        $l12 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l11);
        r1[1] = $l12;
        $r5 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i13 = i5 + 16;
        $l14 = (long) $i13;
        $l15 = virtualinvoke $r5.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l14);
        $l16 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l15);
        r1[2] = $l16;
        $r6 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i17 = i5 + 24;
        $l18 = (long) $i17;
        $l19 = virtualinvoke $r6.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l18);
        $l20 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l19);
        r1[3] = $l20;
        $r7 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i21 = i5 + 32;
        $l22 = (long) $i21;
        $l23 = virtualinvoke $r7.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l22);
        $l24 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l23);
        r1[4] = $l24;
        $r8 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i25 = i5 + 40;
        $l26 = (long) $i25;
        $l27 = virtualinvoke $r8.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l26);
        $l28 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l27);
        r1[5] = $l28;
        $r9 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i29 = i5 + 48;
        $l30 = (long) $i29;
        $l31 = virtualinvoke $r9.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l30);
        $l32 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l31);
        r1[6] = $l32;
        $r10 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i33 = i5 + 56;
        $l34 = (long) $i33;
        $l35 = virtualinvoke $r10.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l34);
        $l36 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l35);
        r1[7] = $l36;
        $r11 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i37 = i5 + 64;
        $l38 = (long) $i37;
        $l39 = virtualinvoke $r11.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l38);
        $l40 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l39);
        r1[8] = $l40;
        $r12 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i41 = i5 + 72;
        $l42 = (long) $i41;
        $l43 = virtualinvoke $r12.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l42);
        $l44 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l43);
        r1[9] = $l44;
        $r13 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i45 = i5 + 80;
        $l46 = (long) $i45;
        $l47 = virtualinvoke $r13.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l46);
        $l48 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l47);
        r1[10] = $l48;
        $r14 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i49 = i5 + 88;
        $l50 = (long) $i49;
        $l51 = virtualinvoke $r14.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l50);
        $l52 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l51);
        r1[11] = $l52;
        $r15 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i53 = i5 + 96;
        $l54 = (long) $i53;
        $l55 = virtualinvoke $r15.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l54);
        $l56 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l55);
        r1[12] = $l56;
        $r16 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i57 = i5 + 104;
        $l58 = (long) $i57;
        $l59 = virtualinvoke $r16.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l58);
        $l60 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l59);
        r1[13] = $l60;
        $r17 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i61 = i5 + 112;
        $l62 = (long) $i61;
        $l63 = virtualinvoke $r17.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l62);
        $l64 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l63);
        r1[14] = $l64;
        $r18 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i65 = i5 + 120;
        $l66 = (long) $i65;
        $l67 = virtualinvoke $r18.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l66);
        $l68 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l67);
        r1[15] = $l68;
        goto label3;

     label2:
        staticinvoke <sun.security.provider.ByteArrayAccess: void b2lBig(byte[],int,long[],int,int)>(r0, i0, r1, 0, 128);

     label3:
        return;
    }

    static void l2bBig(long[], int, byte[], int, int)
    {
        long[] r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, i9, $i10, i11, $i13, i15, $i17, i19, $i21, i23, $i25, i27, $i29, i31, $i33, i35, $i37, $i39;
        byte[] r1;
        long l3, $l12, $l16, $l20, $l24, $l28, $l32, $l36;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        byte $b14, $b18, $b22, $b26, $b30, $b34, $b38, $b40;

        r0 := @parameter0: long[];
        i0 := @parameter1: int;
        r1 := @parameter2: byte[];
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        if i0 < 0 goto label0;

        $i4 = lengthof r0;
        $i5 = $i4 - i0;
        $i6 = i2 / 8;
        if $i5 < $i6 goto label0;

        if i1 < 0 goto label0;

        $i7 = lengthof r1;
        $i8 = $i7 - i1;
        if $i8 >= i2 goto label1;

     label0:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label1:
        i9 = i2 + i1;

     label2:
        if i1 >= i9 goto label3;

        $i10 = i0;
        i0 = i0 + 1;
        l3 = r0[$i10];
        i11 = i1 + 1;
        $l12 = l3 >> 56;
        $i13 = (int) $l12;
        $b14 = (byte) $i13;
        r1[i1] = $b14;
        i15 = i11 + 1;
        $l16 = l3 >> 48;
        $i17 = (int) $l16;
        $b18 = (byte) $i17;
        r1[i11] = $b18;
        i19 = i15 + 1;
        $l20 = l3 >> 40;
        $i21 = (int) $l20;
        $b22 = (byte) $i21;
        r1[i15] = $b22;
        i23 = i19 + 1;
        $l24 = l3 >> 32;
        $i25 = (int) $l24;
        $b26 = (byte) $i25;
        r1[i19] = $b26;
        i27 = i23 + 1;
        $l28 = l3 >> 24;
        $i29 = (int) $l28;
        $b30 = (byte) $i29;
        r1[i23] = $b30;
        i31 = i27 + 1;
        $l32 = l3 >> 16;
        $i33 = (int) $l32;
        $b34 = (byte) $i33;
        r1[i27] = $b34;
        i35 = i31 + 1;
        $l36 = l3 >> 8;
        $i37 = (int) $l36;
        $b38 = (byte) $i37;
        r1[i31] = $b38;
        i1 = i35 + 1;
        $i39 = (int) l3;
        $b40 = (byte) $i39;
        r1[i35] = $b40;
        goto label2;

     label3:
        return;
    }

    static void <clinit>()
    {
        sun.misc.Unsafe $r0, $r2, $r3, $r4, $r5;
        boolean z0, $z1, $z2, $z3, $z4;
        java.nio.ByteOrder r1, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 = staticinvoke <sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()>();
        <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe> = $r0;
        $r2 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i0 = virtualinvoke $r2.<sun.misc.Unsafe: int arrayBaseOffset(java.lang.Class)>(class "[B");
        <sun.security.provider.ByteArrayAccess: int byteArrayOfs> = $i0;
        $r3 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i1 = virtualinvoke $r3.<sun.misc.Unsafe: int arrayIndexScale(java.lang.Class)>(class "[B");
        if $i1 != 1 goto label0;

        $r4 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i2 = virtualinvoke $r4.<sun.misc.Unsafe: int arrayIndexScale(java.lang.Class)>(class "[I");
        if $i2 != 4 goto label0;

        $r5 = <sun.security.provider.ByteArrayAccess: sun.misc.Unsafe unsafe>;
        $i3 = virtualinvoke $r5.<sun.misc.Unsafe: int arrayIndexScale(java.lang.Class)>(class "[J");
        if $i3 != 8 goto label0;

        $i4 = <sun.security.provider.ByteArrayAccess: int byteArrayOfs>;
        $i5 = $i4 & 3;
        if $i5 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;
        r1 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();
        if z0 == 0 goto label2;

        $z2 = staticinvoke <sun.security.provider.ByteArrayAccess: boolean unaligned()>();
        if $z2 == 0 goto label2;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;
        if r1 != $r6 goto label2;

        $z3 = 1;
        goto label3;

     label2:
        $z3 = 0;

     label3:
        <sun.security.provider.ByteArrayAccess: boolean littleEndianUnaligned> = $z3;
        if z0 == 0 goto label4;

        $r7 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;
        if r1 != $r7 goto label4;

        $z4 = 1;
        goto label5;

     label4:
        $z4 = 0;

     label5:
        <sun.security.provider.ByteArrayAccess: boolean bigEndian> = $z4;
        return;
    }
}
