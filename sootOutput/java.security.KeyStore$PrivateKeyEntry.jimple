public final class java.security.KeyStore$PrivateKeyEntry extends java.lang.Object implements java.security.KeyStore$Entry
{
    private final java.security.PrivateKey privKey;
    private final java.security.cert.Certificate[] chain;

    public void <init>(java.security.PrivateKey, java.security.cert.Certificate[])
    {
        java.security.KeyStore$PrivateKeyEntry r0;
        java.security.PrivateKey r1;
        java.security.cert.Certificate[] r2, r3, $r19;
        java.lang.String r4, $r10, $r12, $r15;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.NullPointerException $r5;
        java.lang.IllegalArgumentException $r6, $r11, $r16;
        java.lang.Object $r7;
        java.security.cert.Certificate $r8, $r9, $r13, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.security.PublicKey $r14;
        java.security.cert.X509Certificate[] $r18;

        r0 := @this: java.security.KeyStore$PrivateKeyEntry;
        r1 := @parameter0: java.security.PrivateKey;
        r2 := @parameter1: java.security.cert.Certificate[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 == null goto label0;

        if r2 != null goto label1;

     label0:
        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("invalid null input");
        throw $r5;

     label1:
        $i1 = lengthof r2;
        if $i1 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid zero-length input chain");
        throw $r6;

     label2:
        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();
        r3 = (java.security.cert.Certificate[]) $r7;
        $r8 = r3[0];
        r4 = virtualinvoke $r8.<java.security.cert.Certificate: java.lang.String getType()>();
        i0 = 1;

     label3:
        $i2 = lengthof r3;
        if i0 >= $i2 goto label5;

        $r9 = r3[i0];
        $r10 = virtualinvoke $r9.<java.security.cert.Certificate: java.lang.String getType()>();
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if $z0 != 0 goto label4;

        $r11 = new java.lang.IllegalArgumentException;
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("chain does not contain certificates of the same type");
        throw $r11;

     label4:
        i0 = i0 + 1;
        goto label3;

     label5:
        $r12 = interfaceinvoke r1.<java.security.PrivateKey: java.lang.String getAlgorithm()>();
        $r13 = r3[0];
        $r14 = virtualinvoke $r13.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();
        $r15 = interfaceinvoke $r14.<java.security.PublicKey: java.lang.String getAlgorithm()>();
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r15);
        if $z1 != 0 goto label6;

        $r16 = new java.lang.IllegalArgumentException;
        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("private key algorithm does not match algorithm of public key in end entity certificate (at index 0)");
        throw $r16;

     label6:
        r0.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey privKey> = r1;
        $r17 = r3[0];
        $z2 = $r17 instanceof java.security.cert.X509Certificate;
        if $z2 == 0 goto label7;

        $z3 = r3 instanceof java.security.cert.X509Certificate[];
        if $z3 != 0 goto label7;

        $i3 = lengthof r3;
        $r18 = newarray (java.security.cert.X509Certificate)[$i3];
        r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain> = $r18;
        $r19 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;
        $i4 = lengthof r3;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r19, 0, $i4);
        goto label8;

     label7:
        r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain> = r3;

     label8:
        return;
    }

    public java.security.PrivateKey getPrivateKey()
    {
        java.security.KeyStore$PrivateKeyEntry r0;
        java.security.PrivateKey $r1;

        r0 := @this: java.security.KeyStore$PrivateKeyEntry;
        $r1 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey privKey>;
        return $r1;
    }

    public java.security.cert.Certificate[] getCertificateChain()
    {
        java.security.KeyStore$PrivateKeyEntry r0;
        java.security.cert.Certificate[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.security.KeyStore$PrivateKeyEntry;
        $r1 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (java.security.cert.Certificate[]) $r2;
        return $r3;
    }

    public java.security.cert.Certificate getCertificate()
    {
        java.security.KeyStore$PrivateKeyEntry r0;
        java.security.cert.Certificate[] $r1;
        java.security.cert.Certificate $r2;

        r0 := @this: java.security.KeyStore$PrivateKeyEntry;
        $r1 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;
        $r2 = $r1[0];
        return $r2;
    }

    public java.lang.String toString()
    {
        java.security.KeyStore$PrivateKeyEntry r0;
        java.lang.StringBuilder $r1, r2, $r5, $r6, $r8, $r9;
        java.security.cert.Certificate[] r3, $r7;
        int i0, i1, $i2;
        java.security.cert.Certificate r4;
        java.lang.String $r10, $r14;

        r0 := @this: java.security.KeyStore$PrivateKeyEntry;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Private key entry and certificate chain with ");
        $r7 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;
        $i2 = lengthof $r7;
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elements:\r\n");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        r3 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;
        i0 = lengthof r3;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        r4 = r3[i1];
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        i1 = i1 + 1;
        goto label0;

     label1:
        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r14;
    }
}
