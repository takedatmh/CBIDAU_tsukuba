class java.io.ObjectStreamClass$2 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.Class val$cl;
    final java.io.ObjectStreamClass this$0;

    void <init>(java.io.ObjectStreamClass, java.lang.Class)
    {
        java.io.ObjectStreamClass$2 r0;
        java.io.ObjectStreamClass r1;
        java.lang.Class r2;

        r0 := @this: java.io.ObjectStreamClass$2;
        r1 := @parameter0: java.io.ObjectStreamClass;
        r2 := @parameter1: java.lang.Class;
        r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0> = r1;
        r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run()
    {
        java.io.ObjectStreamClass$2 r0;
        java.io.InvalidClassException r1, $r23;
        java.io.ObjectStreamClass$ExceptionInfo $r2, $r28;
        java.io.ObjectStreamClass $r3, $r4, $r7, $r11, $r14, $r18, $r22, $r24, $r25, $r30, $r33, $r34, $r38, $r42, $r48, $r54, $r59, $r60, $r62, $r66;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Long $r5, $r16;
        java.io.ObjectStreamField[] $r8, $r12, $r20, $r31;
        java.lang.Class $r10, $r15, $r19, $r35, $r39, $r43, $r45, $r49, $r51, $r55, $r56, $r63, $r67;
        java.lang.String $r26, $r27;
        java.lang.reflect.Constructor $r36, $r40;
        java.lang.Class[] $r44, $r50;
        java.lang.reflect.Method $r46, $r52, $r57, $r61, $r64, $r68;

        r0 := @this: java.io.ObjectStreamClass$2;
        $r3 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $z0 = staticinvoke <java.io.ObjectStreamClass: boolean access$400(java.io.ObjectStreamClass)>($r3);
        if $z0 == 0 goto label0;

        $r4 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);
        staticinvoke <java.io.ObjectStreamClass: java.lang.Long access$502(java.io.ObjectStreamClass,java.lang.Long)>($r4, $r5);
        $r7 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r8 = <java.io.ObjectStreamClass: java.io.ObjectStreamField[] NO_FIELDS>;
        staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamField[] access$602(java.io.ObjectStreamClass,java.io.ObjectStreamField[])>($r7, $r8);
        return null;

     label0:
        $r10 = r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl>;
        $z1 = virtualinvoke $r10.<java.lang.Class: boolean isArray()>();
        if $z1 == 0 goto label1;

        $r11 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r12 = <java.io.ObjectStreamClass: java.io.ObjectStreamField[] NO_FIELDS>;
        staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamField[] access$602(java.io.ObjectStreamClass,java.io.ObjectStreamField[])>($r11, $r12);
        return null;

     label1:
        $r14 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r15 = r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl>;
        $r16 = staticinvoke <java.io.ObjectStreamClass: java.lang.Long access$700(java.lang.Class)>($r15);
        staticinvoke <java.io.ObjectStreamClass: java.lang.Long access$502(java.io.ObjectStreamClass,java.lang.Long)>($r14, $r16);

     label2:
        $r18 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r19 = r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl>;
        $r20 = staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamField[] access$800(java.lang.Class)>($r19);
        staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamField[] access$602(java.io.ObjectStreamClass,java.io.ObjectStreamField[])>($r18, $r20);
        $r22 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        staticinvoke <java.io.ObjectStreamClass: void access$900(java.io.ObjectStreamClass)>($r22);

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;
        r1 = $r23;
        $r24 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r25 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r2 = new java.io.ObjectStreamClass$ExceptionInfo;
        $r26 = r1.<java.io.InvalidClassException: java.lang.String classname>;
        $r27 = virtualinvoke r1.<java.io.InvalidClassException: java.lang.String getMessage()>();
        specialinvoke $r2.<java.io.ObjectStreamClass$ExceptionInfo: void <init>(java.lang.String,java.lang.String)>($r26, $r27);
        $r28 = staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamClass$ExceptionInfo access$1102(java.io.ObjectStreamClass,java.io.ObjectStreamClass$ExceptionInfo)>($r25, $r2);
        staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamClass$ExceptionInfo access$1002(java.io.ObjectStreamClass,java.io.ObjectStreamClass$ExceptionInfo)>($r24, $r28);
        $r30 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r31 = <java.io.ObjectStreamClass: java.io.ObjectStreamField[] NO_FIELDS>;
        staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamField[] access$602(java.io.ObjectStreamClass,java.io.ObjectStreamField[])>($r30, $r31);

     label5:
        $r33 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $z2 = staticinvoke <java.io.ObjectStreamClass: boolean access$1200(java.io.ObjectStreamClass)>($r33);
        if $z2 == 0 goto label6;

        $r34 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r35 = r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl>;
        $r36 = staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Constructor access$1400(java.lang.Class)>($r35);
        staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Constructor access$1302(java.io.ObjectStreamClass,java.lang.reflect.Constructor)>($r34, $r36);
        goto label9;

     label6:
        $r38 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r39 = r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl>;
        $r40 = staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Constructor access$1500(java.lang.Class)>($r39);
        staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Constructor access$1302(java.io.ObjectStreamClass,java.lang.reflect.Constructor)>($r38, $r40);
        $r42 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r43 = r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl>;
        $r44 = newarray (java.lang.Class)[1];
        $r44[0] = class "java/io/ObjectOutputStream";
        $r45 = <java.lang.Void: java.lang.Class TYPE>;
        $r46 = staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$1700(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class)>($r43, "writeObject", $r44, $r45);
        staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$1602(java.io.ObjectStreamClass,java.lang.reflect.Method)>($r42, $r46);
        $r48 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r49 = r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl>;
        $r50 = newarray (java.lang.Class)[1];
        $r50[0] = class "java/io/ObjectInputStream";
        $r51 = <java.lang.Void: java.lang.Class TYPE>;
        $r52 = staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$1700(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class)>($r49, "readObject", $r50, $r51);
        staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$1802(java.io.ObjectStreamClass,java.lang.reflect.Method)>($r48, $r52);
        $r54 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r55 = r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl>;
        $r56 = <java.lang.Void: java.lang.Class TYPE>;
        $r57 = staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$1700(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class)>($r55, "readObjectNoData", null, $r56);
        staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$1902(java.io.ObjectStreamClass,java.lang.reflect.Method)>($r54, $r57);
        $r59 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r60 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r61 = staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$1600(java.io.ObjectStreamClass)>($r60);
        if $r61 == null goto label7;

        $z3 = 1;
        goto label8;

     label7:
        $z3 = 0;

     label8:
        staticinvoke <java.io.ObjectStreamClass: boolean access$2002(java.io.ObjectStreamClass,boolean)>($r59, $z3);

     label9:
        $r62 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r63 = r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl>;
        $r64 = staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$2200(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class)>($r63, "writeReplace", null, class "java/lang/Object");
        staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$2102(java.io.ObjectStreamClass,java.lang.reflect.Method)>($r62, $r64);
        $r66 = r0.<java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>;
        $r67 = r0.<java.io.ObjectStreamClass$2: java.lang.Class val$cl>;
        $r68 = staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$2200(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class)>($r67, "readResolve", null, class "java/lang/Object");
        staticinvoke <java.io.ObjectStreamClass: java.lang.reflect.Method access$2302(java.io.ObjectStreamClass,java.lang.reflect.Method)>($r66, $r68);
        return null;

        catch java.io.InvalidClassException from label2 to label3 with label4;
    }

    public volatile java.lang.Object run()
    {
        java.io.ObjectStreamClass$2 r0;
        java.lang.Void $r1;

        r0 := @this: java.io.ObjectStreamClass$2;
        $r1 = virtualinvoke r0.<java.io.ObjectStreamClass$2: java.lang.Void run()>();
        return $r1;
    }
}
