class java.util.Collections$SynchronizedSortedSet extends java.util.Collections$SynchronizedSet implements java.util.SortedSet
{
    private static final long serialVersionUID;
    private final java.util.SortedSet ss;

    void <init>(java.util.SortedSet)
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.util.SortedSet r1;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;
        r1 := @parameter0: java.util.SortedSet;
        specialinvoke r0.<java.util.Collections$SynchronizedSet: void <init>(java.util.Set)>(r1);
        r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss> = r1;
        return;
    }

    void <init>(java.util.SortedSet, java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.util.SortedSet r1;
        java.lang.Object r2;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;
        r1 := @parameter0: java.util.SortedSet;
        r2 := @parameter1: java.lang.Object;
        specialinvoke r0.<java.util.Collections$SynchronizedSet: void <init>(java.util.Set,java.lang.Object)>(r1, r2);
        r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss> = r1;
        return;
    }

    public java.util.Comparator comparator()
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.util.SortedSet $r4;
        java.util.Comparator $r5;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;
        $r3 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;
        $r5 = interfaceinvoke $r4.<java.util.SortedSet: java.util.Comparator comparator()>();
        exitmonitor r1;

     label1:
        return $r5;

     label2:
        $r6 := @caughtexception;

     label3:
        r2 = $r6;
        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.util.SortedSet subSet(java.lang.Object, java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedSet r0, $r6;
        java.lang.Object r1, r2, r3, $r5, $r9;
        java.lang.Throwable r4, $r10;
        java.util.SortedSet $r7, $r8;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r5 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;
        r3 = $r5;
        entermonitor $r5;

     label0:
        $r6 = new java.util.Collections$SynchronizedSortedSet;
        $r7 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;
        $r8 = interfaceinvoke $r7.<java.util.SortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>(r1, r2);
        $r9 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;
        specialinvoke $r6.<java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet,java.lang.Object)>($r8, $r9);
        exitmonitor r3;

     label1:
        return $r6;

     label2:
        $r10 := @caughtexception;

     label3:
        r4 = $r10;
        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.util.SortedSet headSet(java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedSet r0, $r5;
        java.lang.Object r1, r2, $r4, $r8;
        java.lang.Throwable r3, $r9;
        java.util.SortedSet $r6, $r7;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;
        r1 := @parameter0: java.lang.Object;
        $r4 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = new java.util.Collections$SynchronizedSortedSet;
        $r6 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;
        $r7 = interfaceinvoke $r6.<java.util.SortedSet: java.util.SortedSet headSet(java.lang.Object)>(r1);
        $r8 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;
        specialinvoke $r5.<java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet,java.lang.Object)>($r7, $r8);
        exitmonitor r2;

     label1:
        return $r5;

     label2:
        $r9 := @caughtexception;

     label3:
        r3 = $r9;
        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.util.SortedSet tailSet(java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedSet r0, $r5;
        java.lang.Object r1, r2, $r4, $r8;
        java.lang.Throwable r3, $r9;
        java.util.SortedSet $r6, $r7;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;
        r1 := @parameter0: java.lang.Object;
        $r4 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = new java.util.Collections$SynchronizedSortedSet;
        $r6 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;
        $r7 = interfaceinvoke $r6.<java.util.SortedSet: java.util.SortedSet tailSet(java.lang.Object)>(r1);
        $r8 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;
        specialinvoke $r5.<java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet,java.lang.Object)>($r7, $r8);
        exitmonitor r2;

     label1:
        return $r5;

     label2:
        $r9 := @caughtexception;

     label3:
        r3 = $r9;
        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.Object first()
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r6;
        java.util.SortedSet $r4;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;
        $r3 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;
        $r5 = interfaceinvoke $r4.<java.util.SortedSet: java.lang.Object first()>();
        exitmonitor r1;

     label1:
        return $r5;

     label2:
        $r6 := @caughtexception;

     label3:
        r2 = $r6;
        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.Object last()
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r6;
        java.util.SortedSet $r4;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;
        $r3 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;
        $r5 = interfaceinvoke $r4.<java.util.SortedSet: java.lang.Object last()>();
        exitmonitor r1;

     label1:
        return $r5;

     label2:
        $r6 := @caughtexception;

     label3:
        r2 = $r6;
        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
}
