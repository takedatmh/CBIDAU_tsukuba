public class sun.security.x509.CertificatePolicySet extends java.lang.Object
{
    private final java.util.Vector ids;

    public void <init>(java.util.Vector)
    {
        sun.security.x509.CertificatePolicySet r0;
        java.util.Vector r1;

        r0 := @this: sun.security.x509.CertificatePolicySet;
        r1 := @parameter0: java.util.Vector;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.CertificatePolicySet: java.util.Vector ids> = r1;
        return;
    }

    public void <init>(sun.security.util.DerInputStream) throws java.io.IOException
    {
        sun.security.x509.CertificatePolicySet r0;
        sun.security.util.DerInputStream r1;
        java.util.Vector $r2, $r7;
        sun.security.util.DerValue[] r3;
        int i0, $i1;
        sun.security.x509.CertificatePolicyId r4, $r5;
        sun.security.util.DerValue $r6;

        r0 := @this: sun.security.x509.CertificatePolicySet;
        r1 := @parameter0: sun.security.util.DerInputStream;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.Vector;
        specialinvoke $r2.<java.util.Vector: void <init>()>();
        r0.<sun.security.x509.CertificatePolicySet: java.util.Vector ids> = $r2;
        r3 = virtualinvoke r1.<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSequence(int)>(5);
        i0 = 0;

     label0:
        $i1 = lengthof r3;
        if i0 >= $i1 goto label1;

        $r5 = new sun.security.x509.CertificatePolicyId;
        $r6 = r3[i0];
        specialinvoke $r5.<sun.security.x509.CertificatePolicyId: void <init>(sun.security.util.DerValue)>($r6);
        r4 = $r5;
        $r7 = r0.<sun.security.x509.CertificatePolicySet: java.util.Vector ids>;
        virtualinvoke $r7.<java.util.Vector: void addElement(java.lang.Object)>(r4);
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        sun.security.x509.CertificatePolicySet r0;
        java.lang.StringBuilder $r1, $r3, $r6, $r7;
        java.lang.String r2, $r5;
        java.util.Vector $r4;

        r0 := @this: sun.security.x509.CertificatePolicySet;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CertificatePolicySet:[\n");
        $r4 = r0.<sun.security.x509.CertificatePolicySet: java.util.Vector ids>;
        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.String toString()>();
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");
        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        return r2;
    }

    public void encode(sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.x509.CertificatePolicySet r0;
        sun.security.util.DerOutputStream r1, $r2, r3;
        int i0, $i1;
        java.util.Vector $r4, $r5;
        java.lang.Object $r6;
        sun.security.x509.CertificatePolicyId $r7;

        r0 := @this: sun.security.x509.CertificatePolicySet;
        r1 := @parameter0: sun.security.util.DerOutputStream;
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        i0 = 0;

     label0:
        $r4 = r0.<sun.security.x509.CertificatePolicySet: java.util.Vector ids>;
        $i1 = virtualinvoke $r4.<java.util.Vector: int size()>();
        if i0 >= $i1 goto label1;

        $r5 = r0.<sun.security.x509.CertificatePolicySet: java.util.Vector ids>;
        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i0);
        $r7 = (sun.security.x509.CertificatePolicyId) $r6;
        virtualinvoke $r7.<sun.security.x509.CertificatePolicyId: void encode(sun.security.util.DerOutputStream)>(r3);
        i0 = i0 + 1;
        goto label0;

     label1:
        virtualinvoke r1.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r3);
        return;
    }

    public java.util.List getCertPolicyIds()
    {
        sun.security.x509.CertificatePolicySet r0;
        java.util.Vector $r1;
        java.util.List $r2;

        r0 := @this: sun.security.x509.CertificatePolicySet;
        $r1 = r0.<sun.security.x509.CertificatePolicySet: java.util.Vector ids>;
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);
        return $r2;
    }
}
