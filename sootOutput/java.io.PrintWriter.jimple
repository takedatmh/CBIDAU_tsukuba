public class java.io.PrintWriter extends java.io.Writer
{
    protected java.io.Writer out;
    private final boolean autoFlush;
    private boolean trouble;
    private java.util.Formatter formatter;
    private java.io.PrintStream psOut;
    private final java.lang.String lineSeparator;

    private static java.nio.charset.Charset toCharset(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException r1, $r4;
        java.nio.charset.Charset $r3;
        java.io.UnsupportedEncodingException $r5;

        r0 := @parameter0: java.lang.String;
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, "charsetName");

     label0:
        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r0);

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = new java.io.UnsupportedEncodingException;
        specialinvoke $r5.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r0);
        throw $r5;

        catch java.nio.charset.IllegalCharsetNameException from label0 to label1 with label2;
        catch java.nio.charset.UnsupportedCharsetException from label0 to label1 with label2;
    }

    public void <init>(java.io.Writer)
    {
        java.io.PrintWriter r0;
        java.io.Writer r1;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.io.Writer;
        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>(r1, 0);
        return;
    }

    public void <init>(java.io.Writer, boolean)
    {
        java.io.PrintWriter r0;
        java.io.Writer r1;
        boolean z0;
        sun.security.action.GetPropertyAction $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.io.Writer;
        z0 := @parameter1: boolean;
        specialinvoke r0.<java.io.Writer: void <init>(java.lang.Object)>(r1);
        r0.<java.io.PrintWriter: boolean trouble> = 0;
        r0.<java.io.PrintWriter: java.io.PrintStream psOut> = null;
        r0.<java.io.PrintWriter: java.io.Writer out> = r1;
        r0.<java.io.PrintWriter: boolean autoFlush> = z0;
        $r2 = new sun.security.action.GetPropertyAction;
        specialinvoke $r2.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>("line.separator");
        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);
        $r4 = (java.lang.String) $r3;
        r0.<java.io.PrintWriter: java.lang.String lineSeparator> = $r4;
        return;
    }

    public void <init>(java.io.OutputStream)
    {
        java.io.PrintWriter r0;
        java.io.OutputStream r1;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.io.OutputStream;
        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>(r1, 0);
        return;
    }

    public void <init>(java.io.OutputStream, boolean)
    {
        java.io.PrintWriter r0;
        java.io.OutputStream r1;
        boolean z0, $z1;
        java.io.BufferedWriter $r2;
        java.io.OutputStreamWriter $r3;
        java.io.PrintStream $r4;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.io.OutputStream;
        z0 := @parameter1: boolean;
        $r2 = new java.io.BufferedWriter;
        $r3 = new java.io.OutputStreamWriter;
        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1);
        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r3);
        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, z0);
        $z1 = r1 instanceof java.io.PrintStream;
        if $z1 == 0 goto label0;

        $r4 = (java.io.PrintStream) r1;
        r0.<java.io.PrintWriter: java.io.PrintStream psOut> = $r4;

     label0:
        return;
    }

    public void <init>(java.lang.String) throws java.io.FileNotFoundException
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        java.io.BufferedWriter $r2;
        java.io.OutputStreamWriter $r3;
        java.io.FileOutputStream $r4;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.io.BufferedWriter;
        $r3 = new java.io.OutputStreamWriter;
        $r4 = new java.io.FileOutputStream;
        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);
        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r4);
        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r3);
        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, 0);
        return;
    }

    private void <init>(java.nio.charset.Charset, java.io.File) throws java.io.FileNotFoundException
    {
        java.io.PrintWriter r0;
        java.nio.charset.Charset r1;
        java.io.File r2;
        java.io.BufferedWriter $r3;
        java.io.OutputStreamWriter $r4;
        java.io.FileOutputStream $r5;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.nio.charset.Charset;
        r2 := @parameter1: java.io.File;
        $r3 = new java.io.BufferedWriter;
        $r4 = new java.io.OutputStreamWriter;
        $r5 = new java.io.FileOutputStream;
        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);
        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r5, r1);
        specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r4);
        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r3, 0);
        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws java.io.FileNotFoundException, java.io.UnsupportedEncodingException
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r2;
        java.io.File $r3;
        java.nio.charset.Charset $r4;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r4 = staticinvoke <java.io.PrintWriter: java.nio.charset.Charset toCharset(java.lang.String)>(r2);
        $r3 = new java.io.File;
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);
        specialinvoke r0.<java.io.PrintWriter: void <init>(java.nio.charset.Charset,java.io.File)>($r4, $r3);
        return;
    }

    public void <init>(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.PrintWriter r0;
        java.io.File r1;
        java.io.BufferedWriter $r2;
        java.io.OutputStreamWriter $r3;
        java.io.FileOutputStream $r4;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.io.File;
        $r2 = new java.io.BufferedWriter;
        $r3 = new java.io.OutputStreamWriter;
        $r4 = new java.io.FileOutputStream;
        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);
        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r4);
        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r3);
        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, 0);
        return;
    }

    public void <init>(java.io.File, java.lang.String) throws java.io.FileNotFoundException, java.io.UnsupportedEncodingException
    {
        java.io.PrintWriter r0;
        java.io.File r1;
        java.lang.String r2;
        java.nio.charset.Charset $r3;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.io.File;
        r2 := @parameter1: java.lang.String;
        $r3 = staticinvoke <java.io.PrintWriter: java.nio.charset.Charset toCharset(java.lang.String)>(r2);
        specialinvoke r0.<java.io.PrintWriter: void <init>(java.nio.charset.Charset,java.io.File)>($r3, r1);
        return;
    }

    private void ensureOpen() throws java.io.IOException
    {
        java.io.PrintWriter r0;
        java.io.Writer $r1;
        java.io.IOException $r2;

        r0 := @this: java.io.PrintWriter;
        $r1 = r0.<java.io.PrintWriter: java.io.Writer out>;
        if $r1 != null goto label0;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Stream closed");
        throw $r2;

     label0:
        return;
    }

    public void flush()
    {
        java.io.PrintWriter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.io.Writer $r4;
        java.io.IOException $r6, r7;

        r0 := @this: java.io.PrintWriter;

     label0:
        $r3 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void ensureOpen()>();
        $r4 = r0.<java.io.PrintWriter: java.io.Writer out>;
        virtualinvoke $r4.<java.io.Writer: void flush()>();
        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r5 := @caughtexception;

     label4:
        r2 = $r5;
        exitmonitor r1;

     label5:
        throw r2;

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;
        r7 = $r6;
        r0.<java.io.PrintWriter: boolean trouble> = 1;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.io.IOException from label0 to label6 with label7;
    }

    public void close()
    {
        java.io.PrintWriter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.io.Writer $r4, $r5;
        java.io.IOException $r7, r8;

        r0 := @this: java.io.PrintWriter;

     label0:
        $r3 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label1:
        $r4 = r0.<java.io.PrintWriter: java.io.Writer out>;
        if $r4 != null goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 = r0.<java.io.PrintWriter: java.io.Writer out>;
        virtualinvoke $r5.<java.io.Writer: void close()>();
        r0.<java.io.PrintWriter: java.io.Writer out> = null;
        exitmonitor r1;

     label4:
        goto label8;

     label5:
        $r6 := @caughtexception;

     label6:
        r2 = $r6;
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        goto label10;

     label9:
        $r7 := @caughtexception;
        r8 = $r7;
        r0.<java.io.PrintWriter: boolean trouble> = 1;

     label10:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.io.IOException from label0 to label2 with label9;
        catch java.io.IOException from label3 to label8 with label9;
    }

    public boolean checkError()
    {
        java.io.PrintWriter r0, r1;
        java.io.Writer $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream $r5, $r6;

        r0 := @this: java.io.PrintWriter;
        $r2 = r0.<java.io.PrintWriter: java.io.Writer out>;
        if $r2 == null goto label0;

        virtualinvoke r0.<java.io.PrintWriter: void flush()>();

     label0:
        $r3 = r0.<java.io.PrintWriter: java.io.Writer out>;
        $z0 = $r3 instanceof java.io.PrintWriter;
        if $z0 == 0 goto label1;

        $r4 = r0.<java.io.PrintWriter: java.io.Writer out>;
        r1 = (java.io.PrintWriter) $r4;
        $z1 = virtualinvoke r1.<java.io.PrintWriter: boolean checkError()>();
        return $z1;

     label1:
        $r5 = r0.<java.io.PrintWriter: java.io.PrintStream psOut>;
        if $r5 == null goto label2;

        $r6 = r0.<java.io.PrintWriter: java.io.PrintStream psOut>;
        $z2 = virtualinvoke $r6.<java.io.PrintStream: boolean checkError()>();
        return $z2;

     label2:
        $z3 = r0.<java.io.PrintWriter: boolean trouble>;
        return $z3;
    }

    protected void setError()
    {
        java.io.PrintWriter r0;

        r0 := @this: java.io.PrintWriter;
        r0.<java.io.PrintWriter: boolean trouble> = 1;
        return;
    }

    protected void clearError()
    {
        java.io.PrintWriter r0;

        r0 := @this: java.io.PrintWriter;
        r0.<java.io.PrintWriter: boolean trouble> = 0;
        return;
    }

    public void write(int)
    {
        java.io.PrintWriter r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.io.Writer $r4;
        java.io.InterruptedIOException $r6, r7;
        java.lang.Thread $r8;
        java.io.IOException $r9, r10;

        r0 := @this: java.io.PrintWriter;
        i0 := @parameter0: int;

     label0:
        $r3 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void ensureOpen()>();
        $r4 = r0.<java.io.PrintWriter: java.io.Writer out>;
        virtualinvoke $r4.<java.io.Writer: void write(int)>(i0);
        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r5 := @caughtexception;

     label4:
        r2 = $r5;
        exitmonitor r1;

     label5:
        throw r2;

     label6:
        goto label9;

     label7:
        $r6 := @caughtexception;
        r7 = $r6;
        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r8.<java.lang.Thread: void interrupt()>();
        goto label9;

     label8:
        $r9 := @caughtexception;
        r10 = $r9;
        r0.<java.io.PrintWriter: boolean trouble> = 1;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.io.InterruptedIOException from label0 to label6 with label7;
        catch java.io.IOException from label0 to label6 with label8;
    }

    public void write(char[], int, int)
    {
        java.io.PrintWriter r0;
        char[] r1;
        int i0, i1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        java.io.Writer $r5;
        java.io.InterruptedIOException $r7, r8;
        java.lang.Thread $r9;
        java.io.IOException $r10, r11;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;

     label0:
        $r4 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r2 = $r4;
        entermonitor $r4;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void ensureOpen()>();
        $r5 = r0.<java.io.PrintWriter: java.io.Writer out>;
        virtualinvoke $r5.<java.io.Writer: void write(char[],int,int)>(r1, i0, i1);
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

     label4:
        r3 = $r6;
        exitmonitor r2;

     label5:
        throw r3;

     label6:
        goto label9;

     label7:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r9.<java.lang.Thread: void interrupt()>();
        goto label9;

     label8:
        $r10 := @caughtexception;
        r11 = $r10;
        r0.<java.io.PrintWriter: boolean trouble> = 1;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.io.InterruptedIOException from label0 to label6 with label7;
        catch java.io.IOException from label0 to label6 with label8;
    }

    public void write(char[])
    {
        java.io.PrintWriter r0;
        char[] r1;
        int $i0;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: char[];
        $i0 = lengthof r1;
        virtualinvoke r0.<java.io.PrintWriter: void write(char[],int,int)>(r1, 0, $i0);
        return;
    }

    public void write(java.lang.String, int, int)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        java.io.Writer $r5;
        java.io.InterruptedIOException $r7, r8;
        java.lang.Thread $r9;
        java.io.IOException $r10, r11;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;

     label0:
        $r4 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r2 = $r4;
        entermonitor $r4;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void ensureOpen()>();
        $r5 = r0.<java.io.PrintWriter: java.io.Writer out>;
        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String,int,int)>(r1, i0, i1);
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

     label4:
        r3 = $r6;
        exitmonitor r2;

     label5:
        throw r3;

     label6:
        goto label9;

     label7:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r9.<java.lang.Thread: void interrupt()>();
        goto label9;

     label8:
        $r10 := @caughtexception;
        r11 = $r10;
        r0.<java.io.PrintWriter: boolean trouble> = 1;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.io.InterruptedIOException from label0 to label6 with label7;
        catch java.io.IOException from label0 to label6 with label8;
    }

    public void write(java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.String;
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String,int,int)>(r1, 0, $i0);
        return;
    }

    private void newLine()
    {
        java.io.PrintWriter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        java.io.Writer $r4, $r6;
        java.lang.String $r5;
        boolean $z0;
        java.io.InterruptedIOException $r8, r9;
        java.lang.Thread $r10;
        java.io.IOException $r11, r12;

        r0 := @this: java.io.PrintWriter;

     label0:
        $r3 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void ensureOpen()>();
        $r4 = r0.<java.io.PrintWriter: java.io.Writer out>;
        $r5 = r0.<java.io.PrintWriter: java.lang.String lineSeparator>;
        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>($r5);
        $z0 = r0.<java.io.PrintWriter: boolean autoFlush>;
        if $z0 == 0 goto label2;

        $r6 = r0.<java.io.PrintWriter: java.io.Writer out>;
        virtualinvoke $r6.<java.io.Writer: void flush()>();

     label2:
        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r7 := @caughtexception;

     label5:
        r2 = $r7;
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        goto label10;

     label8:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r10.<java.lang.Thread: void interrupt()>();
        goto label10;

     label9:
        $r11 := @caughtexception;
        r12 = $r11;
        r0.<java.io.PrintWriter: boolean trouble> = 1;

     label10:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.io.InterruptedIOException from label0 to label7 with label8;
        catch java.io.IOException from label0 to label7 with label9;
    }

    public void print(boolean)
    {
        java.io.PrintWriter r0;
        boolean z0;
        java.lang.String $r2;

        r0 := @this: java.io.PrintWriter;
        z0 := @parameter0: boolean;
        if z0 == 0 goto label0;

        $r2 = "true";
        goto label1;

     label0:
        $r2 = "false";

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>($r2);
        return;
    }

    public void print(char)
    {
        java.io.PrintWriter r0;
        char c0;

        r0 := @this: java.io.PrintWriter;
        c0 := @parameter0: char;
        virtualinvoke r0.<java.io.PrintWriter: void write(int)>(c0);
        return;
    }

    public void print(int)
    {
        java.io.PrintWriter r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;
        i0 := @parameter0: int;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>($r1);
        return;
    }

    public void print(long)
    {
        java.io.PrintWriter r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;
        l0 := @parameter0: long;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>($r1);
        return;
    }

    public void print(float)
    {
        java.io.PrintWriter r0;
        float f0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;
        f0 := @parameter0: float;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>($r1);
        return;
    }

    public void print(double)
    {
        java.io.PrintWriter r0;
        double d0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;
        d0 := @parameter0: double;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>($r1);
        return;
    }

    public void print(char[])
    {
        java.io.PrintWriter r0;
        char[] r1;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: char[];
        virtualinvoke r0.<java.io.PrintWriter: void write(char[])>(r1);
        return;
    }

    public void print(java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        r1 = "null";

     label0:
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>(r1);
        return;
    }

    public void print(java.lang.Object)
    {
        java.io.PrintWriter r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.Object;
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>($r2);
        return;
    }

    public void println()
    {
        java.io.PrintWriter r0;

        r0 := @this: java.io.PrintWriter;
        specialinvoke r0.<java.io.PrintWriter: void newLine()>();
        return;
    }

    public void println(boolean)
    {
        java.io.PrintWriter r0;
        boolean z0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: java.io.PrintWriter;
        z0 := @parameter0: boolean;
        $r3 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        virtualinvoke r0.<java.io.PrintWriter: void print(boolean)>(z0);
        virtualinvoke r0.<java.io.PrintWriter: void println()>();
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r4 := @caughtexception;

     label3:
        r2 = $r4;
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void println(char)
    {
        java.io.PrintWriter r0;
        char c0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: java.io.PrintWriter;
        c0 := @parameter0: char;
        $r3 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c0);
        virtualinvoke r0.<java.io.PrintWriter: void println()>();
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r4 := @caughtexception;

     label3:
        r2 = $r4;
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void println(int)
    {
        java.io.PrintWriter r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: java.io.PrintWriter;
        i0 := @parameter0: int;
        $r3 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i0);
        virtualinvoke r0.<java.io.PrintWriter: void println()>();
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r4 := @caughtexception;

     label3:
        r2 = $r4;
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void println(long)
    {
        java.io.PrintWriter r0;
        long l0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: java.io.PrintWriter;
        l0 := @parameter0: long;
        $r3 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l0);
        virtualinvoke r0.<java.io.PrintWriter: void println()>();
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r4 := @caughtexception;

     label3:
        r2 = $r4;
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void println(float)
    {
        java.io.PrintWriter r0;
        float f0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: java.io.PrintWriter;
        f0 := @parameter0: float;
        $r3 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        virtualinvoke r0.<java.io.PrintWriter: void print(float)>(f0);
        virtualinvoke r0.<java.io.PrintWriter: void println()>();
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r4 := @caughtexception;

     label3:
        r2 = $r4;
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void println(double)
    {
        java.io.PrintWriter r0;
        double d0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: java.io.PrintWriter;
        d0 := @parameter0: double;
        $r3 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        virtualinvoke r0.<java.io.PrintWriter: void print(double)>(d0);
        virtualinvoke r0.<java.io.PrintWriter: void println()>();
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r4 := @caughtexception;

     label3:
        r2 = $r4;
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void println(char[])
    {
        java.io.PrintWriter r0;
        char[] r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: char[];
        $r4 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        virtualinvoke r0.<java.io.PrintWriter: void print(char[])>(r1);
        virtualinvoke r0.<java.io.PrintWriter: void println()>();
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r5 := @caughtexception;

     label3:
        r3 = $r5;
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void println(java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);
        virtualinvoke r0.<java.io.PrintWriter: void println()>();
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r5 := @caughtexception;

     label3:
        r3 = $r5;
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void println(java.lang.Object)
    {
        java.io.PrintWriter r0;
        java.lang.Object r1, r3, $r5;
        java.lang.String r2;
        java.lang.Throwable r4, $r6;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.Object;
        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        $r5 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r3 = $r5;
        entermonitor $r5;

     label0:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);
        virtualinvoke r0.<java.io.PrintWriter: void println()>();
        exitmonitor r3;

     label1:
        goto label5;

     label2:
        $r6 := @caughtexception;

     label3:
        r4 = $r6;
        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public transient java.io.PrintWriter printf(java.lang.String, java.lang.Object[])
    {
        java.io.PrintWriter r0, $r3;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object[];
        $r3 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object[])>(r1, r2);
        return $r3;
    }

    public transient java.io.PrintWriter printf(java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.io.PrintWriter r0, $r4;
        java.util.Locale r1;
        java.lang.String r2;
        java.lang.Object[] r3;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.util.Locale;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Object[];
        $r4 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, r2, r3);
        return $r4;
    }

    public transient java.io.PrintWriter format(java.lang.String, java.lang.Object[])
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r15;
        java.util.Formatter $r6, $r7, $r10, $r11;
        java.util.Locale $r8, $r9, $r12;
        boolean $z0;
        java.io.Writer $r14;
        java.io.InterruptedIOException $r16, r17;
        java.lang.Thread $r18;
        java.io.IOException $r19, r20;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object[];

     label0:
        $r5 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r3 = $r5;
        entermonitor $r5;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void ensureOpen()>();
        $r6 = r0.<java.io.PrintWriter: java.util.Formatter formatter>;
        if $r6 == null goto label2;

        $r7 = r0.<java.io.PrintWriter: java.util.Formatter formatter>;
        $r8 = virtualinvoke $r7.<java.util.Formatter: java.util.Locale locale()>();
        $r9 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        if $r8 == $r9 goto label3;

     label2:
        $r10 = new java.util.Formatter;
        specialinvoke $r10.<java.util.Formatter: void <init>(java.lang.Appendable)>(r0);
        r0.<java.io.PrintWriter: java.util.Formatter formatter> = $r10;

     label3:
        $r11 = r0.<java.io.PrintWriter: java.util.Formatter formatter>;
        $r12 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        virtualinvoke $r11.<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>($r12, r1, r2);
        $z0 = r0.<java.io.PrintWriter: boolean autoFlush>;
        if $z0 == 0 goto label4;

        $r14 = r0.<java.io.PrintWriter: java.io.Writer out>;
        virtualinvoke $r14.<java.io.Writer: void flush()>();

     label4:
        exitmonitor r3;

     label5:
        goto label9;

     label6:
        $r15 := @caughtexception;

     label7:
        r4 = $r15;
        exitmonitor r3;

     label8:
        throw r4;

     label9:
        goto label12;

     label10:
        $r16 := @caughtexception;
        r17 = $r16;
        $r18 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r18.<java.lang.Thread: void interrupt()>();
        goto label12;

     label11:
        $r19 := @caughtexception;
        r20 = $r19;
        r0.<java.io.PrintWriter: boolean trouble> = 1;

     label12:
        return r0;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
        catch java.io.InterruptedIOException from label0 to label9 with label10;
        catch java.io.IOException from label0 to label9 with label11;
    }

    public transient java.io.PrintWriter format(java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.io.PrintWriter r0;
        java.util.Locale r1, $r9;
        java.lang.String r2;
        java.lang.Object[] r3;
        java.lang.Object r4, $r6;
        java.lang.Throwable r5, $r14;
        java.util.Formatter $r7, $r8, $r10, $r11;
        boolean $z0;
        java.io.Writer $r13;
        java.io.InterruptedIOException $r15, r16;
        java.lang.Thread $r17;
        java.io.IOException $r18, r19;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.util.Locale;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Object[];

     label0:
        $r6 = r0.<java.io.PrintWriter: java.lang.Object lock>;
        r4 = $r6;
        entermonitor $r6;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void ensureOpen()>();
        $r7 = r0.<java.io.PrintWriter: java.util.Formatter formatter>;
        if $r7 == null goto label2;

        $r8 = r0.<java.io.PrintWriter: java.util.Formatter formatter>;
        $r9 = virtualinvoke $r8.<java.util.Formatter: java.util.Locale locale()>();
        if $r9 == r1 goto label3;

     label2:
        $r10 = new java.util.Formatter;
        specialinvoke $r10.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>(r0, r1);
        r0.<java.io.PrintWriter: java.util.Formatter formatter> = $r10;

     label3:
        $r11 = r0.<java.io.PrintWriter: java.util.Formatter formatter>;
        virtualinvoke $r11.<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, r2, r3);
        $z0 = r0.<java.io.PrintWriter: boolean autoFlush>;
        if $z0 == 0 goto label4;

        $r13 = r0.<java.io.PrintWriter: java.io.Writer out>;
        virtualinvoke $r13.<java.io.Writer: void flush()>();

     label4:
        exitmonitor r4;

     label5:
        goto label9;

     label6:
        $r14 := @caughtexception;

     label7:
        r5 = $r14;
        exitmonitor r4;

     label8:
        throw r5;

     label9:
        goto label12;

     label10:
        $r15 := @caughtexception;
        r16 = $r15;
        $r17 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r17.<java.lang.Thread: void interrupt()>();
        goto label12;

     label11:
        $r18 := @caughtexception;
        r19 = $r18;
        r0.<java.io.PrintWriter: boolean trouble> = 1;

     label12:
        return r0;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
        catch java.io.InterruptedIOException from label0 to label9 with label10;
        catch java.io.IOException from label0 to label9 with label11;
    }

    public java.io.PrintWriter append(java.lang.CharSequence)
    {
        java.io.PrintWriter r0;
        java.lang.CharSequence r1;
        java.lang.String $r2;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.CharSequence;
        if r1 != null goto label0;

        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>("null");
        goto label1;

     label0:
        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>($r2);

     label1:
        return r0;
    }

    public java.io.PrintWriter append(java.lang.CharSequence, int, int)
    {
        java.io.PrintWriter r0;
        java.lang.CharSequence r1, r2, $r3, $r4;
        int i0, i1;
        java.lang.String $r5;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r1 != null goto label0;

        $r3 = "null";
        goto label1;

     label0:
        $r3 = r1;

     label1:
        r2 = $r3;
        $r4 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);
        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>($r5);
        return r0;
    }

    public java.io.PrintWriter append(char)
    {
        java.io.PrintWriter r0;
        char c0;

        r0 := @this: java.io.PrintWriter;
        c0 := @parameter0: char;
        virtualinvoke r0.<java.io.PrintWriter: void write(int)>(c0);
        return r0;
    }

    public volatile java.io.Writer append(char) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r1;
        char c0;

        r0 := @this: java.io.PrintWriter;
        c0 := @parameter0: char;
        $r1 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(char)>(c0);
        return $r1;
    }

    public volatile java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);
        return $r2;
    }

    public volatile java.io.Writer append(java.lang.CharSequence) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.CharSequence;
        $r2 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);
        return $r2;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r1;
        char c0;

        r0 := @this: java.io.PrintWriter;
        c0 := @parameter0: char;
        $r1 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(char)>(c0);
        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);
        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.io.PrintWriter;
        r1 := @parameter0: java.lang.CharSequence;
        $r2 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);
        return $r2;
    }
}
