public class java.io.DataInputStream extends java.io.FilterInputStream implements java.io.DataInput
{
    private byte[] bytearr;
    private char[] chararr;
    private byte[] readBuffer;
    private char[] lineBuffer;

    public void <init>(java.io.InputStream)
    {
        java.io.DataInputStream r0;
        java.io.InputStream r1;
        byte[] $r2, $r4;
        char[] $r3;

        r0 := @this: java.io.DataInputStream;
        r1 := @parameter0: java.io.InputStream;
        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);
        $r2 = newarray (byte)[80];
        r0.<java.io.DataInputStream: byte[] bytearr> = $r2;
        $r3 = newarray (char)[80];
        r0.<java.io.DataInputStream: char[] chararr> = $r3;
        $r4 = newarray (byte)[8];
        r0.<java.io.DataInputStream: byte[] readBuffer> = $r4;
        return;
    }

    public final int read(byte[]) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] r1;
        java.io.InputStream $r2;
        int $i0, $i1;

        r0 := @this: java.io.DataInputStream;
        r1 := @parameter0: byte[];
        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        $i0 = lengthof r1;
        $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, 0, $i0);
        return $i1;
    }

    public final int read(byte[], int, int) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] r1;
        int i0, i1, $i2;
        java.io.InputStream $r2;

        r0 := @this: java.io.DataInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);
        return $i2;
    }

    public final void readFully(byte[]) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.DataInputStream;
        r1 := @parameter0: byte[];
        $i0 = lengthof r1;
        virtualinvoke r0.<java.io.DataInputStream: void readFully(byte[],int,int)>(r1, 0, $i0);
        return;
    }

    public final void readFully(byte[], int, int) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.IndexOutOfBoundsException $r2;
        java.io.InputStream $r3;
        java.io.EOFException $r4;

        r0 := @this: java.io.DataInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if i1 >= 0 goto label0;

        $r2 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label0:
        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r3 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        $i4 = i0 + i2;
        $i5 = i1 - i2;
        i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>(r1, $i4, $i5);
        if i3 >= 0 goto label2;

        $r4 = new java.io.EOFException;
        specialinvoke $r4.<java.io.EOFException: void <init>()>();
        throw $r4;

     label2:
        i2 = i2 + i3;
        goto label1;

     label3:
        return;
    }

    public final int skipBytes(int) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0, i1, $i2, $i5, i6;
        boolean z0;
        java.io.InputStream $r1;
        long $l3, $l4;

        r0 := @this: java.io.DataInputStream;
        i0 := @parameter0: int;
        i1 = 0;
        z0 = 0;

     label0:
        if i1 >= i0 goto label1;

        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        $i2 = i0 - i1;
        $l3 = (long) $i2;
        $l4 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l3);
        $i5 = (int) $l4;
        i6 = $i5;
        if $i5 <= 0 goto label1;

        i1 = i1 + i6;
        goto label0;

     label1:
        return i1;
    }

    public final boolean readBoolean() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0;
        java.io.InputStream $r1;
        java.io.EOFException $r2;
        boolean $z0;

        r0 := @this: java.io.DataInputStream;
        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();
        if i0 >= 0 goto label0;

        $r2 = new java.io.EOFException;
        specialinvoke $r2.<java.io.EOFException: void <init>()>();
        throw $r2;

     label0:
        if i0 == 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final byte readByte() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0;
        java.io.InputStream $r1;
        java.io.EOFException $r2;
        byte $b1;

        r0 := @this: java.io.DataInputStream;
        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();
        if i0 >= 0 goto label0;

        $r2 = new java.io.EOFException;
        specialinvoke $r2.<java.io.EOFException: void <init>()>();
        throw $r2;

     label0:
        $b1 = (byte) i0;
        return $b1;
    }

    public final int readUnsignedByte() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0;
        java.io.InputStream $r1;
        java.io.EOFException $r2;

        r0 := @this: java.io.DataInputStream;
        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();
        if i0 >= 0 goto label0;

        $r2 = new java.io.EOFException;
        specialinvoke $r2.<java.io.EOFException: void <init>()>();
        throw $r2;

     label0:
        return i0;
    }

    public final short readShort() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.io.InputStream $r1, $r2;
        java.io.EOFException $r3;
        short $s6;

        r0 := @this: java.io.DataInputStream;
        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();
        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();
        $i2 = i0 | i1;
        if $i2 >= 0 goto label0;

        $r3 = new java.io.EOFException;
        specialinvoke $r3.<java.io.EOFException: void <init>()>();
        throw $r3;

     label0:
        $i3 = i0 << 8;
        $i4 = i1 << 0;
        $i5 = $i3 + $i4;
        $s6 = (short) $i5;
        return $s6;
    }

    public final int readUnsignedShort() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.io.InputStream $r1, $r2;
        java.io.EOFException $r3;

        r0 := @this: java.io.DataInputStream;
        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();
        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();
        $i2 = i0 | i1;
        if $i2 >= 0 goto label0;

        $r3 = new java.io.EOFException;
        specialinvoke $r3.<java.io.EOFException: void <init>()>();
        throw $r3;

     label0:
        $i3 = i0 << 8;
        $i4 = i1 << 0;
        $i5 = $i3 + $i4;
        return $i5;
    }

    public final char readChar() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.io.InputStream $r1, $r2;
        java.io.EOFException $r3;
        char $c6;

        r0 := @this: java.io.DataInputStream;
        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();
        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();
        $i2 = i0 | i1;
        if $i2 >= 0 goto label0;

        $r3 = new java.io.EOFException;
        specialinvoke $r3.<java.io.EOFException: void <init>()>();
        throw $r3;

     label0:
        $i3 = i0 << 8;
        $i4 = i1 << 0;
        $i5 = $i3 + $i4;
        $c6 = (char) $i5;
        return $c6;
    }

    public final int readInt() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.io.InputStream $r1, $r2, $r3, $r4;
        java.io.EOFException $r5;

        r0 := @this: java.io.DataInputStream;
        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();
        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();
        $r3 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i2 = virtualinvoke $r3.<java.io.InputStream: int read()>();
        $r4 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i3 = virtualinvoke $r4.<java.io.InputStream: int read()>();
        $i4 = i0 | i1;
        $i5 = $i4 | i2;
        $i6 = $i5 | i3;
        if $i6 >= 0 goto label0;

        $r5 = new java.io.EOFException;
        specialinvoke $r5.<java.io.EOFException: void <init>()>();
        throw $r5;

     label0:
        $i7 = i0 << 24;
        $i8 = i1 << 16;
        $i9 = $i7 + $i8;
        $i10 = i2 << 8;
        $i11 = $i9 + $i10;
        $i12 = i3 << 0;
        $i13 = $i11 + $i12;
        return $i13;
    }

    public final long readLong() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        byte $b0, $b3, $b8, $b13, $b18, $b23, $b28, $b33;
        long $l1, $l2, $l5, $l6, $l7, $l10, $l11, $l12, $l15, $l16, $l17, $l20, $l21, $l22, $l26, $l27, $l31, $l32, $l36, $l37;
        short $s4, $s9, $s14, $s19, $s24, $s29, $s34;
        int $i25, $i30, $i35;

        r0 := @this: java.io.DataInputStream;
        $r1 = r0.<java.io.DataInputStream: byte[] readBuffer>;
        virtualinvoke r0.<java.io.DataInputStream: void readFully(byte[],int,int)>($r1, 0, 8);
        $r2 = r0.<java.io.DataInputStream: byte[] readBuffer>;
        $b0 = $r2[0];
        $l1 = (long) $b0;
        $l2 = $l1 << 56;
        $r3 = r0.<java.io.DataInputStream: byte[] readBuffer>;
        $b3 = $r3[1];
        $s4 = $b3 & 255;
        $l5 = (long) $s4;
        $l6 = $l5 << 48;
        $l7 = $l2 + $l6;
        $r4 = r0.<java.io.DataInputStream: byte[] readBuffer>;
        $b8 = $r4[2];
        $s9 = $b8 & 255;
        $l10 = (long) $s9;
        $l11 = $l10 << 40;
        $l12 = $l7 + $l11;
        $r5 = r0.<java.io.DataInputStream: byte[] readBuffer>;
        $b13 = $r5[3];
        $s14 = $b13 & 255;
        $l15 = (long) $s14;
        $l16 = $l15 << 32;
        $l17 = $l12 + $l16;
        $r6 = r0.<java.io.DataInputStream: byte[] readBuffer>;
        $b18 = $r6[4];
        $s19 = $b18 & 255;
        $l20 = (long) $s19;
        $l21 = $l20 << 24;
        $l22 = $l17 + $l21;
        $r7 = r0.<java.io.DataInputStream: byte[] readBuffer>;
        $b23 = $r7[5];
        $s24 = $b23 & 255;
        $i25 = $s24 << 16;
        $l26 = (long) $i25;
        $l27 = $l22 + $l26;
        $r8 = r0.<java.io.DataInputStream: byte[] readBuffer>;
        $b28 = $r8[6];
        $s29 = $b28 & 255;
        $i30 = $s29 << 8;
        $l31 = (long) $i30;
        $l32 = $l27 + $l31;
        $r9 = r0.<java.io.DataInputStream: byte[] readBuffer>;
        $b33 = $r9[7];
        $s34 = $b33 & 255;
        $i35 = $s34 << 0;
        $l36 = (long) $i35;
        $l37 = $l32 + $l36;
        return $l37;
    }

    public final float readFloat() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int $i0;
        float $f0;

        r0 := @this: java.io.DataInputStream;
        $i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();
        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);
        return $f0;
    }

    public final double readDouble() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        long $l0;
        double $d0;

        r0 := @this: java.io.DataInputStream;
        $l0 = virtualinvoke r0.<java.io.DataInputStream: long readLong()>();
        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);
        return $d0;
    }

    public final java.lang.String readLine() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        char[] r1, $r2, $r10;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        java.io.InputStream $r3, $r4, $r5, $r7, $r8;
        boolean $z0;
        java.io.PushbackInputStream $r6, $r9;
        char $c9;
        java.lang.String $r11;

        r0 := @this: java.io.DataInputStream;
        r1 = r0.<java.io.DataInputStream: char[] lineBuffer>;
        if r1 != null goto label0;

        $r2 = newarray (char)[128];
        r0.<java.io.DataInputStream: char[] lineBuffer> = $r2;
        r1 = $r2;

     label0:
        i0 = lengthof r1;
        i1 = 0;

     label1:
        $r3 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        $i4 = virtualinvoke $r3.<java.io.InputStream: int read()>();
        i2 = $i4;
        lookupswitch($i4)
        {
            case -1: goto label2;
            case 10: goto label2;
            case 13: goto label3;
            default: goto label5;
        };

     label2:
        goto label7;

     label3:
        $r4 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        i3 = virtualinvoke $r4.<java.io.InputStream: int read()>();
        if i3 == 10 goto label7;

        if i3 == -1 goto label7;

        $r5 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        $z0 = $r5 instanceof java.io.PushbackInputStream;
        if $z0 != 0 goto label4;

        $r6 = new java.io.PushbackInputStream;
        $r7 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        specialinvoke $r6.<java.io.PushbackInputStream: void <init>(java.io.InputStream)>($r7);
        r0.<java.io.DataInputStream: java.io.InputStream in> = $r6;

     label4:
        $r8 = r0.<java.io.DataInputStream: java.io.InputStream in>;
        $r9 = (java.io.PushbackInputStream) $r8;
        virtualinvoke $r9.<java.io.PushbackInputStream: void unread(int)>(i3);
        goto label7;

     label5:
        i0 = i0 + -1;
        if i0 >= 0 goto label6;

        $i5 = i1 + 128;
        r1 = newarray (char)[$i5];
        $i6 = lengthof r1;
        $i7 = $i6 - i1;
        i0 = $i7 - 1;
        $r10 = r0.<java.io.DataInputStream: char[] lineBuffer>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r1, 0, i1);
        r0.<java.io.DataInputStream: char[] lineBuffer> = r1;

     label6:
        $i8 = i1;
        i1 = i1 + 1;
        $c9 = (char) i2;
        r1[$i8] = $c9;
        goto label1;

     label7:
        if i2 != -1 goto label8;

        if i1 != 0 goto label8;

        return null;

     label8:
        $r11 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>(r1, 0, i1);
        return $r11;
    }

    public final java.lang.String readUTF() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        java.lang.String $r1;

        r0 := @this: java.io.DataInputStream;
        $r1 = staticinvoke <java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>(r0);
        return $r1;
    }

    public static final java.lang.String readUTF(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r0;
        int i0, i1, i2, $i5, $i6, $i7, $i10, $i15, $i17, $i19, $i21, $i23, $i25, $i27, $i30, $i31, $i33, $i35, $i36, $i38, $i39;
        null_type n0, n1;
        java.io.DataInputStream r1;
        byte b3, b4, $b8, $b12, $b22, b26, $b34, $b37;
        boolean $z0;
        byte[] $r2, $r3, r6;
        char[] $r4, r5;
        short s9, s13, $s14, $s18, $s20, $s28, $s29, $s32;
        char $c11, $c16, $c24, $c40;
        java.io.UTFDataFormatException $r7, $r8, $r13, $r14, $r19;
        java.lang.StringBuilder $r9, $r10, $r11, $r15, $r16, $r17, $r20, $r21, $r22;
        java.lang.String $r12, $r18, $r23, $r24;

        r0 := @parameter0: java.io.DataInput;
        i0 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedShort()>();
        n0 = null;
        n1 = null;
        $z0 = r0 instanceof java.io.DataInputStream;
        if $z0 == 0 goto label1;

        r1 = (java.io.DataInputStream) r0;
        $r2 = r1.<java.io.DataInputStream: byte[] bytearr>;
        $i5 = lengthof $r2;
        if $i5 >= i0 goto label0;

        $i6 = i0 * 2;
        $r3 = newarray (byte)[$i6];
        r1.<java.io.DataInputStream: byte[] bytearr> = $r3;
        $i7 = i0 * 2;
        $r4 = newarray (char)[$i7];
        r1.<java.io.DataInputStream: char[] chararr> = $r4;

     label0:
        r5 = r1.<java.io.DataInputStream: char[] chararr>;
        r6 = r1.<java.io.DataInputStream: byte[] bytearr>;
        goto label2;

     label1:
        r6 = newarray (byte)[i0];
        r5 = newarray (char)[i0];

     label2:
        i1 = 0;
        i2 = 0;
        interfaceinvoke r0.<java.io.DataInput: void readFully(byte[],int,int)>(r6, 0, i0);

     label3:
        if i1 >= i0 goto label5;

        $b8 = r6[i1];
        s9 = $b8 & 255;
        if s9 <= 127 goto label4;

        goto label5;

     label4:
        i1 = i1 + 1;
        $i10 = i2;
        i2 = i2 + 1;
        $c11 = (char) s9;
        r5[$i10] = $c11;
        goto label3;

     label5:
        if i1 >= i0 goto label15;

        $b12 = r6[i1];
        s13 = $b12 & 255;
        $s14 = s13 >> 4;
        tableswitch($s14)
        {
            case 0: goto label6;
            case 1: goto label6;
            case 2: goto label6;
            case 3: goto label6;
            case 4: goto label6;
            case 5: goto label6;
            case 6: goto label6;
            case 7: goto label6;
            case 8: goto label14;
            case 9: goto label14;
            case 10: goto label14;
            case 11: goto label14;
            case 12: goto label7;
            case 13: goto label7;
            case 14: goto label10;
            default: goto label14;
        };

     label6:
        i1 = i1 + 1;
        $i15 = i2;
        i2 = i2 + 1;
        $c16 = (char) s13;
        r5[$i15] = $c16;
        goto label5;

     label7:
        i1 = i1 + 2;
        if i1 <= i0 goto label8;

        $r7 = new java.io.UTFDataFormatException;
        specialinvoke $r7.<java.io.UTFDataFormatException: void <init>(java.lang.String)>("malformed input: partial character at end");
        throw $r7;

     label8:
        $i17 = i1 - 1;
        b3 = r6[$i17];
        $s18 = b3 & 192;
        if $s18 == 128 goto label9;

        $r8 = new java.io.UTFDataFormatException;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed input around byte ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.io.UTFDataFormatException: void <init>(java.lang.String)>($r12);
        throw $r8;

     label9:
        $i19 = i2;
        i2 = i2 + 1;
        $s20 = s13 & 31;
        $i21 = $s20 << 6;
        $b22 = b3 & 63;
        $i23 = $i21 | $b22;
        $c24 = (char) $i23;
        r5[$i19] = $c24;
        goto label5;

     label10:
        i1 = i1 + 3;
        if i1 <= i0 goto label11;

        $r13 = new java.io.UTFDataFormatException;
        specialinvoke $r13.<java.io.UTFDataFormatException: void <init>(java.lang.String)>("malformed input: partial character at end");
        throw $r13;

     label11:
        $i25 = i1 - 2;
        b26 = r6[$i25];
        $i27 = i1 - 1;
        b4 = r6[$i27];
        $s28 = b26 & 192;
        if $s28 != 128 goto label12;

        $s29 = b4 & 192;
        if $s29 == 128 goto label13;

     label12:
        $r14 = new java.io.UTFDataFormatException;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed input around byte ");
        $i30 = i1 - 1;
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<java.io.UTFDataFormatException: void <init>(java.lang.String)>($r18);
        throw $r14;

     label13:
        $i31 = i2;
        i2 = i2 + 1;
        $s32 = s13 & 15;
        $i33 = $s32 << 12;
        $b34 = b26 & 63;
        $i35 = $b34 << 6;
        $i36 = $i33 | $i35;
        $b37 = b4 & 63;
        $i38 = $b37 << 0;
        $i39 = $i36 | $i38;
        $c40 = (char) $i39;
        r5[$i31] = $c40;
        goto label5;

     label14:
        $r19 = new java.io.UTFDataFormatException;
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed input around byte ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r19.<java.io.UTFDataFormatException: void <init>(java.lang.String)>($r23);
        throw $r19;

     label15:
        $r24 = new java.lang.String;
        specialinvoke $r24.<java.lang.String: void <init>(char[],int,int)>(r5, 0, i2);
        return $r24;
    }
}
