public class java.lang.SecurityManager extends java.lang.Object
{
    protected boolean inCheck;
    private boolean initialized;
    private static java.lang.ThreadGroup rootGroup;
    private static boolean packageAccessValid;
    private static java.lang.String[] packageAccess;
    private static final java.lang.Object packageAccessLock;
    private static boolean packageDefinitionValid;
    private static java.lang.String[] packageDefinition;
    private static final java.lang.Object packageDefinitionLock;

    private boolean hasAllPermission()
    {
        java.lang.SecurityManager r0;
        java.security.AllPermission $r1;
        java.lang.SecurityException r2, $r3;
        boolean $z0;

        r0 := @this: java.lang.SecurityManager;

     label0:
        $r1 = <sun.security.util.SecurityConstants: java.security.AllPermission ALL_PERMISSION>;
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);
        $z0 = 1;

     label1:
        return $z0;

     label2:
        $r3 := @caughtexception;
        r2 = $r3;
        return 0;

        catch java.lang.SecurityException from label0 to label1 with label2;
    }

    public boolean getInCheck()
    {
        java.lang.SecurityManager r0;
        boolean $z0;

        r0 := @this: java.lang.SecurityManager;
        $z0 = r0.<java.lang.SecurityManager: boolean inCheck>;
        return $z0;
    }

    public void <init>()
    {
        java.lang.SecurityManager r0, r2;
        java.lang.Class r1, $r4;
        java.lang.Throwable r3, $r6;
        java.lang.RuntimePermission $r5;

        r0 := @this: java.lang.SecurityManager;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.SecurityManager: boolean initialized> = 0;
        $r4 = class "java/lang/SecurityManager";
        r1 = $r4;
        entermonitor $r4;

     label0:
        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r2 == null goto label1;

        $r5 = new java.lang.RuntimePermission;
        specialinvoke $r5.<java.lang.RuntimePermission: void <init>(java.lang.String)>("createSecurityManager");
        virtualinvoke r2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r5);

     label1:
        r0.<java.lang.SecurityManager: boolean initialized> = 1;
        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

     label4:
        r3 = $r6;
        exitmonitor r1;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected native java.lang.Class[] getClassContext();

    protected java.lang.ClassLoader currentClassLoader()
    {
        java.lang.SecurityManager r0;
        java.lang.ClassLoader r1;
        boolean $z0;

        r0 := @this: java.lang.SecurityManager;
        r1 = specialinvoke r0.<java.lang.SecurityManager: java.lang.ClassLoader currentClassLoader0()>();
        if r1 == null goto label0;

        $z0 = specialinvoke r0.<java.lang.SecurityManager: boolean hasAllPermission()>();
        if $z0 == 0 goto label0;

        r1 = null;

     label0:
        return r1;
    }

    private native java.lang.ClassLoader currentClassLoader0();

    protected java.lang.Class currentLoadedClass()
    {
        java.lang.SecurityManager r0;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: java.lang.SecurityManager;
        r1 = specialinvoke r0.<java.lang.SecurityManager: java.lang.Class currentLoadedClass0()>();
        if r1 == null goto label0;

        $z0 = specialinvoke r0.<java.lang.SecurityManager: boolean hasAllPermission()>();
        if $z0 == 0 goto label0;

        r1 = null;

     label0:
        return r1;
    }

    protected native int classDepth(java.lang.String);

    protected int classLoaderDepth()
    {
        java.lang.SecurityManager r0;
        int i0;
        boolean $z0;

        r0 := @this: java.lang.SecurityManager;
        i0 = specialinvoke r0.<java.lang.SecurityManager: int classLoaderDepth0()>();
        if i0 == -1 goto label1;

        $z0 = specialinvoke r0.<java.lang.SecurityManager: boolean hasAllPermission()>();
        if $z0 == 0 goto label0;

        i0 = -1;
        goto label1;

     label0:
        i0 = i0 + -1;

     label1:
        return i0;
    }

    private native int classLoaderDepth0();

    protected boolean inClass(java.lang.String)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1;
        int $i0;
        boolean $z0;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        $i0 = virtualinvoke r0.<java.lang.SecurityManager: int classDepth(java.lang.String)>(r1);
        if $i0 < 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    protected boolean inClassLoader()
    {
        java.lang.SecurityManager r0;
        java.lang.ClassLoader $r1;
        boolean $z0;

        r0 := @this: java.lang.SecurityManager;
        $r1 = virtualinvoke r0.<java.lang.SecurityManager: java.lang.ClassLoader currentClassLoader()>();
        if $r1 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.Object getSecurityContext()
    {
        java.lang.SecurityManager r0;
        java.security.AccessControlContext $r1;

        r0 := @this: java.lang.SecurityManager;
        $r1 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();
        return $r1;
    }

    public void checkPermission(java.security.Permission)
    {
        java.lang.SecurityManager r0;
        java.security.Permission r1;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.security.Permission;
        staticinvoke <java.security.AccessController: void checkPermission(java.security.Permission)>(r1);
        return;
    }

    public void checkPermission(java.security.Permission, java.lang.Object)
    {
        java.lang.SecurityManager r0;
        java.security.Permission r1;
        java.lang.Object r2;
        boolean $z0;
        java.security.AccessControlContext $r3;
        java.lang.SecurityException $r4;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.security.Permission;
        r2 := @parameter1: java.lang.Object;
        $z0 = r2 instanceof java.security.AccessControlContext;
        if $z0 == 0 goto label0;

        $r3 = (java.security.AccessControlContext) r2;
        virtualinvoke $r3.<java.security.AccessControlContext: void checkPermission(java.security.Permission)>(r1);
        goto label1;

     label0:
        $r4 = new java.lang.SecurityException;
        specialinvoke $r4.<java.lang.SecurityException: void <init>()>();
        throw $r4;

     label1:
        return;
    }

    public void checkCreateClassLoader()
    {
        java.lang.SecurityManager r0;
        java.lang.RuntimePermission $r1;

        r0 := @this: java.lang.SecurityManager;
        $r1 = <sun.security.util.SecurityConstants: java.lang.RuntimePermission CREATE_CLASSLOADER_PERMISSION>;
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);
        return;
    }

    private static java.lang.ThreadGroup getRootGroup()
    {
        java.lang.Thread $r0;
        java.lang.ThreadGroup r1, $r2;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();

     label0:
        $r2 = virtualinvoke r1.<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>();
        if $r2 == null goto label1;

        r1 = virtualinvoke r1.<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>();
        goto label0;

     label1:
        return r1;
    }

    public void checkAccess(java.lang.Thread)
    {
        java.lang.SecurityManager r0;
        java.lang.Thread r1;
        java.lang.NullPointerException $r2;
        java.lang.ThreadGroup $r3, $r4;
        java.lang.RuntimePermission $r5;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.Thread;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("thread can\'t be null");
        throw $r2;

     label0:
        $r3 = virtualinvoke r1.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();
        $r4 = <java.lang.SecurityManager: java.lang.ThreadGroup rootGroup>;
        if $r3 != $r4 goto label1;

        $r5 = <sun.security.util.SecurityConstants: java.lang.RuntimePermission MODIFY_THREAD_PERMISSION>;
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r5);

     label1:
        return;
    }

    public void checkAccess(java.lang.ThreadGroup)
    {
        java.lang.SecurityManager r0;
        java.lang.ThreadGroup r1, $r3;
        java.lang.NullPointerException $r2;
        java.lang.RuntimePermission $r4;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.ThreadGroup;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("thread group can\'t be null");
        throw $r2;

     label0:
        $r3 = <java.lang.SecurityManager: java.lang.ThreadGroup rootGroup>;
        if r1 != $r3 goto label1;

        $r4 = <sun.security.util.SecurityConstants: java.lang.RuntimePermission MODIFY_THREADGROUP_PERMISSION>;
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r4);

     label1:
        return;
    }

    public void checkExit(int)
    {
        java.lang.SecurityManager r0;
        int i0;
        java.lang.RuntimePermission $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: java.lang.SecurityManager;
        i0 := @parameter0: int;
        $r1 = new java.lang.RuntimePermission;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exitVM.");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.RuntimePermission: void <init>(java.lang.String)>($r5);
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);
        return;
    }

    public void checkExec(java.lang.String)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1;
        java.io.File $r2, r3;
        boolean $z0;
        java.io.FilePermission $r4, $r5;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.io.File;
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        $z0 = virtualinvoke r3.<java.io.File: boolean isAbsolute()>();
        if $z0 == 0 goto label0;

        $r4 = new java.io.FilePermission;
        specialinvoke $r4.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r1, "execute");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r4);
        goto label1;

     label0:
        $r5 = new java.io.FilePermission;
        specialinvoke $r5.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>("<<ALL FILES>>", "execute");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r5);

     label1:
        return;
    }

    public void checkLink(java.lang.String)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r2, $r5, $r6;
        java.lang.NullPointerException $r3;
        java.lang.RuntimePermission $r4;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("library can\'t be null");
        throw $r3;

     label0:
        $r4 = new java.lang.RuntimePermission;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loadLibrary.");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.lang.RuntimePermission: void <init>(java.lang.String)>($r7);
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r4);
        return;
    }

    public void checkRead(java.io.FileDescriptor)
    {
        java.lang.SecurityManager r0;
        java.io.FileDescriptor r1;
        java.lang.NullPointerException $r2;
        java.lang.RuntimePermission $r3;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.io.FileDescriptor;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("file descriptor can\'t be null");
        throw $r2;

     label0:
        $r3 = new java.lang.RuntimePermission;
        specialinvoke $r3.<java.lang.RuntimePermission: void <init>(java.lang.String)>("readFileDescriptor");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r3);
        return;
    }

    public void checkRead(java.lang.String)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1;
        java.io.FilePermission $r2;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.io.FilePermission;
        specialinvoke $r2.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r1, "read");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);
        return;
    }

    public void checkRead(java.lang.String, java.lang.Object)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.io.FilePermission $r3;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = new java.io.FilePermission;
        specialinvoke $r3.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r1, "read");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission,java.lang.Object)>($r3, r2);
        return;
    }

    public void checkWrite(java.io.FileDescriptor)
    {
        java.lang.SecurityManager r0;
        java.io.FileDescriptor r1;
        java.lang.NullPointerException $r2;
        java.lang.RuntimePermission $r3;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.io.FileDescriptor;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("file descriptor can\'t be null");
        throw $r2;

     label0:
        $r3 = new java.lang.RuntimePermission;
        specialinvoke $r3.<java.lang.RuntimePermission: void <init>(java.lang.String)>("writeFileDescriptor");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r3);
        return;
    }

    public void checkWrite(java.lang.String)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1;
        java.io.FilePermission $r2;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.io.FilePermission;
        specialinvoke $r2.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r1, "write");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);
        return;
    }

    public void checkDelete(java.lang.String)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1;
        java.io.FilePermission $r2;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.io.FilePermission;
        specialinvoke $r2.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r1, "delete");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);
        return;
    }

    public void checkConnect(java.lang.String, int)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1, $r13;
        int i0, $i1;
        java.lang.NullPointerException $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12;
        java.net.SocketPermission $r7, $r8;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("host can\'t be null");
        throw $r2;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);
        if $i1 == -1 goto label1;

        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if i0 != -1 goto label2;

        $r7 = new java.net.SocketPermission;
        specialinvoke $r7.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(r1, "resolve");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r7);
        goto label3;

     label2:
        $r8 = new java.net.SocketPermission;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>($r13, "connect");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r8);

     label3:
        return;
    }

    public void checkConnect(java.lang.String, int, java.lang.Object)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1, $r14;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.NullPointerException $r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        java.net.SocketPermission $r8, $r9;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.Object;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("host can\'t be null");
        throw $r3;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);
        if $i1 == -1 goto label1;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if i0 != -1 goto label2;

        $r8 = new java.net.SocketPermission;
        specialinvoke $r8.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(r1, "resolve");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission,java.lang.Object)>($r8, r2);
        goto label3;

     label2:
        $r9 = new java.net.SocketPermission;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>($r14, "connect");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission,java.lang.Object)>($r9, r2);

     label3:
        return;
    }

    public void checkListen(int)
    {
        java.lang.SecurityManager r0;
        int i0;
        java.net.SocketPermission $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: java.lang.SecurityManager;
        i0 := @parameter0: int;
        $r1 = new java.net.SocketPermission;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("localhost:");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>($r5, "listen");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);
        return;
    }

    public void checkAccept(java.lang.String, int)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1, $r12;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r9, $r10, $r11;
        java.lang.NullPointerException $r3;
        boolean $z0;
        java.net.SocketPermission $r8;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("host can\'t be null");
        throw $r3;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);
        if $i1 == -1 goto label1;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r8 = new java.net.SocketPermission;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>($r12, "accept");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r8);
        return;
    }

    public void checkMulticast(java.net.InetAddress)
    {
        java.lang.SecurityManager r0;
        java.net.InetAddress r1;
        java.lang.String r2;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.net.SocketPermission $r7;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.net.InetAddress;
        r2 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if $z0 != 0 goto label0;

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(58);
        if $i0 == -1 goto label0;

        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $r7 = new java.net.SocketPermission;
        specialinvoke $r7.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(r2, "connect,accept");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r7);
        return;
    }

    public void checkMulticast(java.net.InetAddress, byte)
    {
        java.lang.SecurityManager r0;
        java.net.InetAddress r1;
        byte b0;
        java.lang.String r2;
        boolean $z0;
        int $i1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.net.SocketPermission $r7;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.net.InetAddress;
        b0 := @parameter1: byte;
        r2 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if $z0 != 0 goto label0;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(58);
        if $i1 == -1 goto label0;

        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $r7 = new java.net.SocketPermission;
        specialinvoke $r7.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(r2, "connect,accept");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r7);
        return;
    }

    public void checkPropertiesAccess()
    {
        java.lang.SecurityManager r0;
        java.util.PropertyPermission $r1;

        r0 := @this: java.lang.SecurityManager;
        $r1 = new java.util.PropertyPermission;
        specialinvoke $r1.<java.util.PropertyPermission: void <init>(java.lang.String,java.lang.String)>("*", "read,write");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);
        return;
    }

    public void checkPropertyAccess(java.lang.String)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1;
        java.util.PropertyPermission $r2;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.PropertyPermission;
        specialinvoke $r2.<java.util.PropertyPermission: void <init>(java.lang.String,java.lang.String)>(r1, "read");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);
        return;
    }

    public boolean checkTopLevelWindow(java.lang.Object)
    {
        java.lang.SecurityManager r0;
        java.lang.Object r1;
        java.lang.SecurityException r2, $r5;
        java.lang.NullPointerException $r3;
        java.security.Permission $r4;
        boolean $z0;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("window can\'t be null");
        throw $r3;

     label0:
        $r4 = <sun.security.util.SecurityConstants$AWT: java.security.Permission TOPLEVEL_WINDOW_PERMISSION>;
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r4);
        $z0 = 1;

     label1:
        return $z0;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        return 0;

        catch java.lang.SecurityException from label0 to label1 with label2;
    }

    public void checkPrintJobAccess()
    {
        java.lang.SecurityManager r0;
        java.lang.RuntimePermission $r1;

        r0 := @this: java.lang.SecurityManager;
        $r1 = new java.lang.RuntimePermission;
        specialinvoke $r1.<java.lang.RuntimePermission: void <init>(java.lang.String)>("queuePrintJob");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);
        return;
    }

    public void checkSystemClipboardAccess()
    {
        java.lang.SecurityManager r0;
        java.security.Permission $r1;

        r0 := @this: java.lang.SecurityManager;
        $r1 = <sun.security.util.SecurityConstants$AWT: java.security.Permission ACCESS_CLIPBOARD_PERMISSION>;
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);
        return;
    }

    public void checkAwtEventQueueAccess()
    {
        java.lang.SecurityManager r0;
        java.security.Permission $r1;

        r0 := @this: java.lang.SecurityManager;
        $r1 = <sun.security.util.SecurityConstants$AWT: java.security.Permission CHECK_AWT_EVENTQUEUE_PERMISSION>;
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);
        return;
    }

    private static java.lang.String[] getPackages(java.lang.String)
    {
        java.lang.String r0, r3, $r5;
        java.lang.String[] r1;
        java.util.StringTokenizer r2, $r4;
        int i0, i1, $i2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        r1 = null;
        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 != 0 goto label1;

        $r4 = new java.util.StringTokenizer;
        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ",");
        r2 = $r4;
        i0 = virtualinvoke r2.<java.util.StringTokenizer: int countTokens()>();
        if i0 <= 0 goto label1;

        r1 = newarray (java.lang.String)[i0];
        i1 = 0;

     label0:
        $z1 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreElements()>();
        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r3 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();
        $i2 = i1;
        i1 = i1 + 1;
        r1[$i2] = r3;
        goto label0;

     label1:
        if r1 != null goto label2;

        r1 = newarray (java.lang.String)[0];

     label2:
        return r1;
    }

    public void checkPackageAccess(java.lang.String)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1, r3, $r13, $r14, $r18, $r22;
        java.lang.Object r2, $r8, $r10;
        java.lang.String[] r4, $r11;
        java.lang.Throwable r5, $r12;
        java.lang.StringBuilder $r6, $r15, $r16, $r17, $r20, $r21;
        java.lang.NullPointerException $r7;
        boolean $z0, $z1, $z2;
        java.lang.SecurityManager$1 $r9;
        int i0, $i1;
        java.lang.RuntimePermission $r19;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r7 = new java.lang.NullPointerException;
        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("package name can\'t be null");
        throw $r7;

     label0:
        $r8 = <java.lang.SecurityManager: java.lang.Object packageAccessLock>;
        r2 = $r8;
        entermonitor $r8;

     label1:
        $z0 = <java.lang.SecurityManager: boolean packageAccessValid>;
        if $z0 != 0 goto label2;

        $r9 = new java.lang.SecurityManager$1;
        specialinvoke $r9.<java.lang.SecurityManager$1: void <init>(java.lang.SecurityManager)>(r0);
        $r10 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r9);
        r3 = (java.lang.String) $r10;
        $r11 = staticinvoke <java.lang.SecurityManager: java.lang.String[] getPackages(java.lang.String)>(r3);
        <java.lang.SecurityManager: java.lang.String[] packageAccess> = $r11;
        <java.lang.SecurityManager: boolean packageAccessValid> = 1;

     label2:
        r4 = <java.lang.SecurityManager: java.lang.String[] packageAccess>;
        exitmonitor r2;

     label3:
        goto label7;

     label4:
        $r12 := @caughtexception;

     label5:
        r5 = $r12;
        exitmonitor r2;

     label6:
        throw r5;

     label7:
        i0 = 0;

     label8:
        $i1 = lengthof r4;
        if i0 >= $i1 goto label11;

        $r13 = r4[i0];
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r13);
        if $z1 != 0 goto label9;

        $r14 = r4[i0];
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r18);
        if $z2 == 0 goto label10;

     label9:
        $r19 = new java.lang.RuntimePermission;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accessClassInPackage.");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r19.<java.lang.RuntimePermission: void <init>(java.lang.String)>($r22);
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r19);
        goto label11;

     label10:
        i0 = i0 + 1;
        goto label8;

     label11:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void checkPackageDefinition(java.lang.String)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1, r3, $r13, $r14, $r18, $r22;
        java.lang.Object r2, $r8, $r10;
        java.lang.String[] r4, $r11;
        java.lang.Throwable r5, $r12;
        java.lang.StringBuilder $r6, $r15, $r16, $r17, $r20, $r21;
        java.lang.NullPointerException $r7;
        boolean $z0, $z1, $z2;
        java.lang.SecurityManager$2 $r9;
        int i0, $i1;
        java.lang.RuntimePermission $r19;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r7 = new java.lang.NullPointerException;
        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("package name can\'t be null");
        throw $r7;

     label0:
        $r8 = <java.lang.SecurityManager: java.lang.Object packageDefinitionLock>;
        r2 = $r8;
        entermonitor $r8;

     label1:
        $z0 = <java.lang.SecurityManager: boolean packageDefinitionValid>;
        if $z0 != 0 goto label2;

        $r9 = new java.lang.SecurityManager$2;
        specialinvoke $r9.<java.lang.SecurityManager$2: void <init>(java.lang.SecurityManager)>(r0);
        $r10 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r9);
        r3 = (java.lang.String) $r10;
        $r11 = staticinvoke <java.lang.SecurityManager: java.lang.String[] getPackages(java.lang.String)>(r3);
        <java.lang.SecurityManager: java.lang.String[] packageDefinition> = $r11;
        <java.lang.SecurityManager: boolean packageDefinitionValid> = 1;

     label2:
        r4 = <java.lang.SecurityManager: java.lang.String[] packageDefinition>;
        exitmonitor r2;

     label3:
        goto label7;

     label4:
        $r12 := @caughtexception;

     label5:
        r5 = $r12;
        exitmonitor r2;

     label6:
        throw r5;

     label7:
        i0 = 0;

     label8:
        $i1 = lengthof r4;
        if i0 >= $i1 goto label11;

        $r13 = r4[i0];
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r13);
        if $z1 != 0 goto label9;

        $r14 = r4[i0];
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r18);
        if $z2 == 0 goto label10;

     label9:
        $r19 = new java.lang.RuntimePermission;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defineClassInPackage.");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r19.<java.lang.RuntimePermission: void <init>(java.lang.String)>($r22);
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r19);
        goto label11;

     label10:
        i0 = i0 + 1;
        goto label8;

     label11:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void checkSetFactory()
    {
        java.lang.SecurityManager r0;
        java.lang.RuntimePermission $r1;

        r0 := @this: java.lang.SecurityManager;
        $r1 = new java.lang.RuntimePermission;
        specialinvoke $r1.<java.lang.RuntimePermission: void <init>(java.lang.String)>("setFactory");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);
        return;
    }

    public void checkMemberAccess(java.lang.Class, int)
    {
        java.lang.SecurityManager r0;
        java.lang.Class r1, $r4;
        int i0, $i1;
        java.lang.Class[] r2;
        java.lang.NullPointerException $r3;
        java.lang.ClassLoader $r5, $r6;
        java.lang.RuntimePermission $r7;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.Class;
        i0 := @parameter1: int;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("class can\'t be null");
        throw $r3;

     label0:
        if i0 == 0 goto label2;

        r2 = virtualinvoke r0.<java.lang.SecurityManager: java.lang.Class[] getClassContext()>();
        $i1 = lengthof r2;
        if $i1 < 4 goto label1;

        $r4 = r2[3];
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        if $r5 == $r6 goto label2;

     label1:
        $r7 = <sun.security.util.SecurityConstants: java.lang.RuntimePermission CHECK_MEMBER_ACCESS_PERMISSION>;
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r7);

     label2:
        return;
    }

    public void checkSecurityAccess(java.lang.String)
    {
        java.lang.SecurityManager r0;
        java.lang.String r1;
        java.security.SecurityPermission $r2;

        r0 := @this: java.lang.SecurityManager;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.security.SecurityPermission;
        specialinvoke $r2.<java.security.SecurityPermission: void <init>(java.lang.String)>(r1);
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);
        return;
    }

    private native java.lang.Class currentLoadedClass0();

    public java.lang.ThreadGroup getThreadGroup()
    {
        java.lang.SecurityManager r0;
        java.lang.Thread $r1;
        java.lang.ThreadGroup $r2;

        r0 := @this: java.lang.SecurityManager;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();
        return $r2;
    }

    static void <clinit>()
    {
        java.lang.ThreadGroup $r0;
        java.lang.Object $r1, $r2;

        $r0 = staticinvoke <java.lang.SecurityManager: java.lang.ThreadGroup getRootGroup()>();
        <java.lang.SecurityManager: java.lang.ThreadGroup rootGroup> = $r0;
        <java.lang.SecurityManager: boolean packageAccessValid> = 0;
        $r1 = new java.lang.Object;
        specialinvoke $r1.<java.lang.Object: void <init>()>();
        <java.lang.SecurityManager: java.lang.Object packageAccessLock> = $r1;
        <java.lang.SecurityManager: boolean packageDefinitionValid> = 0;
        $r2 = new java.lang.Object;
        specialinvoke $r2.<java.lang.Object: void <init>()>();
        <java.lang.SecurityManager: java.lang.Object packageDefinitionLock> = $r2;
        return;
    }
}
