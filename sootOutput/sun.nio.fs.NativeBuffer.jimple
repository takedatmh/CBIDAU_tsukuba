class sun.nio.fs.NativeBuffer extends java.lang.Object
{
    private static final sun.misc.Unsafe unsafe;
    private final long address;
    private final int size;
    private final sun.misc.Cleaner cleaner;
    private java.lang.Object owner;

    void <init>(int)
    {
        sun.nio.fs.NativeBuffer r0;
        int i0;
        sun.misc.Unsafe $r1;
        long $l1, $l2, $l3;
        sun.nio.fs.NativeBuffer$Deallocator $r2;
        sun.misc.Cleaner $r3;

        r0 := @this: sun.nio.fs.NativeBuffer;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = <sun.nio.fs.NativeBuffer: sun.misc.Unsafe unsafe>;
        $l1 = (long) i0;
        $l2 = virtualinvoke $r1.<sun.misc.Unsafe: long allocateMemory(long)>($l1);
        r0.<sun.nio.fs.NativeBuffer: long address> = $l2;
        r0.<sun.nio.fs.NativeBuffer: int size> = i0;
        $r2 = new sun.nio.fs.NativeBuffer$Deallocator;
        $l3 = r0.<sun.nio.fs.NativeBuffer: long address>;
        specialinvoke $r2.<sun.nio.fs.NativeBuffer$Deallocator: void <init>(long)>($l3);
        $r3 = staticinvoke <sun.misc.Cleaner: sun.misc.Cleaner create(java.lang.Object,java.lang.Runnable)>(r0, $r2);
        r0.<sun.nio.fs.NativeBuffer: sun.misc.Cleaner cleaner> = $r3;
        return;
    }

    void release()
    {
        sun.nio.fs.NativeBuffer r0;

        r0 := @this: sun.nio.fs.NativeBuffer;
        staticinvoke <sun.nio.fs.NativeBuffers: void releaseNativeBuffer(sun.nio.fs.NativeBuffer)>(r0);
        return;
    }

    long address()
    {
        sun.nio.fs.NativeBuffer r0;
        long $l0;

        r0 := @this: sun.nio.fs.NativeBuffer;
        $l0 = r0.<sun.nio.fs.NativeBuffer: long address>;
        return $l0;
    }

    int size()
    {
        sun.nio.fs.NativeBuffer r0;
        int $i0;

        r0 := @this: sun.nio.fs.NativeBuffer;
        $i0 = r0.<sun.nio.fs.NativeBuffer: int size>;
        return $i0;
    }

    sun.misc.Cleaner cleaner()
    {
        sun.nio.fs.NativeBuffer r0;
        sun.misc.Cleaner $r1;

        r0 := @this: sun.nio.fs.NativeBuffer;
        $r1 = r0.<sun.nio.fs.NativeBuffer: sun.misc.Cleaner cleaner>;
        return $r1;
    }

    void setOwner(java.lang.Object)
    {
        sun.nio.fs.NativeBuffer r0;
        java.lang.Object r1;

        r0 := @this: sun.nio.fs.NativeBuffer;
        r1 := @parameter0: java.lang.Object;
        r0.<sun.nio.fs.NativeBuffer: java.lang.Object owner> = r1;
        return;
    }

    java.lang.Object owner()
    {
        sun.nio.fs.NativeBuffer r0;
        java.lang.Object $r1;

        r0 := @this: sun.nio.fs.NativeBuffer;
        $r1 = r0.<sun.nio.fs.NativeBuffer: java.lang.Object owner>;
        return $r1;
    }

    static sun.misc.Unsafe access$000()
    {
        sun.misc.Unsafe $r0;

        $r0 = <sun.nio.fs.NativeBuffer: sun.misc.Unsafe unsafe>;
        return $r0;
    }

    static void <clinit>()
    {
        sun.misc.Unsafe $r0;

        $r0 = staticinvoke <sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()>();
        <sun.nio.fs.NativeBuffer: sun.misc.Unsafe unsafe> = $r0;
        return;
    }
}
