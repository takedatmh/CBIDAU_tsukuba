public class javax.crypto.spec.RC5ParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
{
    private byte[] iv;
    private int version;
    private int rounds;
    private int wordSize;

    public void <init>(int, int, int)
    {
        javax.crypto.spec.RC5ParameterSpec r0;
        int i0, i1, i2;

        r0 := @this: javax.crypto.spec.RC5ParameterSpec;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<javax.crypto.spec.RC5ParameterSpec: byte[] iv> = null;
        r0.<javax.crypto.spec.RC5ParameterSpec: int version> = i0;
        r0.<javax.crypto.spec.RC5ParameterSpec: int rounds> = i1;
        r0.<javax.crypto.spec.RC5ParameterSpec: int wordSize> = i2;
        return;
    }

    public void <init>(int, int, int, byte[])
    {
        javax.crypto.spec.RC5ParameterSpec r0;
        int i0, i1, i2;
        byte[] r1;

        r0 := @this: javax.crypto.spec.RC5ParameterSpec;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        r1 := @parameter3: byte[];
        specialinvoke r0.<javax.crypto.spec.RC5ParameterSpec: void <init>(int,int,int,byte[],int)>(i0, i1, i2, r1, 0);
        return;
    }

    public void <init>(int, int, int, byte[], int)
    {
        javax.crypto.spec.RC5ParameterSpec r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        byte[] r1, $r4, $r5;
        java.lang.IllegalArgumentException $r2, $r3;

        r0 := @this: javax.crypto.spec.RC5ParameterSpec;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        r1 := @parameter3: byte[];
        i3 := @parameter4: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<javax.crypto.spec.RC5ParameterSpec: byte[] iv> = null;
        r0.<javax.crypto.spec.RC5ParameterSpec: int version> = i0;
        r0.<javax.crypto.spec.RC5ParameterSpec: int rounds> = i1;
        r0.<javax.crypto.spec.RC5ParameterSpec: int wordSize> = i2;
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IV missing");
        throw $r2;

     label0:
        $i5 = i2 / 8;
        i4 = $i5 * 2;
        $i6 = lengthof r1;
        $i7 = $i6 - i3;
        if $i7 >= i4 goto label1;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IV too short");
        throw $r3;

     label1:
        $r4 = newarray (byte)[i4];
        r0.<javax.crypto.spec.RC5ParameterSpec: byte[] iv> = $r4;
        $r5 = r0.<javax.crypto.spec.RC5ParameterSpec: byte[] iv>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, $r5, 0, i4);
        return;
    }

    public int getVersion()
    {
        javax.crypto.spec.RC5ParameterSpec r0;
        int $i0;

        r0 := @this: javax.crypto.spec.RC5ParameterSpec;
        $i0 = r0.<javax.crypto.spec.RC5ParameterSpec: int version>;
        return $i0;
    }

    public int getRounds()
    {
        javax.crypto.spec.RC5ParameterSpec r0;
        int $i0;

        r0 := @this: javax.crypto.spec.RC5ParameterSpec;
        $i0 = r0.<javax.crypto.spec.RC5ParameterSpec: int rounds>;
        return $i0;
    }

    public int getWordSize()
    {
        javax.crypto.spec.RC5ParameterSpec r0;
        int $i0;

        r0 := @this: javax.crypto.spec.RC5ParameterSpec;
        $i0 = r0.<javax.crypto.spec.RC5ParameterSpec: int wordSize>;
        return $i0;
    }

    public byte[] getIV()
    {
        javax.crypto.spec.RC5ParameterSpec r0;
        byte[] $r1, $r2, $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: javax.crypto.spec.RC5ParameterSpec;
        $r1 = r0.<javax.crypto.spec.RC5ParameterSpec: byte[] iv>;
        if $r1 != null goto label0;

        $r2 = null;
        goto label1;

     label0:
        $r3 = r0.<javax.crypto.spec.RC5ParameterSpec: byte[] iv>;
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();
        $r5 = (byte[]) $r4;
        $r2 = (byte[]) $r5;

     label1:
        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        javax.crypto.spec.RC5ParameterSpec r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        byte[] $r3, $r4;

        r0 := @this: javax.crypto.spec.RC5ParameterSpec;
        r1 := @parameter0: java.lang.Object;
        if r1 != r0 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof javax.crypto.spec.RC5ParameterSpec;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (javax.crypto.spec.RC5ParameterSpec) r1;
        $i0 = r0.<javax.crypto.spec.RC5ParameterSpec: int version>;
        $i1 = r2.<javax.crypto.spec.RC5ParameterSpec: int version>;
        if $i0 != $i1 goto label2;

        $i2 = r0.<javax.crypto.spec.RC5ParameterSpec: int rounds>;
        $i3 = r2.<javax.crypto.spec.RC5ParameterSpec: int rounds>;
        if $i2 != $i3 goto label2;

        $i4 = r0.<javax.crypto.spec.RC5ParameterSpec: int wordSize>;
        $i5 = r2.<javax.crypto.spec.RC5ParameterSpec: int wordSize>;
        if $i4 != $i5 goto label2;

        $r3 = r0.<javax.crypto.spec.RC5ParameterSpec: byte[] iv>;
        $r4 = r2.<javax.crypto.spec.RC5ParameterSpec: byte[] iv>;
        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r3, $r4);
        if $z1 == 0 goto label2;

        $z2 = 1;
        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public int hashCode()
    {
        javax.crypto.spec.RC5ParameterSpec r0;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        byte[] $r1, $r2, $r3;
        byte $b3;

        r0 := @this: javax.crypto.spec.RC5ParameterSpec;
        i0 = 0;
        $r1 = r0.<javax.crypto.spec.RC5ParameterSpec: byte[] iv>;
        if $r1 == null goto label1;

        i1 = 1;

     label0:
        $r2 = r0.<javax.crypto.spec.RC5ParameterSpec: byte[] iv>;
        $i2 = lengthof $r2;
        if i1 >= $i2 goto label1;

        $r3 = r0.<javax.crypto.spec.RC5ParameterSpec: byte[] iv>;
        $b3 = $r3[i1];
        $i4 = $b3 * i1;
        i0 = i0 + $i4;
        i1 = i1 + 1;
        goto label0;

     label1:
        $i5 = r0.<javax.crypto.spec.RC5ParameterSpec: int version>;
        $i6 = r0.<javax.crypto.spec.RC5ParameterSpec: int rounds>;
        $i7 = $i5 + $i6;
        $i8 = r0.<javax.crypto.spec.RC5ParameterSpec: int wordSize>;
        $i9 = $i7 + $i8;
        i10 = i0 + $i9;
        return i10;
    }
}
