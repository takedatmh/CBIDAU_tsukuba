class java.util.JumboEnumSet extends java.util.EnumSet
{
    private static final long serialVersionUID;
    private long[] elements;
    private int size;

    void <init>(java.lang.Class, java.lang.Enum[])
    {
        java.util.JumboEnumSet r0;
        java.lang.Class r1;
        java.lang.Enum[] r2;
        int $i0, $i1, $i2;
        long[] $r3;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.Enum[];
        specialinvoke r0.<java.util.EnumSet: void <init>(java.lang.Class,java.lang.Enum[])>(r1, r2);
        r0.<java.util.JumboEnumSet: int size> = 0;
        $i0 = lengthof r2;
        $i1 = $i0 + 63;
        $i2 = $i1 >>> 6;
        $r3 = newarray (long)[$i2];
        r0.<java.util.JumboEnumSet: long[] elements> = $r3;
        return;
    }

    void addRange(java.lang.Enum, java.lang.Enum)
    {
        java.util.JumboEnumSet r0;
        java.lang.Enum r1, r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i14, $i15, $i17, $i18, $i19, $i20;
        long[] $r3, $r4, $r5, $r6;
        long $l9, $l11, $l13, $l16;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.lang.Enum;
        r2 := @parameter1: java.lang.Enum;
        $i3 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();
        i0 = $i3 >>> 6;
        $i4 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();
        i1 = $i4 >>> 6;
        if i0 != i1 goto label0;

        $r3 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i5 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();
        $i6 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();
        $i7 = $i5 - $i6;
        $i8 = $i7 - 1;
        $l9 = -1L >>> $i8;
        $i10 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();
        $l11 = $l9 << $i10;
        $r3[i0] = $l11;
        goto label3;

     label0:
        $r4 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i12 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();
        $l13 = -1L << $i12;
        $r4[i0] = $l13;
        i2 = i0 + 1;

     label1:
        if i2 >= i1 goto label2;

        $r5 = r0.<java.util.JumboEnumSet: long[] elements>;
        $r5[i2] = -1L;
        i2 = i2 + 1;
        goto label1;

     label2:
        $r6 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i14 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();
        $i15 = 63 - $i14;
        $l16 = -1L >>> $i15;
        $r6[i1] = $l16;

     label3:
        $i17 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();
        $i18 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();
        $i19 = $i17 - $i18;
        $i20 = $i19 + 1;
        r0.<java.util.JumboEnumSet: int size> = $i20;
        return;
    }

    void addAll()
    {
        java.util.JumboEnumSet r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i8;
        long[] $r1, $r2, $r3, $r4;
        long $l4, $l7;
        java.lang.Enum[] $r5, $r6;

        r0 := @this: java.util.JumboEnumSet;
        i0 = 0;

     label0:
        $r1 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i1 = lengthof $r1;
        if i0 >= $i1 goto label1;

        $r2 = r0.<java.util.JumboEnumSet: long[] elements>;
        $r2[i0] = -1L;
        i0 = i0 + 1;
        goto label0;

     label1:
        $r3 = r0.<java.util.JumboEnumSet: long[] elements>;
        $r4 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i2 = lengthof $r4;
        $i3 = $i2 - 1;
        $l4 = $r3[$i3];
        $r5 = r0.<java.util.JumboEnumSet: java.lang.Enum[] universe>;
        $i5 = lengthof $r5;
        $i6 = neg $i5;
        $l7 = $l4 >>> $i6;
        $r3[$i3] = $l7;
        $r6 = r0.<java.util.JumboEnumSet: java.lang.Enum[] universe>;
        $i8 = lengthof $r6;
        r0.<java.util.JumboEnumSet: int size> = $i8;
        return;
    }

    void complement()
    {
        java.util.JumboEnumSet r0;
        int i0, $i1, $i4, $i5, $i7, $i8, $i11, $i12, $i13;
        long[] $r1, $r2, $r3, $r4, $r5;
        long $l2, $l3, $l6, $l9, $l10;
        java.lang.Enum[] $r6, $r7;

        r0 := @this: java.util.JumboEnumSet;
        i0 = 0;

     label0:
        $r1 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i1 = lengthof $r1;
        if i0 >= $i1 goto label1;

        $r2 = r0.<java.util.JumboEnumSet: long[] elements>;
        $r3 = r0.<java.util.JumboEnumSet: long[] elements>;
        $l2 = $r3[i0];
        $l3 = $l2 ^ -1L;
        $r2[i0] = $l3;
        i0 = i0 + 1;
        goto label0;

     label1:
        $r4 = r0.<java.util.JumboEnumSet: long[] elements>;
        $r5 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i4 = lengthof $r5;
        $i5 = $i4 - 1;
        $l6 = $r4[$i5];
        $r6 = r0.<java.util.JumboEnumSet: java.lang.Enum[] universe>;
        $i7 = lengthof $r6;
        $i8 = neg $i7;
        $l9 = -1L >>> $i8;
        $l10 = $l6 & $l9;
        $r4[$i5] = $l10;
        $r7 = r0.<java.util.JumboEnumSet: java.lang.Enum[] universe>;
        $i11 = lengthof $r7;
        $i12 = r0.<java.util.JumboEnumSet: int size>;
        $i13 = $i11 - $i12;
        r0.<java.util.JumboEnumSet: int size> = $i13;
        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.JumboEnumSet r0;
        java.util.JumboEnumSet$EnumSetIterator $r1;

        r0 := @this: java.util.JumboEnumSet;
        $r1 = new java.util.JumboEnumSet$EnumSetIterator;
        specialinvoke $r1.<java.util.JumboEnumSet$EnumSetIterator: void <init>(java.util.JumboEnumSet)>(r0);
        return $r1;
    }

    public int size()
    {
        java.util.JumboEnumSet r0;
        int $i0;

        r0 := @this: java.util.JumboEnumSet;
        $i0 = r0.<java.util.JumboEnumSet: int size>;
        return $i0;
    }

    public boolean isEmpty()
    {
        java.util.JumboEnumSet r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.util.JumboEnumSet;
        $i0 = r0.<java.util.JumboEnumSet: int size>;
        if $i0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.JumboEnumSet r0;
        java.lang.Object r1;
        java.lang.Class r2, $r3, $r4, $r5;
        int i0, $i1;
        java.lang.Enum $r6;
        long[] $r7;
        long $l2, $l3, $l4;
        byte $b5;
        boolean $z0;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        return 0;

     label0:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = r0.<java.util.JumboEnumSet: java.lang.Class elementType>;
        if r2 == $r3 goto label1;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();
        $r5 = r0.<java.util.JumboEnumSet: java.lang.Class elementType>;
        if $r4 == $r5 goto label1;

        return 0;

     label1:
        $r6 = (java.lang.Enum) r1;
        i0 = virtualinvoke $r6.<java.lang.Enum: int ordinal()>();
        $r7 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i1 = i0 >>> 6;
        $l2 = $r7[$i1];
        $l3 = 1L << i0;
        $l4 = $l2 & $l3;
        $b5 = $l4 cmp 0L;
        if $b5 == 0 goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean add(java.lang.Enum)
    {
        java.util.JumboEnumSet r0;
        java.lang.Enum r1;
        int i0, i1, $i9, $i10;
        long l2, $l4, $l5, $l6, $l7;
        boolean z0, $z1;
        long[] $r2, $r3, $r4;
        byte $b8;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.lang.Enum;
        virtualinvoke r0.<java.util.JumboEnumSet: void typeCheck(java.lang.Enum)>(r1);
        i0 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();
        i1 = i0 >>> 6;
        $r2 = r0.<java.util.JumboEnumSet: long[] elements>;
        l2 = $r2[i1];
        $r3 = r0.<java.util.JumboEnumSet: long[] elements>;
        $l4 = $r3[i1];
        $l5 = 1L << i0;
        $l6 = $l4 | $l5;
        $r3[i1] = $l6;
        $r4 = r0.<java.util.JumboEnumSet: long[] elements>;
        $l7 = $r4[i1];
        $b8 = $l7 cmp l2;
        if $b8 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;
        if z0 == 0 goto label2;

        $i9 = r0.<java.util.JumboEnumSet: int size>;
        $i10 = $i9 + 1;
        r0.<java.util.JumboEnumSet: int size> = $i10;

     label2:
        return z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.JumboEnumSet r0;
        java.lang.Object r1;
        java.lang.Class r2, $r3, $r4, $r5;
        int i0, i1, $i10, $i11;
        long l2, $l4, $l5, $l6, $l7, $l8;
        boolean z0, $z1;
        java.lang.Enum $r6;
        long[] $r7, $r8, $r9;
        byte $b9;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        return 0;

     label0:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = r0.<java.util.JumboEnumSet: java.lang.Class elementType>;
        if r2 == $r3 goto label1;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();
        $r5 = r0.<java.util.JumboEnumSet: java.lang.Class elementType>;
        if $r4 == $r5 goto label1;

        return 0;

     label1:
        $r6 = (java.lang.Enum) r1;
        i0 = virtualinvoke $r6.<java.lang.Enum: int ordinal()>();
        i1 = i0 >>> 6;
        $r7 = r0.<java.util.JumboEnumSet: long[] elements>;
        l2 = $r7[i1];
        $r8 = r0.<java.util.JumboEnumSet: long[] elements>;
        $l4 = $r8[i1];
        $l5 = 1L << i0;
        $l6 = $l5 ^ -1L;
        $l7 = $l4 & $l6;
        $r8[i1] = $l7;
        $r9 = r0.<java.util.JumboEnumSet: long[] elements>;
        $l8 = $r9[i1];
        $b9 = $l8 cmp l2;
        if $b9 == 0 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;
        if z0 == 0 goto label4;

        $i10 = r0.<java.util.JumboEnumSet: int size>;
        $i11 = $i10 - 1;
        r0.<java.util.JumboEnumSet: int size> = $i11;

     label4:
        return z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.JumboEnumSet r0, r2;
        java.util.Collection r1;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        java.lang.Class $r3, $r4;
        long[] $r5, $r6, $r7;
        long $l2, $l3, $l4, $l5;
        byte $b6;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.util.Collection;
        $z0 = r1 instanceof java.util.JumboEnumSet;
        if $z0 != 0 goto label0;

        $z1 = specialinvoke r0.<java.util.EnumSet: boolean containsAll(java.util.Collection)>(r1);
        return $z1;

     label0:
        r2 = (java.util.JumboEnumSet) r1;
        $r3 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;
        $r4 = r0.<java.util.JumboEnumSet: java.lang.Class elementType>;
        if $r3 == $r4 goto label1;

        $z2 = virtualinvoke r2.<java.util.JumboEnumSet: boolean isEmpty()>();
        return $z2;

     label1:
        i0 = 0;

     label2:
        $r5 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i1 = lengthof $r5;
        if i0 >= $i1 goto label4;

        $r6 = r2.<java.util.JumboEnumSet: long[] elements>;
        $l2 = $r6[i0];
        $r7 = r0.<java.util.JumboEnumSet: long[] elements>;
        $l3 = $r7[i0];
        $l4 = $l3 ^ -1L;
        $l5 = $l2 & $l4;
        $b6 = $l5 cmp 0L;
        if $b6 == 0 goto label3;

        return 0;

     label3:
        i0 = i0 + 1;
        goto label2;

     label4:
        return 1;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.JumboEnumSet r0, r2;
        java.util.Collection r1;
        java.lang.StringBuilder $r3, $r8, $r9, $r11;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r4, $r5, $r7, $r10;
        java.lang.ClassCastException $r6;
        java.lang.String $r12;
        long[] $r13, $r14, $r15;
        long $l3, $l4, $l5;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.util.Collection;
        $z0 = r1 instanceof java.util.JumboEnumSet;
        if $z0 != 0 goto label0;

        $z1 = specialinvoke r0.<java.util.EnumSet: boolean addAll(java.util.Collection)>(r1);
        return $z1;

     label0:
        r2 = (java.util.JumboEnumSet) r1;
        $r4 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;
        $r5 = r0.<java.util.JumboEnumSet: java.lang.Class elementType>;
        if $r4 == $r5 goto label2;

        $z2 = virtualinvoke r2.<java.util.JumboEnumSet: boolean isEmpty()>();
        if $z2 == 0 goto label1;

        return 0;

     label1:
        $r6 = new java.lang.ClassCastException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r7 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");
        $r10 = r0.<java.util.JumboEnumSet: java.lang.Class elementType>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.ClassCastException: void <init>(java.lang.String)>($r12);
        throw $r6;

     label2:
        i0 = 0;

     label3:
        $r13 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i1 = lengthof $r13;
        if i0 >= $i1 goto label4;

        $r14 = r0.<java.util.JumboEnumSet: long[] elements>;
        $l3 = $r14[i0];
        $r15 = r2.<java.util.JumboEnumSet: long[] elements>;
        $l4 = $r15[i0];
        $l5 = $l3 | $l4;
        $r14[i0] = $l5;
        i0 = i0 + 1;
        goto label3;

     label4:
        $z3 = specialinvoke r0.<java.util.JumboEnumSet: boolean recalculateSize()>();
        return $z3;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.JumboEnumSet r0, r2;
        java.util.Collection r1;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        java.lang.Class $r3, $r4;
        long[] $r5, $r6, $r7;
        long $l3, $l4, $l5, $l6;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.util.Collection;
        $z0 = r1 instanceof java.util.JumboEnumSet;
        if $z0 != 0 goto label0;

        $z1 = specialinvoke r0.<java.util.EnumSet: boolean removeAll(java.util.Collection)>(r1);
        return $z1;

     label0:
        r2 = (java.util.JumboEnumSet) r1;
        $r3 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;
        $r4 = r0.<java.util.JumboEnumSet: java.lang.Class elementType>;
        if $r3 == $r4 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        $r5 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i1 = lengthof $r5;
        if i0 >= $i1 goto label3;

        $r6 = r0.<java.util.JumboEnumSet: long[] elements>;
        $l3 = $r6[i0];
        $r7 = r2.<java.util.JumboEnumSet: long[] elements>;
        $l4 = $r7[i0];
        $l5 = $l4 ^ -1L;
        $l6 = $l3 & $l5;
        $r6[i0] = $l6;
        i0 = i0 + 1;
        goto label2;

     label3:
        $z2 = specialinvoke r0.<java.util.JumboEnumSet: boolean recalculateSize()>();
        return $z2;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.JumboEnumSet r0, r2;
        java.util.Collection r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Class $r3, $r4;
        int $i0, i1, $i2;
        long[] $r5, $r6, $r7;
        long $l4, $l5, $l6;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.util.Collection;
        $z1 = r1 instanceof java.util.JumboEnumSet;
        if $z1 != 0 goto label0;

        $z2 = specialinvoke r0.<java.util.EnumSet: boolean retainAll(java.util.Collection)>(r1);
        return $z2;

     label0:
        r2 = (java.util.JumboEnumSet) r1;
        $r3 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;
        $r4 = r0.<java.util.JumboEnumSet: java.lang.Class elementType>;
        if $r3 == $r4 goto label3;

        $i0 = r0.<java.util.JumboEnumSet: int size>;
        if $i0 == 0 goto label1;

        $z3 = 1;
        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;
        virtualinvoke r0.<java.util.JumboEnumSet: void clear()>();
        return z0;

     label3:
        i1 = 0;

     label4:
        $r5 = r0.<java.util.JumboEnumSet: long[] elements>;
        $i2 = lengthof $r5;
        if i1 >= $i2 goto label5;

        $r6 = r0.<java.util.JumboEnumSet: long[] elements>;
        $l4 = $r6[i1];
        $r7 = r2.<java.util.JumboEnumSet: long[] elements>;
        $l5 = $r7[i1];
        $l6 = $l4 & $l5;
        $r6[i1] = $l6;
        i1 = i1 + 1;
        goto label4;

     label5:
        $z4 = specialinvoke r0.<java.util.JumboEnumSet: boolean recalculateSize()>();
        return $z4;
    }

    public void clear()
    {
        java.util.JumboEnumSet r0;
        long[] $r1;

        r0 := @this: java.util.JumboEnumSet;
        $r1 = r0.<java.util.JumboEnumSet: long[] elements>;
        staticinvoke <java.util.Arrays: void fill(long[],long)>($r1, 0L);
        r0.<java.util.JumboEnumSet: int size> = 0;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.JumboEnumSet r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r3, $r4;
        int $i0, $i1;
        long[] $r5, $r6;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.util.JumboEnumSet;
        if $z0 != 0 goto label0;

        $z1 = specialinvoke r0.<java.util.EnumSet: boolean equals(java.lang.Object)>(r1);
        return $z1;

     label0:
        r2 = (java.util.JumboEnumSet) r1;
        $r3 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;
        $r4 = r0.<java.util.JumboEnumSet: java.lang.Class elementType>;
        if $r3 == $r4 goto label3;

        $i0 = r0.<java.util.JumboEnumSet: int size>;
        if $i0 != 0 goto label1;

        $i1 = r2.<java.util.JumboEnumSet: int size>;
        if $i1 != 0 goto label1;

        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        $r5 = r2.<java.util.JumboEnumSet: long[] elements>;
        $r6 = r0.<java.util.JumboEnumSet: long[] elements>;
        $z3 = staticinvoke <java.util.Arrays: boolean equals(long[],long[])>($r5, $r6);
        return $z3;
    }

    private boolean recalculateSize()
    {
        java.util.JumboEnumSet r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7;
        long[] r1;
        long l3;
        boolean $z0;

        r0 := @this: java.util.JumboEnumSet;
        i0 = r0.<java.util.JumboEnumSet: int size>;
        r0.<java.util.JumboEnumSet: int size> = 0;
        r1 = r0.<java.util.JumboEnumSet: long[] elements>;
        i1 = lengthof r1;
        i2 = 0;

     label0:
        if i2 >= i1 goto label1;

        l3 = r1[i2];
        $i4 = r0.<java.util.JumboEnumSet: int size>;
        $i5 = staticinvoke <java.lang.Long: int bitCount(long)>(l3);
        $i6 = $i4 + $i5;
        r0.<java.util.JumboEnumSet: int size> = $i6;
        i2 = i2 + 1;
        goto label0;

     label1:
        $i7 = r0.<java.util.JumboEnumSet: int size>;
        if $i7 == i0 goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.util.EnumSet clone()
    {
        java.util.JumboEnumSet r0, r1;
        java.util.EnumSet $r2;
        long[] $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: java.util.JumboEnumSet;
        $r2 = specialinvoke r0.<java.util.EnumSet: java.util.EnumSet clone()>();
        r1 = (java.util.JumboEnumSet) $r2;
        $r3 = r1.<java.util.JumboEnumSet: long[] elements>;
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();
        $r5 = (long[]) $r4;
        r1.<java.util.JumboEnumSet: long[] elements> = $r5;
        return r1;
    }

    public volatile boolean add(java.lang.Object)
    {
        java.util.JumboEnumSet r0;
        java.lang.Object r1;
        java.lang.Enum $r2;
        boolean $z0;

        r0 := @this: java.util.JumboEnumSet;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.lang.Enum) r1;
        $z0 = virtualinvoke r0.<java.util.JumboEnumSet: boolean add(java.lang.Enum)>($r2);
        return $z0;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.util.JumboEnumSet r0;
        java.util.EnumSet $r1;

        r0 := @this: java.util.JumboEnumSet;
        $r1 = virtualinvoke r0.<java.util.JumboEnumSet: java.util.EnumSet clone()>();
        return $r1;
    }

    static long[] access$000(java.util.JumboEnumSet)
    {
        java.util.JumboEnumSet r0;
        long[] $r1;

        r0 := @parameter0: java.util.JumboEnumSet;
        $r1 = r0.<java.util.JumboEnumSet: long[] elements>;
        return $r1;
    }

    static int access$110(java.util.JumboEnumSet)
    {
        java.util.JumboEnumSet r0;
        int $i0, $i1;

        r0 := @parameter0: java.util.JumboEnumSet;
        $i0 = r0.<java.util.JumboEnumSet: int size>;
        $i1 = $i0 - 1;
        r0.<java.util.JumboEnumSet: int size> = $i1;
        return $i0;
    }
}
