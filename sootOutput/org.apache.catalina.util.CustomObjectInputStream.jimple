public final class org.apache.catalina.util.CustomObjectInputStream extends java.io.ObjectInputStream
{
    private static final org.apache.tomcat.util.res.StringManager sm;
    private static final java.util.WeakHashMap reportedClassCache;
    private java.lang.ClassLoader classLoader;
    private final java.util.Set reportedClasses;
    private final org.apache.juli.logging.Log log;
    private final java.util.regex.Pattern allowedClassNamePattern;
    private final java.lang.String allowedClassNameFilter;
    private final boolean warnOnFailure;

    static void <clinit>()
    {
        org.apache.tomcat.util.res.StringManager $r0;
        java.util.WeakHashMap $r1;

        $r0 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.Class)>(class "org/apache/catalina/util/CustomObjectInputStream");
        <org.apache.catalina.util.CustomObjectInputStream: org.apache.tomcat.util.res.StringManager sm> = $r0;
        $r1 = new java.util.WeakHashMap;
        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();
        <org.apache.catalina.util.CustomObjectInputStream: java.util.WeakHashMap reportedClassCache> = $r1;
        return;
    }

    public void <init>(java.io.InputStream, java.lang.ClassLoader) throws java.io.IOException
    {
        org.apache.catalina.util.CustomObjectInputStream r0;
        java.io.InputStream r1;
        java.lang.ClassLoader r2;

        r0 := @this: org.apache.catalina.util.CustomObjectInputStream;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.lang.ClassLoader;
        specialinvoke r0.<org.apache.catalina.util.CustomObjectInputStream: void <init>(java.io.InputStream,java.lang.ClassLoader,org.apache.juli.logging.Log,java.util.regex.Pattern,boolean)>(r1, r2, null, null, 0);
        return;
    }

    public void <init>(java.io.InputStream, java.lang.ClassLoader, org.apache.juli.logging.Log, java.util.regex.Pattern, boolean) throws java.io.IOException
    {
        org.apache.catalina.util.CustomObjectInputStream r0;
        java.io.InputStream r1;
        java.lang.ClassLoader r2;
        org.apache.juli.logging.Log r3;
        java.util.regex.Pattern r4;
        boolean z0;
        org.apache.tomcat.util.res.StringManager $r5;
        java.util.WeakHashMap r6, $r11, $r12, $r15;
        java.util.Set r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9, $r10;
        java.lang.Object $r13;
        java.util.concurrent.ConcurrentHashMap $r14;
        java.lang.Throwable $r17;

        r0 := @this: org.apache.catalina.util.CustomObjectInputStream;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.lang.ClassLoader;
        r3 := @parameter2: org.apache.juli.logging.Log;
        r4 := @parameter3: java.util.regex.Pattern;
        z0 := @parameter4: boolean;
        specialinvoke r0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r1);
        r0.<org.apache.catalina.util.CustomObjectInputStream: java.lang.ClassLoader classLoader> = null;
        if r3 != null goto label0;

        if r4 == null goto label0;

        if z0 == 0 goto label0;

        $r8 = new java.lang.IllegalArgumentException;
        $r5 = <org.apache.catalina.util.CustomObjectInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = virtualinvoke $r5.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("customObjectInputStream.logRequired");
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);
        throw $r8;

     label0:
        r0.<org.apache.catalina.util.CustomObjectInputStream: java.lang.ClassLoader classLoader> = r2;
        r0.<org.apache.catalina.util.CustomObjectInputStream: org.apache.juli.logging.Log log> = r3;
        r0.<org.apache.catalina.util.CustomObjectInputStream: java.util.regex.Pattern allowedClassNamePattern> = r4;
        if r4 != null goto label1;

        r0.<org.apache.catalina.util.CustomObjectInputStream: java.lang.String allowedClassNameFilter> = null;
        goto label2;

     label1:
        $r10 = virtualinvoke r4.<java.util.regex.Pattern: java.lang.String toString()>();
        r0.<org.apache.catalina.util.CustomObjectInputStream: java.lang.String allowedClassNameFilter> = $r10;

     label2:
        r0.<org.apache.catalina.util.CustomObjectInputStream: boolean warnOnFailure> = z0;
        $r11 = <org.apache.catalina.util.CustomObjectInputStream: java.util.WeakHashMap reportedClassCache>;
        r6 = $r11;
        entermonitor $r11;

     label3:
        $r12 = <org.apache.catalina.util.CustomObjectInputStream: java.util.WeakHashMap reportedClassCache>;
        $r13 = virtualinvoke $r12.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r2);
        r7 = (java.util.Set) $r13;
        if r7 != null goto label4;

        $r14 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r14.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        r7 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r14);
        $r15 = <org.apache.catalina.util.CustomObjectInputStream: java.util.WeakHashMap reportedClassCache>;
        virtualinvoke $r15.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r7);

     label4:
        exitmonitor r6;

     label5:
        goto label9;

     label6:
        $r17 := @caughtexception;

     label7:
        exitmonitor r6;

     label8:
        throw $r17;

     label9:
        r0.<org.apache.catalina.util.CustomObjectInputStream: java.util.Set reportedClasses> = r7;
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.lang.Class resolveClass(java.io.ObjectStreamClass) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        org.apache.catalina.util.CustomObjectInputStream r0;
        java.io.ObjectStreamClass r1;
        java.lang.String r2, r3, $r10;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.regex.Pattern $r4, $r5;
        java.util.regex.Matcher $r6;
        java.util.Set $r7;
        org.apache.tomcat.util.res.StringManager $r8;
        java.lang.Object[] $r9;
        org.apache.juli.logging.Log $r11, $r12, $r13;
        java.io.InvalidClassException $r14;
        java.lang.ClassLoader $r15;
        java.lang.Class $r16, $r19;
        java.lang.ClassNotFoundException $r17, r18, $r20, r21;

        r0 := @this: org.apache.catalina.util.CustomObjectInputStream;
        r1 := @parameter0: java.io.ObjectStreamClass;
        r2 = virtualinvoke r1.<java.io.ObjectStreamClass: java.lang.String getName()>();
        $r4 = r0.<org.apache.catalina.util.CustomObjectInputStream: java.util.regex.Pattern allowedClassNamePattern>;
        if $r4 == null goto label4;

        $r5 = r0.<org.apache.catalina.util.CustomObjectInputStream: java.util.regex.Pattern allowedClassNamePattern>;
        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);
        z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();
        if z0 != 0 goto label4;

        $z2 = r0.<org.apache.catalina.util.CustomObjectInputStream: boolean warnOnFailure>;
        if $z2 == 0 goto label0;

        $r7 = r0.<org.apache.catalina.util.CustomObjectInputStream: java.util.Set reportedClasses>;
        $z3 = interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r2);
        if $z3 == 0 goto label0;

        $z4 = 1;
        goto label1;

     label0:
        $z4 = 0;

     label1:
        z1 = $z4;
        $r8 = <org.apache.catalina.util.CustomObjectInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = newarray (java.lang.Object)[2];
        $r9[0] = r2;
        $r10 = r0.<org.apache.catalina.util.CustomObjectInputStream: java.lang.String allowedClassNameFilter>;
        $r9[1] = $r10;
        r3 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("customObjectInputStream.nomatch", $r9);
        if z1 == 0 goto label2;

        $r11 = r0.<org.apache.catalina.util.CustomObjectInputStream: org.apache.juli.logging.Log log>;
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void warn(java.lang.Object)>(r3);
        goto label3;

     label2:
        $r12 = r0.<org.apache.catalina.util.CustomObjectInputStream: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r12.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label3;

        $r13 = r0.<org.apache.catalina.util.CustomObjectInputStream: org.apache.juli.logging.Log log>;
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void debug(java.lang.Object)>(r3);

     label3:
        $r14 = new java.io.InvalidClassException;
        specialinvoke $r14.<java.io.InvalidClassException: void <init>(java.lang.String)>(r3);
        throw $r14;

     label4:
        $r15 = r0.<org.apache.catalina.util.CustomObjectInputStream: java.lang.ClassLoader classLoader>;
        $r16 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r2, 0, $r15);

     label5:
        return $r16;

     label6:
        $r17 := @caughtexception;
        r18 = $r17;

     label7:
        $r19 = specialinvoke r0.<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>(r1);

     label8:
        return $r19;

     label9:
        $r20 := @caughtexception;
        r21 = $r20;
        throw r18;

        catch java.lang.ClassNotFoundException from label4 to label5 with label6;
        catch java.lang.ClassNotFoundException from label7 to label8 with label9;
    }

    protected java.lang.Class resolveProxyClass(java.lang.String[]) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.catalina.util.CustomObjectInputStream r0;
        java.lang.String[] r1;
        java.lang.Class[] r2;
        int i0, $i1, $i2;
        java.lang.ClassLoader $r3, $r6;
        java.lang.String $r4;
        java.lang.Class $r5, $r7;
        java.lang.IllegalArgumentException $r8, r9;
        java.lang.ClassNotFoundException $r10;

        r0 := @this: org.apache.catalina.util.CustomObjectInputStream;
        r1 := @parameter0: java.lang.String[];
        $i1 = lengthof r1;
        r2 = newarray (java.lang.Class)[$i1];
        i0 = 0;
        goto label1;

     label0:
        $r3 = r0.<org.apache.catalina.util.CustomObjectInputStream: java.lang.ClassLoader classLoader>;
        $r4 = r1[i0];
        $r5 = virtualinvoke $r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r4);
        r2[i0] = $r5;
        i0 = i0 + 1;

     label1:
        $i2 = lengthof r1;
        if i0 < $i2 goto label0;

     label2:
        $r6 = r0.<org.apache.catalina.util.CustomObjectInputStream: java.lang.ClassLoader classLoader>;
        $r7 = staticinvoke <java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>($r6, r2);

     label3:
        return $r7;

     label4:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.ClassNotFoundException;
        specialinvoke $r10.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>(null, r9);
        throw $r10;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }
}
