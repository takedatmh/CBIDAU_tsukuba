abstract class sun.reflect.UnsafeStaticFieldAccessorImpl extends sun.reflect.UnsafeFieldAccessorImpl
{
    protected java.lang.Object base;

    void <init>(java.lang.reflect.Field)
    {
        sun.reflect.UnsafeStaticFieldAccessorImpl r0;
        java.lang.reflect.Field r1;
        sun.misc.Unsafe $r2;
        java.lang.Object $r3;

        r0 := @this: sun.reflect.UnsafeStaticFieldAccessorImpl;
        r1 := @parameter0: java.lang.reflect.Field;
        specialinvoke r0.<sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r1);
        $r2 = <sun.reflect.UnsafeStaticFieldAccessorImpl: sun.misc.Unsafe unsafe>;
        $r3 = virtualinvoke $r2.<sun.misc.Unsafe: java.lang.Object staticFieldBase(java.lang.reflect.Field)>(r1);
        r0.<sun.reflect.UnsafeStaticFieldAccessorImpl: java.lang.Object base> = $r3;
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[1];
        $r0[0] = "base";
        staticinvoke <sun.reflect.Reflection: void registerFieldsToFilter(java.lang.Class,java.lang.String[])>(class "sun/reflect/UnsafeStaticFieldAccessorImpl", $r0);
        return;
    }
}
