public final class org.apache.tomcat.util.buf.MessageBytes extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private int type;
    public static final int T_NULL;
    public static final int T_STR;
    public static final int T_BYTES;
    public static final int T_CHARS;
    private int hashCode;
    private boolean hasHashCode;
    private final org.apache.tomcat.util.buf.ByteChunk byteC;
    private final org.apache.tomcat.util.buf.CharChunk charC;
    private java.lang.String strValue;
    private boolean hasStrValue;
    private int intValue;
    private boolean hasIntValue;
    private long longValue;
    private boolean hasLongValue;
    private static org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory factory;

    static void <clinit>()
    {
        org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory $r0;

        $r0 = new org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory;
        specialinvoke $r0.<org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory: void <init>()>();
        <org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory factory> = $r0;
        return;
    }

    private void <init>()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        org.apache.tomcat.util.buf.CharChunk $r2;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: int hashCode> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasHashCode> = 0;
        $r1 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: void <init>()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC> = $r1;
        $r2 = new org.apache.tomcat.util.buf.CharChunk;
        specialinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: void <init>()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC> = $r2;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasIntValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasLongValue> = 0;
        return;
    }

    public static org.apache.tomcat.util.buf.MessageBytes newInstance()
    {
        org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory $r0;
        org.apache.tomcat.util.buf.MessageBytes $r1;

        $r0 = <org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory factory>;
        $r1 = virtualinvoke $r0.<org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory: org.apache.tomcat.util.buf.MessageBytes newInstance()>();
        return $r1;
    }

    public org.apache.tomcat.util.buf.MessageBytes getClone()
    {
        org.apache.tomcat.util.buf.MessageBytes r0, $r3;
        java.lang.Exception r1, $r4;
        java.lang.Object $r2;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;

     label0:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (org.apache.tomcat.util.buf.MessageBytes) $r2;

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        return null;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public boolean isNull()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        boolean $z0, $z1, $z2;
        org.apache.tomcat.util.buf.CharChunk $r2;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $z0 = virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: boolean isNull()>();
        if $z0 == 0 goto label0;

        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $z1 = virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: boolean isNull()>();
        if $z1 == 0 goto label0;

        $z2 = r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue>;
        if $z2 != 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public void recycle()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        org.apache.tomcat.util.buf.CharChunk $r2;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 0;
        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: void recycle()>();
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: void recycle()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue> = null;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasHashCode> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasIntValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasLongValue> = 0;
        return;
    }

    public void setBytes(byte[], int, int)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        byte[] r1;
        int i0, i1;
        org.apache.tomcat.util.buf.ByteChunk $r2;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>(r1, i0, i1);
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 2;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasHashCode> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasIntValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasLongValue> = 0;
        return;
    }

    public void setChars(char[], int, int)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        char[] r1;
        int i0, i1;
        org.apache.tomcat.util.buf.CharChunk $r2;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: void setChars(char[],int,int)>(r1, i0, i1);
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 3;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasHashCode> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasIntValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasLongValue> = 0;
        return;
    }

    public void setString(java.lang.String)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.lang.String r1;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue> = r1;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasHashCode> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasIntValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasLongValue> = 0;
        if r1 != null goto label0;

        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 0;
        goto label1;

     label0:
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue> = 1;
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 1;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        boolean $z0;
        java.lang.String $r1, $r3, $r4, $r6, $r7;
        int $i0;
        org.apache.tomcat.util.buf.CharChunk $r2;
        org.apache.tomcat.util.buf.ByteChunk $r5;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $z0 = r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue>;
        if $z0 == 0 goto label0;

        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        return $r1;

     label0:
        $i0 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        tableswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label1;
            default: goto label3;
        };

     label1:
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: java.lang.String toString()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue> = $r3;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue> = 1;
        $r4 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        return $r4;

     label2:
        $r5 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $r6 = virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: java.lang.String toString()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue> = $r6;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue> = 1;
        $r7 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        return $r7;

     label3:
        return null;
    }

    public int getType()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        int $i0;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $i0 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        return $i0;
    }

    public org.apache.tomcat.util.buf.ByteChunk getByteChunk()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        org.apache.tomcat.util.buf.ByteChunk $r1;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        return $r1;
    }

    public org.apache.tomcat.util.buf.CharChunk getCharChunk()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        org.apache.tomcat.util.buf.CharChunk $r1;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        return $r1;
    }

    public java.lang.String getString()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        return $r1;
    }

    public java.nio.charset.Charset getCharset()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $r2 = virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: java.nio.charset.Charset getCharset()>();
        return $r2;
    }

    public void setCharset(java.nio.charset.Charset)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.nio.charset.Charset r1;
        org.apache.tomcat.util.buf.ByteChunk $r2;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: java.nio.charset.Charset;
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.ByteChunk: void setCharset(java.nio.charset.Charset)>(r1);
        return;
    }

    public void toBytes()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.nio.charset.Charset r1;
        java.nio.ByteBuffer r2;
        org.apache.tomcat.util.buf.ByteChunk $r3, $r5, $r7;
        boolean $z0;
        java.lang.String $r6;
        byte[] $r8;
        int $i0, $i1;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $z0 = virtualinvoke $r3.<org.apache.tomcat.util.buf.ByteChunk: boolean isNull()>();
        if $z0 != 0 goto label0;

        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 2;
        return;

     label0:
        virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 2;
        $r5 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        r1 = virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: java.nio.charset.Charset getCharset()>();
        $r6 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        r2 = virtualinvoke r1.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>($r6);
        $r7 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $r8 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();
        $i0 = virtualinvoke r2.<java.nio.ByteBuffer: int arrayOffset()>();
        $i1 = virtualinvoke r2.<java.nio.ByteBuffer: int limit()>();
        virtualinvoke $r7.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>($r8, $i0, $i1);
        return;
    }

    public void toChars()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        char[] r1;
        org.apache.tomcat.util.buf.CharChunk $r2, $r5;
        boolean $z0;
        java.lang.String $r4;
        int $i0;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $z0 = virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: boolean isNull()>();
        if $z0 != 0 goto label0;

        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 3;
        return;

     label0:
        virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 3;
        $r4 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        r1 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();
        $r5 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $i0 = lengthof r1;
        virtualinvoke $r5.<org.apache.tomcat.util.buf.CharChunk: void setChars(char[],int,int)>(r1, 0, $i0);
        return;
    }

    public int getLength()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        org.apache.tomcat.util.buf.CharChunk $r2;
        java.lang.String $r3, $r5, $r6;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $i0 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i0 != 2 goto label0;

        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $i1 = virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        return $i1;

     label0:
        $i2 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i2 != 3 goto label1;

        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $i3 = virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        return $i3;

     label1:
        $i4 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i4 != 1 goto label2;

        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();
        return $i5;

     label2:
        virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        $r5 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        if $r5 != null goto label3;

        return 0;

     label3:
        $r6 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $i6 = virtualinvoke $r6.<java.lang.String: int length()>();
        return $i6;
    }

    public boolean equals(java.lang.String)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.lang.String r1, $r2, $r3;
        int $i0;
        boolean $z0, $z1, $z2;
        org.apache.tomcat.util.buf.CharChunk $r4;
        org.apache.tomcat.util.buf.ByteChunk $r5;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: java.lang.String;
        $i0 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        tableswitch($i0)
        {
            case 1: goto label0;
            case 2: goto label4;
            case 3: goto label3;
            default: goto label5;
        };

     label0:
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        if $r2 != null goto label2;

        if r1 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        return $z0;

     label3:
        $r4 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $z1 = virtualinvoke $r4.<org.apache.tomcat.util.buf.CharChunk: boolean equals(java.lang.String)>(r1);
        return $z1;

     label4:
        $r5 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $z2 = virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: boolean equals(java.lang.String)>(r1);
        return $z2;

     label5:
        return 0;
    }

    public boolean equalsIgnoreCase(java.lang.String)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.lang.String r1, $r2, $r3;
        int $i0;
        boolean $z0, $z1, $z2;
        org.apache.tomcat.util.buf.CharChunk $r4;
        org.apache.tomcat.util.buf.ByteChunk $r5;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: java.lang.String;
        $i0 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        tableswitch($i0)
        {
            case 1: goto label0;
            case 2: goto label4;
            case 3: goto label3;
            default: goto label5;
        };

     label0:
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        if $r2 != null goto label2;

        if r1 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        return $z0;

     label3:
        $r4 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $z1 = virtualinvoke $r4.<org.apache.tomcat.util.buf.CharChunk: boolean equalsIgnoreCase(java.lang.String)>(r1);
        return $z1;

     label4:
        $r5 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $z2 = virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: boolean equalsIgnoreCase(java.lang.String)>(r1);
        return $z2;

     label5:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.tomcat.util.buf.MessageBytes r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof org.apache.tomcat.util.buf.MessageBytes;
        if $z0 == 0 goto label0;

        $r2 = (org.apache.tomcat.util.buf.MessageBytes) r1;
        $z1 = virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: boolean equals(org.apache.tomcat.util.buf.MessageBytes)>($r2);
        return $z1;

     label0:
        return 0;
    }

    public boolean equals(org.apache.tomcat.util.buf.MessageBytes)
    {
        org.apache.tomcat.util.buf.MessageBytes r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.tomcat.util.buf.CharChunk $r4, $r5, $r9, $r11;
        org.apache.tomcat.util.buf.ByteChunk $r6, $r7, $r8, $r10;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        $i0 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        tableswitch($i0)
        {
            case 1: goto label0;
            default: goto label1;
        };

     label0:
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $z0 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: boolean equals(java.lang.String)>($r2);
        return $z0;

     label1:
        $i1 = r1.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i1 == 3 goto label2;

        $i2 = r1.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i2 == 2 goto label2;

        $r3 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        $z1 = virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: boolean equals(java.lang.String)>($r3);
        return $z1;

     label2:
        $i3 = r1.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i3 != 3 goto label3;

        $i4 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i4 != 3 goto label3;

        $r4 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $r5 = r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $z2 = virtualinvoke $r4.<org.apache.tomcat.util.buf.CharChunk: boolean equals(org.apache.tomcat.util.buf.CharChunk)>($r5);
        return $z2;

     label3:
        $i5 = r1.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i5 != 2 goto label4;

        $i6 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i6 != 2 goto label4;

        $r6 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $r7 = r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $z3 = virtualinvoke $r6.<org.apache.tomcat.util.buf.ByteChunk: boolean equals(org.apache.tomcat.util.buf.ByteChunk)>($r7);
        return $z3;

     label4:
        $i7 = r1.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i7 != 3 goto label5;

        $i8 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i8 != 2 goto label5;

        $r8 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $r9 = r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $z4 = virtualinvoke $r8.<org.apache.tomcat.util.buf.ByteChunk: boolean equals(org.apache.tomcat.util.buf.CharChunk)>($r9);
        return $z4;

     label5:
        $i9 = r1.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i9 != 2 goto label6;

        $i10 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        if $i10 != 3 goto label6;

        $r10 = r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $r11 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $z5 = virtualinvoke $r10.<org.apache.tomcat.util.buf.ByteChunk: boolean equals(org.apache.tomcat.util.buf.CharChunk)>($r11);
        return $z5;

     label6:
        return 1;
    }

    public boolean startsWith(java.lang.String)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.lang.String r1, $r2;
        int $i0;
        boolean $z0, $z1, $z2;
        org.apache.tomcat.util.buf.CharChunk $r3;
        org.apache.tomcat.util.buf.ByteChunk $r4;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: java.lang.String;
        $i0 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        tableswitch($i0)
        {
            case 1: goto label0;
            case 2: goto label2;
            case 3: goto label1;
            default: goto label3;
        };

     label0:
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);
        return $z0;

     label1:
        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $z1 = virtualinvoke $r3.<org.apache.tomcat.util.buf.CharChunk: boolean startsWith(java.lang.String)>(r1);
        return $z1;

     label2:
        $r4 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $z2 = virtualinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: boolean startsWith(java.lang.String)>(r1);
        return $z2;

     label3:
        return 0;
    }

    public boolean startsWithIgnoreCase(java.lang.String, int)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.lang.String r1, $r2, $r3, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10, $i11;
        char $c6, $c9;
        org.apache.tomcat.util.buf.CharChunk $r5;
        boolean $z0, $z1;
        org.apache.tomcat.util.buf.ByteChunk $r6;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $i2 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        tableswitch($i2)
        {
            case 1: goto label0;
            case 2: goto label7;
            case 3: goto label6;
            default: goto label8;
        };

     label0:
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();
        $i5 = i0 + $i4;
        if $i3 >= $i5 goto label2;

        return 0;

     label2:
        i1 = 0;
        goto label5;

     label3:
        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        $i7 = staticinvoke <org.apache.tomcat.util.buf.Ascii: int toLower(int)>($c6);
        $r4 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $i8 = i0 + i1;
        $c9 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i8);
        $i10 = staticinvoke <org.apache.tomcat.util.buf.Ascii: int toLower(int)>($c9);
        if $i7 == $i10 goto label4;

        return 0;

     label4:
        i1 = i1 + 1;

     label5:
        $i11 = virtualinvoke r1.<java.lang.String: int length()>();
        if i1 < $i11 goto label3;

        return 1;

     label6:
        $r5 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $z0 = virtualinvoke $r5.<org.apache.tomcat.util.buf.CharChunk: boolean startsWithIgnoreCase(java.lang.String,int)>(r1, i0);
        return $z0;

     label7:
        $r6 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $z1 = virtualinvoke $r6.<org.apache.tomcat.util.buf.ByteChunk: boolean startsWithIgnoreCase(java.lang.String,int)>(r1, i0);
        return $z1;

     label8:
        return 0;
    }

    public int hashCode()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        boolean z0, $z1;
        int $i0, i1;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $z1 = r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasHashCode>;
        if $z1 == 0 goto label0;

        $i0 = r0.<org.apache.tomcat.util.buf.MessageBytes: int hashCode>;
        return $i0;

     label0:
        z0 = 0;
        i1 = specialinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: int hash()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: int hashCode> = i1;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasHashCode> = 1;
        return i1;
    }

    private int hash()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        int i0, i1, $i2, $i3, $i5, $i6, $i7;
        java.lang.String $r1, $r2;
        char $c4;
        org.apache.tomcat.util.buf.CharChunk $r3;
        org.apache.tomcat.util.buf.ByteChunk $r4;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        i0 = 0;
        $i2 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        tableswitch($i2)
        {
            case 1: goto label0;
            case 2: goto label4;
            case 3: goto label3;
            default: goto label5;
        };

     label0:
        i1 = 0;
        goto label2;

     label1:
        $i3 = i0 * 37;
        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);
        i0 = $i3 + $c4;
        i1 = i1 + 1;

     label2:
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $i5 = virtualinvoke $r2.<java.lang.String: int length()>();
        if i1 < $i5 goto label1;

        return i0;

     label3:
        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $i6 = virtualinvoke $r3.<org.apache.tomcat.util.buf.CharChunk: int hash()>();
        return $i6;

     label4:
        $r4 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $i7 = virtualinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: int hash()>();
        return $i7;

     label5:
        return 0;
    }

    public int indexOf(char)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        char c0;
        int $i1;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        c0 := @parameter0: char;
        $i1 = virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: int indexOf(char,int)>(c0, 0);
        return $i1;
    }

    public int indexOf(java.lang.String, int)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.lang.String r1, $r3;
        int i0, $i1;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String,int)>(r1, i0);
        return $i1;
    }

    public int indexOf(java.lang.String)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: java.lang.String;
        $i0 = virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: int indexOf(java.lang.String,int)>(r1, 0);
        return $i0;
    }

    public int indexOfIgnoreCase(java.lang.String, int)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        java.lang.String r1, r3, r4, $r6;
        int i0, $i1;
        java.util.Locale $r2, $r7;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        $r6 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;
        r3 = virtualinvoke $r6.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);
        $r7 = <java.util.Locale: java.util.Locale ENGLISH>;
        r4 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r7);
        $i1 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String,int)>(r4, i0);
        return $i1;
    }

    public int indexOf(char, int)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        char c0;
        int i1, $i2, $i3, $i4, $i5;
        java.lang.String $r1;
        org.apache.tomcat.util.buf.CharChunk $r2;
        org.apache.tomcat.util.buf.ByteChunk $r3;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        c0 := @parameter0: char;
        i1 := @parameter1: int;
        $i2 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        tableswitch($i2)
        {
            case 1: goto label0;
            case 2: goto label2;
            case 3: goto label1;
            default: goto label3;
        };

     label0:
        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String strValue>;
        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(c0, i1);
        return $i3;

     label1:
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $i4 = virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: int indexOf(char,int)>(c0, i1);
        return $i4;

     label2:
        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $i5 = virtualinvoke $r3.<org.apache.tomcat.util.buf.ByteChunk: int indexOf(char,int)>(c0, i1);
        return $i5;

     label3:
        return -1;
    }

    public void duplicate(org.apache.tomcat.util.buf.MessageBytes) throws java.io.IOException
    {
        org.apache.tomcat.util.buf.MessageBytes r0, r1;
        org.apache.tomcat.util.buf.ByteChunk r2, $r5, $r6;
        org.apache.tomcat.util.buf.CharChunk r3, $r7, $r8;
        java.lang.String r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.nio.charset.Charset $r9;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        $i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: int getType()>();
        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label0;
            case 3: goto label1;
            default: goto label3;
        };

     label0:
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 2;
        r2 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk getByteChunk()>();
        $r5 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $i1 = virtualinvoke r2.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        $i2 = 2 * $i1;
        virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: void allocate(int,int)>($i2, -1);
        $r6 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        virtualinvoke $r6.<org.apache.tomcat.util.buf.ByteChunk: void append(org.apache.tomcat.util.buf.ByteChunk)>(r2);
        goto label3;

     label1:
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 3;
        r3 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk getCharChunk()>();
        $r7 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        $i3 = virtualinvoke r3.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        $i4 = 2 * $i3;
        virtualinvoke $r7.<org.apache.tomcat.util.buf.CharChunk: void allocate(int,int)>($i4, -1);
        $r8 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk charC>;
        virtualinvoke $r8.<org.apache.tomcat.util.buf.CharChunk: void append(org.apache.tomcat.util.buf.CharChunk)>(r3);
        goto label3;

     label2:
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 1;
        r4 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String getString()>();
        virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: void setString(java.lang.String)>(r4);

     label3:
        $r9 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: java.nio.charset.Charset getCharset()>();
        virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: void setCharset(java.nio.charset.Charset)>($r9);
        return;
    }

    public void setInt(int)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, i9;
        byte[] r1;
        org.apache.tomcat.util.buf.ByteChunk $r2, $r3, $r4, $r5;
        byte $b8, b10, $b11;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        i0 := @parameter0: int;
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.ByteChunk: void allocate(int,int)>(16, 32);
        i1 = i0;
        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        r1 = virtualinvoke $r3.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBuffer()>();
        i2 = 0;
        i3 = 0;
        if i0 != 0 goto label0;

        $i5 = i3;
        i3 = i3 + 1;
        r1[$i5] = 48;

     label0:
        if i0 >= 0 goto label2;

        i1 = neg i0;
        $i6 = i3;
        i3 = i3 + 1;
        r1[$i6] = 45;
        goto label2;

     label1:
        i4 = i1 % 10;
        i1 = i1 / 10;
        $i7 = i3;
        i3 = i3 + 1;
        $b8 = staticinvoke <org.apache.tomcat.util.buf.HexUtils: byte getHex(int)>(i4);
        r1[$i7] = $b8;

     label2:
        if i1 > 0 goto label1;

        $r4 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        virtualinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: void setOffset(int)>(0);
        $r5 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: void setEnd(int)>(i3);
        i9 = i3 + -1;
        if i0 >= 0 goto label4;

        i2 = i2 + 1;
        goto label4;

     label3:
        b10 = r1[i2];
        $b11 = r1[i9];
        r1[i2] = $b11;
        r1[i9] = b10;
        i2 = i2 + 1;
        i9 = i9 + -1;

     label4:
        if i9 > i2 goto label3;

        r0.<org.apache.tomcat.util.buf.MessageBytes: int intValue> = i0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasHashCode> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasIntValue> = 1;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasLongValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 2;
        return;
    }

    public void setLong(long)
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        long l0, l1, $l9;
        byte[] r1;
        int i2, i3, i4, $i6, $i8, $i10, i13;
        org.apache.tomcat.util.buf.ByteChunk $r2, $r3, $r4, $r5;
        byte $b5, $b7, $b11, $b12, $b14, b15, $b16;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        l0 := @parameter0: long;
        $r2 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.ByteChunk: void allocate(int,int)>(32, 64);
        l1 = l0;
        $r3 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        r1 = virtualinvoke $r3.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBuffer()>();
        i2 = 0;
        i3 = 0;
        $b5 = l0 cmp 0L;
        if $b5 != 0 goto label0;

        $i6 = i3;
        i3 = i3 + 1;
        r1[$i6] = 48;

     label0:
        $b7 = l0 cmp 0L;
        if $b7 >= 0 goto label2;

        l1 = neg l0;
        $i8 = i3;
        i3 = i3 + 1;
        r1[$i8] = 45;
        goto label2;

     label1:
        $l9 = l1 % 10L;
        i4 = (int) $l9;
        l1 = l1 / 10L;
        $i10 = i3;
        i3 = i3 + 1;
        $b11 = staticinvoke <org.apache.tomcat.util.buf.HexUtils: byte getHex(int)>(i4);
        r1[$i10] = $b11;

     label2:
        $b12 = l1 cmp 0L;
        if $b12 > 0 goto label1;

        $r4 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        virtualinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: void setOffset(int)>(0);
        $r5 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: void setEnd(int)>(i3);
        i13 = i3 + -1;
        $b14 = l0 cmp 0L;
        if $b14 >= 0 goto label4;

        i2 = i2 + 1;
        goto label4;

     label3:
        b15 = r1[i2];
        $b16 = r1[i13];
        r1[i2] = $b16;
        r1[i13] = b15;
        i2 = i2 + 1;
        i13 = i13 + -1;

     label4:
        if i13 > i2 goto label3;

        r0.<org.apache.tomcat.util.buf.MessageBytes: long longValue> = l0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasStrValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasHashCode> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasIntValue> = 0;
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasLongValue> = 1;
        r0.<org.apache.tomcat.util.buf.MessageBytes: int type> = 2;
        return;
    }

    public int getInt()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $z0 = r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasIntValue>;
        if $z0 == 0 goto label0;

        $i0 = r0.<org.apache.tomcat.util.buf.MessageBytes: int intValue>;
        return $i0;

     label0:
        $i1 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        tableswitch($i1)
        {
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $i2 = virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: int getInt()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: int intValue> = $i2;
        goto label3;

     label2:
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        r0.<org.apache.tomcat.util.buf.MessageBytes: int intValue> = $i3;

     label3:
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasIntValue> = 1;
        $i4 = r0.<org.apache.tomcat.util.buf.MessageBytes: int intValue>;
        return $i4;
    }

    public long getLong()
    {
        org.apache.tomcat.util.buf.MessageBytes r0;
        boolean $z0;
        long $l0, $l2, $l3, $l4;
        int $i1;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        $z0 = r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasLongValue>;
        if $z0 == 0 goto label0;

        $l0 = r0.<org.apache.tomcat.util.buf.MessageBytes: long longValue>;
        return $l0;

     label0:
        $i1 = r0.<org.apache.tomcat.util.buf.MessageBytes: int type>;
        tableswitch($i1)
        {
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        $r1 = r0.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk byteC>;
        $l2 = virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: long getLong()>();
        r0.<org.apache.tomcat.util.buf.MessageBytes: long longValue> = $l2;
        goto label3;

     label2:
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);
        r0.<org.apache.tomcat.util.buf.MessageBytes: long longValue> = $l3;

     label3:
        r0.<org.apache.tomcat.util.buf.MessageBytes: boolean hasLongValue> = 1;
        $l4 = r0.<org.apache.tomcat.util.buf.MessageBytes: long longValue>;
        return $l4;
    }

    public static void setFactory(org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory)
    {
        org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory r0;

        r0 := @parameter0: org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory;
        <org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory factory> = r0;
        return;
    }

    void <init>(org.apache.tomcat.util.buf.MessageBytes)
    {
        org.apache.tomcat.util.buf.MessageBytes r0, r1;

        r0 := @this: org.apache.tomcat.util.buf.MessageBytes;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        specialinvoke r0.<org.apache.tomcat.util.buf.MessageBytes: void <init>()>();
        return;
    }
}
