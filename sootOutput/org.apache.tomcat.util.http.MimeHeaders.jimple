public class org.apache.tomcat.util.http.MimeHeaders extends java.lang.Object
{
    public static final int DEFAULT_HEADER_SIZE;
    private static final org.apache.tomcat.util.res.StringManager sm;
    private org.apache.tomcat.util.http.MimeHeaderField[] headers;
    private int count;
    private int limit;

    static void <clinit>()
    {
        org.apache.tomcat.util.res.StringManager $r0;

        $r0 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.tomcat.util.http");
        <org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.res.StringManager sm> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        org.apache.tomcat.util.http.MimeHeaderField[] $r1;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (org.apache.tomcat.util.http.MimeHeaderField)[8];
        r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers> = $r1;
        r0.<org.apache.tomcat.util.http.MimeHeaders: int limit> = -1;
        return;
    }

    public void setLimit(int)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        int i0, $i1, $i2, $i3;
        org.apache.tomcat.util.http.MimeHeaderField[] r1, $r2, $r3;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        i0 := @parameter0: int;
        r0.<org.apache.tomcat.util.http.MimeHeaders: int limit> = i0;
        if i0 <= 0 goto label0;

        $r2 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $i1 = lengthof $r2;
        if $i1 <= i0 goto label0;

        $i2 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if $i2 >= i0 goto label0;

        r1 = newarray (org.apache.tomcat.util.http.MimeHeaderField)[i0];
        $r3 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $i3 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i3);
        r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers> = r1;

     label0:
        return;
    }

    public void recycle()
    {
        org.apache.tomcat.util.http.MimeHeaders r0;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        virtualinvoke r0.<org.apache.tomcat.util.http.MimeHeaders: void clear()>();
        return;
    }

    public void clear()
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        int i0, $i1;
        org.apache.tomcat.util.http.MimeHeaderField[] $r1;
        org.apache.tomcat.util.http.MimeHeaderField $r2;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        i0 = 0;
        goto label1;

     label0:
        $r1 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r2 = $r1[i0];
        virtualinvoke $r2.<org.apache.tomcat.util.http.MimeHeaderField: void recycle()>();
        i0 = i0 + 1;

     label1:
        $i1 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if i0 < $i1 goto label0;

        r0.<org.apache.tomcat.util.http.MimeHeaders: int count> = 0;
        return;
    }

    public java.lang.String toString()
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        java.io.StringWriter $r1, r2;
        java.io.PrintWriter r3, $r7;
        java.util.Enumeration r4, r6;
        java.lang.String r5, $r10, $r11;
        java.lang.Object $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        $r1 = new java.io.StringWriter;
        specialinvoke $r1.<java.io.StringWriter: void <init>()>();
        r2 = $r1;
        $r7 = new java.io.PrintWriter;
        specialinvoke $r7.<java.io.PrintWriter: void <init>(java.io.Writer)>(r2);
        r3 = $r7;
        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("=== MimeHeaders ===");
        r4 = virtualinvoke r0.<org.apache.tomcat.util.http.MimeHeaders: java.util.Enumeration names()>();
        goto label3;

     label0:
        $r8 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();
        r5 = (java.lang.String) $r8;
        r6 = virtualinvoke r0.<org.apache.tomcat.util.http.MimeHeaders: java.util.Enumeration values(java.lang.String)>(r5);
        goto label2;

     label1:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" = ");
        $r9 = interfaceinvoke r6.<java.util.Enumeration: java.lang.Object nextElement()>();
        $r10 = (java.lang.String) $r9;
        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label2:
        $z0 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 != 0 goto label1;

     label3:
        $z1 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z1 != 0 goto label0;

        $r11 = virtualinvoke r2.<java.io.StringWriter: java.lang.String toString()>();
        return $r11;
    }

    public int size()
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        int $i0;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        $i0 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        return $i0;
    }

    public org.apache.tomcat.util.buf.MessageBytes getName(int)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        int i0, $i1;
        org.apache.tomcat.util.http.MimeHeaderField[] $r1;
        org.apache.tomcat.util.http.MimeHeaderField $r2;
        org.apache.tomcat.util.buf.MessageBytes $r3;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i1 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if i0 >= $i1 goto label0;

        $r1 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r2 = $r1[i0];
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        goto label1;

     label0:
        $r3 = null;

     label1:
        return $r3;
    }

    public org.apache.tomcat.util.buf.MessageBytes getValue(int)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        int i0, $i1;
        org.apache.tomcat.util.http.MimeHeaderField[] $r1;
        org.apache.tomcat.util.http.MimeHeaderField $r2;
        org.apache.tomcat.util.buf.MessageBytes $r3;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i1 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if i0 >= $i1 goto label0;

        $r1 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r2 = $r1[i0];
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getValue()>();
        goto label1;

     label0:
        $r3 = null;

     label1:
        return $r3;
    }

    public int findHeader(java.lang.String, int)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        java.lang.String r1;
        int i0, i1, $i2;
        org.apache.tomcat.util.http.MimeHeaderField[] $r2;
        org.apache.tomcat.util.http.MimeHeaderField $r3;
        org.apache.tomcat.util.buf.MessageBytes $r4;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 = i0;
        goto label2;

     label0:
        $r2 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r3 = $r2[i1];
        $r4 = virtualinvoke $r3.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        $z0 = virtualinvoke $r4.<org.apache.tomcat.util.buf.MessageBytes: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z0 == 0 goto label1;

        return i1;

     label1:
        i1 = i1 + 1;

     label2:
        $i2 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if i1 < $i2 goto label0;

        return -1;
    }

    public java.util.Enumeration names()
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        org.apache.tomcat.util.http.NamesEnumerator $r1;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        $r1 = new org.apache.tomcat.util.http.NamesEnumerator;
        specialinvoke $r1.<org.apache.tomcat.util.http.NamesEnumerator: void <init>(org.apache.tomcat.util.http.MimeHeaders)>(r0);
        return $r1;
    }

    public java.util.Enumeration values(java.lang.String)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        java.lang.String r1;
        org.apache.tomcat.util.http.ValuesEnumerator $r2;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.tomcat.util.http.ValuesEnumerator;
        specialinvoke $r2.<org.apache.tomcat.util.http.ValuesEnumerator: void <init>(org.apache.tomcat.util.http.MimeHeaders,java.lang.String)>(r0, r1);
        return $r2;
    }

    private org.apache.tomcat.util.http.MimeHeaderField createHeader()
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        org.apache.tomcat.util.res.StringManager $r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.apache.tomcat.util.http.MimeHeaderField[] r2, $r8, $r9, $r10, $r12;
        org.apache.tomcat.util.http.MimeHeaderField r3, $r11, $r13;
        java.lang.IllegalStateException $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        $i2 = r0.<org.apache.tomcat.util.http.MimeHeaders: int limit>;
        if $i2 <= -1 goto label0;

        $i3 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        $i4 = r0.<org.apache.tomcat.util.http.MimeHeaders: int limit>;
        if $i3 < $i4 goto label0;

        $r4 = new java.lang.IllegalStateException;
        $r1 = <org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $i5 = r0.<org.apache.tomcat.util.http.MimeHeaders: int limit>;
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        $r5[0] = $r6;
        $r7 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("headers.maxCountFail", $r5);
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);
        throw $r4;

     label0:
        $r8 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        i0 = lengthof $r8;
        $i6 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if $i6 < i0 goto label2;

        $i7 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        i1 = $i7 * 2;
        $i8 = r0.<org.apache.tomcat.util.http.MimeHeaders: int limit>;
        if $i8 <= 0 goto label1;

        $i9 = r0.<org.apache.tomcat.util.http.MimeHeaders: int limit>;
        if i1 <= $i9 goto label1;

        i1 = r0.<org.apache.tomcat.util.http.MimeHeaders: int limit>;

     label1:
        r2 = newarray (org.apache.tomcat.util.http.MimeHeaderField)[i1];
        $r9 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r2, 0, i0);
        r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers> = r2;

     label2:
        $r10 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $i10 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        $r11 = $r10[$i10];
        r3 = $r11;
        if $r11 != null goto label3;

        $r12 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $i11 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        $r13 = new org.apache.tomcat.util.http.MimeHeaderField;
        specialinvoke $r13.<org.apache.tomcat.util.http.MimeHeaderField: void <init>()>();
        r3 = $r13;
        $r12[$i11] = $r13;

     label3:
        $i12 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        $i13 = $i12 + 1;
        r0.<org.apache.tomcat.util.http.MimeHeaders: int count> = $i13;
        return r3;
    }

    public org.apache.tomcat.util.buf.MessageBytes addValue(java.lang.String)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        java.lang.String r1;
        org.apache.tomcat.util.http.MimeHeaderField r2;
        org.apache.tomcat.util.buf.MessageBytes $r3, $r4;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        r1 := @parameter0: java.lang.String;
        r2 = specialinvoke r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField createHeader()>();
        $r3 = virtualinvoke r2.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        virtualinvoke $r3.<org.apache.tomcat.util.buf.MessageBytes: void setString(java.lang.String)>(r1);
        $r4 = virtualinvoke r2.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getValue()>();
        return $r4;
    }

    public org.apache.tomcat.util.buf.MessageBytes addValue(byte[], int, int)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        byte[] r1;
        int i0, i1;
        org.apache.tomcat.util.http.MimeHeaderField r2;
        org.apache.tomcat.util.buf.MessageBytes $r3, $r4;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 = specialinvoke r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField createHeader()>();
        $r3 = virtualinvoke r2.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        virtualinvoke $r3.<org.apache.tomcat.util.buf.MessageBytes: void setBytes(byte[],int,int)>(r1, i0, i1);
        $r4 = virtualinvoke r2.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getValue()>();
        return $r4;
    }

    public org.apache.tomcat.util.buf.MessageBytes addValue(char[], int, int)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        char[] r1;
        int i0, i1;
        org.apache.tomcat.util.http.MimeHeaderField r2;
        org.apache.tomcat.util.buf.MessageBytes $r3, $r4;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 = specialinvoke r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField createHeader()>();
        $r3 = virtualinvoke r2.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        virtualinvoke $r3.<org.apache.tomcat.util.buf.MessageBytes: void setChars(char[],int,int)>(r1, i0, i1);
        $r4 = virtualinvoke r2.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getValue()>();
        return $r4;
    }

    public org.apache.tomcat.util.buf.MessageBytes setValue(java.lang.String)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4;
        org.apache.tomcat.util.http.MimeHeaderField[] $r2, $r5, $r8;
        org.apache.tomcat.util.http.MimeHeaderField $r3, $r6, $r9, r11;
        org.apache.tomcat.util.buf.MessageBytes $r4, $r7, $r10, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        r1 := @parameter0: java.lang.String;
        i0 = 0;
        goto label5;

     label0:
        $r2 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r3 = $r2[i0];
        $r4 = virtualinvoke $r3.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        $z0 = virtualinvoke $r4.<org.apache.tomcat.util.buf.MessageBytes: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z0 == 0 goto label4;

        i1 = i0 + 1;
        goto label3;

     label1:
        $r5 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r6 = $r5[i1];
        $r7 = virtualinvoke $r6.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        $z1 = virtualinvoke $r7.<org.apache.tomcat.util.buf.MessageBytes: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z1 == 0 goto label2;

        $i2 = i1;
        i1 = i1 + -1;
        specialinvoke r0.<org.apache.tomcat.util.http.MimeHeaders: void removeHeader(int)>($i2);

     label2:
        i1 = i1 + 1;

     label3:
        $i3 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if i1 < $i3 goto label1;

        $r8 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r9 = $r8[i0];
        $r10 = virtualinvoke $r9.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getValue()>();
        return $r10;

     label4:
        i0 = i0 + 1;

     label5:
        $i4 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if i0 < $i4 goto label0;

        r11 = specialinvoke r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField createHeader()>();
        $r12 = virtualinvoke r11.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        virtualinvoke $r12.<org.apache.tomcat.util.buf.MessageBytes: void setString(java.lang.String)>(r1);
        $r13 = virtualinvoke r11.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getValue()>();
        return $r13;
    }

    public org.apache.tomcat.util.buf.MessageBytes getValue(java.lang.String)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        java.lang.String r1;
        int i0, $i1;
        org.apache.tomcat.util.http.MimeHeaderField[] $r2, $r5;
        org.apache.tomcat.util.http.MimeHeaderField $r3, $r6;
        org.apache.tomcat.util.buf.MessageBytes $r4, $r7;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        r1 := @parameter0: java.lang.String;
        i0 = 0;
        goto label2;

     label0:
        $r2 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r3 = $r2[i0];
        $r4 = virtualinvoke $r3.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        $z0 = virtualinvoke $r4.<org.apache.tomcat.util.buf.MessageBytes: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r6 = $r5[i0];
        $r7 = virtualinvoke $r6.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getValue()>();
        return $r7;

     label1:
        i0 = i0 + 1;

     label2:
        $i1 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if i0 < $i1 goto label0;

        return null;
    }

    public org.apache.tomcat.util.buf.MessageBytes getUniqueValue(java.lang.String)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        java.lang.String r1;
        org.apache.tomcat.util.buf.MessageBytes r2, $r5;
        int i0, $i1;
        org.apache.tomcat.util.http.MimeHeaderField[] $r3, $r6;
        org.apache.tomcat.util.http.MimeHeaderField $r4, $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        r1 := @parameter0: java.lang.String;
        r2 = null;
        i0 = 0;
        goto label3;

     label0:
        $r3 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r4 = $r3[i0];
        $r5 = virtualinvoke $r4.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        $z0 = virtualinvoke $r5.<org.apache.tomcat.util.buf.MessageBytes: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z0 == 0 goto label2;

        if r2 != null goto label1;

        $r6 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r7 = $r6[i0];
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getValue()>();
        goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r8;

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if i0 < $i1 goto label0;

        return r2;
    }

    public java.lang.String getHeader(java.lang.String)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        java.lang.String r1, $r3;
        org.apache.tomcat.util.buf.MessageBytes r2;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.buf.MessageBytes getValue(java.lang.String)>(r1);
        if r2 == null goto label0;

        $r3 = virtualinvoke r2.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        goto label1;

     label0:
        $r3 = null;

     label1:
        return $r3;
    }

    public void removeHeader(java.lang.String)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        org.apache.tomcat.util.http.MimeHeaderField[] $r2;
        org.apache.tomcat.util.http.MimeHeaderField $r3;
        org.apache.tomcat.util.buf.MessageBytes $r4;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        r1 := @parameter0: java.lang.String;
        i0 = 0;
        goto label2;

     label0:
        $r2 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r3 = $r2[i0];
        $r4 = virtualinvoke $r3.<org.apache.tomcat.util.http.MimeHeaderField: org.apache.tomcat.util.buf.MessageBytes getName()>();
        $z0 = virtualinvoke $r4.<org.apache.tomcat.util.buf.MessageBytes: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z0 == 0 goto label1;

        $i1 = i0;
        i0 = i0 + -1;
        specialinvoke r0.<org.apache.tomcat.util.http.MimeHeaders: void removeHeader(int)>($i1);

     label1:
        i0 = i0 + 1;

     label2:
        $i2 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        if i0 < $i2 goto label0;

        return;
    }

    private void removeHeader(int)
    {
        org.apache.tomcat.util.http.MimeHeaders r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.tomcat.util.http.MimeHeaderField r1, $r5;
        org.apache.tomcat.util.http.MimeHeaderField[] $r2, $r3, $r4, $r6;

        r0 := @this: org.apache.tomcat.util.http.MimeHeaders;
        i0 := @parameter0: int;
        $r2 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        r1 = $r2[i0];
        virtualinvoke r1.<org.apache.tomcat.util.http.MimeHeaderField: void recycle()>();
        $r3 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $r4 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $i1 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        $i2 = $i1 - 1;
        $r5 = $r4[$i2];
        $r3[i0] = $r5;
        $r6 = r0.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.http.MimeHeaderField[] headers>;
        $i3 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        $i4 = $i3 - 1;
        $r6[$i4] = r1;
        $i5 = r0.<org.apache.tomcat.util.http.MimeHeaders: int count>;
        $i6 = $i5 - 1;
        r0.<org.apache.tomcat.util.http.MimeHeaders: int count> = $i6;
        return;
    }
}
