class java.util.Collections$CheckedList extends java.util.Collections$CheckedCollection implements java.util.List
{
    private static final long serialVersionUID;
    final java.util.List list;

    void <init>(java.util.List, java.lang.Class)
    {
        java.util.Collections$CheckedList r0;
        java.util.List r1;
        java.lang.Class r2;

        r0 := @this: java.util.Collections$CheckedList;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: java.lang.Class;
        specialinvoke r0.<java.util.Collections$CheckedCollection: void <init>(java.util.Collection,java.lang.Class)>(r1, r2);
        r0.<java.util.Collections$CheckedList: java.util.List list> = r1;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Collections$CheckedList r0;
        java.lang.Object r1;
        java.util.List $r2;
        boolean $z0, $z1;

        r0 := @this: java.util.Collections$CheckedList;
        r1 := @parameter0: java.lang.Object;
        if r1 == r0 goto label0;

        $r2 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean equals(java.lang.Object)>(r1);
        if $z0 == 0 goto label1;

     label0:
        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        java.util.Collections$CheckedList r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: java.util.Collections$CheckedList;
        $r1 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();
        return $i0;
    }

    public java.lang.Object get(int)
    {
        java.util.Collections$CheckedList r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.Collections$CheckedList;
        i0 := @parameter0: int;
        $r1 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);
        return $r2;
    }

    public java.lang.Object remove(int)
    {
        java.util.Collections$CheckedList r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.Collections$CheckedList;
        i0 := @parameter0: int;
        $r1 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i0);
        return $r2;
    }

    public int indexOf(java.lang.Object)
    {
        java.util.Collections$CheckedList r0;
        java.lang.Object r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: java.util.Collections$CheckedList;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);
        return $i0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.util.Collections$CheckedList r0;
        java.lang.Object r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: java.util.Collections$CheckedList;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        $i0 = interfaceinvoke $r2.<java.util.List: int lastIndexOf(java.lang.Object)>(r1);
        return $i0;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.util.Collections$CheckedList r0;
        int i0;
        java.lang.Object r1, $r3;
        java.util.List $r2;

        r0 := @this: java.util.Collections$CheckedList;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        virtualinvoke r0.<java.util.Collections$CheckedList: void typeCheck(java.lang.Object)>(r1);
        $r2 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);
        return $r3;
    }

    public void add(int, java.lang.Object)
    {
        java.util.Collections$CheckedList r0;
        int i0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: java.util.Collections$CheckedList;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        virtualinvoke r0.<java.util.Collections$CheckedList: void typeCheck(java.lang.Object)>(r1);
        $r2 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(i0, r1);
        return;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.Collections$CheckedList r0;
        int i0;
        java.util.Collection r1, $r3;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: java.util.Collections$CheckedList;
        i0 := @parameter0: int;
        r1 := @parameter1: java.util.Collection;
        $r2 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        $r3 = virtualinvoke r0.<java.util.Collections$CheckedList: java.util.Collection checkedCopyOf(java.util.Collection)>(r1);
        $z0 = interfaceinvoke $r2.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, $r3);
        return $z0;
    }

    public java.util.ListIterator listIterator()
    {
        java.util.Collections$CheckedList r0;
        java.util.ListIterator $r1;

        r0 := @this: java.util.Collections$CheckedList;
        $r1 = virtualinvoke r0.<java.util.Collections$CheckedList: java.util.ListIterator listIterator(int)>(0);
        return $r1;
    }

    public java.util.ListIterator listIterator(int)
    {
        java.util.Collections$CheckedList r0;
        int i0;
        java.util.ListIterator r1;
        java.util.List $r2;
        java.util.Collections$CheckedList$1 $r3;

        r0 := @this: java.util.Collections$CheckedList;
        i0 := @parameter0: int;
        $r2 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        r1 = interfaceinvoke $r2.<java.util.List: java.util.ListIterator listIterator(int)>(i0);
        $r3 = new java.util.Collections$CheckedList$1;
        specialinvoke $r3.<java.util.Collections$CheckedList$1: void <init>(java.util.Collections$CheckedList,java.util.ListIterator)>(r0, r1);
        return $r3;
    }

    public java.util.List subList(int, int)
    {
        java.util.Collections$CheckedList r0, $r1;
        int i0, i1;
        java.util.List $r2, $r3;
        java.lang.Class $r4;

        r0 := @this: java.util.Collections$CheckedList;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = new java.util.Collections$CheckedList;
        $r2 = r0.<java.util.Collections$CheckedList: java.util.List list>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>(i0, i1);
        $r4 = r0.<java.util.Collections$CheckedList: java.lang.Class type>;
        specialinvoke $r1.<java.util.Collections$CheckedList: void <init>(java.util.List,java.lang.Class)>($r3, $r4);
        return $r1;
    }
}
