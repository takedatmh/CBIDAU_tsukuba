public class sun.net.www.HeaderParser extends java.lang.Object
{
    java.lang.String raw;
    java.lang.String[][] tab;
    int nkeys;
    int asize;

    public void <init>(java.lang.String)
    {
        sun.net.www.HeaderParser r0;
        java.lang.String r1;
        int $i0;
        java.lang.String[][] $r2;

        r0 := @this: sun.net.www.HeaderParser;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.net.www.HeaderParser: int asize> = 10;
        r0.<sun.net.www.HeaderParser: java.lang.String raw> = r1;
        $i0 = r0.<sun.net.www.HeaderParser: int asize>;
        $r2 = newmultiarray (java.lang.String)[$i0][2];
        r0.<sun.net.www.HeaderParser: java.lang.String[][] tab> = $r2;
        specialinvoke r0.<sun.net.www.HeaderParser: void parse()>();
        return;
    }

    private void <init>()
    {
        sun.net.www.HeaderParser r0;

        r0 := @this: sun.net.www.HeaderParser;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.net.www.HeaderParser: int asize> = 10;
        return;
    }

    public sun.net.www.HeaderParser subsequence(int, int)
    {
        sun.net.www.HeaderParser r0, r1, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.IllegalArgumentException $r2;
        java.lang.String[][] $r4, $r5, $r6;

        r0 := @this: sun.net.www.HeaderParser;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 != 0 goto label0;

        $i2 = r0.<sun.net.www.HeaderParser: int nkeys>;
        if i1 != $i2 goto label0;

        return r0;

     label0:
        if i0 < 0 goto label1;

        if i0 >= i1 goto label1;

        $i3 = r0.<sun.net.www.HeaderParser: int nkeys>;
        if i1 <= $i3 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid start or end");
        throw $r2;

     label2:
        $r3 = new sun.net.www.HeaderParser;
        specialinvoke $r3.<sun.net.www.HeaderParser: void <init>()>();
        r1 = $r3;
        $i4 = r0.<sun.net.www.HeaderParser: int asize>;
        $r4 = newmultiarray (java.lang.String)[$i4][2];
        r1.<sun.net.www.HeaderParser: java.lang.String[][] tab> = $r4;
        $i5 = r0.<sun.net.www.HeaderParser: int asize>;
        r1.<sun.net.www.HeaderParser: int asize> = $i5;
        $r5 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $r6 = r1.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i6 = i1 - i0;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, i0, $r6, 0, $i6);
        $i7 = i1 - i0;
        r1.<sun.net.www.HeaderParser: int nkeys> = $i7;
        return r1;
    }

    private void parse()
    {
        sun.net.www.HeaderParser r0;
        char[] r1;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, i21, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i35, $i37;
        boolean z0, z1;
        char c4, $c8, $c9, $c14, $c15, $c22, $c31, $c34, $c36, $c38;
        java.lang.String $r2, $r4, $r5, $r6, $r7, $r10, $r13, $r16, $r17, $r20, $r25, $r28, $r31, $r32, $r35, $r38, $r41, $r42;
        java.lang.String[][] r3, $r8, $r11, $r14, $r18, $r21, $r22, $r23, $r26, $r29, $r33, $r36, $r39;
        java.lang.String[] $r9, $r12, $r15, $r19, $r24, $r27, $r30, $r34, $r37, $r40;

        r0 := @this: sun.net.www.HeaderParser;
        $r4 = r0.<sun.net.www.HeaderParser: java.lang.String raw>;
        if $r4 == null goto label22;

        $r5 = r0.<sun.net.www.HeaderParser: java.lang.String raw>;
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();
        r0.<sun.net.www.HeaderParser: java.lang.String raw> = $r6;
        $r7 = r0.<sun.net.www.HeaderParser: java.lang.String raw>;
        r1 = virtualinvoke $r7.<java.lang.String: char[] toCharArray()>();
        i0 = 0;
        i1 = 0;
        i2 = 0;
        z0 = 1;
        z1 = 0;
        i3 = lengthof r1;

     label0:
        if i1 >= i3 goto label15;

        c4 = r1[i1];
        if c4 != 61 goto label1;

        if z1 != 0 goto label1;

        $r8 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $r9 = $r8[i2];
        $r2 = new java.lang.String;
        $i5 = i1 - i0;
        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, i0, $i5);
        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();
        $r9[0] = $r10;
        z0 = 0;
        i1 = i1 + 1;
        i0 = i1;
        goto label13;

     label1:
        if c4 != 34 goto label5;

        if z1 == 0 goto label4;

        $r11 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i6 = i2;
        i2 = i2 + 1;
        $r12 = $r11[$i6];
        $r13 = new java.lang.String;
        $i7 = i1 - i0;
        specialinvoke $r13.<java.lang.String: void <init>(char[],int,int)>(r1, i0, $i7);
        $r12[1] = $r13;
        z1 = 0;

     label2:
        i1 = i1 + 1;
        if i1 >= i3 goto label3;

        $c8 = r1[i1];
        if $c8 == 32 goto label2;

        $c9 = r1[i1];
        if $c9 == 44 goto label2;

     label3:
        z0 = 1;
        i0 = i1;
        goto label13;

     label4:
        z1 = 1;
        i1 = i1 + 1;
        i0 = i1;
        goto label13;

     label5:
        if c4 == 32 goto label6;

        if c4 != 44 goto label12;

     label6:
        if z1 == 0 goto label7;

        i1 = i1 + 1;
        goto label0;

     label7:
        if z0 == 0 goto label8;

        $r14 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i10 = i2;
        i2 = i2 + 1;
        $r15 = $r14[$i10];
        $r16 = new java.lang.String;
        $i11 = i1 - i0;
        specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>(r1, i0, $i11);
        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String toLowerCase()>();
        $r15[0] = $r17;
        goto label9;

     label8:
        $r18 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i12 = i2;
        i2 = i2 + 1;
        $r19 = $r18[$i12];
        $r20 = new java.lang.String;
        $i13 = i1 - i0;
        specialinvoke $r20.<java.lang.String: void <init>(char[],int,int)>(r1, i0, $i13);
        $r19[1] = $r20;

     label9:
        if i1 >= i3 goto label11;

        $c14 = r1[i1];
        if $c14 == 32 goto label10;

        $c15 = r1[i1];
        if $c15 != 44 goto label11;

     label10:
        i1 = i1 + 1;
        goto label9;

     label11:
        z0 = 1;
        i0 = i1;
        goto label13;

     label12:
        i1 = i1 + 1;

     label13:
        $i16 = r0.<sun.net.www.HeaderParser: int asize>;
        if i2 != $i16 goto label14;

        $i17 = r0.<sun.net.www.HeaderParser: int asize>;
        $i18 = $i17 * 2;
        r0.<sun.net.www.HeaderParser: int asize> = $i18;
        $i19 = r0.<sun.net.www.HeaderParser: int asize>;
        r3 = newmultiarray (java.lang.String)[$i19][2];
        $r21 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $r22 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i20 = lengthof $r22;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, r3, 0, $i20);
        r0.<sun.net.www.HeaderParser: java.lang.String[][] tab> = r3;

     label14:
        goto label0;

     label15:
        i21 = i1 + -1;
        if i21 <= i0 goto label18;

        if z0 != 0 goto label17;

        $c22 = r1[i21];
        if $c22 != 34 goto label16;

        $r23 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i23 = i2;
        i2 = i2 + 1;
        $r24 = $r23[$i23];
        $r25 = new java.lang.String;
        $i24 = i21 - i0;
        specialinvoke $r25.<java.lang.String: void <init>(char[],int,int)>(r1, i0, $i24);
        $r24[1] = $r25;
        goto label21;

     label16:
        $r26 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i25 = i2;
        i2 = i2 + 1;
        $r27 = $r26[$i25];
        $r28 = new java.lang.String;
        $i26 = i21 - i0;
        $i27 = $i26 + 1;
        specialinvoke $r28.<java.lang.String: void <init>(char[],int,int)>(r1, i0, $i27);
        $r27[1] = $r28;
        goto label21;

     label17:
        $r29 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i28 = i2;
        i2 = i2 + 1;
        $r30 = $r29[$i28];
        $r31 = new java.lang.String;
        $i29 = i21 - i0;
        $i30 = $i29 + 1;
        specialinvoke $r31.<java.lang.String: void <init>(char[],int,int)>(r1, i0, $i30);
        $r32 = virtualinvoke $r31.<java.lang.String: java.lang.String toLowerCase()>();
        $r30[0] = $r32;
        goto label21;

     label18:
        if i21 != i0 goto label21;

        if z0 != 0 goto label20;

        $c31 = r1[i21];
        if $c31 != 34 goto label19;

        $r33 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i32 = i2;
        i2 = i2 + 1;
        $r34 = $r33[$i32];
        $i33 = i21 - 1;
        $c34 = r1[$i33];
        $r35 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c34);
        $r34[1] = $r35;
        goto label21;

     label19:
        $r36 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i35 = i2;
        i2 = i2 + 1;
        $r37 = $r36[$i35];
        $c36 = r1[i21];
        $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c36);
        $r37[1] = $r38;
        goto label21;

     label20:
        $r39 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i37 = i2;
        i2 = i2 + 1;
        $r40 = $r39[$i37];
        $c38 = r1[i21];
        $r41 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c38);
        $r42 = virtualinvoke $r41.<java.lang.String: java.lang.String toLowerCase()>();
        $r40[0] = $r42;

     label21:
        r0.<sun.net.www.HeaderParser: int nkeys> = i2;

     label22:
        return;
    }

    public java.lang.String findKey(int)
    {
        sun.net.www.HeaderParser r0;
        int i0, $i1;
        java.lang.String[][] $r1;
        java.lang.String[] $r2;
        java.lang.String $r3;

        r0 := @this: sun.net.www.HeaderParser;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i1 = r0.<sun.net.www.HeaderParser: int asize>;
        if i0 <= $i1 goto label1;

     label0:
        return null;

     label1:
        $r1 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $r2 = $r1[i0];
        $r3 = $r2[0];
        return $r3;
    }

    public java.lang.String findValue(int)
    {
        sun.net.www.HeaderParser r0;
        int i0, $i1;
        java.lang.String[][] $r1;
        java.lang.String[] $r2;
        java.lang.String $r3;

        r0 := @this: sun.net.www.HeaderParser;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i1 = r0.<sun.net.www.HeaderParser: int asize>;
        if i0 <= $i1 goto label1;

     label0:
        return null;

     label1:
        $r1 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $r2 = $r1[i0];
        $r3 = $r2[1];
        return $r3;
    }

    public java.lang.String findValue(java.lang.String)
    {
        sun.net.www.HeaderParser r0;
        java.lang.String r1, $r2;

        r0 := @this: sun.net.www.HeaderParser;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<sun.net.www.HeaderParser: java.lang.String findValue(java.lang.String,java.lang.String)>(r1, null);
        return $r2;
    }

    public java.lang.String findValue(java.lang.String, java.lang.String)
    {
        sun.net.www.HeaderParser r0;
        java.lang.String r1, r2, r3, $r6, $r9, $r12;
        int i0, $i1;
        java.lang.String[][] $r4, $r7, $r10;
        java.lang.String[] $r5, $r8, $r11;
        boolean $z0;

        r0 := @this: sun.net.www.HeaderParser;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        if r1 != null goto label0;

        return r2;

     label0:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        i0 = 0;

     label1:
        $i1 = r0.<sun.net.www.HeaderParser: int asize>;
        if i0 >= $i1 goto label4;

        $r4 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $r5 = $r4[i0];
        $r6 = $r5[0];
        if $r6 != null goto label2;

        return r2;

     label2:
        $r7 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $r8 = $r7[i0];
        $r9 = $r8[0];
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        if $z0 == 0 goto label3;

        $r10 = r0.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $r11 = $r10[i0];
        $r12 = $r11[1];
        return $r12;

     label3:
        i0 = i0 + 1;
        goto label1;

     label4:
        return r2;
    }

    public java.util.Iterator keys()
    {
        sun.net.www.HeaderParser r0;
        sun.net.www.HeaderParser$ParserIterator $r1;

        r0 := @this: sun.net.www.HeaderParser;
        $r1 = new sun.net.www.HeaderParser$ParserIterator;
        specialinvoke $r1.<sun.net.www.HeaderParser$ParserIterator: void <init>(sun.net.www.HeaderParser,boolean)>(r0, 0);
        return $r1;
    }

    public java.util.Iterator values()
    {
        sun.net.www.HeaderParser r0;
        sun.net.www.HeaderParser$ParserIterator $r1;

        r0 := @this: sun.net.www.HeaderParser;
        $r1 = new sun.net.www.HeaderParser$ParserIterator;
        specialinvoke $r1.<sun.net.www.HeaderParser$ParserIterator: void <init>(sun.net.www.HeaderParser,boolean)>(r0, 1);
        return $r1;
    }

    public java.lang.String toString()
    {
        sun.net.www.HeaderParser r0;
        java.util.Iterator r1;
        java.lang.StringBuffer r2, $r5;
        int i0, $i1, $i2;
        java.lang.String r3, r4, $r12, $r15, $r20, $r26, $r30;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25;
        boolean $z0, $z1, $z2;
        java.lang.Object $r14;

        r0 := @this: sun.net.www.HeaderParser;
        r1 = virtualinvoke r0.<sun.net.www.HeaderParser: java.util.Iterator keys()>();
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        r2 = $r5;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{size=");
        $i1 = r0.<sun.net.www.HeaderParser: int asize>;
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nkeys=");
        $i2 = r0.<sun.net.www.HeaderParser: int nkeys>;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);
        i0 = 0;

     label0:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        $r14 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.lang.String) $r14;
        r4 = virtualinvoke r0.<sun.net.www.HeaderParser: java.lang.String findValue(int)>(i0);
        if r4 == null goto label1;

        $r15 = "";
        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        if $z1 == 0 goto label1;

        r4 = null;

     label1:
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        if r4 != null goto label2;

        $r20 = "";
        goto label3;

     label2:
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label4;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label4:
        i0 = i0 + 1;
        goto label0;

     label5:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" }");
        $r30 = new java.lang.String;
        specialinvoke $r30.<java.lang.String: void <init>(java.lang.StringBuffer)>(r2);
        return $r30;
    }

    public int findInt(java.lang.String, int)
    {
        sun.net.www.HeaderParser r0;
        java.lang.String r1, $r3, $r4;
        int i0, $i1;
        java.lang.Throwable r2, $r5;

        r0 := @this: sun.net.www.HeaderParser;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;

     label0:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        $r4 = virtualinvoke r0.<sun.net.www.HeaderParser: java.lang.String findValue(java.lang.String,java.lang.String)>(r1, $r3);
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label1:
        return $i1;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        return i0;

        catch java.lang.Throwable from label0 to label1 with label2;
    }
}
