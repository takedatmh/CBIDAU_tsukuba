public abstract class org.apache.naming.resources.BaseDirContext extends java.lang.Object implements javax.naming.directory.DirContext
{
    private static final org.apache.juli.logging.Log log;
    protected java.lang.String docBase;
    protected java.util.Hashtable env;
    protected static final org.apache.naming.StringManager sm;
    protected final javax.naming.NameParser nameParser;
    protected boolean cached;
    protected int cacheTTL;
    protected int cacheMaxSize;
    protected int cacheObjectMaxSize;
    protected java.util.Map aliases;
    protected java.util.List altDirContexts;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        org.apache.naming.StringManager $r1;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/naming/resources/BaseDirContext");
        <org.apache.naming.resources.BaseDirContext: org.apache.juli.logging.Log log> = $r0;
        $r1 = staticinvoke <org.apache.naming.StringManager: org.apache.naming.StringManager getManager(java.lang.String)>("org.apache.naming.resources");
        <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm> = $r1;
        return;
    }

    public void <init>()
    {
        org.apache.naming.resources.BaseDirContext r0;
        org.apache.naming.NameParserImpl $r1;
        java.util.HashMap $r2;
        java.util.ArrayList $r3;
        java.util.Hashtable $r4;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.naming.resources.BaseDirContext: java.lang.String docBase> = null;
        $r1 = new org.apache.naming.NameParserImpl;
        specialinvoke $r1.<org.apache.naming.NameParserImpl: void <init>()>();
        r0.<org.apache.naming.resources.BaseDirContext: javax.naming.NameParser nameParser> = $r1;
        r0.<org.apache.naming.resources.BaseDirContext: boolean cached> = 1;
        r0.<org.apache.naming.resources.BaseDirContext: int cacheTTL> = 5000;
        r0.<org.apache.naming.resources.BaseDirContext: int cacheMaxSize> = 10240;
        r0.<org.apache.naming.resources.BaseDirContext: int cacheObjectMaxSize> = 512;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases> = $r2;
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts> = $r3;
        $r4 = new java.util.Hashtable;
        specialinvoke $r4.<java.util.Hashtable: void <init>()>();
        r0.<org.apache.naming.resources.BaseDirContext: java.util.Hashtable env> = $r4;
        return;
    }

    public void <init>(java.util.Hashtable)
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.util.Hashtable r1;
        org.apache.naming.NameParserImpl $r2;
        java.util.HashMap $r3;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.util.Hashtable;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.naming.resources.BaseDirContext: java.lang.String docBase> = null;
        $r2 = new org.apache.naming.NameParserImpl;
        specialinvoke $r2.<org.apache.naming.NameParserImpl: void <init>()>();
        r0.<org.apache.naming.resources.BaseDirContext: javax.naming.NameParser nameParser> = $r2;
        r0.<org.apache.naming.resources.BaseDirContext: boolean cached> = 1;
        r0.<org.apache.naming.resources.BaseDirContext: int cacheTTL> = 5000;
        r0.<org.apache.naming.resources.BaseDirContext: int cacheMaxSize> = 10240;
        r0.<org.apache.naming.resources.BaseDirContext: int cacheObjectMaxSize> = 512;
        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases> = $r3;
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts> = $r4;
        r0.<org.apache.naming.resources.BaseDirContext: java.util.Hashtable env> = r1;
        return;
    }

    public void addResourcesJar(java.net.URL)
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.net.URL r1;
        java.net.JarURLConnection r2;
        java.util.jar.JarFile r3;
        java.util.zip.ZipEntry r4;
        org.apache.naming.resources.WARDirContext$Entry $r5;
        org.apache.naming.resources.WARDirContext r6, $r8;
        java.net.URLConnection $r7;
        java.util.List $r9;
        java.io.IOException $r10, r11;
        org.apache.juli.logging.Log $r12;
        org.apache.naming.StringManager $r13;
        java.lang.Object[] $r14;
        java.lang.String $r15;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.net.URL;

     label0:
        $r7 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();
        r2 = (java.net.JarURLConnection) $r7;
        r3 = virtualinvoke r2.<java.net.JarURLConnection: java.util.jar.JarFile getJarFile()>();
        r4 = virtualinvoke r3.<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)>("/");
        $r8 = new org.apache.naming.resources.WARDirContext;
        $r5 = new org.apache.naming.resources.WARDirContext$Entry;
        specialinvoke $r5.<org.apache.naming.resources.WARDirContext$Entry: void <init>(java.lang.String,java.util.zip.ZipEntry)>("/", r4);
        specialinvoke $r8.<org.apache.naming.resources.WARDirContext: void <init>(java.util.zip.ZipFile,org.apache.naming.resources.WARDirContext$Entry)>(r3, $r5);
        r6 = $r8;
        virtualinvoke r6.<org.apache.naming.resources.WARDirContext: void loadEntries()>();
        $r9 = r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts>;
        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r6);

     label1:
        goto label3;

     label2:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = <org.apache.naming.resources.BaseDirContext: org.apache.juli.logging.Log log>;
        $r13 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r14 = newarray (java.lang.Object)[1];
        $r14[0] = r1;
        $r15 = virtualinvoke $r13.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.addResourcesJarFail", $r14);
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r15, r11);

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void addAltDirContext(javax.naming.directory.DirContext)
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.directory.DirContext r1;
        java.util.List $r2;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.directory.DirContext;
        $r2 = r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    public void addAlias(java.lang.String, org.apache.naming.resources.BaseDirContext)
    {
        org.apache.naming.resources.BaseDirContext r0, r2;
        java.lang.String r1, $r6;
        org.apache.naming.StringManager $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object[] $r5;
        java.util.Map $r7;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.apache.naming.resources.BaseDirContext;
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z0 != 0 goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        $r3 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r5[0] = r1;
        $r6 = virtualinvoke $r3.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.invalidAliasPath", $r5);
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);
        throw $r4;

     label0:
        $r7 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return;
    }

    public void removeAlias(java.lang.String)
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1, $r5;
        org.apache.naming.StringManager $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4;
        java.util.Map $r6;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z0 != 0 goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r4 = newarray (java.lang.Object)[1];
        $r4[0] = r1;
        $r5 = virtualinvoke $r2.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.invalidAliasPath", $r4);
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r3;

     label0:
        $r6 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);
        return;
    }

    public java.lang.String getAliases()
    {
        org.apache.naming.resources.BaseDirContext r0, $r14;
        java.lang.StringBuilder $r1, r2;
        java.util.Iterator r3;
        boolean z0, $z1;
        java.util.Map$Entry r4;
        java.util.Map $r5;
        java.util.Set $r6;
        java.lang.Object $r8, $r9, $r13;
        java.lang.String $r10, $r15, $r17;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r5 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();
        z0 = 1;
        goto label3;

     label0:
        if z0 == 0 goto label1;

        z0 = 0;
        goto label2;

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r8;
        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r10 = (java.lang.String) $r9;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r14 = (org.apache.naming.resources.BaseDirContext) $r13;
        $r15 = virtualinvoke $r14.<org.apache.naming.resources.BaseDirContext: java.lang.String getDocBase()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label0;

        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r17;
    }

    public void setAliases(java.lang.String)
    {
        org.apache.naming.resources.BaseDirContext r0, r8;
        java.lang.String r1, r4, r11, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r24, $r25, $r29, $r30, $r32, $r36, $r37, $r38, $r44, $r45, $r46, $r47;
        java.lang.String[] r2, r3, r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.naming.StringManager $r6, $r22, $r27, $r34, $r42;
        java.io.File r7, $r31;
        java.util.Map $r9;
        java.lang.IllegalArgumentException $r12, $r21, $r26, $r33, $r41;
        java.lang.Object[] $r13, $r23, $r28, $r35, $r43;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.naming.resources.WARDirContext $r39;
        org.apache.naming.resources.FileDirContext $r40;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $r9 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        interfaceinvoke $r9.<java.util.Map: void clear()>();
        if r1 == null goto label0;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i2 != 0 goto label1;

     label0:
        return;

     label1:
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");
        r3 = r2;
        i0 = lengthof r2;
        i1 = 0;
        goto label13;

     label2:
        r4 = r3[i1];
        r11 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        $i3 = virtualinvoke r11.<java.lang.String: int length()>();
        if $i3 != 0 goto label3;

        goto label12;

     label3:
        r5 = virtualinvoke r11.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");
        $i4 = lengthof r5;
        if $i4 == 2 goto label4;

        $r12 = new java.lang.IllegalArgumentException;
        $r6 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r13 = newarray (java.lang.Object)[1];
        $r13[0] = r11;
        $r14 = virtualinvoke $r6.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.invalidAliasMapping", $r13);
        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);
        throw $r12;

     label4:
        $r15 = r5[0];
        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();
        r5[0] = $r16;
        $r17 = r5[1];
        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();
        r5[1] = $r18;
        $r19 = r5[0];
        $i5 = virtualinvoke $r19.<java.lang.String: int length()>();
        if $i5 == 0 goto label5;

        $r20 = r5[1];
        $i6 = virtualinvoke $r20.<java.lang.String: int length()>();
        if $i6 != 0 goto label6;

     label5:
        $r21 = new java.lang.IllegalArgumentException;
        $r22 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r23 = newarray (java.lang.Object)[1];
        $r23[0] = r11;
        $r24 = virtualinvoke $r22.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.invalidAliasMapping", $r23);
        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);
        throw $r21;

     label6:
        $r25 = r5[0];
        $z0 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("/");
        if $z0 == 0 goto label7;

        $r26 = new java.lang.IllegalArgumentException;
        $r27 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r28 = newarray (java.lang.Object)[1];
        $r29 = r5[0];
        $r28[0] = $r29;
        $r30 = virtualinvoke $r27.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.invalidAliasNotAllowed", $r28);
        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);
        throw $r26;

     label7:
        $r31 = new java.io.File;
        $r32 = r5[1];
        specialinvoke $r31.<java.io.File: void <init>(java.lang.String)>($r32);
        r7 = $r31;
        $z1 = virtualinvoke r7.<java.io.File: boolean exists()>();
        if $z1 != 0 goto label8;

        $r33 = new java.lang.IllegalArgumentException;
        $r34 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r35 = newarray (java.lang.Object)[1];
        $r36 = r5[1];
        $r35[0] = $r36;
        $r37 = virtualinvoke $r34.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.invalidAliasNotExist", $r35);
        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r37);
        throw $r33;

     label8:
        $r38 = r5[1];
        $z2 = virtualinvoke $r38.<java.lang.String: boolean endsWith(java.lang.String)>(".war");
        if $z2 == 0 goto label9;

        $z3 = virtualinvoke r7.<java.io.File: boolean isDirectory()>();
        if $z3 != 0 goto label9;

        $r39 = new org.apache.naming.resources.WARDirContext;
        specialinvoke $r39.<org.apache.naming.resources.WARDirContext: void <init>()>();
        r8 = $r39;
        goto label11;

     label9:
        $z4 = virtualinvoke r7.<java.io.File: boolean isDirectory()>();
        if $z4 == 0 goto label10;

        $r40 = new org.apache.naming.resources.FileDirContext;
        specialinvoke $r40.<org.apache.naming.resources.FileDirContext: void <init>()>();
        r8 = $r40;
        goto label11;

     label10:
        $r41 = new java.lang.IllegalArgumentException;
        $r42 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r43 = newarray (java.lang.Object)[1];
        $r44 = r5[1];
        $r43[0] = $r44;
        $r45 = virtualinvoke $r42.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.invalidAliasFile", $r43);
        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r45);
        throw $r41;

     label11:
        $r46 = r5[1];
        virtualinvoke r8.<org.apache.naming.resources.BaseDirContext: void setDocBase(java.lang.String)>($r46);
        $r47 = r5[0];
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void addAlias(java.lang.String,org.apache.naming.resources.BaseDirContext)>($r47, r8);

     label12:
        i1 = i1 + 1;

     label13:
        if i1 < i0 goto label2;

        return;
    }

    public java.lang.String getDocBase()
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String $r1;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        $r1 = r0.<org.apache.naming.resources.BaseDirContext: java.lang.String docBase>;
        return $r1;
    }

    public void setDocBase(java.lang.String)
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1, $r4;
        org.apache.naming.StringManager $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("resources.null");
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        r0.<org.apache.naming.resources.BaseDirContext: java.lang.String docBase> = r1;
        return;
    }

    public void setCached(boolean)
    {
        org.apache.naming.resources.BaseDirContext r0;
        boolean z0;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        z0 := @parameter0: boolean;
        r0.<org.apache.naming.resources.BaseDirContext: boolean cached> = z0;
        return;
    }

    public boolean isCached()
    {
        org.apache.naming.resources.BaseDirContext r0;
        boolean $z0;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        $z0 = r0.<org.apache.naming.resources.BaseDirContext: boolean cached>;
        return $z0;
    }

    public void setCacheTTL(int)
    {
        org.apache.naming.resources.BaseDirContext r0;
        int i0;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        i0 := @parameter0: int;
        r0.<org.apache.naming.resources.BaseDirContext: int cacheTTL> = i0;
        return;
    }

    public int getCacheTTL()
    {
        org.apache.naming.resources.BaseDirContext r0;
        int $i0;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        $i0 = r0.<org.apache.naming.resources.BaseDirContext: int cacheTTL>;
        return $i0;
    }

    public int getCacheMaxSize()
    {
        org.apache.naming.resources.BaseDirContext r0;
        int $i0;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        $i0 = r0.<org.apache.naming.resources.BaseDirContext: int cacheMaxSize>;
        return $i0;
    }

    public void setCacheMaxSize(int)
    {
        org.apache.naming.resources.BaseDirContext r0;
        int i0;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        i0 := @parameter0: int;
        r0.<org.apache.naming.resources.BaseDirContext: int cacheMaxSize> = i0;
        return;
    }

    public int getCacheObjectMaxSize()
    {
        org.apache.naming.resources.BaseDirContext r0;
        int $i0;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        $i0 = r0.<org.apache.naming.resources.BaseDirContext: int cacheObjectMaxSize>;
        return $i0;
    }

    public void setCacheObjectMaxSize(int)
    {
        org.apache.naming.resources.BaseDirContext r0;
        int i0;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        i0 := @parameter0: int;
        r0.<org.apache.naming.resources.BaseDirContext: int cacheObjectMaxSize> = i0;
        return;
    }

    public void allocate()
    {
        org.apache.naming.resources.BaseDirContext r0;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        return;
    }

    public void release()
    {
        org.apache.naming.resources.BaseDirContext r0, r2, $r11;
        java.util.Iterator r1, r8;
        java.util.Map $r3, $r6;
        java.util.Collection $r4;
        java.lang.Object $r5, $r9;
        boolean $z0, $z1, $z2;
        java.util.List $r7, $r12;
        javax.naming.directory.DirContext r10;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        $r3 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();
        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.apache.naming.resources.BaseDirContext) $r5;
        virtualinvoke r2.<org.apache.naming.resources.BaseDirContext: void release()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        $r6 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        interfaceinvoke $r6.<java.util.Map: void clear()>();
        $r7 = r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts>;
        r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();
        goto label3;

     label2:
        $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
        r10 = (javax.naming.directory.DirContext) $r9;
        $z1 = r10 instanceof org.apache.naming.resources.BaseDirContext;
        if $z1 == 0 goto label3;

        $r11 = (org.apache.naming.resources.BaseDirContext) r10;
        virtualinvoke $r11.<org.apache.naming.resources.BaseDirContext: void release()>();

     label3:
        $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label2;

        $r12 = r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts>;
        interfaceinvoke $r12.<java.util.List: void clear()>();
        return;
    }

    public java.lang.String getRealPath(java.lang.String)
    {
        org.apache.naming.resources.BaseDirContext r0, $r7, $r8, $r16;
        java.lang.String r1, r3, $r9, $r10, r11, r17;
        org.apache.naming.resources.BaseDirContext$AliasResult r2;
        java.util.Iterator r4;
        javax.naming.directory.DirContext r5;
        java.util.Map $r6;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r12, $r13;
        java.util.List $r14;
        java.lang.Object $r15;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $r6 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        r2 = specialinvoke r0.<org.apache.naming.resources.BaseDirContext: org.apache.naming.resources.BaseDirContext$AliasResult findAlias(java.lang.String)>(r1);
        $r7 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        if $r7 == null goto label0;

        $r8 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        $r9 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: java.lang.String aliasName>;
        $r10 = virtualinvoke $r8.<org.apache.naming.resources.BaseDirContext: java.lang.String doGetRealPath(java.lang.String)>($r9);
        return $r10;

     label0:
        r11 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: java.lang.String doGetRealPath(java.lang.String)>(r1);
        if r11 == null goto label1;

        return r11;

     label1:
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("/META-INF/resources");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r14 = r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts>;
        r4 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();
        goto label3;

     label2:
        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (javax.naming.directory.DirContext) $r15;
        $z1 = r5 instanceof org.apache.naming.resources.BaseDirContext;
        if $z1 == 0 goto label3;

        $r16 = (org.apache.naming.resources.BaseDirContext) r5;
        r17 = virtualinvoke $r16.<org.apache.naming.resources.BaseDirContext: java.lang.String getRealPath(java.lang.String)>(r3);
        if r17 == null goto label3;

        return r17;

     label3:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label2;

        return null;
    }

    public final java.lang.Object lookup(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r3 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: java.lang.Object lookup(java.lang.String)>($r2);
        return $r3;
    }

    public final java.lang.Object lookup(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1, $r6;
        java.lang.Object r2;
        org.apache.naming.StringManager $r3;
        javax.naming.NameNotFoundException $r4;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        r2 = specialinvoke r0.<org.apache.naming.resources.BaseDirContext: java.lang.Object doLookupWithoutNNFE(java.lang.String)>(r1);
        if r2 == null goto label0;

        return r2;

     label0:
        $r4 = new javax.naming.NameNotFoundException;
        $r3 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r5[0] = r1;
        $r6 = virtualinvoke $r3.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.notFound", $r5);
        specialinvoke $r4.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r6);
        throw $r4;
    }

    private java.lang.Object doLookupWithoutNNFE(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0, $r8, $r9, $r17;
        java.lang.String r1, r3, $r10;
        org.apache.naming.resources.BaseDirContext$AliasResult r2;
        java.util.Iterator r4;
        javax.naming.directory.DirContext r5;
        javax.naming.NamingException r6, $r18;
        java.util.Map $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r11, r12, $r16;
        java.lang.StringBuilder $r13, $r14;
        java.util.List $r15;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $r7 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        $z0 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        r2 = specialinvoke r0.<org.apache.naming.resources.BaseDirContext: org.apache.naming.resources.BaseDirContext$AliasResult findAlias(java.lang.String)>(r1);
        $r8 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        if $r8 == null goto label0;

        $r9 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        $r10 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: java.lang.String aliasName>;
        $r11 = virtualinvoke $r9.<org.apache.naming.resources.BaseDirContext: java.lang.Object lookup(java.lang.String)>($r10);
        return $r11;

     label0:
        r12 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: java.lang.Object doLookup(java.lang.String)>(r1);
        if r12 == null goto label1;

        return r12;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".class");
        if $z1 == 0 goto label2;

        return null;

     label2:
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("/META-INF/resources");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts>;
        r4 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();
        goto label8;

     label3:
        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (javax.naming.directory.DirContext) $r16;
        $z2 = r5 instanceof org.apache.naming.resources.BaseDirContext;
        if $z2 == 0 goto label4;

        $r17 = (org.apache.naming.resources.BaseDirContext) r5;
        r12 = specialinvoke $r17.<org.apache.naming.resources.BaseDirContext: java.lang.Object doLookupWithoutNNFE(java.lang.String)>(r3);
        goto label7;

     label4:
        r12 = interfaceinvoke r5.<javax.naming.directory.DirContext: java.lang.Object lookup(java.lang.String)>(r3);

     label5:
        goto label7;

     label6:
        $r18 := @caughtexception;
        r6 = $r18;

     label7:
        if r12 == null goto label8;

        return r12;

     label8:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label3;

        return null;

        catch javax.naming.NamingException from label4 to label5 with label6;
    }

    public void bind(javax.naming.Name, java.lang.Object) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.Object r2;
        java.lang.String $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.Object;
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void bind(java.lang.String,java.lang.Object)>($r3, r2);
        return;
    }

    public void bind(java.lang.String, java.lang.Object) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1;
        java.lang.Object r2;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void bind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)>(r1, r2, null);
        return;
    }

    public void rebind(javax.naming.Name, java.lang.Object) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.Object r2;
        java.lang.String $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.Object;
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void rebind(java.lang.String,java.lang.Object)>($r3, r2);
        return;
    }

    public void rebind(java.lang.String, java.lang.Object) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1;
        java.lang.Object r2;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void rebind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)>(r1, r2, null);
        return;
    }

    public void unbind(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String $r2;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void unbind(java.lang.String)>($r2);
        return;
    }

    public abstract void unbind(java.lang.String) throws javax.naming.NamingException;

    public void rename(javax.naming.Name, javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1, r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: javax.naming.Name;
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void rename(java.lang.String,java.lang.String)>($r3, $r4);
        return;
    }

    public abstract void rename(java.lang.String, java.lang.String) throws javax.naming.NamingException;

    public javax.naming.NamingEnumeration list(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String $r2;
        javax.naming.NamingEnumeration $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r3 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.NamingEnumeration list(java.lang.String)>($r2);
        return $r3;
    }

    public javax.naming.NamingEnumeration list(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0, $r8, $r9, $r17;
        java.lang.String r1, r4, $r10, $r23;
        org.apache.naming.resources.BaseDirContext$AliasResult r2;
        java.util.List r3, r12, $r15;
        java.util.Iterator r5, $r19;
        javax.naming.directory.DirContext r6;
        java.util.Map $r7;
        boolean $z0, $z1, $z3;
        javax.naming.NamingEnumeration $r11;
        java.lang.StringBuilder $r13, $r14;
        java.lang.Object $r16;
        org.apache.naming.NamingContextEnumeration $r18;
        javax.naming.NameNotFoundException $r20;
        org.apache.naming.StringManager $r21;
        java.lang.Object[] $r22;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $r7 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        $z0 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        r2 = specialinvoke r0.<org.apache.naming.resources.BaseDirContext: org.apache.naming.resources.BaseDirContext$AliasResult findAlias(java.lang.String)>(r1);
        $r8 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        if $r8 == null goto label0;

        $r9 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        $r10 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: java.lang.String aliasName>;
        $r11 = virtualinvoke $r9.<org.apache.naming.resources.BaseDirContext: javax.naming.NamingEnumeration list(java.lang.String)>($r10);
        return $r11;

     label0:
        r12 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: java.util.List doListBindings(java.lang.String)>(r1);
        r3 = null;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("/META-INF/resources");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts>;
        r5 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();
        goto label4;

     label1:
        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (javax.naming.directory.DirContext) $r16;
        $z1 = r6 instanceof org.apache.naming.resources.BaseDirContext;
        if $z1 == 0 goto label2;

        $r17 = (org.apache.naming.resources.BaseDirContext) r6;
        r3 = virtualinvoke $r17.<org.apache.naming.resources.BaseDirContext: java.util.List doListBindings(java.lang.String)>(r4);

     label2:
        if r3 == null goto label4;

        if r12 != null goto label3;

        r12 = r3;
        goto label4;

     label3:
        interfaceinvoke r12.<java.util.List: boolean addAll(java.util.Collection)>(r3);

     label4:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label1;

        if r12 == null goto label5;

        $r18 = new org.apache.naming.NamingContextEnumeration;
        $r19 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();
        specialinvoke $r18.<org.apache.naming.NamingContextEnumeration: void <init>(java.util.Iterator)>($r19);
        return $r18;

     label5:
        $r20 = new javax.naming.NameNotFoundException;
        $r21 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r22 = newarray (java.lang.Object)[1];
        $r22[0] = r1;
        $r23 = virtualinvoke $r21.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.notFound", $r22);
        specialinvoke $r20.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r23);
        throw $r20;
    }

    public final javax.naming.NamingEnumeration listBindings(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String $r2;
        javax.naming.NamingEnumeration $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r3 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.NamingEnumeration listBindings(java.lang.String)>($r2);
        return $r3;
    }

    public final javax.naming.NamingEnumeration listBindings(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0, $r8, $r9, $r17;
        java.lang.String r1, r4, $r10, $r23;
        org.apache.naming.resources.BaseDirContext$AliasResult r2;
        java.util.List r3, r12, $r15;
        java.util.Iterator r5, $r19;
        javax.naming.directory.DirContext r6;
        java.util.Map $r7;
        boolean $z0, $z1, $z3;
        javax.naming.NamingEnumeration $r11;
        java.lang.StringBuilder $r13, $r14;
        java.lang.Object $r16;
        org.apache.naming.NamingContextBindingsEnumeration $r18;
        javax.naming.NameNotFoundException $r20;
        org.apache.naming.StringManager $r21;
        java.lang.Object[] $r22;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $r7 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        $z0 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        r2 = specialinvoke r0.<org.apache.naming.resources.BaseDirContext: org.apache.naming.resources.BaseDirContext$AliasResult findAlias(java.lang.String)>(r1);
        $r8 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        if $r8 == null goto label0;

        $r9 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        $r10 = r2.<org.apache.naming.resources.BaseDirContext$AliasResult: java.lang.String aliasName>;
        $r11 = virtualinvoke $r9.<org.apache.naming.resources.BaseDirContext: javax.naming.NamingEnumeration listBindings(java.lang.String)>($r10);
        return $r11;

     label0:
        r12 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: java.util.List doListBindings(java.lang.String)>(r1);
        r3 = null;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("/META-INF/resources");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts>;
        r5 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();
        goto label4;

     label1:
        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (javax.naming.directory.DirContext) $r16;
        $z1 = r6 instanceof org.apache.naming.resources.BaseDirContext;
        if $z1 == 0 goto label2;

        $r17 = (org.apache.naming.resources.BaseDirContext) r6;
        r3 = virtualinvoke $r17.<org.apache.naming.resources.BaseDirContext: java.util.List doListBindings(java.lang.String)>(r4);

     label2:
        if r3 == null goto label4;

        if r12 != null goto label3;

        r12 = r3;
        goto label4;

     label3:
        interfaceinvoke r12.<java.util.List: boolean addAll(java.util.Collection)>(r3);

     label4:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label1;

        if r12 == null goto label5;

        $r18 = new org.apache.naming.NamingContextBindingsEnumeration;
        $r19 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();
        specialinvoke $r18.<org.apache.naming.NamingContextBindingsEnumeration: void <init>(java.util.Iterator,javax.naming.Context)>($r19, r0);
        return $r18;

     label5:
        $r20 = new javax.naming.NameNotFoundException;
        $r21 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r22 = newarray (java.lang.Object)[1];
        $r22[0] = r1;
        $r23 = virtualinvoke $r21.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.notFound", $r22);
        specialinvoke $r20.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r23);
        throw $r20;
    }

    public void destroySubcontext(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String $r2;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void destroySubcontext(java.lang.String)>($r2);
        return;
    }

    public abstract void destroySubcontext(java.lang.String) throws javax.naming.NamingException;

    public javax.naming.Context createSubcontext(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String $r2;
        javax.naming.Context $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r3 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.Context createSubcontext(java.lang.String)>($r2);
        return $r3;
    }

    public javax.naming.Context createSubcontext(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1;
        javax.naming.directory.DirContext $r2;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.directory.DirContext createSubcontext(java.lang.String,javax.naming.directory.Attributes)>(r1, null);
        return $r2;
    }

    public java.lang.Object lookupLink(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r3 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: java.lang.Object lookupLink(java.lang.String)>($r2);
        return $r3;
    }

    public abstract java.lang.Object lookupLink(java.lang.String) throws javax.naming.NamingException;

    public javax.naming.NameParser getNameParser(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        org.apache.naming.NameParserImpl $r2;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = new org.apache.naming.NameParserImpl;
        specialinvoke $r2.<org.apache.naming.NameParserImpl: void <init>()>();
        return $r2;
    }

    public javax.naming.NameParser getNameParser(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1;
        org.apache.naming.NameParserImpl $r2;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.naming.NameParserImpl;
        specialinvoke $r2.<org.apache.naming.NameParserImpl: void <init>()>();
        return $r2;
    }

    public javax.naming.Name composeName(javax.naming.Name, javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1, r2, r3, $r5;
        java.lang.Object $r4;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: javax.naming.Name;
        $r4 = interfaceinvoke r2.<javax.naming.Name: java.lang.Object clone()>();
        r3 = (javax.naming.Name) $r4;
        $r5 = interfaceinvoke r3.<javax.naming.Name: javax.naming.Name addAll(javax.naming.Name)>(r1);
        return $r5;
    }

    public java.lang.String composeName(java.lang.String, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1, r2, $r4, $r7;
        java.lang.StringBuilder $r3, $r5, $r6;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    public java.lang.Object addToEnvironment(java.lang.String, java.lang.Object) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1;
        java.lang.Object r2, $r4;
        java.util.Hashtable $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Hashtable env>;
        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return $r4;
    }

    public java.lang.Object removeFromEnvironment(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Hashtable env>;
        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);
        return $r3;
    }

    public java.util.Hashtable getEnvironment() throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.util.Hashtable $r1;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        $r1 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Hashtable env>;
        return $r1;
    }

    public void close() throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.util.Hashtable $r1;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        $r1 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Hashtable env>;
        virtualinvoke $r1.<java.util.Hashtable: void clear()>();
        return;
    }

    public abstract java.lang.String getNameInNamespace() throws javax.naming.NamingException;

    public javax.naming.directory.Attributes getAttributes(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String $r2;
        javax.naming.directory.Attributes $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r3 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.directory.Attributes getAttributes(java.lang.String)>($r2);
        return $r3;
    }

    public javax.naming.directory.Attributes getAttributes(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        java.lang.String r1;
        javax.naming.directory.Attributes $r2;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.directory.Attributes getAttributes(java.lang.String,java.lang.String[])>(r1, null);
        return $r2;
    }

    public javax.naming.directory.Attributes getAttributes(javax.naming.Name, java.lang.String[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String[] r2;
        java.lang.String $r3;
        javax.naming.directory.Attributes $r4;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.String[];
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r4 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.directory.Attributes getAttributes(java.lang.String,java.lang.String[])>($r3, r2);
        return $r4;
    }

    public final javax.naming.directory.Attributes getAttributes(java.lang.String, java.lang.String[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0, $r9, $r10, $r18;
        java.lang.String r1, r4, $r11, $r23;
        java.lang.String[] r2;
        org.apache.naming.resources.BaseDirContext$AliasResult r3;
        java.util.Iterator r5;
        javax.naming.directory.DirContext r6;
        javax.naming.NamingException r7, $r19;
        java.util.Map $r8;
        boolean $z0, $z1, $z2;
        javax.naming.directory.Attributes $r12, r13;
        java.lang.StringBuilder $r14, $r15;
        java.util.List $r16;
        java.lang.Object $r17;
        javax.naming.NameNotFoundException $r20;
        org.apache.naming.StringManager $r21;
        java.lang.Object[] $r22;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String[];
        $r8 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        $z0 = interfaceinvoke $r8.<java.util.Map: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        r3 = specialinvoke r0.<org.apache.naming.resources.BaseDirContext: org.apache.naming.resources.BaseDirContext$AliasResult findAlias(java.lang.String)>(r1);
        $r9 = r3.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        if $r9 == null goto label0;

        $r10 = r3.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        $r11 = r3.<org.apache.naming.resources.BaseDirContext$AliasResult: java.lang.String aliasName>;
        $r12 = virtualinvoke $r10.<org.apache.naming.resources.BaseDirContext: javax.naming.directory.Attributes getAttributes(java.lang.String,java.lang.String[])>($r11, r2);
        return $r12;

     label0:
        r13 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.directory.Attributes doGetAttributes(java.lang.String,java.lang.String[])>(r1, r2);
        if r13 == null goto label1;

        return r13;

     label1:
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("/META-INF/resources");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r4 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        $r16 = r0.<org.apache.naming.resources.BaseDirContext: java.util.List altDirContexts>;
        r5 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();
        goto label7;

     label2:
        $r17 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (javax.naming.directory.DirContext) $r17;
        $z1 = r6 instanceof org.apache.naming.resources.BaseDirContext;
        if $z1 == 0 goto label3;

        $r18 = (org.apache.naming.resources.BaseDirContext) r6;
        r13 = virtualinvoke $r18.<org.apache.naming.resources.BaseDirContext: javax.naming.directory.Attributes doGetAttributes(java.lang.String,java.lang.String[])>(r4, r2);
        goto label6;

     label3:
        r13 = interfaceinvoke r6.<javax.naming.directory.DirContext: javax.naming.directory.Attributes getAttributes(java.lang.String,java.lang.String[])>(r1, r2);

     label4:
        goto label6;

     label5:
        $r19 := @caughtexception;
        r7 = $r19;

     label6:
        if r13 == null goto label7;

        return r13;

     label7:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label2;

        $r20 = new javax.naming.NameNotFoundException;
        $r21 = <org.apache.naming.resources.BaseDirContext: org.apache.naming.StringManager sm>;
        $r22 = newarray (java.lang.Object)[1];
        $r22[0] = r1;
        $r23 = virtualinvoke $r21.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.notFound", $r22);
        specialinvoke $r20.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r23);
        throw $r20;

        catch javax.naming.NamingException from label3 to label4 with label5;
    }

    public void modifyAttributes(javax.naming.Name, int, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        int i0;
        javax.naming.directory.Attributes r2;
        java.lang.String $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        i0 := @parameter1: int;
        r2 := @parameter2: javax.naming.directory.Attributes;
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void modifyAttributes(java.lang.String,int,javax.naming.directory.Attributes)>($r3, i0, r2);
        return;
    }

    public abstract void modifyAttributes(java.lang.String, int, javax.naming.directory.Attributes) throws javax.naming.NamingException;

    public void modifyAttributes(javax.naming.Name, javax.naming.directory.ModificationItem[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        javax.naming.directory.ModificationItem[] r2;
        java.lang.String $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: javax.naming.directory.ModificationItem[];
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void modifyAttributes(java.lang.String,javax.naming.directory.ModificationItem[])>($r3, r2);
        return;
    }

    public abstract void modifyAttributes(java.lang.String, javax.naming.directory.ModificationItem[]) throws javax.naming.NamingException;

    public void bind(javax.naming.Name, java.lang.Object, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.Object r2;
        javax.naming.directory.Attributes r3;
        java.lang.String $r4;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: javax.naming.directory.Attributes;
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void bind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)>($r4, r2, r3);
        return;
    }

    public abstract void bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes) throws javax.naming.NamingException;

    public void rebind(javax.naming.Name, java.lang.Object, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.Object r2;
        javax.naming.directory.Attributes r3;
        java.lang.String $r4;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: javax.naming.directory.Attributes;
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: void rebind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)>($r4, r2, r3);
        return;
    }

    public abstract void rebind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes) throws javax.naming.NamingException;

    public javax.naming.directory.DirContext createSubcontext(javax.naming.Name, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        javax.naming.directory.Attributes r2;
        java.lang.String $r3;
        javax.naming.directory.DirContext $r4;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: javax.naming.directory.Attributes;
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r4 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.directory.DirContext createSubcontext(java.lang.String,javax.naming.directory.Attributes)>($r3, r2);
        return $r4;
    }

    public abstract javax.naming.directory.DirContext createSubcontext(java.lang.String, javax.naming.directory.Attributes) throws javax.naming.NamingException;

    public javax.naming.directory.DirContext getSchema(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String $r2;
        javax.naming.directory.DirContext $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r3 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.directory.DirContext getSchema(java.lang.String)>($r2);
        return $r3;
    }

    public abstract javax.naming.directory.DirContext getSchema(java.lang.String) throws javax.naming.NamingException;

    public javax.naming.directory.DirContext getSchemaClassDefinition(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String $r2;
        javax.naming.directory.DirContext $r3;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r3 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.directory.DirContext getSchemaClassDefinition(java.lang.String)>($r2);
        return $r3;
    }

    public abstract javax.naming.directory.DirContext getSchemaClassDefinition(java.lang.String) throws javax.naming.NamingException;

    public javax.naming.NamingEnumeration search(javax.naming.Name, javax.naming.directory.Attributes, java.lang.String[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        javax.naming.directory.Attributes r2;
        java.lang.String[] r3;
        java.lang.String $r4;
        javax.naming.NamingEnumeration $r5;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: javax.naming.directory.Attributes;
        r3 := @parameter2: java.lang.String[];
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r5 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.NamingEnumeration search(java.lang.String,javax.naming.directory.Attributes,java.lang.String[])>($r4, r2, r3);
        return $r5;
    }

    public abstract javax.naming.NamingEnumeration search(java.lang.String, javax.naming.directory.Attributes, java.lang.String[]) throws javax.naming.NamingException;

    public javax.naming.NamingEnumeration search(javax.naming.Name, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        javax.naming.directory.Attributes r2;
        java.lang.String $r3;
        javax.naming.NamingEnumeration $r4;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: javax.naming.directory.Attributes;
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r4 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.NamingEnumeration search(java.lang.String,javax.naming.directory.Attributes)>($r3, r2);
        return $r4;
    }

    public abstract javax.naming.NamingEnumeration search(java.lang.String, javax.naming.directory.Attributes) throws javax.naming.NamingException;

    public javax.naming.NamingEnumeration search(javax.naming.Name, java.lang.String, javax.naming.directory.SearchControls) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String r2, $r4;
        javax.naming.directory.SearchControls r3;
        javax.naming.NamingEnumeration $r5;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: javax.naming.directory.SearchControls;
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r5 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>($r4, r2, r3);
        return $r5;
    }

    public abstract javax.naming.NamingEnumeration search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls) throws javax.naming.NamingException;

    public javax.naming.NamingEnumeration search(javax.naming.Name, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls) throws javax.naming.NamingException
    {
        org.apache.naming.resources.BaseDirContext r0;
        javax.naming.Name r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        javax.naming.directory.SearchControls r4;
        javax.naming.NamingEnumeration $r6;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Object[];
        r4 := @parameter3: javax.naming.directory.SearchControls;
        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        $r6 = virtualinvoke r0.<org.apache.naming.resources.BaseDirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>($r5, r2, r3, r4);
        return $r6;
    }

    public abstract javax.naming.NamingEnumeration search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls) throws javax.naming.NamingException;

    protected abstract javax.naming.directory.Attributes doGetAttributes(java.lang.String, java.lang.String[]) throws javax.naming.NamingException;

    protected abstract java.lang.Object doLookup(java.lang.String);

    protected abstract java.util.List doListBindings(java.lang.String) throws javax.naming.NamingException;

    protected abstract java.lang.String doGetRealPath(java.lang.String);

    private org.apache.naming.resources.BaseDirContext$AliasResult findAlias(java.lang.String)
    {
        org.apache.naming.resources.BaseDirContext r0, $r9, $r12, $r13, $r14;
        java.lang.String r1, r4, $r15, $r16;
        org.apache.naming.resources.BaseDirContext$AliasResult $r2, r3;
        boolean z0;
        int i0, $i1, $i3, $i4, $i5;
        char $c2;
        java.lang.StringBuilder $r5, $r6;
        java.util.Map $r7, $r10;
        java.lang.Object $r8, $r11;

        r0 := @this: org.apache.naming.resources.BaseDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.naming.resources.BaseDirContext$AliasResult;
        specialinvoke $r2.<org.apache.naming.resources.BaseDirContext$AliasResult: void <init>(org.apache.naming.resources.BaseDirContext$AliasResult)>(null);
        r3 = $r2;
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i1 != 0 goto label0;

        r4 = "/";
        z0 = 1;
        goto label2;

     label0:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        if $c2 != 47 goto label1;

        r4 = r1;
        z0 = 0;
        goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("/");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        z0 = 1;

     label2:
        $r7 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        $r9 = (org.apache.naming.resources.BaseDirContext) $r8;
        r3.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext> = $r9;
        goto label5;

     label3:
        i0 = virtualinvoke r4.<java.lang.String: int lastIndexOf(int)>(47);
        if i0 >= 0 goto label4;

        goto label6;

     label4:
        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        $r10 = r0.<org.apache.naming.resources.BaseDirContext: java.util.Map aliases>;
        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        $r12 = (org.apache.naming.resources.BaseDirContext) $r11;
        r3.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext> = $r12;

     label5:
        $r13 = r3.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        if $r13 == null goto label3;

     label6:
        $r14 = r3.<org.apache.naming.resources.BaseDirContext$AliasResult: org.apache.naming.resources.BaseDirContext dirContext>;
        if $r14 == null goto label8;

        if z0 == 0 goto label7;

        $i3 = virtualinvoke r4.<java.lang.String: int length()>();
        $i4 = $i3 - 1;
        $r15 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i4);
        r3.<org.apache.naming.resources.BaseDirContext$AliasResult: java.lang.String aliasName> = $r15;
        goto label8;

     label7:
        $i5 = virtualinvoke r4.<java.lang.String: int length()>();
        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i5);
        r3.<org.apache.naming.resources.BaseDirContext$AliasResult: java.lang.String aliasName> = $r16;

     label8:
        return r3;
    }
}
