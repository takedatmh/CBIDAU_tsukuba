public class sun.security.x509.CRLExtensions extends java.lang.Object
{
    private java.util.Map map;
    private boolean unsupportedCritExt;
    private static final java.lang.Class[] PARAMS;

    public void <init>()
    {
        sun.security.x509.CRLExtensions r0;
        java.util.TreeMap $r1;
        java.util.Map $r2;

        r0 := @this: sun.security.x509.CRLExtensions;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.TreeMap;
        specialinvoke $r1.<java.util.TreeMap: void <init>()>();
        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);
        r0.<sun.security.x509.CRLExtensions: java.util.Map map> = $r2;
        r0.<sun.security.x509.CRLExtensions: boolean unsupportedCritExt> = 0;
        return;
    }

    public void <init>(sun.security.util.DerInputStream) throws java.security.cert.CRLException
    {
        sun.security.x509.CRLExtensions r0;
        sun.security.util.DerInputStream r1;
        java.util.TreeMap $r2;
        java.util.Map $r3;

        r0 := @this: sun.security.x509.CRLExtensions;
        r1 := @parameter0: sun.security.util.DerInputStream;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.TreeMap;
        specialinvoke $r2.<java.util.TreeMap: void <init>()>();
        $r3 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);
        r0.<sun.security.x509.CRLExtensions: java.util.Map map> = $r3;
        r0.<sun.security.x509.CRLExtensions: boolean unsupportedCritExt> = 0;
        specialinvoke r0.<sun.security.x509.CRLExtensions: void init(sun.security.util.DerInputStream)>(r1);
        return;
    }

    private void init(sun.security.util.DerInputStream) throws java.security.cert.CRLException
    {
        sun.security.x509.CRLExtensions r0;
        sun.security.util.DerInputStream r1, r2;
        byte b0, $b4;
        sun.security.util.DerValue r3, $r7;
        int i1, $i2, $i5;
        sun.security.x509.Extension r4, $r6;
        short $s3;
        sun.security.util.DerValue[] r5;
        java.io.IOException $r8, r9;
        java.security.cert.CRLException $r10;
        java.lang.StringBuilder $r11, $r12, $r14;
        java.lang.String $r13, $r15;

        r0 := @this: sun.security.x509.CRLExtensions;
        r1 := @parameter0: sun.security.util.DerInputStream;

     label0:
        r2 = r1;
        $i2 = virtualinvoke r1.<sun.security.util.DerInputStream: int peekByte()>();
        b0 = (byte) $i2;
        $s3 = b0 & 192;
        if $s3 != 128 goto label1;

        $b4 = b0 & 31;
        if $b4 != 0 goto label1;

        r3 = virtualinvoke r2.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        r2 = r3.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;

     label1:
        r5 = virtualinvoke r2.<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSequence(int)>(5);
        i1 = 0;

     label2:
        $i5 = lengthof r5;
        if i1 >= $i5 goto label3;

        $r6 = new sun.security.x509.Extension;
        $r7 = r5[i1];
        specialinvoke $r6.<sun.security.x509.Extension: void <init>(sun.security.util.DerValue)>($r7);
        r4 = $r6;
        specialinvoke r0.<sun.security.x509.CRLExtensions: void parseExtension(sun.security.x509.Extension)>(r4);
        i1 = i1 + 1;
        goto label2;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.security.cert.CRLException;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing error: ");
        $r13 = virtualinvoke r9.<java.io.IOException: java.lang.String toString()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<java.security.cert.CRLException: void <init>(java.lang.String)>($r15);
        throw $r10;

     label5:
        return;

        catch java.io.IOException from label0 to label3 with label4;
    }

    private void parseExtension(sun.security.x509.Extension) throws java.security.cert.CRLException
    {
        sun.security.x509.CRLExtensions r0;
        sun.security.x509.Extension r1, $r19;
        java.lang.Class r2;
        java.lang.reflect.Constructor r3;
        java.lang.Object[] r4, $r13;
        sun.security.x509.CertAttrSet r5;
        sun.security.util.ObjectIdentifier $r6, $r8;
        boolean $z0, $z1;
        java.util.Map $r7, $r17;
        java.lang.String $r9, $r18, $r26, $r30;
        java.lang.Object $r10, $r16, $r20;
        java.security.cert.CRLException $r11, $r21, $r24, $r29;
        java.lang.Class[] $r12;
        java.lang.Boolean $r14;
        byte[] $r15;
        java.lang.reflect.InvocationTargetException $r22, r23;
        java.lang.Throwable $r25;
        java.lang.Exception $r27, r28;

        r0 := @this: sun.security.x509.CRLExtensions;
        r1 := @parameter0: sun.security.x509.Extension;

     label0:
        $r6 = virtualinvoke r1.<sun.security.x509.Extension: sun.security.util.ObjectIdentifier getExtensionId()>();
        r2 = staticinvoke <sun.security.x509.OIDMap: java.lang.Class getClass(sun.security.util.ObjectIdentifier)>($r6);
        if r2 != null goto label3;

        $z0 = virtualinvoke r1.<sun.security.x509.Extension: boolean isCritical()>();
        if $z0 == 0 goto label1;

        r0.<sun.security.x509.CRLExtensions: boolean unsupportedCritExt> = 1;

     label1:
        $r7 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        $r8 = virtualinvoke r1.<sun.security.x509.Extension: sun.security.util.ObjectIdentifier getExtensionId()>();
        $r9 = virtualinvoke $r8.<sun.security.util.ObjectIdentifier: java.lang.String toString()>();
        $r10 = interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);
        if $r10 == null goto label2;

        $r11 = new java.security.cert.CRLException;
        specialinvoke $r11.<java.security.cert.CRLException: void <init>(java.lang.String)>("Duplicate extensions not allowed");
        throw $r11;

     label2:
        return;

     label3:
        $r12 = <sun.security.x509.CRLExtensions: java.lang.Class[] PARAMS>;
        r3 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r12);
        $r13 = newarray (java.lang.Object)[2];
        $z1 = virtualinvoke r1.<sun.security.x509.Extension: boolean isCritical()>();
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);
        $r13[0] = $r14;
        $r15 = virtualinvoke r1.<sun.security.x509.Extension: byte[] getExtensionValue()>();
        $r13[1] = $r15;
        r4 = $r13;
        $r16 = virtualinvoke r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r4);
        r5 = (sun.security.x509.CertAttrSet) $r16;
        $r17 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        $r18 = interfaceinvoke r5.<sun.security.x509.CertAttrSet: java.lang.String getName()>();
        $r19 = (sun.security.x509.Extension) r5;
        $r20 = interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);
        if $r20 == null goto label4;

        $r21 = new java.security.cert.CRLException;
        specialinvoke $r21.<java.security.cert.CRLException: void <init>(java.lang.String)>("Duplicate extensions not allowed");
        throw $r21;

     label4:
        goto label7;

     label5:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = new java.security.cert.CRLException;
        $r25 = virtualinvoke r23.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();
        $r26 = virtualinvoke $r25.<java.lang.Throwable: java.lang.String getMessage()>();
        specialinvoke $r24.<java.security.cert.CRLException: void <init>(java.lang.String)>($r26);
        throw $r24;

     label6:
        $r27 := @caughtexception;
        r28 = $r27;
        $r29 = new java.security.cert.CRLException;
        $r30 = virtualinvoke r28.<java.lang.Exception: java.lang.String toString()>();
        specialinvoke $r29.<java.security.cert.CRLException: void <init>(java.lang.String)>($r30);
        throw $r29;

     label7:
        return;

        catch java.lang.reflect.InvocationTargetException from label0 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label5;
        catch java.lang.Exception from label0 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public void encode(java.io.OutputStream, boolean) throws java.security.cert.CRLException
    {
        sun.security.x509.CRLExtensions r0;
        java.io.OutputStream r1;
        boolean z0, $z1, $z2;
        sun.security.util.DerOutputStream $r2, r3, r6, $r15, r16, $r17;
        java.util.Collection r4;
        java.lang.Object[] r5;
        int i0, $i1;
        java.util.Map $r7;
        java.lang.Object $r8, $r9, $r11, $r12;
        sun.security.x509.CertAttrSet $r10;
        sun.security.x509.Extension $r13;
        java.security.cert.CRLException $r14, $r21, $r29;
        byte $b2;
        byte[] $r18;
        java.io.IOException $r19, r20;
        java.lang.StringBuilder $r22, $r23, $r25, $r30, $r31, $r33;
        java.lang.String $r24, $r26, $r32, $r34;
        java.security.cert.CertificateException $r27, r28;

        r0 := @this: sun.security.x509.CRLExtensions;
        r1 := @parameter0: java.io.OutputStream;
        z0 := @parameter1: boolean;

     label0:
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        $r7 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        r4 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();
        r5 = interfaceinvoke r4.<java.util.Collection: java.lang.Object[] toArray()>();
        i0 = 0;

     label1:
        $i1 = lengthof r5;
        if i0 >= $i1 goto label5;

        $r8 = r5[i0];
        $z1 = $r8 instanceof sun.security.x509.CertAttrSet;
        if $z1 == 0 goto label2;

        $r9 = r5[i0];
        $r10 = (sun.security.x509.CertAttrSet) $r9;
        interfaceinvoke $r10.<sun.security.x509.CertAttrSet: void encode(java.io.OutputStream)>(r3);
        goto label4;

     label2:
        $r11 = r5[i0];
        $z2 = $r11 instanceof sun.security.x509.Extension;
        if $z2 == 0 goto label3;

        $r12 = r5[i0];
        $r13 = (sun.security.x509.Extension) $r12;
        virtualinvoke $r13.<sun.security.x509.Extension: void encode(sun.security.util.DerOutputStream)>(r3);
        goto label4;

     label3:
        $r14 = new java.security.cert.CRLException;
        specialinvoke $r14.<java.security.cert.CRLException: void <init>(java.lang.String)>("Illegal extension object");
        throw $r14;

     label4:
        i0 = i0 + 1;
        goto label1;

     label5:
        $r15 = new sun.security.util.DerOutputStream;
        specialinvoke $r15.<sun.security.util.DerOutputStream: void <init>()>();
        r16 = $r15;
        virtualinvoke r16.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r3);
        $r17 = new sun.security.util.DerOutputStream;
        specialinvoke $r17.<sun.security.util.DerOutputStream: void <init>()>();
        r6 = $r17;
        if z0 == 0 goto label6;

        $b2 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 0);
        virtualinvoke r6.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b2, r16);
        goto label7;

     label6:
        r6 = r16;

     label7:
        $r18 = virtualinvoke r6.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r18);

     label8:
        goto label11;

     label9:
        $r19 := @caughtexception;
        r20 = $r19;
        $r21 = new java.security.cert.CRLException;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding error: ");
        $r24 = virtualinvoke r20.<java.io.IOException: java.lang.String toString()>();
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r21.<java.security.cert.CRLException: void <init>(java.lang.String)>($r26);
        throw $r21;

     label10:
        $r27 := @caughtexception;
        r28 = $r27;
        $r29 = new java.security.cert.CRLException;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding error: ");
        $r32 = virtualinvoke r28.<java.security.cert.CertificateException: java.lang.String toString()>();
        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r29.<java.security.cert.CRLException: void <init>(java.lang.String)>($r34);
        throw $r29;

     label11:
        return;

        catch java.io.IOException from label0 to label8 with label9;
        catch java.security.cert.CertificateException from label0 to label8 with label10;
    }

    public sun.security.x509.Extension get(java.lang.String)
    {
        sun.security.x509.CRLExtensions r0;
        java.lang.String r1, r4, r5;
        sun.security.x509.X509AttributeName $r2, r3;
        int i0, $i1;
        boolean $z0;
        java.util.Map $r6;
        java.lang.Object $r7;
        sun.security.x509.Extension $r8;

        r0 := @this: sun.security.x509.CRLExtensions;
        r1 := @parameter0: java.lang.String;
        $r2 = new sun.security.x509.X509AttributeName;
        specialinvoke $r2.<sun.security.x509.X509AttributeName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        r4 = virtualinvoke r3.<sun.security.x509.X509AttributeName: java.lang.String getPrefix()>();
        $z0 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x509");
        if $z0 == 0 goto label0;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");
        $i1 = i0 + 1;
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);
        goto label1;

     label0:
        r5 = r1;

     label1:
        $r6 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
        $r8 = (sun.security.x509.Extension) $r7;
        return $r8;
    }

    public void set(java.lang.String, java.lang.Object)
    {
        sun.security.x509.CRLExtensions r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.util.Map $r3;
        sun.security.x509.Extension $r4;

        r0 := @this: sun.security.x509.CRLExtensions;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        $r4 = (sun.security.x509.Extension) r2;
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);
        return;
    }

    public void delete(java.lang.String)
    {
        sun.security.x509.CRLExtensions r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: sun.security.x509.CRLExtensions;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);
        return;
    }

    public java.util.Enumeration getElements()
    {
        sun.security.x509.CRLExtensions r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.Enumeration $r3;

        r0 := @this: sun.security.x509.CRLExtensions;
        $r1 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();
        $r3 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r2);
        return $r3;
    }

    public java.util.Collection getAllExtensions()
    {
        sun.security.x509.CRLExtensions r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: sun.security.x509.CRLExtensions;
        $r1 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();
        return $r2;
    }

    public boolean hasUnsupportedCriticalExtension()
    {
        sun.security.x509.CRLExtensions r0;
        boolean $z0;

        r0 := @this: sun.security.x509.CRLExtensions;
        $z0 = r0.<sun.security.x509.CRLExtensions: boolean unsupportedCritExt>;
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.x509.CRLExtensions r0, $r7;
        java.lang.Object r1, $r9, $r10, $r12, $r15;
        java.util.Collection r2;
        java.lang.Object[] r3;
        int i0, i1, $i2;
        java.lang.String r4;
        sun.security.x509.Extension r5, r6;
        boolean $z0, $z1, $z2;
        java.util.Map $r8, $r14;
        sun.security.x509.CertAttrSet $r11;
        sun.security.util.ObjectIdentifier $r13;

        r0 := @this: sun.security.x509.CRLExtensions;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.security.x509.CRLExtensions;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r7 = (sun.security.x509.CRLExtensions) r1;
        r2 = virtualinvoke $r7.<sun.security.x509.CRLExtensions: java.util.Collection getAllExtensions()>();
        r3 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray()>();
        i0 = lengthof r3;
        $r8 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        $i2 = interfaceinvoke $r8.<java.util.Map: int size()>();
        if i0 == $i2 goto label2;

        return 0;

     label2:
        r4 = null;
        i1 = 0;

     label3:
        if i1 >= i0 goto label8;

        $r9 = r3[i1];
        $z1 = $r9 instanceof sun.security.x509.CertAttrSet;
        if $z1 == 0 goto label4;

        $r10 = r3[i1];
        $r11 = (sun.security.x509.CertAttrSet) $r10;
        r4 = interfaceinvoke $r11.<sun.security.x509.CertAttrSet: java.lang.String getName()>();

     label4:
        $r12 = r3[i1];
        r5 = (sun.security.x509.Extension) $r12;
        if r4 != null goto label5;

        $r13 = virtualinvoke r5.<sun.security.x509.Extension: sun.security.util.ObjectIdentifier getExtensionId()>();
        r4 = virtualinvoke $r13.<sun.security.util.ObjectIdentifier: java.lang.String toString()>();

     label5:
        $r14 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        r6 = (sun.security.x509.Extension) $r15;
        if r6 != null goto label6;

        return 0;

     label6:
        $z2 = virtualinvoke r6.<sun.security.x509.Extension: boolean equals(java.lang.Object)>(r5);
        if $z2 != 0 goto label7;

        return 0;

     label7:
        i1 = i1 + 1;
        goto label3;

     label8:
        return 1;
    }

    public int hashCode()
    {
        sun.security.x509.CRLExtensions r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: sun.security.x509.CRLExtensions;
        $r1 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();
        return $i0;
    }

    public java.lang.String toString()
    {
        sun.security.x509.CRLExtensions r0;
        java.util.Map $r1;
        java.lang.String $r2;

        r0 := @this: sun.security.x509.CRLExtensions;
        $r1 = r0.<sun.security.x509.CRLExtensions: java.util.Map map>;
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();
        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;

        $r0 = newarray (java.lang.Class)[2];
        $r0[0] = class "java/lang/Boolean";
        $r0[1] = class "java/lang/Object";
        <sun.security.x509.CRLExtensions: java.lang.Class[] PARAMS> = $r0;
        return;
    }
}
