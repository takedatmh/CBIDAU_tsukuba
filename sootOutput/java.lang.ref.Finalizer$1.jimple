final class java.lang.ref.Finalizer$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.Runnable val$proc;

    void <init>(java.lang.Runnable)
    {
        java.lang.ref.Finalizer$1 r0;
        java.lang.Runnable r1;

        r0 := @this: java.lang.ref.Finalizer$1;
        r1 := @parameter0: java.lang.Runnable;
        r0.<java.lang.ref.Finalizer$1: java.lang.Runnable val$proc> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run()
    {
        java.lang.ref.Finalizer$1 r0;
        java.lang.Thread $r1, $r5, r7;
        java.lang.ThreadGroup r2, r3;
        java.lang.InterruptedException r4, $r8;
        java.lang.Runnable $r6;

        r0 := @this: java.lang.ref.Finalizer$1;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();
        r3 = r2;

     label0:
        if r3 == null goto label1;

        r2 = r3;
        r3 = virtualinvoke r2.<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>();
        goto label0;

     label1:
        $r5 = new java.lang.Thread;
        $r6 = r0.<java.lang.ref.Finalizer$1: java.lang.Runnable val$proc>;
        specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>(r2, $r6, "Secondary finalizer");
        r7 = $r5;
        virtualinvoke r7.<java.lang.Thread: void start()>();

     label2:
        virtualinvoke r7.<java.lang.Thread: void join()>();

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        r4 = $r8;

     label5:
        return null;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public volatile java.lang.Object run()
    {
        java.lang.ref.Finalizer$1 r0;
        java.lang.Void $r1;

        r0 := @this: java.lang.ref.Finalizer$1;
        $r1 = virtualinvoke r0.<java.lang.ref.Finalizer$1: java.lang.Void run()>();
        return $r1;
    }
}
