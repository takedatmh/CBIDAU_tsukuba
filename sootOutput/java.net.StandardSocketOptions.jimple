public final class java.net.StandardSocketOptions extends java.lang.Object
{
    public static final java.net.SocketOption SO_BROADCAST;
    public static final java.net.SocketOption SO_KEEPALIVE;
    public static final java.net.SocketOption SO_SNDBUF;
    public static final java.net.SocketOption SO_RCVBUF;
    public static final java.net.SocketOption SO_REUSEADDR;
    public static final java.net.SocketOption SO_LINGER;
    public static final java.net.SocketOption IP_TOS;
    public static final java.net.SocketOption IP_MULTICAST_IF;
    public static final java.net.SocketOption IP_MULTICAST_TTL;
    public static final java.net.SocketOption IP_MULTICAST_LOOP;
    public static final java.net.SocketOption TCP_NODELAY;

    private void <init>()
    {
        java.net.StandardSocketOptions r0;

        r0 := @this: java.net.StandardSocketOptions;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static void <clinit>()
    {
        java.net.StandardSocketOptions$StdSocketOption $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r0.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("SO_BROADCAST", class "java/lang/Boolean");
        <java.net.StandardSocketOptions: java.net.SocketOption SO_BROADCAST> = $r0;
        $r1 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r1.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("SO_KEEPALIVE", class "java/lang/Boolean");
        <java.net.StandardSocketOptions: java.net.SocketOption SO_KEEPALIVE> = $r1;
        $r2 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r2.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("SO_SNDBUF", class "java/lang/Integer");
        <java.net.StandardSocketOptions: java.net.SocketOption SO_SNDBUF> = $r2;
        $r3 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r3.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("SO_RCVBUF", class "java/lang/Integer");
        <java.net.StandardSocketOptions: java.net.SocketOption SO_RCVBUF> = $r3;
        $r4 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r4.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("SO_REUSEADDR", class "java/lang/Boolean");
        <java.net.StandardSocketOptions: java.net.SocketOption SO_REUSEADDR> = $r4;
        $r5 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r5.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("SO_LINGER", class "java/lang/Integer");
        <java.net.StandardSocketOptions: java.net.SocketOption SO_LINGER> = $r5;
        $r6 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r6.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("IP_TOS", class "java/lang/Integer");
        <java.net.StandardSocketOptions: java.net.SocketOption IP_TOS> = $r6;
        $r7 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r7.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("IP_MULTICAST_IF", class "java/net/NetworkInterface");
        <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_IF> = $r7;
        $r8 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r8.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("IP_MULTICAST_TTL", class "java/lang/Integer");
        <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_TTL> = $r8;
        $r9 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r9.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("IP_MULTICAST_LOOP", class "java/lang/Boolean");
        <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_LOOP> = $r9;
        $r10 = new java.net.StandardSocketOptions$StdSocketOption;
        specialinvoke $r10.<java.net.StandardSocketOptions$StdSocketOption: void <init>(java.lang.String,java.lang.Class)>("TCP_NODELAY", class "java/lang/Boolean");
        <java.net.StandardSocketOptions: java.net.SocketOption TCP_NODELAY> = $r10;
        return;
    }
}
