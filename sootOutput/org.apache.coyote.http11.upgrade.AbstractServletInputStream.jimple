public abstract class org.apache.coyote.http11.upgrade.AbstractServletInputStream extends javax.servlet.ServletInputStream
{
    protected static final org.apache.tomcat.util.res.StringManager sm;
    private volatile boolean closeRequired;
    private volatile java.lang.Boolean ready;
    private volatile org.apache.coyote.http11.upgrade.servlet31.ReadListener listener;
    private volatile java.lang.ClassLoader applicationLoader;

    static void <clinit>()
    {
        org.apache.tomcat.util.res.StringManager $r0;

        $r0 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.coyote.http11.upgrade");
        <org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.tomcat.util.res.StringManager sm> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        java.lang.Boolean $r1;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        specialinvoke r0.<javax.servlet.ServletInputStream: void <init>()>();
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: boolean closeRequired> = 0;
        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready> = $r1;
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener> = null;
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.ClassLoader applicationLoader> = null;
        return;
    }

    public final boolean isFinished()
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        org.apache.tomcat.util.res.StringManager $r1;
        org.apache.coyote.http11.upgrade.servlet31.ReadListener $r2;
        java.lang.IllegalStateException $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        $r2 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        if $r2 != null goto label0;

        $r3 = new java.lang.IllegalStateException;
        $r1 = <org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("upgrade.sis.isFinished.ise");
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        return 0;
    }

    public final boolean isReady()
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        org.apache.tomcat.util.res.StringManager $r1;
        java.io.IOException r2, $r9;
        org.apache.coyote.http11.upgrade.servlet31.ReadListener $r3;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        java.lang.Boolean $r6, $r7, $r8, $r10;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        $r3 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        if $r3 != null goto label0;

        $r4 = new java.lang.IllegalStateException;
        $r1 = <org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("upgrade.sis.isReady.ise");
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);
        throw $r4;

     label0:
        $r6 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready>;
        if $r6 == null goto label1;

        $r7 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready>;
        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();
        return $z0;

     label1:
        $z1 = virtualinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: boolean doIsReady()>();
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready> = $r8;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;
        r2 = $r9;
        virtualinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: void onError(java.lang.Throwable)>(r2);

     label4:
        $r10 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready>;
        $z2 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();
        return $z2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final void setReadListener(org.apache.coyote.http11.upgrade.servlet31.ReadListener)
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        org.apache.coyote.http11.upgrade.servlet31.ReadListener r1, $r5;
        org.apache.tomcat.util.res.StringManager $r2, $r7;
        java.lang.IllegalArgumentException $r3, $r6;
        java.lang.String $r4, $r8;
        java.lang.Thread $r9;
        java.lang.ClassLoader $r10;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        r1 := @parameter0: org.apache.coyote.http11.upgrade.servlet31.ReadListener;
        if r1 != null goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("upgrade.sis.readListener.null");
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        $r5 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        if $r5 == null goto label1;

        $r6 = new java.lang.IllegalArgumentException;
        $r7 = <org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = virtualinvoke $r7.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("upgrade.sis.readListener.set");
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);
        throw $r6;

     label1:
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener> = r1;
        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r10 = virtualinvoke $r9.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.ClassLoader applicationLoader> = $r10;
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready> = null;
        return;
    }

    public final int read() throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        int $i0;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        specialinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: void preReadChecks()>();
        $i0 = specialinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: int readInternal()>();
        return $i0;
    }

    public final int readLine(byte[], int, int) throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        byte[] r1;
        int i0, i1, i2, $i3, i4, $i6, $i7;
        byte $b5;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: void preReadChecks()>();
        if i1 > 0 goto label0;

        return 0;

     label0:
        i2 = 0;
        goto label2;

     label1:
        $i3 = i0;
        i0 = i0 + 1;
        $b5 = (byte) i4;
        r1[$i3] = $b5;
        i2 = i2 + 1;
        if i4 == 10 goto label3;

        if i2 != i1 goto label2;

        goto label3;

     label2:
        $i6 = specialinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: int readInternal()>();
        i4 = $i6;
        if $i6 != -1 goto label1;

     label3:
        if i2 <= 0 goto label4;

        $i7 = i2;
        goto label5;

     label4:
        $i7 = -1;

     label5:
        return $i7;
    }

    public final int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        byte[] r1;
        int i0, i1, $i2;
        java.io.IOException r2, $r5;
        org.apache.coyote.http11.upgrade.servlet31.ReadListener $r4;
        boolean $z0;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: void preReadChecks()>();

     label0:
        $r4 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        if $r4 != null goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i2 = virtualinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: int doRead(boolean,byte[],int,int)>($z0, r1, i0, i1);

     label3:
        return $i2;

     label4:
        $r5 := @caughtexception;
        r2 = $r5;
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: boolean closeRequired> = 1;
        throw r2;

        catch java.io.IOException from label0 to label3 with label4;
    }

    public void close() throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: boolean closeRequired> = 1;
        virtualinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: void doClose()>();
        return;
    }

    private void preReadChecks()
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        org.apache.tomcat.util.res.StringManager $r1;
        org.apache.coyote.http11.upgrade.servlet31.ReadListener $r2;
        java.lang.Boolean $r3, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        $r2 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        if $r2 == null goto label1;

        $r3 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready>;
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready>;
        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();
        if $z0 != 0 goto label1;

     label0:
        $r5 = new java.lang.IllegalStateException;
        $r1 = <org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("upgrade.sis.read.ise");
        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);
        throw $r5;

     label1:
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready> = null;
        return;
    }

    private int readInternal() throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        byte[] r1;
        int i0;
        java.io.IOException r2, $r5;
        org.apache.coyote.http11.upgrade.servlet31.ReadListener $r4;
        boolean $z0;
        byte $b1;
        short $s2;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        r1 = newarray (byte)[1];

     label0:
        $r4 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        if $r4 != null goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        i0 = virtualinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: int doRead(boolean,byte[],int,int)>($z0, r1, 0, 1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;
        r2 = $r5;
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: boolean closeRequired> = 1;
        throw r2;

     label5:
        if i0 != 0 goto label6;

        return -1;

     label6:
        if i0 != -1 goto label7;

        return -1;

     label7:
        $b1 = r1[0];
        $s2 = $b1 & 255;
        return $s2;

        catch java.io.IOException from label0 to label3 with label4;
    }

    protected final void onAllDataRead() throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        java.lang.Thread r1;
        java.lang.ClassLoader r2, $r5;
        java.lang.Throwable r3, $r7;
        org.apache.coyote.http11.upgrade.servlet31.ReadListener $r4, $r6;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        $r4 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        if $r4 != null goto label0;

        return;

     label0:
        r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r2 = virtualinvoke r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label1:
        $r5 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.ClassLoader applicationLoader>;
        virtualinvoke r1.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r5);
        $r6 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        interfaceinvoke $r6.<org.apache.coyote.http11.upgrade.servlet31.ReadListener: void onAllDataRead()>();
        goto label3;

     label2:
        $r7 := @caughtexception;
        r3 = $r7;
        virtualinvoke r1.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r2);
        throw r3;

     label3:
        virtualinvoke r1.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r2);
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    protected final void onDataAvailable() throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        java.lang.Boolean $r1;
        java.lang.Thread r2;
        java.lang.ClassLoader r3, $r6;
        java.lang.Throwable r4, $r8;
        org.apache.coyote.http11.upgrade.servlet31.ReadListener $r5, $r7;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        $r5 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        if $r5 != null goto label0;

        return;

     label0:
        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready> = $r1;
        r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r3 = virtualinvoke r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label1:
        $r6 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.ClassLoader applicationLoader>;
        virtualinvoke r2.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r6);
        $r7 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        interfaceinvoke $r7.<org.apache.coyote.http11.upgrade.servlet31.ReadListener: void onDataAvailable()>();
        goto label3;

     label2:
        $r8 := @caughtexception;
        r4 = $r8;
        virtualinvoke r2.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r3);
        throw r4;

     label3:
        virtualinvoke r2.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r3);
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    protected final void onError(java.lang.Throwable)
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        java.lang.Throwable r1, r4, $r8;
        java.lang.Thread r2;
        java.lang.ClassLoader r3, $r6;
        org.apache.coyote.http11.upgrade.servlet31.ReadListener $r5, $r7;
        java.lang.Boolean $r9;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        r1 := @parameter0: java.lang.Throwable;
        $r5 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        if $r5 != null goto label0;

        return;

     label0:
        r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r3 = virtualinvoke r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label1:
        $r6 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.ClassLoader applicationLoader>;
        virtualinvoke r2.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r6);
        $r7 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: org.apache.coyote.http11.upgrade.servlet31.ReadListener listener>;
        interfaceinvoke $r7.<org.apache.coyote.http11.upgrade.servlet31.ReadListener: void onError(java.lang.Throwable)>(r1);
        goto label3;

     label2:
        $r8 := @caughtexception;
        r4 = $r8;
        virtualinvoke r2.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r3);
        throw r4;

     label3:
        virtualinvoke r2.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r3);
        $r9 = <java.lang.Boolean: java.lang.Boolean FALSE>;
        r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: java.lang.Boolean ready> = $r9;
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    protected final boolean isCloseRequired()
    {
        org.apache.coyote.http11.upgrade.AbstractServletInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.coyote.http11.upgrade.AbstractServletInputStream;
        $z0 = r0.<org.apache.coyote.http11.upgrade.AbstractServletInputStream: boolean closeRequired>;
        return $z0;
    }

    protected abstract boolean doIsReady() throws java.io.IOException;

    protected abstract int doRead(boolean, byte[], int, int) throws java.io.IOException;

    protected abstract void doClose() throws java.io.IOException;
}
