public class java.security.cert.PolicyQualifierInfo extends java.lang.Object
{
    private byte[] mEncoded;
    private java.lang.String mId;
    private byte[] mData;
    private java.lang.String pqiString;

    public void <init>(byte[]) throws java.io.IOException
    {
        java.security.cert.PolicyQualifierInfo r0;
        byte[] r1, r3, $r5, $r7, $r14, $r15;
        sun.security.util.DerValue r2, $r6, $r10;
        java.lang.Object $r4;
        byte $b0;
        java.io.IOException $r8;
        sun.security.util.DerInputStream $r9, $r13;
        sun.security.util.ObjectIdentifier $r11;
        java.lang.String $r12;
        int $i1, $i2;

        r0 := @this: java.security.cert.PolicyQualifierInfo;
        r1 := @parameter0: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();
        $r5 = (byte[]) $r4;
        r0.<java.security.cert.PolicyQualifierInfo: byte[] mEncoded> = $r5;
        $r6 = new sun.security.util.DerValue;
        $r7 = r0.<java.security.cert.PolicyQualifierInfo: byte[] mEncoded>;
        specialinvoke $r6.<sun.security.util.DerValue: void <init>(byte[])>($r7);
        r2 = $r6;
        $b0 = r2.<sun.security.util.DerValue: byte tag>;
        if $b0 == 48 goto label0;

        $r8 = new java.io.IOException;
        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Invalid encoding for PolicyQualifierInfo");
        throw $r8;

     label0:
        $r9 = r2.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $r10 = virtualinvoke $r9.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r11 = virtualinvoke $r10.<sun.security.util.DerValue: sun.security.util.ObjectIdentifier getOID()>();
        $r12 = virtualinvoke $r11.<sun.security.util.ObjectIdentifier: java.lang.String toString()>();
        r0.<java.security.cert.PolicyQualifierInfo: java.lang.String mId> = $r12;
        $r13 = r2.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        r3 = virtualinvoke $r13.<sun.security.util.DerInputStream: byte[] toByteArray()>();
        if r3 != null goto label1;

        r0.<java.security.cert.PolicyQualifierInfo: byte[] mData> = null;
        goto label2;

     label1:
        $i1 = lengthof r3;
        $r14 = newarray (byte)[$i1];
        r0.<java.security.cert.PolicyQualifierInfo: byte[] mData> = $r14;
        $r15 = r0.<java.security.cert.PolicyQualifierInfo: byte[] mData>;
        $i2 = lengthof r3;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r15, 0, $i2);

     label2:
        return;
    }

    public final java.lang.String getPolicyQualifierId()
    {
        java.security.cert.PolicyQualifierInfo r0;
        java.lang.String $r1;

        r0 := @this: java.security.cert.PolicyQualifierInfo;
        $r1 = r0.<java.security.cert.PolicyQualifierInfo: java.lang.String mId>;
        return $r1;
    }

    public final byte[] getEncoded()
    {
        java.security.cert.PolicyQualifierInfo r0;
        byte[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.security.cert.PolicyQualifierInfo;
        $r1 = r0.<java.security.cert.PolicyQualifierInfo: byte[] mEncoded>;
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (byte[]) $r2;
        return $r3;
    }

    public final byte[] getPolicyQualifier()
    {
        java.security.cert.PolicyQualifierInfo r0;
        byte[] $r1, $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: java.security.cert.PolicyQualifierInfo;
        $r1 = r0.<java.security.cert.PolicyQualifierInfo: byte[] mData>;
        if $r1 != null goto label0;

        $r2 = null;
        goto label1;

     label0:
        $r3 = r0.<java.security.cert.PolicyQualifierInfo: byte[] mData>;
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (byte[]) $r4;

     label1:
        return $r2;
    }

    public java.lang.String toString()
    {
        java.security.cert.PolicyQualifierInfo r0;
        sun.misc.HexDumpEncoder r1, $r5;
        java.lang.StringBuffer r2, $r6;
        java.lang.String $r3, $r4, $r10, $r13, $r19, $r23, $r26, $r27;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r16, $r17, $r21, $r22;
        byte[] $r18, $r20;

        r0 := @this: java.security.cert.PolicyQualifierInfo;
        $r3 = r0.<java.security.cert.PolicyQualifierInfo: java.lang.String pqiString>;
        if $r3 == null goto label0;

        $r4 = r0.<java.security.cert.PolicyQualifierInfo: java.lang.String pqiString>;
        return $r4;

     label0:
        $r5 = new sun.misc.HexDumpEncoder;
        specialinvoke $r5.<sun.misc.HexDumpEncoder: void <init>()>();
        r1 = $r5;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        r2 = $r6;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PolicyQualifierInfo: [\n");
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  qualifierID: ");
        $r10 = r0.<java.security.cert.PolicyQualifierInfo: java.lang.String mId>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  qualifier: ");
        $r18 = r0.<java.security.cert.PolicyQualifierInfo: byte[] mData>;
        if $r18 != null goto label1;

        $r19 = "null";
        goto label2;

     label1:
        $r20 = r0.<java.security.cert.PolicyQualifierInfo: byte[] mData>;
        $r19 = virtualinvoke r1.<sun.misc.HexDumpEncoder: java.lang.String encodeBuffer(byte[])>($r20);

     label2:
        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r26 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        r0.<java.security.cert.PolicyQualifierInfo: java.lang.String pqiString> = $r26;
        $r27 = r0.<java.security.cert.PolicyQualifierInfo: java.lang.String pqiString>;
        return $r27;
    }
}
