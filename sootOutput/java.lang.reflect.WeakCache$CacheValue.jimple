final class java.lang.reflect.WeakCache$CacheValue extends java.lang.ref.WeakReference implements java.lang.reflect.WeakCache$Value
{
    private final int hash;

    void <init>(java.lang.Object)
    {
        java.lang.reflect.WeakCache$CacheValue r0;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.lang.reflect.WeakCache$CacheValue;
        r1 := @parameter0: java.lang.Object;
        specialinvoke r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);
        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);
        r0.<java.lang.reflect.WeakCache$CacheValue: int hash> = $i0;
        return;
    }

    public int hashCode()
    {
        java.lang.reflect.WeakCache$CacheValue r0;
        int $i0;

        r0 := @this: java.lang.reflect.WeakCache$CacheValue;
        $i0 = r0.<java.lang.reflect.WeakCache$CacheValue: int hash>;
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.reflect.WeakCache$CacheValue r0;
        java.lang.Object r1, r2, $r3, $r5;
        boolean $z0, $z1;
        java.lang.reflect.WeakCache$Value $r4;

        r0 := @this: java.lang.reflect.WeakCache$CacheValue;
        r1 := @parameter0: java.lang.Object;
        if r1 == r0 goto label0;

        $z0 = r1 instanceof java.lang.reflect.WeakCache$Value;
        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<java.lang.reflect.WeakCache$CacheValue: java.lang.Object get()>();
        r2 = $r3;
        if $r3 == null goto label1;

        $r4 = (java.lang.reflect.WeakCache$Value) r1;
        $r5 = interfaceinvoke $r4.<java.lang.reflect.WeakCache$Value: java.lang.Object get()>();
        if r2 != $r5 goto label1;

     label0:
        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
