class java.util.Scanner$1 extends sun.misc.LRUCache
{
    final java.util.Scanner this$0;

    void <init>(java.util.Scanner, int)
    {
        java.util.Scanner$1 r0;
        java.util.Scanner r1;
        int i0;

        r0 := @this: java.util.Scanner$1;
        r1 := @parameter0: java.util.Scanner;
        i0 := @parameter1: int;
        r0.<java.util.Scanner$1: java.util.Scanner this$0> = r1;
        specialinvoke r0.<sun.misc.LRUCache: void <init>(int)>(i0);
        return;
    }

    protected java.util.regex.Pattern create(java.lang.String)
    {
        java.util.Scanner$1 r0;
        java.lang.String r1;
        java.util.regex.Pattern $r2;

        r0 := @this: java.util.Scanner$1;
        r1 := @parameter0: java.lang.String;
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        return $r2;
    }

    protected boolean hasName(java.util.regex.Pattern, java.lang.String)
    {
        java.util.Scanner$1 r0;
        java.util.regex.Pattern r1;
        java.lang.String r2, $r3;
        boolean $z0;

        r0 := @this: java.util.Scanner$1;
        r1 := @parameter0: java.util.regex.Pattern;
        r2 := @parameter1: java.lang.String;
        $r3 = virtualinvoke r1.<java.util.regex.Pattern: java.lang.String pattern()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        return $z0;
    }

    protected volatile boolean hasName(java.lang.Object, java.lang.Object)
    {
        java.util.Scanner$1 r0;
        java.lang.Object r1, r2;
        java.util.regex.Pattern $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: java.util.Scanner$1;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (java.util.regex.Pattern) r1;
        $r4 = (java.lang.String) r2;
        $z0 = virtualinvoke r0.<java.util.Scanner$1: boolean hasName(java.util.regex.Pattern,java.lang.String)>($r3, $r4);
        return $z0;
    }

    protected volatile java.lang.Object create(java.lang.Object)
    {
        java.util.Scanner$1 r0;
        java.lang.Object r1;
        java.lang.String $r2;
        java.util.regex.Pattern $r3;

        r0 := @this: java.util.Scanner$1;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.lang.String) r1;
        $r3 = virtualinvoke r0.<java.util.Scanner$1: java.util.regex.Pattern create(java.lang.String)>($r2);
        return $r3;
    }
}
