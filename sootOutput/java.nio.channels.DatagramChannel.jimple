public abstract class java.nio.channels.DatagramChannel extends java.nio.channels.spi.AbstractSelectableChannel implements java.nio.channels.ByteChannel, java.nio.channels.ScatteringByteChannel, java.nio.channels.GatheringByteChannel, java.nio.channels.MulticastChannel
{

    protected void <init>(java.nio.channels.spi.SelectorProvider)
    {
        java.nio.channels.DatagramChannel r0;
        java.nio.channels.spi.SelectorProvider r1;

        r0 := @this: java.nio.channels.DatagramChannel;
        r1 := @parameter0: java.nio.channels.spi.SelectorProvider;
        specialinvoke r0.<java.nio.channels.spi.AbstractSelectableChannel: void <init>(java.nio.channels.spi.SelectorProvider)>(r1);
        return;
    }

    public static java.nio.channels.DatagramChannel open() throws java.io.IOException
    {
        java.nio.channels.spi.SelectorProvider $r0;
        java.nio.channels.DatagramChannel $r1;

        $r0 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>();
        $r1 = virtualinvoke $r0.<java.nio.channels.spi.SelectorProvider: java.nio.channels.DatagramChannel openDatagramChannel()>();
        return $r1;
    }

    public static java.nio.channels.DatagramChannel open(java.net.ProtocolFamily) throws java.io.IOException
    {
        java.net.ProtocolFamily r0;
        java.nio.channels.spi.SelectorProvider $r1;
        java.nio.channels.DatagramChannel $r2;

        r0 := @parameter0: java.net.ProtocolFamily;
        $r1 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>();
        $r2 = virtualinvoke $r1.<java.nio.channels.spi.SelectorProvider: java.nio.channels.DatagramChannel openDatagramChannel(java.net.ProtocolFamily)>(r0);
        return $r2;
    }

    public final int validOps()
    {
        java.nio.channels.DatagramChannel r0;

        r0 := @this: java.nio.channels.DatagramChannel;
        return 5;
    }

    public abstract java.nio.channels.DatagramChannel bind(java.net.SocketAddress) throws java.io.IOException;

    public abstract java.nio.channels.DatagramChannel setOption(java.net.SocketOption, java.lang.Object) throws java.io.IOException;

    public abstract java.net.DatagramSocket socket();

    public abstract boolean isConnected();

    public abstract java.nio.channels.DatagramChannel connect(java.net.SocketAddress) throws java.io.IOException;

    public abstract java.nio.channels.DatagramChannel disconnect() throws java.io.IOException;

    public abstract java.net.SocketAddress getRemoteAddress() throws java.io.IOException;

    public abstract java.net.SocketAddress receive(java.nio.ByteBuffer) throws java.io.IOException;

    public abstract int send(java.nio.ByteBuffer, java.net.SocketAddress) throws java.io.IOException;

    public abstract int read(java.nio.ByteBuffer) throws java.io.IOException;

    public abstract long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;

    public final long read(java.nio.ByteBuffer[]) throws java.io.IOException
    {
        java.nio.channels.DatagramChannel r0;
        java.nio.ByteBuffer[] r1;
        int $i0;
        long $l1;

        r0 := @this: java.nio.channels.DatagramChannel;
        r1 := @parameter0: java.nio.ByteBuffer[];
        $i0 = lengthof r1;
        $l1 = virtualinvoke r0.<java.nio.channels.DatagramChannel: long read(java.nio.ByteBuffer[],int,int)>(r1, 0, $i0);
        return $l1;
    }

    public abstract int write(java.nio.ByteBuffer) throws java.io.IOException;

    public abstract long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;

    public final long write(java.nio.ByteBuffer[]) throws java.io.IOException
    {
        java.nio.channels.DatagramChannel r0;
        java.nio.ByteBuffer[] r1;
        int $i0;
        long $l1;

        r0 := @this: java.nio.channels.DatagramChannel;
        r1 := @parameter0: java.nio.ByteBuffer[];
        $i0 = lengthof r1;
        $l1 = virtualinvoke r0.<java.nio.channels.DatagramChannel: long write(java.nio.ByteBuffer[],int,int)>(r1, 0, $i0);
        return $l1;
    }

    public volatile java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) throws java.io.IOException
    {
        java.nio.channels.DatagramChannel r0, $r3;
        java.net.SocketOption r1;
        java.lang.Object r2;

        r0 := @this: java.nio.channels.DatagramChannel;
        r1 := @parameter0: java.net.SocketOption;
        r2 := @parameter1: java.lang.Object;
        $r3 = virtualinvoke r0.<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>(r1, r2);
        return $r3;
    }

    public volatile java.nio.channels.NetworkChannel bind(java.net.SocketAddress) throws java.io.IOException
    {
        java.nio.channels.DatagramChannel r0, $r2;
        java.net.SocketAddress r1;

        r0 := @this: java.nio.channels.DatagramChannel;
        r1 := @parameter0: java.net.SocketAddress;
        $r2 = virtualinvoke r0.<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>(r1);
        return $r2;
    }
}
