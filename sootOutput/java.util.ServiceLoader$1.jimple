class java.util.ServiceLoader$1 extends java.lang.Object implements java.util.Iterator
{
    java.util.Iterator knownProviders;
    final java.util.ServiceLoader this$0;

    void <init>(java.util.ServiceLoader)
    {
        java.util.ServiceLoader$1 r0;
        java.util.ServiceLoader r1, $r2;
        java.util.LinkedHashMap $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;

        r0 := @this: java.util.ServiceLoader$1;
        r1 := @parameter0: java.util.ServiceLoader;
        r0.<java.util.ServiceLoader$1: java.util.ServiceLoader this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = r0.<java.util.ServiceLoader$1: java.util.ServiceLoader this$0>;
        $r3 = staticinvoke <java.util.ServiceLoader: java.util.LinkedHashMap access$400(java.util.ServiceLoader)>($r2);
        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.util.Set entrySet()>();
        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();
        r0.<java.util.ServiceLoader$1: java.util.Iterator knownProviders> = $r5;
        return;
    }

    public boolean hasNext()
    {
        java.util.ServiceLoader$1 r0;
        java.util.Iterator $r1;
        boolean $z0, $z1;
        java.util.ServiceLoader $r2;
        java.util.ServiceLoader$LazyIterator $r3;

        r0 := @this: java.util.ServiceLoader$1;
        $r1 = r0.<java.util.ServiceLoader$1: java.util.Iterator knownProviders>;
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $r2 = r0.<java.util.ServiceLoader$1: java.util.ServiceLoader this$0>;
        $r3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader$LazyIterator access$500(java.util.ServiceLoader)>($r2);
        $z1 = virtualinvoke $r3.<java.util.ServiceLoader$LazyIterator: boolean hasNext()>();
        return $z1;
    }

    public java.lang.Object next()
    {
        java.util.ServiceLoader$1 r0;
        java.util.Iterator $r1, $r2;
        boolean $z0;
        java.lang.Object $r3, $r5, $r8;
        java.util.Map$Entry $r4;
        java.util.ServiceLoader $r6;
        java.util.ServiceLoader$LazyIterator $r7;

        r0 := @this: java.util.ServiceLoader$1;
        $r1 = r0.<java.util.ServiceLoader$1: java.util.Iterator knownProviders>;
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label0;

        $r2 = r0.<java.util.ServiceLoader$1: java.util.Iterator knownProviders>;
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();
        $r4 = (java.util.Map$Entry) $r3;
        $r5 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        return $r5;

     label0:
        $r6 = r0.<java.util.ServiceLoader$1: java.util.ServiceLoader this$0>;
        $r7 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader$LazyIterator access$500(java.util.ServiceLoader)>($r6);
        $r8 = virtualinvoke $r7.<java.util.ServiceLoader$LazyIterator: java.lang.Object next()>();
        return $r8;
    }

    public void remove()
    {
        java.util.ServiceLoader$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.ServiceLoader$1;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r1;
    }
}
