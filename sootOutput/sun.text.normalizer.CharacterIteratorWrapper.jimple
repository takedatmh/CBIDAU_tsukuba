public class sun.text.normalizer.CharacterIteratorWrapper extends sun.text.normalizer.UCharacterIterator
{
    private java.text.CharacterIterator iterator;

    public void <init>(java.text.CharacterIterator)
    {
        sun.text.normalizer.CharacterIteratorWrapper r0;
        java.text.CharacterIterator r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: sun.text.normalizer.CharacterIteratorWrapper;
        r1 := @parameter0: java.text.CharacterIterator;
        specialinvoke r0.<sun.text.normalizer.UCharacterIterator: void <init>()>();
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r2;

     label0:
        r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator> = r1;
        return;
    }

    public int current()
    {
        sun.text.normalizer.CharacterIteratorWrapper r0;
        char c0;
        java.text.CharacterIterator $r1;

        r0 := @this: sun.text.normalizer.CharacterIteratorWrapper;
        $r1 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char current()>();
        if c0 != 65535 goto label0;

        return -1;

     label0:
        return c0;
    }

    public int getLength()
    {
        sun.text.normalizer.CharacterIteratorWrapper r0;
        java.text.CharacterIterator $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: sun.text.normalizer.CharacterIteratorWrapper;
        $r1 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        $i0 = interfaceinvoke $r1.<java.text.CharacterIterator: int getEndIndex()>();
        $r2 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        $i1 = interfaceinvoke $r2.<java.text.CharacterIterator: int getBeginIndex()>();
        $i2 = $i0 - $i1;
        return $i2;
    }

    public int getIndex()
    {
        sun.text.normalizer.CharacterIteratorWrapper r0;
        java.text.CharacterIterator $r1;
        int $i0;

        r0 := @this: sun.text.normalizer.CharacterIteratorWrapper;
        $r1 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        $i0 = interfaceinvoke $r1.<java.text.CharacterIterator: int getIndex()>();
        return $i0;
    }

    public int next()
    {
        sun.text.normalizer.CharacterIteratorWrapper r0;
        char c0;
        java.text.CharacterIterator $r1, $r2;

        r0 := @this: sun.text.normalizer.CharacterIteratorWrapper;
        $r1 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char current()>();
        $r2 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        interfaceinvoke $r2.<java.text.CharacterIterator: char next()>();
        if c0 != 65535 goto label0;

        return -1;

     label0:
        return c0;
    }

    public int previous()
    {
        sun.text.normalizer.CharacterIteratorWrapper r0;
        char c0;
        java.text.CharacterIterator $r1;

        r0 := @this: sun.text.normalizer.CharacterIteratorWrapper;
        $r1 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char previous()>();
        if c0 != 65535 goto label0;

        return -1;

     label0:
        return c0;
    }

    public void setIndex(int)
    {
        sun.text.normalizer.CharacterIteratorWrapper r0;
        int i0;
        java.text.CharacterIterator $r1;

        r0 := @this: sun.text.normalizer.CharacterIteratorWrapper;
        i0 := @parameter0: int;
        $r1 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>(i0);
        return;
    }

    public int getText(char[], int)
    {
        sun.text.normalizer.CharacterIteratorWrapper r0;
        char[] r1;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8;
        char c3;
        java.text.CharacterIterator $r2, $r3, $r4, $r7, $r8, $r9;
        java.lang.IndexOutOfBoundsException $r5;
        java.lang.String $r6;

        r0 := @this: sun.text.normalizer.CharacterIteratorWrapper;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        $r2 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        $i4 = interfaceinvoke $r2.<java.text.CharacterIterator: int getEndIndex()>();
        $r3 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        $i5 = interfaceinvoke $r3.<java.text.CharacterIterator: int getBeginIndex()>();
        i1 = $i4 - $i5;
        $r4 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        i2 = interfaceinvoke $r4.<java.text.CharacterIterator: int getIndex()>();
        if i0 < 0 goto label0;

        $i6 = i0 + i1;
        $i7 = lengthof r1;
        if $i6 <= $i7 goto label1;

     label0:
        $r5 = new java.lang.IndexOutOfBoundsException;
        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);
        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);
        throw $r5;

     label1:
        $r7 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        c3 = interfaceinvoke $r7.<java.text.CharacterIterator: char first()>();

     label2:
        if c3 == 65535 goto label3;

        $i8 = i0;
        i0 = i0 + 1;
        r1[$i8] = c3;
        $r8 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        c3 = interfaceinvoke $r8.<java.text.CharacterIterator: char next()>();
        goto label2;

     label3:
        $r9 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        interfaceinvoke $r9.<java.text.CharacterIterator: char setIndex(int)>(i2);
        return i1;
    }

    public java.lang.Object clone()
    {
        sun.text.normalizer.CharacterIteratorWrapper r0, r1;
        java.lang.Object $r2, $r4;
        java.text.CharacterIterator $r3, $r5;
        java.lang.CloneNotSupportedException $r7, r8;

        r0 := @this: sun.text.normalizer.CharacterIteratorWrapper;

     label0:
        $r2 = specialinvoke r0.<sun.text.normalizer.UCharacterIterator: java.lang.Object clone()>();
        r1 = (sun.text.normalizer.CharacterIteratorWrapper) $r2;
        $r3 = r0.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator>;
        $r4 = interfaceinvoke $r3.<java.text.CharacterIterator: java.lang.Object clone()>();
        $r5 = (java.text.CharacterIterator) $r4;
        r1.<sun.text.normalizer.CharacterIteratorWrapper: java.text.CharacterIterator iterator> = $r5;

     label1:
        return r1;

     label2:
        $r7 := @caughtexception;
        r8 = $r7;
        return null;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }
}
