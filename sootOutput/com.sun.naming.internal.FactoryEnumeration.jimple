public final class com.sun.naming.internal.FactoryEnumeration extends java.lang.Object
{
    private java.util.List factories;
    private int posn;
    private java.lang.ClassLoader loader;

    void <init>(java.util.List, java.lang.ClassLoader)
    {
        com.sun.naming.internal.FactoryEnumeration r0;
        java.util.List r1;
        java.lang.ClassLoader r2;

        r0 := @this: com.sun.naming.internal.FactoryEnumeration;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: java.lang.ClassLoader;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.sun.naming.internal.FactoryEnumeration: int posn> = 0;
        r0.<com.sun.naming.internal.FactoryEnumeration: java.util.List factories> = r1;
        r0.<com.sun.naming.internal.FactoryEnumeration: java.lang.ClassLoader loader> = r2;
        return;
    }

    public java.lang.Object next() throws javax.naming.NamingException
    {
        com.sun.naming.internal.FactoryEnumeration r0;
        java.util.List r1, $r8, $r9, $r17;
        int $i0, $i1, $i2, $i3;
        com.sun.naming.internal.NamedWeakReference r2, $r15, r16;
        java.lang.Object r3, $r11;
        java.lang.String r4, $r26, $r33, $r41;
        java.lang.Class r5, $r14;
        javax.naming.NamingException r6, $r22, $r29, r34, $r37, r42;
        java.lang.Throwable r7, $r43;
        boolean $z0;
        java.lang.ClassLoader $r13;
        java.lang.ClassNotFoundException $r20, r21;
        java.lang.StringBuilder $r23, $r24, $r25, $r30, $r31, $r32, $r38, $r39, $r40;
        java.lang.InstantiationException $r27, r28;
        java.lang.IllegalAccessException $r35, r36;

        r0 := @this: com.sun.naming.internal.FactoryEnumeration;
        $r8 = r0.<com.sun.naming.internal.FactoryEnumeration: java.util.List factories>;
        r1 = $r8;
        entermonitor $r8;

     label0:
        $r9 = r0.<com.sun.naming.internal.FactoryEnumeration: java.util.List factories>;
        $i0 = r0.<com.sun.naming.internal.FactoryEnumeration: int posn>;
        $i1 = $i0 + 1;
        r0.<com.sun.naming.internal.FactoryEnumeration: int posn> = $i1;
        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i0);
        r2 = (com.sun.naming.internal.NamedWeakReference) $r11;
        r3 = virtualinvoke r2.<com.sun.naming.internal.NamedWeakReference: java.lang.Object get()>();
        if r3 == null goto label2;

        $z0 = r3 instanceof java.lang.Class;
        if $z0 != 0 goto label2;

        exitmonitor r1;

     label1:
        return r3;

     label2:
        r4 = virtualinvoke r2.<com.sun.naming.internal.NamedWeakReference: java.lang.String getName()>();

     label3:
        if r3 != null goto label4;

        $r13 = r0.<com.sun.naming.internal.FactoryEnumeration: java.lang.ClassLoader loader>;
        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r4, 1, $r13);
        r3 = r5;

     label4:
        $r14 = (java.lang.Class) r3;
        r3 = virtualinvoke $r14.<java.lang.Class: java.lang.Object newInstance()>();
        $r15 = new com.sun.naming.internal.NamedWeakReference;
        specialinvoke $r15.<com.sun.naming.internal.NamedWeakReference: void <init>(java.lang.Object,java.lang.String)>(r3, r4);
        r16 = $r15;
        $r17 = r0.<com.sun.naming.internal.FactoryEnumeration: java.util.List factories>;
        $i2 = r0.<com.sun.naming.internal.FactoryEnumeration: int posn>;
        $i3 = $i2 - 1;
        interfaceinvoke $r17.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i3, r16);

     label5:
        exitmonitor r1;

     label6:
        return r3;

     label7:
        $r20 := @caughtexception;

     label8:
        r21 = $r20;
        $r22 = new javax.naming.NamingException;
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No longer able to load ");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r22.<javax.naming.NamingException: void <init>(java.lang.String)>($r26);
        r6 = $r22;
        virtualinvoke r6.<javax.naming.NamingException: void setRootCause(java.lang.Throwable)>(r21);
        throw r6;

     label9:
        $r27 := @caughtexception;
        r28 = $r27;
        $r29 = new javax.naming.NamingException;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot instantiate ");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r29.<javax.naming.NamingException: void <init>(java.lang.String)>($r33);
        r34 = $r29;
        virtualinvoke r34.<javax.naming.NamingException: void setRootCause(java.lang.Throwable)>(r28);
        throw r34;

     label10:
        $r35 := @caughtexception;
        r36 = $r35;
        $r37 = new javax.naming.NamingException;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot access ");
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r37.<javax.naming.NamingException: void <init>(java.lang.String)>($r41);
        r42 = $r37;
        virtualinvoke r42.<javax.naming.NamingException: void setRootCause(java.lang.Throwable)>(r36);
        throw r42;

     label11:
        $r43 := @caughtexception;
        r7 = $r43;
        exitmonitor r1;

     label12:
        throw r7;

        catch java.lang.ClassNotFoundException from label3 to label5 with label7;
        catch java.lang.InstantiationException from label3 to label5 with label9;
        catch java.lang.IllegalAccessException from label3 to label5 with label10;
        catch java.lang.Throwable from label0 to label1 with label11;
        catch java.lang.Throwable from label2 to label6 with label11;
        catch java.lang.Throwable from label8 to label12 with label11;
    }

    public boolean hasMore()
    {
        com.sun.naming.internal.FactoryEnumeration r0;
        java.util.List r1, $r3, $r4;
        java.lang.Throwable r2, $r5;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.sun.naming.internal.FactoryEnumeration;
        $r3 = r0.<com.sun.naming.internal.FactoryEnumeration: java.util.List factories>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $i0 = r0.<com.sun.naming.internal.FactoryEnumeration: int posn>;
        $r4 = r0.<com.sun.naming.internal.FactoryEnumeration: java.util.List factories>;
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();
        if $i0 >= $i1 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        exitmonitor r1;

     label3:
        return $z0;

     label4:
        $r5 := @caughtexception;

     label5:
        r2 = $r5;
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label0 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
