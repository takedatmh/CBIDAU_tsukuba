public class org.apache.catalina.core.DefaultInstanceManager extends java.lang.Object implements org.apache.tomcat.InstanceManager
{
    private static final org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[] ANNOTATIONS_EMPTY;
    protected static final org.apache.tomcat.util.res.StringManager sm;
    private static final boolean EJB_PRESENT;
    private static final boolean JPA_PRESENT;
    private static final boolean WS_PRESENT;
    private final javax.naming.Context context;
    private final java.util.Map injectionMap;
    protected final java.lang.ClassLoader classLoader;
    protected final java.lang.ClassLoader containerClassLoader;
    protected boolean privileged;
    protected boolean ignoreAnnotations;
    private final java.util.Set restrictedClasses;
    private final org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap annotationCache;
    private final java.util.Map postConstructMethods;
    private final java.util.Map preDestroyMethods;

    static void <clinit>()
    {
        java.lang.Class r0, r5, r8;
        java.lang.ClassNotFoundException r1, $r4, $r6, r7, $r9, r10;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[] $r2;
        org.apache.tomcat.util.res.StringManager $r3;
        boolean $z0, $z1, $z2;

        $r2 = newarray (org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)[0];
        <org.apache.catalina.core.DefaultInstanceManager: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[] ANNOTATIONS_EMPTY> = $r2;
        $r3 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.catalina.core");
        <org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.res.StringManager sm> = $r3;
        r0 = null;

     label0:
        r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.ejb.EJB");

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;

     label3:
        if r0 == null goto label4;

        $z0 = 1;
        goto label5;

     label4:
        $z0 = 0;

     label5:
        <org.apache.catalina.core.DefaultInstanceManager: boolean EJB_PRESENT> = $z0;
        r5 = null;

     label6:
        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.persistence.PersistenceContext");

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;
        r7 = $r6;

     label9:
        if r5 == null goto label10;

        $z1 = 1;
        goto label11;

     label10:
        $z1 = 0;

     label11:
        <org.apache.catalina.core.DefaultInstanceManager: boolean JPA_PRESENT> = $z1;
        r8 = null;

     label12:
        r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.xml.ws.WebServiceRef");

     label13:
        goto label15;

     label14:
        $r9 := @caughtexception;
        r10 = $r9;

     label15:
        if r8 == null goto label16;

        $z2 = 1;
        goto label17;

     label16:
        $z2 = 0;

     label17:
        <org.apache.catalina.core.DefaultInstanceManager: boolean WS_PRESENT> = $z2;
        return;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
        catch java.lang.ClassNotFoundException from label6 to label7 with label8;
        catch java.lang.ClassNotFoundException from label12 to label13 with label14;
    }

    public void <init>(javax.naming.Context, java.util.Map, org.apache.catalina.Context, java.lang.ClassLoader)
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        javax.naming.Context r1;
        java.util.Map r2, $r12, $r13;
        org.apache.catalina.Context r3;
        java.lang.ClassLoader r4, $r9;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap $r5;
        org.apache.juli.logging.Log r6;
        java.util.HashSet r7, $r10;
        org.apache.catalina.Loader $r8;
        boolean $z0, $z1;
        java.util.Set $r11;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: javax.naming.Context;
        r2 := @parameter1: java.util.Map;
        r3 := @parameter2: org.apache.catalina.Context;
        r4 := @parameter3: java.lang.ClassLoader;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r5 = new org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap;
        specialinvoke $r5.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap: void <init>()>();
        r0.<org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap annotationCache> = $r5;
        $r8 = interfaceinvoke r3.<org.apache.catalina.Context: org.apache.catalina.Loader getLoader()>();
        $r9 = interfaceinvoke $r8.<org.apache.catalina.Loader: java.lang.ClassLoader getClassLoader()>();
        r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.ClassLoader classLoader> = $r9;
        $z0 = interfaceinvoke r3.<org.apache.catalina.Context: boolean getPrivileged()>();
        r0.<org.apache.catalina.core.DefaultInstanceManager: boolean privileged> = $z0;
        r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.ClassLoader containerClassLoader> = r4;
        $z1 = interfaceinvoke r3.<org.apache.catalina.Context: boolean getIgnoreAnnotations()>();
        r0.<org.apache.catalina.core.DefaultInstanceManager: boolean ignoreAnnotations> = $z1;
        r6 = interfaceinvoke r3.<org.apache.catalina.Context: org.apache.juli.logging.Log getLogger()>();
        $r10 = new java.util.HashSet;
        specialinvoke $r10.<java.util.HashSet: void <init>()>();
        r7 = $r10;
        staticinvoke <org.apache.catalina.core.DefaultInstanceManager: void loadProperties(java.util.Set,java.lang.String,java.lang.String,org.apache.juli.logging.Log)>(r7, "org/apache/catalina/core/RestrictedServlets.properties", "defaultInstanceManager.restrictedServletsResource", r6);
        staticinvoke <org.apache.catalina.core.DefaultInstanceManager: void loadProperties(java.util.Set,java.lang.String,java.lang.String,org.apache.juli.logging.Log)>(r7, "org/apache/catalina/core/RestrictedListeners.properties", "defaultInstanceManager.restrictedListenersResource", r6);
        staticinvoke <org.apache.catalina.core.DefaultInstanceManager: void loadProperties(java.util.Set,java.lang.String,java.lang.String,org.apache.juli.logging.Log)>(r7, "org/apache/catalina/core/RestrictedFilters.properties", "defaultInstanceManager.restrictedFiltersResource", r6);
        $r11 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r7);
        r0.<org.apache.catalina.core.DefaultInstanceManager: java.util.Set restrictedClasses> = $r11;
        r0.<org.apache.catalina.core.DefaultInstanceManager: javax.naming.Context context> = r1;
        r0.<org.apache.catalina.core.DefaultInstanceManager: java.util.Map injectionMap> = r2;
        $r12 = interfaceinvoke r3.<org.apache.catalina.Context: java.util.Map findPostConstructMethods()>();
        r0.<org.apache.catalina.core.DefaultInstanceManager: java.util.Map postConstructMethods> = $r12;
        $r13 = interfaceinvoke r3.<org.apache.catalina.Context: java.util.Map findPreDestroyMethods()>();
        r0.<org.apache.catalina.core.DefaultInstanceManager: java.util.Map preDestroyMethods> = $r13;
        return;
    }

    public java.lang.Object newInstance(java.lang.Class) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, javax.naming.NamingException, java.lang.InstantiationException, java.lang.IllegalArgumentException, java.lang.NoSuchMethodException, java.lang.SecurityException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.Class r1;
        java.lang.Class[] $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5, $r6;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.Class;
        $r2 = newarray (java.lang.Class)[0];
        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);
        $r4 = newarray (java.lang.Object)[0];
        $r5 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);
        $r6 = specialinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.Object newInstance(java.lang.Object,java.lang.Class)>($r5, r1);
        return $r6;
    }

    public java.lang.Object newInstance(java.lang.String) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, javax.naming.NamingException, java.lang.InstantiationException, java.lang.ClassNotFoundException, java.lang.IllegalArgumentException, java.lang.NoSuchMethodException, java.lang.SecurityException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.String r1;
        java.lang.Class r2;
        java.lang.ClassLoader $r3;
        java.lang.Class[] $r4;
        java.lang.reflect.Constructor $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7, $r8;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.ClassLoader classLoader>;
        r2 = virtualinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.Class loadClassMaybePrivileged(java.lang.String,java.lang.ClassLoader)>(r1, $r3);
        $r4 = newarray (java.lang.Class)[0];
        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r4);
        $r6 = newarray (java.lang.Object)[0];
        $r7 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);
        $r8 = specialinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.Object newInstance(java.lang.Object,java.lang.Class)>($r7, r2);
        return $r8;
    }

    public java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader) throws java.lang.IllegalAccessException, javax.naming.NamingException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException, java.lang.ClassNotFoundException, java.lang.IllegalArgumentException, java.lang.NoSuchMethodException, java.lang.SecurityException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.String r1;
        java.lang.ClassLoader r2;
        java.lang.Class r3;
        java.lang.Class[] $r4;
        java.lang.reflect.Constructor $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7, $r8;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.ClassLoader;
        r3 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);
        $r4 = newarray (java.lang.Class)[0];
        $r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r4);
        $r6 = newarray (java.lang.Object)[0];
        $r7 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);
        $r8 = specialinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.Object newInstance(java.lang.Object,java.lang.Class)>($r7, r3);
        return $r8;
    }

    public void newInstance(java.lang.Object) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, javax.naming.NamingException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.Object r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        specialinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.Object newInstance(java.lang.Object,java.lang.Class)>(r1, $r2);
        return;
    }

    private java.lang.Object newInstance(java.lang.Object, java.lang.Class) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, javax.naming.NamingException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.Object r1;
        java.lang.Class r2;
        java.util.Map r3;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Class;
        $z0 = r0.<org.apache.catalina.core.DefaultInstanceManager: boolean ignoreAnnotations>;
        if $z0 != 0 goto label0;

        r3 = specialinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: java.util.Map assembleInjectionsFromClassHierarchy(java.lang.Class)>(r2);
        virtualinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: void populateAnnotationsCache(java.lang.Class,java.util.Map)>(r2, r3);
        virtualinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: void processAnnotations(java.lang.Object,java.util.Map)>(r1, r3);
        virtualinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: void postConstruct(java.lang.Object,java.lang.Class)>(r1, r2);

     label0:
        return r1;
    }

    private java.util.Map assembleInjectionsFromClassHierarchy(java.lang.Class)
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.Class r1;
        java.util.HashMap $r2, r3;
        null_type n0;
        java.util.Map $r4, r7;
        java.lang.String $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.Class;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        r3 = $r2;
        n0 = null;
        goto label2;

     label0:
        $r4 = r0.<org.apache.catalina.core.DefaultInstanceManager: java.util.Map injectionMap>;
        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();
        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);
        r7 = (java.util.Map) $r6;
        if r7 == null goto label1;

        interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>(r7);

     label1:
        r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

     label2:
        if r1 != null goto label0;

        return r3;
    }

    public void destroyInstance(java.lang.Object) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Class $r2;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.Object;
        $z0 = r0.<org.apache.catalina.core.DefaultInstanceManager: boolean ignoreAnnotations>;
        if $z0 != 0 goto label0;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        virtualinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: void preDestroy(java.lang.Object,java.lang.Class)>(r1, $r2);

     label0:
        return;
    }

    protected void postConstruct(java.lang.Object, java.lang.Class) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.Object r1, $r11;
        java.lang.Class r2, r3;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[] r4, r5;
        int i0, i1;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry r6;
        java.lang.reflect.Method r7, r8;
        boolean z0;
        javax.naming.Context $r9;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap $r10;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType $r13, $r14;
        java.lang.Object[] $r16;
        java.lang.Throwable $r18;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Class;
        $r9 = r0.<org.apache.catalina.core.DefaultInstanceManager: javax.naming.Context context>;
        if $r9 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();
        if r3 == class "java/lang/Object" goto label1;

        virtualinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: void postConstruct(java.lang.Object,java.lang.Class)>(r1, r3);

     label1:
        $r10 = r0.<org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap annotationCache>;
        $r11 = virtualinvoke $r10.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap: java.lang.Object get(java.lang.Object)>(r2);
        r4 = (org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[]) $r11;
        r5 = r4;
        i0 = lengthof r4;
        i1 = 0;
        goto label9;

     label2:
        r6 = r5[i1];
        $r13 = virtualinvoke r6.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType getType()>();
        $r14 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType POST_CONSTRUCT>;
        if $r13 != $r14 goto label8;

        r7 = staticinvoke <org.apache.catalina.core.DefaultInstanceManager: java.lang.reflect.Method getMethod(java.lang.Class,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)>(r2, r6);
        r8 = r7;
        entermonitor r7;

     label3:
        z0 = virtualinvoke r7.<java.lang.reflect.Method: boolean isAccessible()>();
        virtualinvoke r7.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
        $r16 = newarray (java.lang.Object)[0];
        virtualinvoke r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r16);
        virtualinvoke r7.<java.lang.reflect.Method: void setAccessible(boolean)>(z0);
        exitmonitor r8;

     label4:
        goto label8;

     label5:
        $r18 := @caughtexception;

     label6:
        exitmonitor r8;

     label7:
        throw $r18;

     label8:
        i1 = i1 + 1;

     label9:
        if i1 < i0 goto label2;

        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    protected void preDestroy(java.lang.Object, java.lang.Class) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.Object r1, $r10;
        java.lang.Class r2, r3;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[] r4, r5;
        int i0, i1;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry r6;
        java.lang.reflect.Method r7, r8;
        boolean z0;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap $r9;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType $r12, $r13;
        java.lang.Object[] $r15;
        java.lang.Throwable $r17;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Class;
        r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();
        if r3 == class "java/lang/Object" goto label0;

        virtualinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: void preDestroy(java.lang.Object,java.lang.Class)>(r1, r3);

     label0:
        $r9 = r0.<org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap annotationCache>;
        $r10 = virtualinvoke $r9.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap: java.lang.Object get(java.lang.Object)>(r2);
        r4 = (org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[]) $r10;
        if r4 != null goto label1;

        return;

     label1:
        r5 = r4;
        i0 = lengthof r4;
        i1 = 0;
        goto label9;

     label2:
        r6 = r5[i1];
        $r12 = virtualinvoke r6.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType getType()>();
        $r13 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType PRE_DESTROY>;
        if $r12 != $r13 goto label8;

        r7 = staticinvoke <org.apache.catalina.core.DefaultInstanceManager: java.lang.reflect.Method getMethod(java.lang.Class,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)>(r2, r6);
        r8 = r7;
        entermonitor r7;

     label3:
        z0 = virtualinvoke r7.<java.lang.reflect.Method: boolean isAccessible()>();
        virtualinvoke r7.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
        $r15 = newarray (java.lang.Object)[0];
        virtualinvoke r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r15);
        virtualinvoke r7.<java.lang.reflect.Method: void setAccessible(boolean)>(z0);
        exitmonitor r8;

     label4:
        goto label8;

     label5:
        $r17 := @caughtexception;

     label6:
        exitmonitor r8;

     label7:
        throw $r17;

     label8:
        i1 = i1 + 1;

     label9:
        if i1 < i0 goto label2;

        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void backgroundProcess()
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap $r1;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        $r1 = r0.<org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap annotationCache>;
        virtualinvoke $r1.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap: void maintain()>();
        return;
    }

    protected void populateAnnotationsCache(java.lang.Class, java.util.Map) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, javax.naming.NamingException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.Class r1;
        java.util.Map r2, $r24, $r27;
        java.util.ArrayList r3, $r23;
        java.util.HashSet r4, $r20;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[] r5, r136, $r137;
        java.lang.reflect.Method[] r6, r11;
        java.lang.reflect.Method r7, r9, r12;
        java.lang.String r8, r10, r13, r18, $r25, $r28, $r33, $r36, $r42, $r44, $r48, $r51, $r55, $r58, $r62, $r65, $r69, $r72, $r75, $r82, $r85, $r87, $r94, $r97, $r105, $r111, $r117, $r123, $r129, $r134;
        int i0, i1, i2, i3, $i4;
        java.lang.annotation.Annotation r14, r15, r16, r17, r19, $r38, $r46, $r53, $r60, $r67, $r107, $r113, r114, $r119, r120, $r125, r126, $r131;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap $r21, $r139, r140, $r141;
        java.lang.Object $r22, $r26, $r29, $r35, $r104;
        javax.naming.Context $r31, $r98;
        boolean $z0, $z2, $z5, $z7, $z9, $z11, $z15, $z16, $z19, $z21, $z23, $z25, $z27;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry $r32, $r41, $r47, $r54, $r61, $r68, $r74, $r86, $r103, $r110, $r115, $r121, $r127, $r132;
        java.lang.Class[] $r34, $r43, $r49, $r56, $r63, $r70, $r76, $r88;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType $r37, $r45, $r52, $r59, $r66, $r73, $r77, $r89, $r106, $r112, $r118, $r124, $r130, $r135;
        javax.annotation.Resource $r39, r40, $r108, r109;
        javax.ejb.EJB $r50, $r116;
        javax.xml.ws.WebServiceRef $r57, $r122;
        javax.persistence.PersistenceContext $r64, $r128;
        javax.persistence.PersistenceUnit $r71, $r133;
        java.lang.IllegalArgumentException $r78, $r90;
        java.lang.StringBuilder $r79, $r80, $r81, $r83, $r84, $r91, $r92, $r93, $r95, $r96;
        java.lang.reflect.Field[] r99, r101;
        java.lang.reflect.Field r102;
        java.lang.Object[] $r138;
        java.lang.Throwable $r143;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.util.Map;
        r3 = null;
        $r20 = new java.util.HashSet;
        specialinvoke $r20.<java.util.HashSet: void <init>()>();
        r4 = $r20;
        goto label33;

     label0:
        $r21 = r0.<org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap annotationCache>;
        $r22 = virtualinvoke $r21.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap: java.lang.Object get(java.lang.Object)>(r1);
        r5 = (org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[]) $r22;
        if r5 != null goto label32;

        if r3 != null goto label1;

        $r23 = new java.util.ArrayList;
        specialinvoke $r23.<java.util.ArrayList: void <init>()>();
        r3 = $r23;
        goto label2;

     label1:
        interfaceinvoke r3.<java.util.List: void clear()>();

     label2:
        r6 = staticinvoke <org.apache.catalina.util.Introspection: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>(r1);
        r7 = null;
        $r24 = r0.<org.apache.catalina.core.DefaultInstanceManager: java.util.Map postConstructMethods>;
        $r25 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();
        $r26 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25);
        r8 = (java.lang.String) $r26;
        r9 = null;
        $r27 = r0.<org.apache.catalina.core.DefaultInstanceManager: java.util.Map preDestroyMethods>;
        $r28 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();
        $r29 = interfaceinvoke $r27.<java.util.Map: java.lang.Object get(java.lang.Object)>($r28);
        r10 = (java.lang.String) $r29;
        r11 = r6;
        i0 = lengthof r6;
        i1 = 0;
        goto label11;

     label3:
        r12 = r11[i1];
        $r31 = r0.<org.apache.catalina.core.DefaultInstanceManager: javax.naming.Context context>;
        if $r31 == null goto label9;

        if r2 == null goto label4;

        $z0 = staticinvoke <org.apache.catalina.util.Introspection: boolean isValidSetter(java.lang.reflect.Method)>(r12);
        if $z0 == 0 goto label4;

        r13 = staticinvoke <org.apache.catalina.util.Introspection: java.lang.String getPropertyName(java.lang.reflect.Method)>(r12);
        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r13);
        $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r13);
        if $z2 == 0 goto label4;

        $r32 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r33 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.String getName()>();
        $r34 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        $r35 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);
        $r36 = (java.lang.String) $r35;
        $r37 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType SETTER>;
        specialinvoke $r32.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>($r33, $r34, $r36, $r37);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r32);
        goto label10;

     label4:
        $r38 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/annotation/Resource");
        $r39 = (javax.annotation.Resource) $r38;
        r40 = $r39;
        if $r39 == null goto label5;

        $r41 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r42 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.String getName()>();
        $r43 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        $r44 = interfaceinvoke r40.<javax.annotation.Resource: java.lang.String name()>();
        $r45 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType SETTER>;
        specialinvoke $r41.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>($r42, $r43, $r44, $r45);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r41);
        goto label9;

     label5:
        $z5 = <org.apache.catalina.core.DefaultInstanceManager: boolean EJB_PRESENT>;
        if $z5 == 0 goto label6;

        $r46 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/ejb/EJB");
        r14 = $r46;
        if $r46 == null goto label6;

        $r47 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r48 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.String getName()>();
        $r49 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        $r50 = (javax.ejb.EJB) r14;
        $r51 = interfaceinvoke $r50.<javax.ejb.EJB: java.lang.String name()>();
        $r52 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType SETTER>;
        specialinvoke $r47.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>($r48, $r49, $r51, $r52);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r47);
        goto label9;

     label6:
        $z7 = <org.apache.catalina.core.DefaultInstanceManager: boolean WS_PRESENT>;
        if $z7 == 0 goto label7;

        $r53 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/xml/ws/WebServiceRef");
        r15 = $r53;
        if $r53 == null goto label7;

        $r54 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r55 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.String getName()>();
        $r56 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        $r57 = (javax.xml.ws.WebServiceRef) r15;
        $r58 = interfaceinvoke $r57.<javax.xml.ws.WebServiceRef: java.lang.String name()>();
        $r59 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType SETTER>;
        specialinvoke $r54.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>($r55, $r56, $r58, $r59);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r54);
        goto label9;

     label7:
        $z9 = <org.apache.catalina.core.DefaultInstanceManager: boolean JPA_PRESENT>;
        if $z9 == 0 goto label8;

        $r60 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/persistence/PersistenceContext");
        r16 = $r60;
        if $r60 == null goto label8;

        $r61 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r62 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.String getName()>();
        $r63 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        $r64 = (javax.persistence.PersistenceContext) r16;
        $r65 = interfaceinvoke $r64.<javax.persistence.PersistenceContext: java.lang.String name()>();
        $r66 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType SETTER>;
        specialinvoke $r61.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>($r62, $r63, $r65, $r66);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r61);
        goto label9;

     label8:
        $z11 = <org.apache.catalina.core.DefaultInstanceManager: boolean JPA_PRESENT>;
        if $z11 == 0 goto label9;

        $r67 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/persistence/PersistenceUnit");
        r17 = $r67;
        if $r67 == null goto label9;

        $r68 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r69 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.String getName()>();
        $r70 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        $r71 = (javax.persistence.PersistenceUnit) r17;
        $r72 = interfaceinvoke $r71.<javax.persistence.PersistenceUnit: java.lang.String name()>();
        $r73 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType SETTER>;
        specialinvoke $r68.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>($r69, $r70, $r72, $r73);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r68);

     label9:
        r7 = staticinvoke <org.apache.catalina.core.DefaultInstanceManager: java.lang.reflect.Method findPostConstruct(java.lang.reflect.Method,java.lang.String,java.lang.reflect.Method)>(r7, r8, r12);
        r9 = staticinvoke <org.apache.catalina.core.DefaultInstanceManager: java.lang.reflect.Method findPreDestroy(java.lang.reflect.Method,java.lang.String,java.lang.reflect.Method)>(r9, r10, r12);

     label10:
        i1 = i1 + 1;

     label11:
        if i1 < i0 goto label3;

        if r7 == null goto label12;

        $r74 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r75 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.String getName()>();
        $r76 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        $r77 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType POST_CONSTRUCT>;
        specialinvoke $r74.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>($r75, $r76, null, $r77);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r74);
        goto label13;

     label12:
        if r8 == null goto label13;

        $r78 = new java.lang.IllegalArgumentException;
        $r79 = new java.lang.StringBuilder;
        specialinvoke $r79.<java.lang.StringBuilder: void <init>(java.lang.String)>("Post construct method ");
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for class ");
        $r82 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();
        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is declared in deployment descriptor but cannot be found.");
        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r78.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r85);
        throw $r78;

     label13:
        if r9 == null goto label14;

        $r86 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r87 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.String getName()>();
        $r88 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        $r89 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType PRE_DESTROY>;
        specialinvoke $r86.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>($r87, $r88, null, $r89);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r86);
        goto label15;

     label14:
        if r10 == null goto label15;

        $r90 = new java.lang.IllegalArgumentException;
        $r91 = new java.lang.StringBuilder;
        specialinvoke $r91.<java.lang.StringBuilder: void <init>(java.lang.String)>("Pre destroy method ");
        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for class ");
        $r94 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();
        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);
        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is declared in deployment descriptor but cannot be found.");
        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r90.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r97);
        throw $r90;

     label15:
        $r98 = r0.<org.apache.catalina.core.DefaultInstanceManager: javax.naming.Context context>;
        if $r98 == null goto label24;

        r99 = staticinvoke <org.apache.catalina.util.Introspection: java.lang.reflect.Field[] getDeclaredFields(java.lang.Class)>(r1);
        r101 = r99;
        i2 = lengthof r99;
        i3 = 0;
        goto label23;

     label16:
        r102 = r101[i3];
        r18 = virtualinvoke r102.<java.lang.reflect.Field: java.lang.String getName()>();
        if r2 == null goto label17;

        $z15 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r18);
        if $z15 == 0 goto label17;

        $z16 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r18);
        if $z16 != 0 goto label17;

        $r103 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r104 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18);
        $r105 = (java.lang.String) $r104;
        $r106 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType FIELD>;
        specialinvoke $r103.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>(r18, null, $r105, $r106);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r103);
        goto label22;

     label17:
        $r107 = virtualinvoke r102.<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/annotation/Resource");
        $r108 = (javax.annotation.Resource) $r107;
        r109 = $r108;
        if $r108 == null goto label18;

        $r110 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r111 = interfaceinvoke r109.<javax.annotation.Resource: java.lang.String name()>();
        $r112 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType FIELD>;
        specialinvoke $r110.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>(r18, null, $r111, $r112);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r110);
        goto label22;

     label18:
        $z19 = <org.apache.catalina.core.DefaultInstanceManager: boolean EJB_PRESENT>;
        if $z19 == 0 goto label19;

        $r113 = virtualinvoke r102.<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/ejb/EJB");
        r114 = $r113;
        if $r113 == null goto label19;

        $r115 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r116 = (javax.ejb.EJB) r114;
        $r117 = interfaceinvoke $r116.<javax.ejb.EJB: java.lang.String name()>();
        $r118 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType FIELD>;
        specialinvoke $r115.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>(r18, null, $r117, $r118);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r115);
        goto label22;

     label19:
        $z21 = <org.apache.catalina.core.DefaultInstanceManager: boolean WS_PRESENT>;
        if $z21 == 0 goto label20;

        $r119 = virtualinvoke r102.<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/xml/ws/WebServiceRef");
        r120 = $r119;
        if $r119 == null goto label20;

        $r121 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r122 = (javax.xml.ws.WebServiceRef) r120;
        $r123 = interfaceinvoke $r122.<javax.xml.ws.WebServiceRef: java.lang.String name()>();
        $r124 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType FIELD>;
        specialinvoke $r121.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>(r18, null, $r123, $r124);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r121);
        goto label22;

     label20:
        $z23 = <org.apache.catalina.core.DefaultInstanceManager: boolean JPA_PRESENT>;
        if $z23 == 0 goto label21;

        $r125 = virtualinvoke r102.<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/persistence/PersistenceContext");
        r126 = $r125;
        if $r125 == null goto label21;

        $r127 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r128 = (javax.persistence.PersistenceContext) r126;
        $r129 = interfaceinvoke $r128.<javax.persistence.PersistenceContext: java.lang.String name()>();
        $r130 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType FIELD>;
        specialinvoke $r127.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>(r18, null, $r129, $r130);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r127);
        goto label22;

     label21:
        $z25 = <org.apache.catalina.core.DefaultInstanceManager: boolean JPA_PRESENT>;
        if $z25 == 0 goto label22;

        $r131 = virtualinvoke r102.<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/persistence/PersistenceUnit");
        r19 = $r131;
        if $r131 == null goto label22;

        $r132 = new org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        $r133 = (javax.persistence.PersistenceUnit) r19;
        $r134 = interfaceinvoke $r133.<javax.persistence.PersistenceUnit: java.lang.String name()>();
        $r135 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType FIELD>;
        specialinvoke $r132.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: void <init>(java.lang.String,java.lang.Class[],java.lang.String,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)>(r18, null, $r134, $r135);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r132);

     label22:
        i3 = i3 + 1;

     label23:
        if i3 < i2 goto label16;

     label24:
        $z27 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();
        if $z27 == 0 goto label25;

        r136 = <org.apache.catalina.core.DefaultInstanceManager: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[] ANNOTATIONS_EMPTY>;
        goto label26;

     label25:
        $i4 = interfaceinvoke r3.<java.util.List: int size()>();
        $r137 = newarray (org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)[$i4];
        $r138 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r137);
        r136 = (org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[]) $r138;

     label26:
        $r139 = r0.<org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap annotationCache>;
        r140 = $r139;
        entermonitor $r139;

     label27:
        $r141 = r0.<org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap annotationCache>;
        virtualinvoke $r141.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r136);
        exitmonitor r140;

     label28:
        goto label32;

     label29:
        $r143 := @caughtexception;

     label30:
        exitmonitor r140;

     label31:
        throw $r143;

     label32:
        r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

     label33:
        if r1 != null goto label0;

        return;

        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
    }

    protected void processAnnotations(java.lang.Object, java.util.Map) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, javax.naming.NamingException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.Object r1, $r9;
        java.util.Map r2;
        java.lang.Class r3;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[] r4, r5;
        int i0, i1;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry r6;
        javax.naming.Context $r7, $r13, $r18;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap $r8;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType $r11, $r12, $r16, $r17;
        java.lang.reflect.Method $r14;
        java.lang.String $r15, $r20;
        java.lang.reflect.Field $r19;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.Map;
        $r7 = r0.<org.apache.catalina.core.DefaultInstanceManager: javax.naming.Context context>;
        if $r7 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        goto label6;

     label1:
        $r8 = r0.<org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap annotationCache>;
        $r9 = virtualinvoke $r8.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap: java.lang.Object get(java.lang.Object)>(r3);
        r4 = (org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry[]) $r9;
        r5 = r4;
        i0 = lengthof r4;
        i1 = 0;
        goto label5;

     label2:
        r6 = r5[i1];
        $r11 = virtualinvoke r6.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType getType()>();
        $r12 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType SETTER>;
        if $r11 != $r12 goto label3;

        $r13 = r0.<org.apache.catalina.core.DefaultInstanceManager: javax.naming.Context context>;
        $r14 = staticinvoke <org.apache.catalina.core.DefaultInstanceManager: java.lang.reflect.Method getMethod(java.lang.Class,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)>(r3, r6);
        $r15 = virtualinvoke r6.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: java.lang.String getName()>();
        staticinvoke <org.apache.catalina.core.DefaultInstanceManager: void lookupMethodResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Method,java.lang.String,java.lang.Class)>($r13, r1, $r14, $r15, r3);
        goto label4;

     label3:
        $r16 = virtualinvoke r6.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType getType()>();
        $r17 = <org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType FIELD>;
        if $r16 != $r17 goto label4;

        $r18 = r0.<org.apache.catalina.core.DefaultInstanceManager: javax.naming.Context context>;
        $r19 = staticinvoke <org.apache.catalina.core.DefaultInstanceManager: java.lang.reflect.Field getField(java.lang.Class,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)>(r3, r6);
        $r20 = virtualinvoke r6.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: java.lang.String getName()>();
        staticinvoke <org.apache.catalina.core.DefaultInstanceManager: void lookupFieldResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Field,java.lang.String,java.lang.Class)>($r18, r1, $r19, $r20, r3);

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label2;

        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

     label6:
        if r3 != null goto label1;

        return;
    }

    protected int getAnnotationCacheSize()
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap $r1;
        int $i0;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        $r1 = r0.<org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap annotationCache>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap: int size()>();
        return $i0;
    }

    protected java.lang.Class loadClassMaybePrivileged(java.lang.String, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.String r1;
        java.lang.ClassLoader r2;
        boolean $z0, $z1;
        java.lang.Class r3;
        java.security.PrivilegedActionException r4, $r8;
        java.lang.Throwable r5;
        org.apache.catalina.core.DefaultInstanceManager$1 $r6;
        java.lang.Object $r7;
        java.lang.ClassNotFoundException $r9;
        java.lang.RuntimeException $r10;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.ClassLoader;
        $z0 = staticinvoke <org.apache.catalina.security.SecurityUtil: boolean isPackageProtectionEnabled()>();
        if $z0 == 0 goto label4;

     label0:
        $r6 = new org.apache.catalina.core.DefaultInstanceManager$1;
        specialinvoke $r6.<org.apache.catalina.core.DefaultInstanceManager$1: void <init>(org.apache.catalina.core.DefaultInstanceManager,java.lang.String,java.lang.ClassLoader)>(r0, r1, r2);
        $r7 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r6);
        r3 = (java.lang.Class) $r7;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;
        r4 = $r8;
        r5 = virtualinvoke r4.<java.security.PrivilegedActionException: java.lang.Throwable getCause()>();
        $z1 = r5 instanceof java.lang.ClassNotFoundException;
        if $z1 == 0 goto label3;

        $r9 = (java.lang.ClassNotFoundException) r5;
        throw $r9;

     label3:
        $r10 = new java.lang.RuntimeException;
        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5);
        throw $r10;

     label4:
        r3 = virtualinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>(r1, r2);

     label5:
        specialinvoke r0.<org.apache.catalina.core.DefaultInstanceManager: void checkAccess(java.lang.Class)>(r3);
        return r3;

        catch java.security.PrivilegedActionException from label0 to label1 with label2;
    }

    protected java.lang.Class loadClass(java.lang.String, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.String r1;
        java.lang.ClassLoader r2, $r4, $r6;
        java.lang.Class r3, $r5, $r7, $r11;
        boolean $z0, $z1;
        java.lang.Throwable $r9, r10;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.ClassLoader;
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("org.apache.catalina");
        if $z0 == 0 goto label0;

        $r4 = r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.ClassLoader containerClassLoader>;
        $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);
        return $r5;

     label0:
        $r6 = r0.<org.apache.catalina.core.DefaultInstanceManager: java.lang.ClassLoader containerClassLoader>;
        r3 = virtualinvoke $r6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);
        $r7 = class "org/apache/catalina/ContainerServlet";
        $z1 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);
        if $z1 == 0 goto label3;

     label1:
        return r3;

     label2:
        $r9 := @caughtexception;
        r10 = $r9;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r10);

     label3:
        $r11 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);
        return $r11;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    private void checkAccess(java.lang.Class)
    {
        org.apache.catalina.core.DefaultInstanceManager r0;
        java.lang.Class r1, $r3;
        org.apache.tomcat.util.res.StringManager $r2, $r10;
        boolean $z0, $z1, $z2;
        java.lang.SecurityException $r4, $r9;
        java.lang.Object[] $r5, $r11;
        java.lang.String $r6, $r8, $r12;
        java.util.Set $r7;

        r0 := @this: org.apache.catalina.core.DefaultInstanceManager;
        r1 := @parameter0: java.lang.Class;
        $z0 = r0.<org.apache.catalina.core.DefaultInstanceManager: boolean privileged>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r3 = class "org/apache/catalina/ContainerServlet";
        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);
        if $z1 == 0 goto label3;

        $r4 = new java.lang.SecurityException;
        $r2 = <org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r5[0] = r1;
        $r6 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("defaultInstanceManager.restrictedContainerServlet", $r5);
        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);
        throw $r4;

     label1:
        $r7 = r0.<org.apache.catalina.core.DefaultInstanceManager: java.util.Set restrictedClasses>;
        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();
        $z2 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r8);
        if $z2 == 0 goto label2;

        $r9 = new java.lang.SecurityException;
        $r10 = <org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[1];
        $r11[0] = r1;
        $r12 = virtualinvoke $r10.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("defaultInstanceManager.restrictedClass", $r11);
        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r12);
        throw $r9;

     label2:
        r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

     label3:
        if r1 != null goto label1;

        return;
    }

    protected static void lookupFieldResource(javax.naming.Context, java.lang.Object, java.lang.reflect.Field, java.lang.String, java.lang.Class) throws javax.naming.NamingException, java.lang.IllegalAccessException
    {
        javax.naming.Context r0;
        java.lang.Object r1, r6;
        java.lang.reflect.Field r2, r7;
        java.lang.String r3, r5, $r9, $r10, $r12, $r14;
        java.lang.Class r4;
        boolean z0;
        int $i0;
        java.lang.StringBuilder $r8, $r11, $r13;
        java.lang.Throwable $r16;

        r0 := @parameter0: javax.naming.Context;
        r1 := @parameter1: java.lang.Object;
        r2 := @parameter2: java.lang.reflect.Field;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.Class;
        r5 = staticinvoke <org.apache.catalina.core.DefaultInstanceManager: java.lang.String normalize(java.lang.String)>(r3);
        if r5 == null goto label0;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        r6 = interfaceinvoke r0.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>(r5);
        goto label1;

     label0:
        $r8 = new java.lang.StringBuilder;
        $r9 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);
        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $r12 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        r6 = interfaceinvoke r0.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>($r14);

     label1:
        r7 = r2;
        entermonitor r2;

     label2:
        z0 = virtualinvoke r2.<java.lang.reflect.Field: boolean isAccessible()>();
        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        virtualinvoke r2.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r6);
        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(z0);
        exitmonitor r7;

     label3:
        goto label7;

     label4:
        $r16 := @caughtexception;

     label5:
        exitmonitor r7;

     label6:
        throw $r16;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected static void lookupMethodResource(javax.naming.Context, java.lang.Object, java.lang.reflect.Method, java.lang.String, java.lang.Class) throws javax.naming.NamingException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        javax.naming.Context r0;
        java.lang.Object r1, r7;
        java.lang.reflect.Method r2, r8;
        java.lang.String r3, r6, $r10, $r12, $r13, $r15, $r17;
        java.lang.Class r4;
        org.apache.tomcat.util.res.StringManager $r5;
        boolean z0, $z1;
        java.lang.IllegalArgumentException $r9;
        int $i0;
        java.lang.StringBuilder $r11, $r14, $r16;
        java.lang.Object[] $r19;
        java.lang.Throwable $r21;

        r0 := @parameter0: javax.naming.Context;
        r1 := @parameter1: java.lang.Object;
        r2 := @parameter2: java.lang.reflect.Method;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.Class;
        $z1 = staticinvoke <org.apache.catalina.util.Introspection: boolean isValidSetter(java.lang.reflect.Method)>(r2);
        if $z1 != 0 goto label0;

        $r9 = new java.lang.IllegalArgumentException;
        $r5 = <org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = virtualinvoke $r5.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("defaultInstanceManager.invalidInjection");
        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);
        throw $r9;

     label0:
        r6 = staticinvoke <org.apache.catalina.core.DefaultInstanceManager: java.lang.String normalize(java.lang.String)>(r3);
        if r6 == null goto label1;

        $i0 = virtualinvoke r6.<java.lang.String: int length()>();
        if $i0 <= 0 goto label1;

        r7 = interfaceinvoke r0.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>(r6);
        goto label2;

     label1:
        $r11 = new java.lang.StringBuilder;
        $r12 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();
        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);
        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $r15 = staticinvoke <org.apache.catalina.util.Introspection: java.lang.String getPropertyName(java.lang.reflect.Method)>(r2);
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        r7 = interfaceinvoke r0.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>($r17);

     label2:
        r8 = r2;
        entermonitor r2;

     label3:
        z0 = virtualinvoke r2.<java.lang.reflect.Method: boolean isAccessible()>();
        virtualinvoke r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
        $r19 = newarray (java.lang.Object)[1];
        $r19[0] = r7;
        virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r19);
        virtualinvoke r2.<java.lang.reflect.Method: void setAccessible(boolean)>(z0);
        exitmonitor r8;

     label4:
        goto label8;

     label5:
        $r21 := @caughtexception;

     label6:
        exitmonitor r8;

     label7:
        throw $r21;

     label8:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static java.lang.String getName(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @parameter0: java.lang.reflect.Method;
        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(3);
        $r3 = staticinvoke <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>($r2);
        return $r3;
    }

    private static void loadProperties(java.util.Set, java.lang.String, java.lang.String, org.apache.juli.logging.Log)
    {
        java.util.Set r0, $r25;
        java.lang.String r1, r2, $r14, $r18, $r29, $r32, $r37;
        org.apache.juli.logging.Log r3;
        java.util.Properties $r4, r5;
        java.lang.ClassLoader r6;
        java.io.InputStream r7;
        java.io.IOException r8, r9, $r15, $r19, $r21, r22, $r23, r24;
        java.lang.Throwable r10, $r20;
        java.lang.Class $r11;
        org.apache.tomcat.util.res.StringManager $r12, $r16, $r33;
        java.lang.Object[] $r13, $r17, $r34;
        boolean $z0, $z1, $z3;
        java.util.Iterator r26;
        java.lang.Object $r27, $r30, $r31, $r35, $r36;
        java.util.Map$Entry r28;

        r0 := @parameter0: java.util.Set;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: org.apache.juli.logging.Log;
        $r4 = new java.util.Properties;
        specialinvoke $r4.<java.util.Properties: void <init>()>();
        r5 = $r4;
        $r11 = class "org/apache/catalina/core/DefaultInstanceManager";
        r6 = virtualinvoke $r11.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        r7 = null;

     label0:
        r7 = virtualinvoke r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);
        if r7 != null goto label1;

        $r12 = <org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.res.StringManager sm>;
        $r13 = newarray (java.lang.Object)[1];
        $r13[0] = r1;
        $r14 = virtualinvoke $r12.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>(r2, $r13);
        interfaceinvoke r3.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r14);
        goto label13;

     label1:
        virtualinvoke r5.<java.util.Properties: void load(java.io.InputStream)>(r7);

     label2:
        goto label13;

     label3:
        $r15 := @caughtexception;
        r8 = $r15;
        $r16 = <org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.res.StringManager sm>;
        $r17 = newarray (java.lang.Object)[1];
        $r17[0] = r1;
        $r18 = virtualinvoke $r16.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>(r2, $r17);
        interfaceinvoke r3.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r18, r8);

     label4:
        if r7 == null goto label17;

     label5:
        virtualinvoke r7.<java.io.InputStream: void close()>();

     label6:
        goto label17;

     label7:
        $r19 := @caughtexception;
        r9 = $r19;
        goto label17;

     label8:
        $r20 := @caughtexception;
        r10 = $r20;
        if r7 == null goto label12;

     label9:
        virtualinvoke r7.<java.io.InputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r21 := @caughtexception;
        r22 = $r21;

     label12:
        throw r10;

     label13:
        if r7 == null goto label17;

     label14:
        virtualinvoke r7.<java.io.InputStream: void close()>();

     label15:
        goto label17;

     label16:
        $r23 := @caughtexception;
        r24 = $r23;

     label17:
        $z0 = virtualinvoke r5.<java.util.Properties: boolean isEmpty()>();
        if $z0 == 0 goto label18;

        return;

     label18:
        $r25 = virtualinvoke r5.<java.util.Properties: java.util.Set entrySet()>();
        r26 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>();
        goto label21;

     label19:
        $r27 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();
        r28 = (java.util.Map$Entry) $r27;
        $r29 = "restricted";
        $r30 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>();
        $z1 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r30);
        if $z1 == 0 goto label20;

        $r31 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r32 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();
        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r32);
        goto label21;

     label20:
        $r33 = <org.apache.catalina.core.DefaultInstanceManager: org.apache.tomcat.util.res.StringManager sm>;
        $r34 = newarray (java.lang.Object)[3];
        $r34[0] = r1;
        $r35 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r34[1] = $r35;
        $r36 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r34[2] = $r36;
        $r37 = virtualinvoke $r33.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("defaultInstanceManager.restrictedWrongValue", $r34);
        interfaceinvoke r3.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r37);

     label21:
        $z3 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label19;

        return;

        catch java.io.IOException from label0 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label7;
        catch java.lang.Throwable from label0 to label4 with label8;
        catch java.io.IOException from label9 to label10 with label11;
        catch java.io.IOException from label14 to label15 with label16;
    }

    private static java.lang.String normalize(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        if r0 == null goto label0;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("java:comp/env/");
        if $z0 == 0 goto label0;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(14);
        return $r1;

     label0:
        return r0;
    }

    private static java.lang.reflect.Method getMethod(java.lang.Class, org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)
    {
        java.lang.Class r0;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry r1;
        java.lang.reflect.Method r2;
        java.lang.NoSuchMethodException r3, $r8;
        boolean $z0;
        org.apache.catalina.core.DefaultInstanceManager$2 $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        java.lang.Class[] $r7;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        r2 = null;
        $z0 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z0 == 0 goto label0;

        $r4 = new org.apache.catalina.core.DefaultInstanceManager$2;
        specialinvoke $r4.<org.apache.catalina.core.DefaultInstanceManager$2: void <init>(java.lang.Class,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)>(r0, r1);
        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r4);
        r2 = (java.lang.reflect.Method) $r5;
        goto label3;

     label0:
        $r6 = virtualinvoke r1.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: java.lang.String getAccessibleObjectName()>();
        $r7 = virtualinvoke r1.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: java.lang.Class[] getParamTypes()>();
        r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r6, $r7);

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r3 = $r8;

     label3:
        return r2;

        catch java.lang.NoSuchMethodException from label0 to label1 with label2;
    }

    private static java.lang.reflect.Field getField(java.lang.Class, org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)
    {
        java.lang.Class r0;
        org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry r1;
        java.lang.reflect.Field r2;
        java.lang.NoSuchFieldException r3, $r7;
        boolean $z0;
        org.apache.catalina.core.DefaultInstanceManager$3 $r4;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry;
        r2 = null;
        $z0 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z0 == 0 goto label0;

        $r4 = new org.apache.catalina.core.DefaultInstanceManager$3;
        specialinvoke $r4.<org.apache.catalina.core.DefaultInstanceManager$3: void <init>(java.lang.Class,org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)>(r0, r1);
        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r4);
        r2 = (java.lang.reflect.Field) $r5;
        goto label3;

     label0:
        $r6 = virtualinvoke r1.<org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry: java.lang.String getAccessibleObjectName()>();
        r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r6);

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r3 = $r7;

     label3:
        return r2;

        catch java.lang.NoSuchFieldException from label0 to label1 with label2;
    }

    private static java.lang.reflect.Method findPostConstruct(java.lang.reflect.Method, java.lang.String, java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0, r2, $r3;
        java.lang.String r1;

        r0 := @parameter0: java.lang.reflect.Method;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.reflect.Method;
        $r3 = staticinvoke <org.apache.catalina.core.DefaultInstanceManager: java.lang.reflect.Method findLifecycleCallback(java.lang.reflect.Method,java.lang.String,java.lang.reflect.Method,java.lang.Class)>(r0, r1, r2, class "javax/annotation/PostConstruct");
        return $r3;
    }

    private static java.lang.reflect.Method findPreDestroy(java.lang.reflect.Method, java.lang.String, java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0, r2, $r3;
        java.lang.String r1;

        r0 := @parameter0: java.lang.reflect.Method;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.reflect.Method;
        $r3 = staticinvoke <org.apache.catalina.core.DefaultInstanceManager: java.lang.reflect.Method findLifecycleCallback(java.lang.reflect.Method,java.lang.String,java.lang.reflect.Method,java.lang.Class)>(r0, r1, r2, class "javax/annotation/PreDestroy");
        return $r3;
    }

    private static java.lang.reflect.Method findLifecycleCallback(java.lang.reflect.Method, java.lang.String, java.lang.reflect.Method, java.lang.Class)
    {
        java.lang.reflect.Method r0, r2, r4;
        java.lang.String r1, $r6, $r8, $r11, $r14, $r17;
        java.lang.Class r3;
        java.lang.StringBuilder $r5, $r9, $r10, $r13, $r15, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r7, $r12;

        r0 := @parameter0: java.lang.reflect.Method;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.reflect.Method;
        r3 := @parameter3: java.lang.Class;
        r4 = r0;
        if r1 == null goto label1;

        $r6 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z0 == 0 goto label4;

        $z1 = staticinvoke <org.apache.catalina.util.Introspection: boolean isValidLifecycleCallback(java.lang.reflect.Method)>(r2);
        if $z1 != 0 goto label0;

        $r7 = new java.lang.IllegalArgumentException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid ");
        $r8 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();
        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" annotation");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);
        throw $r7;

     label0:
        r4 = r2;
        goto label4;

     label1:
        $z2 = virtualinvoke r2.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(r3);
        if $z2 == 0 goto label4;

        if r0 != null goto label2;

        $z3 = staticinvoke <org.apache.catalina.util.Introspection: boolean isValidLifecycleCallback(java.lang.reflect.Method)>(r2);
        if $z3 != 0 goto label3;

     label2:
        $r12 = new java.lang.IllegalArgumentException;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid ");
        $r14 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" annotation");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);
        throw $r12;

     label3:
        r4 = r2;

     label4:
        return r4;
    }
}
