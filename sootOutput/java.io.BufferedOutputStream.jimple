public class java.io.BufferedOutputStream extends java.io.FilterOutputStream
{
    protected byte[] buf;
    protected int count;

    public void <init>(java.io.OutputStream)
    {
        java.io.BufferedOutputStream r0;
        java.io.OutputStream r1;

        r0 := @this: java.io.BufferedOutputStream;
        r1 := @parameter0: java.io.OutputStream;
        specialinvoke r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r1, 8192);
        return;
    }

    public void <init>(java.io.OutputStream, int)
    {
        java.io.BufferedOutputStream r0;
        java.io.OutputStream r1;
        int i0;
        java.lang.IllegalArgumentException $r2;
        byte[] $r3;

        r0 := @this: java.io.BufferedOutputStream;
        r1 := @parameter0: java.io.OutputStream;
        i0 := @parameter1: int;
        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);
        if i0 > 0 goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer size <= 0");
        throw $r2;

     label0:
        $r3 = newarray (byte)[i0];
        r0.<java.io.BufferedOutputStream: byte[] buf> = $r3;
        return;
    }

    private void flushBuffer() throws java.io.IOException
    {
        java.io.BufferedOutputStream r0;
        int $i0, $i1;
        java.io.OutputStream $r1;
        byte[] $r2;

        r0 := @this: java.io.BufferedOutputStream;
        $i0 = r0.<java.io.BufferedOutputStream: int count>;
        if $i0 <= 0 goto label0;

        $r1 = r0.<java.io.BufferedOutputStream: java.io.OutputStream out>;
        $r2 = r0.<java.io.BufferedOutputStream: byte[] buf>;
        $i1 = r0.<java.io.BufferedOutputStream: int count>;
        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1);
        r0.<java.io.BufferedOutputStream: int count> = 0;

     label0:
        return;
    }

    public synchronized void write(int) throws java.io.IOException
    {
        java.io.BufferedOutputStream r0;
        int i0, $i1, $i2, $i3, $i4;
        byte[] $r1, $r2;
        byte $b5;

        r0 := @this: java.io.BufferedOutputStream;
        i0 := @parameter0: int;
        $i2 = r0.<java.io.BufferedOutputStream: int count>;
        $r1 = r0.<java.io.BufferedOutputStream: byte[] buf>;
        $i3 = lengthof $r1;
        if $i2 < $i3 goto label0;

        specialinvoke r0.<java.io.BufferedOutputStream: void flushBuffer()>();

     label0:
        $r2 = r0.<java.io.BufferedOutputStream: byte[] buf>;
        $i1 = r0.<java.io.BufferedOutputStream: int count>;
        $i4 = $i1 + 1;
        r0.<java.io.BufferedOutputStream: int count> = $i4;
        $b5 = (byte) i0;
        $r2[$i1] = $b5;
        return;
    }

    public synchronized void write(byte[], int, int) throws java.io.IOException
    {
        java.io.BufferedOutputStream r0;
        byte[] r1, $r2, $r4, $r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.io.OutputStream $r3;

        r0 := @this: java.io.BufferedOutputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = r0.<java.io.BufferedOutputStream: byte[] buf>;
        $i2 = lengthof $r2;
        if i1 < $i2 goto label0;

        specialinvoke r0.<java.io.BufferedOutputStream: void flushBuffer()>();
        $r3 = r0.<java.io.BufferedOutputStream: java.io.OutputStream out>;
        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);
        return;

     label0:
        $r4 = r0.<java.io.BufferedOutputStream: byte[] buf>;
        $i3 = lengthof $r4;
        $i4 = r0.<java.io.BufferedOutputStream: int count>;
        $i5 = $i3 - $i4;
        if i1 <= $i5 goto label1;

        specialinvoke r0.<java.io.BufferedOutputStream: void flushBuffer()>();

     label1:
        $r5 = r0.<java.io.BufferedOutputStream: byte[] buf>;
        $i6 = r0.<java.io.BufferedOutputStream: int count>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r5, $i6, i1);
        $i7 = r0.<java.io.BufferedOutputStream: int count>;
        $i8 = $i7 + i1;
        r0.<java.io.BufferedOutputStream: int count> = $i8;
        return;
    }

    public synchronized void flush() throws java.io.IOException
    {
        java.io.BufferedOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: java.io.BufferedOutputStream;
        specialinvoke r0.<java.io.BufferedOutputStream: void flushBuffer()>();
        $r1 = r0.<java.io.BufferedOutputStream: java.io.OutputStream out>;
        virtualinvoke $r1.<java.io.OutputStream: void flush()>();
        return;
    }
}
