public class javax.security.auth.callback.PasswordCallback extends java.lang.Object implements javax.security.auth.callback.Callback, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.lang.String prompt;
    private boolean echoOn;
    private char[] inputPassword;

    public void <init>(java.lang.String, boolean)
    {
        javax.security.auth.callback.PasswordCallback r0;
        java.lang.String r1;
        boolean z0;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: javax.security.auth.callback.PasswordCallback;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r2;

     label1:
        r0.<javax.security.auth.callback.PasswordCallback: java.lang.String prompt> = r1;
        r0.<javax.security.auth.callback.PasswordCallback: boolean echoOn> = z0;
        return;
    }

    public java.lang.String getPrompt()
    {
        javax.security.auth.callback.PasswordCallback r0;
        java.lang.String $r1;

        r0 := @this: javax.security.auth.callback.PasswordCallback;
        $r1 = r0.<javax.security.auth.callback.PasswordCallback: java.lang.String prompt>;
        return $r1;
    }

    public boolean isEchoOn()
    {
        javax.security.auth.callback.PasswordCallback r0;
        boolean $z0;

        r0 := @this: javax.security.auth.callback.PasswordCallback;
        $z0 = r0.<javax.security.auth.callback.PasswordCallback: boolean echoOn>;
        return $z0;
    }

    public void setPassword(char[])
    {
        javax.security.auth.callback.PasswordCallback r0;
        char[] r1, $r3;
        java.lang.Object $r4;

        r0 := @this: javax.security.auth.callback.PasswordCallback;
        r1 := @parameter0: char[];
        if r1 != null goto label0;

        $r3 = null;
        goto label1;

     label0:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (char[]) $r4;

     label1:
        r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword> = $r3;
        return;
    }

    public char[] getPassword()
    {
        javax.security.auth.callback.PasswordCallback r0;
        char[] $r1, $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: javax.security.auth.callback.PasswordCallback;
        $r1 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;
        if $r1 != null goto label0;

        $r2 = null;
        goto label1;

     label0:
        $r3 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (char[]) $r4;

     label1:
        return $r2;
    }

    public void clearPassword()
    {
        javax.security.auth.callback.PasswordCallback r0;
        int i0, $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: javax.security.auth.callback.PasswordCallback;
        $r1 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;
        if $r1 == null goto label1;

        i0 = 0;

     label0:
        $r2 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;
        $i1 = lengthof $r2;
        if i0 >= $i1 goto label1;

        $r3 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;
        $r3[i0] = 32;
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }
}
