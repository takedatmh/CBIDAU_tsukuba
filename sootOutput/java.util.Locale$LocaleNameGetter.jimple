class java.util.Locale$LocaleNameGetter extends java.lang.Object implements sun.util.LocaleServiceProviderPool$LocalizedObjectGetter
{
    private static final java.util.Locale$LocaleNameGetter INSTANCE;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        java.util.Locale$LocaleNameGetter r0;

        r0 := @this: java.util.Locale$LocaleNameGetter;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public transient java.lang.String getObject(java.util.spi.LocaleNameProvider, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.util.Locale$LocaleNameGetter r0;
        java.util.spi.LocaleNameProvider r1;
        java.util.Locale r2;
        java.lang.String r3, r5, $r10, $r11, $r12, $r13;
        java.lang.Object[] r4;
        boolean $z0, $z1;
        int i0, $i1;
        java.lang.AssertionError $r6, $r14;
        java.lang.Object $r7, $r9;
        java.lang.Integer $r8;

        r0 := @this: java.util.Locale$LocaleNameGetter;
        r1 := @parameter0: java.util.spi.LocaleNameProvider;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $z0 = <java.util.Locale$LocaleNameGetter: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $i1 = lengthof r4;
        if $i1 == 2 goto label0;

        $r6 = new java.lang.AssertionError;
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
        throw $r6;

     label0:
        $r7 = r4[0];
        $r8 = (java.lang.Integer) $r7;
        i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
        $r9 = r4[1];
        r5 = (java.lang.String) $r9;
        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        $r10 = virtualinvoke r1.<java.util.spi.LocaleNameProvider: java.lang.String getDisplayLanguage(java.lang.String,java.util.Locale)>(r5, r2);
        return $r10;

     label2:
        $r11 = virtualinvoke r1.<java.util.spi.LocaleNameProvider: java.lang.String getDisplayCountry(java.lang.String,java.util.Locale)>(r5, r2);
        return $r11;

     label3:
        $r12 = virtualinvoke r1.<java.util.spi.LocaleNameProvider: java.lang.String getDisplayVariant(java.lang.String,java.util.Locale)>(r5, r2);
        return $r12;

     label4:
        $r13 = virtualinvoke r1.<java.util.spi.LocaleNameProvider: java.lang.String getDisplayScript(java.lang.String,java.util.Locale)>(r5, r2);
        return $r13;

     label5:
        $z1 = <java.util.Locale$LocaleNameGetter: boolean $assertionsDisabled>;
        if $z1 != 0 goto label6;

        $r14 = new java.lang.AssertionError;
        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();
        throw $r14;

     label6:
        return null;
    }

    public volatile java.lang.Object getObject(java.lang.Object, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.util.Locale$LocaleNameGetter r0;
        java.lang.Object r1;
        java.util.Locale r2;
        java.lang.String r3, $r6;
        java.lang.Object[] r4;
        java.util.spi.LocaleNameProvider $r5;

        r0 := @this: java.util.Locale$LocaleNameGetter;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $r5 = (java.util.spi.LocaleNameProvider) r1;
        $r6 = virtualinvoke r0.<java.util.Locale$LocaleNameGetter: java.lang.String getObject(java.util.spi.LocaleNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>($r5, r2, r3, r4);
        return $r6;
    }

    static java.util.Locale$LocaleNameGetter access$500()
    {
        java.util.Locale$LocaleNameGetter $r0;

        $r0 = <java.util.Locale$LocaleNameGetter: java.util.Locale$LocaleNameGetter INSTANCE>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.util.Locale$LocaleNameGetter $r1;

        $r0 = class "java/util/Locale";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.util.Locale$LocaleNameGetter: boolean $assertionsDisabled> = $z1;
        $r1 = new java.util.Locale$LocaleNameGetter;
        specialinvoke $r1.<java.util.Locale$LocaleNameGetter: void <init>()>();
        <java.util.Locale$LocaleNameGetter: java.util.Locale$LocaleNameGetter INSTANCE> = $r1;
        return;
    }
}
