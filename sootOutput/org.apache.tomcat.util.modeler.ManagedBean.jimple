public class org.apache.tomcat.util.modeler.ManagedBean extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.lang.String BASE_MBEAN;
    static final java.lang.Object[] NO_ARGS_PARAM;
    static final java.lang.Class[] NO_ARGS_PARAM_SIG;
    private final java.util.concurrent.locks.ReadWriteLock mBeanInfoLock;
    transient javax.management.MBeanInfo info;
    private java.util.Map attributes;
    private java.util.Map operations;
    protected java.lang.String className;
    protected java.lang.String description;
    protected java.lang.String domain;
    protected java.lang.String group;
    protected java.lang.String name;
    protected org.apache.tomcat.util.modeler.NotificationInfo[] notifications;
    protected java.lang.String type;

    static void <clinit>()
    {
        java.lang.Object[] $r0;
        java.lang.Class[] $r1;

        $r0 = newarray (java.lang.Object)[0];
        <org.apache.tomcat.util.modeler.ManagedBean: java.lang.Object[] NO_ARGS_PARAM> = $r0;
        $r1 = newarray (java.lang.Class)[0];
        <org.apache.tomcat.util.modeler.ManagedBean: java.lang.Class[] NO_ARGS_PARAM_SIG> = $r1;
        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.util.concurrent.locks.ReentrantReadWriteLock $r1;
        org.apache.tomcat.util.modeler.AttributeInfo r2, $r6;
        java.util.HashMap $r3, $r4;
        org.apache.tomcat.util.modeler.NotificationInfo[] $r5;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.concurrent.locks.ReentrantReadWriteLock;
        specialinvoke $r1.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.concurrent.locks.ReadWriteLock mBeanInfoLock> = $r1;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo info> = null;
        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map attributes> = $r3;
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map operations> = $r4;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String className> = "org.apache.tomcat.util.modeler.BaseModelMBean";
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String description> = null;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String domain> = null;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String group> = null;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String name> = null;
        $r5 = newarray (org.apache.tomcat.util.modeler.NotificationInfo)[0];
        r0.<org.apache.tomcat.util.modeler.ManagedBean: org.apache.tomcat.util.modeler.NotificationInfo[] notifications> = $r5;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String type> = null;
        $r6 = new org.apache.tomcat.util.modeler.AttributeInfo;
        specialinvoke $r6.<org.apache.tomcat.util.modeler.AttributeInfo: void <init>()>();
        r2 = $r6;
        virtualinvoke r2.<org.apache.tomcat.util.modeler.AttributeInfo: void setName(java.lang.String)>("modelerType");
        virtualinvoke r2.<org.apache.tomcat.util.modeler.AttributeInfo: void setDescription(java.lang.String)>("Type of the modeled resource. Can be set only once");
        virtualinvoke r2.<org.apache.tomcat.util.modeler.AttributeInfo: void setType(java.lang.String)>("java.lang.String");
        virtualinvoke r2.<org.apache.tomcat.util.modeler.AttributeInfo: void setWriteable(boolean)>(0);
        virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: void addAttribute(org.apache.tomcat.util.modeler.AttributeInfo)>(r2);
        return;
    }

    public org.apache.tomcat.util.modeler.AttributeInfo[] getAttributes()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        org.apache.tomcat.util.modeler.AttributeInfo[] r1;
        java.util.Map $r2, $r3;
        int $i0;
        java.util.Collection $r4;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r2 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map attributes>;
        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();
        r1 = newarray (org.apache.tomcat.util.modeler.AttributeInfo)[$i0];
        $r3 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map attributes>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();
        interfaceinvoke $r4.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r1);
        return r1;
    }

    public java.lang.String getClassName()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String className>;
        return $r1;
    }

    public void setClassName(java.lang.String)
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String r1;
        java.util.concurrent.locks.Lock r2;
        java.lang.Throwable r3, $r5;
        java.util.concurrent.locks.ReadWriteLock $r4;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.concurrent.locks.ReadWriteLock mBeanInfoLock>;
        r2 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label0:
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String className> = r1;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo info> = null;
        goto label2;

     label1:
        $r5 := @caughtexception;
        r3 = $r5;
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r3;

     label2:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public java.lang.String getDescription()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String description>;
        return $r1;
    }

    public void setDescription(java.lang.String)
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String r1;
        java.util.concurrent.locks.Lock r2;
        java.lang.Throwable r3, $r5;
        java.util.concurrent.locks.ReadWriteLock $r4;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.concurrent.locks.ReadWriteLock mBeanInfoLock>;
        r2 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label0:
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String description> = r1;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo info> = null;
        goto label2;

     label1:
        $r5 := @caughtexception;
        r3 = $r5;
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r3;

     label2:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public java.lang.String getDomain()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String domain>;
        return $r1;
    }

    public void setDomain(java.lang.String)
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String r1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String domain> = r1;
        return;
    }

    public java.lang.String getGroup()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String group>;
        return $r1;
    }

    public void setGroup(java.lang.String)
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String r1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String group> = r1;
        return;
    }

    public java.lang.String getName()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String name>;
        return $r1;
    }

    public void setName(java.lang.String)
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String r1;
        java.util.concurrent.locks.Lock r2;
        java.lang.Throwable r3, $r5;
        java.util.concurrent.locks.ReadWriteLock $r4;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.concurrent.locks.ReadWriteLock mBeanInfoLock>;
        r2 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label0:
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String name> = r1;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo info> = null;
        goto label2;

     label1:
        $r5 := @caughtexception;
        r3 = $r5;
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r3;

     label2:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public org.apache.tomcat.util.modeler.NotificationInfo[] getNotifications()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        org.apache.tomcat.util.modeler.NotificationInfo[] $r1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.ManagedBean: org.apache.tomcat.util.modeler.NotificationInfo[] notifications>;
        return $r1;
    }

    public org.apache.tomcat.util.modeler.OperationInfo[] getOperations()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        org.apache.tomcat.util.modeler.OperationInfo[] r1;
        java.util.Map $r2, $r3;
        int $i0;
        java.util.Collection $r4;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r2 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map operations>;
        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();
        r1 = newarray (org.apache.tomcat.util.modeler.OperationInfo)[$i0];
        $r3 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map operations>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();
        interfaceinvoke $r4.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r1);
        return r1;
    }

    public java.lang.String getType()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String type>;
        return $r1;
    }

    public void setType(java.lang.String)
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String r1;
        java.util.concurrent.locks.Lock r2;
        java.lang.Throwable r3, $r5;
        java.util.concurrent.locks.ReadWriteLock $r4;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.concurrent.locks.ReadWriteLock mBeanInfoLock>;
        r2 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label0:
        r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String type> = r1;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo info> = null;
        goto label2;

     label1:
        $r5 := @caughtexception;
        r3 = $r5;
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r3;

     label2:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public void addAttribute(org.apache.tomcat.util.modeler.AttributeInfo)
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        org.apache.tomcat.util.modeler.AttributeInfo r1;
        java.util.Map $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: org.apache.tomcat.util.modeler.AttributeInfo;
        $r2 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map attributes>;
        $r3 = virtualinvoke r1.<org.apache.tomcat.util.modeler.AttributeInfo: java.lang.String getName()>();
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);
        return;
    }

    public void addNotification(org.apache.tomcat.util.modeler.NotificationInfo)
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        org.apache.tomcat.util.modeler.NotificationInfo r1;
        java.util.concurrent.locks.Lock r2;
        org.apache.tomcat.util.modeler.NotificationInfo[] r3, $r6, $r7, $r8, $r9;
        java.lang.Throwable r4, $r10;
        java.util.concurrent.locks.ReadWriteLock $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: org.apache.tomcat.util.modeler.NotificationInfo;
        $r5 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.concurrent.locks.ReadWriteLock mBeanInfoLock>;
        r2 = interfaceinvoke $r5.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label0:
        $r6 = r0.<org.apache.tomcat.util.modeler.ManagedBean: org.apache.tomcat.util.modeler.NotificationInfo[] notifications>;
        $i0 = lengthof $r6;
        $i1 = $i0 + 1;
        r3 = newarray (org.apache.tomcat.util.modeler.NotificationInfo)[$i1];
        $r7 = r0.<org.apache.tomcat.util.modeler.ManagedBean: org.apache.tomcat.util.modeler.NotificationInfo[] notifications>;
        $r8 = r0.<org.apache.tomcat.util.modeler.ManagedBean: org.apache.tomcat.util.modeler.NotificationInfo[] notifications>;
        $i2 = lengthof $r8;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r3, 0, $i2);
        $r9 = r0.<org.apache.tomcat.util.modeler.ManagedBean: org.apache.tomcat.util.modeler.NotificationInfo[] notifications>;
        $i3 = lengthof $r9;
        r3[$i3] = r1;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: org.apache.tomcat.util.modeler.NotificationInfo[] notifications> = r3;
        r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo info> = null;
        goto label2;

     label1:
        $r10 := @caughtexception;
        r4 = $r10;
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r4;

     label2:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public void addOperation(org.apache.tomcat.util.modeler.OperationInfo)
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        org.apache.tomcat.util.modeler.OperationInfo r1;
        java.util.Map $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: org.apache.tomcat.util.modeler.OperationInfo;
        $r2 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map operations>;
        $r3 = specialinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String createOperationKey(org.apache.tomcat.util.modeler.OperationInfo)>(r1);
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);
        return;
    }

    public javax.management.DynamicMBean createMBean() throws javax.management.InstanceNotFoundException, javax.management.MBeanException, javax.management.RuntimeOperationsException
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        javax.management.DynamicMBean $r1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(null);
        return $r1;
    }

    public javax.management.DynamicMBean createMBean(java.lang.Object) throws javax.management.InstanceNotFoundException, javax.management.MBeanException, javax.management.RuntimeOperationsException
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.Object r1, $r20;
        null_type n0;
        java.lang.Class r2;
        java.lang.Exception r3, r4, $r10, $r14, r15, $r23, r24;
        java.lang.StringBuilder $r5, $r18, $r26, $r28;
        java.lang.String $r6, $r9, $r13, $r17, $r19, $r27, $r29;
        boolean $z0;
        org.apache.tomcat.util.modeler.BaseModelMBean $r7, r8;
        java.lang.Thread $r11;
        java.lang.ClassLoader r12;
        javax.management.MBeanException $r16, $r25;
        javax.management.RuntimeOperationsException $r21, r22;
        javax.management.InstanceNotFoundException $r30, r31;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.Object;
        n0 = null;
        $r6 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getClassName()>();
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.tomcat.util.modeler.BaseModelMBean");
        if $z0 == 0 goto label0;

        $r7 = new org.apache.tomcat.util.modeler.BaseModelMBean;
        specialinvoke $r7.<org.apache.tomcat.util.modeler.BaseModelMBean: void <init>()>();
        r8 = $r7;
        goto label13;

     label0:
        r2 = null;
        r3 = null;

     label1:
        $r9 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getClassName()>();
        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r4 = $r10;

     label4:
        if r2 != null goto label8;

     label5:
        $r11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r12 = virtualinvoke $r11.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        if r12 == null goto label8;

        $r13 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getClassName()>();
        r2 = virtualinvoke r12.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r13);

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;
        r15 = $r14;
        r3 = r15;

     label8:
        if r2 != null goto label9;

        $r16 = new javax.management.MBeanException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot load ModelMBean class ");
        $r17 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getClassName()>();
        $r18 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<javax.management.MBeanException: void <init>(java.lang.Exception,java.lang.String)>(r3, $r19);
        throw $r16;

     label9:
        $r20 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();
        r8 = (org.apache.tomcat.util.modeler.BaseModelMBean) $r20;

     label10:
        goto label13;

     label11:
        $r21 := @caughtexception;
        r22 = $r21;
        throw r22;

     label12:
        $r23 := @caughtexception;
        r24 = $r23;
        $r25 = new javax.management.MBeanException;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot instantiate ModelMBean of class ");
        $r27 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getClassName()>();
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r25.<javax.management.MBeanException: void <init>(java.lang.Exception,java.lang.String)>(r24, $r29);
        throw $r25;

     label13:
        virtualinvoke r8.<org.apache.tomcat.util.modeler.BaseModelMBean: void setManagedBean(org.apache.tomcat.util.modeler.ManagedBean)>(r0);

     label14:
        if r1 == null goto label17;

        virtualinvoke r8.<org.apache.tomcat.util.modeler.BaseModelMBean: void setManagedResource(java.lang.Object,java.lang.String)>(r1, "ObjectReference");

     label15:
        goto label17;

     label16:
        $r30 := @caughtexception;
        r31 = $r30;
        throw r31;

     label17:
        return r8;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label5 to label6 with label7;
        catch javax.management.RuntimeOperationsException from label9 to label10 with label11;
        catch java.lang.Exception from label9 to label10 with label12;
        catch javax.management.InstanceNotFoundException from label14 to label15 with label16;
    }

    javax.management.MBeanInfo getMBeanInfo()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.util.concurrent.locks.Lock r1, r12;
        javax.management.MBeanInfo r2, r6, $r9, $r23;
        java.lang.Throwable r3, r7, $r10, $r27;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        javax.management.MBeanOperationInfo[] r4;
        javax.management.MBeanNotificationInfo[] r5;
        java.util.concurrent.locks.ReadWriteLock $r8, $r11;
        org.apache.tomcat.util.modeler.AttributeInfo[] r13;
        javax.management.MBeanAttributeInfo[] r14;
        org.apache.tomcat.util.modeler.AttributeInfo $r15;
        javax.management.MBeanAttributeInfo $r16;
        org.apache.tomcat.util.modeler.OperationInfo[] r17;
        org.apache.tomcat.util.modeler.OperationInfo $r18;
        javax.management.MBeanOperationInfo $r19;
        org.apache.tomcat.util.modeler.NotificationInfo[] r20;
        org.apache.tomcat.util.modeler.NotificationInfo $r21;
        javax.management.MBeanNotificationInfo $r22;
        java.lang.String $r24, $r25;
        javax.management.MBeanConstructorInfo[] $r26;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r8 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.concurrent.locks.ReadWriteLock mBeanInfoLock>;
        r1 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void lock()>();

     label0:
        $r9 = r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo info>;
        if $r9 == null goto label3;

        r2 = r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo info>;

     label1:
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void unlock()>();
        return r2;

     label2:
        $r10 := @caughtexception;
        r3 = $r10;
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r3;

     label3:
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void unlock()>();
        $r11 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.concurrent.locks.ReadWriteLock mBeanInfoLock>;
        r12 = interfaceinvoke $r11.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();
        interfaceinvoke r12.<java.util.concurrent.locks.Lock: void lock()>();

     label4:
        r13 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: org.apache.tomcat.util.modeler.AttributeInfo[] getAttributes()>();
        $i3 = lengthof r13;
        r14 = newarray (javax.management.MBeanAttributeInfo)[$i3];
        i0 = 0;
        goto label6;

     label5:
        $r15 = r13[i0];
        $r16 = virtualinvoke $r15.<org.apache.tomcat.util.modeler.AttributeInfo: javax.management.MBeanAttributeInfo createAttributeInfo()>();
        r14[i0] = $r16;
        i0 = i0 + 1;

     label6:
        $i4 = lengthof r13;
        if i0 < $i4 goto label5;

        r17 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: org.apache.tomcat.util.modeler.OperationInfo[] getOperations()>();
        $i5 = lengthof r17;
        r4 = newarray (javax.management.MBeanOperationInfo)[$i5];
        i1 = 0;
        goto label8;

     label7:
        $r18 = r17[i1];
        $r19 = virtualinvoke $r18.<org.apache.tomcat.util.modeler.OperationInfo: javax.management.MBeanOperationInfo createOperationInfo()>();
        r4[i1] = $r19;
        i1 = i1 + 1;

     label8:
        $i6 = lengthof r17;
        if i1 < $i6 goto label7;

        r20 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: org.apache.tomcat.util.modeler.NotificationInfo[] getNotifications()>();
        $i7 = lengthof r20;
        r5 = newarray (javax.management.MBeanNotificationInfo)[$i7];
        i2 = 0;
        goto label10;

     label9:
        $r21 = r20[i2];
        $r22 = virtualinvoke $r21.<org.apache.tomcat.util.modeler.NotificationInfo: javax.management.MBeanNotificationInfo createNotificationInfo()>();
        r5[i2] = $r22;
        i2 = i2 + 1;

     label10:
        $i8 = lengthof r20;
        if i2 < $i8 goto label9;

        $r23 = new javax.management.MBeanInfo;
        $r24 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getClassName()>();
        $r25 = virtualinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDescription()>();
        $r26 = newarray (javax.management.MBeanConstructorInfo)[0];
        specialinvoke $r23.<javax.management.MBeanInfo: void <init>(java.lang.String,java.lang.String,javax.management.MBeanAttributeInfo[],javax.management.MBeanConstructorInfo[],javax.management.MBeanOperationInfo[],javax.management.MBeanNotificationInfo[])>($r24, $r25, r14, $r26, r4, r5);
        r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo info> = $r23;
        r6 = r0.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo info>;

     label11:
        interfaceinvoke r12.<java.util.concurrent.locks.Lock: void unlock()>();
        return r6;

     label12:
        $r27 := @caughtexception;
        r7 = $r27;
        interfaceinvoke r12.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r7;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label4 to label11 with label12;
    }

    public java.lang.String toString()
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r4, $r7, $r10, $r12, $r14, $r17, $r20;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean[");
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name=");
        $r4 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String name>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", className=");
        $r7 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String className>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", description=");
        $r10 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String description>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String group>;
        if $r12 == null goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", group=");
        $r14 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String group>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label0:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");
        $r17 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String type>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r20 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r20;
    }

    java.lang.reflect.Method getGetter(java.lang.String, org.apache.tomcat.util.modeler.BaseModelMBean, java.lang.Object) throws javax.management.AttributeNotFoundException, javax.management.ReflectionException
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String r1, r7, $r16, $r21, $r34;
        org.apache.tomcat.util.modeler.BaseModelMBean r2, r22;
        java.lang.Object r3, $r11, r26;
        java.lang.reflect.Method r4;
        org.apache.tomcat.util.modeler.AttributeInfo r5;
        java.lang.StringBuilder $r6, $r13, $r14, $r15, $r18, $r19, $r20, $r32, $r33;
        null_type n0;
        java.lang.NoSuchMethodException r8, r9, $r25, $r29, r30;
        java.util.Map $r10;
        javax.management.AttributeNotFoundException $r12, $r17;
        java.lang.Class $r23, $r27;
        java.lang.Class[] $r24, $r28;
        javax.management.ReflectionException $r31;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.apache.tomcat.util.modeler.BaseModelMBean;
        r3 := @parameter2: java.lang.Object;
        r4 = null;
        $r10 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map attributes>;
        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r5 = (org.apache.tomcat.util.modeler.AttributeInfo) $r11;
        if r5 != null goto label0;

        $r12 = new javax.management.AttributeNotFoundException;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(" Cannot find attribute ");
        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r12.<javax.management.AttributeNotFoundException: void <init>(java.lang.String)>($r16);
        throw $r12;

     label0:
        r7 = virtualinvoke r5.<org.apache.tomcat.util.modeler.AttributeInfo: java.lang.String getGetMethod()>();
        if r7 != null goto label1;

        $r17 = new javax.management.AttributeNotFoundException;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot find attribute ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" get method name");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r17.<javax.management.AttributeNotFoundException: void <init>(java.lang.String)>($r21);
        throw $r17;

     label1:
        n0 = null;
        r8 = null;

     label2:
        r22 = r2;
        $r23 = virtualinvoke r22.<java.lang.Object: java.lang.Class getClass()>();
        $r24 = <org.apache.tomcat.util.modeler.ManagedBean: java.lang.Class[] NO_ARGS_PARAM_SIG>;
        r4 = virtualinvoke $r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r7, $r24);

     label3:
        goto label5;

     label4:
        $r25 := @caughtexception;
        r9 = $r25;
        r8 = r9;

     label5:
        if r4 != null goto label9;

        if r3 == null goto label9;

     label6:
        r26 = r3;
        $r27 = virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>();
        $r28 = <org.apache.tomcat.util.modeler.ManagedBean: java.lang.Class[] NO_ARGS_PARAM_SIG>;
        r4 = virtualinvoke $r27.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r7, $r28);
        r8 = null;

     label7:
        goto label9;

     label8:
        $r29 := @caughtexception;
        r30 = $r29;
        r8 = r30;

     label9:
        if r8 == null goto label10;

        $r31 = new javax.management.ReflectionException;
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot find getter method ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r31.<javax.management.ReflectionException: void <init>(java.lang.Exception,java.lang.String)>(r8, $r34);
        throw $r31;

     label10:
        return r4;

        catch java.lang.NoSuchMethodException from label2 to label3 with label4;
        catch java.lang.NoSuchMethodException from label6 to label7 with label8;
    }

    public java.lang.reflect.Method getSetter(java.lang.String, org.apache.tomcat.util.modeler.BaseModelMBean, java.lang.Object) throws javax.management.AttributeNotFoundException, javax.management.ReflectionException
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String r1, r7, r8, $r16, $r21, $r36;
        org.apache.tomcat.util.modeler.BaseModelMBean r2, r24;
        java.lang.Object r3, $r13, r27;
        java.lang.reflect.Method r4;
        org.apache.tomcat.util.modeler.AttributeInfo r5;
        java.lang.StringBuilder $r6, $r15, $r18, $r19, $r20, $r32, $r33, $r34, $r35;
        java.lang.Class[] r9, $r22;
        null_type n0;
        java.lang.NoSuchMethodException r10, r11, $r26, $r29, r30;
        java.util.Map $r12;
        javax.management.AttributeNotFoundException $r14, $r17;
        java.lang.Class $r23, $r25, $r28;
        javax.management.ReflectionException $r31;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.apache.tomcat.util.modeler.BaseModelMBean;
        r3 := @parameter2: java.lang.Object;
        r4 = null;
        $r12 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map attributes>;
        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r5 = (org.apache.tomcat.util.modeler.AttributeInfo) $r13;
        if r5 != null goto label0;

        $r14 = new javax.management.AttributeNotFoundException;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(" Cannot find attribute ");
        $r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<javax.management.AttributeNotFoundException: void <init>(java.lang.String)>($r16);
        throw $r14;

     label0:
        r7 = virtualinvoke r5.<org.apache.tomcat.util.modeler.AttributeInfo: java.lang.String getSetMethod()>();
        if r7 != null goto label1;

        $r17 = new javax.management.AttributeNotFoundException;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot find attribute ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" set method name");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r17.<javax.management.AttributeNotFoundException: void <init>(java.lang.String)>($r21);
        throw $r17;

     label1:
        r8 = virtualinvoke r5.<org.apache.tomcat.util.modeler.AttributeInfo: java.lang.String getType()>();
        $r22 = newarray (java.lang.Class)[1];
        $r23 = staticinvoke <org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Class getAttributeClass(java.lang.String)>(r8);
        $r22[0] = $r23;
        r9 = $r22;
        n0 = null;
        r10 = null;

     label2:
        r24 = r2;
        $r25 = virtualinvoke r24.<java.lang.Object: java.lang.Class getClass()>();
        r4 = virtualinvoke $r25.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r7, r9);

     label3:
        goto label5;

     label4:
        $r26 := @caughtexception;
        r11 = $r26;
        r10 = r11;

     label5:
        if r4 != null goto label9;

        if r3 == null goto label9;

     label6:
        r27 = r3;
        $r28 = virtualinvoke r27.<java.lang.Object: java.lang.Class getClass()>();
        r4 = virtualinvoke $r28.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r7, r9);
        r10 = null;

     label7:
        goto label9;

     label8:
        $r29 := @caughtexception;
        r30 = $r29;
        r10 = r30;

     label9:
        if r10 == null goto label10;

        $r31 = new javax.management.ReflectionException;
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot find setter method ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r31.<javax.management.ReflectionException: void <init>(java.lang.Exception,java.lang.String)>(r10, $r36);
        throw $r31;

     label10:
        return r4;

        catch java.lang.NoSuchMethodException from label2 to label3 with label4;
        catch java.lang.NoSuchMethodException from label6 to label7 with label8;
    }

    public java.lang.reflect.Method getInvoke(java.lang.String, java.lang.Object[], java.lang.String[], org.apache.tomcat.util.modeler.BaseModelMBean, java.lang.Object) throws javax.management.MBeanException, javax.management.ReflectionException
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String r1, $r14, $r20, $r23, $r24, $r37;
        java.lang.Object[] r2;
        java.lang.String[] r3;
        org.apache.tomcat.util.modeler.BaseModelMBean r4, r26;
        java.lang.Object r5, $r15, r29;
        java.lang.reflect.Method r6;
        java.lang.IllegalArgumentException $r7;
        org.apache.tomcat.util.modeler.OperationInfo r8;
        java.lang.Class[] r9;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.NoSuchMethodException r10, r11, $r28, $r31, r32;
        javax.management.RuntimeOperationsException $r12;
        java.util.Map $r13;
        javax.management.MBeanException $r16;
        javax.management.ServiceNotFoundException $r17;
        java.lang.StringBuilder $r18, $r19, $r21, $r22, $r34, $r35, $r36;
        java.lang.Class $r25, $r27, $r30;
        null_type n0;
        javax.management.ReflectionException $r33;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object[];
        r3 := @parameter2: java.lang.String[];
        r4 := @parameter3: org.apache.tomcat.util.modeler.BaseModelMBean;
        r5 := @parameter4: java.lang.Object;
        r6 = null;
        if r2 != null goto label0;

        r2 = newarray (java.lang.Object)[0];

     label0:
        if r3 != null goto label1;

        r3 = newarray (java.lang.String)[0];

     label1:
        $i1 = lengthof r2;
        $i2 = lengthof r3;
        if $i1 == $i2 goto label2;

        $r12 = new javax.management.RuntimeOperationsException;
        $r7 = new java.lang.IllegalArgumentException;
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Inconsistent arguments and signature");
        specialinvoke $r12.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r7, "Inconsistent arguments and signature");
        throw $r12;

     label2:
        $r13 = r0.<org.apache.tomcat.util.modeler.ManagedBean: java.util.Map operations>;
        $r14 = specialinvoke r0.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String createOperationKey(java.lang.String,java.lang.String[])>(r1, r3);
        $r15 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);
        r8 = (org.apache.tomcat.util.modeler.OperationInfo) $r15;
        if r8 != null goto label3;

        $r16 = new javax.management.MBeanException;
        $r17 = new javax.management.ServiceNotFoundException;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot find operation ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r17.<javax.management.ServiceNotFoundException: void <init>(java.lang.String)>($r20);
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot find operation ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<javax.management.MBeanException: void <init>(java.lang.Exception,java.lang.String)>($r17, $r23);
        throw $r16;

     label3:
        $i3 = lengthof r3;
        r9 = newarray (java.lang.Class)[$i3];
        i0 = 0;
        goto label5;

     label4:
        $r24 = r3[i0];
        $r25 = staticinvoke <org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Class getAttributeClass(java.lang.String)>($r24);
        r9[i0] = $r25;
        i0 = i0 + 1;

     label5:
        $i4 = lengthof r3;
        if i0 < $i4 goto label4;

        n0 = null;
        r10 = null;

     label6:
        r26 = r4;
        $r27 = virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>();
        r6 = virtualinvoke $r27.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, r9);

     label7:
        goto label9;

     label8:
        $r28 := @caughtexception;
        r11 = $r28;
        r10 = r11;

     label9:
        if r6 != null goto label12;

        if r5 == null goto label12;

        r29 = r5;
        $r30 = virtualinvoke r29.<java.lang.Object: java.lang.Class getClass()>();
        r6 = virtualinvoke $r30.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, r9);

     label10:
        goto label12;

     label11:
        $r31 := @caughtexception;
        r32 = $r31;
        r10 = r32;

     label12:
        if r6 != null goto label13;

        $r33 = new javax.management.ReflectionException;
        $r34 = new java.lang.StringBuilder;
        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot find method ");
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with this signature");
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r33.<javax.management.ReflectionException: void <init>(java.lang.Exception,java.lang.String)>(r10, $r37);
        throw $r33;

     label13:
        return r6;

        catch java.lang.NoSuchMethodException from label6 to label7 with label8;
        catch java.lang.NoSuchMethodException from label9 to label10 with label11;
    }

    private java.lang.String createOperationKey(org.apache.tomcat.util.modeler.OperationInfo)
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        org.apache.tomcat.util.modeler.OperationInfo r1;
        java.lang.StringBuilder $r2, r3;
        org.apache.tomcat.util.modeler.ParameterInfo[] r4, $r8;
        int i0, i1;
        org.apache.tomcat.util.modeler.ParameterInfo r5;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: org.apache.tomcat.util.modeler.OperationInfo;
        $r2 = new java.lang.StringBuilder;
        $r6 = virtualinvoke r1.<org.apache.tomcat.util.modeler.OperationInfo: java.lang.String getName()>();
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);
        r3 = $r2;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
        $r8 = virtualinvoke r1.<org.apache.tomcat.util.modeler.OperationInfo: org.apache.tomcat.util.modeler.ParameterInfo[] getSignature()>();
        r4 = $r8;
        i0 = lengthof $r8;
        i1 = 0;
        goto label1;

     label0:
        r5 = r4[i1];
        $r9 = virtualinvoke r5.<org.apache.tomcat.util.modeler.ParameterInfo: java.lang.String getType()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
        i1 = i1 + 1;

     label1:
        if i1 < i0 goto label0;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r13;
    }

    private java.lang.String createOperationKey(java.lang.String, java.lang.String[])
    {
        org.apache.tomcat.util.modeler.ManagedBean r0;
        java.lang.String r1, r6, $r12;
        java.lang.String[] r2, r5;
        java.lang.StringBuilder $r3, r4;
        int i0, i1;

        r0 := @this: org.apache.tomcat.util.modeler.ManagedBean;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String[];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);
        r4 = $r3;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
        r5 = r2;
        i0 = lengthof r2;
        i1 = 0;
        goto label1;

     label0:
        r6 = r5[i1];
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
        i1 = i1 + 1;

     label1:
        if i1 < i0 goto label0;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        $r12 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r12;
    }
}
