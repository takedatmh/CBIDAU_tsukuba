class java.security.Provider$EngineDescription extends java.lang.Object
{
    final java.lang.String name;
    final boolean supportsParameter;
    final java.lang.String constructorParameterClassName;
    private volatile java.lang.Class constructorParameterClass;

    void <init>(java.lang.String, boolean, java.lang.String)
    {
        java.security.Provider$EngineDescription r0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: java.security.Provider$EngineDescription;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        r2 := @parameter2: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.security.Provider$EngineDescription: java.lang.String name> = r1;
        r0.<java.security.Provider$EngineDescription: boolean supportsParameter> = z0;
        r0.<java.security.Provider$EngineDescription: java.lang.String constructorParameterClassName> = r2;
        return;
    }

    java.lang.Class getConstructorParameterClass() throws java.lang.ClassNotFoundException
    {
        java.security.Provider$EngineDescription r0;
        java.lang.Class r1;
        java.lang.String $r2;

        r0 := @this: java.security.Provider$EngineDescription;
        r1 = r0.<java.security.Provider$EngineDescription: java.lang.Class constructorParameterClass>;
        if r1 != null goto label0;

        $r2 = r0.<java.security.Provider$EngineDescription: java.lang.String constructorParameterClassName>;
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r2);
        r0.<java.security.Provider$EngineDescription: java.lang.Class constructorParameterClass> = r1;

     label0:
        return r1;
    }
}
