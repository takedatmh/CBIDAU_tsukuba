public class java.text.MessageFormat$Field extends java.text.Format$Field
{
    private static final long serialVersionUID;
    public static final java.text.MessageFormat$Field ARGUMENT;

    protected void <init>(java.lang.String)
    {
        java.text.MessageFormat$Field r0;
        java.lang.String r1;

        r0 := @this: java.text.MessageFormat$Field;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.text.Format$Field: void <init>(java.lang.String)>(r1);
        return;
    }

    protected java.lang.Object readResolve() throws java.io.InvalidObjectException
    {
        java.text.MessageFormat$Field r0, $r3;
        java.lang.Class $r1;
        java.io.InvalidObjectException $r2;

        r0 := @this: java.text.MessageFormat$Field;
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r1 == class "java/text/MessageFormat$Field" goto label0;

        $r2 = new java.io.InvalidObjectException;
        specialinvoke $r2.<java.io.InvalidObjectException: void <init>(java.lang.String)>("subclass didn\'t correctly implement readResolve");
        throw $r2;

     label0:
        $r3 = <java.text.MessageFormat$Field: java.text.MessageFormat$Field ARGUMENT>;
        return $r3;
    }

    static void <clinit>()
    {
        java.text.MessageFormat$Field $r0;

        $r0 = new java.text.MessageFormat$Field;
        specialinvoke $r0.<java.text.MessageFormat$Field: void <init>(java.lang.String)>("message argument field");
        <java.text.MessageFormat$Field: java.text.MessageFormat$Field ARGUMENT> = $r0;
        return;
    }
}
