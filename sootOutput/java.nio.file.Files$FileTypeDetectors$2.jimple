final class java.nio.file.Files$FileTypeDetectors$2 extends java.lang.Object implements java.security.PrivilegedAction
{

    void <init>()
    {
        java.nio.file.Files$FileTypeDetectors$2 r0;

        r0 := @this: java.nio.file.Files$FileTypeDetectors$2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.util.List run()
    {
        java.nio.file.Files$FileTypeDetectors$2 r0;
        java.util.ArrayList $r1, r2;
        java.util.ServiceLoader r3;
        java.util.Iterator r4;
        java.nio.file.spi.FileTypeDetector r5;
        java.lang.ClassLoader $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: java.nio.file.Files$FileTypeDetectors$2;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r6 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();
        r3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(class "java/nio/file/spi/FileTypeDetector", $r6);
        r4 = virtualinvoke r3.<java.util.ServiceLoader: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.nio.file.spi.FileTypeDetector) $r7;
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);
        goto label0;

     label1:
        return r2;
    }

    public volatile java.lang.Object run()
    {
        java.nio.file.Files$FileTypeDetectors$2 r0;
        java.util.List $r1;

        r0 := @this: java.nio.file.Files$FileTypeDetectors$2;
        $r1 = virtualinvoke r0.<java.nio.file.Files$FileTypeDetectors$2: java.util.List run()>();
        return $r1;
    }
}
