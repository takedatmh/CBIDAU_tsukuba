public final class java.lang.StackTraceElement extends java.lang.Object implements java.io.Serializable
{
    private java.lang.String declaringClass;
    private java.lang.String methodName;
    private java.lang.String fileName;
    private int lineNumber;
    private static final long serialVersionUID;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int)
    {
        java.lang.StackTraceElement r0;
        java.lang.String r1, r2, r3, $r5, $r7;
        int i0;
        java.lang.Object $r4, $r6;

        r0 := @this: java.lang.StackTraceElement;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        i0 := @parameter3: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Declaring class is null");
        $r5 = (java.lang.String) $r4;
        r0.<java.lang.StackTraceElement: java.lang.String declaringClass> = $r5;
        $r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "Method name is null");
        $r7 = (java.lang.String) $r6;
        r0.<java.lang.StackTraceElement: java.lang.String methodName> = $r7;
        r0.<java.lang.StackTraceElement: java.lang.String fileName> = r3;
        r0.<java.lang.StackTraceElement: int lineNumber> = i0;
        return;
    }

    public java.lang.String getFileName()
    {
        java.lang.StackTraceElement r0;
        java.lang.String $r1;

        r0 := @this: java.lang.StackTraceElement;
        $r1 = r0.<java.lang.StackTraceElement: java.lang.String fileName>;
        return $r1;
    }

    public int getLineNumber()
    {
        java.lang.StackTraceElement r0;
        int $i0;

        r0 := @this: java.lang.StackTraceElement;
        $i0 = r0.<java.lang.StackTraceElement: int lineNumber>;
        return $i0;
    }

    public java.lang.String getClassName()
    {
        java.lang.StackTraceElement r0;
        java.lang.String $r1;

        r0 := @this: java.lang.StackTraceElement;
        $r1 = r0.<java.lang.StackTraceElement: java.lang.String declaringClass>;
        return $r1;
    }

    public java.lang.String getMethodName()
    {
        java.lang.StackTraceElement r0;
        java.lang.String $r1;

        r0 := @this: java.lang.StackTraceElement;
        $r1 = r0.<java.lang.StackTraceElement: java.lang.String methodName>;
        return $r1;
    }

    public boolean isNativeMethod()
    {
        java.lang.StackTraceElement r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.lang.StackTraceElement;
        $i0 = r0.<java.lang.StackTraceElement: int lineNumber>;
        if $i0 != -2 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.StackTraceElement r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r20, $r21, $r22;
        java.lang.String $r2, $r5, $r7, $r8, $r11, $r16, $r19, $r23;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: java.lang.StackTraceElement;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getClassName()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r5 = r0.<java.lang.StackTraceElement: java.lang.String methodName>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $z0 = virtualinvoke r0.<java.lang.StackTraceElement: boolean isNativeMethod()>();
        if $z0 == 0 goto label0;

        $r7 = "(Native Method)";
        goto label3;

     label0:
        $r8 = r0.<java.lang.StackTraceElement: java.lang.String fileName>;
        if $r8 == null goto label1;

        $i0 = r0.<java.lang.StackTraceElement: int lineNumber>;
        if $i0 < 0 goto label1;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
        $r11 = r0.<java.lang.StackTraceElement: java.lang.String fileName>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $i1 = r0.<java.lang.StackTraceElement: int lineNumber>;
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label3;

     label1:
        $r16 = r0.<java.lang.StackTraceElement: java.lang.String fileName>;
        if $r16 == null goto label2;

        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
        $r19 = r0.<java.lang.StackTraceElement: java.lang.String fileName>;
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r7 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label3;

     label2:
        $r7 = "(Unknown Source)";

     label3:
        $r22 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r23;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.StackTraceElement r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1;

        r0 := @this: java.lang.StackTraceElement;
        r1 := @parameter0: java.lang.Object;
        if r1 != r0 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof java.lang.StackTraceElement;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.lang.StackTraceElement) r1;
        $r3 = r2.<java.lang.StackTraceElement: java.lang.String declaringClass>;
        $r4 = r0.<java.lang.StackTraceElement: java.lang.String declaringClass>;
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z1 == 0 goto label2;

        $i0 = r2.<java.lang.StackTraceElement: int lineNumber>;
        $i1 = r0.<java.lang.StackTraceElement: int lineNumber>;
        if $i0 != $i1 goto label2;

        $r5 = r0.<java.lang.StackTraceElement: java.lang.String methodName>;
        $r6 = r2.<java.lang.StackTraceElement: java.lang.String methodName>;
        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6);
        if $z2 == 0 goto label2;

        $r7 = r0.<java.lang.StackTraceElement: java.lang.String fileName>;
        $r8 = r2.<java.lang.StackTraceElement: java.lang.String fileName>;
        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8);
        if $z3 == 0 goto label2;

        $z4 = 1;
        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public int hashCode()
    {
        java.lang.StackTraceElement r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, i9;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: java.lang.StackTraceElement;
        $r1 = r0.<java.lang.StackTraceElement: java.lang.String declaringClass>;
        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        $i2 = 31 * $i1;
        $r2 = r0.<java.lang.StackTraceElement: java.lang.String methodName>;
        $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>();
        i0 = $i2 + $i3;
        $i4 = 31 * i0;
        $r3 = r0.<java.lang.StackTraceElement: java.lang.String fileName>;
        $i5 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r3);
        i6 = $i4 + $i5;
        $i7 = 31 * i6;
        $i8 = r0.<java.lang.StackTraceElement: int lineNumber>;
        i9 = $i7 + $i8;
        return i9;
    }
}
