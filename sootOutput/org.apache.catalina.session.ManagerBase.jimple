public abstract class org.apache.catalina.session.ManagerBase extends org.apache.catalina.util.LifecycleMBeanBase implements org.apache.catalina.Manager
{
    private final org.apache.juli.logging.Log log;
    protected org.apache.catalina.Container container;
    protected boolean distributable;
    private static final java.lang.String info;
    private static final java.lang.String name;
    protected int maxInactiveInterval;
    protected static final int SESSION_ID_LENGTH_UNSET;
    protected int sessionIdLength;
    protected java.lang.String secureRandomClass;
    protected java.lang.String secureRandomAlgorithm;
    protected java.lang.String secureRandomProvider;
    protected org.apache.catalina.SessionIdGenerator sessionIdGenerator;
    protected java.lang.Class sessionIdGeneratorClass;
    protected volatile int sessionMaxAliveTime;
    private final java.lang.Object sessionMaxAliveTimeUpdateLock;
    protected static final int TIMING_STATS_CACHE_SIZE;
    protected final java.util.Deque sessionCreationTiming;
    protected final java.util.Deque sessionExpirationTiming;
    protected final java.util.concurrent.atomic.AtomicLong expiredSessions;
    protected java.util.Map sessions;
    protected long sessionCounter;
    protected volatile int maxActive;
    private final java.lang.Object maxActiveUpdateLock;
    protected int maxActiveSessions;
    protected int rejectedSessions;
    protected volatile int duplicates;
    protected long processingTime;
    private int count;
    protected int processExpiresFrequency;
    protected static final org.apache.tomcat.util.res.StringManager sm;
    protected final java.beans.PropertyChangeSupport support;
    private java.util.regex.Pattern sessionAttributeNamePattern;
    private java.util.regex.Pattern sessionAttributeValueClassNamePattern;
    private boolean warnOnSessionAttributeFilterFailure;

    static void <clinit>()
    {
        org.apache.tomcat.util.res.StringManager $r0;

        $r0 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.Class)>(class "org/apache/catalina/session/ManagerBase");
        <org.apache.catalina.session.ManagerBase: org.apache.tomcat.util.res.StringManager sm> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.juli.logging.Log $r1;
        java.lang.Object $r2, $r7;
        java.util.LinkedList $r3, $r4;
        java.util.concurrent.atomic.AtomicLong $r5;
        java.util.concurrent.ConcurrentHashMap $r6;
        java.beans.PropertyChangeSupport $r8;
        boolean $z0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        specialinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: void <init>()>();
        $r1 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/session/ManagerBase");
        r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log> = $r1;
        r0.<org.apache.catalina.session.ManagerBase: int maxInactiveInterval> = 1800;
        r0.<org.apache.catalina.session.ManagerBase: int sessionIdLength> = -1;
        r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomClass> = null;
        r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomAlgorithm> = "SHA1PRNG";
        r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomProvider> = null;
        r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.SessionIdGenerator sessionIdGenerator> = null;
        r0.<org.apache.catalina.session.ManagerBase: java.lang.Class sessionIdGeneratorClass> = null;
        $r2 = new java.lang.Object;
        specialinvoke $r2.<java.lang.Object: void <init>()>();
        r0.<org.apache.catalina.session.ManagerBase: java.lang.Object sessionMaxAliveTimeUpdateLock> = $r2;
        $r3 = new java.util.LinkedList;
        specialinvoke $r3.<java.util.LinkedList: void <init>()>();
        r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionCreationTiming> = $r3;
        $r4 = new java.util.LinkedList;
        specialinvoke $r4.<java.util.LinkedList: void <init>()>();
        r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionExpirationTiming> = $r4;
        $r5 = new java.util.concurrent.atomic.AtomicLong;
        specialinvoke $r5.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);
        r0.<org.apache.catalina.session.ManagerBase: java.util.concurrent.atomic.AtomicLong expiredSessions> = $r5;
        $r6 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions> = $r6;
        r0.<org.apache.catalina.session.ManagerBase: long sessionCounter> = 0L;
        r0.<org.apache.catalina.session.ManagerBase: int maxActive> = 0;
        $r7 = new java.lang.Object;
        specialinvoke $r7.<java.lang.Object: void <init>()>();
        r0.<org.apache.catalina.session.ManagerBase: java.lang.Object maxActiveUpdateLock> = $r7;
        r0.<org.apache.catalina.session.ManagerBase: int maxActiveSessions> = -1;
        r0.<org.apache.catalina.session.ManagerBase: int rejectedSessions> = 0;
        r0.<org.apache.catalina.session.ManagerBase: int duplicates> = 0;
        r0.<org.apache.catalina.session.ManagerBase: long processingTime> = 0L;
        r0.<org.apache.catalina.session.ManagerBase: int count> = 0;
        r0.<org.apache.catalina.session.ManagerBase: int processExpiresFrequency> = 6;
        $r8 = new java.beans.PropertyChangeSupport;
        specialinvoke $r8.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);
        r0.<org.apache.catalina.session.ManagerBase: java.beans.PropertyChangeSupport support> = $r8;
        $z0 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z0 == 0 goto label0;

        virtualinvoke r0.<org.apache.catalina.session.ManagerBase: void setSessionAttributeValueClassNameFilter(java.lang.String)>("java\\.lang\\.(?:Boolean|Integer|Long|Number|String)");
        virtualinvoke r0.<org.apache.catalina.session.ManagerBase: void setWarnOnSessionAttributeFilterFailure(boolean)>(1);

     label0:
        return;
    }

    public java.lang.String getSessionAttributeNameFilter()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.util.regex.Pattern $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern sessionAttributeNamePattern>;
        if $r1 != null goto label0;

        return null;

     label0:
        $r2 = r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern sessionAttributeNamePattern>;
        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.lang.String toString()>();
        return $r3;
    }

    public void setSessionAttributeNameFilter(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1;
        int $i0;
        java.util.regex.Pattern $r2;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern sessionAttributeNamePattern> = null;
        goto label2;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern sessionAttributeNamePattern> = $r2;

     label2:
        return;
    }

    protected java.util.regex.Pattern getSessionAttributeNamePattern()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.util.regex.Pattern $r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern sessionAttributeNamePattern>;
        return $r1;
    }

    public java.lang.String getSessionAttributeValueClassNameFilter()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.util.regex.Pattern $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern sessionAttributeValueClassNamePattern>;
        if $r1 != null goto label0;

        return null;

     label0:
        $r2 = r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern sessionAttributeValueClassNamePattern>;
        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.lang.String toString()>();
        return $r3;
    }

    protected java.util.regex.Pattern getSessionAttributeValueClassNamePattern()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.util.regex.Pattern $r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern sessionAttributeValueClassNamePattern>;
        return $r1;
    }

    public void setSessionAttributeValueClassNameFilter(java.lang.String) throws java.util.regex.PatternSyntaxException
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1;
        int $i0;
        java.util.regex.Pattern $r2;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern sessionAttributeValueClassNamePattern> = null;
        goto label2;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern sessionAttributeValueClassNamePattern> = $r2;

     label2:
        return;
    }

    public boolean getWarnOnSessionAttributeFilterFailure()
    {
        org.apache.catalina.session.ManagerBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $z0 = r0.<org.apache.catalina.session.ManagerBase: boolean warnOnSessionAttributeFilterFailure>;
        return $z0;
    }

    public void setWarnOnSessionAttributeFilterFailure(boolean)
    {
        org.apache.catalina.session.ManagerBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.session.ManagerBase: boolean warnOnSessionAttributeFilterFailure> = z0;
        return;
    }

    public org.apache.catalina.Container getContainer()
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Container $r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        return $r1;
    }

    public void setContainer(org.apache.catalina.Container)
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Container r1, r3, $r4, $r10;
        org.apache.tomcat.util.res.StringManager $r2;
        org.apache.catalina.LifecycleState $r5, $r6;
        boolean $z0;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8;
        java.beans.PropertyChangeSupport $r9;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: org.apache.catalina.Container;
        $r4 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        if $r4 != r1 goto label0;

        return;

     label0:
        $r5 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.LifecycleState getState()>();
        $r6 = <org.apache.catalina.LifecycleState: org.apache.catalina.LifecycleState NEW>;
        $z0 = virtualinvoke $r5.<org.apache.catalina.LifecycleState: boolean equals(java.lang.Object)>($r6);
        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;
        $r2 = <org.apache.catalina.session.ManagerBase: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("managerBase.setContextNotNew");
        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);
        throw $r7;

     label1:
        r3 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container> = r1;
        $r9 = r0.<org.apache.catalina.session.ManagerBase: java.beans.PropertyChangeSupport support>;
        $r10 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        virtualinvoke $r9.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("container", r3, $r10);
        return;
    }

    public java.lang.String getClassName()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();
        return $r2;
    }

    public boolean getDistributable()
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Container r1;
        boolean $z0, $z1;
        org.apache.catalina.Context $r2;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container getContainer()>();
        $z0 = r1 instanceof org.apache.catalina.Context;
        if $z0 == 0 goto label0;

        $r2 = (org.apache.catalina.Context) r1;
        $z1 = interfaceinvoke $r2.<org.apache.catalina.Context: boolean getDistributable()>();
        return $z1;

     label0:
        return 0;
    }

    public void setDistributable(boolean)
    {
        org.apache.catalina.session.ManagerBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        z0 := @parameter0: boolean;
        return;
    }

    public java.lang.String getInfo()
    {
        org.apache.catalina.session.ManagerBase r0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        return "ManagerBase/1.0";
    }

    public int getMaxInactiveInterval()
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Container r1;
        boolean $z0;
        org.apache.catalina.Context $r2;
        int $i0, $i1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container getContainer()>();
        $z0 = r1 instanceof org.apache.catalina.Context;
        if $z0 == 0 goto label0;

        $r2 = (org.apache.catalina.Context) r1;
        $i0 = interfaceinvoke $r2.<org.apache.catalina.Context: int getSessionTimeout()>();
        $i1 = $i0 * 60;
        return $i1;

     label0:
        return -1;
    }

    public void setMaxInactiveInterval(int)
    {
        org.apache.catalina.session.ManagerBase r0;
        int i0;
        org.apache.tomcat.util.res.StringManager $r1;
        org.apache.juli.logging.Log $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        i0 := @parameter0: int;
        $r2 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $r1 = <org.apache.catalina.session.ManagerBase: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("managerBase.setMaxInactiveIntervalUnused");
        interfaceinvoke $r2.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r3);
        return;
    }

    public int getSessionIdLength()
    {
        org.apache.catalina.session.ManagerBase r0;
        int $i0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $i0 = r0.<org.apache.catalina.session.ManagerBase: int sessionIdLength>;
        return $i0;
    }

    public void setSessionIdLength(int)
    {
        org.apache.catalina.session.ManagerBase r0;
        int i0, i1, $i2;
        java.beans.PropertyChangeSupport $r1;
        java.lang.Integer $r2, $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        i0 := @parameter0: int;
        i1 = r0.<org.apache.catalina.session.ManagerBase: int sessionIdLength>;
        r0.<org.apache.catalina.session.ManagerBase: int sessionIdLength> = i0;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.beans.PropertyChangeSupport support>;
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $i2 = r0.<org.apache.catalina.session.ManagerBase: int sessionIdLength>;
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("sessionIdLength", $r2, $r3);
        return;
    }

    public org.apache.catalina.SessionIdGenerator getSessionIdGenerator()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.IllegalAccessException r1, $r9;
        org.apache.catalina.SessionIdGenerator $r2, $r3, $r7, $r8;
        java.lang.Class $r4, $r5;
        java.lang.Object $r6;
        java.lang.InstantiationException $r10, r11;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r2 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.SessionIdGenerator sessionIdGenerator>;
        if $r2 == null goto label0;

        $r3 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.SessionIdGenerator sessionIdGenerator>;
        return $r3;

     label0:
        $r4 = r0.<org.apache.catalina.session.ManagerBase: java.lang.Class sessionIdGeneratorClass>;
        if $r4 == null goto label5;

     label1:
        $r5 = r0.<org.apache.catalina.session.ManagerBase: java.lang.Class sessionIdGeneratorClass>;
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();
        $r7 = (org.apache.catalina.SessionIdGenerator) $r6;
        r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.SessionIdGenerator sessionIdGenerator> = $r7;
        $r8 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.SessionIdGenerator sessionIdGenerator>;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;
        r1 = $r9;
        goto label5;

     label4:
        $r10 := @caughtexception;
        r11 = $r10;

     label5:
        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
    }

    public void setSessionIdGenerator(org.apache.catalina.SessionIdGenerator)
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.SessionIdGenerator r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: org.apache.catalina.SessionIdGenerator;
        r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.SessionIdGenerator sessionIdGenerator> = r1;
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        r0.<org.apache.catalina.session.ManagerBase: java.lang.Class sessionIdGeneratorClass> = $r2;
        return;
    }

    public java.lang.String getName()
    {
        org.apache.catalina.session.ManagerBase r0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        return "ManagerBase";
    }

    public java.lang.String getSecureRandomClass()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomClass>;
        return $r1;
    }

    public void setSecureRandomClass(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1, r2, $r4;
        java.beans.PropertyChangeSupport $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        r2 = r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomClass>;
        r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomClass> = r1;
        $r3 = r0.<org.apache.catalina.session.ManagerBase: java.beans.PropertyChangeSupport support>;
        $r4 = r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomClass>;
        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("secureRandomClass", r2, $r4);
        return;
    }

    public java.lang.String getSecureRandomAlgorithm()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomAlgorithm>;
        return $r1;
    }

    public void setSecureRandomAlgorithm(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomAlgorithm> = r1;
        return;
    }

    public java.lang.String getSecureRandomProvider()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomProvider>;
        return $r1;
    }

    public void setSecureRandomProvider(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.session.ManagerBase: java.lang.String secureRandomProvider> = r1;
        return;
    }

    public int getRejectedSessions()
    {
        org.apache.catalina.session.ManagerBase r0;
        int $i0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $i0 = r0.<org.apache.catalina.session.ManagerBase: int rejectedSessions>;
        return $i0;
    }

    public long getExpiredSessions()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.util.concurrent.atomic.AtomicLong expiredSessions>;
        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();
        return $l0;
    }

    public void setExpiredSessions(long)
    {
        org.apache.catalina.session.ManagerBase r0;
        long l0;
        java.util.concurrent.atomic.AtomicLong $r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        l0 := @parameter0: long;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.util.concurrent.atomic.AtomicLong expiredSessions>;
        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void set(long)>(l0);
        return;
    }

    public long getProcessingTime()
    {
        org.apache.catalina.session.ManagerBase r0;
        long $l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $l0 = r0.<org.apache.catalina.session.ManagerBase: long processingTime>;
        return $l0;
    }

    public void setProcessingTime(long)
    {
        org.apache.catalina.session.ManagerBase r0;
        long l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        l0 := @parameter0: long;
        r0.<org.apache.catalina.session.ManagerBase: long processingTime> = l0;
        return;
    }

    public int getProcessExpiresFrequency()
    {
        org.apache.catalina.session.ManagerBase r0;
        int $i0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $i0 = r0.<org.apache.catalina.session.ManagerBase: int processExpiresFrequency>;
        return $i0;
    }

    public void setProcessExpiresFrequency(int)
    {
        org.apache.catalina.session.ManagerBase r0;
        int i0, i1, $i2;
        java.beans.PropertyChangeSupport $r1;
        java.lang.Integer $r2, $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        i0 := @parameter0: int;
        if i0 > 0 goto label0;

        return;

     label0:
        i1 = r0.<org.apache.catalina.session.ManagerBase: int processExpiresFrequency>;
        r0.<org.apache.catalina.session.ManagerBase: int processExpiresFrequency> = i0;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.beans.PropertyChangeSupport support>;
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $i2 = r0.<org.apache.catalina.session.ManagerBase: int processExpiresFrequency>;
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("processExpiresFrequency", $r2, $r3);
        return;
    }

    public void backgroundProcess()
    {
        org.apache.catalina.session.ManagerBase r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $i0 = r0.<org.apache.catalina.session.ManagerBase: int count>;
        $i1 = $i0 + 1;
        $i2 = r0.<org.apache.catalina.session.ManagerBase: int processExpiresFrequency>;
        $i3 = $i1 % $i2;
        r0.<org.apache.catalina.session.ManagerBase: int count> = $i3;
        $i4 = r0.<org.apache.catalina.session.ManagerBase: int count>;
        if $i4 != 0 goto label0;

        virtualinvoke r0.<org.apache.catalina.session.ManagerBase: void processExpires()>();

     label0:
        return;
    }

    public void processExpires()
    {
        org.apache.catalina.session.ManagerBase r0;
        long l0, l5, $l6, $l7, $l8, $l9;
        org.apache.catalina.Session[] r1;
        int i1, i2, $i3, $i4;
        java.lang.StringBuilder $r2, $r6, $r7, $r8, $r9, $r10, $r16, $r18, $r19, $r20, $r21, $r22;
        org.apache.juli.logging.Log $r3, $r4, $r14, $r15;
        boolean $z0, $z1, $z2;
        java.lang.String $r5, $r11, $r17, $r23;
        org.apache.catalina.Session $r12, $r13;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r1 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Session[] findSessions()>();
        i1 = 0;
        $r3 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Start expire sessions ");
        $r5 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.lang.String getName()>();
        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sessioncount ");
        $i3 = lengthof r1;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r11);

     label0:
        i2 = 0;
        goto label3;

     label1:
        $r12 = r1[i2];
        if $r12 == null goto label2;

        $r13 = r1[i2];
        $z1 = interfaceinvoke $r13.<org.apache.catalina.Session: boolean isValid()>();
        if $z1 != 0 goto label2;

        i1 = i1 + 1;

     label2:
        i2 = i2 + 1;

     label3:
        $i4 = lengthof r1;
        if i2 < $i4 goto label1;

        l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r14 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r14.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label4;

        $r15 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("End expire sessions ");
        $r17 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.lang.String getName()>();
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" processingTime ");
        $l6 = l5 - l0;
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expired sessions: ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r15.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r23);

     label4:
        $l7 = r0.<org.apache.catalina.session.ManagerBase: long processingTime>;
        $l8 = l5 - l0;
        $l9 = $l7 + $l8;
        r0.<org.apache.catalina.session.ManagerBase: long processingTime> = $l9;
        return;
    }

    protected void initInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.tomcat.util.res.StringManager $r1;
        org.apache.catalina.Container $r2;
        boolean $z0;
        org.apache.catalina.LifecycleException $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        specialinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: void initInternal()>();
        $r2 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        $z0 = $r2 instanceof org.apache.catalina.Context;
        if $z0 != 0 goto label0;

        $r3 = new org.apache.catalina.LifecycleException;
        $r1 = <org.apache.catalina.session.ManagerBase: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("managerBase.contextNull");
        specialinvoke $r3.<org.apache.catalina.LifecycleException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        return;
    }

    protected void startInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.SessionIdGenerator r1;
        org.apache.catalina.util.SessionIdGeneratorBase r2;
        java.util.Deque $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3;
        org.apache.catalina.util.StandardSessionIdGenerator $r7;
        java.lang.String $r8, $r9, $r10, $r11;
        boolean $z2, $z3, $z4, $z5;
        org.apache.catalina.Lifecycle $r12;
        org.apache.juli.logging.Log $r13, $r14, $r16, $r17;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        goto label1;

     label0:
        $r3 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionCreationTiming>;
        interfaceinvoke $r3.<java.util.Deque: boolean add(java.lang.Object)>(null);

     label1:
        $r4 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionCreationTiming>;
        $i0 = interfaceinvoke $r4.<java.util.Deque: int size()>();
        if $i0 < 100 goto label0;

        goto label3;

     label2:
        $r5 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionExpirationTiming>;
        interfaceinvoke $r5.<java.util.Deque: boolean add(java.lang.Object)>(null);

     label3:
        $r6 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionExpirationTiming>;
        $i1 = interfaceinvoke $r6.<java.util.Deque: int size()>();
        if $i1 < 100 goto label2;

        r1 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.SessionIdGenerator getSessionIdGenerator()>();
        if r1 != null goto label4;

        $r7 = new org.apache.catalina.util.StandardSessionIdGenerator;
        specialinvoke $r7.<org.apache.catalina.util.StandardSessionIdGenerator: void <init>()>();
        r1 = $r7;
        virtualinvoke r0.<org.apache.catalina.session.ManagerBase: void setSessionIdGenerator(org.apache.catalina.SessionIdGenerator)>(r1);

     label4:
        $i2 = r0.<org.apache.catalina.session.ManagerBase: int sessionIdLength>;
        if $i2 == -1 goto label5;

        $i3 = r0.<org.apache.catalina.session.ManagerBase: int sessionIdLength>;
        interfaceinvoke r1.<org.apache.catalina.SessionIdGenerator: void setSessionIdLength(int)>($i3);

     label5:
        $r8 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.lang.String getJvmRoute()>();
        interfaceinvoke r1.<org.apache.catalina.SessionIdGenerator: void setJvmRoute(java.lang.String)>($r8);
        $z2 = r1 instanceof org.apache.catalina.util.SessionIdGeneratorBase;
        if $z2 == 0 goto label6;

        r2 = (org.apache.catalina.util.SessionIdGeneratorBase) r1;
        $r9 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.lang.String getSecureRandomAlgorithm()>();
        virtualinvoke r2.<org.apache.catalina.util.SessionIdGeneratorBase: void setSecureRandomAlgorithm(java.lang.String)>($r9);
        $r10 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.lang.String getSecureRandomClass()>();
        virtualinvoke r2.<org.apache.catalina.util.SessionIdGeneratorBase: void setSecureRandomClass(java.lang.String)>($r10);
        $r11 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.lang.String getSecureRandomProvider()>();
        virtualinvoke r2.<org.apache.catalina.util.SessionIdGeneratorBase: void setSecureRandomProvider(java.lang.String)>($r11);

     label6:
        $z3 = r1 instanceof org.apache.catalina.Lifecycle;
        if $z3 == 0 goto label7;

        $r12 = (org.apache.catalina.Lifecycle) r1;
        interfaceinvoke $r12.<org.apache.catalina.Lifecycle: void start()>();
        goto label9;

     label7:
        $r13 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r13.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label8;

        $r14 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Force random number initialization starting");

     label8:
        interfaceinvoke r1.<org.apache.catalina.SessionIdGenerator: java.lang.String generateSessionId()>();
        $r16 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r16.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label9;

        $r17 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r17.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Force random number initialization completed");

     label9:
        return;
    }

    protected void stopInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.SessionIdGenerator $r1, $r2;
        boolean $z0;
        org.apache.catalina.Lifecycle $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.SessionIdGenerator sessionIdGenerator>;
        $z0 = $r1 instanceof org.apache.catalina.Lifecycle;
        if $z0 == 0 goto label0;

        $r2 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.SessionIdGenerator sessionIdGenerator>;
        $r3 = (org.apache.catalina.Lifecycle) $r2;
        interfaceinvoke $r3.<org.apache.catalina.Lifecycle: void stop()>();

     label0:
        return;
    }

    public void add(org.apache.catalina.Session)
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Session r1;
        int i0, $i1, $i2;
        java.lang.Object r2, $r6;
        java.util.Map $r3;
        java.lang.String $r4;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: org.apache.catalina.Session;
        $r3 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r4 = interfaceinvoke r1.<org.apache.catalina.Session: java.lang.String getIdInternal()>();
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1);
        i0 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: int getActiveSessions()>();
        $i1 = r0.<org.apache.catalina.session.ManagerBase: int maxActive>;
        if i0 <= $i1 goto label6;

        $r6 = r0.<org.apache.catalina.session.ManagerBase: java.lang.Object maxActiveUpdateLock>;
        r2 = $r6;
        entermonitor $r6;

     label0:
        $i2 = r0.<org.apache.catalina.session.ManagerBase: int maxActive>;
        if i0 <= $i2 goto label1;

        r0.<org.apache.catalina.session.ManagerBase: int maxActive> = i0;

     label1:
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.beans.PropertyChangeListener r1;
        java.beans.PropertyChangeSupport $r2;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.beans.PropertyChangeListener;
        $r2 = r0.<org.apache.catalina.session.ManagerBase: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);
        return;
    }

    public org.apache.catalina.Session createSession(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1, r3, $r9;
        org.apache.catalina.Session r2;
        org.apache.catalina.session.ManagerBase$SessionTiming r4, $r13;
        java.util.Deque r5, $r14, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        org.apache.catalina.session.TooManyActiveSessionsException $r7;
        org.apache.tomcat.util.res.StringManager $r8;
        long $l6, $l9, $l10, $l11;
        org.apache.catalina.Container $r10;
        org.apache.catalina.Context $r11;
        java.lang.Throwable $r18;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        $i0 = r0.<org.apache.catalina.session.ManagerBase: int maxActiveSessions>;
        if $i0 < 0 goto label0;

        $i1 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: int getActiveSessions()>();
        $i2 = r0.<org.apache.catalina.session.ManagerBase: int maxActiveSessions>;
        if $i1 < $i2 goto label0;

        $i3 = r0.<org.apache.catalina.session.ManagerBase: int rejectedSessions>;
        $i4 = $i3 + 1;
        r0.<org.apache.catalina.session.ManagerBase: int rejectedSessions> = $i4;
        $r7 = new org.apache.catalina.session.TooManyActiveSessionsException;
        $r8 = <org.apache.catalina.session.ManagerBase: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("managerBase.createSession.ise");
        $i5 = r0.<org.apache.catalina.session.ManagerBase: int maxActiveSessions>;
        specialinvoke $r7.<org.apache.catalina.session.TooManyActiveSessionsException: void <init>(java.lang.String,int)>($r9, $i5);
        throw $r7;

     label0:
        r2 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Session createEmptySession()>();
        interfaceinvoke r2.<org.apache.catalina.Session: void setNew(boolean)>(1);
        interfaceinvoke r2.<org.apache.catalina.Session: void setValid(boolean)>(1);
        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        interfaceinvoke r2.<org.apache.catalina.Session: void setCreationTime(long)>($l6);
        $r10 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container getContainer()>();
        $r11 = (org.apache.catalina.Context) $r10;
        $i7 = interfaceinvoke $r11.<org.apache.catalina.Context: int getSessionTimeout()>();
        $i8 = $i7 * 60;
        interfaceinvoke r2.<org.apache.catalina.Session: void setMaxInactiveInterval(int)>($i8);
        r3 = r1;
        if r3 != null goto label1;

        r3 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.lang.String generateSessionId()>();

     label1:
        interfaceinvoke r2.<org.apache.catalina.Session: void setId(java.lang.String)>(r3);
        $l9 = r0.<org.apache.catalina.session.ManagerBase: long sessionCounter>;
        $l10 = $l9 + 1L;
        r0.<org.apache.catalina.session.ManagerBase: long sessionCounter> = $l10;
        $r13 = new org.apache.catalina.session.ManagerBase$SessionTiming;
        $l11 = interfaceinvoke r2.<org.apache.catalina.Session: long getCreationTime()>();
        specialinvoke $r13.<org.apache.catalina.session.ManagerBase$SessionTiming: void <init>(long,int)>($l11, 0);
        r4 = $r13;
        $r14 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionCreationTiming>;
        r5 = $r14;
        entermonitor $r14;

     label2:
        $r15 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionCreationTiming>;
        interfaceinvoke $r15.<java.util.Deque: boolean add(java.lang.Object)>(r4);
        $r16 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionCreationTiming>;
        interfaceinvoke $r16.<java.util.Deque: java.lang.Object poll()>();
        exitmonitor r5;

     label3:
        goto label7;

     label4:
        $r18 := @caughtexception;

     label5:
        exitmonitor r5;

     label6:
        throw $r18;

     label7:
        return r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public org.apache.catalina.Session createEmptySession()
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.session.StandardSession $r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.session.StandardSession getNewSession()>();
        return $r1;
    }

    public org.apache.catalina.Session findSession(java.lang.String) throws java.io.IOException
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.catalina.Session $r4;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        return null;

     label0:
        $r2 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (org.apache.catalina.Session) $r3;
        return $r4;
    }

    public org.apache.catalina.Session[] findSessions()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        org.apache.catalina.Session[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();
        $r3 = newarray (org.apache.catalina.Session)[0];
        $r4 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r3);
        $r5 = (org.apache.catalina.Session[]) $r4;
        return $r5;
    }

    public void remove(org.apache.catalina.Session)
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Session r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: org.apache.catalina.Session;
        virtualinvoke r0.<org.apache.catalina.session.ManagerBase: void remove(org.apache.catalina.Session,boolean)>(r1, 0);
        return;
    }

    public void remove(org.apache.catalina.Session, boolean)
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Session r1;
        boolean z0;
        long l0, $l2, $l3;
        int i1, $i4;
        org.apache.catalina.session.ManagerBase$SessionTiming r2, $r5;
        java.util.Deque r3, $r6, $r7, $r8;
        java.util.concurrent.atomic.AtomicLong $r4;
        java.lang.Throwable $r10;
        java.lang.String $r11, $r13;
        java.util.Map $r12;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: org.apache.catalina.Session;
        z0 := @parameter1: boolean;
        if z0 == 0 goto label5;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l2 = interfaceinvoke r1.<org.apache.catalina.Session: long getCreationTimeInternal()>();
        $l3 = l0 - $l2;
        $i4 = (int) $l3;
        i1 = $i4 / 1000;
        virtualinvoke r0.<org.apache.catalina.session.ManagerBase: void updateSessionMaxAliveTime(int)>(i1);
        $r4 = r0.<org.apache.catalina.session.ManagerBase: java.util.concurrent.atomic.AtomicLong expiredSessions>;
        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();
        $r5 = new org.apache.catalina.session.ManagerBase$SessionTiming;
        specialinvoke $r5.<org.apache.catalina.session.ManagerBase$SessionTiming: void <init>(long,int)>(l0, i1);
        r2 = $r5;
        $r6 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionExpirationTiming>;
        r3 = $r6;
        entermonitor $r6;

     label0:
        $r7 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionExpirationTiming>;
        interfaceinvoke $r7.<java.util.Deque: boolean add(java.lang.Object)>(r2);
        $r8 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionExpirationTiming>;
        interfaceinvoke $r8.<java.util.Deque: java.lang.Object poll()>();
        exitmonitor r3;

     label1:
        goto label5;

     label2:
        $r10 := @caughtexception;

     label3:
        exitmonitor r3;

     label4:
        throw $r10;

     label5:
        $r11 = interfaceinvoke r1.<org.apache.catalina.Session: java.lang.String getIdInternal()>();
        if $r11 == null goto label6;

        $r12 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r13 = interfaceinvoke r1.<org.apache.catalina.Session: java.lang.String getIdInternal()>();
        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r13);

     label6:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.beans.PropertyChangeListener r1;
        java.beans.PropertyChangeSupport $r2;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.beans.PropertyChangeListener;
        $r2 = r0.<org.apache.catalina.session.ManagerBase: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);
        return;
    }

    public void changeSessionId(org.apache.catalina.Session)
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Session r1;
        java.lang.String r2, r3, $r4;
        org.apache.catalina.Container $r5;
        java.lang.String[] $r6;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: org.apache.catalina.Session;
        r2 = interfaceinvoke r1.<org.apache.catalina.Session: java.lang.String getIdInternal()>();
        $r4 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.lang.String generateSessionId()>();
        interfaceinvoke r1.<org.apache.catalina.Session: void setId(java.lang.String,boolean)>($r4, 0);
        r3 = interfaceinvoke r1.<org.apache.catalina.Session: java.lang.String getIdInternal()>();
        $r5 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        $r6 = newarray (java.lang.String)[2];
        $r6[0] = r2;
        $r6[1] = r3;
        interfaceinvoke $r5.<org.apache.catalina.Container: void fireContainerEvent(java.lang.String,java.lang.Object)>("changeSessionId", $r6);
        return;
    }

    public boolean willAttributeDistribute(java.lang.String, java.lang.Object)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1, r4, r5, $r14, $r20;
        java.lang.Object r2;
        java.util.regex.Pattern r3, r12;
        java.util.regex.Matcher $r6, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.juli.logging.Log $r7, $r10, $r11, $r16, $r21, $r22;
        org.apache.tomcat.util.res.StringManager $r8, $r17;
        java.lang.Object[] $r9, $r18;
        java.lang.Class $r13, $r19;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        r3 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern getSessionAttributeNamePattern()>();
        if r3 == null goto label3;

        $r6 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();
        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: boolean getWarnOnSessionAttributeFilterFailure()>();
        if $z1 != 0 goto label0;

        $r7 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r7.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label2;

     label0:
        $r8 = <org.apache.catalina.session.ManagerBase: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = newarray (java.lang.Object)[2];
        $r9[0] = r1;
        $r9[1] = r3;
        r4 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("managerBase.sessionAttributeNameFilter", $r9);
        $z3 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: boolean getWarnOnSessionAttributeFilterFailure()>();
        if $z3 == 0 goto label1;

        $r10 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void warn(java.lang.Object)>(r4);
        goto label2;

     label1:
        $r11 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void debug(java.lang.Object)>(r4);

     label2:
        return 0;

     label3:
        r12 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.util.regex.Pattern getSessionAttributeValueClassNamePattern()>();
        if r2 == null goto label7;

        if r12 == null goto label7;

        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();
        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();
        $r15 = virtualinvoke r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r14);
        $z4 = virtualinvoke $r15.<java.util.regex.Matcher: boolean matches()>();
        if $z4 != 0 goto label7;

        $z5 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: boolean getWarnOnSessionAttributeFilterFailure()>();
        if $z5 != 0 goto label4;

        $r16 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z6 = interfaceinvoke $r16.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label6;

     label4:
        $r17 = <org.apache.catalina.session.ManagerBase: org.apache.tomcat.util.res.StringManager sm>;
        $r18 = newarray (java.lang.Object)[3];
        $r18[0] = r1;
        $r19 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();
        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();
        $r18[1] = $r20;
        $r18[2] = r12;
        r5 = virtualinvoke $r17.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("managerBase.sessionAttributeValueClassNameFilter", $r18);
        $z7 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: boolean getWarnOnSessionAttributeFilterFailure()>();
        if $z7 == 0 goto label5;

        $r21 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r21.<org.apache.juli.logging.Log: void warn(java.lang.Object)>(r5);
        goto label6;

     label5:
        $r22 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r22.<org.apache.juli.logging.Log: void debug(java.lang.Object)>(r5);

     label6:
        return 0;

     label7:
        return 1;
    }

    protected org.apache.catalina.session.StandardSession getNewSession()
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.session.StandardSession $r1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = new org.apache.catalina.session.StandardSession;
        specialinvoke $r1.<org.apache.catalina.session.StandardSession: void <init>(org.apache.catalina.Manager)>(r0);
        return $r1;
    }

    protected java.lang.String generateSessionId()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1;
        int $i0, $i1;
        org.apache.catalina.SessionIdGenerator $r3;
        java.util.Map $r4;
        boolean $z0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 = null;

     label0:
        if r1 == null goto label1;

        $i0 = r0.<org.apache.catalina.session.ManagerBase: int duplicates>;
        $i1 = $i0 + 1;
        r0.<org.apache.catalina.session.ManagerBase: int duplicates> = $i1;

     label1:
        $r3 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.SessionIdGenerator sessionIdGenerator>;
        r1 = interfaceinvoke $r3.<org.apache.catalina.SessionIdGenerator: java.lang.String generateSessionId()>();
        $r4 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);
        if $z0 != 0 goto label0;

        return r1;
    }

    public org.apache.catalina.Engine getEngine()
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Engine r1;
        org.apache.catalina.Container r2;
        boolean $z0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 = null;
        r2 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container getContainer()>();
        goto label2;

     label0:
        $z0 = r2 instanceof org.apache.catalina.Engine;
        if $z0 == 0 goto label1;

        r1 = (org.apache.catalina.Engine) r2;

     label1:
        r2 = interfaceinvoke r2.<org.apache.catalina.Container: org.apache.catalina.Container getParent()>();

     label2:
        if r1 != null goto label3;

        if r2 != null goto label0;

     label3:
        return r1;
    }

    public java.lang.String getJvmRoute()
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Engine r1;
        java.lang.String $r2;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Engine getEngine()>();
        if r1 != null goto label0;

        $r2 = null;
        goto label1;

     label0:
        $r2 = interfaceinvoke r1.<org.apache.catalina.Engine: java.lang.String getJvmRoute()>();

     label1:
        return $r2;
    }

    public void setSessionCounter(long)
    {
        org.apache.catalina.session.ManagerBase r0;
        long l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        l0 := @parameter0: long;
        r0.<org.apache.catalina.session.ManagerBase: long sessionCounter> = l0;
        return;
    }

    public long getSessionCounter()
    {
        org.apache.catalina.session.ManagerBase r0;
        long $l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $l0 = r0.<org.apache.catalina.session.ManagerBase: long sessionCounter>;
        return $l0;
    }

    public int getDuplicates()
    {
        org.apache.catalina.session.ManagerBase r0;
        int $i0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $i0 = r0.<org.apache.catalina.session.ManagerBase: int duplicates>;
        return $i0;
    }

    public void setDuplicates(int)
    {
        org.apache.catalina.session.ManagerBase r0;
        int i0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        i0 := @parameter0: int;
        r0.<org.apache.catalina.session.ManagerBase: int duplicates> = i0;
        return;
    }

    public int getActiveSessions()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();
        return $i0;
    }

    public int getMaxActive()
    {
        org.apache.catalina.session.ManagerBase r0;
        int $i0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $i0 = r0.<org.apache.catalina.session.ManagerBase: int maxActive>;
        return $i0;
    }

    public void setMaxActive(int)
    {
        org.apache.catalina.session.ManagerBase r0;
        int i0;
        java.lang.Object r1, $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        i0 := @parameter0: int;
        $r2 = r0.<org.apache.catalina.session.ManagerBase: java.lang.Object maxActiveUpdateLock>;
        r1 = $r2;
        entermonitor $r2;

     label0:
        r0.<org.apache.catalina.session.ManagerBase: int maxActive> = i0;
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r3 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public int getMaxActiveSessions()
    {
        org.apache.catalina.session.ManagerBase r0;
        int $i0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $i0 = r0.<org.apache.catalina.session.ManagerBase: int maxActiveSessions>;
        return $i0;
    }

    public void setMaxActiveSessions(int)
    {
        org.apache.catalina.session.ManagerBase r0;
        int i0, i1, $i2;
        java.beans.PropertyChangeSupport $r1;
        java.lang.Integer $r2, $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        i0 := @parameter0: int;
        i1 = r0.<org.apache.catalina.session.ManagerBase: int maxActiveSessions>;
        r0.<org.apache.catalina.session.ManagerBase: int maxActiveSessions> = i0;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: java.beans.PropertyChangeSupport support>;
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $i2 = r0.<org.apache.catalina.session.ManagerBase: int maxActiveSessions>;
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("maxActiveSessions", $r2, $r3);
        return;
    }

    public int getSessionMaxAliveTime()
    {
        org.apache.catalina.session.ManagerBase r0;
        int $i0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $i0 = r0.<org.apache.catalina.session.ManagerBase: int sessionMaxAliveTime>;
        return $i0;
    }

    public void setSessionMaxAliveTime(int)
    {
        org.apache.catalina.session.ManagerBase r0;
        int i0;
        java.lang.Object r1, $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        i0 := @parameter0: int;
        $r2 = r0.<org.apache.catalina.session.ManagerBase: java.lang.Object sessionMaxAliveTimeUpdateLock>;
        r1 = $r2;
        entermonitor $r2;

     label0:
        r0.<org.apache.catalina.session.ManagerBase: int sessionMaxAliveTime> = i0;
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r3 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void updateSessionMaxAliveTime(int)
    {
        org.apache.catalina.session.ManagerBase r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        i0 := @parameter0: int;
        $i1 = r0.<org.apache.catalina.session.ManagerBase: int sessionMaxAliveTime>;
        if i0 <= $i1 goto label6;

        $r2 = r0.<org.apache.catalina.session.ManagerBase: java.lang.Object sessionMaxAliveTimeUpdateLock>;
        r1 = $r2;
        entermonitor $r2;

     label0:
        $i2 = r0.<org.apache.catalina.session.ManagerBase: int sessionMaxAliveTime>;
        if i0 <= $i2 goto label1;

        r0.<org.apache.catalina.session.ManagerBase: int sessionMaxAliveTime> = i0;

     label1:
        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

     label6:
        return;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getSessionAverageAliveTime()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.util.ArrayList $r1, r2;
        java.util.Deque r3, $r6, $r7;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.util.Iterator r4;
        org.apache.catalina.session.ManagerBase$SessionTiming r5;
        java.lang.Throwable $r8;
        java.lang.Object $r9;
        boolean $z1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r6 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionExpirationTiming>;
        r3 = $r6;
        entermonitor $r6;

     label0:
        $r7 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionExpirationTiming>;
        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r7);
        exitmonitor r3;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r3;

     label4:
        throw $r8;

     label5:
        i2 = 0;
        i0 = 0;
        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();
        goto label7;

     label6:
        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.apache.catalina.session.ManagerBase$SessionTiming) $r9;
        if r5 == null goto label7;

        i1 = virtualinvoke r5.<org.apache.catalina.session.ManagerBase$SessionTiming: int getDuration()>();
        i2 = i2 + 1;
        $i3 = i2 - 1;
        $i4 = $i3 / i2;
        $i5 = i0 * $i4;
        $i6 = i1 / i2;
        i0 = $i5 + $i6;

     label7:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label6;

        return i0;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public int getSessionCreateRate()
    {
        org.apache.catalina.session.ManagerBase r0;
        long l0, l3, $l4, $l8;
        java.util.ArrayList r1, $r5;
        java.util.Deque r2, $r6, $r7;
        int i1, i2, $i7, $i9;
        java.util.Iterator r3;
        org.apache.catalina.session.ManagerBase$SessionTiming r4;
        java.lang.Throwable $r8;
        java.lang.Object $r9;
        byte $b5, $b6;
        boolean $z1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r1 = $r5;
        $r6 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionCreationTiming>;
        r2 = $r6;
        entermonitor $r6;

     label0:
        $r7 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionCreationTiming>;
        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r7);
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r8;

     label5:
        l3 = l0;
        i1 = 0;
        i2 = 0;
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
        goto label7;

     label6:
        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.apache.catalina.session.ManagerBase$SessionTiming) $r9;
        if r4 == null goto label7;

        i1 = i1 + 1;
        $l4 = virtualinvoke r4.<org.apache.catalina.session.ManagerBase$SessionTiming: long getTimestamp()>();
        $b5 = $l4 cmp l3;
        if $b5 >= 0 goto label7;

        l3 = virtualinvoke r4.<org.apache.catalina.session.ManagerBase$SessionTiming: long getTimestamp()>();

     label7:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label6;

        if i1 <= 0 goto label9;

        $b6 = l3 cmp l0;
        if $b6 >= 0 goto label8;

        $i7 = 60000 * i1;
        $l8 = l0 - l3;
        $i9 = (int) $l8;
        i2 = $i7 / $i9;
        goto label9;

     label8:
        i2 = 2147483647;

     label9:
        return i2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public int getSessionExpireRate()
    {
        org.apache.catalina.session.ManagerBase r0;
        long l0, l3, $l4, $l8;
        java.util.ArrayList r1, $r5;
        java.util.Deque r2, $r6, $r7;
        int i1, i2, $i7, $i9;
        java.util.Iterator r3;
        org.apache.catalina.session.ManagerBase$SessionTiming r4;
        java.lang.Throwable $r8;
        java.lang.Object $r9;
        byte $b5, $b6;
        boolean $z1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r1 = $r5;
        $r6 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionExpirationTiming>;
        r2 = $r6;
        entermonitor $r6;

     label0:
        $r7 = r0.<org.apache.catalina.session.ManagerBase: java.util.Deque sessionExpirationTiming>;
        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r7);
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r8;

     label5:
        l3 = l0;
        i1 = 0;
        i2 = 0;
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
        goto label7;

     label6:
        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.apache.catalina.session.ManagerBase$SessionTiming) $r9;
        if r4 == null goto label7;

        i1 = i1 + 1;
        $l4 = virtualinvoke r4.<org.apache.catalina.session.ManagerBase$SessionTiming: long getTimestamp()>();
        $b5 = $l4 cmp l3;
        if $b5 >= 0 goto label7;

        l3 = virtualinvoke r4.<org.apache.catalina.session.ManagerBase$SessionTiming: long getTimestamp()>();

     label7:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label6;

        if i1 <= 0 goto label9;

        $b6 = l3 cmp l0;
        if $b6 >= 0 goto label8;

        $i7 = 60000 * i1;
        $l8 = l0 - l3;
        $i9 = (int) $l8;
        i2 = $i7 / $i9;
        goto label9;

     label8:
        i2 = 2147483647;

     label9:
        return i2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.String listSessionIds()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.StringBuilder $r1, r2, $r8;
        java.util.Iterator r3;
        java.util.Map $r4;
        java.util.Set $r5;
        java.lang.Object $r6;
        java.lang.String $r7, $r10;
        boolean $z0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r4 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();
        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r7 = (java.lang.String) $r6;
        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r10;
    }

    public java.lang.String getSessionAttribute(java.lang.String, java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1, r2, $r11, $r13;
        org.apache.catalina.Session r3;
        java.lang.Object r4, $r6;
        java.util.Map $r5;
        org.apache.juli.logging.Log $r7, $r8;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10;
        javax.servlet.http.HttpSession $r12;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r5 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (org.apache.catalina.Session) $r6;
        if r3 != null goto label1;

        $r7 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r7.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r8 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session not found ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r11);

     label0:
        return null;

     label1:
        $r12 = interfaceinvoke r3.<org.apache.catalina.Session: javax.servlet.http.HttpSession getSession()>();
        r4 = interfaceinvoke $r12.<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)>(r2);
        if r4 != null goto label2;

        return null;

     label2:
        $r13 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();
        return $r13;
    }

    public java.util.HashMap getSession(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1, r5, $r12, $r16;
        org.apache.catalina.Session r2;
        java.util.Enumeration r3;
        java.util.HashMap r4, $r14;
        java.util.Map $r6;
        java.lang.Object $r7, $r15;
        org.apache.juli.logging.Log $r8, $r9;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r10, $r11;
        javax.servlet.http.HttpSession $r13;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        $r6 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.catalina.Session) $r7;
        if r2 != null goto label1;

        $r8 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r8.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r9 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session not found ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r12);

     label0:
        return null;

     label1:
        $r13 = interfaceinvoke r2.<org.apache.catalina.Session: javax.servlet.http.HttpSession getSession()>();
        r3 = interfaceinvoke $r13.<javax.servlet.http.HttpSession: java.util.Enumeration getAttributeNames()>();
        if r3 == null goto label2;

        $z1 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z1 != 0 goto label3;

     label2:
        return null;

     label3:
        $r14 = new java.util.HashMap;
        specialinvoke $r14.<java.util.HashMap: void <init>()>();
        r4 = $r14;
        goto label5;

     label4:
        $r15 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r5 = (java.lang.String) $r15;
        $r16 = virtualinvoke r0.<org.apache.catalina.session.ManagerBase: java.lang.String getSessionAttribute(java.lang.String,java.lang.String)>(r1, r5);
        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r16);

     label5:
        $z2 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z2 != 0 goto label4;

        return r4;
    }

    public void expireSession(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1, $r9;
        org.apache.catalina.Session r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.catalina.Session) $r4;
        if r2 != null goto label1;

        $r5 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session not found ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r9);

     label0:
        return;

     label1:
        interfaceinvoke r2.<org.apache.catalina.Session: void expire()>();
        return;
    }

    public long getThisAccessedTimestamp(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1;
        org.apache.catalina.Session r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        long $l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.catalina.Session) $r4;
        if r2 != null goto label0;

        return -1L;

     label0:
        $l0 = interfaceinvoke r2.<org.apache.catalina.Session: long getThisAccessedTime()>();
        return $l0;
    }

    public java.lang.String getThisAccessedTime(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1, $r9, $r11;
        org.apache.catalina.Session r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8;
        java.util.Date $r10;
        long $l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.catalina.Session) $r4;
        if r2 != null goto label1;

        $r5 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session not found ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r9);

     label0:
        return "";

     label1:
        $r10 = new java.util.Date;
        $l0 = interfaceinvoke r2.<org.apache.catalina.Session: long getThisAccessedTime()>();
        specialinvoke $r10.<java.util.Date: void <init>(long)>($l0);
        $r11 = virtualinvoke $r10.<java.util.Date: java.lang.String toString()>();
        return $r11;
    }

    public long getLastAccessedTimestamp(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1;
        org.apache.catalina.Session r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        long $l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.catalina.Session) $r4;
        if r2 != null goto label0;

        return -1L;

     label0:
        $l0 = interfaceinvoke r2.<org.apache.catalina.Session: long getLastAccessedTime()>();
        return $l0;
    }

    public java.lang.String getLastAccessedTime(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1, $r9, $r11;
        org.apache.catalina.Session r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8;
        java.util.Date $r10;
        long $l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.catalina.Session) $r4;
        if r2 != null goto label1;

        $r5 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session not found ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r9);

     label0:
        return "";

     label1:
        $r10 = new java.util.Date;
        $l0 = interfaceinvoke r2.<org.apache.catalina.Session: long getLastAccessedTime()>();
        specialinvoke $r10.<java.util.Date: void <init>(long)>($l0);
        $r11 = virtualinvoke $r10.<java.util.Date: java.lang.String toString()>();
        return $r11;
    }

    public java.lang.String getCreationTime(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1, $r9, $r11;
        org.apache.catalina.Session r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8;
        java.util.Date $r10;
        long $l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.catalina.Session) $r4;
        if r2 != null goto label1;

        $r5 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.catalina.session.ManagerBase: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session not found ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r9);

     label0:
        return "";

     label1:
        $r10 = new java.util.Date;
        $l0 = interfaceinvoke r2.<org.apache.catalina.Session: long getCreationTime()>();
        specialinvoke $r10.<java.util.Date: void <init>(long)>($l0);
        $r11 = virtualinvoke $r10.<java.util.Date: java.lang.String toString()>();
        return $r11;
    }

    public long getCreationTimestamp(java.lang.String)
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.String r1;
        org.apache.catalina.Session r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        long $l0;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.session.ManagerBase: java.util.Map sessions>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.catalina.Session) $r4;
        if r2 != null goto label0;

        return -1L;

     label0:
        $l0 = interfaceinvoke r2.<org.apache.catalina.Session: long getCreationTime()>();
        return $l0;
    }

    public java.lang.String toString()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r9, $r12;
        org.apache.catalina.Container $r6, $r8;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = new java.lang.StringBuilder;
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);
        $r6 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        if $r6 != null goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container is null");
        goto label1;

     label0:
        $r8 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        $r9 = interfaceinvoke $r8.<org.apache.catalina.Container: java.lang.String getName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r12;
    }

    public java.lang.String getObjectNameKeyProperties()
    {
        org.apache.catalina.session.ManagerBase r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String r3, $r13, $r17, $r19;
        org.apache.catalina.Context r4;
        org.apache.catalina.Container $r5, $r7, $r10, $r12, $r16;
        boolean $z0, $z1;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("type=Manager");
        r2 = $r1;
        $r5 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        $z0 = $r5 instanceof org.apache.catalina.Context;
        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",context=");
        $r7 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        r3 = interfaceinvoke $r7.<org.apache.catalina.Container: java.lang.String getName()>();
        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z1 != 0 goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label0:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r10 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        r4 = (org.apache.catalina.Context) $r10;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",host=");
        $r12 = interfaceinvoke r4.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r13 = interfaceinvoke $r12.<org.apache.catalina.Container: java.lang.String getName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        goto label2;

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",container=");
        $r16 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        $r17 = interfaceinvoke $r16.<org.apache.catalina.Container: java.lang.String getName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label2:
        $r19 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r19;
    }

    public java.lang.String getDomainInternal()
    {
        org.apache.catalina.session.ManagerBase r0;
        org.apache.catalina.Container $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.catalina.session.ManagerBase;
        $r1 = r0.<org.apache.catalina.session.ManagerBase: org.apache.catalina.Container container>;
        $r2 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String getDomain(org.apache.catalina.Container)>($r1);
        return $r2;
    }
}
