public final class java.net.URL extends java.lang.Object implements java.io.Serializable
{
    static final long serialVersionUID;
    private static final java.lang.String protocolPathProp;
    private java.lang.String protocol;
    private java.lang.String host;
    private int port;
    private java.lang.String file;
    private transient java.lang.String query;
    private java.lang.String authority;
    private transient java.lang.String path;
    private transient java.lang.String userInfo;
    private java.lang.String ref;
    transient java.net.InetAddress hostAddress;
    transient java.net.URLStreamHandler handler;
    private int hashCode;
    static java.net.URLStreamHandlerFactory factory;
    static java.util.Hashtable handlers;
    private static java.lang.Object streamHandlerLock;
    private static final java.lang.String GOPHER;
    private static final java.lang.String ENABLE_GOPHER_PROP;
    private static final boolean enableGopher;
    private static final java.lang.String JDK_PACKAGE_PREFIX;

    public void <init>(java.lang.String, java.lang.String, int, java.lang.String) throws java.net.MalformedURLException
    {
        java.net.URL r0;
        java.lang.String r1, r2, r3;
        int i0;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        r3 := @parameter3: java.lang.String;
        specialinvoke r0.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>(r1, r2, i0, r3, null);
        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws java.net.MalformedURLException
    {
        java.net.URL r0;
        java.lang.String r1, r2, r3;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        specialinvoke r0.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>(r1, r2, -1, r3);
        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, java.lang.String, java.net.URLStreamHandler) throws java.net.MalformedURLException
    {
        java.net.URL r0;
        java.lang.String r1, r2, r3, r7, $r15, $r17, $r24, $r25, $r26, $r28, $r31, $r33, $r34, $r35, $r41;
        int i0, $i1;
        java.net.URLStreamHandler r4, $r36;
        java.lang.SecurityManager r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r13, $r14, $r18, $r19, $r20, $r21, $r27, $r29, $r30, $r32, $r38, $r39, $r40;
        boolean $z0;
        java.net.MalformedURLException $r12, $r37;
        java.net.Parts $r22, r23;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.net.URLStreamHandler;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.net.URL: int port> = -1;
        r0.<java.net.URL: int hashCode> = -1;
        if r4 == null goto label0;

        r5 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r5 == null goto label0;

        specialinvoke r0.<java.net.URL: void checkSpecifyHandler(java.lang.SecurityManager)>(r5);

     label0:
        r7 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<java.net.URL: java.lang.String protocol> = r7;
        if r2 == null goto label5;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(58);
        if $i1 < 0 goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if $z0 != 0 goto label1;

        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        r0.<java.net.URL: java.lang.String host> = r2;
        if i0 >= -1 goto label2;

        $r12 = new java.net.MalformedURLException;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid port number :");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r12.<java.net.MalformedURLException: void <init>(java.lang.String)>($r15);
        throw $r12;

     label2:
        r0.<java.net.URL: int port> = i0;
        if i0 != -1 goto label3;

        $r17 = r2;
        goto label4;

     label3:
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r17 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r0.<java.net.URL: java.lang.String authority> = $r17;

     label5:
        $r22 = new java.net.Parts;
        specialinvoke $r22.<java.net.Parts: void <init>(java.lang.String)>(r3);
        r23 = $r22;
        $r24 = virtualinvoke r23.<java.net.Parts: java.lang.String getPath()>();
        r0.<java.net.URL: java.lang.String path> = $r24;
        $r25 = virtualinvoke r23.<java.net.Parts: java.lang.String getQuery()>();
        r0.<java.net.URL: java.lang.String query> = $r25;
        $r26 = r0.<java.net.URL: java.lang.String query>;
        if $r26 == null goto label6;

        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = r0.<java.net.URL: java.lang.String path>;
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");
        $r31 = r0.<java.net.URL: java.lang.String query>;
        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<java.net.URL: java.lang.String file> = $r33;
        goto label7;

     label6:
        $r34 = r0.<java.net.URL: java.lang.String path>;
        r0.<java.net.URL: java.lang.String file> = $r34;

     label7:
        $r35 = virtualinvoke r23.<java.net.Parts: java.lang.String getRef()>();
        r0.<java.net.URL: java.lang.String ref> = $r35;
        if r4 != null goto label8;

        $r36 = staticinvoke <java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>(r7);
        r4 = $r36;
        if $r36 != null goto label8;

        $r37 = new java.net.MalformedURLException;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown protocol: ");
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r37.<java.net.MalformedURLException: void <init>(java.lang.String)>($r41);
        throw $r37;

     label8:
        r0.<java.net.URL: java.net.URLStreamHandler handler> = r4;
        return;
    }

    public void <init>(java.lang.String) throws java.net.MalformedURLException
    {
        java.net.URL r0;
        java.lang.String r1;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.net.URL: void <init>(java.net.URL,java.lang.String)>(null, r1);
        return;
    }

    public void <init>(java.net.URL, java.lang.String) throws java.net.MalformedURLException
    {
        java.net.URL r0, r1;
        java.lang.String r2;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>(r1, r2, null);
        return;
    }

    public void <init>(java.net.URL, java.lang.String, java.net.URLStreamHandler) throws java.net.MalformedURLException
    {
        java.net.URL r0, r1;
        java.lang.String r2, r4, r5, $r8, r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r24, $r25, $r30, $r32, $r33, $r34, $r35, $r36, $r42;
        java.net.URLStreamHandler r3, $r26;
        int i0, i1, i2, $i4, $i7, $i10, i11, $i12;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.SecurityManager r6;
        char c3, $c5, $c6, $c8, $c9;
        java.net.MalformedURLException r7, $r20, $r27, $r37, r38, $r41;
        java.lang.StringBuilder $r21, $r22, $r23, $r28, $r29, $r31;
        java.lang.Exception $r39, r40;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.net.URLStreamHandler;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.net.URL: int port> = -1;
        r0.<java.net.URL: int hashCode> = -1;
        r4 = r2;
        i0 = 0;
        r5 = null;
        z0 = 0;
        z1 = 0;
        if r3 == null goto label0;

        r6 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r6 == null goto label0;

        specialinvoke r0.<java.net.URL: void checkSpecifyHandler(java.lang.SecurityManager)>(r6);

     label0:
        i1 = virtualinvoke r2.<java.lang.String: int length()>();

     label1:
        if i1 <= 0 goto label2;

        $i4 = i1 - 1;
        $c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i4);
        if $c5 > 32 goto label2;

        i1 = i1 + -1;
        goto label1;

     label2:
        if i0 >= i1 goto label3;

        $c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);
        if $c6 > 32 goto label3;

        i0 = i0 + 1;
        goto label2;

     label3:
        $z2 = virtualinvoke r2.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, "url:", 0, 4);
        if $z2 == 0 goto label4;

        i0 = i0 + 4;

     label4:
        $i7 = virtualinvoke r2.<java.lang.String: int length()>();
        if i0 >= $i7 goto label5;

        $c8 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);
        if $c8 != 35 goto label5;

        z0 = 1;

     label5:
        i2 = i0;

     label6:
        if z0 != 0 goto label8;

        if i2 >= i1 goto label8;

        $c9 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i2);
        c3 = $c9;
        if $c9 == 47 goto label8;

        if c3 != 58 goto label7;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i0, i2);
        r9 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();
        $z3 = specialinvoke r0.<java.net.URL: boolean isValidProtocol(java.lang.String)>(r9);
        if $z3 == 0 goto label8;

        r5 = r9;
        i0 = i2 + 1;
        goto label8;

     label7:
        i2 = i2 + 1;
        goto label6;

     label8:
        r0.<java.net.URL: java.lang.String protocol> = r5;
        if r1 == null goto label12;

        if r5 == null goto label9;

        $r10 = r1.<java.net.URL: java.lang.String protocol>;
        $z4 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);
        if $z4 == 0 goto label12;

     label9:
        if r3 != null goto label10;

        r3 = r1.<java.net.URL: java.net.URLStreamHandler handler>;

     label10:
        $r11 = r1.<java.net.URL: java.lang.String path>;
        if $r11 == null goto label11;

        $r12 = r1.<java.net.URL: java.lang.String path>;
        $z5 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z5 == 0 goto label11;

        r5 = null;

     label11:
        if r5 != null goto label12;

        $r13 = r1.<java.net.URL: java.lang.String protocol>;
        r0.<java.net.URL: java.lang.String protocol> = $r13;
        $r14 = r1.<java.net.URL: java.lang.String authority>;
        r0.<java.net.URL: java.lang.String authority> = $r14;
        $r15 = r1.<java.net.URL: java.lang.String userInfo>;
        r0.<java.net.URL: java.lang.String userInfo> = $r15;
        $r16 = r1.<java.net.URL: java.lang.String host>;
        r0.<java.net.URL: java.lang.String host> = $r16;
        $i10 = r1.<java.net.URL: int port>;
        r0.<java.net.URL: int port> = $i10;
        $r17 = r1.<java.net.URL: java.lang.String file>;
        r0.<java.net.URL: java.lang.String file> = $r17;
        $r18 = r1.<java.net.URL: java.lang.String path>;
        r0.<java.net.URL: java.lang.String path> = $r18;
        z1 = 1;

     label12:
        $r19 = r0.<java.net.URL: java.lang.String protocol>;
        if $r19 != null goto label13;

        $r20 = new java.net.MalformedURLException;
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no protocol: ");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r20.<java.net.MalformedURLException: void <init>(java.lang.String)>($r24);
        throw $r20;

     label13:
        if r3 != null goto label14;

        $r25 = r0.<java.net.URL: java.lang.String protocol>;
        $r26 = staticinvoke <java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>($r25);
        r3 = $r26;
        if $r26 != null goto label14;

        $r27 = new java.net.MalformedURLException;
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown protocol: ");
        $r30 = r0.<java.net.URL: java.lang.String protocol>;
        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r27.<java.net.MalformedURLException: void <init>(java.lang.String)>($r32);
        throw $r27;

     label14:
        r0.<java.net.URL: java.net.URLStreamHandler handler> = r3;
        i11 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(35, i0);
        if i11 < 0 goto label15;

        $i12 = i11 + 1;
        $r33 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i12, i1);
        r0.<java.net.URL: java.lang.String ref> = $r33;
        i1 = i11;

     label15:
        if z1 == 0 goto label16;

        if i0 != i1 goto label16;

        $r34 = r1.<java.net.URL: java.lang.String query>;
        r0.<java.net.URL: java.lang.String query> = $r34;
        $r35 = r0.<java.net.URL: java.lang.String ref>;
        if $r35 != null goto label16;

        $r36 = r1.<java.net.URL: java.lang.String ref>;
        r0.<java.net.URL: java.lang.String ref> = $r36;

     label16:
        virtualinvoke r3.<java.net.URLStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>(r0, r2, i0, i1);

     label17:
        goto label20;

     label18:
        $r37 := @caughtexception;
        r38 = $r37;
        throw r38;

     label19:
        $r39 := @caughtexception;
        r40 = $r39;
        $r41 = new java.net.MalformedURLException;
        $r42 = virtualinvoke r40.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r41.<java.net.MalformedURLException: void <init>(java.lang.String)>($r42);
        r7 = $r41;
        virtualinvoke r7.<java.net.MalformedURLException: java.lang.Throwable initCause(java.lang.Throwable)>(r40);
        throw r7;

     label20:
        return;

        catch java.net.MalformedURLException from label0 to label17 with label18;
        catch java.lang.Exception from label0 to label17 with label19;
    }

    private boolean isValidProtocol(java.lang.String)
    {
        java.net.URL r0;
        java.lang.String r1;
        int i0, i2;
        char c1, c3;
        boolean $z0, $z1;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.lang.String;
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if i0 >= 1 goto label0;

        return 0;

     label0:
        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c1);
        if $z0 != 0 goto label1;

        return 0;

     label1:
        i2 = 1;

     label2:
        if i2 >= i0 goto label4;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);
        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c3);
        if $z1 != 0 goto label3;

        if c3 == 46 goto label3;

        if c3 == 43 goto label3;

        if c3 == 45 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;
        goto label2;

     label4:
        return 1;
    }

    private void checkSpecifyHandler(java.lang.SecurityManager)
    {
        java.net.URL r0;
        java.lang.SecurityManager r1;
        java.net.NetPermission $r2;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.lang.SecurityManager;
        $r2 = <sun.security.util.SecurityConstants: java.net.NetPermission SPECIFY_HANDLER_PERMISSION>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);
        return;
    }

    protected void set(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)
    {
        java.net.URL r0, r6;
        java.lang.String r1, r2, r3, r4, $r9, $r14, $r15;
        int i0, i1, $i2;
        java.lang.Throwable r7, $r16;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.String;
        r6 = r0;
        entermonitor r0;

     label0:
        r0.<java.net.URL: java.lang.String protocol> = r1;
        r0.<java.net.URL: java.lang.String host> = r2;
        if i0 != -1 goto label1;

        $r9 = r2;
        goto label2;

     label1:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        r0.<java.net.URL: java.lang.String authority> = $r9;
        r0.<java.net.URL: int port> = i0;
        r0.<java.net.URL: java.lang.String file> = r3;
        r0.<java.net.URL: java.lang.String ref> = r4;
        r0.<java.net.URL: int hashCode> = -1;
        r0.<java.net.URL: java.net.InetAddress hostAddress> = null;
        i1 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(63);
        if i1 == -1 goto label3;

        $i2 = i1 + 1;
        $r14 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i2);
        r0.<java.net.URL: java.lang.String query> = $r14;
        $r15 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i1);
        r0.<java.net.URL: java.lang.String path> = $r15;
        goto label4;

     label3:
        r0.<java.net.URL: java.lang.String path> = r3;

     label4:
        exitmonitor r6;

     label5:
        goto label9;

     label6:
        $r16 := @caughtexception;

     label7:
        r7 = $r16;
        exitmonitor r6;

     label8:
        throw r7;

     label9:
        return;

        catch java.lang.Throwable from label0 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    protected void set(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.URL r0, r9;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, $r12;
        int i0;
        java.lang.Throwable r10, $r17;
        java.lang.StringBuilder $r13, $r14, $r15, $r16;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.String;
        r5 := @parameter5: java.lang.String;
        r6 := @parameter6: java.lang.String;
        r7 := @parameter7: java.lang.String;
        r9 = r0;
        entermonitor r0;

     label0:
        r0.<java.net.URL: java.lang.String protocol> = r1;
        r0.<java.net.URL: java.lang.String host> = r2;
        r0.<java.net.URL: int port> = i0;
        if r6 != null goto label1;

        $r12 = r5;
        goto label2;

     label1:
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r12 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        r0.<java.net.URL: java.lang.String file> = $r12;
        r0.<java.net.URL: java.lang.String userInfo> = r4;
        r0.<java.net.URL: java.lang.String path> = r5;
        r0.<java.net.URL: java.lang.String ref> = r7;
        r0.<java.net.URL: int hashCode> = -1;
        r0.<java.net.URL: java.net.InetAddress hostAddress> = null;
        r0.<java.net.URL: java.lang.String query> = r6;
        r0.<java.net.URL: java.lang.String authority> = r3;
        exitmonitor r9;

     label3:
        goto label7;

     label4:
        $r17 := @caughtexception;

     label5:
        r10 = $r17;
        exitmonitor r9;

     label6:
        throw r10;

     label7:
        return;

        catch java.lang.Throwable from label0 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.lang.String getQuery()
    {
        java.net.URL r0;
        java.lang.String $r1;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.lang.String query>;
        return $r1;
    }

    public java.lang.String getPath()
    {
        java.net.URL r0;
        java.lang.String $r1;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.lang.String path>;
        return $r1;
    }

    public java.lang.String getUserInfo()
    {
        java.net.URL r0;
        java.lang.String $r1;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.lang.String userInfo>;
        return $r1;
    }

    public java.lang.String getAuthority()
    {
        java.net.URL r0;
        java.lang.String $r1;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.lang.String authority>;
        return $r1;
    }

    public int getPort()
    {
        java.net.URL r0;
        int $i0;

        r0 := @this: java.net.URL;
        $i0 = r0.<java.net.URL: int port>;
        return $i0;
    }

    public int getDefaultPort()
    {
        java.net.URL r0;
        java.net.URLStreamHandler $r1;
        int $i0;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.net.URLStreamHandler handler>;
        $i0 = virtualinvoke $r1.<java.net.URLStreamHandler: int getDefaultPort()>();
        return $i0;
    }

    public java.lang.String getProtocol()
    {
        java.net.URL r0;
        java.lang.String $r1;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.lang.String protocol>;
        return $r1;
    }

    public java.lang.String getHost()
    {
        java.net.URL r0;
        java.lang.String $r1;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.lang.String host>;
        return $r1;
    }

    public java.lang.String getFile()
    {
        java.net.URL r0;
        java.lang.String $r1;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.lang.String file>;
        return $r1;
    }

    public java.lang.String getRef()
    {
        java.net.URL r0;
        java.lang.String $r1;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.lang.String ref>;
        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.net.URL r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.net.URLStreamHandler $r3;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.net.URL;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        r2 = (java.net.URL) r1;
        $r3 = r0.<java.net.URL: java.net.URLStreamHandler handler>;
        $z1 = virtualinvoke $r3.<java.net.URLStreamHandler: boolean equals(java.net.URL,java.net.URL)>(r0, r2);
        return $z1;
    }

    public synchronized int hashCode()
    {
        java.net.URL r0;
        int $i0, $i1, $i2, $i3;
        java.net.URLStreamHandler $r1;

        r0 := @this: java.net.URL;
        $i0 = r0.<java.net.URL: int hashCode>;
        if $i0 == -1 goto label0;

        $i1 = r0.<java.net.URL: int hashCode>;
        return $i1;

     label0:
        $r1 = r0.<java.net.URL: java.net.URLStreamHandler handler>;
        $i2 = virtualinvoke $r1.<java.net.URLStreamHandler: int hashCode(java.net.URL)>(r0);
        r0.<java.net.URL: int hashCode> = $i2;
        $i3 = r0.<java.net.URL: int hashCode>;
        return $i3;
    }

    public boolean sameFile(java.net.URL)
    {
        java.net.URL r0, r1;
        java.net.URLStreamHandler $r2;
        boolean $z0;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.net.URL;
        $r2 = r0.<java.net.URL: java.net.URLStreamHandler handler>;
        $z0 = virtualinvoke $r2.<java.net.URLStreamHandler: boolean sameFile(java.net.URL,java.net.URL)>(r0, r1);
        return $z0;
    }

    public java.lang.String toString()
    {
        java.net.URL r0;
        java.lang.String $r1;

        r0 := @this: java.net.URL;
        $r1 = virtualinvoke r0.<java.net.URL: java.lang.String toExternalForm()>();
        return $r1;
    }

    public java.lang.String toExternalForm()
    {
        java.net.URL r0;
        java.net.URLStreamHandler $r1;
        java.lang.String $r2;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.net.URLStreamHandler handler>;
        $r2 = virtualinvoke $r1.<java.net.URLStreamHandler: java.lang.String toExternalForm(java.net.URL)>(r0);
        return $r2;
    }

    public java.net.URI toURI() throws java.net.URISyntaxException
    {
        java.net.URL r0;
        java.net.URI $r1;
        java.lang.String $r2;

        r0 := @this: java.net.URL;
        $r1 = new java.net.URI;
        $r2 = virtualinvoke r0.<java.net.URL: java.lang.String toString()>();
        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>($r2);
        return $r1;
    }

    public java.net.URLConnection openConnection() throws java.io.IOException
    {
        java.net.URL r0;
        java.net.URLStreamHandler $r1;
        java.net.URLConnection $r2;

        r0 := @this: java.net.URL;
        $r1 = r0.<java.net.URL: java.net.URLStreamHandler handler>;
        $r2 = virtualinvoke $r1.<java.net.URLStreamHandler: java.net.URLConnection openConnection(java.net.URL)>(r0);
        return $r2;
    }

    public java.net.URLConnection openConnection(java.net.Proxy) throws java.io.IOException
    {
        java.net.URL r0;
        java.net.Proxy r1, r2, $r6, $r7;
        java.lang.SecurityManager r3;
        java.net.InetSocketAddress r4;
        java.lang.IllegalArgumentException $r5;
        java.net.Proxy$Type $r8, $r9;
        java.net.SocketAddress $r10;
        boolean $z0;
        java.lang.String $r11, $r13;
        int $i0, $i1;
        java.net.InetAddress $r12;
        java.net.URLStreamHandler $r14;
        java.net.URLConnection $r15;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.net.Proxy;
        if r1 != null goto label0;

        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("proxy can not be null");
        throw $r5;

     label0:
        $r6 = <java.net.Proxy: java.net.Proxy NO_PROXY>;
        if r1 != $r6 goto label1;

        $r7 = <java.net.Proxy: java.net.Proxy NO_PROXY>;
        goto label2;

     label1:
        $r7 = staticinvoke <sun.net.ApplicationProxy: sun.net.ApplicationProxy create(java.net.Proxy)>(r1);

     label2:
        r2 = $r7;
        r3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        $r8 = virtualinvoke r2.<java.net.Proxy: java.net.Proxy$Type type()>();
        $r9 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;
        if $r8 == $r9 goto label4;

        if r3 == null goto label4;

        $r10 = virtualinvoke r2.<java.net.Proxy: java.net.SocketAddress address()>();
        r4 = (java.net.InetSocketAddress) $r10;
        $z0 = virtualinvoke r4.<java.net.InetSocketAddress: boolean isUnresolved()>();
        if $z0 == 0 goto label3;

        $r11 = virtualinvoke r4.<java.net.InetSocketAddress: java.lang.String getHostName()>();
        $i0 = virtualinvoke r4.<java.net.InetSocketAddress: int getPort()>();
        virtualinvoke r3.<java.lang.SecurityManager: void checkConnect(java.lang.String,int)>($r11, $i0);
        goto label4;

     label3:
        $r12 = virtualinvoke r4.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();
        $r13 = virtualinvoke $r12.<java.net.InetAddress: java.lang.String getHostAddress()>();
        $i1 = virtualinvoke r4.<java.net.InetSocketAddress: int getPort()>();
        virtualinvoke r3.<java.lang.SecurityManager: void checkConnect(java.lang.String,int)>($r13, $i1);

     label4:
        $r14 = r0.<java.net.URL: java.net.URLStreamHandler handler>;
        $r15 = virtualinvoke $r14.<java.net.URLStreamHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>(r0, r2);
        return $r15;
    }

    public final java.io.InputStream openStream() throws java.io.IOException
    {
        java.net.URL r0;
        java.net.URLConnection $r1;
        java.io.InputStream $r2;

        r0 := @this: java.net.URL;
        $r1 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>();
        $r2 = virtualinvoke $r1.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        return $r2;
    }

    public final java.lang.Object getContent() throws java.io.IOException
    {
        java.net.URL r0;
        java.net.URLConnection $r1;
        java.lang.Object $r2;

        r0 := @this: java.net.URL;
        $r1 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>();
        $r2 = virtualinvoke $r1.<java.net.URLConnection: java.lang.Object getContent()>();
        return $r2;
    }

    public final java.lang.Object getContent(java.lang.Class[]) throws java.io.IOException
    {
        java.net.URL r0;
        java.lang.Class[] r1;
        java.net.URLConnection $r2;
        java.lang.Object $r3;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.lang.Class[];
        $r2 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>();
        $r3 = virtualinvoke $r2.<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>(r1);
        return $r3;
    }

    public static void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)
    {
        java.net.URLStreamHandlerFactory r0, $r5;
        java.lang.Object $r1, r2;
        java.lang.SecurityManager r3;
        java.lang.Throwable r4, $r8;
        java.lang.Error $r6;
        java.util.Hashtable $r7;

        r0 := @parameter0: java.net.URLStreamHandlerFactory;
        $r1 = <java.net.URL: java.lang.Object streamHandlerLock>;
        r2 = $r1;
        entermonitor $r1;

     label0:
        $r5 = <java.net.URL: java.net.URLStreamHandlerFactory factory>;
        if $r5 == null goto label1;

        $r6 = new java.lang.Error;
        specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>("factory already defined");
        throw $r6;

     label1:
        r3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r3 == null goto label2;

        virtualinvoke r3.<java.lang.SecurityManager: void checkSetFactory()>();

     label2:
        $r7 = <java.net.URL: java.util.Hashtable handlers>;
        virtualinvoke $r7.<java.util.Hashtable: void clear()>();
        <java.net.URL: java.net.URLStreamHandlerFactory factory> = r0;
        exitmonitor r2;

     label3:
        goto label7;

     label4:
        $r8 := @caughtexception;

     label5:
        r4 = $r8;
        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label0 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    static java.net.URLStreamHandler getURLStreamHandler(java.lang.String)
    {
        java.lang.String r0, r4, r5, r15, r22, $r24;
        java.util.Hashtable $r1, $r36, $r42;
        java.net.URLStreamHandler r2, r38;
        boolean z0, $z1, $z2, $z3, $z4;
        null_type n0, n1;
        java.util.StringTokenizer r3, $r23;
        java.lang.Class r6;
        java.lang.ClassNotFoundException r7, $r30;
        java.lang.ClassLoader r8;
        java.lang.Throwable r9, $r44;
        java.lang.Object $r10, $r14, $r31, $r34, r35, $r37;
        java.net.URLStreamHandlerFactory $r11, $r12, $r40, $r41;
        sun.security.action.GetPropertyAction $r13;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r21, $r25, $r26, $r27, $r28, $r29;
        java.lang.Exception $r32, r33;

        r0 := @parameter0: java.lang.String;
        $r1 = <java.net.URL: java.util.Hashtable handlers>;
        $r10 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (java.net.URLStreamHandler) $r10;
        if r2 != null goto label22;

        z0 = 0;
        $r11 = <java.net.URL: java.net.URLStreamHandlerFactory factory>;
        if $r11 == null goto label0;

        $r12 = <java.net.URL: java.net.URLStreamHandlerFactory factory>;
        r2 = interfaceinvoke $r12.<java.net.URLStreamHandlerFactory: java.net.URLStreamHandler createURLStreamHandler(java.lang.String)>(r0);
        z0 = 1;

     label0:
        if r2 != null goto label11;

        n0 = null;
        $r13 = new sun.security.action.GetPropertyAction;
        specialinvoke $r13.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>("java.protocol.handler.pkgs", "");
        $r14 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r13);
        r15 = (java.lang.String) $r14;
        if r15 == "" goto label1;

        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");
        r15 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sun.net.www.protocol");
        r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        $r23 = new java.util.StringTokenizer;
        specialinvoke $r23.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r22, "|");
        r3 = $r23;

     label2:
        if r2 != null goto label11;

        $z1 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z1 == 0 goto label11;

        $r24 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r4 = virtualinvoke $r24.<java.lang.String: java.lang.String trim()>();
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("gopher");
        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("sun.net.www.protocol");
        if $z3 == 0 goto label3;

        $z4 = <java.net.URL: boolean enableGopher>;
        if $z4 != 0 goto label3;

        goto label2;

     label3:
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".Handler");
        r5 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        r6 = null;

     label4:
        r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r5);

     label5:
        goto label7;

     label6:
        $r30 := @caughtexception;
        r7 = $r30;
        r8 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();
        if r8 == null goto label7;

        r6 = virtualinvoke r8.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r5);

     label7:
        if r6 == null goto label8;

        $r31 = virtualinvoke r6.<java.lang.Class: java.lang.Object newInstance()>();
        r2 = (java.net.URLStreamHandler) $r31;

     label8:
        goto label10;

     label9:
        $r32 := @caughtexception;
        r33 = $r32;

     label10:
        goto label2;

     label11:
        $r34 = <java.net.URL: java.lang.Object streamHandlerLock>;
        r35 = $r34;
        entermonitor $r34;

     label12:
        n1 = null;
        $r36 = <java.net.URL: java.util.Hashtable handlers>;
        $r37 = virtualinvoke $r36.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);
        r38 = (java.net.URLStreamHandler) $r37;
        if r38 == null goto label14;

        exitmonitor r35;

     label13:
        return r38;

     label14:
        if z0 != 0 goto label15;

        $r40 = <java.net.URL: java.net.URLStreamHandlerFactory factory>;
        if $r40 == null goto label15;

        $r41 = <java.net.URL: java.net.URLStreamHandlerFactory factory>;
        r38 = interfaceinvoke $r41.<java.net.URLStreamHandlerFactory: java.net.URLStreamHandler createURLStreamHandler(java.lang.String)>(r0);

     label15:
        if r38 == null goto label16;

        r2 = r38;

     label16:
        if r2 == null goto label17;

        $r42 = <java.net.URL: java.util.Hashtable handlers>;
        virtualinvoke $r42.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

     label17:
        exitmonitor r35;

     label18:
        goto label22;

     label19:
        $r44 := @caughtexception;

     label20:
        r9 = $r44;
        exitmonitor r35;

     label21:
        throw r9;

     label22:
        return r2;

        catch java.lang.ClassNotFoundException from label4 to label5 with label6;
        catch java.lang.Exception from label3 to label8 with label9;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    private synchronized void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.net.URL r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.io.ObjectOutputStream;
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();
        return;
    }

    private synchronized void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.net.URL r0;
        java.io.ObjectInputStream r1;
        java.net.URLStreamHandler $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        java.lang.String $r3, $r7, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r16, $r18, $r19, $r20;

        r0 := @this: java.net.URL;
        r1 := @parameter0: java.io.ObjectInputStream;
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();
        $r3 = r0.<java.net.URL: java.lang.String protocol>;
        $r2 = staticinvoke <java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>($r3);
        r0.<java.net.URL: java.net.URLStreamHandler handler> = $r2;
        if $r2 != null goto label0;

        $r4 = new java.io.IOException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown protocol: ");
        $r7 = r0.<java.net.URL: java.lang.String protocol>;
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9);
        throw $r4;

     label0:
        $r10 = r0.<java.net.URL: java.lang.String authority>;
        if $r10 != null goto label7;

        $r11 = r0.<java.net.URL: java.lang.String host>;
        if $r11 == null goto label1;

        $r12 = r0.<java.net.URL: java.lang.String host>;
        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();
        if $i1 > 0 goto label2;

     label1:
        $i2 = r0.<java.net.URL: int port>;
        if $i2 == -1 goto label7;

     label2:
        $r13 = r0.<java.net.URL: java.lang.String host>;
        if $r13 != null goto label3;

        r0.<java.net.URL: java.lang.String host> = "";

     label3:
        $i3 = r0.<java.net.URL: int port>;
        if $i3 != -1 goto label4;

        $r15 = r0.<java.net.URL: java.lang.String host>;
        goto label5;

     label4:
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = r0.<java.net.URL: java.lang.String host>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $i4 = r0.<java.net.URL: int port>;
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r15 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        r0.<java.net.URL: java.lang.String authority> = $r15;
        $r21 = r0.<java.net.URL: java.lang.String host>;
        i0 = virtualinvoke $r21.<java.lang.String: int lastIndexOf(int)>(64);
        if i0 == -1 goto label6;

        $r22 = r0.<java.net.URL: java.lang.String host>;
        $r23 = virtualinvoke $r22.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        r0.<java.net.URL: java.lang.String userInfo> = $r23;
        $r24 = r0.<java.net.URL: java.lang.String host>;
        $i5 = i0 + 1;
        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int)>($i5);
        r0.<java.net.URL: java.lang.String host> = $r25;

     label6:
        goto label8;

     label7:
        $r26 = r0.<java.net.URL: java.lang.String authority>;
        if $r26 == null goto label8;

        $r27 = r0.<java.net.URL: java.lang.String authority>;
        i6 = virtualinvoke $r27.<java.lang.String: int indexOf(int)>(64);
        if i6 == -1 goto label8;

        $r28 = r0.<java.net.URL: java.lang.String authority>;
        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String substring(int,int)>(0, i6);
        r0.<java.net.URL: java.lang.String userInfo> = $r29;

     label8:
        r0.<java.net.URL: java.lang.String path> = null;
        r0.<java.net.URL: java.lang.String query> = null;
        $r30 = r0.<java.net.URL: java.lang.String file>;
        if $r30 == null goto label10;

        $r31 = r0.<java.net.URL: java.lang.String file>;
        i7 = virtualinvoke $r31.<java.lang.String: int lastIndexOf(int)>(63);
        if i7 == -1 goto label9;

        $r32 = r0.<java.net.URL: java.lang.String file>;
        $i8 = i7 + 1;
        $r33 = virtualinvoke $r32.<java.lang.String: java.lang.String substring(int)>($i8);
        r0.<java.net.URL: java.lang.String query> = $r33;
        $r34 = r0.<java.net.URL: java.lang.String file>;
        $r35 = virtualinvoke $r34.<java.lang.String: java.lang.String substring(int,int)>(0, i7);
        r0.<java.net.URL: java.lang.String path> = $r35;
        goto label10;

     label9:
        $r36 = r0.<java.net.URL: java.lang.String file>;
        r0.<java.net.URL: java.lang.String path> = $r36;

     label10:
        return;
    }

    static void <clinit>()
    {
        java.util.Hashtable $r0;
        java.lang.Object $r1, $r3;
        java.net.URL$1 $r2;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 = new java.util.Hashtable;
        specialinvoke $r0.<java.util.Hashtable: void <init>()>();
        <java.net.URL: java.util.Hashtable handlers> = $r0;
        $r1 = new java.lang.Object;
        specialinvoke $r1.<java.lang.Object: void <init>()>();
        <java.net.URL: java.lang.Object streamHandlerLock> = $r1;
        $r2 = new java.net.URL$1;
        specialinvoke $r2.<java.net.URL$1: void <init>()>();
        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);
        $r4 = (java.lang.Boolean) $r3;
        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();
        <java.net.URL: boolean enableGopher> = $z0;
        return;
    }
}
