class sun.net.www.protocol.http.HttpURLConnection$ErrorStream extends java.io.InputStream
{
    java.nio.ByteBuffer buffer;
    java.io.InputStream is;

    private void <init>(java.nio.ByteBuffer)
    {
        sun.net.www.protocol.http.HttpURLConnection$ErrorStream r0;
        java.nio.ByteBuffer r1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection$ErrorStream;
        r1 := @parameter0: java.nio.ByteBuffer;
        specialinvoke r0.<java.io.InputStream: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.nio.ByteBuffer buffer> = r1;
        r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream is> = null;
        return;
    }

    private void <init>(java.nio.ByteBuffer, java.io.InputStream)
    {
        sun.net.www.protocol.http.HttpURLConnection$ErrorStream r0;
        java.nio.ByteBuffer r1;
        java.io.InputStream r2;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection$ErrorStream;
        r1 := @parameter0: java.nio.ByteBuffer;
        r2 := @parameter1: java.io.InputStream;
        specialinvoke r0.<java.io.InputStream: void <init>()>();
        r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.nio.ByteBuffer buffer> = r1;
        r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream is> = r2;
        return;
    }

    public static java.io.InputStream getErrorStream(java.io.InputStream, long, sun.net.www.http.HttpClient)
    {
        java.io.InputStream r0;
        long l0, l3, l12, $l14, $l21;
        sun.net.www.http.HttpClient r1;
        int i1, $i2, i4, i5, i6, i7, $i9, $i11, $i13, $i16, $i17, $i18, $i19, $i20;
        boolean z0;
        byte[] r2;
        java.net.SocketTimeoutException r3, $r10;
        byte $b8, $b10, $b15, $b22;
        java.io.IOException $r4, $r15, r16;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        null_type $n0, $n1;
        sun.net.www.protocol.http.HttpURLConnection$ErrorStream $r11, $r13;
        java.nio.ByteBuffer $r12, $r14;

        r0 := @parameter0: java.io.InputStream;
        l0 := @parameter1: long;
        r1 := @parameter2: sun.net.www.http.HttpClient;
        $b8 = l0 cmp 0L;
        if $b8 != 0 goto label0;

        return null;

     label0:
        i1 = virtualinvoke r1.<sun.net.www.http.HttpClient: int getReadTimeout()>();
        $i2 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: int access$200()>();
        $i9 = $i2 / 5;
        virtualinvoke r1.<sun.net.www.http.HttpClient: void setReadTimeout(int)>($i9);
        l3 = 0L;
        z0 = 0;
        $b10 = l0 cmp 0L;
        if $b10 >= 0 goto label1;

        $i11 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: int access$300()>();
        l12 = (long) $i11;
        z0 = 1;
        goto label2;

     label1:
        l12 = l0;

     label2:
        $i13 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: int access$300()>();
        $l14 = (long) $i13;
        $b15 = l12 cmp $l14;
        if $b15 > 0 goto label18;

        i4 = (int) l12;
        r2 = newarray (byte)[i4];
        i5 = 0;
        i6 = 0;
        i7 = 0;

     label3:
        $i16 = lengthof r2;
        $i17 = $i16 - i5;
        i7 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r2, i5, $i17);
        if i7 >= 0 goto label6;

        if z0 == 0 goto label5;

     label4:
        goto label10;

     label5:
        $r4 = new java.io.IOException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the server closes before sending ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes of data");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9);
        throw $r4;

     label6:
        i5 = i5 + i7;

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;
        r3 = $r10;
        $i18 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: int access$200()>();
        $i19 = $i18 / 5;
        i6 = i6 + $i19;

     label9:
        if i5 >= i4 goto label10;

        $i20 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: int access$200()>();
        if i6 < $i20 goto label3;

     label10:
        virtualinvoke r1.<sun.net.www.http.HttpClient: void setReadTimeout(int)>(i1);
        if i5 != 0 goto label12;

        $n0 = null;

     label11:
        return $n0;

     label12:
        $l21 = (long) i5;
        $b22 = $l21 cmp l12;
        if $b22 != 0 goto label13;

        if z0 == 0 goto label14;

     label13:
        if z0 == 0 goto label16;

        if i7 >= 0 goto label16;

     label14:
        virtualinvoke r0.<java.io.InputStream: void close()>();
        $r11 = new sun.net.www.protocol.http.HttpURLConnection$ErrorStream;
        $r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r2, 0, i5);
        specialinvoke $r11.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: void <init>(java.nio.ByteBuffer)>($r12);

     label15:
        return $r11;

     label16:
        $r13 = new sun.net.www.protocol.http.HttpURLConnection$ErrorStream;
        $r14 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r2, 0, i5);
        specialinvoke $r13.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: void <init>(java.nio.ByteBuffer,java.io.InputStream)>($r14, r0);

     label17:
        return $r13;

     label18:
        $n1 = null;

     label19:
        return $n1;

     label20:
        $r15 := @caughtexception;
        r16 = $r15;
        return null;

        catch java.net.SocketTimeoutException from label3 to label4 with label8;
        catch java.net.SocketTimeoutException from label5 to label7 with label8;
        catch java.io.IOException from label0 to label11 with label20;
        catch java.io.IOException from label12 to label15 with label20;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.io.IOException from label18 to label19 with label20;
    }

    public int available() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection$ErrorStream r0;
        java.io.InputStream $r1, $r4;
        java.nio.ByteBuffer $r2, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection$ErrorStream;
        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream is>;
        if $r1 != null goto label0;

        $r2 = r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.nio.ByteBuffer buffer>;
        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();
        return $i0;

     label0:
        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.nio.ByteBuffer buffer>;
        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int remaining()>();
        $r4 = r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream is>;
        $i2 = virtualinvoke $r4.<java.io.InputStream: int available()>();
        $i3 = $i1 + $i2;
        return $i3;
    }

    public int read() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection$ErrorStream r0;
        byte[] r1;
        int i0, $i1;
        byte $b2;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection$ErrorStream;
        r1 = newarray (byte)[1];
        i0 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: int read(byte[])>(r1);
        if i0 != -1 goto label0;

        $i1 = i0;
        goto label1;

     label0:
        $b2 = r1[0];
        $i1 = $b2 & 255;

     label1:
        return $i1;
    }

    public int read(byte[]) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection$ErrorStream r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection$ErrorStream;
        r1 := @parameter0: byte[];
        $i0 = lengthof r1;
        $i1 = virtualinvoke r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: int read(byte[],int,int)>(r1, 0, $i0);
        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection$ErrorStream r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4, $i5;
        java.nio.ByteBuffer $r2, $r3;
        java.io.InputStream $r5, $r6;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection$ErrorStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.nio.ByteBuffer buffer>;
        i2 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();
        if i2 <= 0 goto label2;

        if i2 >= i1 goto label0;

        $i4 = i2;
        goto label1;

     label0:
        $i4 = i1;

     label1:
        i3 = $i4;
        $r3 = r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.nio.ByteBuffer buffer>;
        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r1, i0, i3);
        return i3;

     label2:
        $r5 = r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream is>;
        if $r5 != null goto label3;

        return -1;

     label3:
        $r6 = r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream is>;
        $i5 = virtualinvoke $r6.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);
        return $i5;
    }

    public void close() throws java.io.IOException
    {
        sun.net.www.protocol.http.HttpURLConnection$ErrorStream r0;
        java.io.InputStream $r1, $r2;

        r0 := @this: sun.net.www.protocol.http.HttpURLConnection$ErrorStream;
        r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.nio.ByteBuffer buffer> = null;
        $r1 = r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream is>;
        if $r1 == null goto label0;

        $r2 = r0.<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream is>;
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label0:
        return;
    }
}
