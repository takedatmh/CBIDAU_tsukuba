public final class org.apache.catalina.util.StringParser extends java.lang.Object
{
    private char[] chars;
    private int index;
    private int length;
    private java.lang.String string;

    public void <init>()
    {
        org.apache.catalina.util.StringParser r0;

        r0 := @this: org.apache.catalina.util.StringParser;
        specialinvoke r0.<org.apache.catalina.util.StringParser: void <init>(java.lang.String)>(null);
        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.catalina.util.StringParser r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.util.StringParser;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.catalina.util.StringParser: char[] chars> = null;
        r0.<org.apache.catalina.util.StringParser: int index> = 0;
        r0.<org.apache.catalina.util.StringParser: int length> = 0;
        r0.<org.apache.catalina.util.StringParser: java.lang.String string> = null;
        virtualinvoke r0.<org.apache.catalina.util.StringParser: void setString(java.lang.String)>(r1);
        return;
    }

    public int getIndex()
    {
        org.apache.catalina.util.StringParser r0;
        int $i0;

        r0 := @this: org.apache.catalina.util.StringParser;
        $i0 = r0.<org.apache.catalina.util.StringParser: int index>;
        return $i0;
    }

    public int getLength()
    {
        org.apache.catalina.util.StringParser r0;
        int $i0;

        r0 := @this: org.apache.catalina.util.StringParser;
        $i0 = r0.<org.apache.catalina.util.StringParser: int length>;
        return $i0;
    }

    public java.lang.String getString()
    {
        org.apache.catalina.util.StringParser r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.util.StringParser;
        $r1 = r0.<org.apache.catalina.util.StringParser: java.lang.String string>;
        return $r1;
    }

    public void setString(java.lang.String)
    {
        org.apache.catalina.util.StringParser r0;
        java.lang.String r1, $r2;
        int $i0;
        char[] $r3, $r4;

        r0 := @this: org.apache.catalina.util.StringParser;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.util.StringParser: java.lang.String string> = r1;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        r0.<org.apache.catalina.util.StringParser: int length> = $i0;
        $r2 = r0.<org.apache.catalina.util.StringParser: java.lang.String string>;
        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();
        r0.<org.apache.catalina.util.StringParser: char[] chars> = $r3;
        goto label1;

     label0:
        r0.<org.apache.catalina.util.StringParser: int length> = 0;
        $r4 = newarray (char)[0];
        r0.<org.apache.catalina.util.StringParser: char[] chars> = $r4;

     label1:
        virtualinvoke r0.<org.apache.catalina.util.StringParser: void reset()>();
        return;
    }

    public void advance()
    {
        org.apache.catalina.util.StringParser r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.catalina.util.StringParser;
        $i0 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i1 = r0.<org.apache.catalina.util.StringParser: int length>;
        if $i0 >= $i1 goto label0;

        $i2 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i3 = $i2 + 1;
        r0.<org.apache.catalina.util.StringParser: int index> = $i3;

     label0:
        return;
    }

    public java.lang.String extract(int)
    {
        org.apache.catalina.util.StringParser r0;
        int i0, $i1;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.catalina.util.StringParser;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i1 = r0.<org.apache.catalina.util.StringParser: int length>;
        if i0 < $i1 goto label1;

     label0:
        return "";

     label1:
        $r1 = r0.<org.apache.catalina.util.StringParser: java.lang.String string>;
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i0);
        return $r2;
    }

    public java.lang.String extract(int, int)
    {
        org.apache.catalina.util.StringParser r0;
        int i0, i1, $i2;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.catalina.util.StringParser;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 < 0 goto label0;

        if i0 >= i1 goto label0;

        $i2 = r0.<org.apache.catalina.util.StringParser: int length>;
        if i1 <= $i2 goto label1;

     label0:
        return "";

     label1:
        $r1 = r0.<org.apache.catalina.util.StringParser: java.lang.String string>;
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);
        return $r2;
    }

    public int findChar(char)
    {
        org.apache.catalina.util.StringParser r0;
        char c0, $c6;
        int $i1, $i2, $i3, $i4, $i5, $i7;
        char[] $r2;

        r0 := @this: org.apache.catalina.util.StringParser;
        c0 := @parameter0: char;
        goto label1;

     label0:
        $i1 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i2 = $i1 + 1;
        r0.<org.apache.catalina.util.StringParser: int index> = $i2;

     label1:
        $i3 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i4 = r0.<org.apache.catalina.util.StringParser: int length>;
        if $i3 >= $i4 goto label2;

        $r2 = r0.<org.apache.catalina.util.StringParser: char[] chars>;
        $i5 = r0.<org.apache.catalina.util.StringParser: int index>;
        $c6 = $r2[$i5];
        if c0 != $c6 goto label0;

     label2:
        $i7 = r0.<org.apache.catalina.util.StringParser: int index>;
        return $i7;
    }

    public int findText()
    {
        org.apache.catalina.util.StringParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        char[] $r2;
        char $c5;
        boolean $z0;

        r0 := @this: org.apache.catalina.util.StringParser;
        goto label1;

     label0:
        $i0 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i1 = $i0 + 1;
        r0.<org.apache.catalina.util.StringParser: int index> = $i1;

     label1:
        $i2 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i3 = r0.<org.apache.catalina.util.StringParser: int length>;
        if $i2 >= $i3 goto label2;

        $r2 = r0.<org.apache.catalina.util.StringParser: char[] chars>;
        $i4 = r0.<org.apache.catalina.util.StringParser: int index>;
        $c5 = $r2[$i4];
        $z0 = virtualinvoke r0.<org.apache.catalina.util.StringParser: boolean isWhite(char)>($c5);
        if $z0 != 0 goto label0;

     label2:
        $i6 = r0.<org.apache.catalina.util.StringParser: int index>;
        return $i6;
    }

    public int findWhite()
    {
        org.apache.catalina.util.StringParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        char[] $r2;
        char $c5;
        boolean $z0;

        r0 := @this: org.apache.catalina.util.StringParser;
        goto label1;

     label0:
        $i0 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i1 = $i0 + 1;
        r0.<org.apache.catalina.util.StringParser: int index> = $i1;

     label1:
        $i2 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i3 = r0.<org.apache.catalina.util.StringParser: int length>;
        if $i2 >= $i3 goto label2;

        $r2 = r0.<org.apache.catalina.util.StringParser: char[] chars>;
        $i4 = r0.<org.apache.catalina.util.StringParser: int index>;
        $c5 = $r2[$i4];
        $z0 = virtualinvoke r0.<org.apache.catalina.util.StringParser: boolean isWhite(char)>($c5);
        if $z0 == 0 goto label0;

     label2:
        $i6 = r0.<org.apache.catalina.util.StringParser: int index>;
        return $i6;
    }

    public void reset()
    {
        org.apache.catalina.util.StringParser r0;

        r0 := @this: org.apache.catalina.util.StringParser;
        r0.<org.apache.catalina.util.StringParser: int index> = 0;
        return;
    }

    public int skipChar(char)
    {
        org.apache.catalina.util.StringParser r0;
        char c0, $c6;
        int $i1, $i2, $i3, $i4, $i5, $i7;
        char[] $r2;

        r0 := @this: org.apache.catalina.util.StringParser;
        c0 := @parameter0: char;
        goto label1;

     label0:
        $i1 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i2 = $i1 + 1;
        r0.<org.apache.catalina.util.StringParser: int index> = $i2;

     label1:
        $i3 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i4 = r0.<org.apache.catalina.util.StringParser: int length>;
        if $i3 >= $i4 goto label2;

        $r2 = r0.<org.apache.catalina.util.StringParser: char[] chars>;
        $i5 = r0.<org.apache.catalina.util.StringParser: int index>;
        $c6 = $r2[$i5];
        if c0 == $c6 goto label0;

     label2:
        $i7 = r0.<org.apache.catalina.util.StringParser: int index>;
        return $i7;
    }

    public int skipText()
    {
        org.apache.catalina.util.StringParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        char[] $r2;
        char $c5;
        boolean $z0;

        r0 := @this: org.apache.catalina.util.StringParser;
        goto label1;

     label0:
        $i0 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i1 = $i0 + 1;
        r0.<org.apache.catalina.util.StringParser: int index> = $i1;

     label1:
        $i2 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i3 = r0.<org.apache.catalina.util.StringParser: int length>;
        if $i2 >= $i3 goto label2;

        $r2 = r0.<org.apache.catalina.util.StringParser: char[] chars>;
        $i4 = r0.<org.apache.catalina.util.StringParser: int index>;
        $c5 = $r2[$i4];
        $z0 = virtualinvoke r0.<org.apache.catalina.util.StringParser: boolean isWhite(char)>($c5);
        if $z0 == 0 goto label0;

     label2:
        $i6 = r0.<org.apache.catalina.util.StringParser: int index>;
        return $i6;
    }

    public int skipWhite()
    {
        org.apache.catalina.util.StringParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        char[] $r2;
        char $c5;
        boolean $z0;

        r0 := @this: org.apache.catalina.util.StringParser;
        goto label1;

     label0:
        $i0 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i1 = $i0 + 1;
        r0.<org.apache.catalina.util.StringParser: int index> = $i1;

     label1:
        $i2 = r0.<org.apache.catalina.util.StringParser: int index>;
        $i3 = r0.<org.apache.catalina.util.StringParser: int length>;
        if $i2 >= $i3 goto label2;

        $r2 = r0.<org.apache.catalina.util.StringParser: char[] chars>;
        $i4 = r0.<org.apache.catalina.util.StringParser: int index>;
        $c5 = $r2[$i4];
        $z0 = virtualinvoke r0.<org.apache.catalina.util.StringParser: boolean isWhite(char)>($c5);
        if $z0 != 0 goto label0;

     label2:
        $i6 = r0.<org.apache.catalina.util.StringParser: int index>;
        return $i6;
    }

    protected boolean isWhite(char)
    {
        org.apache.catalina.util.StringParser r0;
        char c0;

        r0 := @this: org.apache.catalina.util.StringParser;
        c0 := @parameter0: char;
        if c0 == 32 goto label0;

        if c0 == 9 goto label0;

        if c0 == 13 goto label0;

        if c0 != 10 goto label1;

     label0:
        return 1;

     label1:
        return 0;
    }
}
