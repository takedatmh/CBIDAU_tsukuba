final class java.util.ResourceBundle$CacheKey extends java.lang.Object implements java.lang.Cloneable
{
    private java.lang.String name;
    private java.util.Locale locale;
    private java.util.ResourceBundle$LoaderReference loaderRef;
    private java.lang.String format;
    private volatile long loadTime;
    private volatile long expirationTime;
    private java.lang.Throwable cause;
    private int hashCodeCache;

    void <init>(java.lang.String, java.util.Locale, java.lang.ClassLoader)
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.String r1;
        java.util.Locale r2;
        java.lang.ClassLoader r3;
        java.lang.ref.ReferenceQueue $r4;
        java.util.ResourceBundle$LoaderReference $r5;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.ClassLoader;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.ResourceBundle$CacheKey: java.lang.String name> = r1;
        r0.<java.util.ResourceBundle$CacheKey: java.util.Locale locale> = r2;
        if r3 != null goto label0;

        r0.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef> = null;
        goto label1;

     label0:
        $r5 = new java.util.ResourceBundle$LoaderReference;
        $r4 = staticinvoke <java.util.ResourceBundle: java.lang.ref.ReferenceQueue access$200()>();
        specialinvoke $r5.<java.util.ResourceBundle$LoaderReference: void <init>(java.lang.ClassLoader,java.lang.ref.ReferenceQueue,java.util.ResourceBundle$CacheKey)>(r3, $r4, r0);
        r0.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef> = $r5;

     label1:
        specialinvoke r0.<java.util.ResourceBundle$CacheKey: void calculateHashCode()>();
        return;
    }

    java.lang.String getName()
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.String $r1;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        $r1 = r0.<java.util.ResourceBundle$CacheKey: java.lang.String name>;
        return $r1;
    }

    java.util.ResourceBundle$CacheKey setName(java.lang.String)
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<java.util.ResourceBundle$CacheKey: java.lang.String name>;
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z0 != 0 goto label0;

        r0.<java.util.ResourceBundle$CacheKey: java.lang.String name> = r1;
        specialinvoke r0.<java.util.ResourceBundle$CacheKey: void calculateHashCode()>();

     label0:
        return r0;
    }

    java.util.Locale getLocale()
    {
        java.util.ResourceBundle$CacheKey r0;
        java.util.Locale $r1;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        $r1 = r0.<java.util.ResourceBundle$CacheKey: java.util.Locale locale>;
        return $r1;
    }

    java.util.ResourceBundle$CacheKey setLocale(java.util.Locale)
    {
        java.util.ResourceBundle$CacheKey r0;
        java.util.Locale r1, $r2;
        boolean $z0;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        r1 := @parameter0: java.util.Locale;
        $r2 = r0.<java.util.ResourceBundle$CacheKey: java.util.Locale locale>;
        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>(r1);
        if $z0 != 0 goto label0;

        r0.<java.util.ResourceBundle$CacheKey: java.util.Locale locale> = r1;
        specialinvoke r0.<java.util.ResourceBundle$CacheKey: void calculateHashCode()>();

     label0:
        return r0;
    }

    java.lang.ClassLoader getLoader()
    {
        java.util.ResourceBundle$CacheKey r0;
        java.util.ResourceBundle$LoaderReference $r1, $r2;
        java.lang.Object $r3;
        java.lang.ClassLoader $r4;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        $r1 = r0.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef>;
        if $r1 == null goto label0;

        $r2 = r0.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef>;
        $r3 = virtualinvoke $r2.<java.util.ResourceBundle$LoaderReference: java.lang.Object get()>();
        $r4 = (java.lang.ClassLoader) $r3;
        goto label1;

     label0:
        $r4 = null;

     label1:
        return $r4;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.ResourceBundle$CacheKey r0, r2;
        java.lang.Object r1, $r11, $r14;
        java.lang.ClassLoader r3;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r4, $r5;
        java.util.Locale $r6, $r7;
        java.util.ResourceBundle$LoaderReference $r8, $r9, $r10, $r12, $r13;
        java.lang.NullPointerException $r15, r16;
        java.lang.ClassCastException $r17, r18;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        r2 = (java.util.ResourceBundle$CacheKey) r1;
        $i0 = r0.<java.util.ResourceBundle$CacheKey: int hashCodeCache>;
        $i1 = r2.<java.util.ResourceBundle$CacheKey: int hashCodeCache>;
        if $i0 == $i1 goto label2;

        $z0 = 0;

     label1:
        return $z0;

     label2:
        $r4 = r0.<java.util.ResourceBundle$CacheKey: java.lang.String name>;
        $r5 = r2.<java.util.ResourceBundle$CacheKey: java.lang.String name>;
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z1 != 0 goto label4;

        $z2 = 0;

     label3:
        return $z2;

     label4:
        $r6 = r0.<java.util.ResourceBundle$CacheKey: java.util.Locale locale>;
        $r7 = r2.<java.util.ResourceBundle$CacheKey: java.util.Locale locale>;
        $z3 = virtualinvoke $r6.<java.util.Locale: boolean equals(java.lang.Object)>($r7);
        if $z3 != 0 goto label6;

        $z4 = 0;

     label5:
        return $z4;

     label6:
        $r8 = r0.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef>;
        if $r8 != null goto label9;

        $r9 = r2.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef>;
        if $r9 != null goto label7;

        $z5 = 1;
        goto label8;

     label7:
        $z5 = 0;

     label8:
        return $z5;

     label9:
        $r10 = r0.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef>;
        $r11 = virtualinvoke $r10.<java.util.ResourceBundle$LoaderReference: java.lang.Object get()>();
        r3 = (java.lang.ClassLoader) $r11;
        $r12 = r2.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef>;
        if $r12 == null goto label10;

        if r3 == null goto label10;

        $r13 = r2.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef>;
        $r14 = virtualinvoke $r13.<java.util.ResourceBundle$LoaderReference: java.lang.Object get()>();
        if r3 != $r14 goto label10;

        $z6 = 1;
        goto label11;

     label10:
        $z6 = 0;

     label11:
        return $z6;

     label12:
        $r15 := @caughtexception;
        r16 = $r15;
        goto label14;

     label13:
        $r17 := @caughtexception;
        r18 = $r17;

     label14:
        return 0;

        catch java.lang.NullPointerException from label0 to label1 with label12;
        catch java.lang.NullPointerException from label2 to label3 with label12;
        catch java.lang.NullPointerException from label4 to label5 with label12;
        catch java.lang.NullPointerException from label6 to label8 with label12;
        catch java.lang.NullPointerException from label9 to label11 with label12;
        catch java.lang.ClassCastException from label0 to label1 with label13;
        catch java.lang.ClassCastException from label2 to label3 with label13;
        catch java.lang.ClassCastException from label4 to label5 with label13;
        catch java.lang.ClassCastException from label6 to label8 with label13;
        catch java.lang.ClassCastException from label9 to label11 with label13;
    }

    public int hashCode()
    {
        java.util.ResourceBundle$CacheKey r0;
        int $i0;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        $i0 = r0.<java.util.ResourceBundle$CacheKey: int hashCodeCache>;
        return $i0;
    }

    private void calculateHashCode()
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.ClassLoader r1;
        java.lang.String $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.Locale $r4;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        $r2 = r0.<java.util.ResourceBundle$CacheKey: java.lang.String name>;
        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();
        $i1 = $i0 << 3;
        r0.<java.util.ResourceBundle$CacheKey: int hashCodeCache> = $i1;
        $i2 = r0.<java.util.ResourceBundle$CacheKey: int hashCodeCache>;
        $r4 = r0.<java.util.ResourceBundle$CacheKey: java.util.Locale locale>;
        $i3 = virtualinvoke $r4.<java.util.Locale: int hashCode()>();
        $i4 = $i2 ^ $i3;
        r0.<java.util.ResourceBundle$CacheKey: int hashCodeCache> = $i4;
        r1 = virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.lang.ClassLoader getLoader()>();
        if r1 == null goto label0;

        $i5 = r0.<java.util.ResourceBundle$CacheKey: int hashCodeCache>;
        $i6 = virtualinvoke r1.<java.lang.Object: int hashCode()>();
        $i7 = $i5 ^ $i6;
        r0.<java.util.ResourceBundle$CacheKey: int hashCodeCache> = $i7;

     label0:
        return;
    }

    public java.lang.Object clone()
    {
        java.util.ResourceBundle$CacheKey r0, r1;
        java.util.ResourceBundle$LoaderReference $r2, $r5, $r6;
        java.lang.ref.ReferenceQueue $r3;
        java.lang.Object $r4, $r7;
        java.lang.ClassLoader $r8;
        java.lang.CloneNotSupportedException $r10, r11;
        java.lang.InternalError $r12;

        r0 := @this: java.util.ResourceBundle$CacheKey;

     label0:
        $r4 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        r1 = (java.util.ResourceBundle$CacheKey) $r4;
        $r5 = r0.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef>;
        if $r5 == null goto label1;

        $r2 = new java.util.ResourceBundle$LoaderReference;
        $r6 = r0.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef>;
        $r7 = virtualinvoke $r6.<java.util.ResourceBundle$LoaderReference: java.lang.Object get()>();
        $r8 = (java.lang.ClassLoader) $r7;
        $r3 = staticinvoke <java.util.ResourceBundle: java.lang.ref.ReferenceQueue access$200()>();
        specialinvoke $r2.<java.util.ResourceBundle$LoaderReference: void <init>(java.lang.ClassLoader,java.lang.ref.ReferenceQueue,java.util.ResourceBundle$CacheKey)>($r8, $r3, r1);
        r1.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$LoaderReference loaderRef> = $r2;

     label1:
        r1.<java.util.ResourceBundle$CacheKey: java.lang.Throwable cause> = null;

     label2:
        return r1;

     label3:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = new java.lang.InternalError;
        specialinvoke $r12.<java.lang.InternalError: void <init>()>();
        throw $r12;

        catch java.lang.CloneNotSupportedException from label0 to label2 with label3;
    }

    java.lang.String getFormat()
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.String $r1;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        $r1 = r0.<java.util.ResourceBundle$CacheKey: java.lang.String format>;
        return $r1;
    }

    void setFormat(java.lang.String)
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.String r1;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        r1 := @parameter0: java.lang.String;
        r0.<java.util.ResourceBundle$CacheKey: java.lang.String format> = r1;
        return;
    }

    private void setCause(java.lang.Throwable)
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.Throwable r1, $r2, $r3;
        boolean $z0;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        r1 := @parameter0: java.lang.Throwable;
        $r2 = r0.<java.util.ResourceBundle$CacheKey: java.lang.Throwable cause>;
        if $r2 != null goto label0;

        r0.<java.util.ResourceBundle$CacheKey: java.lang.Throwable cause> = r1;
        goto label1;

     label0:
        $r3 = r0.<java.util.ResourceBundle$CacheKey: java.lang.Throwable cause>;
        $z0 = $r3 instanceof java.lang.ClassNotFoundException;
        if $z0 == 0 goto label1;

        r0.<java.util.ResourceBundle$CacheKey: java.lang.Throwable cause> = r1;

     label1:
        return;
    }

    private java.lang.Throwable getCause()
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.Throwable $r1;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        $r1 = r0.<java.util.ResourceBundle$CacheKey: java.lang.Throwable cause>;
        return $r1;
    }

    public java.lang.String toString()
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.String r1, $r4, $r8, $r12, $r20, $r23;
        java.util.Locale $r2, $r3, $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r18, $r19, $r21, $r22;
        java.lang.ClassLoader $r17;

        r0 := @this: java.util.ResourceBundle$CacheKey;
        $r2 = r0.<java.util.ResourceBundle$CacheKey: java.util.Locale locale>;
        r1 = virtualinvoke $r2.<java.util.Locale: java.lang.String toString()>();
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

        $r3 = r0.<java.util.ResourceBundle$CacheKey: java.util.Locale locale>;
        $r4 = virtualinvoke $r3.<java.util.Locale: java.lang.String getVariant()>();
        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();
        if $i1 == 0 goto label0;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__");
        $r7 = r0.<java.util.ResourceBundle$CacheKey: java.util.Locale locale>;
        $r8 = virtualinvoke $r7.<java.util.Locale: java.lang.String getVariant()>();
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label1;

     label0:
        r1 = "\"\"";

     label1:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CacheKey[");
        $r12 = r0.<java.util.ResourceBundle$CacheKey: java.lang.String name>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lc=");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ldr=");
        $r17 = virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.lang.ClassLoader getLoader()>();
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(format=");
        $r20 = r0.<java.util.ResourceBundle$CacheKey: java.lang.String format>;
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")]");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r23;
    }

    static java.lang.Throwable access$400(java.util.ResourceBundle$CacheKey)
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.Throwable $r1;

        r0 := @parameter0: java.util.ResourceBundle$CacheKey;
        $r1 = specialinvoke r0.<java.util.ResourceBundle$CacheKey: java.lang.Throwable getCause()>();
        return $r1;
    }

    static void access$500(java.util.ResourceBundle$CacheKey, java.lang.Throwable)
    {
        java.util.ResourceBundle$CacheKey r0;
        java.lang.Throwable r1;

        r0 := @parameter0: java.util.ResourceBundle$CacheKey;
        r1 := @parameter1: java.lang.Throwable;
        specialinvoke r0.<java.util.ResourceBundle$CacheKey: void setCause(java.lang.Throwable)>(r1);
        return;
    }

    static long access$600(java.util.ResourceBundle$CacheKey)
    {
        java.util.ResourceBundle$CacheKey r0;
        long $l0;

        r0 := @parameter0: java.util.ResourceBundle$CacheKey;
        $l0 = r0.<java.util.ResourceBundle$CacheKey: long expirationTime>;
        return $l0;
    }

    static long access$700(java.util.ResourceBundle$CacheKey)
    {
        java.util.ResourceBundle$CacheKey r0;
        long $l0;

        r0 := @parameter0: java.util.ResourceBundle$CacheKey;
        $l0 = r0.<java.util.ResourceBundle$CacheKey: long loadTime>;
        return $l0;
    }

    static long access$702(java.util.ResourceBundle$CacheKey, long)
    {
        java.util.ResourceBundle$CacheKey r0;
        long l0;

        r0 := @parameter0: java.util.ResourceBundle$CacheKey;
        l0 := @parameter1: long;
        r0.<java.util.ResourceBundle$CacheKey: long loadTime> = l0;
        return l0;
    }

    static long access$602(java.util.ResourceBundle$CacheKey, long)
    {
        java.util.ResourceBundle$CacheKey r0;
        long l0;

        r0 := @parameter0: java.util.ResourceBundle$CacheKey;
        l0 := @parameter1: long;
        r0.<java.util.ResourceBundle$CacheKey: long expirationTime> = l0;
        return l0;
    }
}
