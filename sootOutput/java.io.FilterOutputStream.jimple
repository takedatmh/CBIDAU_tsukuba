public class java.io.FilterOutputStream extends java.io.OutputStream
{
    protected java.io.OutputStream out;

    public void <init>(java.io.OutputStream)
    {
        java.io.FilterOutputStream r0;
        java.io.OutputStream r1;

        r0 := @this: java.io.FilterOutputStream;
        r1 := @parameter0: java.io.OutputStream;
        specialinvoke r0.<java.io.OutputStream: void <init>()>();
        r0.<java.io.FilterOutputStream: java.io.OutputStream out> = r1;
        return;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.FilterOutputStream r0;
        int i0;
        java.io.OutputStream $r1;

        r0 := @this: java.io.FilterOutputStream;
        i0 := @parameter0: int;
        $r1 = r0.<java.io.FilterOutputStream: java.io.OutputStream out>;
        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);
        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        java.io.FilterOutputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.FilterOutputStream;
        r1 := @parameter0: byte[];
        $i0 = lengthof r1;
        virtualinvoke r0.<java.io.FilterOutputStream: void write(byte[],int,int)>(r1, 0, $i0);
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.FilterOutputStream r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.IndexOutOfBoundsException $r2;
        byte $b11;

        r0 := @this: java.io.FilterOutputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i3 = i0 | i1;
        $i4 = lengthof r1;
        $i5 = i1 + i0;
        $i6 = $i4 - $i5;
        $i7 = $i3 | $i6;
        $i8 = i0 + i1;
        $i9 = $i7 | $i8;
        if $i9 >= 0 goto label0;

        $r2 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label0:
        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $i10 = i0 + i2;
        $b11 = r1[$i10];
        virtualinvoke r0.<java.io.FilterOutputStream: void write(int)>($b11);
        i2 = i2 + 1;
        goto label1;

     label2:
        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.FilterOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: java.io.FilterOutputStream;
        $r1 = r0.<java.io.FilterOutputStream: java.io.OutputStream out>;
        virtualinvoke $r1.<java.io.OutputStream: void flush()>();
        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.FilterOutputStream r0;
        java.io.IOException r1, $r2;
        java.io.OutputStream $r3;

        r0 := @this: java.io.FilterOutputStream;

     label0:
        virtualinvoke r0.<java.io.FilterOutputStream: void flush()>();

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        r1 = $r2;

     label3:
        $r3 = r0.<java.io.FilterOutputStream: java.io.OutputStream out>;
        virtualinvoke $r3.<java.io.OutputStream: void close()>();
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }
}
