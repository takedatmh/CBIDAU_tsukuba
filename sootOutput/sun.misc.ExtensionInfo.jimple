public class sun.misc.ExtensionInfo extends java.lang.Object
{
    public static final int COMPATIBLE;
    public static final int REQUIRE_SPECIFICATION_UPGRADE;
    public static final int REQUIRE_IMPLEMENTATION_UPGRADE;
    public static final int REQUIRE_VENDOR_SWITCH;
    public static final int INCOMPATIBLE;
    public java.lang.String title;
    public java.lang.String name;
    public java.lang.String specVersion;
    public java.lang.String specVendor;
    public java.lang.String implementationVersion;
    public java.lang.String vendor;
    public java.lang.String vendorId;
    public java.lang.String url;
    private static final java.util.ResourceBundle rb;

    public void <init>()
    {
        sun.misc.ExtensionInfo r0;

        r0 := @this: sun.misc.ExtensionInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void <init>(java.lang.String, java.util.jar.Attributes) throws java.lang.NullPointerException
    {
        sun.misc.ExtensionInfo r0;
        java.lang.String r1, r3, r4, $r11, $r13, $r14, $r15, $r16, $r20, r22, $r23, $r24, $r25, $r26, $r30, r32, $r33, $r34, $r35, $r36, $r40, r42, $r43, $r44, $r45, $r46, $r50, r52, $r53, $r54, $r55, $r56, $r60, r62, $r63, $r64, $r65, $r66, $r70, r72, $r73, $r74, $r75, $r76, $r80, r82, $r83, $r84, $r85, $r86;
        java.util.jar.Attributes r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r12, $r17, $r18, $r21, $r27, $r28, $r31, $r37, $r38, $r41, $r47, $r48, $r51, $r57, $r58, $r61, $r67, $r68, $r71, $r77, $r78, $r81;
        java.util.jar.Attributes$Name $r10, $r19, $r29, $r39, $r49, $r59, $r69, $r79;

        r0 := @this: sun.misc.ExtensionInfo;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.Attributes;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 == null goto label0;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label1;

     label0:
        r3 = "";

     label1:
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r10 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name EXTENSION_NAME>;
        $r11 = virtualinvoke $r10.<java.util.jar.Attributes$Name: java.lang.String toString()>();
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        $r13 = virtualinvoke r2.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>(r4);
        r0.<sun.misc.ExtensionInfo: java.lang.String name> = $r13;
        $r14 = r0.<sun.misc.ExtensionInfo: java.lang.String name>;
        if $r14 == null goto label2;

        $r15 = r0.<sun.misc.ExtensionInfo: java.lang.String name>;
        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();
        r0.<sun.misc.ExtensionInfo: java.lang.String name> = $r16;

     label2:
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r19 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_TITLE>;
        $r20 = virtualinvoke $r19.<java.util.jar.Attributes$Name: java.lang.String toString()>();
        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        $r23 = virtualinvoke r2.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>(r22);
        r0.<sun.misc.ExtensionInfo: java.lang.String title> = $r23;
        $r24 = r0.<sun.misc.ExtensionInfo: java.lang.String title>;
        if $r24 == null goto label3;

        $r25 = r0.<sun.misc.ExtensionInfo: java.lang.String title>;
        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String trim()>();
        r0.<sun.misc.ExtensionInfo: java.lang.String title> = $r26;

     label3:
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r29 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VERSION>;
        $r30 = virtualinvoke $r29.<java.util.jar.Attributes$Name: java.lang.String toString()>();
        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $r33 = virtualinvoke r2.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>(r32);
        r0.<sun.misc.ExtensionInfo: java.lang.String specVersion> = $r33;
        $r34 = r0.<sun.misc.ExtensionInfo: java.lang.String specVersion>;
        if $r34 == null goto label4;

        $r35 = r0.<sun.misc.ExtensionInfo: java.lang.String specVersion>;
        $r36 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();
        r0.<sun.misc.ExtensionInfo: java.lang.String specVersion> = $r36;

     label4:
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r39 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VENDOR>;
        $r40 = virtualinvoke $r39.<java.util.jar.Attributes$Name: java.lang.String toString()>();
        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
        r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        $r43 = virtualinvoke r2.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>(r42);
        r0.<sun.misc.ExtensionInfo: java.lang.String specVendor> = $r43;
        $r44 = r0.<sun.misc.ExtensionInfo: java.lang.String specVendor>;
        if $r44 == null goto label5;

        $r45 = r0.<sun.misc.ExtensionInfo: java.lang.String specVendor>;
        $r46 = virtualinvoke $r45.<java.lang.String: java.lang.String trim()>();
        r0.<sun.misc.ExtensionInfo: java.lang.String specVendor> = $r46;

     label5:
        $r47 = new java.lang.StringBuilder;
        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r49 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VERSION>;
        $r50 = virtualinvoke $r49.<java.util.jar.Attributes$Name: java.lang.String toString()>();
        $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);
        r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();
        $r53 = virtualinvoke r2.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>(r52);
        r0.<sun.misc.ExtensionInfo: java.lang.String implementationVersion> = $r53;
        $r54 = r0.<sun.misc.ExtensionInfo: java.lang.String implementationVersion>;
        if $r54 == null goto label6;

        $r55 = r0.<sun.misc.ExtensionInfo: java.lang.String implementationVersion>;
        $r56 = virtualinvoke $r55.<java.lang.String: java.lang.String trim()>();
        r0.<sun.misc.ExtensionInfo: java.lang.String implementationVersion> = $r56;

     label6:
        $r57 = new java.lang.StringBuilder;
        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r59 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VENDOR>;
        $r60 = virtualinvoke $r59.<java.util.jar.Attributes$Name: java.lang.String toString()>();
        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);
        r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();
        $r63 = virtualinvoke r2.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>(r62);
        r0.<sun.misc.ExtensionInfo: java.lang.String vendor> = $r63;
        $r64 = r0.<sun.misc.ExtensionInfo: java.lang.String vendor>;
        if $r64 == null goto label7;

        $r65 = r0.<sun.misc.ExtensionInfo: java.lang.String vendor>;
        $r66 = virtualinvoke $r65.<java.lang.String: java.lang.String trim()>();
        r0.<sun.misc.ExtensionInfo: java.lang.String vendor> = $r66;

     label7:
        $r67 = new java.lang.StringBuilder;
        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r69 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VENDOR_ID>;
        $r70 = virtualinvoke $r69.<java.util.jar.Attributes$Name: java.lang.String toString()>();
        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);
        r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();
        $r73 = virtualinvoke r2.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>(r72);
        r0.<sun.misc.ExtensionInfo: java.lang.String vendorId> = $r73;
        $r74 = r0.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        if $r74 == null goto label8;

        $r75 = r0.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        $r76 = virtualinvoke $r75.<java.lang.String: java.lang.String trim()>();
        r0.<sun.misc.ExtensionInfo: java.lang.String vendorId> = $r76;

     label8:
        $r77 = new java.lang.StringBuilder;
        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();
        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r79 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_URL>;
        $r80 = virtualinvoke $r79.<java.util.jar.Attributes$Name: java.lang.String toString()>();
        $r81 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);
        r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
        $r83 = virtualinvoke r2.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>(r82);
        r0.<sun.misc.ExtensionInfo: java.lang.String url> = $r83;
        $r84 = r0.<sun.misc.ExtensionInfo: java.lang.String url>;
        if $r84 == null goto label9;

        $r85 = r0.<sun.misc.ExtensionInfo: java.lang.String url>;
        $r86 = virtualinvoke $r85.<java.lang.String: java.lang.String trim()>();
        r0.<sun.misc.ExtensionInfo: java.lang.String url> = $r86;

     label9:
        return;
    }

    public int isCompatibleWith(sun.misc.ExtensionInfo)
    {
        sun.misc.ExtensionInfo r0, r1;
        int i0, $i1, $i2, $i3, i4;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        r0 := @this: sun.misc.ExtensionInfo;
        r1 := @parameter0: sun.misc.ExtensionInfo;
        $r2 = r0.<sun.misc.ExtensionInfo: java.lang.String name>;
        if $r2 == null goto label0;

        $r3 = r1.<sun.misc.ExtensionInfo: java.lang.String name>;
        if $r3 != null goto label1;

     label0:
        return 4;

     label1:
        $r4 = r0.<sun.misc.ExtensionInfo: java.lang.String name>;
        $r5 = r1.<sun.misc.ExtensionInfo: java.lang.String name>;
        $i1 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r5);
        if $i1 != 0 goto label8;

        $r6 = r0.<sun.misc.ExtensionInfo: java.lang.String specVersion>;
        if $r6 == null goto label2;

        $r7 = r1.<sun.misc.ExtensionInfo: java.lang.String specVersion>;
        if $r7 != null goto label3;

     label2:
        return 0;

     label3:
        $r8 = r0.<sun.misc.ExtensionInfo: java.lang.String specVersion>;
        $r9 = r1.<sun.misc.ExtensionInfo: java.lang.String specVersion>;
        i0 = specialinvoke r0.<sun.misc.ExtensionInfo: int compareExtensionVersion(java.lang.String,java.lang.String)>($r8, $r9);
        if i0 >= 0 goto label5;

        $r10 = r0.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        if $r10 == null goto label4;

        $r11 = r1.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        if $r11 == null goto label4;

        $r12 = r0.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        $r13 = r1.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        $i2 = virtualinvoke $r12.<java.lang.String: int compareTo(java.lang.String)>($r13);
        if $i2 == 0 goto label4;

        return 3;

     label4:
        return 1;

     label5:
        $r14 = r0.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        if $r14 == null goto label7;

        $r15 = r1.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        if $r15 == null goto label7;

        $r16 = r0.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        $r17 = r1.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        $i3 = virtualinvoke $r16.<java.lang.String: int compareTo(java.lang.String)>($r17);
        if $i3 == 0 goto label6;

        return 3;

     label6:
        $r18 = r0.<sun.misc.ExtensionInfo: java.lang.String implementationVersion>;
        if $r18 == null goto label7;

        $r19 = r1.<sun.misc.ExtensionInfo: java.lang.String implementationVersion>;
        if $r19 == null goto label7;

        $r20 = r0.<sun.misc.ExtensionInfo: java.lang.String implementationVersion>;
        $r21 = r1.<sun.misc.ExtensionInfo: java.lang.String implementationVersion>;
        i4 = specialinvoke r0.<sun.misc.ExtensionInfo: int compareExtensionVersion(java.lang.String,java.lang.String)>($r20, $r21);
        if i4 >= 0 goto label7;

        return 2;

     label7:
        return 0;

     label8:
        return 4;
    }

    public java.lang.String toString()
    {
        sun.misc.ExtensionInfo r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26;
        java.lang.String $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27;

        r0 := @this: sun.misc.ExtensionInfo;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extension : title(");
        $r3 = r0.<sun.misc.ExtensionInfo: java.lang.String title>;
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), name(");
        $r6 = r0.<sun.misc.ExtensionInfo: java.lang.String name>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), spec vendor(");
        $r9 = r0.<sun.misc.ExtensionInfo: java.lang.String specVendor>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), spec version(");
        $r12 = r0.<sun.misc.ExtensionInfo: java.lang.String specVersion>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), impl vendor(");
        $r15 = r0.<sun.misc.ExtensionInfo: java.lang.String vendor>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), impl vendor id(");
        $r18 = r0.<sun.misc.ExtensionInfo: java.lang.String vendorId>;
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), impl version(");
        $r21 = r0.<sun.misc.ExtensionInfo: java.lang.String implementationVersion>;
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), impl url(");
        $r24 = r0.<sun.misc.ExtensionInfo: java.lang.String url>;
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r27;
    }

    private int compareExtensionVersion(java.lang.String, java.lang.String) throws java.lang.NumberFormatException
    {
        sun.misc.ExtensionInfo r0;
        java.lang.String r1, r2, r3, r4;
        int $i0;

        r0 := @this: sun.misc.ExtensionInfo;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        $i0 = specialinvoke r0.<sun.misc.ExtensionInfo: int strictCompareExtensionVersion(java.lang.String,java.lang.String)>(r3, r4);
        return $i0;
    }

    private int strictCompareExtensionVersion(java.lang.String, java.lang.String) throws java.lang.NumberFormatException
    {
        sun.misc.ExtensionInfo r0;
        java.lang.String r1, r2, $r7, $r8, $r9, $r10, $r11, $r12;
        java.util.StringTokenizer r3, r4, $r5, $r6;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, $z1, $z2, $z3;

        r0 := @this: sun.misc.ExtensionInfo;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z1 == 0 goto label0;

        return 0;

     label0:
        $r5 = new java.util.StringTokenizer;
        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ".,");
        r3 = $r5;
        $r6 = new java.util.StringTokenizer;
        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, ".,");
        r4 = $r6;
        i0 = 0;
        i1 = 0;
        z0 = 0;
        $z2 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z2 == 0 goto label1;

        $r7 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toString()>();
        i0 = specialinvoke r0.<sun.misc.ExtensionInfo: int convertToken(java.lang.String)>($r8);

     label1:
        $z3 = virtualinvoke r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z3 == 0 goto label2;

        $r9 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toString()>();
        i1 = specialinvoke r0.<sun.misc.ExtensionInfo: int convertToken(java.lang.String)>($r10);

     label2:
        if i0 <= i1 goto label3;

        return 1;

     label3:
        if i1 <= i0 goto label4;

        return -1;

     label4:
        i2 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(".");
        i3 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>(".");
        if i2 != -1 goto label5;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();
        i2 = $i4 - 1;

     label5:
        if i3 != -1 goto label6;

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();
        i3 = $i5 - 1;

     label6:
        $i6 = i2 + 1;
        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i6);
        $i7 = i3 + 1;
        $r12 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i7);
        $i8 = specialinvoke r0.<sun.misc.ExtensionInfo: int strictCompareExtensionVersion(java.lang.String,java.lang.String)>($r11, $r12);
        return $i8;
    }

    private int convertToken(java.lang.String)
    {
        sun.misc.ExtensionInfo r0;
        java.lang.String r1, r4, r7, $r10, $r13, $r16, $r17, $r19, $r22, r26;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, i1, i2, i3, i4, $i7, $i8, i9, $i10, i11, i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        java.lang.Object[] r2, $r9;
        java.text.MessageFormat r3, $r11;
        java.lang.NumberFormatException r5, r6, r8, $r14, $r20, $r23, r24, $r27;
        char c5;
        byte b6;
        java.util.ResourceBundle $r12;
        java.io.PrintStream $r15, $r18, $r21, $r25, $r28;

        r0 := @this: sun.misc.ExtensionInfo;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z2 == 0 goto label1;

     label0:
        return 0;

     label1:
        z0 = 0;
        i0 = 0;
        z1 = 0;
        i1 = virtualinvoke r1.<java.lang.String: int length()>();
        i2 = i1;
        $r9 = newarray (java.lang.Object)[1];
        $r10 = r0.<sun.misc.ExtensionInfo: java.lang.String name>;
        $r9[0] = $r10;
        r2 = $r9;
        $r11 = new java.text.MessageFormat;
        $r12 = <sun.misc.ExtensionInfo: java.util.ResourceBundle rb>;
        $r13 = virtualinvoke $r12.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optpkg.versionerror");
        specialinvoke $r11.<java.text.MessageFormat: void <init>(java.lang.String)>($r13);
        r3 = $r11;
        r4 = virtualinvoke r3.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r2);
        i3 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("-");
        i4 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("_");
        if i3 != -1 goto label5;

        if i4 != -1 goto label5;

     label2:
        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);
        $i8 = $i7 * 100;

     label3:
        return $i8;

     label4:
        $r14 := @caughtexception;
        r5 = $r14;
        $r15 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(r4);
        return 0;

     label5:
        if i4 == -1 goto label12;

     label6:
        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i4);
        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);
        $i10 = i1 - 1;
        c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i10);
        $z3 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c5);
        if $z3 == 0 goto label8;

        i11 = staticinvoke <java.lang.Character: int getNumericValue(char)>(c5);
        i12 = i1 - 1;
        $i13 = i4 + 1;
        $r17 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i13, i12);
        i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);
        $i15 = staticinvoke <java.lang.Character: int getNumericValue(char)>(97);
        if i11 < $i15 goto label7;

        $i16 = staticinvoke <java.lang.Character: int getNumericValue(char)>(122);
        if i11 > $i16 goto label7;

        $i17 = i14 * 100;
        i0 = $i17 + i11;
        goto label9;

     label7:
        i0 = 0;
        $r18 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(r4);
        goto label9;

     label8:
        $i18 = i4 + 1;
        $r19 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i18, i2);
        i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

     label9:
        goto label11;

     label10:
        $r20 := @caughtexception;
        r6 = $r20;
        $r21 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>(r4);
        return 0;

     label11:
        $i19 = i9 * 100;
        $i20 = i14 + i0;
        $i21 = $i19 + $i20;
        return $i21;

     label12:
        $r22 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i3);
        i22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

     label13:
        goto label15;

     label14:
        $r23 := @caughtexception;
        r24 = $r23;
        $r25 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>(r4);
        return 0;

     label15:
        $i23 = i3 + 1;
        r26 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i23);
        r7 = "";
        b6 = 0;
        $i24 = virtualinvoke r26.<java.lang.String: int indexOf(java.lang.String)>("ea");
        if $i24 == -1 goto label16;

        r7 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>(2);
        b6 = 50;
        goto label19;

     label16:
        $i25 = virtualinvoke r26.<java.lang.String: int indexOf(java.lang.String)>("alpha");
        if $i25 == -1 goto label17;

        r7 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>(5);
        b6 = 40;
        goto label19;

     label17:
        $i26 = virtualinvoke r26.<java.lang.String: int indexOf(java.lang.String)>("beta");
        if $i26 == -1 goto label18;

        r7 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>(4);
        b6 = 30;
        goto label19;

     label18:
        $i27 = virtualinvoke r26.<java.lang.String: int indexOf(java.lang.String)>("rc");
        if $i27 == -1 goto label19;

        r7 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>(2);
        b6 = 20;

     label19:
        if r7 == null goto label20;

        $z4 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z4 == 0 goto label21;

     label20:
        $i28 = i22 * 100;
        $i29 = $i28 - b6;
        return $i29;

     label21:
        $i30 = i22 * 100;
        $i31 = $i30 - b6;
        $i32 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7);
        $i33 = $i31 + $i32;

     label22:
        return $i33;

     label23:
        $r27 := @caughtexception;
        r8 = $r27;
        $r28 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(r4);
        return 0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
        catch java.lang.NumberFormatException from label6 to label9 with label10;
        catch java.lang.NumberFormatException from label12 to label13 with label14;
        catch java.lang.NumberFormatException from label21 to label22 with label23;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        $r0 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>("sun.misc.resources.Messages");
        <sun.misc.ExtensionInfo: java.util.ResourceBundle rb> = $r0;
        return;
    }
}
