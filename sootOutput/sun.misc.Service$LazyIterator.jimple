class sun.misc.Service$LazyIterator extends java.lang.Object implements java.util.Iterator
{
    java.lang.Class service;
    java.lang.ClassLoader loader;
    java.util.Enumeration configs;
    java.util.Iterator pending;
    java.util.Set returned;
    java.lang.String nextName;

    private void <init>(java.lang.Class, java.lang.ClassLoader)
    {
        sun.misc.Service$LazyIterator r0;
        java.lang.Class r1;
        java.lang.ClassLoader r2;
        java.util.TreeSet $r3;

        r0 := @this: sun.misc.Service$LazyIterator;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.ClassLoader;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.misc.Service$LazyIterator: java.util.Enumeration configs> = null;
        r0.<sun.misc.Service$LazyIterator: java.util.Iterator pending> = null;
        $r3 = new java.util.TreeSet;
        specialinvoke $r3.<java.util.TreeSet: void <init>()>();
        r0.<sun.misc.Service$LazyIterator: java.util.Set returned> = $r3;
        r0.<sun.misc.Service$LazyIterator: java.lang.String nextName> = null;
        r0.<sun.misc.Service$LazyIterator: java.lang.Class service> = r1;
        r0.<sun.misc.Service$LazyIterator: java.lang.ClassLoader loader> = r2;
        return;
    }

    public boolean hasNext() throws sun.misc.ServiceConfigurationError
    {
        sun.misc.Service$LazyIterator r0;
        java.lang.String r1, $r2, $r7, $r19, $r31;
        java.util.Enumeration $r3, $r10, $r12, $r22, $r24;
        java.lang.StringBuilder $r4, $r5, $r8, $r16, $r17, $r18;
        java.lang.Class $r6, $r15, $r23;
        java.lang.ClassLoader $r9, $r11;
        java.io.IOException $r13, r14;
        java.util.Iterator $r20, $r21, $r28, $r29;
        boolean $z0, $z1;
        java.lang.Object $r25, $r30;
        java.net.URL $r26;
        java.util.Set $r27;

        r0 := @this: sun.misc.Service$LazyIterator;
        $r2 = r0.<sun.misc.Service$LazyIterator: java.lang.String nextName>;
        if $r2 == null goto label0;

        return 1;

     label0:
        $r3 = r0.<sun.misc.Service$LazyIterator: java.util.Enumeration configs>;
        if $r3 != null goto label5;

     label1:
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");
        $r6 = r0.<sun.misc.Service$LazyIterator: java.lang.Class service>;
        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = r0.<sun.misc.Service$LazyIterator: java.lang.ClassLoader loader>;
        if $r9 != null goto label2;

        $r10 = staticinvoke <java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>(r1);
        r0.<sun.misc.Service$LazyIterator: java.util.Enumeration configs> = $r10;
        goto label3;

     label2:
        $r11 = r0.<sun.misc.Service$LazyIterator: java.lang.ClassLoader loader>;
        $r12 = virtualinvoke $r11.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>(r1);
        r0.<sun.misc.Service$LazyIterator: java.util.Enumeration configs> = $r12;

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;
        r14 = $r13;
        $r15 = r0.<sun.misc.Service$LazyIterator: java.lang.Class service>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void access$000(java.lang.Class,java.lang.String)>($r15, $r19);

     label5:
        $r20 = r0.<sun.misc.Service$LazyIterator: java.util.Iterator pending>;
        if $r20 == null goto label6;

        $r21 = r0.<sun.misc.Service$LazyIterator: java.util.Iterator pending>;
        $z0 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label8;

     label6:
        $r22 = r0.<sun.misc.Service$LazyIterator: java.util.Enumeration configs>;
        $z1 = interfaceinvoke $r22.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z1 != 0 goto label7;

        return 0;

     label7:
        $r23 = r0.<sun.misc.Service$LazyIterator: java.lang.Class service>;
        $r24 = r0.<sun.misc.Service$LazyIterator: java.util.Enumeration configs>;
        $r25 = interfaceinvoke $r24.<java.util.Enumeration: java.lang.Object nextElement()>();
        $r26 = (java.net.URL) $r25;
        $r27 = r0.<sun.misc.Service$LazyIterator: java.util.Set returned>;
        $r28 = staticinvoke <sun.misc.Service: java.util.Iterator access$100(java.lang.Class,java.net.URL,java.util.Set)>($r23, $r26, $r27);
        r0.<sun.misc.Service$LazyIterator: java.util.Iterator pending> = $r28;
        goto label5;

     label8:
        $r29 = r0.<sun.misc.Service$LazyIterator: java.util.Iterator pending>;
        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();
        $r31 = (java.lang.String) $r30;
        r0.<sun.misc.Service$LazyIterator: java.lang.String nextName> = $r31;
        return 1;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public java.lang.Object next() throws sun.misc.ServiceConfigurationError
    {
        sun.misc.Service$LazyIterator r0;
        java.lang.String r1, $r12, $r19, $r30;
        java.lang.Class r2, $r7, $r13, $r14, $r20, $r25;
        java.lang.ClassNotFoundException r3, $r6;
        boolean $z0, $z1;
        java.util.NoSuchElementException $r4;
        java.lang.ClassLoader $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r15, $r16, $r17, $r18, $r26, $r27, $r28, $r29;
        java.lang.Object $r21, $r22;
        java.lang.Throwable $r23, r24;

        r0 := @this: sun.misc.Service$LazyIterator;
        $z0 = virtualinvoke r0.<sun.misc.Service$LazyIterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        $r4 = new java.util.NoSuchElementException;
        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();
        throw $r4;

     label0:
        r1 = r0.<sun.misc.Service$LazyIterator: java.lang.String nextName>;
        r0.<sun.misc.Service$LazyIterator: java.lang.String nextName> = null;
        r2 = null;

     label1:
        $r5 = r0.<sun.misc.Service$LazyIterator: java.lang.ClassLoader loader>;
        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 0, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        $r7 = r0.<sun.misc.Service$LazyIterator: java.lang.Class service>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void access$000(java.lang.Class,java.lang.String)>($r7, $r12);

     label4:
        $r13 = r0.<sun.misc.Service$LazyIterator: java.lang.Class service>;
        $z1 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);
        if $z1 != 0 goto label5;

        $r14 = r0.<sun.misc.Service$LazyIterator: java.lang.Class service>;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a subtype");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void access$000(java.lang.Class,java.lang.String)>($r14, $r19);

     label5:
        $r20 = r0.<sun.misc.Service$LazyIterator: java.lang.Class service>;
        $r21 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();
        $r22 = virtualinvoke $r20.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r21);

     label6:
        return $r22;

     label7:
        $r23 := @caughtexception;
        r24 = $r23;
        $r25 = r0.<sun.misc.Service$LazyIterator: java.lang.Class service>;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void access$200(java.lang.Class,java.lang.String,java.lang.Throwable)>($r25, $r30, r24);
        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void remove()
    {
        sun.misc.Service$LazyIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: sun.misc.Service$LazyIterator;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r1;
    }

    void <init>(java.lang.Class, java.lang.ClassLoader, sun.misc.Service$1)
    {
        sun.misc.Service$LazyIterator r0;
        java.lang.Class r1;
        java.lang.ClassLoader r2;
        sun.misc.Service$1 r3;

        r0 := @this: sun.misc.Service$LazyIterator;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.ClassLoader;
        r3 := @parameter2: sun.misc.Service$1;
        specialinvoke r0.<sun.misc.Service$LazyIterator: void <init>(java.lang.Class,java.lang.ClassLoader)>(r1, r2);
        return;
    }
}
