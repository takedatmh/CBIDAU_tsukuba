class java.util.Hashtable$KeySet extends java.util.AbstractSet
{
    final java.util.Hashtable this$0;

    private void <init>(java.util.Hashtable)
    {
        java.util.Hashtable$KeySet r0;
        java.util.Hashtable r1;

        r0 := @this: java.util.Hashtable$KeySet;
        r1 := @parameter0: java.util.Hashtable;
        r0.<java.util.Hashtable$KeySet: java.util.Hashtable this$0> = r1;
        specialinvoke r0.<java.util.AbstractSet: void <init>()>();
        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Hashtable$KeySet r0;
        java.util.Hashtable $r1;
        java.util.Iterator $r2;

        r0 := @this: java.util.Hashtable$KeySet;
        $r1 = r0.<java.util.Hashtable$KeySet: java.util.Hashtable this$0>;
        $r2 = staticinvoke <java.util.Hashtable: java.util.Iterator access$100(java.util.Hashtable,int)>($r1, 0);
        return $r2;
    }

    public int size()
    {
        java.util.Hashtable$KeySet r0;
        java.util.Hashtable $r1;
        int $i0;

        r0 := @this: java.util.Hashtable$KeySet;
        $r1 = r0.<java.util.Hashtable$KeySet: java.util.Hashtable this$0>;
        $i0 = staticinvoke <java.util.Hashtable: int access$200(java.util.Hashtable)>($r1);
        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Hashtable$KeySet r0;
        java.lang.Object r1;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: java.util.Hashtable$KeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.Hashtable$KeySet: java.util.Hashtable this$0>;
        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);
        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Hashtable$KeySet r0;
        java.lang.Object r1, $r3;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: java.util.Hashtable$KeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.Hashtable$KeySet: java.util.Hashtable this$0>;
        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);
        if $r3 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void clear()
    {
        java.util.Hashtable$KeySet r0;
        java.util.Hashtable $r1;

        r0 := @this: java.util.Hashtable$KeySet;
        $r1 = r0.<java.util.Hashtable$KeySet: java.util.Hashtable this$0>;
        virtualinvoke $r1.<java.util.Hashtable: void clear()>();
        return;
    }

    void <init>(java.util.Hashtable, java.util.Hashtable$1)
    {
        java.util.Hashtable$KeySet r0;
        java.util.Hashtable r1;
        java.util.Hashtable$1 r2;

        r0 := @this: java.util.Hashtable$KeySet;
        r1 := @parameter0: java.util.Hashtable;
        r2 := @parameter1: java.util.Hashtable$1;
        specialinvoke r0.<java.util.Hashtable$KeySet: void <init>(java.util.Hashtable)>(r1);
        return;
    }
}
