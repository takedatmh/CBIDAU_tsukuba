class java.util.concurrent.ArrayBlockingQueue$Itr extends java.lang.Object implements java.util.Iterator
{
    private int remaining;
    private int nextIndex;
    private java.lang.Object nextItem;
    private java.lang.Object lastItem;
    private int lastRet;
    final java.util.concurrent.ArrayBlockingQueue this$0;

    void <init>(java.util.concurrent.ArrayBlockingQueue)
    {
        java.util.concurrent.ArrayBlockingQueue$Itr r0;
        java.util.concurrent.ArrayBlockingQueue r1;
        java.util.concurrent.locks.ReentrantLock r2;
        int $i0, $i1;
        java.lang.Throwable r3, $r5;
        java.lang.Object $r4;

        r0 := @this: java.util.concurrent.ArrayBlockingQueue$Itr;
        r1 := @parameter0: java.util.concurrent.ArrayBlockingQueue;
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.util.concurrent.ArrayBlockingQueue this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2 = r1.<java.util.concurrent.ArrayBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;
        virtualinvoke r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label0:
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int lastRet> = -1;
        $i0 = r1.<java.util.concurrent.ArrayBlockingQueue: int count>;
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int remaining> = $i0;
        if $i0 <= 0 goto label1;

        $i1 = r1.<java.util.concurrent.ArrayBlockingQueue: int takeIndex>;
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int nextIndex> = $i1;
        $r4 = virtualinvoke r1.<java.util.concurrent.ArrayBlockingQueue: java.lang.Object itemAt(int)>($i1);
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object nextItem> = $r4;

     label1:
        virtualinvoke r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
        goto label5;

     label2:
        $r5 := @caughtexception;

     label3:
        r3 = $r5;

     label4:
        virtualinvoke r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean hasNext()
    {
        java.util.concurrent.ArrayBlockingQueue$Itr r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.util.concurrent.ArrayBlockingQueue$Itr;
        $i0 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int remaining>;
        if $i0 <= 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.concurrent.ArrayBlockingQueue$Itr r0;
        java.util.concurrent.locks.ReentrantLock r1;
        java.lang.Object r2, r3, $r11;
        java.lang.Throwable r4, $r12;
        java.util.concurrent.ArrayBlockingQueue $r5, $r7, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.NoSuchElementException $r6;

        r0 := @this: java.util.concurrent.ArrayBlockingQueue$Itr;
        $r5 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.util.concurrent.ArrayBlockingQueue this$0>;
        r1 = $r5.<java.util.concurrent.ArrayBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;
        virtualinvoke r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label0:
        $i0 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int remaining>;
        if $i0 > 0 goto label1;

        $r6 = new java.util.NoSuchElementException;
        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();
        throw $r6;

     label1:
        $i1 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int nextIndex>;
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int lastRet> = $i1;
        $r7 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.util.concurrent.ArrayBlockingQueue this$0>;
        $i2 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int nextIndex>;
        r2 = virtualinvoke $r7.<java.util.concurrent.ArrayBlockingQueue: java.lang.Object itemAt(int)>($i2);
        if r2 != null goto label2;

        r2 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object nextItem>;
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object lastItem> = null;
        goto label3;

     label2:
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object lastItem> = r2;

     label3:
        $i3 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int remaining>;
        $i4 = $i3 - 1;
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int remaining> = $i4;
        if $i4 <= 0 goto label4;

        $r9 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.util.concurrent.ArrayBlockingQueue this$0>;
        $r10 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.util.concurrent.ArrayBlockingQueue this$0>;
        $i5 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int nextIndex>;
        $i6 = virtualinvoke $r10.<java.util.concurrent.ArrayBlockingQueue: int inc(int)>($i5);
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int nextIndex> = $i6;
        $r11 = virtualinvoke $r9.<java.util.concurrent.ArrayBlockingQueue: java.lang.Object itemAt(int)>($i6);
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object nextItem> = $r11;
        if $r11 != null goto label4;

        goto label3;

     label4:
        r3 = r2;

     label5:
        virtualinvoke r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
        return r3;

     label6:
        $r12 := @caughtexception;

     label7:
        r4 = $r12;

     label8:
        virtualinvoke r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
        throw r4;

        catch java.lang.Throwable from label0 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void remove()
    {
        java.util.concurrent.ArrayBlockingQueue$Itr r0;
        java.util.concurrent.locks.ReentrantLock r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2, $r8;
        boolean z0, $z1;
        java.lang.Throwable r3, $r12;
        java.util.concurrent.ArrayBlockingQueue $r4, $r6, $r9, $r10, $r11;
        java.lang.IllegalStateException $r5;
        java.lang.Object[] $r7;

        r0 := @this: java.util.concurrent.ArrayBlockingQueue$Itr;
        $r4 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.util.concurrent.ArrayBlockingQueue this$0>;
        r1 = $r4.<java.util.concurrent.ArrayBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;
        virtualinvoke r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label0:
        i0 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int lastRet>;
        if i0 != -1 goto label1;

        $r5 = new java.lang.IllegalStateException;
        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();
        throw $r5;

     label1:
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int lastRet> = -1;
        r2 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object lastItem>;
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object lastItem> = null;
        if r2 == null goto label4;

        $r6 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.util.concurrent.ArrayBlockingQueue this$0>;
        $r7 = $r6.<java.util.concurrent.ArrayBlockingQueue: java.lang.Object[] items>;
        $r8 = $r7[i0];
        if r2 != $r8 goto label4;

        $r9 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.util.concurrent.ArrayBlockingQueue this$0>;
        $i1 = $r9.<java.util.concurrent.ArrayBlockingQueue: int takeIndex>;
        if i0 != $i1 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;
        $r10 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.util.concurrent.ArrayBlockingQueue this$0>;
        virtualinvoke $r10.<java.util.concurrent.ArrayBlockingQueue: void removeAt(int)>(i0);
        if z0 != 0 goto label4;

        $r11 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: java.util.concurrent.ArrayBlockingQueue this$0>;
        $i2 = r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int nextIndex>;
        $i3 = virtualinvoke $r11.<java.util.concurrent.ArrayBlockingQueue: int dec(int)>($i2);
        r0.<java.util.concurrent.ArrayBlockingQueue$Itr: int nextIndex> = $i3;

     label4:
        virtualinvoke r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
        goto label8;

     label5:
        $r12 := @caughtexception;

     label6:
        r3 = $r12;

     label7:
        virtualinvoke r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label0 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
