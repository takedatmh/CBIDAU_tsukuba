class sun.util.TimeZoneNameUtility$TimeZoneNameGetter extends java.lang.Object implements sun.util.LocaleServiceProviderPool$LocalizedObjectGetter
{
    private static final sun.util.TimeZoneNameUtility$TimeZoneNameGetter INSTANCE;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        sun.util.TimeZoneNameUtility$TimeZoneNameGetter r0;

        r0 := @this: sun.util.TimeZoneNameUtility$TimeZoneNameGetter;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public transient java.lang.String[] getObject(java.util.spi.TimeZoneNameProvider, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        sun.util.TimeZoneNameUtility$TimeZoneNameGetter r0;
        java.util.spi.TimeZoneNameProvider r1;
        java.util.Locale r2;
        java.lang.String r3, r6, r8, $r11;
        java.lang.Object[] r4;
        boolean $z0, $z1, $z2;
        java.lang.String[] r5;
        java.util.Map r7;
        int $i0;
        java.lang.AssertionError $r9;
        java.lang.Object $r10;
        java.util.Set $r12;

        r0 := @this: sun.util.TimeZoneNameUtility$TimeZoneNameGetter;
        r1 := @parameter0: java.util.spi.TimeZoneNameProvider;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $z0 = <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $i0 = lengthof r4;
        if $i0 == 0 goto label0;

        $r9 = new java.lang.AssertionError;
        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();
        throw $r9;

     label0:
        r5 = null;
        r6 = r3;
        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("GMT");
        if $z1 == 0 goto label1;

        r5 = staticinvoke <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] buildZoneStrings(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String)>(r1, r2, r6);
        goto label5;

     label1:
        r7 = staticinvoke <sun.util.calendar.ZoneInfo: java.util.Map getAliasTable()>();
        if r7 == null goto label5;

        $z2 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r6);
        if $z2 == 0 goto label4;

        r8 = r6;

     label2:
        $r10 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);
        $r11 = (java.lang.String) $r10;
        r6 = $r11;
        if $r11 == null goto label3;

        r8 = r6;
        goto label2;

     label3:
        r6 = r8;

     label4:
        r5 = staticinvoke <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] buildZoneStrings(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String)>(r1, r2, r6);
        if r5 != null goto label5;

        $r12 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>();
        r5 = staticinvoke <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.util.Map,java.util.Set)>(r1, r2, r6, r7, $r12);

     label5:
        if r5 == null goto label6;

        r5[0] = r3;

     label6:
        return r5;
    }

    private static java.lang.String[] examineAliases(java.util.spi.TimeZoneNameProvider, java.util.Locale, java.lang.String, java.util.Map, java.util.Set)
    {
        java.util.spi.TimeZoneNameProvider r0;
        java.util.Locale r1;
        java.lang.String r2, r7, $r11;
        java.util.Map r3;
        java.util.Set r4;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        java.lang.String[] r8, r13;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9, $r10, $r12;

        r0 := @parameter0: java.util.spi.TimeZoneNameProvider;
        r1 := @parameter1: java.util.Locale;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: java.util.Map;
        r4 := @parameter4: java.util.Set;
        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsValue(java.lang.Object)>(r2);
        if $z0 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.util.Map$Entry) $r9;
        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r11 = (java.lang.String) $r10;
        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z2 == 0 goto label2;

        $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();
        r7 = (java.lang.String) $r12;
        r8 = staticinvoke <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] buildZoneStrings(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String)>(r0, r1, r7);
        if r8 == null goto label1;

        return r8;

     label1:
        r13 = staticinvoke <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.util.Map,java.util.Set)>(r0, r1, r7, r3, r4);
        if r13 == null goto label2;

        return r13;

     label2:
        goto label0;

     label3:
        return null;
    }

    private static java.lang.String[] buildZoneStrings(java.util.spi.TimeZoneNameProvider, java.util.Locale, java.lang.String)
    {
        java.util.spi.TimeZoneNameProvider r0;
        java.util.Locale r1;
        java.lang.String r2, $r7, $r8, $r9, $r10;
        java.lang.String[] r3, $r6;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: java.util.spi.TimeZoneNameProvider;
        r1 := @parameter1: java.util.Locale;
        r2 := @parameter2: java.lang.String;
        r3 = newarray (java.lang.String)[5];
        i0 = 1;

     label0:
        if i0 > 4 goto label4;

        $r6 = r3;
        $i1 = i0;
        if i0 < 3 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i2 = i0 % 2;
        $r7 = virtualinvoke r0.<java.util.spi.TimeZoneNameProvider: java.lang.String getDisplayName(java.lang.String,boolean,int,java.util.Locale)>(r2, $z0, $i2, r1);
        $r6[$i1] = $r7;
        if i0 < 3 goto label3;

        $r8 = r3[i0];
        if $r8 != null goto label3;

        $i3 = i0 - 2;
        $r9 = r3[$i3];
        r3[i0] = $r9;

     label3:
        i0 = i0 + 1;
        goto label0;

     label4:
        $r10 = r3[1];
        if $r10 != null goto label5;

        r3 = null;

     label5:
        return r3;
    }

    public volatile java.lang.Object getObject(java.lang.Object, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        sun.util.TimeZoneNameUtility$TimeZoneNameGetter r0;
        java.lang.Object r1;
        java.util.Locale r2;
        java.lang.String r3;
        java.lang.Object[] r4;
        java.util.spi.TimeZoneNameProvider $r5;
        java.lang.String[] $r6;

        r0 := @this: sun.util.TimeZoneNameUtility$TimeZoneNameGetter;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $r5 = (java.util.spi.TimeZoneNameProvider) r1;
        $r6 = virtualinvoke r0.<sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] getObject(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>($r5, r2, r3, r4);
        return $r6;
    }

    static sun.util.TimeZoneNameUtility$TimeZoneNameGetter access$000()
    {
        sun.util.TimeZoneNameUtility$TimeZoneNameGetter $r0;

        $r0 = <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: sun.util.TimeZoneNameUtility$TimeZoneNameGetter INSTANCE>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        sun.util.TimeZoneNameUtility$TimeZoneNameGetter $r1;

        $r0 = class "sun/util/TimeZoneNameUtility";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: boolean $assertionsDisabled> = $z1;
        $r1 = new sun.util.TimeZoneNameUtility$TimeZoneNameGetter;
        specialinvoke $r1.<sun.util.TimeZoneNameUtility$TimeZoneNameGetter: void <init>()>();
        <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: sun.util.TimeZoneNameUtility$TimeZoneNameGetter INSTANCE> = $r1;
        return;
    }
}
