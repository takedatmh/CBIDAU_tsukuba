class org.apache.tomcat.util.net.NioEndpoint$3 extends java.util.concurrent.ConcurrentLinkedQueue
{
    private static final long serialVersionUID;
    protected java.util.concurrent.atomic.AtomicInteger size;
    final org.apache.tomcat.util.net.NioEndpoint this$0;

    void <init>(org.apache.tomcat.util.net.NioEndpoint)
    {
        org.apache.tomcat.util.net.NioEndpoint$3 r0;
        org.apache.tomcat.util.net.NioEndpoint r1;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$3;
        r1 := @parameter0: org.apache.tomcat.util.net.NioEndpoint;
        r0.<org.apache.tomcat.util.net.NioEndpoint$3: org.apache.tomcat.util.net.NioEndpoint this$0> = r1;
        specialinvoke r0.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();
        $r2 = new java.util.concurrent.atomic.AtomicInteger;
        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);
        r0.<org.apache.tomcat.util.net.NioEndpoint$3: java.util.concurrent.atomic.AtomicInteger size> = $r2;
        return;
    }

    public boolean offer(org.apache.tomcat.util.net.NioEndpoint$PollerEvent)
    {
        org.apache.tomcat.util.net.NioEndpoint$3 r0;
        org.apache.tomcat.util.net.NioEndpoint$PollerEvent r1;
        boolean z0, z1, $z2, $z3, $z4;
        org.apache.tomcat.util.net.NioEndpoint $r2, $r5, $r7, $r8;
        org.apache.tomcat.util.net.SocketProperties $r3, $r6;
        int $i0, $i1, $i2;
        java.util.concurrent.atomic.AtomicInteger $r4, $r9;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$3;
        r1 := @parameter0: org.apache.tomcat.util.net.NioEndpoint$PollerEvent;
        virtualinvoke r1.<org.apache.tomcat.util.net.NioEndpoint$PollerEvent: void reset()>();
        $r2 = r0.<org.apache.tomcat.util.net.NioEndpoint$3: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r3 = $r2.<org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.net.SocketProperties socketProperties>;
        $i0 = virtualinvoke $r3.<org.apache.tomcat.util.net.SocketProperties: int getEventCache()>();
        if $i0 != -1 goto label0;

        $z2 = 1;
        goto label2;

     label0:
        $r4 = r0.<org.apache.tomcat.util.net.NioEndpoint$3: java.util.concurrent.atomic.AtomicInteger size>;
        $i1 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int get()>();
        $r5 = r0.<org.apache.tomcat.util.net.NioEndpoint$3: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r6 = $r5.<org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.net.SocketProperties socketProperties>;
        $i2 = virtualinvoke $r6.<org.apache.tomcat.util.net.SocketProperties: int getEventCache()>();
        if $i1 >= $i2 goto label1;

        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;
        $r7 = r0.<org.apache.tomcat.util.net.NioEndpoint$3: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z3 = $r7.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z3 == 0 goto label4;

        $r8 = r0.<org.apache.tomcat.util.net.NioEndpoint$3: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z4 = $r8.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z4 != 0 goto label4;

        if z0 == 0 goto label4;

        z1 = specialinvoke r0.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>(r1);
        if z1 == 0 goto label3;

        $r9 = r0.<org.apache.tomcat.util.net.NioEndpoint$3: java.util.concurrent.atomic.AtomicInteger size>;
        virtualinvoke $r9.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label3:
        return z1;

     label4:
        return 0;
    }

    public org.apache.tomcat.util.net.NioEndpoint$PollerEvent poll()
    {
        org.apache.tomcat.util.net.NioEndpoint$3 r0;
        org.apache.tomcat.util.net.NioEndpoint$PollerEvent r1;
        java.lang.Object $r2;
        java.util.concurrent.atomic.AtomicInteger $r3;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$3;
        $r2 = specialinvoke r0.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();
        r1 = (org.apache.tomcat.util.net.NioEndpoint$PollerEvent) $r2;
        if r1 == null goto label0;

        $r3 = r0.<org.apache.tomcat.util.net.NioEndpoint$3: java.util.concurrent.atomic.AtomicInteger size>;
        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

     label0:
        return r1;
    }

    public void clear()
    {
        org.apache.tomcat.util.net.NioEndpoint$3 r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$3;
        specialinvoke r0.<java.util.concurrent.ConcurrentLinkedQueue: void clear()>();
        $r1 = r0.<org.apache.tomcat.util.net.NioEndpoint$3: java.util.concurrent.atomic.AtomicInteger size>;
        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);
        return;
    }

    public volatile java.lang.Object poll()
    {
        org.apache.tomcat.util.net.NioEndpoint$3 r0;
        org.apache.tomcat.util.net.NioEndpoint$PollerEvent $r1;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$3;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$3: org.apache.tomcat.util.net.NioEndpoint$PollerEvent poll()>();
        return $r1;
    }

    public volatile boolean offer(java.lang.Object)
    {
        org.apache.tomcat.util.net.NioEndpoint$3 r0;
        java.lang.Object r1;
        org.apache.tomcat.util.net.NioEndpoint$PollerEvent $r2;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$3;
        r1 := @parameter0: java.lang.Object;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint$PollerEvent) r1;
        $z0 = virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$3: boolean offer(org.apache.tomcat.util.net.NioEndpoint$PollerEvent)>($r2);
        return $z0;
    }
}
