public class sun.security.util.Cache$EqualByteArray extends java.lang.Object
{
    private final byte[] b;
    private volatile int hash;

    public void <init>(byte[])
    {
        sun.security.util.Cache$EqualByteArray r0;
        byte[] r1;

        r0 := @this: sun.security.util.Cache$EqualByteArray;
        r1 := @parameter0: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.util.Cache$EqualByteArray: byte[] b> = r1;
        return;
    }

    public int hashCode()
    {
        sun.security.util.Cache$EqualByteArray r0;
        int i0, i1, $i2, $i3, $i6;
        byte[] $r1, $r2, $r3;
        byte $b4;
        short $s5;

        r0 := @this: sun.security.util.Cache$EqualByteArray;
        i0 = r0.<sun.security.util.Cache$EqualByteArray: int hash>;
        if i0 != 0 goto label2;

        $r1 = r0.<sun.security.util.Cache$EqualByteArray: byte[] b>;
        $i2 = lengthof $r1;
        i0 = $i2 + 1;
        i1 = 0;

     label0:
        $r2 = r0.<sun.security.util.Cache$EqualByteArray: byte[] b>;
        $i3 = lengthof $r2;
        if i1 >= $i3 goto label1;

        $r3 = r0.<sun.security.util.Cache$EqualByteArray: byte[] b>;
        $b4 = $r3[i1];
        $s5 = $b4 & 255;
        $i6 = $s5 * 37;
        i0 = i0 + $i6;
        i1 = i1 + 1;
        goto label0;

     label1:
        r0.<sun.security.util.Cache$EqualByteArray: int hash> = i0;

     label2:
        return i0;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.util.Cache$EqualByteArray r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        byte[] $r3, $r4;

        r0 := @this: sun.security.util.Cache$EqualByteArray;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.security.util.Cache$EqualByteArray;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (sun.security.util.Cache$EqualByteArray) r1;
        $r3 = r0.<sun.security.util.Cache$EqualByteArray: byte[] b>;
        $r4 = r2.<sun.security.util.Cache$EqualByteArray: byte[] b>;
        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r3, $r4);
        return $z1;
    }
}
