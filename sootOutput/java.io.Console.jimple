public final class java.io.Console extends java.lang.Object implements java.io.Flushable
{
    private java.lang.Object readLock;
    private java.lang.Object writeLock;
    private java.io.Reader reader;
    private java.io.Writer out;
    private java.io.PrintWriter pw;
    private java.util.Formatter formatter;
    private java.nio.charset.Charset cs;
    private char[] rcb;
    private static boolean echoOff;
    private static java.io.Console cons;
    static final boolean $assertionsDisabled;

    public java.io.PrintWriter writer()
    {
        java.io.Console r0;
        java.io.PrintWriter $r1;

        r0 := @this: java.io.Console;
        $r1 = r0.<java.io.Console: java.io.PrintWriter pw>;
        return $r1;
    }

    public java.io.Reader reader()
    {
        java.io.Console r0;
        java.io.Reader $r1;

        r0 := @this: java.io.Console;
        $r1 = r0.<java.io.Console: java.io.Reader reader>;
        return $r1;
    }

    public transient java.io.Console format(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.util.Formatter $r3, $r4;

        r0 := @this: java.io.Console;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object[];
        $r3 = r0.<java.io.Console: java.util.Formatter formatter>;
        $r4 = virtualinvoke $r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r1, r2);
        virtualinvoke $r4.<java.util.Formatter: void flush()>();
        return r0;
    }

    public transient java.io.Console printf(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0, $r3;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @this: java.io.Console;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object[];
        $r3 = virtualinvoke r0.<java.io.Console: java.io.Console format(java.lang.String,java.lang.Object[])>(r1, r2);
        return $r3;
    }

    public transient java.lang.String readLine(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0;
        java.lang.String r1, r3, $r13;
        java.lang.Object[] r2;
        java.lang.Object r4, r5, $r9, $r10;
        char[] r6;
        java.lang.Throwable r7, r8, $r17, $r18;
        int $i0;
        java.io.PrintWriter $r11;
        java.io.IOException $r14, r15;
        java.io.IOError $r16;

        r0 := @this: java.io.Console;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object[];
        r3 = null;
        $r9 = r0.<java.io.Console: java.lang.Object writeLock>;
        r4 = $r9;
        entermonitor $r9;

     label0:
        $r10 = r0.<java.io.Console: java.lang.Object readLock>;
        r5 = $r10;
        entermonitor $r10;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 == 0 goto label2;

        $r11 = r0.<java.io.Console: java.io.PrintWriter pw>;
        virtualinvoke $r11.<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object[])>(r1, r2);

     label2:
        r6 = specialinvoke r0.<java.io.Console: char[] readline(boolean)>(0);
        if r6 == null goto label3;

        $r13 = new java.lang.String;
        specialinvoke $r13.<java.lang.String: void <init>(char[])>(r6);
        r3 = $r13;

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = new java.io.IOError;
        specialinvoke $r16.<java.io.IOError: void <init>(java.lang.Throwable)>(r15);
        throw $r16;

     label5:
        exitmonitor r5;

     label6:
        goto label10;

     label7:
        $r17 := @caughtexception;

     label8:
        r7 = $r17;
        exitmonitor r5;

     label9:
        throw r7;

     label10:
        exitmonitor r4;

     label11:
        goto label15;

     label12:
        $r18 := @caughtexception;

     label13:
        r8 = $r18;
        exitmonitor r4;

     label14:
        throw r8;

     label15:
        return r3;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
        catch java.lang.Throwable from label0 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public java.lang.String readLine()
    {
        java.io.Console r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;

        r0 := @this: java.io.Console;
        $r1 = newarray (java.lang.Object)[0];
        $r2 = virtualinvoke r0.<java.io.Console: java.lang.String readLine(java.lang.String,java.lang.Object[])>("", $r1);
        return $r2;
    }

    public transient char[] readPassword(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        char[] r3;
        java.lang.Object r4, r5, $r12, $r13;
        java.io.IOException r6, r7, r9, $r14, $r19, $r21, r22, $r24, r25, $r28;
        java.lang.Throwable r8, r10, r11, $r27, $r31, $r32;
        boolean $z0, $z1, $z2, $z3;
        java.io.IOError $r15, r16, $r20, $r23, $r26, $r29;
        int $i0;
        java.io.PrintWriter $r17, $r30;

        r0 := @this: java.io.Console;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object[];
        r3 = null;
        $r12 = r0.<java.io.Console: java.lang.Object writeLock>;
        r4 = $r12;
        entermonitor $r12;

     label0:
        $r13 = r0.<java.io.Console: java.lang.Object readLock>;
        r5 = $r13;
        entermonitor $r13;

     label1:
        $z0 = staticinvoke <java.io.Console: boolean echo(boolean)>(0);
        <java.io.Console: boolean echoOff> = $z0;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;
        r6 = $r14;
        $r15 = new java.io.IOError;
        specialinvoke $r15.<java.io.IOError: void <init>(java.lang.Throwable)>(r6);
        throw $r15;

     label4:
        r16 = null;

     label5:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 == 0 goto label6;

        $r17 = r0.<java.io.Console: java.io.PrintWriter pw>;
        virtualinvoke $r17.<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object[])>(r1, r2);

     label6:
        r3 = specialinvoke r0.<java.io.Console: char[] readline(boolean)>(1);

     label7:
        $z1 = staticinvoke <java.io.Console: boolean echo(boolean)>(1);
        <java.io.Console: boolean echoOff> = $z1;

     label8:
        goto label11;

     label9:
        $r19 := @caughtexception;
        r7 = $r19;
        if r16 != null goto label10;

        $r20 = new java.io.IOError;
        specialinvoke $r20.<java.io.IOError: void <init>(java.lang.Throwable)>(r7);
        r16 = $r20;
        goto label11;

     label10:
        virtualinvoke r16.<java.io.IOError: void addSuppressed(java.lang.Throwable)>(r7);

     label11:
        if r16 == null goto label27;

        throw r16;

     label12:
        $r21 := @caughtexception;

     label13:
        r22 = $r21;
        $r23 = new java.io.IOError;
        specialinvoke $r23.<java.io.IOError: void <init>(java.lang.Throwable)>(r22);
        r16 = $r23;

     label14:
        $z2 = staticinvoke <java.io.Console: boolean echo(boolean)>(1);
        <java.io.Console: boolean echoOff> = $z2;

     label15:
        goto label18;

     label16:
        $r24 := @caughtexception;
        r25 = $r24;
        if r16 != null goto label17;

        $r26 = new java.io.IOError;
        specialinvoke $r26.<java.io.IOError: void <init>(java.lang.Throwable)>(r25);
        r16 = $r26;
        goto label18;

     label17:
        virtualinvoke r16.<java.io.IOError: void addSuppressed(java.lang.Throwable)>(r25);

     label18:
        if r16 == null goto label27;

        throw r16;

     label19:
        $r27 := @caughtexception;

     label20:
        r8 = $r27;

     label21:
        $z3 = staticinvoke <java.io.Console: boolean echo(boolean)>(1);
        <java.io.Console: boolean echoOff> = $z3;

     label22:
        goto label25;

     label23:
        $r28 := @caughtexception;
        r9 = $r28;
        if r16 != null goto label24;

        $r29 = new java.io.IOError;
        specialinvoke $r29.<java.io.IOError: void <init>(java.lang.Throwable)>(r9);
        r16 = $r29;
        goto label25;

     label24:
        virtualinvoke r16.<java.io.IOError: void addSuppressed(java.lang.Throwable)>(r9);

     label25:
        if r16 == null goto label26;

        throw r16;

     label26:
        throw r8;

     label27:
        $r30 = r0.<java.io.Console: java.io.PrintWriter pw>;
        virtualinvoke $r30.<java.io.PrintWriter: void println()>();
        exitmonitor r5;

     label28:
        goto label32;

     label29:
        $r31 := @caughtexception;

     label30:
        r10 = $r31;
        exitmonitor r5;

     label31:
        throw r10;

     label32:
        exitmonitor r4;

     label33:
        goto label37;

     label34:
        $r32 := @caughtexception;

     label35:
        r11 = $r32;
        exitmonitor r4;

     label36:
        throw r11;

     label37:
        return r3;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label7 to label8 with label9;
        catch java.io.IOException from label5 to label7 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label5 to label7 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label1 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
        catch java.lang.Throwable from label0 to label33 with label34;
        catch java.lang.Throwable from label35 to label36 with label34;
    }

    public char[] readPassword()
    {
        java.io.Console r0;
        java.lang.Object[] $r1;
        char[] $r2;

        r0 := @this: java.io.Console;
        $r1 = newarray (java.lang.Object)[0];
        $r2 = virtualinvoke r0.<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object[])>("", $r1);
        return $r2;
    }

    public void flush()
    {
        java.io.Console r0;
        java.io.PrintWriter $r1;

        r0 := @this: java.io.Console;
        $r1 = r0.<java.io.Console: java.io.PrintWriter pw>;
        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();
        return;
    }

    private static native java.lang.String encoding();

    private static native boolean echo(boolean) throws java.io.IOException;

    private char[] readline(boolean) throws java.io.IOException
    {
        java.io.Console r0;
        boolean z0;
        int i0, $i1, $i2, $i4, $i6;
        char[] r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.io.Reader $r2;
        char $c3, $c5, $c7;

        r0 := @this: java.io.Console;
        z0 := @parameter0: boolean;
        $r2 = r0.<java.io.Console: java.io.Reader reader>;
        $r3 = r0.<java.io.Console: char[] rcb>;
        $r4 = r0.<java.io.Console: char[] rcb>;
        $i1 = lengthof $r4;
        i0 = virtualinvoke $r2.<java.io.Reader: int read(char[],int,int)>($r3, 0, $i1);
        if i0 >= 0 goto label0;

        return null;

     label0:
        $r5 = r0.<java.io.Console: char[] rcb>;
        $i2 = i0 - 1;
        $c3 = $r5[$i2];
        if $c3 != 13 goto label1;

        i0 = i0 + -1;
        goto label2;

     label1:
        $r6 = r0.<java.io.Console: char[] rcb>;
        $i4 = i0 - 1;
        $c5 = $r6[$i4];
        if $c5 != 10 goto label2;

        i0 = i0 + -1;
        if i0 <= 0 goto label2;

        $r7 = r0.<java.io.Console: char[] rcb>;
        $i6 = i0 - 1;
        $c7 = $r7[$i6];
        if $c7 != 13 goto label2;

        i0 = i0 + -1;

     label2:
        r1 = newarray (char)[i0];
        if i0 <= 0 goto label3;

        $r8 = r0.<java.io.Console: char[] rcb>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r1, 0, i0);
        if z0 == 0 goto label3;

        $r9 = r0.<java.io.Console: char[] rcb>;
        staticinvoke <java.util.Arrays: void fill(char[],int,int,char)>($r9, 0, i0, 32);

     label3:
        return r1;
    }

    private char[] grow()
    {
        java.io.Console r0;
        boolean $z0, $z1;
        char[] r1, $r4, $r5, $r6, $r7;
        java.lang.Object $r2;
        java.lang.AssertionError $r3;
        int $i0, $i1, $i2;

        r0 := @this: java.io.Console;
        $z0 = <java.io.Console: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $r2 = r0.<java.io.Console: java.lang.Object readLock>;
        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r2);
        if $z1 != 0 goto label0;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        throw $r3;

     label0:
        $r4 = r0.<java.io.Console: char[] rcb>;
        $i0 = lengthof $r4;
        $i1 = $i0 * 2;
        r1 = newarray (char)[$i1];
        $r5 = r0.<java.io.Console: char[] rcb>;
        $r6 = r0.<java.io.Console: char[] rcb>;
        $i2 = lengthof $r6;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r1, 0, $i2);
        r0.<java.io.Console: char[] rcb> = r1;
        $r7 = r0.<java.io.Console: char[] rcb>;
        return $r7;
    }

    private static native boolean istty();

    private void <init>()
    {
        java.io.Console r0;
        java.lang.Object $r1, $r6, $r12, $r21;
        java.lang.String r2;
        java.lang.Exception r3, $r8;
        java.io.FileDescriptor $r4, $r5;
        java.nio.charset.Charset $r7, $r9, $r10, $r13, $r22;
        java.io.FileOutputStream $r11;
        sun.nio.cs.StreamEncoder $r14;
        java.io.Console$3 $r15;
        java.io.Writer $r16, $r18;
        java.util.Formatter $r17;
        java.io.Console$LineReader $r19;
        java.io.FileInputStream $r20;
        sun.nio.cs.StreamDecoder $r23;
        char[] $r24;

        r0 := @this: java.io.Console;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.lang.Object;
        specialinvoke $r1.<java.lang.Object: void <init>()>();
        r0.<java.io.Console: java.lang.Object readLock> = $r1;
        $r6 = new java.lang.Object;
        specialinvoke $r6.<java.lang.Object: void <init>()>();
        r0.<java.io.Console: java.lang.Object writeLock> = $r6;
        r2 = staticinvoke <java.io.Console: java.lang.String encoding()>();
        if r2 == null goto label3;

     label0:
        $r7 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r2);
        r0.<java.io.Console: java.nio.charset.Charset cs> = $r7;

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r3 = $r8;

     label3:
        $r9 = r0.<java.io.Console: java.nio.charset.Charset cs>;
        if $r9 != null goto label4;

        $r10 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
        r0.<java.io.Console: java.nio.charset.Charset cs> = $r10;

     label4:
        $r11 = new java.io.FileOutputStream;
        $r4 = <java.io.FileDescriptor: java.io.FileDescriptor out>;
        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r4);
        $r12 = r0.<java.io.Console: java.lang.Object writeLock>;
        $r13 = r0.<java.io.Console: java.nio.charset.Charset cs>;
        $r14 = staticinvoke <sun.nio.cs.StreamEncoder: sun.nio.cs.StreamEncoder forOutputStreamWriter(java.io.OutputStream,java.lang.Object,java.nio.charset.Charset)>($r11, $r12, $r13);
        r0.<java.io.Console: java.io.Writer out> = $r14;
        $r15 = new java.io.Console$3;
        $r16 = r0.<java.io.Console: java.io.Writer out>;
        specialinvoke $r15.<java.io.Console$3: void <init>(java.io.Console,java.io.Writer,boolean)>(r0, $r16, 1);
        r0.<java.io.Console: java.io.PrintWriter pw> = $r15;
        $r17 = new java.util.Formatter;
        $r18 = r0.<java.io.Console: java.io.Writer out>;
        specialinvoke $r17.<java.util.Formatter: void <init>(java.lang.Appendable)>($r18);
        r0.<java.io.Console: java.util.Formatter formatter> = $r17;
        $r19 = new java.io.Console$LineReader;
        $r20 = new java.io.FileInputStream;
        $r5 = <java.io.FileDescriptor: java.io.FileDescriptor in>;
        specialinvoke $r20.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r5);
        $r21 = r0.<java.io.Console: java.lang.Object readLock>;
        $r22 = r0.<java.io.Console: java.nio.charset.Charset cs>;
        $r23 = staticinvoke <sun.nio.cs.StreamDecoder: sun.nio.cs.StreamDecoder forInputStreamReader(java.io.InputStream,java.lang.Object,java.nio.charset.Charset)>($r20, $r21, $r22);
        specialinvoke $r19.<java.io.Console$LineReader: void <init>(java.io.Console,java.io.Reader)>(r0, $r23);
        r0.<java.io.Console: java.io.Reader reader> = $r19;
        $r24 = newarray (char)[1024];
        r0.<java.io.Console: char[] rcb> = $r24;
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    static java.lang.Object access$000(java.io.Console)
    {
        java.io.Console r0;
        java.lang.Object $r1;

        r0 := @parameter0: java.io.Console;
        $r1 = r0.<java.io.Console: java.lang.Object readLock>;
        return $r1;
    }

    static char[] access$100(java.io.Console)
    {
        java.io.Console r0;
        char[] $r1;

        r0 := @parameter0: java.io.Console;
        $r1 = r0.<java.io.Console: char[] rcb>;
        return $r1;
    }

    static char[] access$200(java.io.Console)
    {
        java.io.Console r0;
        char[] $r1;

        r0 := @parameter0: java.io.Console;
        $r1 = specialinvoke r0.<java.io.Console: char[] grow()>();
        return $r1;
    }

    static boolean access$300()
    {
        boolean $z0;

        $z0 = <java.io.Console: boolean echoOff>;
        return $z0;
    }

    static boolean access$400(boolean) throws java.io.IOException
    {
        boolean z0, $z1;

        z0 := @parameter0: boolean;
        $z1 = staticinvoke <java.io.Console: boolean echo(boolean)>(z0);
        return $z1;
    }

    static boolean access$500()
    {
        boolean $z0;

        $z0 = staticinvoke <java.io.Console: boolean istty()>();
        return $z0;
    }

    static java.io.Console access$600()
    {
        java.io.Console $r0;

        $r0 = <java.io.Console: java.io.Console cons>;
        return $r0;
    }

    static java.io.Console access$602(java.io.Console)
    {
        java.io.Console r0;

        r0 := @parameter0: java.io.Console;
        <java.io.Console: java.io.Console cons> = r0;
        return r0;
    }

    void <init>(java.io.Console$1)
    {
        java.io.Console r0;
        java.io.Console$1 r1;

        r0 := @this: java.io.Console;
        r1 := @parameter0: java.io.Console$1;
        specialinvoke r0.<java.io.Console: void <init>()>();
        return;
    }

    static java.nio.charset.Charset access$800(java.io.Console)
    {
        java.io.Console r0;
        java.nio.charset.Charset $r1;

        r0 := @parameter0: java.io.Console;
        $r1 = r0.<java.io.Console: java.nio.charset.Charset cs>;
        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.io.Console$1 $r1;
        java.lang.IllegalStateException r2, $r4;
        boolean $z0, $z1;
        sun.misc.JavaLangAccess $r3;
        java.io.Console$2 $r5;

        $r0 = class "java/io/Console";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.io.Console: boolean $assertionsDisabled> = $z1;

     label2:
        $r3 = staticinvoke <sun.misc.SharedSecrets: sun.misc.JavaLangAccess getJavaLangAccess()>();
        $r1 = new java.io.Console$1;
        specialinvoke $r1.<java.io.Console$1: void <init>()>();
        interfaceinvoke $r3.<sun.misc.JavaLangAccess: void registerShutdownHook(int,boolean,java.lang.Runnable)>(0, 0, $r1);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;
        r2 = $r4;

     label5:
        $r5 = new java.io.Console$2;
        specialinvoke $r5.<java.io.Console$2: void <init>()>();
        staticinvoke <sun.misc.SharedSecrets: void setJavaIOAccess(sun.misc.JavaIOAccess)>($r5);
        return;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
    }
}
