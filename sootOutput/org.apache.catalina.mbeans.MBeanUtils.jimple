public class org.apache.catalina.mbeans.MBeanUtils extends java.lang.Object
{
    private static java.lang.String[][] exceptions;
    private static org.apache.tomcat.util.modeler.Registry registry;
    private static javax.management.MBeanServer mserver;
    static java.util.Hashtable seq;

    static void <clinit>()
    {
        java.lang.String[][] $r0;
        java.lang.String[] $r1, $r2, $r3;
        org.apache.tomcat.util.modeler.Registry $r4;
        javax.management.MBeanServer $r5;
        java.util.Hashtable $r6;

        $r0 = newarray (java.lang.String[])[3];
        $r1 = newarray (java.lang.String)[2];
        $r1[0] = "org.apache.catalina.users.MemoryGroup";
        $r1[1] = "Group";
        $r0[0] = $r1;
        $r2 = newarray (java.lang.String)[2];
        $r2[0] = "org.apache.catalina.users.MemoryRole";
        $r2[1] = "Role";
        $r0[1] = $r2;
        $r3 = newarray (java.lang.String)[2];
        $r3[0] = "org.apache.catalina.users.MemoryUser";
        $r3[1] = "User";
        $r0[2] = $r3;
        <org.apache.catalina.mbeans.MBeanUtils: java.lang.String[][] exceptions> = $r0;
        $r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry createRegistry()>();
        <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry> = $r4;
        $r5 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer createServer()>();
        <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver> = $r5;
        $r6 = new java.util.Hashtable;
        specialinvoke $r6.<java.util.Hashtable: void <init>()>();
        <org.apache.catalina.mbeans.MBeanUtils: java.util.Hashtable seq> = $r6;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.mbeans.MBeanUtils r0;

        r0 := @this: org.apache.catalina.mbeans.MBeanUtils;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static java.lang.String createManagedName(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String r1, $r5, $r8;
        int i0, $i1, i2, $i3;
        java.lang.String[][] $r2, $r6, $r9;
        java.lang.Class $r3;
        java.lang.String[] $r4, $r7;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        r1 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();
        i0 = 0;
        goto label2;

     label0:
        $r2 = <org.apache.catalina.mbeans.MBeanUtils: java.lang.String[][] exceptions>;
        $r4 = $r2[i0];
        $r5 = $r4[0];
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z0 == 0 goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: java.lang.String[][] exceptions>;
        $r7 = $r6[i0];
        $r8 = $r7[1];
        return $r8;

     label1:
        i0 = i0 + 1;

     label2:
        $r9 = <org.apache.catalina.mbeans.MBeanUtils: java.lang.String[][] exceptions>;
        $i1 = lengthof $r9;
        if i0 < $i1 goto label0;

        i2 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);
        if i2 < 0 goto label3;

        $i3 = i2 + 1;
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i3);

     label3:
        return r1;
    }

    public static javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextEnvironment) throws java.lang.Exception
    {
        org.apache.catalina.deploy.ContextEnvironment r0;
        java.lang.String r1, $r10, r12;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.Exception r4, $r8;
        javax.management.DynamicMBean r5;
        javax.management.ObjectName r6;
        org.apache.tomcat.util.modeler.Registry $r7;
        javax.management.MBeanException $r11;
        javax.management.MBeanServer $r13, $r14, $r15, $r16;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.deploy.ContextEnvironment;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r8 = new java.lang.Exception;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean is not found with ");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r10);
        r4 = $r8;
        $r11 = new javax.management.MBeanException;
        specialinvoke $r11.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r11;

     label0:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r12 != null goto label1;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r12 = interfaceinvoke $r13.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(r0);
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.deploy.ContextEnvironment)>(r12, r0);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r14.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r6);
        if $z0 == 0 goto label2;

        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r15.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r6);

     label2:
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r5, r6);
        return r5;
    }

    public static javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResource) throws java.lang.Exception
    {
        org.apache.catalina.deploy.ContextResource r0;
        java.lang.String r1, $r10, r12;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.Exception r4, $r8;
        javax.management.DynamicMBean r5;
        javax.management.ObjectName r6;
        org.apache.tomcat.util.modeler.Registry $r7;
        javax.management.MBeanException $r11;
        javax.management.MBeanServer $r13, $r14, $r15, $r16;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.deploy.ContextResource;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r8 = new java.lang.Exception;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean is not found with ");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r10);
        r4 = $r8;
        $r11 = new javax.management.MBeanException;
        specialinvoke $r11.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r11;

     label0:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r12 != null goto label1;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r12 = interfaceinvoke $r13.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(r0);
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.deploy.ContextResource)>(r12, r0);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r14.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r6);
        if $z0 == 0 goto label2;

        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r15.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r6);

     label2:
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r5, r6);
        return r5;
    }

    public static javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResourceLink) throws java.lang.Exception
    {
        org.apache.catalina.deploy.ContextResourceLink r0;
        java.lang.String r1, $r10, r12;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.Exception r4, $r8;
        javax.management.DynamicMBean r5;
        javax.management.ObjectName r6;
        org.apache.tomcat.util.modeler.Registry $r7;
        javax.management.MBeanException $r11;
        javax.management.MBeanServer $r13, $r14, $r15, $r16;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.deploy.ContextResourceLink;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r8 = new java.lang.Exception;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean is not found with ");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r10);
        r4 = $r8;
        $r11 = new javax.management.MBeanException;
        specialinvoke $r11.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r11;

     label0:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r12 != null goto label1;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r12 = interfaceinvoke $r13.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(r0);
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.deploy.ContextResourceLink)>(r12, r0);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r14.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r6);
        if $z0 == 0 goto label2;

        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r15.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r6);

     label2:
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r5, r6);
        return r5;
    }

    static javax.management.DynamicMBean createMBean(org.apache.catalina.Group) throws java.lang.Exception
    {
        org.apache.catalina.Group r0;
        java.lang.String r1, $r10, r12;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.Exception r4, $r8;
        javax.management.DynamicMBean r5;
        javax.management.ObjectName r6;
        org.apache.tomcat.util.modeler.Registry $r7;
        javax.management.MBeanException $r11;
        javax.management.MBeanServer $r13, $r14, $r15, $r16;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Group;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r8 = new java.lang.Exception;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean is not found with ");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r10);
        r4 = $r8;
        $r11 = new javax.management.MBeanException;
        specialinvoke $r11.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r11;

     label0:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r12 != null goto label1;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r12 = interfaceinvoke $r13.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(r0);
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Group)>(r12, r0);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r14.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r6);
        if $z0 == 0 goto label2;

        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r15.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r6);

     label2:
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r5, r6);
        return r5;
    }

    static javax.management.DynamicMBean createMBean(org.apache.catalina.Loader) throws java.lang.Exception
    {
        org.apache.catalina.Loader r0;
        java.lang.String r1, $r10, r12;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.Exception r4, $r8;
        javax.management.DynamicMBean r5;
        javax.management.ObjectName r6;
        org.apache.tomcat.util.modeler.Registry $r7;
        javax.management.MBeanException $r11;
        javax.management.MBeanServer $r13, $r14, $r15, $r16;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Loader;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r8 = new java.lang.Exception;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean is not found with ");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r10);
        r4 = $r8;
        $r11 = new javax.management.MBeanException;
        specialinvoke $r11.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r11;

     label0:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r12 != null goto label1;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r12 = interfaceinvoke $r13.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(r0);
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Loader)>(r12, r0);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r14.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r6);
        if $z0 == 0 goto label2;

        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r15.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r6);

     label2:
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r5, r6);
        return r5;
    }

    static javax.management.DynamicMBean createMBean(org.apache.catalina.mbeans.MBeanFactory) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, $r10, r12;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.Exception r4, $r8;
        javax.management.DynamicMBean r5;
        javax.management.ObjectName r6;
        org.apache.tomcat.util.modeler.Registry $r7;
        javax.management.MBeanException $r11;
        javax.management.MBeanServer $r13, $r14, $r15, $r16;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.mbeans.MBeanFactory;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r8 = new java.lang.Exception;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean is not found with ");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r10);
        r4 = $r8;
        $r11 = new javax.management.MBeanException;
        specialinvoke $r11.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r11;

     label0:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r12 != null goto label1;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r12 = interfaceinvoke $r13.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(r0);
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.mbeans.MBeanFactory)>(r12, r0);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r14.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r6);
        if $z0 == 0 goto label2;

        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r15.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r6);

     label2:
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r5, r6);
        return r5;
    }

    static javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.NamingResources) throws java.lang.Exception
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1, $r10, r12;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.Exception r4, $r8;
        javax.management.DynamicMBean r5;
        javax.management.ObjectName r6;
        org.apache.tomcat.util.modeler.Registry $r7;
        javax.management.MBeanException $r11;
        javax.management.MBeanServer $r13, $r14, $r15, $r16;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.deploy.NamingResources;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r8 = new java.lang.Exception;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean is not found with ");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r10);
        r4 = $r8;
        $r11 = new javax.management.MBeanException;
        specialinvoke $r11.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r11;

     label0:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r12 != null goto label1;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r12 = interfaceinvoke $r13.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(r0);
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.deploy.NamingResources)>(r12, r0);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r14.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r6);
        if $z0 == 0 goto label2;

        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r15.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r6);

     label2:
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r5, r6);
        return r5;
    }

    static javax.management.DynamicMBean createMBean(org.apache.catalina.Role) throws java.lang.Exception
    {
        org.apache.catalina.Role r0;
        java.lang.String r1, $r10, r12;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.Exception r4, $r8;
        javax.management.DynamicMBean r5;
        javax.management.ObjectName r6;
        org.apache.tomcat.util.modeler.Registry $r7;
        javax.management.MBeanException $r11;
        javax.management.MBeanServer $r13, $r14, $r15, $r16;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Role;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r8 = new java.lang.Exception;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean is not found with ");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r10);
        r4 = $r8;
        $r11 = new javax.management.MBeanException;
        specialinvoke $r11.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r11;

     label0:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r12 != null goto label1;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r12 = interfaceinvoke $r13.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(r0);
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Role)>(r12, r0);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r14.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r6);
        if $z0 == 0 goto label2;

        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r15.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r6);

     label2:
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r5, r6);
        return r5;
    }

    static javax.management.DynamicMBean createMBean(org.apache.catalina.User) throws java.lang.Exception
    {
        org.apache.catalina.User r0;
        java.lang.String r1, $r10, r12;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.Exception r4, $r8;
        javax.management.DynamicMBean r5;
        javax.management.ObjectName r6;
        org.apache.tomcat.util.modeler.Registry $r7;
        javax.management.MBeanException $r11;
        javax.management.MBeanServer $r13, $r14, $r15, $r16;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.User;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r8 = new java.lang.Exception;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean is not found with ");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r10);
        r4 = $r8;
        $r11 = new javax.management.MBeanException;
        specialinvoke $r11.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r11;

     label0:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r12 != null goto label1;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r12 = interfaceinvoke $r13.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(r0);
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.User)>(r12, r0);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r14.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r6);
        if $z0 == 0 goto label2;

        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r15.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r6);

     label2:
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r5, r6);
        return r5;
    }

    static javax.management.DynamicMBean createMBean(org.apache.catalina.UserDatabase) throws java.lang.Exception
    {
        org.apache.catalina.UserDatabase r0;
        java.lang.String r1, $r10, r12;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.Exception r4, $r8;
        javax.management.DynamicMBean r5;
        javax.management.ObjectName r6;
        org.apache.tomcat.util.modeler.Registry $r7;
        javax.management.MBeanException $r11;
        javax.management.MBeanServer $r13, $r14, $r15, $r16;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.UserDatabase;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r8 = new java.lang.Exception;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("ManagedBean is not found with ");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r10);
        r4 = $r8;
        $r11 = new javax.management.MBeanException;
        specialinvoke $r11.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r11;

     label0:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r12 != null goto label1;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r12 = interfaceinvoke $r13.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.DynamicMBean createMBean(java.lang.Object)>(r0);
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.UserDatabase)>(r12, r0);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r14.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r6);
        if $z0 == 0 goto label2;

        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r15.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r6);

     label2:
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>(r5, r6);
        return r5;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.connector.Connector) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, r5, $r12, $r15, $r23;
        org.apache.catalina.connector.Connector r1;
        null_type n0;
        java.lang.Object r2, $r6;
        java.lang.Integer r3;
        java.lang.StringBuilder r4, $r7, $r21, $r22;
        int $i0;
        javax.management.ObjectName $r14, r16;
        java.lang.Exception $r18, r19;
        javax.management.MalformedObjectNameException $r20, r24;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.connector.Connector;
        n0 = null;

     label0:
        r2 = staticinvoke <org.apache.tomcat.util.IntrospectionUtils: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r1, "address");
        $r6 = staticinvoke <org.apache.tomcat.util.IntrospectionUtils: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r1, "port");
        r3 = (java.lang.Integer) $r6;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);
        r4 = $r7;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Connector");
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",port=");
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        if r2 == null goto label1;

        r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();
        $i0 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i0 <= 0 goto label1;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",address=");
        $r12 = staticinvoke <javax.management.ObjectName: java.lang.String quote(java.lang.String)>(r5);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label1:
        $r14 = new javax.management.ObjectName;
        $r15 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<javax.management.ObjectName: void <init>(java.lang.String)>($r15);
        r16 = $r14;

     label2:
        return r16;

     label3:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = new javax.management.MalformedObjectNameException;
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create object name for ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r20.<javax.management.MalformedObjectNameException: void <init>(java.lang.String)>($r23);
        r24 = $r20;
        virtualinvoke r24.<javax.management.MalformedObjectNameException: java.lang.Throwable initCause(java.lang.Throwable)>(r19);
        throw r24;

        catch java.lang.Exception from label0 to label2 with label3;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Context) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r6, $r9, $r11, $r13, $r16;
        org.apache.catalina.Context r1;
        null_type n0;
        org.apache.catalina.Host r2;
        org.apache.catalina.util.ContextName r3, $r5;
        org.apache.catalina.Container $r4;
        javax.management.ObjectName $r7, r17;
        java.lang.StringBuilder $r8, $r10, $r12, $r14, $r15;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Context;
        n0 = null;
        $r4 = interfaceinvoke r1.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        r2 = (org.apache.catalina.Host) $r4;
        $r5 = new org.apache.catalina.util.ContextName;
        $r6 = interfaceinvoke r1.<org.apache.catalina.Context: java.lang.String getName()>();
        specialinvoke $r5.<org.apache.catalina.util.ContextName: void <init>(java.lang.String,boolean)>($r6, 0);
        r3 = $r5;
        $r7 = new javax.management.ObjectName;
        $r8 = new java.lang.StringBuilder;
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":j2eeType=WebModule,name=//");
        $r11 = interfaceinvoke r2.<org.apache.catalina.Host: java.lang.String getName()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke r3.<org.apache.catalina.util.ContextName: java.lang.String getDisplayName()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",J2EEApplication=none,J2EEServer=none");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<javax.management.ObjectName: void <init>(java.lang.String)>($r16);
        r17 = $r7;
        return r17;
    }

    public static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.deploy.ContextEnvironment) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r10, $r13, $r15, $r17, $r20, $r23, $r26, $r29, $r31;
        org.apache.catalina.deploy.ContextEnvironment r1;
        javax.management.ObjectName r2, $r9, $r18;
        java.lang.Object r3;
        java.lang.StringBuilder $r4, $r11, $r12, $r14, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r30;
        org.apache.catalina.Context r5;
        org.apache.catalina.util.ContextName r6, $r16;
        org.apache.catalina.Container r7;
        org.apache.catalina.deploy.NamingResources $r8;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.deploy.ContextEnvironment;
        r2 = null;
        $r8 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: org.apache.catalina.deploy.NamingResources getNamingResources()>();
        r3 = virtualinvoke $r8.<org.apache.catalina.deploy.NamingResources: java.lang.Object getContainer()>();
        $z0 = r3 instanceof org.apache.catalina.Server;
        if $z0 == 0 goto label0;

        $r9 = new javax.management.ObjectName;
        $r4 = new java.lang.StringBuilder;
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);
        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Environment");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",resourcetype=Global,name=");
        $r13 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<javax.management.ObjectName: void <init>(java.lang.String)>($r15);
        r2 = $r9;
        goto label1;

     label0:
        $z1 = r3 instanceof org.apache.catalina.Context;
        if $z1 == 0 goto label1;

        r5 = (org.apache.catalina.Context) r3;
        $r16 = new org.apache.catalina.util.ContextName;
        $r17 = interfaceinvoke r5.<org.apache.catalina.Context: java.lang.String getName()>();
        specialinvoke $r16.<org.apache.catalina.util.ContextName: void <init>(java.lang.String,boolean)>($r17, 0);
        r6 = $r16;
        r7 = interfaceinvoke r5.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r18 = new javax.management.ObjectName;
        $r19 = new java.lang.StringBuilder;
        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r20);
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Environment");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",resourcetype=Context,context=");
        $r23 = virtualinvoke r6.<org.apache.catalina.util.ContextName: java.lang.String getDisplayName()>();
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",host=");
        $r26 = interfaceinvoke r7.<org.apache.catalina.Container: java.lang.String getName()>();
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",name=");
        $r29 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r18.<javax.management.ObjectName: void <init>(java.lang.String)>($r31);
        r2 = $r18;

     label1:
        return r2;
    }

    public static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.deploy.ContextResource) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, r3, $r9, $r12, $r15, $r19, $r21, $r24, $r27, $r30, $r33, $r37;
        org.apache.catalina.deploy.ContextResource r1;
        javax.management.ObjectName r2, $r11, $r22;
        java.lang.Object r4;
        java.lang.StringBuilder $r5, $r13, $r14, $r16, $r17, $r18, $r23, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r36;
        org.apache.catalina.Context r6;
        org.apache.catalina.util.ContextName r7, $r20;
        org.apache.catalina.Container r8;
        org.apache.catalina.deploy.NamingResources $r10;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.deploy.ContextResource;
        r2 = null;
        $r9 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        r3 = staticinvoke <javax.management.ObjectName: java.lang.String quote(java.lang.String)>($r9);
        $r10 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: org.apache.catalina.deploy.NamingResources getNamingResources()>();
        r4 = virtualinvoke $r10.<org.apache.catalina.deploy.NamingResources: java.lang.Object getContainer()>();
        $z0 = r4 instanceof org.apache.catalina.Server;
        if $z0 == 0 goto label0;

        $r11 = new javax.management.ObjectName;
        $r5 = new java.lang.StringBuilder;
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);
        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Resource");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",resourcetype=Global,class=");
        $r15 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: java.lang.String getType()>();
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",name=");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<javax.management.ObjectName: void <init>(java.lang.String)>($r19);
        r2 = $r11;
        goto label1;

     label0:
        $z1 = r4 instanceof org.apache.catalina.Context;
        if $z1 == 0 goto label1;

        r6 = (org.apache.catalina.Context) r4;
        $r20 = new org.apache.catalina.util.ContextName;
        $r21 = interfaceinvoke r6.<org.apache.catalina.Context: java.lang.String getName()>();
        specialinvoke $r20.<org.apache.catalina.util.ContextName: void <init>(java.lang.String,boolean)>($r21, 0);
        r7 = $r20;
        r8 = interfaceinvoke r6.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r22 = new javax.management.ObjectName;
        $r23 = new java.lang.StringBuilder;
        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Resource");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",resourcetype=Context,context=");
        $r27 = virtualinvoke r7.<org.apache.catalina.util.ContextName: java.lang.String getDisplayName()>();
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",host=");
        $r30 = interfaceinvoke r8.<org.apache.catalina.Container: java.lang.String getName()>();
        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",class=");
        $r33 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: java.lang.String getType()>();
        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",name=");
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r22.<javax.management.ObjectName: void <init>(java.lang.String)>($r37);
        r2 = $r22;

     label1:
        return r2;
    }

    public static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.deploy.ContextResourceLink) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, r3, $r9, $r12, $r17, $r19, $r22, $r25, $r28, $r32;
        org.apache.catalina.deploy.ContextResourceLink r1;
        javax.management.ObjectName r2, $r11, $r20;
        java.lang.Object r4;
        java.lang.StringBuilder $r5, $r13, $r14, $r15, $r16, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r31;
        org.apache.catalina.Context r6;
        org.apache.catalina.util.ContextName r7, $r18;
        org.apache.catalina.Container r8;
        org.apache.catalina.deploy.NamingResources $r10;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.deploy.ContextResourceLink;
        r2 = null;
        $r9 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceLink: java.lang.String getName()>();
        r3 = staticinvoke <javax.management.ObjectName: java.lang.String quote(java.lang.String)>($r9);
        $r10 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceLink: org.apache.catalina.deploy.NamingResources getNamingResources()>();
        r4 = virtualinvoke $r10.<org.apache.catalina.deploy.NamingResources: java.lang.Object getContainer()>();
        $z0 = r4 instanceof org.apache.catalina.Server;
        if $z0 == 0 goto label0;

        $r11 = new javax.management.ObjectName;
        $r5 = new java.lang.StringBuilder;
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);
        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=ResourceLink");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",resourcetype=Global");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",name=");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<javax.management.ObjectName: void <init>(java.lang.String)>($r17);
        r2 = $r11;
        goto label1;

     label0:
        $z1 = r4 instanceof org.apache.catalina.Context;
        if $z1 == 0 goto label1;

        r6 = (org.apache.catalina.Context) r4;
        $r18 = new org.apache.catalina.util.ContextName;
        $r19 = interfaceinvoke r6.<org.apache.catalina.Context: java.lang.String getName()>();
        specialinvoke $r18.<org.apache.catalina.util.ContextName: void <init>(java.lang.String,boolean)>($r19, 0);
        r7 = $r18;
        r8 = interfaceinvoke r6.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r20 = new javax.management.ObjectName;
        $r21 = new java.lang.StringBuilder;
        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=ResourceLink");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",resourcetype=Context,context=");
        $r25 = virtualinvoke r7.<org.apache.catalina.util.ContextName: java.lang.String getDisplayName()>();
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",host=");
        $r28 = interfaceinvoke r8.<org.apache.catalina.Container: java.lang.String getName()>();
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",name=");
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r20.<javax.management.ObjectName: void <init>(java.lang.String)>($r32);
        r2 = $r20;

     label1:
        return r2;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Engine) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r4, $r6;
        org.apache.catalina.Engine r1;
        null_type n0;
        java.lang.StringBuilder $r2, $r5;
        javax.management.ObjectName $r3, r7;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Engine;
        n0 = null;
        $r3 = new javax.management.ObjectName;
        $r2 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Engine");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<javax.management.ObjectName: void <init>(java.lang.String)>($r6);
        r7 = $r3;
        return r7;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Group) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r4, $r6, $r7, $r11, $r13;
        org.apache.catalina.Group r1;
        null_type n0;
        java.lang.StringBuilder $r2, $r5, $r8, $r9, $r12;
        javax.management.ObjectName $r3, r14;
        org.apache.catalina.UserDatabase $r10;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Group;
        n0 = null;
        $r3 = new javax.management.ObjectName;
        $r2 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Group,groupname=");
        $r6 = interfaceinvoke r1.<org.apache.catalina.Group: java.lang.String getGroupname()>();
        $r7 = staticinvoke <javax.management.ObjectName: java.lang.String quote(java.lang.String)>($r6);
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",database=");
        $r10 = interfaceinvoke r1.<org.apache.catalina.Group: org.apache.catalina.UserDatabase getUserDatabase()>();
        $r11 = interfaceinvoke $r10.<org.apache.catalina.UserDatabase: java.lang.String getId()>();
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<javax.management.ObjectName: void <init>(java.lang.String)>($r13);
        r14 = $r3;
        return r14;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Host) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r4, $r6, $r8;
        org.apache.catalina.Host r1;
        null_type n0;
        java.lang.StringBuilder $r2, $r5, $r7;
        javax.management.ObjectName $r3, r9;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Host;
        n0 = null;
        $r3 = new javax.management.ObjectName;
        $r2 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Host,host=");
        $r6 = interfaceinvoke r1.<org.apache.catalina.Host: java.lang.String getName()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<javax.management.ObjectName: void <init>(java.lang.String)>($r8);
        r9 = $r3;
        return r9;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Loader) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r9, $r11, $r14, $r16, $r18, $r20, $r23, $r25, $r28, $r30;
        org.apache.catalina.Loader r1;
        javax.management.ObjectName r2, $r8, $r12, $r21;
        org.apache.catalina.Container r3, r7;
        java.lang.StringBuilder $r4, $r10, $r13, $r15, $r17, $r22, $r24, $r26, $r27, $r29;
        org.apache.catalina.Context r5;
        org.apache.catalina.util.ContextName r6, $r19;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Loader;
        r2 = null;
        r3 = interfaceinvoke r1.<org.apache.catalina.Loader: org.apache.catalina.Container getContainer()>();
        $z0 = r3 instanceof org.apache.catalina.Engine;
        if $z0 == 0 goto label0;

        $r8 = new javax.management.ObjectName;
        $r4 = new java.lang.StringBuilder;
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);
        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Loader");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<javax.management.ObjectName: void <init>(java.lang.String)>($r11);
        r2 = $r8;
        goto label2;

     label0:
        $z1 = r3 instanceof org.apache.catalina.Host;
        if $z1 == 0 goto label1;

        $r12 = new javax.management.ObjectName;
        $r13 = new java.lang.StringBuilder;
        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Loader,host=");
        $r16 = interfaceinvoke r3.<org.apache.catalina.Container: java.lang.String getName()>();
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r12.<javax.management.ObjectName: void <init>(java.lang.String)>($r18);
        r2 = $r12;
        goto label2;

     label1:
        $z2 = r3 instanceof org.apache.catalina.Context;
        if $z2 == 0 goto label2;

        r5 = (org.apache.catalina.Context) r3;
        $r19 = new org.apache.catalina.util.ContextName;
        $r20 = interfaceinvoke r5.<org.apache.catalina.Context: java.lang.String getName()>();
        specialinvoke $r19.<org.apache.catalina.util.ContextName: void <init>(java.lang.String,boolean)>($r20, 0);
        r6 = $r19;
        r7 = interfaceinvoke r5.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r21 = new javax.management.ObjectName;
        $r22 = new java.lang.StringBuilder;
        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Loader,context=");
        $r25 = virtualinvoke r6.<org.apache.catalina.util.ContextName: java.lang.String getDisplayName()>();
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",host=");
        $r28 = interfaceinvoke r7.<org.apache.catalina.Container: java.lang.String getName()>();
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r21.<javax.management.ObjectName: void <init>(java.lang.String)>($r30);
        r2 = $r21;

     label2:
        return r2;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Manager) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r9, $r11, $r14, $r16, $r18, $r20, $r23, $r25, $r28, $r30;
        org.apache.catalina.Manager r1;
        javax.management.ObjectName r2, $r8, $r12, $r21;
        org.apache.catalina.Container r3, r7;
        java.lang.StringBuilder $r4, $r10, $r13, $r15, $r17, $r22, $r24, $r26, $r27, $r29;
        org.apache.catalina.Context r5;
        org.apache.catalina.util.ContextName r6, $r19;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Manager;
        r2 = null;
        r3 = interfaceinvoke r1.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $z0 = r3 instanceof org.apache.catalina.Engine;
        if $z0 == 0 goto label0;

        $r8 = new javax.management.ObjectName;
        $r4 = new java.lang.StringBuilder;
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);
        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Manager");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<javax.management.ObjectName: void <init>(java.lang.String)>($r11);
        r2 = $r8;
        goto label2;

     label0:
        $z1 = r3 instanceof org.apache.catalina.Host;
        if $z1 == 0 goto label1;

        $r12 = new javax.management.ObjectName;
        $r13 = new java.lang.StringBuilder;
        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Manager,host=");
        $r16 = interfaceinvoke r3.<org.apache.catalina.Container: java.lang.String getName()>();
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r12.<javax.management.ObjectName: void <init>(java.lang.String)>($r18);
        r2 = $r12;
        goto label2;

     label1:
        $z2 = r3 instanceof org.apache.catalina.Context;
        if $z2 == 0 goto label2;

        r5 = (org.apache.catalina.Context) r3;
        $r19 = new org.apache.catalina.util.ContextName;
        $r20 = interfaceinvoke r5.<org.apache.catalina.Context: java.lang.String getName()>();
        specialinvoke $r19.<org.apache.catalina.util.ContextName: void <init>(java.lang.String,boolean)>($r20, 0);
        r6 = $r19;
        r7 = interfaceinvoke r5.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r21 = new javax.management.ObjectName;
        $r22 = new java.lang.StringBuilder;
        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Manager,context=");
        $r25 = virtualinvoke r6.<org.apache.catalina.util.ContextName: java.lang.String getDisplayName()>();
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",host=");
        $r28 = interfaceinvoke r7.<org.apache.catalina.Container: java.lang.String getName()>();
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r21.<javax.management.ObjectName: void <init>(java.lang.String)>($r30);
        r2 = $r21;

     label2:
        return r2;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.deploy.NamingResources) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r9, $r12, $r14, $r17, $r20, $r23, $r25;
        org.apache.catalina.deploy.NamingResources r1;
        javax.management.ObjectName r2, $r8, $r15;
        java.lang.Object r3;
        java.lang.StringBuilder $r4, $r10, $r11, $r16, $r18, $r19, $r21, $r22, $r24;
        org.apache.catalina.Context r5;
        org.apache.catalina.util.ContextName r6, $r13;
        org.apache.catalina.Container r7;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.deploy.NamingResources;
        r2 = null;
        r3 = virtualinvoke r1.<org.apache.catalina.deploy.NamingResources: java.lang.Object getContainer()>();
        $z0 = r3 instanceof org.apache.catalina.Server;
        if $z0 == 0 goto label0;

        $r8 = new javax.management.ObjectName;
        $r4 = new java.lang.StringBuilder;
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);
        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=NamingResources");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",resourcetype=Global");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<javax.management.ObjectName: void <init>(java.lang.String)>($r12);
        r2 = $r8;
        goto label1;

     label0:
        $z1 = r3 instanceof org.apache.catalina.Context;
        if $z1 == 0 goto label1;

        r5 = (org.apache.catalina.Context) r3;
        $r13 = new org.apache.catalina.util.ContextName;
        $r14 = interfaceinvoke r5.<org.apache.catalina.Context: java.lang.String getName()>();
        specialinvoke $r13.<org.apache.catalina.util.ContextName: void <init>(java.lang.String,boolean)>($r14, 0);
        r6 = $r13;
        r7 = interfaceinvoke r5.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r15 = new javax.management.ObjectName;
        $r16 = new java.lang.StringBuilder;
        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>($r17);
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=NamingResources");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",resourcetype=Context,context=");
        $r20 = virtualinvoke r6.<org.apache.catalina.util.ContextName: java.lang.String getDisplayName()>();
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",host=");
        $r23 = interfaceinvoke r7.<org.apache.catalina.Container: java.lang.String getName()>();
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r15.<javax.management.ObjectName: void <init>(java.lang.String)>($r25);
        r2 = $r15;

     label1:
        return r2;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.mbeans.MBeanFactory) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r5, $r7;
        org.apache.catalina.mbeans.MBeanFactory r1;
        javax.management.ObjectName $r2, r4;
        java.lang.StringBuilder $r3, $r6;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.mbeans.MBeanFactory;
        $r2 = new javax.management.ObjectName;
        $r3 = new java.lang.StringBuilder;
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=MBeanFactory");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>($r7);
        r4 = $r2;
        return r4;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Realm) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r9, $r11, $r14, $r16, $r18, $r20, $r23, $r25, $r28, $r30;
        org.apache.catalina.Realm r1;
        javax.management.ObjectName r2, $r8, $r12, $r21;
        org.apache.catalina.Container r3, r7;
        java.lang.StringBuilder $r4, $r10, $r13, $r15, $r17, $r22, $r24, $r26, $r27, $r29;
        org.apache.catalina.Context r5;
        org.apache.catalina.util.ContextName r6, $r19;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Realm;
        r2 = null;
        r3 = interfaceinvoke r1.<org.apache.catalina.Realm: org.apache.catalina.Container getContainer()>();
        $z0 = r3 instanceof org.apache.catalina.Engine;
        if $z0 == 0 goto label0;

        $r8 = new javax.management.ObjectName;
        $r4 = new java.lang.StringBuilder;
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);
        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Realm");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<javax.management.ObjectName: void <init>(java.lang.String)>($r11);
        r2 = $r8;
        goto label2;

     label0:
        $z1 = r3 instanceof org.apache.catalina.Host;
        if $z1 == 0 goto label1;

        $r12 = new javax.management.ObjectName;
        $r13 = new java.lang.StringBuilder;
        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Realm,host=");
        $r16 = interfaceinvoke r3.<org.apache.catalina.Container: java.lang.String getName()>();
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r12.<javax.management.ObjectName: void <init>(java.lang.String)>($r18);
        r2 = $r12;
        goto label2;

     label1:
        $z2 = r3 instanceof org.apache.catalina.Context;
        if $z2 == 0 goto label2;

        r5 = (org.apache.catalina.Context) r3;
        $r19 = new org.apache.catalina.util.ContextName;
        $r20 = interfaceinvoke r5.<org.apache.catalina.Context: java.lang.String getName()>();
        specialinvoke $r19.<org.apache.catalina.util.ContextName: void <init>(java.lang.String,boolean)>($r20, 0);
        r6 = $r19;
        r7 = interfaceinvoke r5.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r21 = new javax.management.ObjectName;
        $r22 = new java.lang.StringBuilder;
        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Realm,context=");
        $r25 = virtualinvoke r6.<org.apache.catalina.util.ContextName: java.lang.String getDisplayName()>();
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",host=");
        $r28 = interfaceinvoke r7.<org.apache.catalina.Container: java.lang.String getName()>();
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r21.<javax.management.ObjectName: void <init>(java.lang.String)>($r30);
        r2 = $r21;

     label2:
        return r2;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Role) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r5, $r7, $r8, $r12, $r14;
        org.apache.catalina.Role r1;
        javax.management.ObjectName $r2, r4;
        java.lang.StringBuilder $r3, $r6, $r9, $r10, $r13;
        org.apache.catalina.UserDatabase $r11;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Role;
        $r2 = new javax.management.ObjectName;
        $r3 = new java.lang.StringBuilder;
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Role,rolename=");
        $r7 = interfaceinvoke r1.<org.apache.catalina.Role: java.lang.String getRolename()>();
        $r8 = staticinvoke <javax.management.ObjectName: java.lang.String quote(java.lang.String)>($r7);
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",database=");
        $r11 = interfaceinvoke r1.<org.apache.catalina.Role: org.apache.catalina.UserDatabase getUserDatabase()>();
        $r12 = interfaceinvoke $r11.<org.apache.catalina.UserDatabase: java.lang.String getId()>();
        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>($r14);
        r4 = $r2;
        return r4;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Server) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r4, $r6;
        org.apache.catalina.Server r1;
        null_type n0;
        java.lang.StringBuilder $r2, $r5;
        javax.management.ObjectName $r3, r7;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Server;
        n0 = null;
        $r3 = new javax.management.ObjectName;
        $r2 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Server");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<javax.management.ObjectName: void <init>(java.lang.String)>($r6);
        r7 = $r3;
        return r7;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Service) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r4, $r6, $r8;
        org.apache.catalina.Service r1;
        null_type n0;
        java.lang.StringBuilder $r2, $r5, $r7;
        javax.management.ObjectName $r3, r9;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Service;
        n0 = null;
        $r3 = new javax.management.ObjectName;
        $r2 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Service,serviceName=");
        $r6 = interfaceinvoke r1.<org.apache.catalina.Service: java.lang.String getName()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<javax.management.ObjectName: void <init>(java.lang.String)>($r8);
        r9 = $r3;
        return r9;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.User) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r5, $r7, $r8, $r12, $r14;
        org.apache.catalina.User r1;
        javax.management.ObjectName $r2, r4;
        java.lang.StringBuilder $r3, $r6, $r9, $r10, $r13;
        org.apache.catalina.UserDatabase $r11;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.User;
        $r2 = new javax.management.ObjectName;
        $r3 = new java.lang.StringBuilder;
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=User,username=");
        $r7 = interfaceinvoke r1.<org.apache.catalina.User: java.lang.String getUsername()>();
        $r8 = staticinvoke <javax.management.ObjectName: java.lang.String quote(java.lang.String)>($r7);
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",database=");
        $r11 = interfaceinvoke r1.<org.apache.catalina.User: org.apache.catalina.UserDatabase getUserDatabase()>();
        $r12 = interfaceinvoke $r11.<org.apache.catalina.UserDatabase: java.lang.String getId()>();
        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>($r14);
        r4 = $r2;
        return r4;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.UserDatabase) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, $r4, $r6, $r8;
        org.apache.catalina.UserDatabase r1;
        null_type n0;
        java.lang.StringBuilder $r2, $r5, $r7;
        javax.management.ObjectName $r3, r9;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.UserDatabase;
        n0 = null;
        $r3 = new javax.management.ObjectName;
        $r2 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=UserDatabase,database=");
        $r6 = interfaceinvoke r1.<org.apache.catalina.UserDatabase: java.lang.String getId()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<javax.management.ObjectName: void <init>(java.lang.String)>($r8);
        r9 = $r3;
        return r9;
    }

    static javax.management.ObjectName createObjectName(java.lang.String, org.apache.catalina.Valve) throws javax.management.MalformedObjectNameException
    {
        java.lang.String r0, r4, r5, r6, r7, r8, $r16, $r21, $r26, $r28, r30, r31, $r36, $r41, $r44, $r48, $r51, $r57, $r62;
        org.apache.catalina.Valve r1;
        javax.management.ObjectName r2, r10, $r19, $r34, $r55;
        org.apache.catalina.Container r3, r46;
        int i0, i1, i2, $i3, i4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.catalina.valves.ValveBase $r9;
        java.lang.Class $r11;
        org.apache.catalina.Contained $r12;
        javax.management.MalformedObjectNameException $r13;
        java.lang.StringBuilder $r14, $r15, $r17, $r18, $r20, $r22, $r23, $r24, $r25, $r27, $r29, $r32, $r33, $r35, $r37, $r38, $r39, $r40, $r47, $r49, $r50, $r52, $r53, $r54, $r56, $r58, $r59, $r60, $r61;
        org.apache.catalina.Context r42;
        org.apache.catalina.util.ContextName $r43, r45;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.apache.catalina.Valve;
        $z0 = r1 instanceof org.apache.catalina.valves.ValveBase;
        if $z0 == 0 goto label0;

        $r9 = (org.apache.catalina.valves.ValveBase) r1;
        r2 = virtualinvoke $r9.<org.apache.catalina.valves.ValveBase: javax.management.ObjectName getObjectName()>();
        if r2 == null goto label0;

        return r2;

     label0:
        r10 = null;
        r3 = null;
        $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        r4 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();
        i0 = virtualinvoke r4.<java.lang.String: int lastIndexOf(int)>(46);
        if i0 < 0 goto label1;

        $i3 = i0 + 1;
        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i3);

     label1:
        $z1 = r1 instanceof org.apache.catalina.Contained;
        if $z1 == 0 goto label2;

        $r12 = (org.apache.catalina.Contained) r1;
        r3 = interfaceinvoke $r12.<org.apache.catalina.Contained: org.apache.catalina.Container getContainer()>();

     label2:
        if r3 != null goto label3;

        $r13 = new javax.management.MalformedObjectNameException;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create mbean for non-contained valve ");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r13.<javax.management.MalformedObjectNameException: void <init>(java.lang.String)>($r16);
        throw $r13;

     label3:
        $z2 = r3 instanceof org.apache.catalina.Engine;
        if $z2 == 0 goto label5;

        r5 = "";
        i1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: int getSeq(java.lang.String)>(r5);
        r6 = "";
        if i1 <= 0 goto label4;

        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>(",seq=");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r19 = new javax.management.ObjectName;
        $r20 = new java.lang.StringBuilder;
        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>($r21);
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Valve,name=");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r19.<javax.management.ObjectName: void <init>(java.lang.String)>($r26);
        r10 = $r19;
        goto label9;

     label5:
        $z3 = r3 instanceof org.apache.catalina.Host;
        if $z3 == 0 goto label7;

        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(",host=");
        $r28 = interfaceinvoke r3.<org.apache.catalina.Container: java.lang.String getName()>();
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        i4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: int getSeq(java.lang.String)>(r30);
        r31 = "";
        if i4 <= 0 goto label6;

        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>(",seq=");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
        r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r34 = new javax.management.ObjectName;
        $r35 = new java.lang.StringBuilder;
        $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>($r36);
        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Valve,name=");
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r34.<javax.management.ObjectName: void <init>(java.lang.String)>($r41);
        r10 = $r34;
        goto label9;

     label7:
        $z4 = r3 instanceof org.apache.catalina.Context;
        if $z4 == 0 goto label9;

        r42 = (org.apache.catalina.Context) r3;
        $r43 = new org.apache.catalina.util.ContextName;
        $r44 = interfaceinvoke r42.<org.apache.catalina.Context: java.lang.String getName()>();
        specialinvoke $r43.<org.apache.catalina.util.ContextName: void <init>(java.lang.String,boolean)>($r44, 0);
        r45 = $r43;
        r46 = interfaceinvoke r42.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r47 = new java.lang.StringBuilder;
        specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>(",context=");
        $r48 = virtualinvoke r45.<org.apache.catalina.util.ContextName: java.lang.String getDisplayName()>();
        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",host=");
        $r51 = interfaceinvoke r46.<org.apache.catalina.Container: java.lang.String getName()>();
        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);
        r7 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
        i2 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: int getSeq(java.lang.String)>(r7);
        r8 = "";
        if i2 <= 0 goto label8;

        $r53 = new java.lang.StringBuilder;
        specialinvoke $r53.<java.lang.StringBuilder: void <init>(java.lang.String)>(",seq=");
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        r8 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        $r55 = new javax.management.ObjectName;
        $r56 = new java.lang.StringBuilder;
        $r57 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r56.<java.lang.StringBuilder: void <init>(java.lang.String)>($r57);
        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Valve,name=");
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r55.<javax.management.ObjectName: void <init>(java.lang.String)>($r62);
        r10 = $r55;

     label9:
        return r10;
    }

    static int getSeq(java.lang.String)
    {
        java.lang.String r0;
        java.util.Hashtable $r1, $r4;
        int[] r2;
        java.lang.Object $r3;
        byte $b0;
        int $i1, $i2, $i3;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.apache.catalina.mbeans.MBeanUtils: java.util.Hashtable seq>;
        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (int[]) $r3;
        if r2 != null goto label0;

        r2 = newarray (int)[1];
        r2[0] = 0;
        $r4 = <org.apache.catalina.mbeans.MBeanUtils: java.util.Hashtable seq>;
        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);
        goto label1;

     label0:
        $b0 = 0;
        $i1 = r2[$b0];
        $i2 = $i1 + 1;
        r2[$b0] = $i2;

     label1:
        $i3 = r2[0];
        return $i3;
    }

    public static synchronized org.apache.tomcat.util.modeler.Registry createRegistry()
    {
        org.apache.tomcat.util.modeler.Registry $r0, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.ClassLoader r1;
        java.lang.Class $r3;

        $r0 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        if $r0 != null goto label0;

        $r2 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry> = $r2;
        $r3 = class "org/apache/catalina/mbeans/MBeanUtils";
        r1 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        $r4 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r4.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.mbeans", r1);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.authenticator", r1);
        $r6 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r6.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.core", r1);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r7.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina", r1);
        $r8 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r8.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.deploy", r1);
        $r9 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r9.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.loader", r1);
        $r10 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r10.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.realm", r1);
        $r11 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r11.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.session", r1);
        $r12 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r12.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.startup", r1);
        $r13 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r13.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.users", r1);
        $r14 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r14.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.ha", r1);
        $r15 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r15.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.connector", r1);
        $r16 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        virtualinvoke $r16.<org.apache.tomcat.util.modeler.Registry: void loadDescriptors(java.lang.String,java.lang.ClassLoader)>("org.apache.catalina.valves", r1);

     label0:
        $r17 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        return $r17;
    }

    public static synchronized javax.management.MBeanServer createServer()
    {
        javax.management.MBeanServer $r0, $r2, $r3;
        org.apache.tomcat.util.modeler.Registry $r1;

        $r0 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        if $r0 != null goto label0;

        $r1 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        $r2 = virtualinvoke $r1.<org.apache.tomcat.util.modeler.Registry: javax.management.MBeanServer getMBeanServer()>();
        <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver> = $r2;

     label0:
        $r3 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        return $r3;
    }

    static void destroyMBean(org.apache.catalina.connector.Connector, org.apache.catalina.Service) throws java.lang.Exception
    {
        org.apache.catalina.connector.Connector r0;
        org.apache.catalina.Service r1;
        java.lang.String r2, r4, $r21, $r25;
        javax.management.ObjectName r3, r7, r10, $r20;
        org.apache.coyote.ProtocolHandler r5;
        java.lang.StringBuilder $r6, $r22, $r23, $r24;
        java.util.Set r8;
        java.util.Iterator r9;
        org.apache.catalina.Container $r11;
        javax.management.MBeanServer $r12, $r13, $r14, $r26, $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.coyote.http11.Http11Protocol $r15;
        org.apache.coyote.http11.Http11NioProtocol $r16;
        org.apache.coyote.http11.Http11AprProtocol $r17;
        org.apache.coyote.ajp.AjpProtocol $r18;
        org.apache.coyote.ajp.AjpAprProtocol $r19;
        java.lang.Object $r27;

        r0 := @parameter0: org.apache.catalina.connector.Connector;
        r1 := @parameter1: org.apache.catalina.Service;
        $r11 = interfaceinvoke r1.<org.apache.catalina.Service: org.apache.catalina.Container getContainer()>();
        r2 = interfaceinvoke $r11.<org.apache.catalina.Container: java.lang.String getName()>();
        if r2 != null goto label0;

        $r12 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r2 = interfaceinvoke $r12.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label0:
        r3 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.connector.Connector)>(r2, r0);
        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r13.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r3);
        if $z0 == 0 goto label1;

        $r14 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r14.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r3);

     label1:
        r4 = null;
        r5 = virtualinvoke r0.<org.apache.catalina.connector.Connector: org.apache.coyote.ProtocolHandler getProtocolHandler()>();
        $z1 = r5 instanceof org.apache.coyote.http11.Http11Protocol;
        if $z1 == 0 goto label2;

        $r15 = (org.apache.coyote.http11.Http11Protocol) r5;
        r4 = virtualinvoke $r15.<org.apache.coyote.http11.Http11Protocol: java.lang.String getName()>();
        goto label6;

     label2:
        $z2 = r5 instanceof org.apache.coyote.http11.Http11NioProtocol;
        if $z2 == 0 goto label3;

        $r16 = (org.apache.coyote.http11.Http11NioProtocol) r5;
        r4 = virtualinvoke $r16.<org.apache.coyote.http11.Http11NioProtocol: java.lang.String getName()>();
        goto label6;

     label3:
        $z3 = r5 instanceof org.apache.coyote.http11.Http11AprProtocol;
        if $z3 == 0 goto label4;

        $r17 = (org.apache.coyote.http11.Http11AprProtocol) r5;
        r4 = virtualinvoke $r17.<org.apache.coyote.http11.Http11AprProtocol: java.lang.String getName()>();
        goto label6;

     label4:
        $z4 = r5 instanceof org.apache.coyote.ajp.AjpProtocol;
        if $z4 == 0 goto label5;

        $r18 = (org.apache.coyote.ajp.AjpProtocol) r5;
        r4 = virtualinvoke $r18.<org.apache.coyote.ajp.AjpProtocol: java.lang.String getName()>();
        goto label6;

     label5:
        $z5 = r5 instanceof org.apache.coyote.ajp.AjpAprProtocol;
        if $z5 == 0 goto label6;

        $r19 = (org.apache.coyote.ajp.AjpAprProtocol) r5;
        r4 = virtualinvoke $r19.<org.apache.coyote.ajp.AjpAprProtocol: java.lang.String getName()>();

     label6:
        $r20 = new javax.management.ObjectName;
        $r6 = new java.lang.StringBuilder;
        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r21);
        $r22 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=RequestProcessor,worker=");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",*");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r20.<javax.management.ObjectName: void <init>(java.lang.String)>($r25);
        r7 = $r20;
        $r26 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r8 = interfaceinvoke $r26.<javax.management.MBeanServer: java.util.Set queryNames(javax.management.ObjectName,javax.management.QueryExp)>(r7, null);
        r9 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>();
        goto label8;

     label7:
        $r27 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
        r10 = (javax.management.ObjectName) $r27;
        $r28 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r28.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r10);

     label8:
        $z6 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
        if $z6 != 0 goto label7;

        return;
    }

    static void destroyMBean(org.apache.catalina.Context) throws java.lang.Exception
    {
        org.apache.catalina.Context r0;
        java.lang.String r1;
        javax.management.ObjectName r2;
        org.apache.catalina.Container $r3, $r4;
        javax.management.MBeanServer $r5, $r6, $r7;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Context;
        $r3 = interfaceinvoke r0.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r4 = interfaceinvoke $r3.<org.apache.catalina.Container: org.apache.catalina.Container getParent()>();
        r1 = interfaceinvoke $r4.<org.apache.catalina.Container: java.lang.String getName()>();
        if r1 != null goto label0;

        $r5 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r1 = interfaceinvoke $r5.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label0:
        r2 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Context)>(r1, r0);
        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r6.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r2);
        if $z0 == 0 goto label1;

        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r7.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r2);

     label1:
        return;
    }

    public static void destroyMBean(org.apache.catalina.deploy.ContextEnvironment) throws java.lang.Exception
    {
        org.apache.catalina.deploy.ContextEnvironment r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.deploy.ContextEnvironment;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.deploy.ContextEnvironment)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    public static void destroyMBean(org.apache.catalina.deploy.ContextResource) throws java.lang.Exception
    {
        org.apache.catalina.deploy.ContextResource r0;
        java.lang.String $r1, r2, r4, $r6, $r7;
        org.apache.tomcat.util.modeler.ManagedBean r3;
        javax.management.ObjectName r5;
        boolean $z0, $z1;
        org.apache.tomcat.util.modeler.Registry $r8;
        javax.management.MBeanServer $r9, $r10, $r11;

        r0 := @parameter0: org.apache.catalina.deploy.ContextResource;
        $r1 = "org.apache.catalina.UserDatabase";
        $r6 = virtualinvoke r0.<org.apache.catalina.deploy.ContextResource: java.lang.String getType()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z0 == 0 goto label0;

        $r7 = virtualinvoke r0.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: void destroyMBeanUserDatabase(java.lang.String)>($r7);

     label0:
        r2 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r8 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r3 = virtualinvoke $r8.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r2);
        if r3 != null goto label1;

        return;

     label1:
        r4 = virtualinvoke r3.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r4 != null goto label2;

        $r9 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r4 = interfaceinvoke $r9.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label2:
        r5 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.deploy.ContextResource)>(r4, r0);
        $r10 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z1 = interfaceinvoke $r10.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r5);
        if $z1 == 0 goto label3;

        $r11 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r11.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r5);

     label3:
        return;
    }

    public static void destroyMBean(org.apache.catalina.deploy.ContextResourceLink) throws java.lang.Exception
    {
        org.apache.catalina.deploy.ContextResourceLink r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.deploy.ContextResourceLink;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.deploy.ContextResourceLink)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    static void destroyMBean(org.apache.catalina.Engine) throws java.lang.Exception
    {
        org.apache.catalina.Engine r0;
        java.lang.String r1;
        javax.management.ObjectName r2;
        javax.management.MBeanServer $r3, $r4, $r5;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Engine;
        r1 = interfaceinvoke r0.<org.apache.catalina.Engine: java.lang.String getName()>();
        if r1 != null goto label0;

        $r3 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r1 = interfaceinvoke $r3.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label0:
        r2 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Engine)>(r1, r0);
        $r4 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r4.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r2);
        if $z0 == 0 goto label1;

        $r5 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r5.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r2);

     label1:
        return;
    }

    static void destroyMBean(org.apache.catalina.Group) throws java.lang.Exception
    {
        org.apache.catalina.Group r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Group;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Group)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    static void destroyMBean(org.apache.catalina.Host) throws java.lang.Exception
    {
        org.apache.catalina.Host r0;
        java.lang.String r1;
        javax.management.ObjectName r2;
        org.apache.catalina.Container $r3;
        javax.management.MBeanServer $r4, $r5, $r6;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Host;
        $r3 = interfaceinvoke r0.<org.apache.catalina.Host: org.apache.catalina.Container getParent()>();
        r1 = interfaceinvoke $r3.<org.apache.catalina.Container: java.lang.String getName()>();
        if r1 != null goto label0;

        $r4 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r1 = interfaceinvoke $r4.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label0:
        r2 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Host)>(r1, r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r5.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r2);
        if $z0 == 0 goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r6.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r2);

     label1:
        return;
    }

    static void destroyMBean(org.apache.catalina.Loader) throws java.lang.Exception
    {
        org.apache.catalina.Loader r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Loader;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Loader)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    static void destroyMBean(org.apache.catalina.Manager) throws java.lang.Exception
    {
        org.apache.catalina.Manager r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Manager;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Manager)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    static void destroyMBean(org.apache.catalina.deploy.NamingResources) throws java.lang.Exception
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.deploy.NamingResources;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.deploy.NamingResources)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    static void destroyMBean(org.apache.catalina.Realm) throws java.lang.Exception
    {
        org.apache.catalina.Realm r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Realm;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Realm)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    static void destroyMBean(org.apache.catalina.Role) throws java.lang.Exception
    {
        org.apache.catalina.Role r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Role;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Role)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    static void destroyMBean(org.apache.catalina.Server) throws java.lang.Exception
    {
        org.apache.catalina.Server r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4, $r9, r10, $r13, r14;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8, $r11, $r12, $r15, $r16;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.catalina.Server;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Server)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        $r9 = new javax.management.ObjectName;
        specialinvoke $r9.<javax.management.ObjectName: void <init>(java.lang.String)>("Catalina:type=StringCache");
        r10 = $r9;
        $r11 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z1 = interfaceinvoke $r11.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r10);
        if $z1 == 0 goto label3;

        $r12 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r12.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r10);

     label3:
        $r13 = new javax.management.ObjectName;
        specialinvoke $r13.<javax.management.ObjectName: void <init>(java.lang.String)>("Catalina:type=MBeanFactory");
        r14 = $r13;
        $r15 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z2 = interfaceinvoke $r15.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r14);
        if $z2 == 0 goto label4;

        $r16 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r16.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r14);

     label4:
        return;
    }

    static void destroyMBean(org.apache.catalina.Service) throws java.lang.Exception
    {
        org.apache.catalina.Service r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Service;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Service)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    static void destroyMBean(org.apache.catalina.User) throws java.lang.Exception
    {
        org.apache.catalina.User r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.User;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.User)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    static void destroyMBean(org.apache.catalina.UserDatabase) throws java.lang.Exception
    {
        org.apache.catalina.UserDatabase r0;
        java.lang.String r1, r3;
        org.apache.tomcat.util.modeler.ManagedBean r2;
        javax.management.ObjectName r4;
        org.apache.tomcat.util.modeler.Registry $r5;
        javax.management.MBeanServer $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.UserDatabase;
        r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r5 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r1);
        if r2 != null goto label0;

        return;

     label0:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r3 != null goto label1;

        $r6 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r3 = interfaceinvoke $r6.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.UserDatabase)>(r3, r0);
        $r7 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r7.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r4);
        if $z0 == 0 goto label2;

        $r8 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r4);

     label2:
        return;
    }

    static void destroyMBeanUserDatabase(java.lang.String) throws java.lang.Exception
    {
        java.lang.String r0, $r7, $r17, $r29, $r40;
        null_type n0, n1;
        java.lang.StringBuilder $r1, $r5, $r6, $r14, $r15, $r16, $r26, $r27, $r28, $r38, $r39;
        java.util.Iterator r2, r21, r33;
        javax.management.ObjectName r3, $r4, r8, $r13, r18, r23, $r25, r30, r35, $r37, r41;
        javax.management.MBeanServer $r9, $r12, $r19, $r24, $r31, $r36, $r42, $r43;
        java.util.Set r10, r20, r32;
        java.lang.Object $r11, $r22, $r34;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;
        n0 = null;
        n1 = null;
        $r4 = new javax.management.ObjectName;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Users:type=Group,database=");
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",*");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<javax.management.ObjectName: void <init>(java.lang.String)>($r7);
        r8 = $r4;
        $r9 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r10 = interfaceinvoke $r9.<javax.management.MBeanServer: java.util.Set queryNames(javax.management.ObjectName,javax.management.QueryExp)>(r8, null);
        r2 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (javax.management.ObjectName) $r11;
        $r12 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r12.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r3);

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        $r13 = new javax.management.ObjectName;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Users:type=Role,database=");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",*");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r13.<javax.management.ObjectName: void <init>(java.lang.String)>($r17);
        r18 = $r13;
        $r19 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r20 = interfaceinvoke $r19.<javax.management.MBeanServer: java.util.Set queryNames(javax.management.ObjectName,javax.management.QueryExp)>(r18, null);
        r21 = interfaceinvoke r20.<java.util.Set: java.util.Iterator iterator()>();
        goto label3;

     label2:
        $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();
        r23 = (javax.management.ObjectName) $r22;
        $r24 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r24.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r23);

     label3:
        $z1 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label2;

        $r25 = new javax.management.ObjectName;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Users:type=User,database=");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",*");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r25.<javax.management.ObjectName: void <init>(java.lang.String)>($r29);
        r30 = $r25;
        $r31 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r32 = interfaceinvoke $r31.<javax.management.MBeanServer: java.util.Set queryNames(javax.management.ObjectName,javax.management.QueryExp)>(r30, null);
        r33 = interfaceinvoke r32.<java.util.Set: java.util.Iterator iterator()>();
        goto label5;

     label4:
        $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();
        r35 = (javax.management.ObjectName) $r34;
        $r36 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r36.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r35);

     label5:
        $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label4;

        $r37 = new javax.management.ObjectName;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("Users:type=UserDatabase,database=");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r37.<javax.management.ObjectName: void <init>(java.lang.String)>($r40);
        r41 = $r37;
        $r42 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z3 = interfaceinvoke $r42.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r41);
        if $z3 == 0 goto label6;

        $r43 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r43.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r41);

     label6:
        return;
    }

    static void destroyMBean(org.apache.catalina.Valve, org.apache.catalina.Container) throws java.lang.Exception
    {
        org.apache.catalina.Valve r0;
        org.apache.catalina.Container r1;
        java.lang.String r2, r4;
        org.apache.tomcat.util.modeler.ManagedBean r3;
        javax.management.ObjectName r5;
        java.lang.Throwable r6, $r11;
        org.apache.catalina.Contained $r7, $r10;
        org.apache.tomcat.util.modeler.Registry $r8;
        javax.management.MBeanServer $r9, $r12, $r13;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Valve;
        r1 := @parameter1: org.apache.catalina.Container;
        $r7 = (org.apache.catalina.Contained) r0;
        interfaceinvoke $r7.<org.apache.catalina.Contained: void setContainer(org.apache.catalina.Container)>(r1);
        r2 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String createManagedName(java.lang.Object)>(r0);
        $r8 = <org.apache.catalina.mbeans.MBeanUtils: org.apache.tomcat.util.modeler.Registry registry>;
        r3 = virtualinvoke $r8.<org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.String)>(r2);
        if r3 != null goto label0;

        return;

     label0:
        r4 = virtualinvoke r3.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.String getDomain()>();
        if r4 != null goto label1;

        $r9 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        r4 = interfaceinvoke $r9.<javax.management.MBeanServer: java.lang.String getDefaultDomain()>();

     label1:
        r5 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Valve)>(r4, r0);

     label2:
        $r10 = (org.apache.catalina.Contained) r0;
        interfaceinvoke $r10.<org.apache.catalina.Contained: void setContainer(org.apache.catalina.Container)>(null);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;
        r6 = $r11;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r6);

     label5:
        $r12 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r12.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r5);
        if $z0 == 0 goto label6;

        $r13 = <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer mserver>;
        interfaceinvoke $r13.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r5);

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static java.lang.String getDomain(org.apache.catalina.Service)
    {
        org.apache.catalina.Service r0;
        java.lang.String r1;
        org.apache.catalina.Container r2;

        r0 := @parameter0: org.apache.catalina.Service;
        if r0 != null goto label0;

        return null;

     label0:
        r1 = null;
        r2 = interfaceinvoke r0.<org.apache.catalina.Service: org.apache.catalina.Container getContainer()>();
        if r2 == null goto label1;

        r1 = interfaceinvoke r2.<org.apache.catalina.Container: java.lang.String getName()>();

     label1:
        if r1 != null goto label2;

        r1 = interfaceinvoke r0.<org.apache.catalina.Service: java.lang.String getName()>();

     label2:
        return r1;
    }

    public static java.lang.String getDomain(org.apache.catalina.Container)
    {
        org.apache.catalina.Container r0, r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.apache.catalina.Container;
        r1 = null;
        r2 = r0;
        goto label1;

     label0:
        r2 = interfaceinvoke r2.<org.apache.catalina.Container: org.apache.catalina.Container getParent()>();

     label1:
        $z0 = r2 instanceof org.apache.catalina.Engine;
        if $z0 != 0 goto label2;

        if r2 != null goto label0;

     label2:
        if r2 == null goto label3;

        r1 = interfaceinvoke r2.<org.apache.catalina.Container: java.lang.String getName()>();

     label3:
        return r1;
    }

    public static java.lang.String getContainerKeyProperties(org.apache.catalina.Container)
    {
        org.apache.catalina.Container r0, r1;
        java.lang.StringBuilder r2, $r4;
        int i0, i1, $i2;
        org.apache.catalina.util.ContextName r3, $r9;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r6, $r10, $r11, $r14, $r22, $r24;

        r0 := @parameter0: org.apache.catalina.Container;
        r1 = r0;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r2 = $r4;
        i0 = 0;
        goto label6;

     label0:
        $z0 = r1 instanceof org.apache.catalina.Wrapper;
        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",servlet=");
        $r6 = interfaceinvoke r1.<org.apache.catalina.Container: java.lang.String getName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        goto label5;

     label1:
        $z1 = r1 instanceof org.apache.catalina.Context;
        if $z1 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",context=");
        $r9 = new org.apache.catalina.util.ContextName;
        $r10 = interfaceinvoke r1.<org.apache.catalina.Container: java.lang.String getName()>();
        specialinvoke $r9.<org.apache.catalina.util.ContextName: void <init>(java.lang.String,boolean)>($r10, 0);
        r3 = $r9;
        $r11 = virtualinvoke r3.<org.apache.catalina.util.ContextName: java.lang.String getDisplayName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        goto label5;

     label2:
        $z2 = r1 instanceof org.apache.catalina.Host;
        if $z2 == 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",host=");
        $r14 = interfaceinvoke r1.<org.apache.catalina.Container: java.lang.String getName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        goto label5;

     label3:
        if r1 != null goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",container");
        i1 = i0 + 1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=null");
        goto label7;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",container");
        $i2 = i0;
        i0 = i0 + 1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
        $r22 = interfaceinvoke r1.<org.apache.catalina.Container: java.lang.String getName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label5:
        r1 = interfaceinvoke r1.<org.apache.catalina.Container: org.apache.catalina.Container getParent()>();

     label6:
        $z3 = r1 instanceof org.apache.catalina.Engine;
        if $z3 == 0 goto label0;

     label7:
        $r24 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r24;
    }
}
