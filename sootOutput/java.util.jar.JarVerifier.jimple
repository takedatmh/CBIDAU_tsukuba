class java.util.jar.JarVerifier extends java.lang.Object
{
    static final sun.security.util.Debug debug;
    private java.util.Hashtable verifiedSigners;
    private java.util.Hashtable sigFileSigners;
    private java.util.Hashtable sigFileData;
    private java.util.ArrayList pendingBlocks;
    private java.util.ArrayList signerCache;
    private boolean parsingBlockOrSF;
    private boolean parsingMeta;
    private boolean anyToVerify;
    private java.io.ByteArrayOutputStream baos;
    private volatile sun.security.util.ManifestDigester manDig;
    byte[] manifestRawBytes;
    boolean eagerValidation;
    private java.lang.Object csdomain;
    private java.util.List manifestDigests;
    private java.util.Map urlToCodeSourceMap;
    private java.util.Map signerToCodeSource;
    private java.net.URL lastURL;
    private java.util.Map lastURLMap;
    private java.security.CodeSigner[] emptySigner;
    private java.util.Map signerMap;
    private java.util.Enumeration emptyEnumeration;
    private java.util.List jarCodeSigners;

    public void <init>(byte[])
    {
        java.util.jar.JarVerifier r0;
        byte[] r1;
        java.lang.Object $r2;
        java.util.HashMap $r3, $r4;
        java.security.CodeSigner[] $r5;
        java.util.jar.JarVerifier$3 $r6;
        java.util.Hashtable $r7, $r8, $r9;
        java.util.ArrayList $r10, $r12;
        java.io.ByteArrayOutputStream $r11;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.jar.JarVerifier: boolean parsingBlockOrSF> = 0;
        r0.<java.util.jar.JarVerifier: boolean parsingMeta> = 1;
        r0.<java.util.jar.JarVerifier: boolean anyToVerify> = 1;
        r0.<java.util.jar.JarVerifier: byte[] manifestRawBytes> = null;
        $r2 = new java.lang.Object;
        specialinvoke $r2.<java.lang.Object: void <init>()>();
        r0.<java.util.jar.JarVerifier: java.lang.Object csdomain> = $r2;
        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        r0.<java.util.jar.JarVerifier: java.util.Map urlToCodeSourceMap> = $r3;
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        r0.<java.util.jar.JarVerifier: java.util.Map signerToCodeSource> = $r4;
        $r5 = newarray (java.security.CodeSigner)[0];
        r0.<java.util.jar.JarVerifier: java.security.CodeSigner[] emptySigner> = $r5;
        $r6 = new java.util.jar.JarVerifier$3;
        specialinvoke $r6.<java.util.jar.JarVerifier$3: void <init>(java.util.jar.JarVerifier)>(r0);
        r0.<java.util.jar.JarVerifier: java.util.Enumeration emptyEnumeration> = $r6;
        r0.<java.util.jar.JarVerifier: byte[] manifestRawBytes> = r1;
        $r7 = new java.util.Hashtable;
        specialinvoke $r7.<java.util.Hashtable: void <init>()>();
        r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners> = $r7;
        $r8 = new java.util.Hashtable;
        specialinvoke $r8.<java.util.Hashtable: void <init>()>();
        r0.<java.util.jar.JarVerifier: java.util.Hashtable verifiedSigners> = $r8;
        $r9 = new java.util.Hashtable;
        specialinvoke $r9.<java.util.Hashtable: void <init>(int)>(11);
        r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileData> = $r9;
        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r0.<java.util.jar.JarVerifier: java.util.ArrayList pendingBlocks> = $r10;
        $r11 = new java.io.ByteArrayOutputStream;
        specialinvoke $r11.<java.io.ByteArrayOutputStream: void <init>()>();
        r0.<java.util.jar.JarVerifier: java.io.ByteArrayOutputStream baos> = $r11;
        $r12 = new java.util.ArrayList;
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();
        r0.<java.util.jar.JarVerifier: java.util.List manifestDigests> = $r12;
        return;
    }

    public void beginEntry(java.util.jar.JarEntry, sun.security.util.ManifestEntryVerifier) throws java.io.IOException
    {
        java.util.jar.JarVerifier r0;
        java.util.jar.JarEntry r1;
        sun.security.util.ManifestEntryVerifier r2;
        java.lang.StringBuilder $r3, $r8, $r10;
        java.lang.String r4, r5, $r9, $r11;
        sun.security.util.Debug $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Locale $r12;
        java.io.ByteArrayOutputStream $r13;
        java.util.Hashtable $r14, $r16;
        java.lang.Object $r15, $r17;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.util.jar.JarEntry;
        r2 := @parameter1: sun.security.util.ManifestEntryVerifier;
        if r1 != null goto label0;

        return;

     label0:
        $r6 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        if $r6 == null goto label1;

        $r7 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("beginEntry ");
        $r9 = virtualinvoke r1.<java.util.jar.JarEntry: java.lang.String getName()>();
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<sun.security.util.Debug: void println(java.lang.String)>($r11);

     label1:
        r4 = virtualinvoke r1.<java.util.jar.JarEntry: java.lang.String getName()>();
        $z0 = r0.<java.util.jar.JarVerifier: boolean parsingMeta>;
        if $z0 == 0 goto label6;

        $r12 = <java.util.Locale: java.util.Locale ENGLISH>;
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r12);
        $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("META-INF/");
        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("/META-INF/");
        if $z2 == 0 goto label6;

     label2:
        $z3 = virtualinvoke r1.<java.util.jar.JarEntry: boolean isDirectory()>();
        if $z3 == 0 goto label3;

        virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>(null, r1);
        return;

     label3:
        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("META-INF/MANIFEST.MF");
        if $z4 != 0 goto label4;

        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("META-INF/INDEX.LIST");
        if $z5 == 0 goto label5;

     label4:
        return;

     label5:
        $z6 = staticinvoke <sun.security.util.SignatureFileVerifier: boolean isBlockOrSF(java.lang.String)>(r5);
        if $z6 == 0 goto label6;

        r0.<java.util.jar.JarVerifier: boolean parsingBlockOrSF> = 1;
        $r13 = r0.<java.util.jar.JarVerifier: java.io.ByteArrayOutputStream baos>;
        virtualinvoke $r13.<java.io.ByteArrayOutputStream: void reset()>();
        virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>(null, r1);
        return;

     label6:
        $z7 = r0.<java.util.jar.JarVerifier: boolean parsingMeta>;
        if $z7 == 0 goto label7;

        virtualinvoke r0.<java.util.jar.JarVerifier: void doneWithMeta()>();

     label7:
        $z8 = virtualinvoke r1.<java.util.jar.JarEntry: boolean isDirectory()>();
        if $z8 == 0 goto label8;

        virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>(null, r1);
        return;

     label8:
        $z9 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("./");
        if $z9 == 0 goto label9;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(2);

     label9:
        $z10 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z10 == 0 goto label10;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(1);

     label10:
        $r14 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners>;
        $r15 = virtualinvoke $r14.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);
        if $r15 != null goto label11;

        $r16 = r0.<java.util.jar.JarVerifier: java.util.Hashtable verifiedSigners>;
        $r17 = virtualinvoke $r16.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);
        if $r17 == null goto label12;

     label11:
        virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>(r4, r1);
        return;

     label12:
        virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>(null, r1);
        return;
    }

    public void update(int, sun.security.util.ManifestEntryVerifier) throws java.io.IOException
    {
        java.util.jar.JarVerifier r0;
        int i0;
        sun.security.util.ManifestEntryVerifier r1;
        boolean $z0;
        java.io.ByteArrayOutputStream $r2;
        byte $b1;

        r0 := @this: java.util.jar.JarVerifier;
        i0 := @parameter0: int;
        r1 := @parameter1: sun.security.util.ManifestEntryVerifier;
        if i0 == -1 goto label1;

        $z0 = r0.<java.util.jar.JarVerifier: boolean parsingBlockOrSF>;
        if $z0 == 0 goto label0;

        $r2 = r0.<java.util.jar.JarVerifier: java.io.ByteArrayOutputStream baos>;
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(i0);
        goto label2;

     label0:
        $b1 = (byte) i0;
        virtualinvoke r1.<sun.security.util.ManifestEntryVerifier: void update(byte)>($b1);
        goto label2;

     label1:
        specialinvoke r0.<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>(r1);

     label2:
        return;
    }

    public void update(int, byte[], int, int, sun.security.util.ManifestEntryVerifier) throws java.io.IOException
    {
        java.util.jar.JarVerifier r0;
        int i0, i1, i2;
        byte[] r1;
        sun.security.util.ManifestEntryVerifier r2;
        boolean $z0;
        java.io.ByteArrayOutputStream $r3;

        r0 := @this: java.util.jar.JarVerifier;
        i0 := @parameter0: int;
        r1 := @parameter1: byte[];
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        r2 := @parameter4: sun.security.util.ManifestEntryVerifier;
        if i0 == -1 goto label1;

        $z0 = r0.<java.util.jar.JarVerifier: boolean parsingBlockOrSF>;
        if $z0 == 0 goto label0;

        $r3 = r0.<java.util.jar.JarVerifier: java.io.ByteArrayOutputStream baos>;
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i1, i0);
        goto label2;

     label0:
        virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void update(byte[],int,int)>(r1, i1, i0);
        goto label2;

     label1:
        specialinvoke r0.<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>(r2);

     label2:
        return;
    }

    private void processEntry(sun.security.util.ManifestEntryVerifier) throws java.io.IOException
    {
        java.util.jar.JarVerifier r0;
        sun.security.util.ManifestEntryVerifier r1;
        java.util.jar.JarEntry r2, $r16;
        java.lang.String r3, $r17, r19, r29, $r61, $r69, $r77, $r85;
        byte[] r4, $r33, r34, $r37, $r43, $r47, r48;
        java.util.Iterator r5;
        sun.security.util.SignatureFileVerifier r6, $r39, r44;
        java.lang.Throwable r7, $r38;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.security.CodeSigner[] $r8, $r11, $r12;
        java.util.Hashtable $r9, $r10, $r21, $r27, $r45, $r52;
        java.security.cert.Certificate[] $r13;
        sun.security.util.Debug $r14, $r15, $r25, $r26, $r49, $r50, $r56, $r57, $r64, $r65, $r72, $r73, $r80, $r81;
        java.util.Locale $r18;
        int $i0, $i1, $i2;
        java.io.ByteArrayOutputStream $r20, $r42;
        java.util.ArrayList $r23, $r30, $r31, $r40, $r51;
        java.lang.Object $r24, $r46;
        java.util.List $r28, $r53;
        sun.security.util.ManifestDigester $r32, $r35, $r36, $r41;
        java.io.IOException $r54, r55;
        java.lang.StringBuilder $r58, $r59, $r60, $r66, $r67, $r68, $r74, $r75, $r76, $r82, $r83, $r84;
        java.security.SignatureException $r62, r63;
        java.security.NoSuchAlgorithmException $r70, r71;
        java.security.cert.CertificateException $r78, r79;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: sun.security.util.ManifestEntryVerifier;
        $z0 = r0.<java.util.jar.JarVerifier: boolean parsingBlockOrSF>;
        if $z0 != 0 goto label1;

        r2 = virtualinvoke r1.<sun.security.util.ManifestEntryVerifier: java.util.jar.JarEntry getEntry()>();
        if r2 == null goto label0;

        $r8 = r2.<java.util.jar.JarEntry: java.security.CodeSigner[] signers>;
        if $r8 != null goto label0;

        $r9 = r0.<java.util.jar.JarVerifier: java.util.Hashtable verifiedSigners>;
        $r10 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners>;
        $r11 = virtualinvoke r1.<sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>($r9, $r10);
        r2.<java.util.jar.JarEntry: java.security.CodeSigner[] signers> = $r11;
        $r12 = r2.<java.util.jar.JarEntry: java.security.CodeSigner[] signers>;
        $r13 = staticinvoke <java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>($r12);
        r2.<java.util.jar.JarEntry: java.security.cert.Certificate[] certs> = $r13;

     label0:
        goto label28;

     label1:
        r0.<java.util.jar.JarVerifier: boolean parsingBlockOrSF> = 0;
        $r14 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        if $r14 == null goto label2;

        $r15 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        virtualinvoke $r15.<sun.security.util.Debug: void println(java.lang.String)>("processEntry: processing block");

     label2:
        $r16 = virtualinvoke r1.<sun.security.util.ManifestEntryVerifier: java.util.jar.JarEntry getEntry()>();
        $r17 = virtualinvoke $r16.<java.util.jar.JarEntry: java.lang.String getName()>();
        $r18 = <java.util.Locale: java.util.Locale ENGLISH>;
        r19 = virtualinvoke $r17.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r18);
        $z1 = virtualinvoke r19.<java.lang.String: boolean endsWith(java.lang.String)>(".SF");
        if $z1 == 0 goto label7;

        $i0 = virtualinvoke r19.<java.lang.String: int length()>();
        $i1 = $i0 - 3;
        r3 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);
        $r20 = r0.<java.util.jar.JarVerifier: java.io.ByteArrayOutputStream baos>;
        r4 = virtualinvoke $r20.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        $r21 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileData>;
        virtualinvoke $r21.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);
        $r23 = r0.<java.util.jar.JarVerifier: java.util.ArrayList pendingBlocks>;
        r5 = virtualinvoke $r23.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label6;

        $r24 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (sun.security.util.SignatureFileVerifier) $r24;
        $z3 = virtualinvoke r6.<sun.security.util.SignatureFileVerifier: boolean needSignatureFile(java.lang.String)>(r3);
        if $z3 == 0 goto label5;

        $r25 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        if $r25 == null goto label4;

        $r26 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        virtualinvoke $r26.<sun.security.util.Debug: void println(java.lang.String)>("processEntry: processing pending block");

     label4:
        virtualinvoke r6.<sun.security.util.SignatureFileVerifier: void setSignatureFile(byte[])>(r4);
        $r27 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners>;
        $r28 = r0.<java.util.jar.JarVerifier: java.util.List manifestDigests>;
        virtualinvoke r6.<sun.security.util.SignatureFileVerifier: void process(java.util.Hashtable,java.util.List)>($r27, $r28);

     label5:
        goto label3;

     label6:
        return;

     label7:
        $i2 = virtualinvoke r19.<java.lang.String: int lastIndexOf(java.lang.String)>(".");
        r29 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);
        $r30 = r0.<java.util.jar.JarVerifier: java.util.ArrayList signerCache>;
        if $r30 != null goto label8;

        $r31 = new java.util.ArrayList;
        specialinvoke $r31.<java.util.ArrayList: void <init>()>();
        r0.<java.util.jar.JarVerifier: java.util.ArrayList signerCache> = $r31;

     label8:
        $r32 = r0.<java.util.jar.JarVerifier: sun.security.util.ManifestDigester manDig>;
        if $r32 != null goto label15;

        $r33 = r0.<java.util.jar.JarVerifier: byte[] manifestRawBytes>;
        r34 = $r33;
        entermonitor $r33;

     label9:
        $r35 = r0.<java.util.jar.JarVerifier: sun.security.util.ManifestDigester manDig>;
        if $r35 != null goto label10;

        $r36 = new sun.security.util.ManifestDigester;
        $r37 = r0.<java.util.jar.JarVerifier: byte[] manifestRawBytes>;
        specialinvoke $r36.<sun.security.util.ManifestDigester: void <init>(byte[])>($r37);
        r0.<java.util.jar.JarVerifier: sun.security.util.ManifestDigester manDig> = $r36;
        r0.<java.util.jar.JarVerifier: byte[] manifestRawBytes> = null;

     label10:
        exitmonitor r34;

     label11:
        goto label15;

     label12:
        $r38 := @caughtexception;

     label13:
        r7 = $r38;
        exitmonitor r34;

     label14:
        throw r7;

     label15:
        $r39 = new sun.security.util.SignatureFileVerifier;
        $r40 = r0.<java.util.jar.JarVerifier: java.util.ArrayList signerCache>;
        $r41 = r0.<java.util.jar.JarVerifier: sun.security.util.ManifestDigester manDig>;
        $r42 = r0.<java.util.jar.JarVerifier: java.io.ByteArrayOutputStream baos>;
        $r43 = virtualinvoke $r42.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        specialinvoke $r39.<sun.security.util.SignatureFileVerifier: void <init>(java.util.ArrayList,sun.security.util.ManifestDigester,java.lang.String,byte[])>($r40, $r41, r19, $r43);
        r44 = $r39;
        $z4 = virtualinvoke r44.<sun.security.util.SignatureFileVerifier: boolean needSignatureFileBytes()>();
        if $z4 == 0 goto label19;

        $r45 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileData>;
        $r46 = virtualinvoke $r45.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r29);
        $r47 = (byte[]) $r46;
        r48 = (byte[]) $r47;
        if r48 != null goto label18;

        $r49 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        if $r49 == null goto label16;

        $r50 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        virtualinvoke $r50.<sun.security.util.Debug: void println(java.lang.String)>("adding pending block");

     label16:
        $r51 = r0.<java.util.jar.JarVerifier: java.util.ArrayList pendingBlocks>;
        virtualinvoke $r51.<java.util.ArrayList: boolean add(java.lang.Object)>(r44);

     label17:
        return;

     label18:
        virtualinvoke r44.<sun.security.util.SignatureFileVerifier: void setSignatureFile(byte[])>(r48);

     label19:
        $r52 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners>;
        $r53 = r0.<java.util.jar.JarVerifier: java.util.List manifestDigests>;
        virtualinvoke r44.<sun.security.util.SignatureFileVerifier: void process(java.util.Hashtable,java.util.List)>($r52, $r53);

     label20:
        goto label28;

     label21:
        $r54 := @caughtexception;
        r55 = $r54;
        $r56 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        if $r56 == null goto label22;

        $r57 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        $r58 = new java.lang.StringBuilder;
        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processEntry caught: ");
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r55);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r57.<sun.security.util.Debug: void println(java.lang.String)>($r61);

     label22:
        goto label28;

     label23:
        $r62 := @caughtexception;
        r63 = $r62;
        $r64 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        if $r64 == null goto label24;

        $r65 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        $r66 = new java.lang.StringBuilder;
        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processEntry caught: ");
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r63);
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r65.<sun.security.util.Debug: void println(java.lang.String)>($r69);

     label24:
        goto label28;

     label25:
        $r70 := @caughtexception;
        r71 = $r70;
        $r72 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        if $r72 == null goto label26;

        $r73 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        $r74 = new java.lang.StringBuilder;
        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();
        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processEntry caught: ");
        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71);
        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r73.<sun.security.util.Debug: void println(java.lang.String)>($r77);

     label26:
        goto label28;

     label27:
        $r78 := @caughtexception;
        r79 = $r78;
        $r80 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        if $r80 == null goto label28;

        $r81 = <java.util.jar.JarVerifier: sun.security.util.Debug debug>;
        $r82 = new java.lang.StringBuilder;
        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processEntry caught: ");
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r79);
        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r81.<sun.security.util.Debug: void println(java.lang.String)>($r85);

     label28:
        return;

        catch java.lang.Throwable from label9 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.io.IOException from label1 to label6 with label21;
        catch java.io.IOException from label7 to label17 with label21;
        catch java.io.IOException from label18 to label20 with label21;
        catch java.security.SignatureException from label1 to label6 with label23;
        catch java.security.SignatureException from label7 to label17 with label23;
        catch java.security.SignatureException from label18 to label20 with label23;
        catch java.security.NoSuchAlgorithmException from label1 to label6 with label25;
        catch java.security.NoSuchAlgorithmException from label7 to label17 with label25;
        catch java.security.NoSuchAlgorithmException from label18 to label20 with label25;
        catch java.security.cert.CertificateException from label1 to label6 with label27;
        catch java.security.cert.CertificateException from label7 to label17 with label27;
        catch java.security.cert.CertificateException from label18 to label20 with label27;
    }

    public java.security.cert.Certificate[] getCerts(java.lang.String)
    {
        java.util.jar.JarVerifier r0;
        java.lang.String r1;
        java.security.CodeSigner[] $r2;
        java.security.cert.Certificate[] $r3;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSigner[] getCodeSigners(java.lang.String)>(r1);
        $r3 = staticinvoke <java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>($r2);
        return $r3;
    }

    public java.security.cert.Certificate[] getCerts(java.util.jar.JarFile, java.util.jar.JarEntry)
    {
        java.util.jar.JarVerifier r0;
        java.util.jar.JarFile r1;
        java.util.jar.JarEntry r2;
        java.security.CodeSigner[] $r3;
        java.security.cert.Certificate[] $r4;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.util.jar.JarFile;
        r2 := @parameter1: java.util.jar.JarEntry;
        $r3 = virtualinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSigner[] getCodeSigners(java.util.jar.JarFile,java.util.jar.JarEntry)>(r1, r2);
        $r4 = staticinvoke <java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>($r3);
        return $r4;
    }

    public java.security.CodeSigner[] getCodeSigners(java.lang.String)
    {
        java.util.jar.JarVerifier r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        java.lang.Object $r3;
        java.security.CodeSigner[] $r4, $r5;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<java.util.jar.JarVerifier: java.util.Hashtable verifiedSigners>;
        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (java.security.CodeSigner[]) $r3;
        $r5 = (java.security.CodeSigner[]) $r4;
        return $r5;
    }

    public java.security.CodeSigner[] getCodeSigners(java.util.jar.JarFile, java.util.jar.JarEntry)
    {
        java.util.jar.JarVerifier r0;
        java.util.jar.JarFile r1;
        java.util.jar.JarEntry r2;
        java.lang.String r3;
        java.io.InputStream r4;
        byte[] r5;
        int i0, $i1;
        boolean $z0;
        java.util.Hashtable $r6;
        java.lang.Object $r7;
        java.io.IOException $r8, r9;
        java.security.CodeSigner[] $r10;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.util.jar.JarFile;
        r2 := @parameter1: java.util.jar.JarEntry;
        r3 = virtualinvoke r2.<java.util.jar.JarEntry: java.lang.String getName()>();
        $z0 = r0.<java.util.jar.JarVerifier: boolean eagerValidation>;
        if $z0 == 0 goto label5;

        $r6 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners>;
        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);
        if $r7 == null goto label5;

     label0:
        r4 = virtualinvoke r1.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r2);
        r5 = newarray (byte)[1024];
        i0 = lengthof r5;

     label1:
        if i0 == -1 goto label2;

        $i1 = lengthof r5;
        i0 = virtualinvoke r4.<java.io.InputStream: int read(byte[],int,int)>(r5, 0, $i1);
        goto label1;

     label2:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        r9 = $r8;

     label5:
        $r10 = virtualinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSigner[] getCodeSigners(java.lang.String)>(r3);
        return $r10;

        catch java.io.IOException from label0 to label3 with label4;
    }

    private static java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])
    {
        java.security.CodeSigner[] r0;
        java.util.ArrayList r1, $r2;
        int i0, $i1, $i2;
        java.security.CodeSigner $r3;
        java.security.cert.CertPath $r4;
        java.util.List $r5;
        java.security.cert.Certificate[] $r6, $r8, $r9;
        java.lang.Object[] $r7;

        r0 := @parameter0: java.security.CodeSigner[];
        if r0 == null goto label2;

        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r1 = $r2;
        i0 = 0;

     label0:
        $i1 = lengthof r0;
        if i0 >= $i1 goto label1;

        $r3 = r0[i0];
        $r4 = virtualinvoke $r3.<java.security.CodeSigner: java.security.cert.CertPath getSignerCertPath()>();
        $r5 = virtualinvoke $r4.<java.security.cert.CertPath: java.util.List getCertificates()>();
        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r5);
        i0 = i0 + 1;
        goto label0;

     label1:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();
        $r6 = newarray (java.security.cert.Certificate)[$i2];
        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);
        $r8 = (java.security.cert.Certificate[]) $r7;
        $r9 = (java.security.cert.Certificate[]) $r8;
        return $r9;

     label2:
        return null;
    }

    boolean nothingToVerify()
    {
        java.util.jar.JarVerifier r0;
        boolean $z0, $z1;

        r0 := @this: java.util.jar.JarVerifier;
        $z0 = r0.<java.util.jar.JarVerifier: boolean anyToVerify>;
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    void doneWithMeta()
    {
        java.util.jar.JarVerifier r0;
        java.util.Hashtable $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;

        r0 := @this: java.util.jar.JarVerifier;
        r0.<java.util.jar.JarVerifier: boolean parsingMeta> = 0;
        $r2 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners>;
        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        r0.<java.util.jar.JarVerifier: boolean anyToVerify> = $z1;
        r0.<java.util.jar.JarVerifier: java.io.ByteArrayOutputStream baos> = null;
        r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileData> = null;
        r0.<java.util.jar.JarVerifier: java.util.ArrayList pendingBlocks> = null;
        r0.<java.util.jar.JarVerifier: java.util.ArrayList signerCache> = null;
        r0.<java.util.jar.JarVerifier: sun.security.util.ManifestDigester manDig> = null;
        $r3 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners>;
        $z2 = virtualinvoke $r3.<java.util.Hashtable: boolean containsKey(java.lang.Object)>("META-INF/MANIFEST.MF");
        if $z2 == 0 goto label2;

        $r4 = r0.<java.util.jar.JarVerifier: java.util.Hashtable verifiedSigners>;
        $r5 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners>;
        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>("META-INF/MANIFEST.MF");
        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("META-INF/MANIFEST.MF", $r6);

     label2:
        return;
    }

    private synchronized java.security.CodeSource mapSignersToCodeSource(java.net.URL, java.security.CodeSigner[])
    {
        java.util.jar.JarVerifier r0;
        java.net.URL r1, $r5;
        java.security.CodeSigner[] r2;
        java.util.Map r3, $r6, $r9, $r14;
        java.security.CodeSource r4;
        java.lang.Object $r7, $r11, $r13;
        java.util.HashMap $r8;
        java.util.jar.JarVerifier$VerifierCodeSource $r12;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.security.CodeSigner[];
        $r5 = r0.<java.util.jar.JarVerifier: java.net.URL lastURL>;
        if r1 != $r5 goto label0;

        r3 = r0.<java.util.jar.JarVerifier: java.util.Map lastURLMap>;
        goto label2;

     label0:
        $r6 = r0.<java.util.jar.JarVerifier: java.util.Map urlToCodeSourceMap>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (java.util.Map) $r7;
        if r3 != null goto label1;

        $r8 = new java.util.HashMap;
        specialinvoke $r8.<java.util.HashMap: void <init>()>();
        r3 = $r8;
        $r9 = r0.<java.util.jar.JarVerifier: java.util.Map urlToCodeSourceMap>;
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label1:
        r0.<java.util.jar.JarVerifier: java.util.Map lastURLMap> = r3;
        r0.<java.util.jar.JarVerifier: java.net.URL lastURL> = r1;

     label2:
        $r11 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);
        r4 = (java.security.CodeSource) $r11;
        if r4 != null goto label3;

        $r12 = new java.util.jar.JarVerifier$VerifierCodeSource;
        $r13 = r0.<java.util.jar.JarVerifier: java.lang.Object csdomain>;
        specialinvoke $r12.<java.util.jar.JarVerifier$VerifierCodeSource: void <init>(java.lang.Object,java.net.URL,java.security.CodeSigner[])>($r13, r1, r2);
        r4 = $r12;
        $r14 = r0.<java.util.jar.JarVerifier: java.util.Map signerToCodeSource>;
        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4);

     label3:
        return r4;
    }

    private java.security.CodeSource[] mapSignersToCodeSources(java.net.URL, java.util.List, boolean)
    {
        java.util.jar.JarVerifier r0;
        java.net.URL r1;
        java.util.List r2;
        boolean z0;
        java.util.ArrayList $r3, r4;
        int i0, $i1, $i2;
        java.lang.Object $r5;
        java.security.CodeSigner[] $r6, $r7;
        java.security.CodeSource $r8, $r9;
        java.security.CodeSource[] $r10, $r12, $r13;
        java.lang.Object[] $r11;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.util.List;
        z0 := @parameter2: boolean;
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r4 = $r3;
        i0 = 0;

     label0:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();
        if i0 >= $i1 goto label1;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);
        $r6 = (java.security.CodeSigner[]) $r5;
        $r7 = (java.security.CodeSigner[]) $r6;
        $r8 = specialinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSource mapSignersToCodeSource(java.net.URL,java.security.CodeSigner[])>(r1, $r7);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r8);
        i0 = i0 + 1;
        goto label0;

     label1:
        if z0 == 0 goto label2;

        $r9 = specialinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSource mapSignersToCodeSource(java.net.URL,java.security.CodeSigner[])>(r1, null);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r9);

     label2:
        $i2 = interfaceinvoke r4.<java.util.List: int size()>();
        $r10 = newarray (java.security.CodeSource)[$i2];
        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);
        $r12 = (java.security.CodeSource[]) $r11;
        $r13 = (java.security.CodeSource[]) $r12;
        return $r13;
    }

    private java.security.CodeSigner[] findMatchingSigners(java.security.CodeSource)
    {
        java.util.jar.JarVerifier r0;
        java.security.CodeSource r1, $r12;
        java.util.jar.JarVerifier$VerifierCodeSource r2, $r6, $r14;
        java.util.ArrayList r3, $r11;
        int i0, $i1, i2;
        java.security.CodeSigner[] r4, $r7;
        boolean $z0, $z1;
        java.lang.Object $r5, $r13;
        java.net.URL $r8;
        java.util.List $r9;
        java.security.CodeSource[] r10;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.security.CodeSource;
        $z0 = r1 instanceof java.util.jar.JarVerifier$VerifierCodeSource;
        if $z0 == 0 goto label0;

        r2 = (java.util.jar.JarVerifier$VerifierCodeSource) r1;
        $r5 = r0.<java.util.jar.JarVerifier: java.lang.Object csdomain>;
        $z1 = virtualinvoke r2.<java.util.jar.JarVerifier$VerifierCodeSource: boolean isSameDomain(java.lang.Object)>($r5);
        if $z1 == 0 goto label0;

        $r6 = (java.util.jar.JarVerifier$VerifierCodeSource) r1;
        $r7 = staticinvoke <java.util.jar.JarVerifier$VerifierCodeSource: java.security.CodeSigner[] access$000(java.util.jar.JarVerifier$VerifierCodeSource)>($r6);
        return $r7;

     label0:
        $r8 = virtualinvoke r1.<java.security.CodeSource: java.net.URL getLocation()>();
        $r9 = specialinvoke r0.<java.util.jar.JarVerifier: java.util.List getJarCodeSigners()>();
        r10 = specialinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSource[] mapSignersToCodeSources(java.net.URL,java.util.List,boolean)>($r8, $r9, 1);
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r3 = $r11;
        i0 = 0;

     label1:
        $i1 = lengthof r10;
        if i0 >= $i1 goto label2;

        $r12 = r10[i0];
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r12);
        i0 = i0 + 1;
        goto label1;

     label2:
        i2 = interfaceinvoke r3.<java.util.List: int indexOf(java.lang.Object)>(r1);
        if i2 == -1 goto label4;

        $r13 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);
        $r14 = (java.util.jar.JarVerifier$VerifierCodeSource) $r13;
        r4 = staticinvoke <java.util.jar.JarVerifier$VerifierCodeSource: java.security.CodeSigner[] access$000(java.util.jar.JarVerifier$VerifierCodeSource)>($r14);
        if r4 != null goto label3;

        r4 = r0.<java.util.jar.JarVerifier: java.security.CodeSigner[] emptySigner>;

     label3:
        return r4;

     label4:
        return null;
    }

    private synchronized java.util.Map signerMap()
    {
        java.util.jar.JarVerifier r0;
        java.util.HashMap $r1;
        java.util.Map $r2, $r5, $r7, $r9;
        java.util.Hashtable $r3, $r4, $r6, $r8;
        int $i0, $i1, $i2;

        r0 := @this: java.util.jar.JarVerifier;
        $r2 = r0.<java.util.jar.JarVerifier: java.util.Map signerMap>;
        if $r2 != null goto label0;

        $r1 = new java.util.HashMap;
        $r3 = r0.<java.util.jar.JarVerifier: java.util.Hashtable verifiedSigners>;
        $i0 = virtualinvoke $r3.<java.util.Hashtable: int size()>();
        $r4 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners>;
        $i1 = virtualinvoke $r4.<java.util.Hashtable: int size()>();
        $i2 = $i0 + $i1;
        specialinvoke $r1.<java.util.HashMap: void <init>(int)>($i2);
        r0.<java.util.jar.JarVerifier: java.util.Map signerMap> = $r1;
        $r5 = r0.<java.util.jar.JarVerifier: java.util.Map signerMap>;
        $r6 = r0.<java.util.jar.JarVerifier: java.util.Hashtable verifiedSigners>;
        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r6);
        $r7 = r0.<java.util.jar.JarVerifier: java.util.Map signerMap>;
        $r8 = r0.<java.util.jar.JarVerifier: java.util.Hashtable sigFileSigners>;
        interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>($r8);

     label0:
        $r9 = r0.<java.util.jar.JarVerifier: java.util.Map signerMap>;
        return $r9;
    }

    public synchronized java.util.Enumeration entryNames(java.util.jar.JarFile, java.security.CodeSource[])
    {
        java.util.jar.JarVerifier r0;
        java.util.jar.JarFile r1;
        java.security.CodeSource[] r2;
        java.util.Map r3;
        java.util.Iterator r4;
        boolean z0;
        java.util.ArrayList r5, $r8, r10;
        int i0, $i1, $i2, $i3;
        java.security.CodeSigner[] r6;
        java.util.Set $r7;
        java.security.CodeSource $r9;
        java.util.Enumeration $r11, r12;
        java.util.jar.JarVerifier$1 $r13;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.util.jar.JarFile;
        r2 := @parameter1: java.security.CodeSource[];
        r3 = specialinvoke r0.<java.util.jar.JarVerifier: java.util.Map signerMap()>();
        $r7 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();
        z0 = 0;
        $r8 = new java.util.ArrayList;
        $i1 = lengthof r2;
        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);
        r5 = $r8;
        i0 = 0;

     label0:
        $i2 = lengthof r2;
        if i0 >= $i2 goto label4;

        $r9 = r2[i0];
        r6 = specialinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSigner[] findMatchingSigners(java.security.CodeSource)>($r9);
        if r6 == null goto label2;

        $i3 = lengthof r6;
        if $i3 <= 0 goto label1;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6);
        goto label3;

     label1:
        z0 = 1;
        goto label3;

     label2:
        z0 = 1;

     label3:
        i0 = i0 + 1;
        goto label0;

     label4:
        r10 = r5;
        if z0 == 0 goto label5;

        $r11 = specialinvoke r0.<java.util.jar.JarVerifier: java.util.Enumeration unsignedEntryNames(java.util.jar.JarFile)>(r1);
        goto label6;

     label5:
        $r11 = r0.<java.util.jar.JarVerifier: java.util.Enumeration emptyEnumeration>;

     label6:
        r12 = $r11;
        $r13 = new java.util.jar.JarVerifier$1;
        specialinvoke $r13.<java.util.jar.JarVerifier$1: void <init>(java.util.jar.JarVerifier,java.util.Iterator,java.util.List,java.util.Enumeration)>(r0, r4, r10, r12);
        return $r13;
    }

    public java.util.Enumeration entries2(java.util.jar.JarFile, java.util.Enumeration)
    {
        java.util.jar.JarVerifier r0;
        java.util.jar.JarFile r1;
        java.util.Enumeration r2, r5;
        java.util.HashMap $r3, r4;
        java.util.Map $r6;
        java.util.jar.JarVerifier$2 $r7;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.util.jar.JarFile;
        r2 := @parameter1: java.util.Enumeration;
        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        r4 = $r3;
        $r6 = specialinvoke r0.<java.util.jar.JarVerifier: java.util.Map signerMap()>();
        interfaceinvoke r4.<java.util.Map: void putAll(java.util.Map)>($r6);
        r5 = r2;
        $r7 = new java.util.jar.JarVerifier$2;
        specialinvoke $r7.<java.util.jar.JarVerifier$2: void <init>(java.util.jar.JarVerifier,java.util.Enumeration,java.util.jar.JarFile,java.util.Map)>(r0, r5, r1, r4);
        return $r7;
    }

    static boolean isSigningRelated(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $z0 = staticinvoke <sun.security.util.SignatureFileVerifier: boolean isSigningRelated(java.lang.String)>(r0);
        return $z0;
    }

    private java.util.Enumeration unsignedEntryNames(java.util.jar.JarFile)
    {
        java.util.jar.JarVerifier r0;
        java.util.jar.JarFile r1;
        java.util.Map r2;
        java.util.Enumeration r3;
        java.util.jar.JarVerifier$4 $r4;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.util.jar.JarFile;
        r2 = specialinvoke r0.<java.util.jar.JarVerifier: java.util.Map signerMap()>();
        r3 = virtualinvoke r1.<java.util.jar.JarFile: java.util.Enumeration entries()>();
        $r4 = new java.util.jar.JarVerifier$4;
        specialinvoke $r4.<java.util.jar.JarVerifier$4: void <init>(java.util.jar.JarVerifier,java.util.Enumeration,java.util.Map)>(r0, r3, r2);
        return $r4;
    }

    private synchronized java.util.List getJarCodeSigners()
    {
        java.util.jar.JarVerifier r0;
        java.util.HashSet r1, $r3;
        java.util.List $r2, $r7, $r8;
        java.util.Map $r4;
        java.util.Collection $r5;
        java.util.ArrayList $r6;

        r0 := @this: java.util.jar.JarVerifier;
        $r2 = r0.<java.util.jar.JarVerifier: java.util.List jarCodeSigners>;
        if $r2 != null goto label0;

        $r3 = new java.util.HashSet;
        specialinvoke $r3.<java.util.HashSet: void <init>()>();
        r1 = $r3;
        $r4 = specialinvoke r0.<java.util.jar.JarVerifier: java.util.Map signerMap()>();
        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();
        virtualinvoke r1.<java.util.HashSet: boolean addAll(java.util.Collection)>($r5);
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r0.<java.util.jar.JarVerifier: java.util.List jarCodeSigners> = $r6;
        $r7 = r0.<java.util.jar.JarVerifier: java.util.List jarCodeSigners>;
        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>(r1);

     label0:
        $r8 = r0.<java.util.jar.JarVerifier: java.util.List jarCodeSigners>;
        return $r8;
    }

    public synchronized java.security.CodeSource[] getCodeSources(java.util.jar.JarFile, java.net.URL)
    {
        java.util.jar.JarVerifier r0;
        java.util.jar.JarFile r1;
        java.net.URL r2;
        boolean z0;
        java.util.Enumeration $r3;
        java.util.List $r4;
        java.security.CodeSource[] $r5;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.util.jar.JarFile;
        r2 := @parameter1: java.net.URL;
        $r3 = specialinvoke r0.<java.util.jar.JarVerifier: java.util.Enumeration unsignedEntryNames(java.util.jar.JarFile)>(r1);
        z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();
        $r4 = specialinvoke r0.<java.util.jar.JarVerifier: java.util.List getJarCodeSigners()>();
        $r5 = specialinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSource[] mapSignersToCodeSources(java.net.URL,java.util.List,boolean)>(r2, $r4, z0);
        return $r5;
    }

    public java.security.CodeSource getCodeSource(java.net.URL, java.lang.String)
    {
        java.util.jar.JarVerifier r0;
        java.net.URL r1;
        java.lang.String r2;
        java.security.CodeSigner[] r3, $r6;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.security.CodeSource $r7;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        $r4 = specialinvoke r0.<java.util.jar.JarVerifier: java.util.Map signerMap()>();
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);
        $r6 = (java.security.CodeSigner[]) $r5;
        r3 = (java.security.CodeSigner[]) $r6;
        $r7 = specialinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSource mapSignersToCodeSource(java.net.URL,java.security.CodeSigner[])>(r1, r3);
        return $r7;
    }

    public java.security.CodeSource getCodeSource(java.net.URL, java.util.jar.JarFile, java.util.jar.JarEntry)
    {
        java.util.jar.JarVerifier r0;
        java.net.URL r1;
        java.util.jar.JarFile r2;
        java.util.jar.JarEntry r3;
        java.security.CodeSigner[] $r4;
        java.security.CodeSource $r5;

        r0 := @this: java.util.jar.JarVerifier;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.util.jar.JarFile;
        r3 := @parameter2: java.util.jar.JarEntry;
        $r4 = virtualinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSigner[] getCodeSigners(java.util.jar.JarFile,java.util.jar.JarEntry)>(r2, r3);
        $r5 = specialinvoke r0.<java.util.jar.JarVerifier: java.security.CodeSource mapSignersToCodeSource(java.net.URL,java.security.CodeSigner[])>(r1, $r4);
        return $r5;
    }

    public void setEagerValidation(boolean)
    {
        java.util.jar.JarVerifier r0;
        boolean z0;

        r0 := @this: java.util.jar.JarVerifier;
        z0 := @parameter0: boolean;
        r0.<java.util.jar.JarVerifier: boolean eagerValidation> = z0;
        return;
    }

    public synchronized java.util.List getManifestDigests()
    {
        java.util.jar.JarVerifier r0;
        java.util.List $r1, $r2;

        r0 := @this: java.util.jar.JarVerifier;
        $r1 = r0.<java.util.jar.JarVerifier: java.util.List manifestDigests>;
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);
        return $r2;
    }

    static java.security.CodeSource getUnsignedCS(java.net.URL)
    {
        java.net.URL r0;
        java.util.jar.JarVerifier$VerifierCodeSource $r1;
        java.security.cert.Certificate[] $r2;

        r0 := @parameter0: java.net.URL;
        $r1 = new java.util.jar.JarVerifier$VerifierCodeSource;
        $r2 = (java.security.cert.Certificate[]) null;
        specialinvoke $r1.<java.util.jar.JarVerifier$VerifierCodeSource: void <init>(java.lang.Object,java.net.URL,java.security.cert.Certificate[])>(null, r0, $r2);
        return $r1;
    }

    static void <clinit>()
    {
        sun.security.util.Debug $r0;

        $r0 = staticinvoke <sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String)>("jar");
        <java.util.jar.JarVerifier: sun.security.util.Debug debug> = $r0;
        return;
    }
}
