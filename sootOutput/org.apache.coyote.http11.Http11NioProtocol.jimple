public class org.apache.coyote.http11.Http11NioProtocol extends org.apache.coyote.http11.AbstractHttp11JsseProtocol
{
    private static final org.apache.juli.logging.Log log;
    private org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler cHandler;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/coyote/http11/Http11NioProtocol");
        <org.apache.coyote.http11.Http11NioProtocol: org.apache.juli.logging.Log log> = $r0;
        return;
    }

    protected org.apache.juli.logging.Log getLog()
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.juli.logging.Log $r1;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        $r1 = <org.apache.coyote.http11.Http11NioProtocol: org.apache.juli.logging.Log log>;
        return $r1;
    }

    protected org.apache.tomcat.util.net.AbstractEndpoint$Handler getHandler()
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler $r1;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler cHandler>;
        return $r1;
    }

    public void <init>()
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.tomcat.util.net.NioEndpoint $r1, $r4;
        org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler $r2, $r5;
        org.apache.tomcat.util.net.AbstractEndpoint $r3;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        specialinvoke r0.<org.apache.coyote.http11.AbstractHttp11JsseProtocol: void <init>()>();
        $r1 = new org.apache.tomcat.util.net.NioEndpoint;
        specialinvoke $r1.<org.apache.tomcat.util.net.NioEndpoint: void <init>()>();
        r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint> = $r1;
        $r2 = new org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler;
        specialinvoke $r2.<org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler: void <init>(org.apache.coyote.http11.Http11NioProtocol)>(r0);
        r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler cHandler> = $r2;
        $r3 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r4 = (org.apache.tomcat.util.net.NioEndpoint) $r3;
        $r5 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler cHandler>;
        virtualinvoke $r4.<org.apache.tomcat.util.net.NioEndpoint: void setHandler(org.apache.tomcat.util.net.NioEndpoint$Handler)>($r5);
        virtualinvoke r0.<org.apache.coyote.http11.Http11NioProtocol: void setSoLinger(int)>(-1);
        virtualinvoke r0.<org.apache.coyote.http11.Http11NioProtocol: void setSoTimeout(int)>(60000);
        virtualinvoke r0.<org.apache.coyote.http11.Http11NioProtocol: void setTcpNoDelay(boolean)>(1);
        return;
    }

    public org.apache.tomcat.util.net.NioEndpoint getEndpoint()
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        return $r2;
    }

    public void setPollerThreadCount(int)
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: void setPollerThreadCount(int)>(i0);
        return;
    }

    public int getPollerThreadCount()
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;
        int $i0;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        $i0 = virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: int getPollerThreadCount()>();
        return $i0;
    }

    public void setSelectorTimeout(long)
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        long l0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        l0 := @parameter0: long;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: void setSelectorTimeout(long)>(l0);
        return;
    }

    public long getSelectorTimeout()
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;
        long $l0;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        $l0 = virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: long getSelectorTimeout()>();
        return $l0;
    }

    public void setAcceptorThreadPriority(int)
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: void setAcceptorThreadPriority(int)>(i0);
        return;
    }

    public void setPollerThreadPriority(int)
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: void setPollerThreadPriority(int)>(i0);
        return;
    }

    public int getAcceptorThreadPriority()
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;
        int $i0;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        $i0 = virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: int getAcceptorThreadPriority()>();
        return $i0;
    }

    public int getPollerThreadPriority()
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;
        int $i0;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        $i0 = virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: int getThreadPriority()>();
        return $i0;
    }

    public boolean getUseSendfile()
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;
        boolean $z0;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        $z0 = virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: boolean getUseSendfile()>();
        return $z0;
    }

    public void setUseSendfile(boolean)
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        boolean z0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        z0 := @parameter0: boolean;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: void setUseSendfile(boolean)>(z0);
        return;
    }

    public void setOomParachute(int)
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.NioEndpoint $r2;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.NioEndpoint) $r1;
        virtualinvoke $r2.<org.apache.tomcat.util.net.NioEndpoint: void setOomParachute(int)>(i0);
        return;
    }

    protected java.lang.String getNamePrefix()
    {
        org.apache.coyote.http11.Http11NioProtocol r0;

        r0 := @this: org.apache.coyote.http11.Http11NioProtocol;
        return "http-nio";
    }

    static org.apache.juli.logging.Log access$0()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = <org.apache.coyote.http11.Http11NioProtocol: org.apache.juli.logging.Log log>;
        return $r0;
    }

    static org.apache.tomcat.util.net.AbstractEndpoint access$1(org.apache.coyote.http11.Http11NioProtocol)
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @parameter0: org.apache.coyote.http11.Http11NioProtocol;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        return $r1;
    }

    static org.apache.coyote.Adapter access$2(org.apache.coyote.http11.Http11NioProtocol)
    {
        org.apache.coyote.http11.Http11NioProtocol r0;
        org.apache.coyote.Adapter $r1;

        r0 := @parameter0: org.apache.coyote.http11.Http11NioProtocol;
        $r1 = r0.<org.apache.coyote.http11.Http11NioProtocol: org.apache.coyote.Adapter adapter>;
        return $r1;
    }
}
