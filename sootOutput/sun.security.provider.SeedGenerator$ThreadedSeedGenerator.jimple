class sun.security.provider.SeedGenerator$ThreadedSeedGenerator extends sun.security.provider.SeedGenerator implements java.lang.Runnable
{
    private byte[] pool;
    private int start;
    private int end;
    private int count;
    java.lang.ThreadGroup seedGroup;
    private static byte[] rndTab;

    void <init>()
    {
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator r0;
        byte $b0;
        java.security.NoSuchAlgorithmException r2, $r5;
        java.lang.Thread r3;
        byte[] $r4;
        java.lang.InternalError $r6;
        java.lang.ThreadGroup[] r7;
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1 $r8;
        java.lang.Object $r9;
        java.lang.ThreadGroup $r10;

        r0 := @this: sun.security.provider.SeedGenerator$ThreadedSeedGenerator;
        specialinvoke r0.<sun.security.provider.SeedGenerator: void <init>()>();
        $r4 = newarray (byte)[20];
        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte[] pool> = $r4;
        $b0 = 0;
        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int end> = $b0;
        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int start> = $b0;

     label0:
        staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA");

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        $r6 = new java.lang.InternalError;
        specialinvoke $r6.<java.lang.InternalError: void <init>(java.lang.String)>("internal error: SHA-1 not available.");
        throw $r6;

     label3:
        r7 = newarray (java.lang.ThreadGroup)[1];
        $r8 = new sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1;
        specialinvoke $r8.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: void <init>(sun.security.provider.SeedGenerator$ThreadedSeedGenerator,java.lang.ThreadGroup[])>(r0, r7);
        $r9 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r8);
        r3 = (java.lang.Thread) $r9;
        $r10 = r7[0];
        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: java.lang.ThreadGroup seedGroup> = $r10;
        virtualinvoke r3.<java.lang.Thread: void start()>();
        return;

        catch java.security.NoSuchAlgorithmException from label0 to label1 with label2;
    }

    public final void run()
    {
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator r0, r2, r6, r21;
        java.lang.Throwable r3, r7, r8, $r10, $r18, $r26;
        byte b0, $b3, $b10, $b12, $b13;
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread r4, $r11;
        java.lang.Thread r5, $r12;
        int $i1, $i2, i4, i5, i6, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        byte[] $r9, $r19, $r22, $r25;
        java.lang.ThreadGroup $r13;
        java.lang.Exception $r14, r15, $r27, r28;
        java.lang.InternalError $r16, $r29;
        boolean z0;
        long $l7, l8, $l9;

        r0 := @this: sun.security.provider.SeedGenerator$ThreadedSeedGenerator;

     label0:
        r2 = r0;
        entermonitor r0;

     label1:
        $i1 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int count>;
        $r9 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte[] pool>;
        $i2 = lengthof $r9;
        if $i1 < $i2 goto label2;

        virtualinvoke r0.<java.lang.Object: void wait()>();
        goto label1;

     label2:
        exitmonitor r2;

     label3:
        goto label7;

     label4:
        $r10 := @caughtexception;

     label5:
        r3 = $r10;
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        b0 = 0;
        $b3 = 0;
        i4 = $b3;
        i5 = $b3;

     label8:
        if i5 >= 64000 goto label21;

        if i4 >= 6 goto label21;

     label9:
        $r11 = new sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread;
        specialinvoke $r11.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread: void <init>(sun.security.provider.SeedGenerator$1)>(null);
        r4 = $r11;
        $r12 = new java.lang.Thread;
        $r13 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: java.lang.ThreadGroup seedGroup>;
        specialinvoke $r12.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>($r13, r4, "SeedGenerator Thread");
        r5 = $r12;
        virtualinvoke r5.<java.lang.Thread: void start()>();

     label10:
        goto label12;

     label11:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = new java.lang.InternalError;
        specialinvoke $r16.<java.lang.InternalError: void <init>(java.lang.String)>("internal error: SeedGenerator thread creation error.");
        throw $r16;

     label12:
        z0 = 0;
        i6 = 0;
        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        l8 = $l7 + 250L;

     label13:
        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $b10 = $l9 cmp l8;
        if $b10 >= 0 goto label20;

        r6 = r0;
        entermonitor r0;

     label14:
        exitmonitor r6;

     label15:
        goto label19;

     label16:
        $r18 := @caughtexception;

     label17:
        r7 = $r18;
        exitmonitor r6;

     label18:
        throw r7;

     label19:
        i6 = i6 + 1;
        goto label13;

     label20:
        $r19 = <sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte[] rndTab>;
        $i11 = i6 % 255;
        $b12 = $r19[$i11];
        $b13 = b0 ^ $b12;
        b0 = (byte) $b13;
        i5 = i5 + i6;
        i4 = i4 + 1;
        goto label8;

     label21:
        r21 = r0;
        entermonitor r0;

     label22:
        $r22 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte[] pool>;
        $i14 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int end>;
        $r22[$i14] = b0;
        $i15 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int end>;
        $i16 = $i15 + 1;
        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int end> = $i16;
        $i17 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int count>;
        $i18 = $i17 + 1;
        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int count> = $i18;
        $i19 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int end>;
        $r25 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte[] pool>;
        $i20 = lengthof $r25;
        if $i19 < $i20 goto label23;

        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int end> = 0;

     label23:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();
        exitmonitor r21;

     label24:
        goto label28;

     label25:
        $r26 := @caughtexception;

     label26:
        r8 = $r26;
        exitmonitor r21;

     label27:
        throw r8;

     label28:
        goto label0;

     label29:
        $r27 := @caughtexception;
        r28 = $r27;
        $r29 = new java.lang.InternalError;
        specialinvoke $r29.<java.lang.InternalError: void <init>(java.lang.String)>("internal error: SeedGenerator thread generated an exception.");
        throw $r29;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Exception from label9 to label10 with label11;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label22 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Exception from label0 to label29 with label29;
    }

    void getSeedBytes(byte[])
    {
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator r0;
        byte[] r1;
        int i0, $i1;
        byte $b2;

        r0 := @this: sun.security.provider.SeedGenerator$ThreadedSeedGenerator;
        r1 := @parameter0: byte[];
        i0 = 0;

     label0:
        $i1 = lengthof r1;
        if i0 >= $i1 goto label1;

        $b2 = virtualinvoke r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte getSeedByte()>();
        r1[i0] = $b2;
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }

    byte getSeedByte()
    {
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator r0, r1, r10;
        boolean z0;
        java.lang.Throwable r2, r3, $r5, $r16;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Exception $r6, r7;
        java.lang.InternalError $r8;
        byte[] $r11, $r12, $r15;
        byte b3;

        r0 := @this: sun.security.provider.SeedGenerator$ThreadedSeedGenerator;
        z0 = 0;

     label0:
        r1 = r0;
        entermonitor r0;

     label1:
        $i0 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int count>;
        if $i0 > 0 goto label2;

        virtualinvoke r0.<java.lang.Object: void wait()>();
        goto label1;

     label2:
        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        r2 = $r5;
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;
        r7 = $r6;
        $i1 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int count>;
        if $i1 > 0 goto label9;

        $r8 = new java.lang.InternalError;
        specialinvoke $r8.<java.lang.InternalError: void <init>(java.lang.String)>("internal error: SeedGenerator thread generated an exception.");
        throw $r8;

     label9:
        r10 = r0;
        entermonitor r0;

     label10:
        $r11 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte[] pool>;
        $i2 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int start>;
        b3 = $r11[$i2];
        $r12 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte[] pool>;
        $i4 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int start>;
        $r12[$i4] = 0;
        $i5 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int start>;
        $i6 = $i5 + 1;
        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int start> = $i6;
        $i7 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int count>;
        $i8 = $i7 - 1;
        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int count> = $i8;
        $i9 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int start>;
        $r15 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte[] pool>;
        $i10 = lengthof $r15;
        if $i9 != $i10 goto label11;

        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: int start> = 0;

     label11:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();
        exitmonitor r10;

     label12:
        goto label16;

     label13:
        $r16 := @caughtexception;

     label14:
        r3 = $r16;
        exitmonitor r10;

     label15:
        throw r3;

     label16:
        return b3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Exception from label0 to label7 with label8;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[255];
        $r0[0] = 56;
        $r0[1] = 30;
        $r0[2] = -107;
        $r0[3] = -6;
        $r0[4] = -86;
        $r0[5] = 25;
        $r0[6] = -83;
        $r0[7] = 75;
        $r0[8] = -12;
        $r0[9] = -64;
        $r0[10] = 5;
        $r0[11] = -128;
        $r0[12] = 78;
        $r0[13] = 21;
        $r0[14] = 16;
        $r0[15] = 32;
        $r0[16] = 70;
        $r0[17] = -81;
        $r0[18] = 37;
        $r0[19] = -51;
        $r0[20] = -43;
        $r0[21] = -46;
        $r0[22] = -108;
        $r0[23] = 87;
        $r0[24] = 29;
        $r0[25] = 17;
        $r0[26] = -55;
        $r0[27] = 22;
        $r0[28] = -11;
        $r0[29] = -111;
        $r0[30] = -115;
        $r0[31] = 84;
        $r0[32] = -100;
        $r0[33] = 108;
        $r0[34] = -45;
        $r0[35] = -15;
        $r0[36] = -98;
        $r0[37] = 72;
        $r0[38] = -33;
        $r0[39] = -28;
        $r0[40] = 31;
        $r0[41] = -52;
        $r0[42] = -37;
        $r0[43] = -117;
        $r0[44] = -97;
        $r0[45] = -27;
        $r0[46] = 93;
        $r0[47] = -123;
        $r0[48] = 47;
        $r0[49] = 126;
        $r0[50] = -80;
        $r0[51] = -62;
        $r0[52] = -93;
        $r0[53] = -79;
        $r0[54] = 61;
        $r0[55] = -96;
        $r0[56] = -65;
        $r0[57] = -5;
        $r0[58] = -47;
        $r0[59] = -119;
        $r0[60] = 14;
        $r0[61] = 89;
        $r0[62] = 81;
        $r0[63] = -118;
        $r0[64] = -88;
        $r0[65] = 20;
        $r0[66] = 67;
        $r0[67] = -126;
        $r0[68] = -113;
        $r0[69] = 60;
        $r0[70] = -102;
        $r0[71] = 55;
        $r0[72] = 110;
        $r0[73] = 28;
        $r0[74] = 85;
        $r0[75] = 121;
        $r0[76] = 122;
        $r0[77] = -58;
        $r0[78] = 2;
        $r0[79] = 45;
        $r0[80] = 43;
        $r0[81] = 24;
        $r0[82] = -9;
        $r0[83] = 103;
        $r0[84] = -13;
        $r0[85] = 102;
        $r0[86] = -68;
        $r0[87] = -54;
        $r0[88] = -101;
        $r0[89] = -104;
        $r0[90] = 19;
        $r0[91] = 13;
        $r0[92] = -39;
        $r0[93] = -26;
        $r0[94] = -103;
        $r0[95] = 62;
        $r0[96] = 77;
        $r0[97] = 51;
        $r0[98] = 44;
        $r0[99] = 111;
        $r0[100] = 73;
        $r0[101] = 18;
        $r0[102] = -127;
        $r0[103] = -82;
        $r0[104] = 4;
        $r0[105] = -30;
        $r0[106] = 11;
        $r0[107] = -99;
        $r0[108] = -74;
        $r0[109] = 40;
        $r0[110] = -89;
        $r0[111] = 42;
        $r0[112] = -76;
        $r0[113] = -77;
        $r0[114] = -94;
        $r0[115] = -35;
        $r0[116] = -69;
        $r0[117] = 35;
        $r0[118] = 120;
        $r0[119] = 76;
        $r0[120] = 33;
        $r0[121] = -73;
        $r0[122] = -7;
        $r0[123] = 82;
        $r0[124] = -25;
        $r0[125] = -10;
        $r0[126] = 88;
        $r0[127] = 125;
        $r0[128] = -112;
        $r0[129] = 58;
        $r0[130] = 83;
        $r0[131] = 95;
        $r0[132] = 6;
        $r0[133] = 10;
        $r0[134] = 98;
        $r0[135] = -34;
        $r0[136] = 80;
        $r0[137] = 15;
        $r0[138] = -91;
        $r0[139] = 86;
        $r0[140] = -19;
        $r0[141] = 52;
        $r0[142] = -17;
        $r0[143] = 117;
        $r0[144] = 49;
        $r0[145] = -63;
        $r0[146] = 118;
        $r0[147] = -90;
        $r0[148] = 36;
        $r0[149] = -116;
        $r0[150] = -40;
        $r0[151] = -71;
        $r0[152] = 97;
        $r0[153] = -53;
        $r0[154] = -109;
        $r0[155] = -85;
        $r0[156] = 109;
        $r0[157] = -16;
        $r0[158] = -3;
        $r0[159] = 104;
        $r0[160] = -95;
        $r0[161] = 68;
        $r0[162] = 54;
        $r0[163] = 34;
        $r0[164] = 26;
        $r0[165] = 114;
        $r0[166] = -1;
        $r0[167] = 106;
        $r0[168] = -121;
        $r0[169] = 3;
        $r0[170] = 66;
        $r0[171] = 0;
        $r0[172] = 100;
        $r0[173] = -84;
        $r0[174] = 57;
        $r0[175] = 107;
        $r0[176] = 119;
        $r0[177] = -42;
        $r0[178] = 112;
        $r0[179] = -61;
        $r0[180] = 1;
        $r0[181] = 48;
        $r0[182] = 38;
        $r0[183] = 12;
        $r0[184] = -56;
        $r0[185] = -57;
        $r0[186] = 39;
        $r0[187] = -106;
        $r0[188] = -72;
        $r0[189] = 41;
        $r0[190] = 7;
        $r0[191] = 71;
        $r0[192] = -29;
        $r0[193] = -59;
        $r0[194] = -8;
        $r0[195] = -38;
        $r0[196] = 79;
        $r0[197] = -31;
        $r0[198] = 124;
        $r0[199] = -124;
        $r0[200] = 8;
        $r0[201] = 91;
        $r0[202] = 116;
        $r0[203] = 99;
        $r0[204] = -4;
        $r0[205] = 9;
        $r0[206] = -36;
        $r0[207] = -78;
        $r0[208] = 63;
        $r0[209] = -49;
        $r0[210] = -67;
        $r0[211] = -87;
        $r0[212] = 59;
        $r0[213] = 101;
        $r0[214] = -32;
        $r0[215] = 92;
        $r0[216] = 94;
        $r0[217] = 53;
        $r0[218] = -41;
        $r0[219] = 115;
        $r0[220] = -66;
        $r0[221] = -70;
        $r0[222] = -122;
        $r0[223] = 50;
        $r0[224] = -50;
        $r0[225] = -22;
        $r0[226] = -20;
        $r0[227] = -18;
        $r0[228] = -21;
        $r0[229] = 23;
        $r0[230] = -2;
        $r0[231] = -48;
        $r0[232] = 96;
        $r0[233] = 65;
        $r0[234] = -105;
        $r0[235] = 123;
        $r0[236] = -14;
        $r0[237] = -110;
        $r0[238] = 69;
        $r0[239] = -24;
        $r0[240] = -120;
        $r0[241] = -75;
        $r0[242] = 74;
        $r0[243] = 127;
        $r0[244] = -60;
        $r0[245] = 113;
        $r0[246] = 90;
        $r0[247] = -114;
        $r0[248] = 105;
        $r0[249] = 46;
        $r0[250] = 27;
        $r0[251] = -125;
        $r0[252] = -23;
        $r0[253] = -44;
        $r0[254] = 64;
        <sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte[] rndTab> = $r0;
        return;
    }
}
