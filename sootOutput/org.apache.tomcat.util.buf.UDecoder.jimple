public final class org.apache.tomcat.util.buf.UDecoder extends java.lang.Object
{
    private static final org.apache.tomcat.util.res.StringManager sm;
    public static final boolean ALLOW_ENCODED_SLASH;
    private static final java.io.IOException EXCEPTION_EOF;
    private static final java.io.IOException EXCEPTION_NOT_HEX_DIGIT;
    private static final java.io.IOException EXCEPTION_SLASH;

    static void <clinit>()
    {
        org.apache.tomcat.util.res.StringManager $r0;
        java.lang.String $r1;
        boolean $z0;
        org.apache.tomcat.util.buf.UDecoder$DecodeException $r2, $r3, $r4;

        $r0 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.Class)>(class "org/apache/tomcat/util/buf/UDecoder");
        <org.apache.tomcat.util.buf.UDecoder: org.apache.tomcat.util.res.StringManager sm> = $r0;
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH", "false");
        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r1);
        <org.apache.tomcat.util.buf.UDecoder: boolean ALLOW_ENCODED_SLASH> = $z0;
        $r2 = new org.apache.tomcat.util.buf.UDecoder$DecodeException;
        specialinvoke $r2.<org.apache.tomcat.util.buf.UDecoder$DecodeException: void <init>(java.lang.String)>("EOF");
        <org.apache.tomcat.util.buf.UDecoder: java.io.IOException EXCEPTION_EOF> = $r2;
        $r3 = new org.apache.tomcat.util.buf.UDecoder$DecodeException;
        specialinvoke $r3.<org.apache.tomcat.util.buf.UDecoder$DecodeException: void <init>(java.lang.String)>("isHexDigit");
        <org.apache.tomcat.util.buf.UDecoder: java.io.IOException EXCEPTION_NOT_HEX_DIGIT> = $r3;
        $r4 = new org.apache.tomcat.util.buf.UDecoder$DecodeException;
        specialinvoke $r4.<org.apache.tomcat.util.buf.UDecoder$DecodeException: void <init>(java.lang.String)>("noSlash");
        <org.apache.tomcat.util.buf.UDecoder: java.io.IOException EXCEPTION_SLASH> = $r4;
        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.buf.UDecoder r0;

        r0 := @this: org.apache.tomcat.util.buf.UDecoder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void convert(org.apache.tomcat.util.buf.ByteChunk) throws java.io.IOException
    {
        org.apache.tomcat.util.buf.UDecoder r0;
        org.apache.tomcat.util.buf.ByteChunk r1;

        r0 := @this: org.apache.tomcat.util.buf.UDecoder;
        r1 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        virtualinvoke r0.<org.apache.tomcat.util.buf.UDecoder: void convert(org.apache.tomcat.util.buf.ByteChunk,boolean)>(r1, 1);
        return;
    }

    public void convert(org.apache.tomcat.util.buf.ByteChunk, boolean) throws java.io.IOException
    {
        org.apache.tomcat.util.buf.UDecoder r0;
        org.apache.tomcat.util.buf.ByteChunk r1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, i4, i7, $i9, $i13, $i14, $i15;
        byte[] r2;
        byte b5, b6, $b10, $b11, $b12, $b16;
        java.io.IOException $r4, $r5, $r6;

        r0 := @this: org.apache.tomcat.util.buf.UDecoder;
        r1 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        z0 := @parameter1: boolean;
        i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getOffset()>();
        r2 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBytes()>();
        i1 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getEnd()>();
        i2 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: int findByte(byte[],int,int,byte)>(r2, i0, i1, 37);
        i3 = -1;
        if z0 == 0 goto label2;

        if i2 < 0 goto label0;

        $i9 = i2;
        goto label1;

     label0:
        $i9 = i1;

     label1:
        i3 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: int findByte(byte[],int,int,byte)>(r2, i0, $i9, 43);

     label2:
        if i2 >= 0 goto label3;

        if i3 >= 0 goto label3;

        return;

     label3:
        if i3 < 0 goto label4;

        if i3 < i2 goto label5;

     label4:
        if i2 >= 0 goto label6;

     label5:
        i2 = i3;

     label6:
        $z2 = <org.apache.tomcat.util.buf.UDecoder: boolean ALLOW_ENCODED_SLASH>;
        if $z2 != 0 goto label7;

        if z0 == 0 goto label8;

     label7:
        $z3 = 0;
        goto label9;

     label8:
        $z3 = 1;

     label9:
        z1 = $z3;
        i4 = i2;
        goto label18;

     label10:
        $b10 = r2[i4];
        if $b10 != 43 goto label11;

        if z0 == 0 goto label11;

        r2[i2] = 32;
        goto label17;

     label11:
        $b11 = r2[i4];
        if $b11 == 37 goto label12;

        $b12 = r2[i4];
        r2[i2] = $b12;
        goto label17;

     label12:
        $i13 = i4 + 2;
        if $i13 < i1 goto label13;

        $r4 = <org.apache.tomcat.util.buf.UDecoder: java.io.IOException EXCEPTION_EOF>;
        throw $r4;

     label13:
        $i14 = i4 + 1;
        b5 = r2[$i14];
        $i15 = i4 + 2;
        b6 = r2[$i15];
        $z4 = staticinvoke <org.apache.tomcat.util.buf.UDecoder: boolean isHexDigit(int)>(b5);
        if $z4 == 0 goto label14;

        $z5 = staticinvoke <org.apache.tomcat.util.buf.UDecoder: boolean isHexDigit(int)>(b6);
        if $z5 != 0 goto label15;

     label14:
        $r5 = <org.apache.tomcat.util.buf.UDecoder: java.io.IOException EXCEPTION_NOT_HEX_DIGIT>;
        throw $r5;

     label15:
        i4 = i4 + 2;
        i7 = staticinvoke <org.apache.tomcat.util.buf.UDecoder: int x2c(byte,byte)>(b5, b6);
        if z1 == 0 goto label16;

        if i7 != 47 goto label16;

        $r6 = <org.apache.tomcat.util.buf.UDecoder: java.io.IOException EXCEPTION_SLASH>;
        throw $r6;

     label16:
        $b16 = (byte) i7;
        r2[i2] = $b16;

     label17:
        i4 = i4 + 1;
        i2 = i2 + 1;

     label18:
        if i4 < i1 goto label10;

        virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: void setEnd(int)>(i2);
        return;
    }

    public void convert(org.apache.tomcat.util.buf.CharChunk) throws java.io.IOException
    {
        org.apache.tomcat.util.buf.UDecoder r0;
        org.apache.tomcat.util.buf.CharChunk r1;

        r0 := @this: org.apache.tomcat.util.buf.UDecoder;
        r1 := @parameter0: org.apache.tomcat.util.buf.CharChunk;
        virtualinvoke r0.<org.apache.tomcat.util.buf.UDecoder: void convert(org.apache.tomcat.util.buf.CharChunk,boolean)>(r1, 1);
        return;
    }

    public void convert(org.apache.tomcat.util.buf.CharChunk, boolean) throws java.io.IOException
    {
        org.apache.tomcat.util.buf.UDecoder r0;
        org.apache.tomcat.util.buf.CharChunk r1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, i4, i7, $i9, $i13, $i14, $i15;
        char[] r2;
        char c5, c6, $c10, $c11, $c12, $c16;
        java.io.IOException $r4, $r5, $r6;

        r0 := @this: org.apache.tomcat.util.buf.UDecoder;
        r1 := @parameter0: org.apache.tomcat.util.buf.CharChunk;
        z0 := @parameter1: boolean;
        i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.CharChunk: int getOffset()>();
        r2 = virtualinvoke r1.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        i1 = virtualinvoke r1.<org.apache.tomcat.util.buf.CharChunk: int getEnd()>();
        i2 = staticinvoke <org.apache.tomcat.util.buf.CharChunk: int indexOf(char[],int,int,char)>(r2, i0, i1, 37);
        i3 = -1;
        if z0 == 0 goto label2;

        if i2 < 0 goto label0;

        $i9 = i2;
        goto label1;

     label0:
        $i9 = i1;

     label1:
        i3 = staticinvoke <org.apache.tomcat.util.buf.CharChunk: int indexOf(char[],int,int,char)>(r2, i0, $i9, 43);

     label2:
        if i2 >= 0 goto label3;

        if i3 >= 0 goto label3;

        return;

     label3:
        if i3 < 0 goto label4;

        if i3 < i2 goto label5;

     label4:
        if i2 >= 0 goto label6;

     label5:
        i2 = i3;

     label6:
        $z2 = <org.apache.tomcat.util.buf.UDecoder: boolean ALLOW_ENCODED_SLASH>;
        if $z2 != 0 goto label7;

        if z0 == 0 goto label8;

     label7:
        $z3 = 0;
        goto label9;

     label8:
        $z3 = 1;

     label9:
        z1 = $z3;
        i4 = i2;
        goto label18;

     label10:
        $c10 = r2[i4];
        if $c10 != 43 goto label11;

        if z0 == 0 goto label11;

        r2[i2] = 32;
        goto label17;

     label11:
        $c11 = r2[i4];
        if $c11 == 37 goto label12;

        $c12 = r2[i4];
        r2[i2] = $c12;
        goto label17;

     label12:
        $i13 = i4 + 2;
        if $i13 < i1 goto label13;

        $r4 = <org.apache.tomcat.util.buf.UDecoder: java.io.IOException EXCEPTION_EOF>;
        throw $r4;

     label13:
        $i14 = i4 + 1;
        c5 = r2[$i14];
        $i15 = i4 + 2;
        c6 = r2[$i15];
        $z4 = staticinvoke <org.apache.tomcat.util.buf.UDecoder: boolean isHexDigit(int)>(c5);
        if $z4 == 0 goto label14;

        $z5 = staticinvoke <org.apache.tomcat.util.buf.UDecoder: boolean isHexDigit(int)>(c6);
        if $z5 != 0 goto label15;

     label14:
        $r5 = <org.apache.tomcat.util.buf.UDecoder: java.io.IOException EXCEPTION_NOT_HEX_DIGIT>;
        throw $r5;

     label15:
        i4 = i4 + 2;
        i7 = staticinvoke <org.apache.tomcat.util.buf.UDecoder: int x2c(char,char)>(c5, c6);
        if z1 == 0 goto label16;

        if i7 != 47 goto label16;

        $r6 = <org.apache.tomcat.util.buf.UDecoder: java.io.IOException EXCEPTION_SLASH>;
        throw $r6;

     label16:
        $c16 = (char) i7;
        r2[i2] = $c16;

     label17:
        i4 = i4 + 1;
        i2 = i2 + 1;

     label18:
        if i4 < i1 goto label10;

        virtualinvoke r1.<org.apache.tomcat.util.buf.CharChunk: void setEnd(int)>(i2);
        return;
    }

    public void convert(org.apache.tomcat.util.buf.MessageBytes) throws java.io.IOException
    {
        org.apache.tomcat.util.buf.UDecoder r0;
        org.apache.tomcat.util.buf.MessageBytes r1;

        r0 := @this: org.apache.tomcat.util.buf.UDecoder;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        virtualinvoke r0.<org.apache.tomcat.util.buf.UDecoder: void convert(org.apache.tomcat.util.buf.MessageBytes,boolean)>(r1, 1);
        return;
    }

    public void convert(org.apache.tomcat.util.buf.MessageBytes, boolean) throws java.io.IOException
    {
        org.apache.tomcat.util.buf.UDecoder r0;
        org.apache.tomcat.util.buf.MessageBytes r1;
        boolean z0;
        java.lang.String r2, $r5, $r8;
        java.lang.RuntimeException r3, $r6;
        org.apache.tomcat.util.buf.ByteChunk r4;
        int $i0;
        org.apache.tomcat.util.buf.UDecoder$DecodeException $r7;
        org.apache.tomcat.util.buf.CharChunk r9;

        r0 := @this: org.apache.tomcat.util.buf.UDecoder;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        z0 := @parameter1: boolean;
        $i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: int getType()>();
        tableswitch($i0)
        {
            case 1: goto label0;
            case 2: goto label5;
            case 3: goto label4;
            default: goto label6;
        };

     label0:
        r2 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        if r2 != null goto label1;

        return;

     label1:
        $r5 = virtualinvoke r0.<org.apache.tomcat.util.buf.UDecoder: java.lang.String convert(java.lang.String,boolean)>(r2, z0);
        virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: void setString(java.lang.String)>($r5);

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        $r7 = new org.apache.tomcat.util.buf.UDecoder$DecodeException;
        $r8 = virtualinvoke r3.<java.lang.RuntimeException: java.lang.String getMessage()>();
        specialinvoke $r7.<org.apache.tomcat.util.buf.UDecoder$DecodeException: void <init>(java.lang.String)>($r8);
        throw $r7;

     label4:
        r9 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk getCharChunk()>();
        virtualinvoke r0.<org.apache.tomcat.util.buf.UDecoder: void convert(org.apache.tomcat.util.buf.CharChunk,boolean)>(r9, z0);
        goto label6;

     label5:
        r4 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk getByteChunk()>();
        virtualinvoke r0.<org.apache.tomcat.util.buf.UDecoder: void convert(org.apache.tomcat.util.buf.ByteChunk,boolean)>(r4, z0);

     label6:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public final java.lang.String convert(java.lang.String)
    {
        org.apache.tomcat.util.buf.UDecoder r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.tomcat.util.buf.UDecoder;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.buf.UDecoder: java.lang.String convert(java.lang.String,boolean)>(r1, 1);
        return $r2;
    }

    public final java.lang.String convert(java.lang.String, boolean)
    {
        org.apache.tomcat.util.buf.UDecoder r0;
        java.lang.String r1, $r4, $r7, $r10;
        boolean z0, z1, $z2, $z3;
        java.lang.StringBuilder r2, $r3;
        int i0, i1, i2, $i5, $i6, $i7, $i9, $i10, $i11;
        char c3, c4, c8;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.apache.tomcat.util.buf.UDecoder;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        if r1 != null goto label0;

        return null;

     label0:
        if z0 == 0 goto label1;

        $i5 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(43);
        if $i5 >= 0 goto label2;

     label1:
        $i6 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(37);
        if $i6 >= 0 goto label2;

        return r1;

     label2:
        $z2 = <org.apache.tomcat.util.buf.UDecoder: boolean ALLOW_ENCODED_SLASH>;
        if $z2 != 0 goto label3;

        if z0 == 0 goto label4;

     label3:
        $z3 = 0;
        goto label5;

     label4:
        $z3 = 1;

     label5:
        z1 = $z3;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        r2 = $r3;
        i0 = 0;
        i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $i7 = virtualinvoke r1.<java.lang.String: int length()>();
        virtualinvoke r2.<java.lang.StringBuilder: void ensureCapacity(int)>($i7);
        goto label16;

     label6:
        i2 = i0;
        goto label10;

     label7:
        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);
        if c3 != 43 goto label8;

        if z0 != 0 goto label11;

     label8:
        if c3 != 37 goto label9;

        goto label11;

     label9:
        i2 = i2 + 1;

     label10:
        if i2 < i1 goto label7;

     label11:
        if i2 <= i0 goto label12;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i2);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        i0 = i2;

     label12:
        if i0 < i1 goto label13;

        goto label17;

     label13:
        c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
        if c8 != 43 goto label14;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        i0 = i0 + 1;
        goto label16;

     label14:
        if c8 != 37 goto label16;

        $i9 = i0 + 1;
        $i10 = i0 + 3;
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i9, $i10);
        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r7, 16);
        c4 = (char) $i11;
        if z1 == 0 goto label15;

        if c4 != 47 goto label15;

        $r8 = new java.lang.IllegalArgumentException;
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("noSlash");
        throw $r8;

     label15:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
        i0 = i0 + 3;

     label16:
        if i0 < i1 goto label6;

     label17:
        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r10;
    }

    public static java.lang.String URLDecode(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.nio.charset.Charset $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset UTF_8>;
        $r2 = staticinvoke <org.apache.tomcat.util.buf.UDecoder: java.lang.String URLDecode(java.lang.String,java.nio.charset.Charset)>(r0, $r1);
        return $r2;
    }

    public static java.lang.String URLDecode(java.lang.String, java.nio.charset.Charset)
    {
        java.lang.String r0, $r10, $r14, $r16, $r17, $r23, $r24;
        java.nio.charset.Charset r1;
        java.io.ByteArrayOutputStream r2, $r5;
        java.io.OutputStreamWriter r3, $r6;
        char[] r4;
        int i0, i1, $i5, $i6, $i7, $i8, $i9, i10, $i11;
        char c2, c3, c4;
        java.lang.IllegalArgumentException $r7, $r11, $r20;
        org.apache.tomcat.util.res.StringManager $r8, $r12, $r21;
        java.lang.Object[] $r9, $r13, $r22;
        boolean $z0, $z1;
        java.io.IOException $r18, r19;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.nio.charset.Charset;
        if r0 != null goto label0;

        return null;

     label0:
        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(37);
        if $i5 != -1 goto label1;

        return r0;

     label1:
        if r1 != null goto label2;

        r1 = <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset UTF_8>;

     label2:
        $r5 = new java.io.ByteArrayOutputStream;
        $i6 = virtualinvoke r0.<java.lang.String: int length()>();
        $i7 = $i6 * 2;
        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>(int)>($i7);
        r2 = $r5;
        $r6 = new java.io.OutputStreamWriter;
        specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r2, r1);
        r3 = $r6;
        r4 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
        i0 = lengthof r4;
        i1 = 0;

     label3:
        goto label8;

     label4:
        $i8 = i1;
        i1 = i1 + 1;
        c2 = r4[$i8];
        if c2 != 37 goto label7;

        virtualinvoke r3.<java.io.OutputStreamWriter: void flush()>();
        $i9 = i1 + 2;
        if $i9 <= i0 goto label5;

        $r7 = new java.lang.IllegalArgumentException;
        $r8 = <org.apache.tomcat.util.buf.UDecoder: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = newarray (java.lang.Object)[1];
        $r9[0] = r0;
        $r10 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("uDecoder.urlDecode.missingDigit", $r9);
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);
        throw $r7;

     label5:
        i10 = i1 + 1;
        c3 = r4[i1];
        i1 = i10 + 1;
        c4 = r4[i10];
        $z0 = staticinvoke <org.apache.tomcat.util.buf.UDecoder: boolean isHexDigit(int)>(c3);
        if $z0 == 0 goto label6;

        $z1 = staticinvoke <org.apache.tomcat.util.buf.UDecoder: boolean isHexDigit(int)>(c4);
        if $z1 == 0 goto label6;

        $i11 = staticinvoke <org.apache.tomcat.util.buf.UDecoder: int x2c(char,char)>(c3, c4);
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i11);
        goto label8;

     label6:
        $r11 = new java.lang.IllegalArgumentException;
        $r12 = <org.apache.tomcat.util.buf.UDecoder: org.apache.tomcat.util.res.StringManager sm>;
        $r13 = newarray (java.lang.Object)[1];
        $r13[0] = r0;
        $r14 = virtualinvoke $r12.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("uDecoder.urlDecode.missingDigit", $r13);
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);
        throw $r11;

     label7:
        virtualinvoke r3.<java.io.OutputStreamWriter: java.io.Writer append(char)>(c2);

     label8:
        if i1 < i0 goto label4;

        virtualinvoke r3.<java.io.OutputStreamWriter: void flush()>();
        $r16 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
        $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r16);

     label9:
        return $r17;

     label10:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = new java.lang.IllegalArgumentException;
        $r21 = <org.apache.tomcat.util.buf.UDecoder: org.apache.tomcat.util.res.StringManager sm>;
        $r22 = newarray (java.lang.Object)[2];
        $r22[0] = r0;
        $r23 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
        $r22[1] = $r23;
        $r24 = virtualinvoke $r21.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("uDecoder.urlDecode.conversionError", $r22);
        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r24, r19);
        throw $r20;

        catch java.io.IOException from label3 to label9 with label10;
    }

    private static boolean isHexDigit(int)
    {
        int i0;

        i0 := @parameter0: int;
        if i0 < 48 goto label0;

        if i0 <= 57 goto label3;

     label0:
        if i0 < 97 goto label1;

        if i0 <= 102 goto label3;

     label1:
        if i0 < 65 goto label2;

        if i0 <= 70 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    private static int x2c(byte, byte)
    {
        byte b0, b1;
        int i2, $i4, $i5, i6, $i9, $i10, i11;
        short $s3, $s8;

        b0 := @parameter0: byte;
        b1 := @parameter1: byte;
        if b0 < 65 goto label0;

        $s3 = b0 & 223;
        $i4 = $s3 - 65;
        $i5 = $i4 + 10;
        goto label1;

     label0:
        $i5 = b0 - 48;

     label1:
        i2 = $i5;
        i6 = i2 * 16;
        if b1 < 65 goto label2;

        $s8 = b1 & 223;
        $i9 = $s8 - 65;
        $i10 = $i9 + 10;
        goto label3;

     label2:
        $i10 = b1 - 48;

     label3:
        i11 = i6 + $i10;
        return i11;
    }

    private static int x2c(char, char)
    {
        char c0, c1, $c3, $c8;
        int i2, $i4, $i5, i6, $i9, $i10, i11;

        c0 := @parameter0: char;
        c1 := @parameter1: char;
        if c0 < 65 goto label0;

        $c3 = c0 & 223;
        $i4 = $c3 - 65;
        $i5 = $i4 + 10;
        goto label1;

     label0:
        $i5 = c0 - 48;

     label1:
        i2 = $i5;
        i6 = i2 * 16;
        if c1 < 65 goto label2;

        $c8 = c1 & 223;
        $i9 = $c8 - 65;
        $i10 = $i9 + 10;
        goto label3;

     label2:
        $i10 = c1 - 48;

     label3:
        i11 = i6 + $i10;
        return i11;
    }
}
