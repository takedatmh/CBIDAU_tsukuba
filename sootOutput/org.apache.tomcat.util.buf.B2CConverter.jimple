public class org.apache.tomcat.util.buf.B2CConverter extends java.lang.Object
{
    private static final org.apache.tomcat.util.res.StringManager sm;
    private static final java.util.Map encodingToCharsetCache;
    public static final java.nio.charset.Charset ISO_8859_1;
    public static final java.nio.charset.Charset UTF_8;
    protected static final int LEFTOVER_SIZE;
    private final java.nio.charset.CharsetDecoder decoder;
    private java.nio.ByteBuffer bb;
    private java.nio.CharBuffer cb;
    private final java.nio.ByteBuffer leftovers;

    static void <clinit>()
    {
        java.util.Iterator r0, r3;
        java.nio.charset.Charset r1, r20, r21;
        java.util.Locale $r2, $r17;
        java.lang.String r4, $r11, $r12, $r18;
        org.apache.tomcat.util.res.StringManager $r5;
        java.util.HashMap $r6;
        java.util.SortedMap $r7;
        java.util.Collection $r8;
        java.lang.Object $r9, $r15;
        java.util.Map $r10, $r16;
        java.util.Set $r14;
        boolean $z0, $z1;
        java.io.UnsupportedEncodingException $r22, r23;

        $r5 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.tomcat.util.buf");
        <org.apache.tomcat.util.buf.B2CConverter: org.apache.tomcat.util.res.StringManager sm> = $r5;
        $r6 = new java.util.HashMap;
        specialinvoke $r6.<java.util.HashMap: void <init>()>();
        <org.apache.tomcat.util.buf.B2CConverter: java.util.Map encodingToCharsetCache> = $r6;
        $r7 = staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>();
        $r8 = interfaceinvoke $r7.<java.util.SortedMap: java.util.Collection values()>();
        r0 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();
        goto label3;

     label0:
        $r9 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();
        r1 = (java.nio.charset.Charset) $r9;
        $r10 = <org.apache.tomcat.util.buf.B2CConverter: java.util.Map encodingToCharsetCache>;
        $r11 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();
        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);
        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r1);
        $r14 = virtualinvoke r1.<java.nio.charset.Charset: java.util.Set aliases()>();
        r3 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();
        goto label2;

     label1:
        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.lang.String) $r15;
        $r16 = <org.apache.tomcat.util.buf.B2CConverter: java.util.Map encodingToCharsetCache>;
        $r17 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r18 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r17);
        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r1);

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label1;

     label3:
        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label0;

        r20 = null;
        r21 = null;

     label4:
        r20 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharset(java.lang.String)>("ISO-8859-1");
        r21 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharset(java.lang.String)>("UTF-8");

     label5:
        goto label7;

     label6:
        $r22 := @caughtexception;
        r23 = $r22;
        virtualinvoke r23.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label7:
        <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset ISO_8859_1> = r20;
        <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset UTF_8> = r21;
        return;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
    }

    public static java.nio.charset.Charset getCharset(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r2;
        java.util.Locale $r1;
        java.nio.charset.Charset $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;
        r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);
        $r3 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharsetLower(java.lang.String)>(r2);
        return $r3;
    }

    public static java.nio.charset.Charset getCharsetLower(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, $r7;
        java.util.Map $r1;
        java.nio.charset.Charset r2;
        org.apache.tomcat.util.res.StringManager $r3;
        java.lang.Object $r4;
        java.io.UnsupportedEncodingException $r5;
        java.lang.Object[] $r6;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.apache.tomcat.util.buf.B2CConverter: java.util.Map encodingToCharsetCache>;
        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (java.nio.charset.Charset) $r4;
        if r2 != null goto label0;

        $r5 = new java.io.UnsupportedEncodingException;
        $r3 = <org.apache.tomcat.util.buf.B2CConverter: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = newarray (java.lang.Object)[1];
        $r6[0] = r0;
        $r7 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("b2cConverter.unknownEncoding", $r6);
        specialinvoke $r5.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r7);
        throw $r5;

     label0:
        return r2;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        org.apache.tomcat.util.buf.B2CConverter r0;
        java.lang.String r1;

        r0 := @this: org.apache.tomcat.util.buf.B2CConverter;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.apache.tomcat.util.buf.B2CConverter: void <init>(java.lang.String,boolean)>(r1, 0);
        return;
    }

    public void <init>(java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.tomcat.util.buf.B2CConverter r0;
        java.lang.String r1;
        boolean z0, $z1;
        byte[] r2;
        java.nio.charset.CodingErrorAction r3;
        java.nio.charset.Charset r4, $r6;
        java.nio.ByteBuffer $r5;
        org.apache.tomcat.util.buf.Utf8Decoder $r7;
        java.nio.charset.CharsetDecoder $r8, $r9, $r11;

        r0 := @this: org.apache.tomcat.util.buf.B2CConverter;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer bb> = null;
        r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb> = null;
        r2 = newarray (byte)[9];
        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);
        r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers> = $r5;
        if z0 == 0 goto label0;

        r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
        goto label1;

     label0:
        r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

     label1:
        r4 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharset(java.lang.String)>(r1);
        $r6 = <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset UTF_8>;
        $z1 = virtualinvoke r4.<java.nio.charset.Charset: boolean equals(java.lang.Object)>($r6);
        if $z1 == 0 goto label2;

        $r7 = new org.apache.tomcat.util.buf.Utf8Decoder;
        specialinvoke $r7.<org.apache.tomcat.util.buf.Utf8Decoder: void <init>()>();
        r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.CharsetDecoder decoder> = $r7;
        goto label3;

     label2:
        $r8 = virtualinvoke r4.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();
        r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.CharsetDecoder decoder> = $r8;

     label3:
        $r9 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.CharsetDecoder decoder>;
        virtualinvoke $r9.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>(r3);
        $r11 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.CharsetDecoder decoder>;
        virtualinvoke $r11.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>(r3);
        return;
    }

    public void recycle()
    {
        org.apache.tomcat.util.buf.B2CConverter r0;
        java.nio.charset.CharsetDecoder $r1;
        java.nio.ByteBuffer $r3;

        r0 := @this: org.apache.tomcat.util.buf.B2CConverter;
        $r1 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.CharsetDecoder decoder>;
        virtualinvoke $r1.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>();
        $r3 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);
        return;
    }

    public void convert(org.apache.tomcat.util.buf.ByteChunk, org.apache.tomcat.util.buf.CharChunk, boolean) throws java.io.IOException
    {
        org.apache.tomcat.util.buf.B2CConverter r0;
        org.apache.tomcat.util.buf.ByteChunk r1;
        org.apache.tomcat.util.buf.CharChunk r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        null_type n0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.nio.ByteBuffer $r3, $r4, $r8, $r9, $r11, $r25, $r27, $r29, $r32, $r35, $r36, $r38, $r39, $r43, $r45, $r48, $r51, $r53, $r55, $r56, $r59, $r61;
        byte[] $r5, $r6, $r7, $r40, $r57, $r62;
        java.nio.CharBuffer $r13, $r14, $r19, $r20, $r23, $r26, $r33, $r42, $r49, $r52, $r54;
        char[] $r15, $r16, $r17, $r18, $r21;
        byte $b12;
        java.nio.charset.CharsetDecoder $r31, $r47;
        java.nio.charset.CoderResult r34, r50;

        r0 := @this: org.apache.tomcat.util.buf.B2CConverter;
        r1 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        r2 := @parameter1: org.apache.tomcat.util.buf.CharChunk;
        z0 := @parameter2: boolean;
        $r3 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer bb>;
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer bb>;
        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();
        $r6 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBuffer()>();
        if $r5 == $r6 goto label1;

     label0:
        $r7 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBuffer()>();
        $i1 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getStart()>();
        $i2 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r7, $i1, $i2);
        r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer bb> = $r8;
        goto label2;

     label1:
        $r9 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer bb>;
        $i3 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getEnd()>();
        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);
        $r11 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer bb>;
        $i4 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getStart()>();
        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i4);

     label2:
        $r13 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb>;
        if $r13 == null goto label3;

        $r14 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb>;
        $r15 = virtualinvoke $r14.<java.nio.CharBuffer: char[] array()>();
        $r16 = virtualinvoke r2.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        if $r15 == $r16 goto label4;

     label3:
        $r17 = virtualinvoke r2.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        $i5 = virtualinvoke r2.<org.apache.tomcat.util.buf.CharChunk: int getEnd()>();
        $r18 = virtualinvoke r2.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        $i6 = lengthof $r18;
        $i7 = virtualinvoke r2.<org.apache.tomcat.util.buf.CharChunk: int getEnd()>();
        $i8 = $i6 - $i7;
        $r19 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>($r17, $i5, $i8);
        r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb> = $r19;
        goto label5;

     label4:
        $r20 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb>;
        $r21 = virtualinvoke r2.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        $i9 = lengthof $r21;
        virtualinvoke $r20.<java.nio.CharBuffer: java.nio.Buffer limit(int)>($i9);
        $r23 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb>;
        $i10 = virtualinvoke r2.<org.apache.tomcat.util.buf.CharChunk: int getEnd()>();
        virtualinvoke $r23.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i10);

     label5:
        n0 = null;
        $r25 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $i11 = virtualinvoke $r25.<java.nio.ByteBuffer: int position()>();
        if $i11 <= 0 goto label10;

        $r26 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb>;
        i0 = virtualinvoke $r26.<java.nio.CharBuffer: int position()>();

     label6:
        $r27 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $b12 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: byte substractB()>();
        virtualinvoke $r27.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b12);
        $r29 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        virtualinvoke $r29.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
        $r31 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.CharsetDecoder decoder>;
        $r32 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $r33 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb>;
        r34 = virtualinvoke $r31.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>($r32, $r33, z0);
        $r35 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $r36 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $i13 = virtualinvoke $r36.<java.nio.ByteBuffer: int limit()>();
        virtualinvoke $r35.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i13);
        $r38 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $r39 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $r40 = virtualinvoke $r39.<java.nio.ByteBuffer: byte[] array()>();
        $i14 = lengthof $r40;
        virtualinvoke $r38.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i14);
        $z1 = virtualinvoke r34.<java.nio.charset.CoderResult: boolean isUnderflow()>();
        if $z1 == 0 goto label7;

        $r42 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb>;
        $i15 = virtualinvoke $r42.<java.nio.CharBuffer: int position()>();
        if $i15 == i0 goto label6;

     label7:
        $z2 = virtualinvoke r34.<java.nio.charset.CoderResult: boolean isError()>();
        if $z2 != 0 goto label8;

        $z3 = virtualinvoke r34.<java.nio.charset.CoderResult: boolean isMalformed()>();
        if $z3 == 0 goto label9;

     label8:
        virtualinvoke r34.<java.nio.charset.CoderResult: void throwException()>();

     label9:
        $r43 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer bb>;
        $i16 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getStart()>();
        virtualinvoke $r43.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i16);
        $r45 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        virtualinvoke $r45.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

     label10:
        $r47 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.CharsetDecoder decoder>;
        $r48 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer bb>;
        $r49 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb>;
        r50 = virtualinvoke $r47.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>($r48, $r49, z0);
        $z4 = virtualinvoke r50.<java.nio.charset.CoderResult: boolean isError()>();
        if $z4 != 0 goto label11;

        $z5 = virtualinvoke r50.<java.nio.charset.CoderResult: boolean isMalformed()>();
        if $z5 == 0 goto label12;

     label11:
        virtualinvoke r50.<java.nio.charset.CoderResult: void throwException()>();
        goto label14;

     label12:
        $z6 = virtualinvoke r50.<java.nio.charset.CoderResult: boolean isOverflow()>();
        if $z6 == 0 goto label13;

        $r51 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer bb>;
        $i17 = virtualinvoke $r51.<java.nio.ByteBuffer: int position()>();
        virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: void setOffset(int)>($i17);
        $r52 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb>;
        $i18 = virtualinvoke $r52.<java.nio.CharBuffer: int position()>();
        virtualinvoke r2.<org.apache.tomcat.util.buf.CharChunk: void setEnd(int)>($i18);
        goto label14;

     label13:
        $z7 = virtualinvoke r50.<java.nio.charset.CoderResult: boolean isUnderflow()>();
        if $z7 == 0 goto label14;

        $r53 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer bb>;
        $i19 = virtualinvoke $r53.<java.nio.ByteBuffer: int position()>();
        virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: void setOffset(int)>($i19);
        $r54 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.CharBuffer cb>;
        $i20 = virtualinvoke $r54.<java.nio.CharBuffer: int position()>();
        virtualinvoke r2.<org.apache.tomcat.util.buf.CharChunk: void setEnd(int)>($i20);
        $i21 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        if $i21 <= 0 goto label14;

        $r55 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $r56 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $r57 = virtualinvoke $r56.<java.nio.ByteBuffer: byte[] array()>();
        $i22 = lengthof $r57;
        virtualinvoke $r55.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i22);
        $r59 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $i23 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        virtualinvoke $r59.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i23);
        $r61 = r0.<org.apache.tomcat.util.buf.B2CConverter: java.nio.ByteBuffer leftovers>;
        $r62 = virtualinvoke $r61.<java.nio.ByteBuffer: byte[] array()>();
        $i24 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int substract(byte[],int,int)>($r62, 0, $i24);

     label14:
        return;
    }
}
