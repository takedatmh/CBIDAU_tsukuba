public class sun.misc.Hashing extends java.lang.Object
{

    private void <init>()
    {
        sun.misc.Hashing r0;
        java.lang.Error $r1;

        r0 := @this: sun.misc.Hashing;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.lang.Error;
        specialinvoke $r1.<java.lang.Error: void <init>(java.lang.String)>("No instances");
        throw $r1;
    }

    public static int murmur3_32(byte[])
    {
        byte[] r0;
        int $i0, $i1;

        r0 := @parameter0: byte[];
        $i0 = lengthof r0;
        $i1 = staticinvoke <sun.misc.Hashing: int murmur3_32(int,byte[],int,int)>(0, r0, 0, $i0);
        return $i1;
    }

    public static int murmur3_32(int, byte[])
    {
        int i0, $i1, $i2;
        byte[] r0;

        i0 := @parameter0: int;
        r0 := @parameter1: byte[];
        $i1 = lengthof r0;
        $i2 = staticinvoke <sun.misc.Hashing: int murmur3_32(int,byte[],int,int)>(i0, r0, 0, $i1);
        return $i2;
    }

    public static int murmur3_32(int, byte[], int, int)
    {
        int i0, i1, i2, i3, i4, i5, $i8, $i11, $i12, $i13, $i16, $i17, $i18, $i20, i21, i22, i23, i24, i25, $i26, i27, $i28, $i31, $i32, $i35, i38, i39, i40, i41, $i42, i43, i44, $i45, i46, i47, $i48, i49;
        byte[] r0;
        byte $b6, $b9, $b14, $b19, $b29, $b33, $b36;
        short $s7, $s10, $s15, $s30, $s34, $s37;

        i0 := @parameter0: int;
        r0 := @parameter1: byte[];
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        i3 = i0;
        i4 = i2;

     label0:
        if i4 < 4 goto label1;

        $b6 = r0[i1];
        $s7 = $b6 & 255;
        $i8 = i1 + 1;
        $b9 = r0[$i8];
        $s10 = $b9 & 255;
        $i11 = $s10 << 8;
        $i12 = $s7 | $i11;
        $i13 = i1 + 2;
        $b14 = r0[$i13];
        $s15 = $b14 & 255;
        $i16 = $s15 << 16;
        $i17 = $i12 | $i16;
        $i18 = i1 + 3;
        $b19 = r0[$i18];
        $i20 = $b19 << 24;
        i5 = $i17 | $i20;
        i4 = i4 + -4;
        i1 = i1 + 4;
        i21 = i5 * -862048943;
        i22 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(i21, 15);
        i23 = i22 * 461845907;
        i24 = i3 ^ i23;
        i25 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(i24, 13);
        $i26 = i25 * 5;
        i3 = $i26 + -430675100;
        goto label0;

     label1:
        if i4 <= 0 goto label6;

        i27 = 0;
        tableswitch(i4)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $i28 = i1 + 2;
        $b29 = r0[$i28];
        $s30 = $b29 & 255;
        $i31 = $s30 << 16;
        i27 = i27 ^ $i31;

     label3:
        $i32 = i1 + 1;
        $b33 = r0[$i32];
        $s34 = $b33 & 255;
        $i35 = $s34 << 8;
        i27 = i27 ^ $i35;

     label4:
        $b36 = r0[i1];
        $s37 = $b36 & 255;
        i27 = i27 ^ $s37;

     label5:
        i38 = i27 * -862048943;
        i39 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(i38, 15);
        i40 = i39 * 461845907;
        i3 = i3 ^ i40;

     label6:
        i41 = i3 ^ i2;
        $i42 = i41 >>> 16;
        i43 = i41 ^ $i42;
        i44 = i43 * -2048144789;
        $i45 = i44 >>> 13;
        i46 = i44 ^ $i45;
        i47 = i46 * -1028477387;
        $i48 = i47 >>> 16;
        i49 = i47 ^ $i48;
        return i49;
    }

    public static int murmur3_32(char[])
    {
        char[] r0;
        int $i0, $i1;

        r0 := @parameter0: char[];
        $i0 = lengthof r0;
        $i1 = staticinvoke <sun.misc.Hashing: int murmur3_32(int,char[],int,int)>(0, r0, 0, $i0);
        return $i1;
    }

    public static int murmur3_32(int, char[])
    {
        int i0, $i1, $i2;
        char[] r0;

        i0 := @parameter0: int;
        r0 := @parameter1: char[];
        $i1 = lengthof r0;
        $i2 = staticinvoke <sun.misc.Hashing: int murmur3_32(int,char[],int,int)>(i0, r0, 0, $i1);
        return $i2;
    }

    public static int murmur3_32(int, char[], int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, $i11, i12, i13, i14, i15, i16, $i17, i19, i20, i21, $i22, i23, $i24, i25, i26, $i27, i28, i29, $i30, i31;
        char[] r0;
        char $c8, $c9, $c10, c18;

        i0 := @parameter0: int;
        r0 := @parameter1: char[];
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        i3 = i0;
        i4 = i1;
        i5 = i2;

     label0:
        if i5 < 2 goto label1;

        i7 = i4 + 1;
        $c8 = r0[i4];
        $c9 = $c8 & 65535;
        i4 = i7 + 1;
        $c10 = r0[i7];
        $i11 = $c10 << 16;
        i6 = $c9 | $i11;
        i5 = i5 + -2;
        i12 = i6 * -862048943;
        i13 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(i12, 15);
        i14 = i13 * 461845907;
        i15 = i3 ^ i14;
        i16 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(i15, 13);
        $i17 = i16 * 5;
        i3 = $i17 + -430675100;
        goto label0;

     label1:
        if i5 <= 0 goto label2;

        c18 = r0[i4];
        i19 = c18 * -862048943;
        i20 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(i19, 15);
        i21 = i20 * 461845907;
        i3 = i3 ^ i21;

     label2:
        $i22 = i2 * 2;
        i23 = i3 ^ $i22;
        $i24 = i23 >>> 16;
        i25 = i23 ^ $i24;
        i26 = i25 * -2048144789;
        $i27 = i26 >>> 13;
        i28 = i26 ^ $i27;
        i29 = i28 * -1028477387;
        $i30 = i29 >>> 16;
        i31 = i29 ^ $i30;
        return i31;
    }

    public static int murmur3_32(int[])
    {
        int[] r0;
        int $i0, $i1;

        r0 := @parameter0: int[];
        $i0 = lengthof r0;
        $i1 = staticinvoke <sun.misc.Hashing: int murmur3_32(int,int[],int,int)>(0, r0, 0, $i0);
        return $i1;
    }

    public static int murmur3_32(int, int[])
    {
        int i0, $i1, $i2;
        int[] r0;

        i0 := @parameter0: int;
        r0 := @parameter1: int[];
        $i1 = lengthof r0;
        $i2 = staticinvoke <sun.misc.Hashing: int murmur3_32(int,int[],int,int)>(i0, r0, 0, $i1);
        return $i2;
    }

    public static int murmur3_32(int, int[], int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6, $i7, i8, i9, i10, i11, i12, $i13, $i14, i15, $i16, i17, i18, $i19, i20, i21, $i22, i23;
        int[] r0;

        i0 := @parameter0: int;
        r0 := @parameter1: int[];
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        i3 = i0;
        i4 = i1;
        i5 = i1 + i2;

     label0:
        if i4 >= i5 goto label1;

        $i7 = i4;
        i4 = i4 + 1;
        i6 = r0[$i7];
        i8 = i6 * -862048943;
        i9 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(i8, 15);
        i10 = i9 * 461845907;
        i11 = i3 ^ i10;
        i12 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>(i11, 13);
        $i13 = i12 * 5;
        i3 = $i13 + -430675100;
        goto label0;

     label1:
        $i14 = i2 * 4;
        i15 = i3 ^ $i14;
        $i16 = i15 >>> 16;
        i17 = i15 ^ $i16;
        i18 = i17 * -2048144789;
        $i19 = i18 >>> 13;
        i20 = i18 ^ $i19;
        i21 = i20 * -1028477387;
        $i22 = i21 >>> 16;
        i23 = i21 ^ $i22;
        return i23;
    }

    public static int stringHash32(java.lang.String)
    {
        java.lang.String r0;
        sun.misc.JavaLangAccess $r1;
        int $i0;

        r0 := @parameter0: java.lang.String;
        $r1 = <sun.misc.Hashing$Holder: sun.misc.JavaLangAccess LANG_ACCESS>;
        $i0 = interfaceinvoke $r1.<sun.misc.JavaLangAccess: int getStringHash32(java.lang.String)>(r0);
        return $i0;
    }

    public static int randomHashSeed(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        int i0, $i1, $i2, $i3, $i5, $i8, $i11, $i14, $i15;
        int[] r1, $r3;
        java.util.concurrent.ThreadLocalRandom $r2;
        java.lang.Thread $r4, $r5;
        long $l4, $l6, $l7, $l9, $l10, $l12, $l13;
        java.lang.Runtime $r6;

        r0 := @parameter0: java.lang.Object;
        $z0 = staticinvoke <sun.misc.VM: boolean isBooted()>();
        if $z0 == 0 goto label0;

        $r2 = staticinvoke <java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>();
        i0 = virtualinvoke $r2.<java.util.concurrent.ThreadLocalRandom: int nextInt()>();
        goto label1;

     label0:
        $r3 = newarray (int)[7];
        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(class "sun/misc/Hashing");
        $r3[0] = $i1;
        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);
        $r3[1] = $i2;
        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $i3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r4);
        $r3[2] = $i3;
        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $l4 = virtualinvoke $r5.<java.lang.Thread: long getId()>();
        $i5 = (int) $l4;
        $r3[3] = $i5;
        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l7 = $l6 >>> 2;
        $i8 = (int) $l7;
        $r3[4] = $i8;
        $l9 = staticinvoke <java.lang.System: long nanoTime()>();
        $l10 = $l9 >>> 5;
        $i11 = (int) $l10;
        $r3[5] = $i11;
        $r6 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
        $l12 = virtualinvoke $r6.<java.lang.Runtime: long freeMemory()>();
        $l13 = $l12 >>> 4;
        $i14 = (int) $l13;
        $r3[6] = $i14;
        r1 = $r3;
        i0 = staticinvoke <sun.misc.Hashing: int murmur3_32(int[])>(r1);

     label1:
        if 0 == i0 goto label2;

        $i15 = i0;
        goto label3;

     label2:
        $i15 = 1;

     label3:
        return $i15;
    }
}
