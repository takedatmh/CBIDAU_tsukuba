class java.net.DefaultDatagramSocketImplFactory extends java.lang.Object
{
    static java.lang.Class prefixImplClass;

    void <init>()
    {
        java.net.DefaultDatagramSocketImplFactory r0;

        r0 := @this: java.net.DefaultDatagramSocketImplFactory;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static java.net.DatagramSocketImpl createDatagramSocketImpl(boolean) throws java.net.SocketException
    {
        boolean z0;
        java.lang.Class $r0, $r2;
        java.lang.Exception r1, $r5;
        java.lang.Object $r3;
        java.net.DatagramSocketImpl $r4;
        java.net.SocketException $r6;
        java.net.PlainDatagramSocketImpl $r7;

        z0 := @parameter0: boolean;
        $r0 = <java.net.DefaultDatagramSocketImplFactory: java.lang.Class prefixImplClass>;
        if $r0 == null goto label3;

     label0:
        $r2 = <java.net.DefaultDatagramSocketImplFactory: java.lang.Class prefixImplClass>;
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();
        $r4 = (java.net.DatagramSocketImpl) $r3;

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;
        r1 = $r5;
        $r6 = new java.net.SocketException;
        specialinvoke $r6.<java.net.SocketException: void <init>(java.lang.String)>("can\'t instantiate DatagramSocketImpl");
        throw $r6;

     label3:
        $r7 = new java.net.PlainDatagramSocketImpl;
        specialinvoke $r7.<java.net.PlainDatagramSocketImpl: void <init>()>();
        return $r7;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.String r0, $r8, $r16;
        java.lang.Exception r1, $r10;
        sun.security.action.GetPropertyAction $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15;
        java.lang.Class $r9;
        java.io.PrintStream $r11;

        <java.net.DefaultDatagramSocketImplFactory: java.lang.Class prefixImplClass> = null;
        r0 = null;

     label0:
        $r2 = new sun.security.action.GetPropertyAction;
        specialinvoke $r2.<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>("impl.prefix", null);
        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);
        r0 = (java.lang.String) $r3;
        if r0 == null goto label1;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("java.net.");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DatagramSocketImpl");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r8);
        <java.net.DefaultDatagramSocketImplFactory: java.lang.Class prefixImplClass> = $r9;

     label1:
        goto label3;

     label2:
        $r10 := @caughtexception;
        r1 = $r10;
        $r11 = <java.lang.System: java.io.PrintStream err>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find class: java.net.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DatagramSocketImpl: check impl.prefix property");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }
}
