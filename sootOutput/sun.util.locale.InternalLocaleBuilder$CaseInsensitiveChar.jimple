final class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar extends java.lang.Object
{
    private final char ch;
    private final char lowerCh;

    private void <init>(java.lang.String)
    {
        sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar r0;
        java.lang.String r1;
        char $c0;

        r0 := @this: sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar;
        r1 := @parameter0: java.lang.String;
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        specialinvoke r0.<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: void <init>(char)>($c0);
        return;
    }

    void <init>(char)
    {
        sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar r0;
        char c0, $c1, $c2;

        r0 := @this: sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar;
        c0 := @parameter0: char;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: char ch> = c0;
        $c1 = r0.<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: char ch>;
        $c2 = staticinvoke <sun.util.locale.LocaleUtils: char toLower(char)>($c1);
        r0.<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: char lowerCh> = $c2;
        return;
    }

    public char value()
    {
        sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar r0;
        char $c0;

        r0 := @this: sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar;
        $c0 = r0.<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: char ch>;
        return $c0;
    }

    public int hashCode()
    {
        sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar r0;
        char $c0;

        r0 := @this: sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar;
        $c0 = r0.<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: char lowerCh>;
        return $c0;
    }

    public boolean equals(java.lang.Object)
    {
        sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        char $c0, $c1;

        r0 := @this: sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        $c0 = r0.<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: char lowerCh>;
        $r2 = (sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar) r1;
        $c1 = $r2.<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: char lowerCh>;
        if $c0 != $c1 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    void <init>(java.lang.String, sun.util.locale.InternalLocaleBuilder$1)
    {
        sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar r0;
        java.lang.String r1;
        sun.util.locale.InternalLocaleBuilder$1 r2;

        r0 := @this: sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: sun.util.locale.InternalLocaleBuilder$1;
        specialinvoke r0.<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: void <init>(java.lang.String)>(r1);
        return;
    }
}
