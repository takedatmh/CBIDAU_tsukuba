public class javax.crypto.spec.IvParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
{
    private byte[] iv;

    public void <init>(byte[])
    {
        javax.crypto.spec.IvParameterSpec r0;
        byte[] r1;
        int $i0;

        r0 := @this: javax.crypto.spec.IvParameterSpec;
        r1 := @parameter0: byte[];
        $i0 = lengthof r1;
        specialinvoke r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>(r1, 0, $i0);
        return;
    }

    public void <init>(byte[], int, int)
    {
        javax.crypto.spec.IvParameterSpec r0;
        byte[] r1, $r5, $r6;
        int i0, i1, $i2, $i3;
        java.lang.IllegalArgumentException $r2, $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: javax.crypto.spec.IvParameterSpec;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IV missing");
        throw $r2;

     label0:
        $i2 = lengthof r1;
        $i3 = $i2 - i0;
        if $i3 >= i1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IV buffer too short for given offset/length combination");
        throw $r3;

     label1:
        if i1 >= 0 goto label2;

        $r4 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("len is negative");
        throw $r4;

     label2:
        $r5 = newarray (byte)[i1];
        r0.<javax.crypto.spec.IvParameterSpec: byte[] iv> = $r5;
        $r6 = r0.<javax.crypto.spec.IvParameterSpec: byte[] iv>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r6, 0, i1);
        return;
    }

    public byte[] getIV()
    {
        javax.crypto.spec.IvParameterSpec r0;
        byte[] $r1, $r3, $r4;
        java.lang.Object $r2;

        r0 := @this: javax.crypto.spec.IvParameterSpec;
        $r1 = r0.<javax.crypto.spec.IvParameterSpec: byte[] iv>;
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (byte[]) $r2;
        $r4 = (byte[]) $r3;
        return $r4;
    }
}
