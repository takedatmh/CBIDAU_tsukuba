public class org.apache.coyote.http11.InternalNioInputBuffer extends org.apache.coyote.http11.AbstractInputBuffer
{
    private static final org.apache.juli.logging.Log log;
    private static final java.nio.charset.Charset DEFAULT_CHARSET;
    private boolean parsingRequestLine;
    private int parsingRequestLinePhase;
    private boolean parsingRequestLineEol;
    private int parsingRequestLineStart;
    private int parsingRequestLineQPos;
    private org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos;
    private org.apache.tomcat.util.net.NioChannel socket;
    private org.apache.tomcat.util.net.NioSelectorPool pool;
    private final int headerBufferSize;
    private int socketReadBufferSize;
    private org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        java.nio.charset.Charset $r1;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/coyote/http11/InternalNioInputBuffer");
        <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.juli.logging.Log log> = $r0;
        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ISO-8859-1");
        <org.apache.coyote.http11.InternalNioInputBuffer: java.nio.charset.Charset DEFAULT_CHARSET> = $r1;
        return;
    }

    public void <init>(org.apache.coyote.Request, int, boolean, org.apache.tomcat.util.http.parser.HttpParser)
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        org.apache.coyote.Request r1;
        int i0;
        boolean z0;
        org.apache.tomcat.util.http.parser.HttpParser r2;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData $r3, $r9;
        org.apache.tomcat.util.http.MimeHeaders $r4;
        org.apache.coyote.http11.InternalNioInputBuffer$SocketInputBuffer $r5;
        org.apache.coyote.http11.InputFilter[] $r6, $r7;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition $r8;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        r1 := @parameter0: org.apache.coyote.Request;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        r2 := @parameter3: org.apache.tomcat.util.http.parser.HttpParser;
        specialinvoke r0.<org.apache.coyote.http11.AbstractInputBuffer: void <init>()>();
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLineEol> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos> = -1;
        $r3 = new org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData;
        specialinvoke $r3.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: void <init>()>();
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData> = $r3;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.Request request> = r1;
        $r4 = virtualinvoke r1.<org.apache.coyote.Request: org.apache.tomcat.util.http.MimeHeaders getMimeHeaders()>();
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.http.MimeHeaders headers> = $r4;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int headerBufferSize> = i0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean rejectIllegalHeaderName> = z0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.http.parser.HttpParser httpParser> = r2;
        $r5 = new org.apache.coyote.http11.InternalNioInputBuffer$SocketInputBuffer;
        specialinvoke $r5.<org.apache.coyote.http11.InternalNioInputBuffer$SocketInputBuffer: void <init>(org.apache.coyote.http11.InternalNioInputBuffer)>(r0);
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.InputBuffer inputStreamInputBuffer> = $r5;
        $r6 = newarray (org.apache.coyote.http11.InputFilter)[0];
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InputFilter[] filterLibrary> = $r6;
        $r7 = newarray (org.apache.coyote.http11.InputFilter)[0];
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InputFilter[] activeFilters> = $r7;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastActiveFilter> = -1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingHeader> = 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLine> = 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLineEol> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos> = -1;
        $r8 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_START>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r8;
        $r9 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        virtualinvoke $r9.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: void recycle()>();
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean swallowInput> = 1;
        return;
    }

    public void recycle()
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition $r1;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData $r2;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        specialinvoke r0.<org.apache.coyote.http11.AbstractInputBuffer: void recycle()>();
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket> = null;
        $r1 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_START>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLine> = 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLineEol> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos> = -1;
        $r2 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        virtualinvoke $r2.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: void recycle()>();
        return;
    }

    public void nextRequest()
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition $r1;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData $r2;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        specialinvoke r0.<org.apache.coyote.http11.AbstractInputBuffer: void nextRequest()>();
        $r1 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_START>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLine> = 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLineEol> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos> = -1;
        $r2 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        virtualinvoke $r2.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: void recycle()>();
        return;
    }

    public boolean parseRequestLine(boolean) throws java.io.IOException
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        boolean z0, z1, z2, $z3, $z4, $z5, z6, $z7, $z8, z9, $z10, $z11, $z12, $z13, z14, $z15, $z16, $z17, $z18;
        int $i0, $i1, $i2, $i3, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i38, $i39, $i40, $i41, i42, $i43, $i44, $i45, $i47, $i49, $i51, $i53, $i55, $i56, $i57, $i58, $i60, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i85, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i95, $i96, $i98, $i99, $i100, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111;
        org.apache.coyote.Request $r1, $r2, $r17, $r44, $r47, $r50, $r53, $r66, $r69;
        long $l4, $l6;
        byte $b5, b8, $b20, $b22, $b28, $b35, $b37, $b46, $b48, $b50, $b52, $b54, $b59, $b61, $b84, $b86, $b94, $b97, $b101;
        byte[] $r3, $r10, $r15, $r16, $r19, $r20, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r34, $r39, $r46, $r49, $r52, $r55, $r56, $r57, $r59, $r60, $r61, $r68;
        org.apache.juli.logging.Log $r6, $r7;
        java.lang.StringBuilder $r8, $r12, $r13, $r72, $r73;
        java.lang.String $r9, $r14, $r23, $r37, $r42, $r64, $r74;
        java.nio.charset.Charset $r11;
        org.apache.tomcat.util.buf.MessageBytes $r18, $r45, $r48, $r51, $r54, $r67, $r70;
        java.lang.IllegalArgumentException $r21, $r35, $r40, $r62;
        org.apache.tomcat.util.res.StringManager $r22, $r36, $r41, $r63;
        org.apache.tomcat.util.http.parser.HttpParser $r33, $r38;
        java.lang.IllegalStateException $r71;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        z0 := @parameter0: boolean;
        $z3 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLine>;
        if $z3 != 0 goto label0;

        return 1;

     label0:
        $i1 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase>;
        if $i1 != 0 goto label5;

        z1 = 0;

     label1:
        $i2 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i3 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i2 < $i3 goto label3;

        if z0 == 0 goto label2;

        return 0;

     label2:
        $z4 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z4 != 0 goto label3;

        return 0;

     label3:
        $r1 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.Request request>;
        $l4 = virtualinvoke $r1.<org.apache.coyote.Request: long getStartTime()>();
        $b5 = $l4 cmp 0L;
        if $b5 >= 0 goto label4;

        $r2 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.Request request>;
        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        virtualinvoke $r2.<org.apache.coyote.Request: void setStartTime(long)>($l6);

     label4:
        $r3 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i0 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i7 = $i0 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i7;
        b8 = $r3[$i0];
        if b8 == 13 goto label1;

        if b8 == 10 goto label1;

        $i9 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i10 = $i9 - 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i10;
        $i11 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart> = $i11;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase> = 2;
        $r6 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r6.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label5;

        $r7 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.juli.logging.Log log>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Received [");
        $r9 = new java.lang.String;
        $r10 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i12 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i13 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        $i14 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i15 = $i13 - $i14;
        $r11 = <org.apache.coyote.http11.InternalNioInputBuffer: java.nio.charset.Charset DEFAULT_CHARSET>;
        specialinvoke $r9.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r10, $i12, $i15, $r11);
        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r14);

     label5:
        $i16 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase>;
        if $i16 != 2 goto label12;

        z6 = 0;
        goto label11;

     label6:
        $i17 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i18 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i17 < $i18 goto label7;

        $z7 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z7 != 0 goto label7;

        return 0;

     label7:
        $r15 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i19 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b20 = $r15[$i19];
        if $b20 == 32 goto label8;

        $r16 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i21 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b22 = $r16[$i21];
        if $b22 != 9 goto label9;

     label8:
        z6 = 1;
        $r17 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.Request request>;
        $r18 = virtualinvoke $r17.<org.apache.coyote.Request: org.apache.tomcat.util.buf.MessageBytes method()>();
        $r19 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i23 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i24 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i25 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i26 = $i24 - $i25;
        virtualinvoke $r18.<org.apache.tomcat.util.buf.MessageBytes: void setBytes(byte[],int,int)>($r19, $i23, $i26);
        goto label10;

     label9:
        $r20 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i27 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b28 = $r20[$i27];
        $z8 = staticinvoke <org.apache.tomcat.util.http.parser.HttpParser: boolean isToken(int)>($b28);
        if $z8 != 0 goto label10;

        $r21 = new java.lang.IllegalArgumentException;
        $r22 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r23 = virtualinvoke $r22.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("iib.invalidmethod");
        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);
        throw $r21;

     label10:
        $i29 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i30 = $i29 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i30;

     label11:
        if z6 == 0 goto label6;

        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase> = 3;

     label12:
        $i31 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase>;
        if $i31 != 3 goto label18;

        z9 = 1;
        goto label17;

     label13:
        $i32 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i33 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i32 < $i33 goto label14;

        $z10 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z10 != 0 goto label14;

        return 0;

     label14:
        $r25 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i34 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b35 = $r25[$i34];
        if $b35 == 32 goto label15;

        $r26 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i36 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b37 = $r26[$i36];
        if $b37 != 9 goto label16;

     label15:
        $i38 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i39 = $i38 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i39;
        goto label17;

     label16:
        z9 = 0;

     label17:
        if z9 != 0 goto label13;

        $i40 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart> = $i40;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase> = 4;

     label18:
        $i41 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase>;
        if $i41 != 4 goto label31;

        i42 = 0;
        z2 = 0;
        goto label28;

     label19:
        $i43 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i44 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i43 < $i44 goto label20;

        $z11 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z11 != 0 goto label20;

        return 0;

     label20:
        $r28 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i45 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b46 = $r28[$i45];
        if $b46 == 32 goto label21;

        $r29 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i47 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b48 = $r29[$i47];
        if $b48 != 9 goto label22;

     label21:
        z2 = 1;
        i42 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        goto label27;

     label22:
        $r30 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i49 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b50 = $r30[$i49];
        if $b50 == 13 goto label23;

        $r31 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i51 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b52 = $r31[$i51];
        if $b52 != 10 goto label24;

     label23:
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLineEol> = 1;
        z2 = 1;
        i42 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        goto label27;

     label24:
        $r32 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i53 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b54 = $r32[$i53];
        if $b54 != 63 goto label25;

        $i55 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos>;
        if $i55 != -1 goto label25;

        $i56 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos> = $i56;
        goto label27;

     label25:
        $i57 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos>;
        if $i57 == -1 goto label26;

        $r33 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.http.parser.HttpParser httpParser>;
        $r34 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i58 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b59 = $r34[$i58];
        $z12 = virtualinvoke $r33.<org.apache.tomcat.util.http.parser.HttpParser: boolean isQueryRelaxed(int)>($b59);
        if $z12 != 0 goto label26;

        $r35 = new java.lang.IllegalArgumentException;
        $r36 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r37 = virtualinvoke $r36.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("iib.invalidRequestTarget");
        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r37);
        throw $r35;

     label26:
        $r38 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.http.parser.HttpParser httpParser>;
        $r39 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i60 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b61 = $r39[$i60];
        $z13 = virtualinvoke $r38.<org.apache.tomcat.util.http.parser.HttpParser: boolean isNotRequestTargetRelaxed(int)>($b61);
        if $z13 == 0 goto label27;

        $r40 = new java.lang.IllegalArgumentException;
        $r41 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r42 = virtualinvoke $r41.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("iib.invalidRequestTarget");
        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);
        throw $r40;

     label27:
        $i62 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i63 = $i62 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i63;

     label28:
        if z2 == 0 goto label19;

        $r44 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.Request request>;
        $r45 = virtualinvoke $r44.<org.apache.coyote.Request: org.apache.tomcat.util.buf.MessageBytes unparsedURI()>();
        $r46 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i64 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i65 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i66 = i42 - $i65;
        virtualinvoke $r45.<org.apache.tomcat.util.buf.MessageBytes: void setBytes(byte[],int,int)>($r46, $i64, $i66);
        $i67 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos>;
        if $i67 < 0 goto label29;

        $r47 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.Request request>;
        $r48 = virtualinvoke $r47.<org.apache.coyote.Request: org.apache.tomcat.util.buf.MessageBytes queryString()>();
        $r49 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i68 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos>;
        $i69 = $i68 + 1;
        $i70 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos>;
        $i71 = i42 - $i70;
        $i72 = $i71 - 1;
        virtualinvoke $r48.<org.apache.tomcat.util.buf.MessageBytes: void setBytes(byte[],int,int)>($r49, $i69, $i72);
        $r50 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.Request request>;
        $r51 = virtualinvoke $r50.<org.apache.coyote.Request: org.apache.tomcat.util.buf.MessageBytes requestURI()>();
        $r52 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i73 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i74 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineQPos>;
        $i75 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i76 = $i74 - $i75;
        virtualinvoke $r51.<org.apache.tomcat.util.buf.MessageBytes: void setBytes(byte[],int,int)>($r52, $i73, $i76);
        goto label30;

     label29:
        $r53 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.Request request>;
        $r54 = virtualinvoke $r53.<org.apache.coyote.Request: org.apache.tomcat.util.buf.MessageBytes requestURI()>();
        $r55 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i77 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i78 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i79 = i42 - $i78;
        virtualinvoke $r54.<org.apache.tomcat.util.buf.MessageBytes: void setBytes(byte[],int,int)>($r55, $i77, $i79);

     label30:
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase> = 5;

     label31:
        $i80 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase>;
        if $i80 != 5 goto label37;

        z14 = 1;
        goto label36;

     label32:
        $i81 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i82 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i81 < $i82 goto label33;

        $z15 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z15 != 0 goto label33;

        return 0;

     label33:
        $r56 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i83 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b84 = $r56[$i83];
        if $b84 == 32 goto label34;

        $r57 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i85 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b86 = $r57[$i85];
        if $b86 != 9 goto label35;

     label34:
        $i87 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i88 = $i87 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i88;
        goto label36;

     label35:
        z14 = 0;

     label36:
        if z14 != 0 goto label32;

        $i89 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart> = $i89;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase> = 6;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int end> = 0;

     label37:
        $i90 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase>;
        if $i90 != 6 goto label47;

        goto label44;

     label38:
        $i91 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i92 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i91 < $i92 goto label39;

        $z16 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z16 != 0 goto label39;

        return 0;

     label39:
        $r59 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i93 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b94 = $r59[$i93];
        if $b94 != 13 goto label40;

        $i95 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int end> = $i95;
        goto label43;

     label40:
        $r60 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i96 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b97 = $r60[$i96];
        if $b97 != 10 goto label42;

        $i98 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int end>;
        if $i98 != 0 goto label41;

        $i99 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int end> = $i99;

     label41:
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLineEol> = 1;
        goto label43;

     label42:
        $r61 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i100 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b101 = $r61[$i100];
        $z17 = staticinvoke <org.apache.tomcat.util.http.parser.HttpParser: boolean isHttpProtocol(int)>($b101);
        if $z17 != 0 goto label43;

        $r62 = new java.lang.IllegalArgumentException;
        $r63 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r64 = virtualinvoke $r63.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("iib.invalidHttpProtocol");
        specialinvoke $r62.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r64);
        throw $r62;

     label43:
        $i102 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i103 = $i102 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i103;

     label44:
        $z18 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLineEol>;
        if $z18 == 0 goto label38;

        $i104 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int end>;
        $i105 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i106 = $i104 - $i105;
        if $i106 <= 0 goto label45;

        $r66 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.Request request>;
        $r67 = virtualinvoke $r66.<org.apache.coyote.Request: org.apache.tomcat.util.buf.MessageBytes protocol()>();
        $r68 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i107 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i108 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int end>;
        $i109 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart>;
        $i110 = $i108 - $i109;
        virtualinvoke $r67.<org.apache.tomcat.util.buf.MessageBytes: void setBytes(byte[],int,int)>($r68, $i107, $i110);
        goto label46;

     label45:
        $r69 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.Request request>;
        $r70 = virtualinvoke $r69.<org.apache.coyote.Request: org.apache.tomcat.util.buf.MessageBytes protocol()>();
        virtualinvoke $r70.<org.apache.tomcat.util.buf.MessageBytes: void setString(java.lang.String)>("");

     label46:
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLine> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingRequestLineEol> = 0;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLineStart> = 0;
        return 1;

     label47:
        $r71 = new java.lang.IllegalStateException;
        $r72 = new java.lang.StringBuilder;
        specialinvoke $r72.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid request line parse phase:");
        $i111 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase>;
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i111);
        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r71.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r74);
        throw $r71;
    }

    private void expand(int)
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        int i0, $i1, $i2, $i3;
        org.apache.tomcat.util.res.StringManager $r1;
        byte[] r2, $r3, $r8, $r14, $r15;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, $r12;
        org.apache.juli.logging.Log $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11;
        java.lang.Exception $r13;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        i0 := @parameter0: int;
        $r3 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i1 = lengthof $r3;
        if i0 <= $i1 goto label1;

        $z0 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingHeader>;
        if $z0 == 0 goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        $r1 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("iib.requestheadertoolarge.error");
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r4;

     label0:
        $r6 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expanding buffer size. Old size: ");
        $r8 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i2 = lengthof $r8;
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new size: ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        $r13 = new java.lang.Exception;
        specialinvoke $r13.<java.lang.Exception: void <init>()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r12, $r13);
        r2 = newarray (byte)[i0];
        $r14 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $r15 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i3 = lengthof $r15;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r2, 0, $i3);
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf> = r2;

     label1:
        return;
    }

    private int readSocket(boolean, boolean) throws java.io.IOException
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        boolean z0, z1, z2;
        java.nio.channels.Selector r1;
        java.io.IOException r2, $r9, $r13;
        java.lang.Throwable r3, $r22;
        org.apache.tomcat.util.net.NioChannel $r4, $r10, $r15, $r18, $r25, $r26, $r29, $r33, $r37;
        org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler $r5, $r16, $r27, $r30, $r34, $r38;
        java.nio.ByteBuffer $r6, $r17, $r28, $r31, $r35, $r39;
        org.apache.tomcat.util.net.NioSelectorPool $r8, $r14, $r21, $r23, $r24;
        java.lang.Object $r11;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r12;
        long $l0;
        int i1, $i2, $i3, $i4, $i5, $i6;
        java.io.EOFException $r19, r20, $r42;
        byte[] $r40;
        org.apache.tomcat.util.res.StringManager $r43;
        java.lang.String $r44;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        z0 := @parameter0: boolean;
        z1 := @parameter1: boolean;
        z2 = 0;
        $r4 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket>;
        $r5 = virtualinvoke $r4.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler getBufHandler()>();
        $r6 = interfaceinvoke $r5.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getReadBuffer()>();
        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer clear()>();
        if z1 == 0 goto label11;

        r1 = null;

     label0:
        $r8 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioSelectorPool pool>;
        r1 = virtualinvoke $r8.<org.apache.tomcat.util.net.NioSelectorPool: java.nio.channels.Selector get()>();

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r2 = $r9;

     label3:
        $r10 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket>;
        $r11 = virtualinvoke $r10.<org.apache.tomcat.util.net.NioChannel: java.lang.Object getAttachment()>();
        r12 = (org.apache.tomcat.util.net.NioEndpoint$KeyAttachment) $r11;
        if r12 != null goto label4;

        $r13 = new java.io.IOException;
        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("Key must be cancelled.");
        throw $r13;

     label4:
        $r14 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioSelectorPool pool>;
        $r15 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket>;
        $r16 = virtualinvoke $r15.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler getBufHandler()>();
        $r17 = interfaceinvoke $r16.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getReadBuffer()>();
        $r18 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket>;
        $l0 = virtualinvoke r12.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: long getTimeout()>();
        i1 = virtualinvoke $r14.<org.apache.tomcat.util.net.NioSelectorPool: int read(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long)>($r17, $r18, r1, $l0);

     label5:
        goto label10;

     label6:
        $r19 := @caughtexception;
        r20 = $r19;
        i1 = -1;

     label7:
        if r1 == null goto label12;

        $r21 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioSelectorPool pool>;
        virtualinvoke $r21.<org.apache.tomcat.util.net.NioSelectorPool: void put(java.nio.channels.Selector)>(r1);
        goto label12;

     label8:
        $r22 := @caughtexception;
        r3 = $r22;
        if r1 == null goto label9;

        $r23 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioSelectorPool pool>;
        virtualinvoke $r23.<org.apache.tomcat.util.net.NioSelectorPool: void put(java.nio.channels.Selector)>(r1);

     label9:
        throw r3;

     label10:
        if r1 == null goto label12;

        $r24 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioSelectorPool pool>;
        virtualinvoke $r24.<org.apache.tomcat.util.net.NioSelectorPool: void put(java.nio.channels.Selector)>(r1);
        goto label12;

     label11:
        $r25 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket>;
        $r26 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket>;
        $r27 = virtualinvoke $r26.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler getBufHandler()>();
        $r28 = interfaceinvoke $r27.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getReadBuffer()>();
        i1 = virtualinvoke $r25.<org.apache.tomcat.util.net.NioChannel: int read(java.nio.ByteBuffer)>($r28);

     label12:
        if i1 <= 0 goto label13;

        $r29 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket>;
        $r30 = virtualinvoke $r29.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler getBufHandler()>();
        $r31 = interfaceinvoke $r30.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getReadBuffer()>();
        virtualinvoke $r31.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
        $r33 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket>;
        $r34 = virtualinvoke $r33.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler getBufHandler()>();
        $r35 = interfaceinvoke $r34.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getReadBuffer()>();
        virtualinvoke $r35.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i1);
        $i2 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i3 = i1 + $i2;
        specialinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: void expand(int)>($i3);
        $r37 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket>;
        $r38 = virtualinvoke $r37.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler getBufHandler()>();
        $r39 = interfaceinvoke $r38.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getReadBuffer()>();
        $r40 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i4 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        virtualinvoke $r39.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r40, $i4, i1);
        $i5 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i6 = $i5 + i1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid> = $i6;
        return i1;

     label13:
        if i1 != -1 goto label14;

        $r42 = new java.io.EOFException;
        $r43 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r44 = virtualinvoke $r43.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("iib.eof.error");
        specialinvoke $r42.<java.io.EOFException: void <init>(java.lang.String)>($r44);
        throw $r42;

     label14:
        return 0;

        catch java.io.IOException from label0 to label1 with label2;
        catch java.io.EOFException from label3 to label5 with label6;
        catch java.lang.Throwable from label3 to label7 with label8;
    }

    public boolean parseHeaders() throws java.io.IOException
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        org.apache.tomcat.util.res.StringManager $r1, $r8;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus r2, r5, $r10, $r11;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.lang.String $r4, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        byte[] $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        $z0 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingHeader>;
        if $z0 != 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        $r1 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("iib.parseheaders.ise.error");
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        r2 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus HAVE_MORE_HEADERS>;

     label1:
        r5 = specialinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus parseHeader()>();
        $i0 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i1 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int headerBufferSize>;
        if $i0 > $i1 goto label2;

        $r6 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i2 = lengthof $r6;
        $i3 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i4 = $i2 - $i3;
        $i5 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int socketReadBufferSize>;
        if $i4 >= $i5 goto label3;

     label2:
        $r7 = new java.lang.IllegalArgumentException;
        $r8 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("iib.requestheadertoolarge.error");
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);
        throw $r7;

     label3:
        $r10 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus HAVE_MORE_HEADERS>;
        if r5 == $r10 goto label1;

        $r11 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus DONE>;
        if r5 != $r11 goto label4;

        r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingHeader> = 0;
        $i6 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int end> = $i6;
        return 1;

     label4:
        return 0;
    }

    private org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus parseHeader() throws java.io.IOException
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i52, $i53, $i54, $i55, $i56, $i57, $i58;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition $r1, $r7, $r8, $r9, $r10, $r12, $r15, $r30, $r31, $r32, $r33, $r35, $r36, $r40, $r41, $r42, $r56, $r59, $r60, $r61, $r65, $r66, $r67, $r68, $r69, $r70, $r71;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus $r2, $r5, $r13, $r27, $r34, $r37, $r43, $r57, $r79;
        byte[] $r3, $r14, $r18, $r28, $r38, $r44, $r45, $r48, $r58, $r62, $r74;
        byte b3, b12, $b25, b31, b37, b51;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData $r11, $r16, $r19, $r20, $r23, $r24, $r25, $r26, $r46, $r47, $r49, $r50, $r51, $r52, $r54, $r55, $r63, $r64, $r72, $r75, $r76, $r77, $r78;
        org.apache.tomcat.util.http.MimeHeaders $r17;
        org.apache.tomcat.util.buf.MessageBytes $r21, $r73;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        z0 = 0;
        goto label3;

     label0:
        $i0 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i1 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i0 < $i1 goto label1;

        $z2 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z2 != 0 goto label1;

        $r1 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_START>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r1;
        $r2 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus NEED_MORE_DATA>;
        return $r2;

     label1:
        $r3 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i2 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        b3 = $r3[$i2];
        if b3 == 13 goto label2;

        if b3 != 10 goto label4;

        $i4 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i5 = $i4 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i5;
        $r5 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus DONE>;
        return $r5;

     label2:
        $i6 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i7 = $i6 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i7;

     label3:
        $r7 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos>;
        $r8 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_START>;
        if $r7 == $r8 goto label0;

     label4:
        $r9 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos>;
        $r10 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_START>;
        if $r9 != $r10 goto label10;

        $r11 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i8 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $r11.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int start> = $i8;
        $r12 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_NAME>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r12;
        goto label10;

     label5:
        $i9 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i10 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i9 < $i10 goto label6;

        $z3 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z3 != 0 goto label6;

        $r13 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus NEED_MORE_DATA>;
        return $r13;

     label6:
        $r14 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i11 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        b12 = $r14[$i11];
        if b12 != 58 goto label7;

        $r15 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_VALUE_START>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r15;
        $r16 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $r17 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.http.MimeHeaders headers>;
        $r18 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $r19 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i13 = $r19.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int start>;
        $i14 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $r20 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i15 = $r20.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int start>;
        $i16 = $i14 - $i15;
        $r21 = virtualinvoke $r17.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.buf.MessageBytes addValue(byte[],int,int)>($r18, $i13, $i16);
        $r16.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: org.apache.tomcat.util.buf.MessageBytes headerValue> = $r21;
        $i17 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i18 = $i17 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i18;
        $r23 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i19 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $r23.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int start> = $i19;
        $r24 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i20 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $r24.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos> = $i20;
        $r25 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i21 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $r25.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int lastSignificantChar> = $i21;
        goto label11;

     label7:
        $z4 = staticinvoke <org.apache.tomcat.util.http.parser.HttpParser: boolean isToken(int)>(b12);
        if $z4 != 0 goto label8;

        $r26 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i22 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $r26.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int lastSignificantChar> = $i22;
        $r27 = specialinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus skipLine()>();
        return $r27;

     label8:
        if b12 < 65 goto label9;

        if b12 > 90 goto label9;

        $r28 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i23 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i24 = b12 - -32;
        $b25 = (byte) $i24;
        $r28[$i23] = $b25;

     label9:
        $i26 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i27 = $i26 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i27;

     label10:
        $r30 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos>;
        $r31 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_NAME>;
        if $r30 == $r31 goto label5;

     label11:
        $r32 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos>;
        $r33 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_SKIPLINE>;
        if $r32 != $r33 goto label28;

        $r34 = specialinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus skipLine()>();
        return $r34;

     label12:
        $r35 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos>;
        $r36 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_VALUE_START>;
        if $r35 != $r36 goto label17;

     label13:
        $i28 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i29 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i28 < $i29 goto label14;

        $z5 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z5 != 0 goto label14;

        $r37 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus NEED_MORE_DATA>;
        return $r37;

     label14:
        $r38 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i30 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        b31 = $r38[$i30];
        if b31 == 32 goto label15;

        if b31 != 9 goto label16;

     label15:
        $i32 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i33 = $i32 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i33;
        goto label13;

     label16:
        $r40 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_VALUE>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r40;

     label17:
        $r41 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos>;
        $r42 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_VALUE>;
        if $r41 != $r42 goto label25;

        z1 = 0;
        goto label24;

     label18:
        $i34 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i35 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i34 < $i35 goto label19;

        $z6 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z6 != 0 goto label19;

        $r43 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus NEED_MORE_DATA>;
        return $r43;

     label19:
        $r44 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i36 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        b37 = $r44[$i36];
        if b37 == 13 goto label23;

        if b37 != 10 goto label20;

        z1 = 1;
        goto label23;

     label20:
        if b37 == 32 goto label21;

        if b37 != 9 goto label22;

     label21:
        $r45 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $r46 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i38 = $r46.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos>;
        $r45[$i38] = b37;
        $r47 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i39 = $r47.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos>;
        $i40 = $i39 + 1;
        $r47.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos> = $i40;
        goto label23;

     label22:
        $r48 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $r49 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i41 = $r49.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos>;
        $r48[$i41] = b37;
        $r50 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i42 = $r50.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos>;
        $i43 = $i42 + 1;
        $r50.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos> = $i43;
        $r51 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $r52 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i44 = $r52.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos>;
        $r51.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int lastSignificantChar> = $i44;

     label23:
        $i45 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i46 = $i45 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i46;

     label24:
        if z1 == 0 goto label18;

        $r54 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $r55 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i47 = $r55.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int lastSignificantChar>;
        $r54.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos> = $i47;
        $r56 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_MULTI_LINE>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r56;

     label25:
        $i48 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i49 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i48 < $i49 goto label26;

        $z7 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z7 != 0 goto label26;

        $r57 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus NEED_MORE_DATA>;
        return $r57;

     label26:
        $r58 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i50 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        b51 = $r58[$i50];
        $r59 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos>;
        $r60 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_MULTI_LINE>;
        if $r59 != $r60 goto label28;

        if b51 == 32 goto label27;

        if b51 == 9 goto label27;

        $r61 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_START>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r61;
        goto label29;

     label27:
        $r62 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $r63 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i52 = $r63.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos>;
        $r62[$i52] = b51;
        $r64 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i53 = $r64.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos>;
        $i54 = $i53 + 1;
        $r64.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int realPos> = $i54;
        $r65 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_VALUE_START>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r65;

     label28:
        $r66 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos>;
        $r67 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_VALUE_START>;
        if $r66 == $r67 goto label12;

        $r68 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos>;
        $r69 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_VALUE>;
        if $r68 == $r69 goto label12;

        $r70 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos>;
        $r71 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_MULTI_LINE>;
        if $r70 == $r71 goto label12;

     label29:
        $r72 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $r73 = $r72.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: org.apache.tomcat.util.buf.MessageBytes headerValue>;
        $r74 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $r75 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i55 = $r75.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int start>;
        $r76 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i56 = $r76.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int lastSignificantChar>;
        $r77 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i57 = $r77.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int start>;
        $i58 = $i56 - $i57;
        virtualinvoke $r73.<org.apache.tomcat.util.buf.MessageBytes: void setBytes(byte[],int,int)>($r74, $i55, $i58);
        $r78 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        virtualinvoke $r78.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: void recycle()>();
        $r79 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus HAVE_MORE_HEADERS>;
        return $r79;
    }

    public int getParsingRequestLinePhase()
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        int $i0;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        $i0 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int parsingRequestLinePhase>;
        return $i0;
    }

    private org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus skipLine() throws java.io.IOException
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition $r1, $r19;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String $r2, r3;
        int $i0, $i1, $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus $r4, $r20;
        byte[] $r5, $r6, $r12;
        byte $b3, $b5;
        org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData $r7, $r13, $r14, $r15;
        org.apache.juli.logging.Log $r9, $r18;
        org.apache.tomcat.util.res.StringManager $r10;
        java.lang.Object[] $r11;
        java.nio.charset.Charset $r16;
        java.lang.IllegalArgumentException $r17;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        $r1 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_SKIPLINE>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r1;
        z0 = 0;
        goto label4;

     label0:
        $i0 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i1 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        if $i0 < $i1 goto label1;

        $z1 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, 0);
        if $z1 != 0 goto label1;

        $r4 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus NEED_MORE_DATA>;
        return $r4;

     label1:
        $r5 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i2 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b3 = $r5[$i2];
        if $b3 == 13 goto label3;

        $r6 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i4 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $b5 = $r6[$i4];
        if $b5 != 10 goto label2;

        z0 = 1;
        goto label3;

     label2:
        $r7 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i6 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $r7.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int lastSignificantChar> = $i6;

     label3:
        $i7 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos>;
        $i8 = $i7 + 1;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i8;

     label4:
        if z0 == 0 goto label0;

        $z2 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean rejectIllegalHeaderName>;
        if $z2 != 0 goto label5;

        $r9 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label7;

     label5:
        $r10 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[1];
        $r2 = new java.lang.String;
        $r12 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $r13 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i9 = $r13.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int start>;
        $r14 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i10 = $r14.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int lastSignificantChar>;
        $r15 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData headerData>;
        $i11 = $r15.<org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseData: int start>;
        $i12 = $i10 - $i11;
        $i13 = $i12 + 1;
        $r16 = <org.apache.coyote.http11.InternalNioInputBuffer: java.nio.charset.Charset DEFAULT_CHARSET>;
        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r12, $i9, $i13, $r16);
        $r11[0] = $r2;
        r3 = virtualinvoke $r10.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("iib.invalidheader", $r11);
        $z4 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean rejectIllegalHeaderName>;
        if $z4 == 0 goto label6;

        $r17 = new java.lang.IllegalArgumentException;
        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r3);
        throw $r17;

     label6:
        $r18 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.juli.logging.Log log>;
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void debug(java.lang.Object)>(r3);

     label7:
        $r19 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition HEADER_START>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParsePosition headerParsePos> = $r19;
        $r20 = <org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus: org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus HAVE_MORE_HEADERS>;
        return $r20;
    }

    protected void init(org.apache.tomcat.util.net.SocketWrapper, org.apache.tomcat.util.net.AbstractEndpoint) throws java.io.IOException
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        org.apache.tomcat.util.net.AbstractEndpoint r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r3;
        org.apache.tomcat.util.net.NioChannel $r4, $r5;
        org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler $r6;
        java.nio.ByteBuffer $r7;
        byte[] $r8, $r9, $r10;
        org.apache.tomcat.util.net.NioEndpoint $r11;
        org.apache.tomcat.util.net.NioSelectorPool $r12;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        r2 := @parameter1: org.apache.tomcat.util.net.AbstractEndpoint;
        $r3 = virtualinvoke r1.<org.apache.tomcat.util.net.SocketWrapper: java.lang.Object getSocket()>();
        $r4 = (org.apache.tomcat.util.net.NioChannel) $r3;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket> = $r4;
        $r5 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioChannel socket>;
        $r6 = virtualinvoke $r5.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler getBufHandler()>();
        $r7 = interfaceinvoke $r6.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getReadBuffer()>();
        $i1 = virtualinvoke $r7.<java.nio.ByteBuffer: int capacity()>();
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int socketReadBufferSize> = $i1;
        $i2 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int headerBufferSize>;
        $i3 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int socketReadBufferSize>;
        i0 = $i2 + $i3;
        $r8 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        if $r8 == null goto label0;

        $r9 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf>;
        $i4 = lengthof $r9;
        if $i4 >= i0 goto label1;

     label0:
        $r10 = newarray (byte)[i0];
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: byte[] buf> = $r10;

     label1:
        $r11 = (org.apache.tomcat.util.net.NioEndpoint) r2;
        $r12 = virtualinvoke $r11.<org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.net.NioSelectorPool getSelectorPool()>();
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.net.NioSelectorPool pool> = $r12;
        return;
    }

    protected boolean fill(boolean) throws java.io.IOException, java.io.EOFException
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        boolean z0, $z1;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        z0 := @parameter0: boolean;
        $z1 = virtualinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean fill(boolean,boolean)>(1, z0);
        return $z1;
    }

    protected boolean fill(boolean, boolean) throws java.io.IOException, java.io.EOFException
    {
        org.apache.coyote.http11.InternalNioInputBuffer r0;
        boolean z0, z1, z2, $z3, $z4, z5, $z6;
        org.apache.tomcat.util.res.StringManager $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.coyote.http11.InternalNioInputBuffer;
        z0 := @parameter0: boolean;
        z1 := @parameter1: boolean;
        z2 = 0;
        $z3 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: boolean parsingHeader>;
        if $z3 == 0 goto label3;

        $i0 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid>;
        $i1 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int headerBufferSize>;
        if $i0 <= $i1 goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        $r1 = <org.apache.coyote.http11.InternalNioInputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("iib.requestheadertoolarge.error");
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $i2 = specialinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: int readSocket(boolean,boolean)>(z0, z1);
        if $i2 <= 0 goto label1;

        $z4 = 1;
        goto label2;

     label1:
        $z4 = 0;

     label2:
        z5 = $z4;
        goto label6;

     label3:
        $i3 = r0.<org.apache.coyote.http11.InternalNioInputBuffer: int end>;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int pos> = $i3;
        r0.<org.apache.coyote.http11.InternalNioInputBuffer: int lastValid> = $i3;
        $i4 = specialinvoke r0.<org.apache.coyote.http11.InternalNioInputBuffer: int readSocket(boolean,boolean)>(z0, z1);
        if $i4 <= 0 goto label4;

        $z6 = 1;
        goto label5;

     label4:
        $z6 = 0;

     label5:
        z5 = $z6;

     label6:
        return z5;
    }
}
