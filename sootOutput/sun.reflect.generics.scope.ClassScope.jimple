public class sun.reflect.generics.scope.ClassScope extends sun.reflect.generics.scope.AbstractScope implements sun.reflect.generics.scope.Scope
{

    private void <init>(java.lang.Class)
    {
        sun.reflect.generics.scope.ClassScope r0;
        java.lang.Class r1;

        r0 := @this: sun.reflect.generics.scope.ClassScope;
        r1 := @parameter0: java.lang.Class;
        specialinvoke r0.<sun.reflect.generics.scope.AbstractScope: void <init>(java.lang.reflect.GenericDeclaration)>(r1);
        return;
    }

    protected sun.reflect.generics.scope.Scope computeEnclosingScope()
    {
        sun.reflect.generics.scope.ClassScope r0, $r8;
        java.lang.Class r1, r4;
        java.lang.reflect.Method r2;
        java.lang.reflect.Constructor r3;
        java.lang.reflect.GenericDeclaration $r5;
        sun.reflect.generics.scope.MethodScope $r6;
        sun.reflect.generics.scope.ConstructorScope $r7;
        sun.reflect.generics.scope.DummyScope $r9;

        r0 := @this: sun.reflect.generics.scope.ClassScope;
        $r5 = virtualinvoke r0.<sun.reflect.generics.scope.ClassScope: java.lang.reflect.GenericDeclaration getRecvr()>();
        r1 = (java.lang.Class) $r5;
        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()>();
        if r2 == null goto label0;

        $r6 = staticinvoke <sun.reflect.generics.scope.MethodScope: sun.reflect.generics.scope.MethodScope make(java.lang.reflect.Method)>(r2);
        return $r6;

     label0:
        r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()>();
        if r3 == null goto label1;

        $r7 = staticinvoke <sun.reflect.generics.scope.ConstructorScope: sun.reflect.generics.scope.ConstructorScope make(java.lang.reflect.Constructor)>(r3);
        return $r7;

     label1:
        r4 = virtualinvoke r1.<java.lang.Class: java.lang.Class getEnclosingClass()>();
        if r4 == null goto label2;

        $r8 = staticinvoke <sun.reflect.generics.scope.ClassScope: sun.reflect.generics.scope.ClassScope make(java.lang.Class)>(r4);
        return $r8;

     label2:
        $r9 = staticinvoke <sun.reflect.generics.scope.DummyScope: sun.reflect.generics.scope.DummyScope make()>();
        return $r9;
    }

    public static sun.reflect.generics.scope.ClassScope make(java.lang.Class)
    {
        java.lang.Class r0;
        sun.reflect.generics.scope.ClassScope $r1;

        r0 := @parameter0: java.lang.Class;
        $r1 = new sun.reflect.generics.scope.ClassScope;
        specialinvoke $r1.<sun.reflect.generics.scope.ClassScope: void <init>(java.lang.Class)>(r0);
        return $r1;
    }
}
