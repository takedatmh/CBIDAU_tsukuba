class org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl extends java.lang.Object implements org.apache.tomcat.util.http.fileupload.FileItemStream
{
    private final java.lang.String contentType;
    private final java.lang.String fieldName;
    private final java.lang.String name;
    private final boolean formField;
    private final java.io.InputStream stream;
    private boolean opened;
    private org.apache.tomcat.util.http.fileupload.FileItemHeaders headers;
    final org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl this$1;

    void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl, java.lang.String, java.lang.String, java.lang.String, boolean, long) throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl r1;
        java.lang.String r2, r3, r4, $r13, $r16;
        boolean z0;
        long l0, $l1, $l4, $l6, $l7, $l8;
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r5;
        java.io.InputStream r6;
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException r7, $r11;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r8;
        org.apache.tomcat.util.http.fileupload.FileUploadBase $r9, $r10, $r14, $r17, $r20;
        byte $b2, $b3, $b5;
        java.lang.Object[] $r12;
        java.lang.Long $r15;
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileUploadIOException $r18;
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1 $r19;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        r1 := @parameter0: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        z0 := @parameter4: boolean;
        l0 := @parameter5: long;
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String name> = r2;
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String fieldName> = r3;
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String contentType> = r4;
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: boolean formField> = z0;
        $r8 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream access$0(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);
        r5 = virtualinvoke $r8.<org.apache.tomcat.util.http.fileupload.MultipartStream: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream newInputStream()>();
        r6 = r5;
        $r9 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);
        $l1 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: long access$0(org.apache.tomcat.util.http.fileupload.FileUploadBase)>($r9);
        $b2 = $l1 cmp -1L;
        if $b2 == 0 goto label1;

        $b3 = l0 cmp -1L;
        if $b3 == 0 goto label0;

        $r10 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);
        $l4 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: long access$0(org.apache.tomcat.util.http.fileupload.FileUploadBase)>($r10);
        $b5 = l0 cmp $l4;
        if $b5 <= 0 goto label0;

        $r11 = new org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException;
        $r12 = newarray (java.lang.Object)[2];
        $r13 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String fieldName>;
        $r12[0] = $r13;
        $r14 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);
        $l6 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: long access$0(org.apache.tomcat.util.http.fileupload.FileUploadBase)>($r14);
        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);
        $r12[1] = $r15;
        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The field %s exceeds its maximum permitted size of %s bytes.", $r12);
        $r17 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);
        $l7 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: long access$0(org.apache.tomcat.util.http.fileupload.FileUploadBase)>($r17);
        specialinvoke $r11.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: void <init>(java.lang.String,long,long)>($r16, l0, $l7);
        r7 = $r11;
        virtualinvoke r7.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: void setFileName(java.lang.String)>(r2);
        virtualinvoke r7.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: void setFieldName(java.lang.String)>(r3);
        $r18 = new org.apache.tomcat.util.http.fileupload.FileUploadBase$FileUploadIOException;
        specialinvoke $r18.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileUploadIOException: void <init>(java.lang.Throwable)>(r7);
        throw $r18;

     label0:
        $r19 = new org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1;
        $r20 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);
        $l8 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: long access$0(org.apache.tomcat.util.http.fileupload.FileUploadBase)>($r20);
        specialinvoke $r19.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1: void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl,java.io.InputStream,long,org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream)>(r0, r6, $l8, r5);
        r6 = $r19;

     label1:
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.io.InputStream stream> = r6;
        return;
    }

    public java.lang.String getContentType()
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String contentType>;
        return $r1;
    }

    public java.lang.String getFieldName()
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String fieldName>;
        return $r1;
    }

    public java.lang.String getName()
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String name>;
        $r2 = staticinvoke <org.apache.tomcat.util.http.fileupload.util.Streams: java.lang.String checkFileName(java.lang.String)>($r1);
        return $r2;
    }

    public boolean isFormField()
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $z0 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: boolean formField>;
        return $z0;
    }

    public java.io.InputStream openStream() throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;
        java.io.InputStream $r2, $r5;
        org.apache.tomcat.util.http.fileupload.util.Closeable $r3;
        org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException $r4;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $z0 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: boolean opened>;
        if $z0 == 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The stream was already opened.");
        throw $r1;

     label0:
        $r2 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.io.InputStream stream>;
        $r3 = (org.apache.tomcat.util.http.fileupload.util.Closeable) $r2;
        $z1 = interfaceinvoke $r3.<org.apache.tomcat.util.http.fileupload.util.Closeable: boolean isClosed()>();
        if $z1 == 0 goto label1;

        $r4 = new org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException;
        specialinvoke $r4.<org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException: void <init>()>();
        throw $r4;

     label1:
        $r5 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.io.InputStream stream>;
        return $r5;
    }

    void close() throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.io.InputStream stream>;
        virtualinvoke $r1.<java.io.InputStream: void close()>();
        return;
    }

    public org.apache.tomcat.util.http.fileupload.FileItemHeaders getHeaders()
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        org.apache.tomcat.util.http.fileupload.FileItemHeaders $r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: org.apache.tomcat.util.http.fileupload.FileItemHeaders headers>;
        return $r1;
    }

    public void setHeaders(org.apache.tomcat.util.http.fileupload.FileItemHeaders)
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        org.apache.tomcat.util.http.fileupload.FileItemHeaders r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        r1 := @parameter0: org.apache.tomcat.util.http.fileupload.FileItemHeaders;
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: org.apache.tomcat.util.http.fileupload.FileItemHeaders headers> = r1;
        return;
    }

    static java.lang.String access$0(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl)
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String fieldName>;
        return $r1;
    }

    static java.lang.String access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl)
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String name>;
        return $r1;
    }
}
