public class java.util.zip.ZipEntry extends java.lang.Object implements java.util.zip.ZipConstants, java.lang.Cloneable
{
    java.lang.String name;
    long time;
    long crc;
    long size;
    long csize;
    int method;
    int flag;
    byte[] extra;
    java.lang.String comment;
    public static final int STORED;
    public static final int DEFLATED;

    public void <init>(java.lang.String)
    {
        java.util.zip.ZipEntry r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: java.util.zip.ZipEntry;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.zip.ZipEntry: long time> = -1L;
        r0.<java.util.zip.ZipEntry: long crc> = -1L;
        r0.<java.util.zip.ZipEntry: long size> = -1L;
        r0.<java.util.zip.ZipEntry: long csize> = -1L;
        r0.<java.util.zip.ZipEntry: int method> = -1;
        r0.<java.util.zip.ZipEntry: int flag> = 0;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 <= 65535 goto label1;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("entry name too long");
        throw $r3;

     label1:
        r0.<java.util.zip.ZipEntry: java.lang.String name> = r1;
        return;
    }

    public void <init>(java.util.zip.ZipEntry)
    {
        java.util.zip.ZipEntry r0, r1;
        java.lang.String $r2, $r4;
        long $l0, $l1, $l2, $l3;
        int $i4, $i5;
        byte[] $r3;

        r0 := @this: java.util.zip.ZipEntry;
        r1 := @parameter0: java.util.zip.ZipEntry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.zip.ZipEntry: long time> = -1L;
        r0.<java.util.zip.ZipEntry: long crc> = -1L;
        r0.<java.util.zip.ZipEntry: long size> = -1L;
        r0.<java.util.zip.ZipEntry: long csize> = -1L;
        r0.<java.util.zip.ZipEntry: int method> = -1;
        r0.<java.util.zip.ZipEntry: int flag> = 0;
        $r2 = r1.<java.util.zip.ZipEntry: java.lang.String name>;
        r0.<java.util.zip.ZipEntry: java.lang.String name> = $r2;
        $l0 = r1.<java.util.zip.ZipEntry: long time>;
        r0.<java.util.zip.ZipEntry: long time> = $l0;
        $l1 = r1.<java.util.zip.ZipEntry: long crc>;
        r0.<java.util.zip.ZipEntry: long crc> = $l1;
        $l2 = r1.<java.util.zip.ZipEntry: long size>;
        r0.<java.util.zip.ZipEntry: long size> = $l2;
        $l3 = r1.<java.util.zip.ZipEntry: long csize>;
        r0.<java.util.zip.ZipEntry: long csize> = $l3;
        $i4 = r1.<java.util.zip.ZipEntry: int method>;
        r0.<java.util.zip.ZipEntry: int method> = $i4;
        $i5 = r1.<java.util.zip.ZipEntry: int flag>;
        r0.<java.util.zip.ZipEntry: int flag> = $i5;
        $r3 = r1.<java.util.zip.ZipEntry: byte[] extra>;
        r0.<java.util.zip.ZipEntry: byte[] extra> = $r3;
        $r4 = r1.<java.util.zip.ZipEntry: java.lang.String comment>;
        r0.<java.util.zip.ZipEntry: java.lang.String comment> = $r4;
        return;
    }

    void <init>()
    {
        java.util.zip.ZipEntry r0;

        r0 := @this: java.util.zip.ZipEntry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.zip.ZipEntry: long time> = -1L;
        r0.<java.util.zip.ZipEntry: long crc> = -1L;
        r0.<java.util.zip.ZipEntry: long size> = -1L;
        r0.<java.util.zip.ZipEntry: long csize> = -1L;
        r0.<java.util.zip.ZipEntry: int method> = -1;
        r0.<java.util.zip.ZipEntry: int flag> = 0;
        return;
    }

    public java.lang.String getName()
    {
        java.util.zip.ZipEntry r0;
        java.lang.String $r1;

        r0 := @this: java.util.zip.ZipEntry;
        $r1 = r0.<java.util.zip.ZipEntry: java.lang.String name>;
        return $r1;
    }

    public void setTime(long)
    {
        java.util.zip.ZipEntry r0;
        long l0, $l1;

        r0 := @this: java.util.zip.ZipEntry;
        l0 := @parameter0: long;
        $l1 = staticinvoke <java.util.zip.ZipEntry: long javaToDosTime(long)>(l0);
        r0.<java.util.zip.ZipEntry: long time> = $l1;
        return;
    }

    public long getTime()
    {
        java.util.zip.ZipEntry r0;
        long $l0, $l2, $l3;
        byte $b1;

        r0 := @this: java.util.zip.ZipEntry;
        $l0 = r0.<java.util.zip.ZipEntry: long time>;
        $b1 = $l0 cmp -1L;
        if $b1 == 0 goto label0;

        $l2 = r0.<java.util.zip.ZipEntry: long time>;
        $l3 = staticinvoke <java.util.zip.ZipEntry: long dosToJavaTime(long)>($l2);
        goto label1;

     label0:
        $l3 = -1L;

     label1:
        return $l3;
    }

    public void setSize(long)
    {
        java.util.zip.ZipEntry r0;
        long l0;
        byte $b1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: java.util.zip.ZipEntry;
        l0 := @parameter0: long;
        $b1 = l0 cmp 0L;
        if $b1 >= 0 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid entry size");
        throw $r1;

     label0:
        r0.<java.util.zip.ZipEntry: long size> = l0;
        return;
    }

    public long getSize()
    {
        java.util.zip.ZipEntry r0;
        long $l0;

        r0 := @this: java.util.zip.ZipEntry;
        $l0 = r0.<java.util.zip.ZipEntry: long size>;
        return $l0;
    }

    public long getCompressedSize()
    {
        java.util.zip.ZipEntry r0;
        long $l0;

        r0 := @this: java.util.zip.ZipEntry;
        $l0 = r0.<java.util.zip.ZipEntry: long csize>;
        return $l0;
    }

    public void setCompressedSize(long)
    {
        java.util.zip.ZipEntry r0;
        long l0;

        r0 := @this: java.util.zip.ZipEntry;
        l0 := @parameter0: long;
        r0.<java.util.zip.ZipEntry: long csize> = l0;
        return;
    }

    public void setCrc(long)
    {
        java.util.zip.ZipEntry r0;
        long l0;
        byte $b1, $b2;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: java.util.zip.ZipEntry;
        l0 := @parameter0: long;
        $b1 = l0 cmp 0L;
        if $b1 < 0 goto label0;

        $b2 = l0 cmp 4294967295L;
        if $b2 <= 0 goto label1;

     label0:
        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid entry crc-32");
        throw $r1;

     label1:
        r0.<java.util.zip.ZipEntry: long crc> = l0;
        return;
    }

    public long getCrc()
    {
        java.util.zip.ZipEntry r0;
        long $l0;

        r0 := @this: java.util.zip.ZipEntry;
        $l0 = r0.<java.util.zip.ZipEntry: long crc>;
        return $l0;
    }

    public void setMethod(int)
    {
        java.util.zip.ZipEntry r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: java.util.zip.ZipEntry;
        i0 := @parameter0: int;
        if i0 == 0 goto label0;

        if i0 == 8 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid compression method");
        throw $r1;

     label0:
        r0.<java.util.zip.ZipEntry: int method> = i0;
        return;
    }

    public int getMethod()
    {
        java.util.zip.ZipEntry r0;
        int $i0;

        r0 := @this: java.util.zip.ZipEntry;
        $i0 = r0.<java.util.zip.ZipEntry: int method>;
        return $i0;
    }

    public void setExtra(byte[])
    {
        java.util.zip.ZipEntry r0;
        byte[] r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: java.util.zip.ZipEntry;
        r1 := @parameter0: byte[];
        if r1 == null goto label0;

        $i0 = lengthof r1;
        if $i0 <= 65535 goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid extra field length");
        throw $r2;

     label0:
        r0.<java.util.zip.ZipEntry: byte[] extra> = r1;
        return;
    }

    public byte[] getExtra()
    {
        java.util.zip.ZipEntry r0;
        byte[] $r1;

        r0 := @this: java.util.zip.ZipEntry;
        $r1 = r0.<java.util.zip.ZipEntry: byte[] extra>;
        return $r1;
    }

    public void setComment(java.lang.String)
    {
        java.util.zip.ZipEntry r0;
        java.lang.String r1;

        r0 := @this: java.util.zip.ZipEntry;
        r1 := @parameter0: java.lang.String;
        r0.<java.util.zip.ZipEntry: java.lang.String comment> = r1;
        return;
    }

    public java.lang.String getComment()
    {
        java.util.zip.ZipEntry r0;
        java.lang.String $r1;

        r0 := @this: java.util.zip.ZipEntry;
        $r1 = r0.<java.util.zip.ZipEntry: java.lang.String comment>;
        return $r1;
    }

    public boolean isDirectory()
    {
        java.util.zip.ZipEntry r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: java.util.zip.ZipEntry;
        $r1 = r0.<java.util.zip.ZipEntry: java.lang.String name>;
        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");
        return $z0;
    }

    public java.lang.String toString()
    {
        java.util.zip.ZipEntry r0;
        java.lang.String $r1;

        r0 := @this: java.util.zip.ZipEntry;
        $r1 = virtualinvoke r0.<java.util.zip.ZipEntry: java.lang.String getName()>();
        return $r1;
    }

    private static long dosToJavaTime(long)
    {
        long l0, $l1, $l2, $l3, $l5, $l6, $l7, $l9, $l10, $l12, $l13, $l15, $l16, $l18, $l19, $l21;
        java.util.Date $r0, r1;
        int $i4, $i8, $i11, $i14, $i17, $i20;

        l0 := @parameter0: long;
        $r0 = new java.util.Date;
        $l1 = l0 >> 25;
        $l2 = $l1 & 127L;
        $l3 = $l2 + 80L;
        $i4 = (int) $l3;
        $l5 = l0 >> 21;
        $l6 = $l5 & 15L;
        $l7 = $l6 - 1L;
        $i8 = (int) $l7;
        $l9 = l0 >> 16;
        $l10 = $l9 & 31L;
        $i11 = (int) $l10;
        $l12 = l0 >> 11;
        $l13 = $l12 & 31L;
        $i14 = (int) $l13;
        $l15 = l0 >> 5;
        $l16 = $l15 & 63L;
        $i17 = (int) $l16;
        $l18 = l0 << 1;
        $l19 = $l18 & 62L;
        $i20 = (int) $l19;
        specialinvoke $r0.<java.util.Date: void <init>(int,int,int,int,int,int)>($i4, $i8, $i11, $i14, $i17, $i20);
        r1 = $r0;
        $l21 = virtualinvoke r1.<java.util.Date: long getTime()>();
        return $l21;
    }

    private static long javaToDosTime(long)
    {
        long l0, $l21;
        java.util.Date $r0, r1;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;

        l0 := @parameter0: long;
        $r0 = new java.util.Date;
        specialinvoke $r0.<java.util.Date: void <init>(long)>(l0);
        r1 = $r0;
        $i2 = virtualinvoke r1.<java.util.Date: int getYear()>();
        i1 = $i2 + 1900;
        if i1 >= 1980 goto label0;

        return 2162688L;

     label0:
        $i3 = i1 - 1980;
        $i4 = $i3 << 25;
        $i5 = virtualinvoke r1.<java.util.Date: int getMonth()>();
        $i6 = $i5 + 1;
        $i7 = $i6 << 21;
        $i8 = $i4 | $i7;
        $i9 = virtualinvoke r1.<java.util.Date: int getDate()>();
        $i10 = $i9 << 16;
        $i11 = $i8 | $i10;
        $i12 = virtualinvoke r1.<java.util.Date: int getHours()>();
        $i13 = $i12 << 11;
        $i14 = $i11 | $i13;
        $i15 = virtualinvoke r1.<java.util.Date: int getMinutes()>();
        $i16 = $i15 << 5;
        $i17 = $i14 | $i16;
        $i18 = virtualinvoke r1.<java.util.Date: int getSeconds()>();
        $i19 = $i18 >> 1;
        $i20 = $i17 | $i19;
        $l21 = (long) $i20;
        return $l21;
    }

    public int hashCode()
    {
        java.util.zip.ZipEntry r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: java.util.zip.ZipEntry;
        $r1 = r0.<java.util.zip.ZipEntry: java.lang.String name>;
        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        return $i0;
    }

    public java.lang.Object clone()
    {
        java.util.zip.ZipEntry r0, r1;
        java.lang.Object $r2, $r7;
        byte[] $r4, $r5, $r6;
        java.lang.CloneNotSupportedException $r9, r10;
        java.lang.InternalError $r11;

        r0 := @this: java.util.zip.ZipEntry;

     label0:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        r1 = (java.util.zip.ZipEntry) $r2;
        $r4 = r0.<java.util.zip.ZipEntry: byte[] extra>;
        if $r4 != null goto label1;

        $r5 = null;
        goto label2;

     label1:
        $r6 = r0.<java.util.zip.ZipEntry: byte[] extra>;
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();
        $r5 = (byte[]) $r7;

     label2:
        r1.<java.util.zip.ZipEntry: byte[] extra> = $r5;

     label3:
        return r1;

     label4:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = new java.lang.InternalError;
        specialinvoke $r11.<java.lang.InternalError: void <init>()>();
        throw $r11;

        catch java.lang.CloneNotSupportedException from label0 to label3 with label4;
    }
}
