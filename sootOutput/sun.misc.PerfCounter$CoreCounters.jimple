class sun.misc.PerfCounter$CoreCounters extends java.lang.Object
{
    static final sun.misc.PerfCounter pdt;
    static final sun.misc.PerfCounter lc;
    static final sun.misc.PerfCounter lct;
    static final sun.misc.PerfCounter rcbt;
    static final sun.misc.PerfCounter zfc;
    static final sun.misc.PerfCounter zfot;

    void <init>()
    {
        sun.misc.PerfCounter$CoreCounters r0;

        r0 := @this: sun.misc.PerfCounter$CoreCounters;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static void <clinit>()
    {
        sun.misc.PerfCounter $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = staticinvoke <sun.misc.PerfCounter: sun.misc.PerfCounter newPerfCounter(java.lang.String)>("sun.classloader.parentDelegationTime");
        <sun.misc.PerfCounter$CoreCounters: sun.misc.PerfCounter pdt> = $r0;
        $r1 = staticinvoke <sun.misc.PerfCounter: sun.misc.PerfCounter newPerfCounter(java.lang.String)>("sun.classloader.findClasses");
        <sun.misc.PerfCounter$CoreCounters: sun.misc.PerfCounter lc> = $r1;
        $r2 = staticinvoke <sun.misc.PerfCounter: sun.misc.PerfCounter newPerfCounter(java.lang.String)>("sun.classloader.findClassTime");
        <sun.misc.PerfCounter$CoreCounters: sun.misc.PerfCounter lct> = $r2;
        $r3 = staticinvoke <sun.misc.PerfCounter: sun.misc.PerfCounter newPerfCounter(java.lang.String)>("sun.urlClassLoader.readClassBytesTime");
        <sun.misc.PerfCounter$CoreCounters: sun.misc.PerfCounter rcbt> = $r3;
        $r4 = staticinvoke <sun.misc.PerfCounter: sun.misc.PerfCounter newPerfCounter(java.lang.String)>("sun.zip.zipFiles");
        <sun.misc.PerfCounter$CoreCounters: sun.misc.PerfCounter zfc> = $r4;
        $r5 = staticinvoke <sun.misc.PerfCounter: sun.misc.PerfCounter newPerfCounter(java.lang.String)>("sun.zip.zipFile.openTime");
        <sun.misc.PerfCounter$CoreCounters: sun.misc.PerfCounter zfot> = $r5;
        return;
    }
}
