class sun.reflect.UnsafeFieldAccessorFactory extends java.lang.Object
{

    void <init>()
    {
        sun.reflect.UnsafeFieldAccessorFactory r0;

        r0 := @this: sun.reflect.UnsafeFieldAccessorFactory;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field, boolean)
    {
        java.lang.reflect.Field r0;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7;
        java.lang.Class r1, $r3, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69;
        int $i0, $i1, $i2;
        sun.misc.Unsafe $r2;
        sun.reflect.UnsafeStaticBooleanFieldAccessorImpl $r5;
        sun.reflect.UnsafeStaticByteFieldAccessorImpl $r7;
        sun.reflect.UnsafeStaticShortFieldAccessorImpl $r9;
        sun.reflect.UnsafeStaticCharacterFieldAccessorImpl $r11;
        sun.reflect.UnsafeStaticIntegerFieldAccessorImpl $r13;
        sun.reflect.UnsafeStaticLongFieldAccessorImpl $r15;
        sun.reflect.UnsafeStaticFloatFieldAccessorImpl $r17;
        sun.reflect.UnsafeStaticDoubleFieldAccessorImpl $r19;
        sun.reflect.UnsafeStaticObjectFieldAccessorImpl $r20;
        sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl $r22;
        sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl $r24;
        sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl $r26;
        sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl $r28;
        sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl $r30;
        sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl $r32;
        sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl $r34;
        sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl $r36;
        sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl $r37;
        sun.reflect.UnsafeBooleanFieldAccessorImpl $r39;
        sun.reflect.UnsafeByteFieldAccessorImpl $r41;
        sun.reflect.UnsafeShortFieldAccessorImpl $r43;
        sun.reflect.UnsafeCharacterFieldAccessorImpl $r45;
        sun.reflect.UnsafeIntegerFieldAccessorImpl $r47;
        sun.reflect.UnsafeLongFieldAccessorImpl $r49;
        sun.reflect.UnsafeFloatFieldAccessorImpl $r51;
        sun.reflect.UnsafeDoubleFieldAccessorImpl $r53;
        sun.reflect.UnsafeObjectFieldAccessorImpl $r54;
        sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl $r56;
        sun.reflect.UnsafeQualifiedByteFieldAccessorImpl $r58;
        sun.reflect.UnsafeQualifiedShortFieldAccessorImpl $r60;
        sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl $r62;
        sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl $r64;
        sun.reflect.UnsafeQualifiedLongFieldAccessorImpl $r66;
        sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl $r68;
        sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl $r70;
        sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl $r71;

        r0 := @parameter0: java.lang.reflect.Field;
        z0 := @parameter1: boolean;
        r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Class getType()>();
        $i0 = virtualinvoke r0.<java.lang.reflect.Field: int getModifiers()>();
        z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);
        $i1 = virtualinvoke r0.<java.lang.reflect.Field: int getModifiers()>();
        z2 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i1);
        $i2 = virtualinvoke r0.<java.lang.reflect.Field: int getModifiers()>();
        z3 = staticinvoke <java.lang.reflect.Modifier: boolean isVolatile(int)>($i2);
        if z2 != 0 goto label0;

        if z3 == 0 goto label1;

     label0:
        $z6 = 1;
        goto label2;

     label1:
        $z6 = 0;

     label2:
        z4 = $z6;
        if z2 == 0 goto label4;

        if z1 != 0 goto label3;

        if z0 != 0 goto label4;

     label3:
        $z7 = 1;
        goto label5;

     label4:
        $z7 = 0;

     label5:
        z5 = $z7;
        if z1 == 0 goto label23;

        $r2 = <sun.reflect.UnsafeFieldAccessorImpl: sun.misc.Unsafe unsafe>;
        $r3 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();
        virtualinvoke $r2.<sun.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>($r3);
        if z4 != 0 goto label14;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;
        if r1 != $r4 goto label6;

        $r5 = new sun.reflect.UnsafeStaticBooleanFieldAccessorImpl;
        specialinvoke $r5.<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r5;

     label6:
        $r6 = <java.lang.Byte: java.lang.Class TYPE>;
        if r1 != $r6 goto label7;

        $r7 = new sun.reflect.UnsafeStaticByteFieldAccessorImpl;
        specialinvoke $r7.<sun.reflect.UnsafeStaticByteFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r7;

     label7:
        $r8 = <java.lang.Short: java.lang.Class TYPE>;
        if r1 != $r8 goto label8;

        $r9 = new sun.reflect.UnsafeStaticShortFieldAccessorImpl;
        specialinvoke $r9.<sun.reflect.UnsafeStaticShortFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r9;

     label8:
        $r10 = <java.lang.Character: java.lang.Class TYPE>;
        if r1 != $r10 goto label9;

        $r11 = new sun.reflect.UnsafeStaticCharacterFieldAccessorImpl;
        specialinvoke $r11.<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r11;

     label9:
        $r12 = <java.lang.Integer: java.lang.Class TYPE>;
        if r1 != $r12 goto label10;

        $r13 = new sun.reflect.UnsafeStaticIntegerFieldAccessorImpl;
        specialinvoke $r13.<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r13;

     label10:
        $r14 = <java.lang.Long: java.lang.Class TYPE>;
        if r1 != $r14 goto label11;

        $r15 = new sun.reflect.UnsafeStaticLongFieldAccessorImpl;
        specialinvoke $r15.<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r15;

     label11:
        $r16 = <java.lang.Float: java.lang.Class TYPE>;
        if r1 != $r16 goto label12;

        $r17 = new sun.reflect.UnsafeStaticFloatFieldAccessorImpl;
        specialinvoke $r17.<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r17;

     label12:
        $r18 = <java.lang.Double: java.lang.Class TYPE>;
        if r1 != $r18 goto label13;

        $r19 = new sun.reflect.UnsafeStaticDoubleFieldAccessorImpl;
        specialinvoke $r19.<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r19;

     label13:
        $r20 = new sun.reflect.UnsafeStaticObjectFieldAccessorImpl;
        specialinvoke $r20.<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r20;

     label14:
        $r21 = <java.lang.Boolean: java.lang.Class TYPE>;
        if r1 != $r21 goto label15;

        $r22 = new sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl;
        specialinvoke $r22.<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r22;

     label15:
        $r23 = <java.lang.Byte: java.lang.Class TYPE>;
        if r1 != $r23 goto label16;

        $r24 = new sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl;
        specialinvoke $r24.<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r24;

     label16:
        $r25 = <java.lang.Short: java.lang.Class TYPE>;
        if r1 != $r25 goto label17;

        $r26 = new sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl;
        specialinvoke $r26.<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r26;

     label17:
        $r27 = <java.lang.Character: java.lang.Class TYPE>;
        if r1 != $r27 goto label18;

        $r28 = new sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl;
        specialinvoke $r28.<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r28;

     label18:
        $r29 = <java.lang.Integer: java.lang.Class TYPE>;
        if r1 != $r29 goto label19;

        $r30 = new sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl;
        specialinvoke $r30.<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r30;

     label19:
        $r31 = <java.lang.Long: java.lang.Class TYPE>;
        if r1 != $r31 goto label20;

        $r32 = new sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl;
        specialinvoke $r32.<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r32;

     label20:
        $r33 = <java.lang.Float: java.lang.Class TYPE>;
        if r1 != $r33 goto label21;

        $r34 = new sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl;
        specialinvoke $r34.<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r34;

     label21:
        $r35 = <java.lang.Double: java.lang.Class TYPE>;
        if r1 != $r35 goto label22;

        $r36 = new sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl;
        specialinvoke $r36.<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r36;

     label22:
        $r37 = new sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;
        specialinvoke $r37.<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r37;

     label23:
        if z4 != 0 goto label32;

        $r38 = <java.lang.Boolean: java.lang.Class TYPE>;
        if r1 != $r38 goto label24;

        $r39 = new sun.reflect.UnsafeBooleanFieldAccessorImpl;
        specialinvoke $r39.<sun.reflect.UnsafeBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r39;

     label24:
        $r40 = <java.lang.Byte: java.lang.Class TYPE>;
        if r1 != $r40 goto label25;

        $r41 = new sun.reflect.UnsafeByteFieldAccessorImpl;
        specialinvoke $r41.<sun.reflect.UnsafeByteFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r41;

     label25:
        $r42 = <java.lang.Short: java.lang.Class TYPE>;
        if r1 != $r42 goto label26;

        $r43 = new sun.reflect.UnsafeShortFieldAccessorImpl;
        specialinvoke $r43.<sun.reflect.UnsafeShortFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r43;

     label26:
        $r44 = <java.lang.Character: java.lang.Class TYPE>;
        if r1 != $r44 goto label27;

        $r45 = new sun.reflect.UnsafeCharacterFieldAccessorImpl;
        specialinvoke $r45.<sun.reflect.UnsafeCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r45;

     label27:
        $r46 = <java.lang.Integer: java.lang.Class TYPE>;
        if r1 != $r46 goto label28;

        $r47 = new sun.reflect.UnsafeIntegerFieldAccessorImpl;
        specialinvoke $r47.<sun.reflect.UnsafeIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r47;

     label28:
        $r48 = <java.lang.Long: java.lang.Class TYPE>;
        if r1 != $r48 goto label29;

        $r49 = new sun.reflect.UnsafeLongFieldAccessorImpl;
        specialinvoke $r49.<sun.reflect.UnsafeLongFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r49;

     label29:
        $r50 = <java.lang.Float: java.lang.Class TYPE>;
        if r1 != $r50 goto label30;

        $r51 = new sun.reflect.UnsafeFloatFieldAccessorImpl;
        specialinvoke $r51.<sun.reflect.UnsafeFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r51;

     label30:
        $r52 = <java.lang.Double: java.lang.Class TYPE>;
        if r1 != $r52 goto label31;

        $r53 = new sun.reflect.UnsafeDoubleFieldAccessorImpl;
        specialinvoke $r53.<sun.reflect.UnsafeDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r53;

     label31:
        $r54 = new sun.reflect.UnsafeObjectFieldAccessorImpl;
        specialinvoke $r54.<sun.reflect.UnsafeObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r0);
        return $r54;

     label32:
        $r55 = <java.lang.Boolean: java.lang.Class TYPE>;
        if r1 != $r55 goto label33;

        $r56 = new sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl;
        specialinvoke $r56.<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r56;

     label33:
        $r57 = <java.lang.Byte: java.lang.Class TYPE>;
        if r1 != $r57 goto label34;

        $r58 = new sun.reflect.UnsafeQualifiedByteFieldAccessorImpl;
        specialinvoke $r58.<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r58;

     label34:
        $r59 = <java.lang.Short: java.lang.Class TYPE>;
        if r1 != $r59 goto label35;

        $r60 = new sun.reflect.UnsafeQualifiedShortFieldAccessorImpl;
        specialinvoke $r60.<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r60;

     label35:
        $r61 = <java.lang.Character: java.lang.Class TYPE>;
        if r1 != $r61 goto label36;

        $r62 = new sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl;
        specialinvoke $r62.<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r62;

     label36:
        $r63 = <java.lang.Integer: java.lang.Class TYPE>;
        if r1 != $r63 goto label37;

        $r64 = new sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl;
        specialinvoke $r64.<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r64;

     label37:
        $r65 = <java.lang.Long: java.lang.Class TYPE>;
        if r1 != $r65 goto label38;

        $r66 = new sun.reflect.UnsafeQualifiedLongFieldAccessorImpl;
        specialinvoke $r66.<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r66;

     label38:
        $r67 = <java.lang.Float: java.lang.Class TYPE>;
        if r1 != $r67 goto label39;

        $r68 = new sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl;
        specialinvoke $r68.<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r68;

     label39:
        $r69 = <java.lang.Double: java.lang.Class TYPE>;
        if r1 != $r69 goto label40;

        $r70 = new sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl;
        specialinvoke $r70.<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r70;

     label40:
        $r71 = new sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl;
        specialinvoke $r71.<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r0, z5);
        return $r71;
    }
}
