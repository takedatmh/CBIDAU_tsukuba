public class org.apache.naming.ContextBindings extends java.lang.Object
{
    private static final java.util.Hashtable contextNameBindings;
    private static final java.util.Hashtable threadBindings;
    private static final java.util.Hashtable threadNameBindings;
    private static final java.util.Hashtable clBindings;
    private static final java.util.Hashtable clNameBindings;
    protected static final org.apache.naming.StringManager sm;

    static void <clinit>()
    {
        java.util.Hashtable $r0, $r1, $r2, $r3, $r4;
        org.apache.naming.StringManager $r5;

        $r0 = new java.util.Hashtable;
        specialinvoke $r0.<java.util.Hashtable: void <init>()>();
        <org.apache.naming.ContextBindings: java.util.Hashtable contextNameBindings> = $r0;
        $r1 = new java.util.Hashtable;
        specialinvoke $r1.<java.util.Hashtable: void <init>()>();
        <org.apache.naming.ContextBindings: java.util.Hashtable threadBindings> = $r1;
        $r2 = new java.util.Hashtable;
        specialinvoke $r2.<java.util.Hashtable: void <init>()>();
        <org.apache.naming.ContextBindings: java.util.Hashtable threadNameBindings> = $r2;
        $r3 = new java.util.Hashtable;
        specialinvoke $r3.<java.util.Hashtable: void <init>()>();
        <org.apache.naming.ContextBindings: java.util.Hashtable clBindings> = $r3;
        $r4 = new java.util.Hashtable;
        specialinvoke $r4.<java.util.Hashtable: void <init>()>();
        <org.apache.naming.ContextBindings: java.util.Hashtable clNameBindings> = $r4;
        $r5 = staticinvoke <org.apache.naming.StringManager: org.apache.naming.StringManager getManager(java.lang.String)>("org.apache.naming");
        <org.apache.naming.ContextBindings: org.apache.naming.StringManager sm> = $r5;
        return;
    }

    public void <init>()
    {
        org.apache.naming.ContextBindings r0;

        r0 := @this: org.apache.naming.ContextBindings;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void bindContext(java.lang.Object, javax.naming.Context)
    {
        java.lang.Object r0;
        javax.naming.Context r1;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: javax.naming.Context;
        staticinvoke <org.apache.naming.ContextBindings: void bindContext(java.lang.Object,javax.naming.Context,java.lang.Object)>(r0, r1, null);
        return;
    }

    public static void bindContext(java.lang.Object, javax.naming.Context, java.lang.Object)
    {
        java.lang.Object r0, r2;
        javax.naming.Context r1;
        boolean $z0;
        java.util.Hashtable $r3;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: javax.naming.Context;
        r2 := @parameter2: java.lang.Object;
        $z0 = staticinvoke <org.apache.naming.ContextAccessController: boolean checkSecurityToken(java.lang.Object,java.lang.Object)>(r0, r2);
        if $z0 == 0 goto label0;

        $r3 = <org.apache.naming.ContextBindings: java.util.Hashtable contextNameBindings>;
        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

     label0:
        return;
    }

    public static void unbindContext(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;
        staticinvoke <org.apache.naming.ContextBindings: void unbindContext(java.lang.Object,java.lang.Object)>(r0, null);
        return;
    }

    public static void unbindContext(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;
        java.util.Hashtable $r2;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        $z0 = staticinvoke <org.apache.naming.ContextAccessController: boolean checkSecurityToken(java.lang.Object,java.lang.Object)>(r0, r1);
        if $z0 == 0 goto label0;

        $r2 = <org.apache.naming.ContextBindings: java.util.Hashtable contextNameBindings>;
        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r0);

     label0:
        return;
    }

    static javax.naming.Context getContext(java.lang.Object)
    {
        java.lang.Object r0, $r2;
        java.util.Hashtable $r1;
        javax.naming.Context $r3;

        r0 := @parameter0: java.lang.Object;
        $r1 = <org.apache.naming.ContextBindings: java.util.Hashtable contextNameBindings>;
        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);
        $r3 = (javax.naming.Context) $r2;
        return $r3;
    }

    public static void bindThread(java.lang.Object) throws javax.naming.NamingException
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;
        staticinvoke <org.apache.naming.ContextBindings: void bindThread(java.lang.Object,java.lang.Object)>(r0, null);
        return;
    }

    public static void bindThread(java.lang.Object, java.lang.Object) throws javax.naming.NamingException
    {
        java.lang.Object r0, r1, $r5;
        javax.naming.Context r2;
        org.apache.naming.StringManager $r3;
        boolean $z0;
        java.util.Hashtable $r4, $r9, $r12;
        javax.naming.NamingException $r6;
        java.lang.Object[] $r7;
        java.lang.String $r8;
        java.lang.Thread $r10, $r13;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        $z0 = staticinvoke <org.apache.naming.ContextAccessController: boolean checkSecurityToken(java.lang.Object,java.lang.Object)>(r0, r1);
        if $z0 == 0 goto label1;

        $r4 = <org.apache.naming.ContextBindings: java.util.Hashtable contextNameBindings>;
        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (javax.naming.Context) $r5;
        if r2 != null goto label0;

        $r6 = new javax.naming.NamingException;
        $r3 = <org.apache.naming.ContextBindings: org.apache.naming.StringManager sm>;
        $r7 = newarray (java.lang.Object)[1];
        $r7[0] = r0;
        $r8 = virtualinvoke $r3.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("contextBindings.unknownContext", $r7);
        specialinvoke $r6.<javax.naming.NamingException: void <init>(java.lang.String)>($r8);
        throw $r6;

     label0:
        $r9 = <org.apache.naming.ContextBindings: java.util.Hashtable threadBindings>;
        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r2);
        $r12 = <org.apache.naming.ContextBindings: java.util.Hashtable threadNameBindings>;
        $r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r0);

     label1:
        return;
    }

    public static void unbindThread(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;
        staticinvoke <org.apache.naming.ContextBindings: void unbindThread(java.lang.Object,java.lang.Object)>(r0, null);
        return;
    }

    public static void unbindThread(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;
        java.util.Hashtable $r2, $r5;
        java.lang.Thread $r3, $r6;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        $z0 = staticinvoke <org.apache.naming.ContextAccessController: boolean checkSecurityToken(java.lang.Object,java.lang.Object)>(r0, r1);
        if $z0 == 0 goto label0;

        $r2 = <org.apache.naming.ContextBindings: java.util.Hashtable threadBindings>;
        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r3);
        $r5 = <org.apache.naming.ContextBindings: java.util.Hashtable threadNameBindings>;
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r6);

     label0:
        return;
    }

    public static javax.naming.Context getThread() throws javax.naming.NamingException
    {
        java.util.Hashtable $r0;
        java.lang.Thread $r1;
        javax.naming.Context r2;
        org.apache.naming.StringManager $r3;
        java.lang.Object $r4;
        javax.naming.NamingException $r5;
        java.lang.String $r6;

        $r0 = <org.apache.naming.ContextBindings: java.util.Hashtable threadBindings>;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r4 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);
        r2 = (javax.naming.Context) $r4;
        if r2 != null goto label0;

        $r5 = new javax.naming.NamingException;
        $r3 = <org.apache.naming.ContextBindings: org.apache.naming.StringManager sm>;
        $r6 = virtualinvoke $r3.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("contextBindings.noContextBoundToThread");
        specialinvoke $r5.<javax.naming.NamingException: void <init>(java.lang.String)>($r6);
        throw $r5;

     label0:
        return r2;
    }

    static java.lang.Object getThreadName() throws javax.naming.NamingException
    {
        java.util.Hashtable $r0;
        java.lang.Thread $r1;
        java.lang.Object r2;
        org.apache.naming.StringManager $r3;
        javax.naming.NamingException $r4;
        java.lang.String $r5;

        $r0 = <org.apache.naming.ContextBindings: java.util.Hashtable threadNameBindings>;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r2 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);
        if r2 != null goto label0;

        $r4 = new javax.naming.NamingException;
        $r3 = <org.apache.naming.ContextBindings: org.apache.naming.StringManager sm>;
        $r5 = virtualinvoke $r3.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("contextBindings.noContextBoundToThread");
        specialinvoke $r4.<javax.naming.NamingException: void <init>(java.lang.String)>($r5);
        throw $r4;

     label0:
        return r2;
    }

    public static boolean isThreadBound()
    {
        java.util.Hashtable $r0;
        java.lang.Thread $r1;
        boolean $z0;

        $r0 = <org.apache.naming.ContextBindings: java.util.Hashtable threadBindings>;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z0 = virtualinvoke $r0.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r1);
        return $z0;
    }

    public static void bindClassLoader(java.lang.Object) throws javax.naming.NamingException
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;
        staticinvoke <org.apache.naming.ContextBindings: void bindClassLoader(java.lang.Object,java.lang.Object)>(r0, null);
        return;
    }

    public static void bindClassLoader(java.lang.Object, java.lang.Object) throws javax.naming.NamingException
    {
        java.lang.Object r0, r1;
        java.lang.Thread $r2;
        java.lang.ClassLoader $r3;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        staticinvoke <org.apache.naming.ContextBindings: void bindClassLoader(java.lang.Object,java.lang.Object,java.lang.ClassLoader)>(r0, r1, $r3);
        return;
    }

    public static void bindClassLoader(java.lang.Object, java.lang.Object, java.lang.ClassLoader) throws javax.naming.NamingException
    {
        java.lang.Object r0, r1, $r6;
        java.lang.ClassLoader r2;
        javax.naming.Context r3;
        org.apache.naming.StringManager $r4;
        boolean $z0;
        java.util.Hashtable $r5, $r10, $r12;
        javax.naming.NamingException $r7;
        java.lang.Object[] $r8;
        java.lang.String $r9;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        r2 := @parameter2: java.lang.ClassLoader;
        $z0 = staticinvoke <org.apache.naming.ContextAccessController: boolean checkSecurityToken(java.lang.Object,java.lang.Object)>(r0, r1);
        if $z0 == 0 goto label1;

        $r5 = <org.apache.naming.ContextBindings: java.util.Hashtable contextNameBindings>;
        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);
        r3 = (javax.naming.Context) $r6;
        if r3 != null goto label0;

        $r7 = new javax.naming.NamingException;
        $r4 = <org.apache.naming.ContextBindings: org.apache.naming.StringManager sm>;
        $r8 = newarray (java.lang.Object)[1];
        $r8[0] = r0;
        $r9 = virtualinvoke $r4.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("contextBindings.unknownContext", $r8);
        specialinvoke $r7.<javax.naming.NamingException: void <init>(java.lang.String)>($r9);
        throw $r7;

     label0:
        $r10 = <org.apache.naming.ContextBindings: java.util.Hashtable clBindings>;
        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);
        $r12 = <org.apache.naming.ContextBindings: java.util.Hashtable clNameBindings>;
        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label1:
        return;
    }

    public static void unbindClassLoader(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;
        staticinvoke <org.apache.naming.ContextBindings: void unbindClassLoader(java.lang.Object,java.lang.Object)>(r0, null);
        return;
    }

    public static void unbindClassLoader(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        java.lang.Thread $r2;
        java.lang.ClassLoader $r3;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        staticinvoke <org.apache.naming.ContextBindings: void unbindClassLoader(java.lang.Object,java.lang.Object,java.lang.ClassLoader)>(r0, r1, $r3);
        return;
    }

    public static void unbindClassLoader(java.lang.Object, java.lang.Object, java.lang.ClassLoader)
    {
        java.lang.Object r0, r1, r3;
        java.lang.ClassLoader r2;
        boolean $z0, $z1;
        java.util.Hashtable $r4, $r5, $r7;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        r2 := @parameter2: java.lang.ClassLoader;
        $z0 = staticinvoke <org.apache.naming.ContextAccessController: boolean checkSecurityToken(java.lang.Object,java.lang.Object)>(r0, r1);
        if $z0 == 0 goto label2;

        $r4 = <org.apache.naming.ContextBindings: java.util.Hashtable clNameBindings>;
        r3 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);
        if r3 == null goto label0;

        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r0);
        if $z1 != 0 goto label1;

     label0:
        return;

     label1:
        $r5 = <org.apache.naming.ContextBindings: java.util.Hashtable clBindings>;
        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);
        $r7 = <org.apache.naming.ContextBindings: java.util.Hashtable clNameBindings>;
        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public static javax.naming.Context getClassLoader() throws javax.naming.NamingException
    {
        java.lang.Thread $r0;
        java.lang.ClassLoader r1, $r6;
        null_type n0;
        org.apache.naming.StringManager $r2;
        java.util.Hashtable $r3;
        java.lang.Object $r4;
        javax.naming.Context r5;
        javax.naming.NamingException $r7;
        java.lang.String $r8;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        n0 = null;

     label0:
        $r3 = <org.apache.naming.ContextBindings: java.util.Hashtable clBindings>;
        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        r5 = (javax.naming.Context) $r4;
        if r5 == null goto label1;

        return r5;

     label1:
        $r6 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();
        r1 = $r6;
        if $r6 != null goto label0;

        $r7 = new javax.naming.NamingException;
        $r2 = <org.apache.naming.ContextBindings: org.apache.naming.StringManager sm>;
        $r8 = virtualinvoke $r2.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("contextBindings.noContextBoundToCL");
        specialinvoke $r7.<javax.naming.NamingException: void <init>(java.lang.String)>($r8);
        throw $r7;
    }

    static java.lang.Object getClassLoaderName() throws javax.naming.NamingException
    {
        java.lang.Thread $r0;
        java.lang.ClassLoader r1, $r5;
        null_type n0;
        org.apache.naming.StringManager $r2;
        java.util.Hashtable $r3;
        java.lang.Object r4;
        javax.naming.NamingException $r6;
        java.lang.String $r7;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        n0 = null;

     label0:
        $r3 = <org.apache.naming.ContextBindings: java.util.Hashtable clNameBindings>;
        r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        if r4 == null goto label1;

        return r4;

     label1:
        $r5 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();
        r1 = $r5;
        if $r5 != null goto label0;

        $r6 = new javax.naming.NamingException;
        $r2 = <org.apache.naming.ContextBindings: org.apache.naming.StringManager sm>;
        $r7 = virtualinvoke $r2.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("contextBindings.noContextBoundToCL");
        specialinvoke $r6.<javax.naming.NamingException: void <init>(java.lang.String)>($r7);
        throw $r6;
    }

    public static boolean isClassLoaderBound()
    {
        java.lang.Thread $r0;
        java.lang.ClassLoader r1, $r3;
        java.util.Hashtable $r2;
        boolean $z0;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label0:
        $r2 = <org.apache.naming.ContextBindings: java.util.Hashtable clBindings>;
        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);
        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();
        r1 = $r3;
        if $r3 != null goto label0;

        return 0;
    }
}
