public abstract class java.security.cert.X509CRLEntry extends java.lang.Object implements java.security.cert.X509Extension
{

    public void <init>()
    {
        java.security.cert.X509CRLEntry r0;

        r0 := @this: java.security.cert.X509CRLEntry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.security.cert.X509CRLEntry r0, $r4;
        java.lang.Object r1;
        byte[] r2, r3;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        byte $b4, $b5;
        java.security.cert.CRLException $r5, r6;

        r0 := @this: java.security.cert.X509CRLEntry;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof java.security.cert.X509CRLEntry;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<java.security.cert.X509CRLEntry: byte[] getEncoded()>();
        $r4 = (java.security.cert.X509CRLEntry) r1;
        r3 = virtualinvoke $r4.<java.security.cert.X509CRLEntry: byte[] getEncoded()>();
        $i1 = lengthof r2;
        $i2 = lengthof r3;
        if $i1 == $i2 goto label3;

        $z1 = 0;

     label2:
        return $z1;

     label3:
        i0 = 0;

     label4:
        $i3 = lengthof r2;
        if i0 >= $i3 goto label7;

        $b4 = r2[i0];
        $b5 = r3[i0];
        if $b4 == $b5 goto label6;

        $z2 = 0;

     label5:
        return $z2;

     label6:
        i0 = i0 + 1;
        goto label4;

     label7:
        goto label9;

     label8:
        $r5 := @caughtexception;
        r6 = $r5;
        return 0;

     label9:
        return 1;

        catch java.security.cert.CRLException from label1 to label2 with label8;
        catch java.security.cert.CRLException from label3 to label5 with label8;
        catch java.security.cert.CRLException from label6 to label7 with label8;
    }

    public int hashCode()
    {
        java.security.cert.X509CRLEntry r0;
        int i0, i1, $i2, $i4;
        byte[] r1;
        byte $b3;
        java.security.cert.CRLException $r2, r3;

        r0 := @this: java.security.cert.X509CRLEntry;
        i0 = 0;

     label0:
        r1 = virtualinvoke r0.<java.security.cert.X509CRLEntry: byte[] getEncoded()>();
        i1 = 1;

     label1:
        $i2 = lengthof r1;
        if i1 >= $i2 goto label2;

        $b3 = r1[i1];
        $i4 = $b3 * i1;
        i0 = i0 + $i4;
        i1 = i1 + 1;
        goto label1;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;
        r3 = $r2;
        return i0;

     label4:
        return i0;

        catch java.security.cert.CRLException from label0 to label2 with label3;
    }

    public abstract byte[] getEncoded() throws java.security.cert.CRLException;

    public abstract java.math.BigInteger getSerialNumber();

    public javax.security.auth.x500.X500Principal getCertificateIssuer()
    {
        java.security.cert.X509CRLEntry r0;

        r0 := @this: java.security.cert.X509CRLEntry;
        return null;
    }

    public abstract java.util.Date getRevocationDate();

    public abstract boolean hasExtensions();

    public abstract java.lang.String toString();

    public java.security.cert.CRLReason getRevocationReason()
    {
        java.security.cert.X509CRLEntry r0;
        boolean $z0;
        java.security.cert.CRLReason $r1;

        r0 := @this: java.security.cert.X509CRLEntry;
        $z0 = virtualinvoke r0.<java.security.cert.X509CRLEntry: boolean hasExtensions()>();
        if $z0 != 0 goto label0;

        return null;

     label0:
        $r1 = staticinvoke <sun.security.x509.X509CRLEntryImpl: java.security.cert.CRLReason getRevocationReason(java.security.cert.X509CRLEntry)>(r0);
        return $r1;
    }
}
