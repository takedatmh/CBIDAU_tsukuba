public class java.io.ObjectStreamField extends java.lang.Object implements java.lang.Comparable
{
    private final java.lang.String name;
    private final java.lang.String signature;
    private final java.lang.Class type;
    private final boolean unshared;
    private final java.lang.reflect.Field field;
    private int offset;

    public void <init>(java.lang.String, java.lang.Class)
    {
        java.io.ObjectStreamField r0;
        java.lang.String r1;
        java.lang.Class r2;

        r0 := @this: java.io.ObjectStreamField;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Class;
        specialinvoke r0.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class,boolean)>(r1, r2, 0);
        return;
    }

    public void <init>(java.lang.String, java.lang.Class, boolean)
    {
        java.io.ObjectStreamField r0;
        java.lang.String r1, $r4, $r5;
        java.lang.Class r2;
        boolean z0;
        java.lang.NullPointerException $r3;

        r0 := @this: java.io.ObjectStreamField;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Class;
        z0 := @parameter2: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.ObjectStreamField: int offset> = 0;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label0:
        r0.<java.io.ObjectStreamField: java.lang.String name> = r1;
        r0.<java.io.ObjectStreamField: java.lang.Class type> = r2;
        r0.<java.io.ObjectStreamField: boolean unshared> = z0;
        $r4 = staticinvoke <java.io.ObjectStreamField: java.lang.String getClassSignature(java.lang.Class)>(r2);
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String intern()>();
        r0.<java.io.ObjectStreamField: java.lang.String signature> = $r5;
        r0.<java.io.ObjectStreamField: java.lang.reflect.Field field> = null;
        return;
    }

    void <init>(java.lang.String, java.lang.String, boolean)
    {
        java.io.ObjectStreamField r0;
        java.lang.String r1, r2, $r4;
        boolean z0;
        java.lang.NullPointerException $r3;
        char $c0;
        java.lang.Class $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: java.io.ObjectStreamField;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.ObjectStreamField: int offset> = 0;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label0:
        r0.<java.io.ObjectStreamField: java.lang.String name> = r1;
        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();
        r0.<java.io.ObjectStreamField: java.lang.String signature> = $r4;
        r0.<java.io.ObjectStreamField: boolean unshared> = z0;
        r0.<java.io.ObjectStreamField: java.lang.reflect.Field field> = null;
        $c0 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);
        tableswitch($c0)
        {
            case 66: goto label2;
            case 67: goto label3;
            case 68: goto label8;
            case 69: goto label10;
            case 70: goto label7;
            case 71: goto label10;
            case 72: goto label10;
            case 73: goto label5;
            case 74: goto label6;
            case 75: goto label10;
            case 76: goto label9;
            case 77: goto label10;
            case 78: goto label10;
            case 79: goto label10;
            case 80: goto label10;
            case 81: goto label10;
            case 82: goto label10;
            case 83: goto label4;
            case 84: goto label10;
            case 85: goto label10;
            case 86: goto label10;
            case 87: goto label10;
            case 88: goto label10;
            case 89: goto label10;
            case 90: goto label1;
            case 91: goto label9;
            default: goto label10;
        };

     label1:
        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;
        r0.<java.io.ObjectStreamField: java.lang.Class type> = $r5;
        goto label11;

     label2:
        $r6 = <java.lang.Byte: java.lang.Class TYPE>;
        r0.<java.io.ObjectStreamField: java.lang.Class type> = $r6;
        goto label11;

     label3:
        $r7 = <java.lang.Character: java.lang.Class TYPE>;
        r0.<java.io.ObjectStreamField: java.lang.Class type> = $r7;
        goto label11;

     label4:
        $r8 = <java.lang.Short: java.lang.Class TYPE>;
        r0.<java.io.ObjectStreamField: java.lang.Class type> = $r8;
        goto label11;

     label5:
        $r9 = <java.lang.Integer: java.lang.Class TYPE>;
        r0.<java.io.ObjectStreamField: java.lang.Class type> = $r9;
        goto label11;

     label6:
        $r10 = <java.lang.Long: java.lang.Class TYPE>;
        r0.<java.io.ObjectStreamField: java.lang.Class type> = $r10;
        goto label11;

     label7:
        $r11 = <java.lang.Float: java.lang.Class TYPE>;
        r0.<java.io.ObjectStreamField: java.lang.Class type> = $r11;
        goto label11;

     label8:
        $r12 = <java.lang.Double: java.lang.Class TYPE>;
        r0.<java.io.ObjectStreamField: java.lang.Class type> = $r12;
        goto label11;

     label9:
        r0.<java.io.ObjectStreamField: java.lang.Class type> = class "java/lang/Object";
        goto label11;

     label10:
        $r13 = new java.lang.IllegalArgumentException;
        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal signature");
        throw $r13;

     label11:
        return;
    }

    void <init>(java.lang.reflect.Field, boolean, boolean)
    {
        java.io.ObjectStreamField r0;
        java.lang.reflect.Field r1;
        boolean z0, z1, $z2;
        java.lang.Class r2, $r5;
        java.lang.String $r3, $r6, $r7;

        r0 := @this: java.io.ObjectStreamField;
        r1 := @parameter0: java.lang.reflect.Field;
        z0 := @parameter1: boolean;
        z1 := @parameter2: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.ObjectStreamField: int offset> = 0;
        r0.<java.io.ObjectStreamField: java.lang.reflect.Field field> = r1;
        r0.<java.io.ObjectStreamField: boolean unshared> = z0;
        $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();
        r0.<java.io.ObjectStreamField: java.lang.String name> = $r3;
        r2 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getType()>();
        if z1 != 0 goto label0;

        $z2 = virtualinvoke r2.<java.lang.Class: boolean isPrimitive()>();
        if $z2 == 0 goto label1;

     label0:
        $r5 = r2;
        goto label2;

     label1:
        $r5 = class "java/lang/Object";

     label2:
        r0.<java.io.ObjectStreamField: java.lang.Class type> = $r5;
        $r6 = staticinvoke <java.io.ObjectStreamField: java.lang.String getClassSignature(java.lang.Class)>(r2);
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();
        r0.<java.io.ObjectStreamField: java.lang.String signature> = $r7;
        return;
    }

    public java.lang.String getName()
    {
        java.io.ObjectStreamField r0;
        java.lang.String $r1;

        r0 := @this: java.io.ObjectStreamField;
        $r1 = r0.<java.io.ObjectStreamField: java.lang.String name>;
        return $r1;
    }

    public java.lang.Class getType()
    {
        java.io.ObjectStreamField r0;
        java.lang.SecurityManager $r1;
        java.lang.Class r2, $r4, $r6, $r7;
        java.lang.ClassLoader $r3, $r5;
        boolean $z0;

        r0 := @this: java.io.ObjectStreamField;
        $r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if $r1 == null goto label0;

        r2 = staticinvoke <sun.reflect.Reflection: java.lang.Class getCallerClass()>();
        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        $r4 = r0.<java.io.ObjectStreamField: java.lang.Class type>;
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        $z0 = staticinvoke <sun.reflect.misc.ReflectUtil: boolean needsPackageAccessCheck(java.lang.ClassLoader,java.lang.ClassLoader)>($r3, $r5);
        if $z0 == 0 goto label0;

        $r6 = r0.<java.io.ObjectStreamField: java.lang.Class type>;
        staticinvoke <sun.reflect.misc.ReflectUtil: void checkPackageAccess(java.lang.Class)>($r6);

     label0:
        $r7 = r0.<java.io.ObjectStreamField: java.lang.Class type>;
        return $r7;
    }

    public char getTypeCode()
    {
        java.io.ObjectStreamField r0;
        java.lang.String $r1;
        char $c0;

        r0 := @this: java.io.ObjectStreamField;
        $r1 = r0.<java.io.ObjectStreamField: java.lang.String signature>;
        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);
        return $c0;
    }

    public java.lang.String getTypeString()
    {
        java.io.ObjectStreamField r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: java.io.ObjectStreamField;
        $z0 = virtualinvoke r0.<java.io.ObjectStreamField: boolean isPrimitive()>();
        if $z0 == 0 goto label0;

        $r1 = null;
        goto label1;

     label0:
        $r1 = r0.<java.io.ObjectStreamField: java.lang.String signature>;

     label1:
        return $r1;
    }

    public int getOffset()
    {
        java.io.ObjectStreamField r0;
        int $i0;

        r0 := @this: java.io.ObjectStreamField;
        $i0 = r0.<java.io.ObjectStreamField: int offset>;
        return $i0;
    }

    protected void setOffset(int)
    {
        java.io.ObjectStreamField r0;
        int i0;

        r0 := @this: java.io.ObjectStreamField;
        i0 := @parameter0: int;
        r0.<java.io.ObjectStreamField: int offset> = i0;
        return;
    }

    public boolean isPrimitive()
    {
        java.io.ObjectStreamField r0;
        char c0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: java.io.ObjectStreamField;
        $r1 = r0.<java.io.ObjectStreamField: java.lang.String signature>;
        c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);
        if c0 == 76 goto label0;

        if c0 == 91 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isUnshared()
    {
        java.io.ObjectStreamField r0;
        boolean $z0;

        r0 := @this: java.io.ObjectStreamField;
        $z0 = r0.<java.io.ObjectStreamField: boolean unshared>;
        return $z0;
    }

    public int compareTo(java.lang.Object)
    {
        java.io.ObjectStreamField r0, r2;
        java.lang.Object r1;
        boolean z0, $z1;
        byte $b0;
        java.lang.String $r3, $r4;
        int $i1;

        r0 := @this: java.io.ObjectStreamField;
        r1 := @parameter0: java.lang.Object;
        r2 = (java.io.ObjectStreamField) r1;
        z0 = virtualinvoke r0.<java.io.ObjectStreamField: boolean isPrimitive()>();
        $z1 = virtualinvoke r2.<java.io.ObjectStreamField: boolean isPrimitive()>();
        if z0 == $z1 goto label2;

        if z0 == 0 goto label0;

        $b0 = -1;
        goto label1;

     label0:
        $b0 = 1;

     label1:
        return $b0;

     label2:
        $r3 = r0.<java.io.ObjectStreamField: java.lang.String name>;
        $r4 = r2.<java.io.ObjectStreamField: java.lang.String name>;
        $i1 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);
        return $i1;
    }

    public java.lang.String toString()
    {
        java.io.ObjectStreamField r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r0 := @this: java.io.ObjectStreamField;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = r0.<java.io.ObjectStreamField: java.lang.String signature>;
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r5 = r0.<java.io.ObjectStreamField: java.lang.String name>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    java.lang.reflect.Field getField()
    {
        java.io.ObjectStreamField r0;
        java.lang.reflect.Field $r1;

        r0 := @this: java.io.ObjectStreamField;
        $r1 = r0.<java.io.ObjectStreamField: java.lang.reflect.Field field>;
        return $r1;
    }

    java.lang.String getSignature()
    {
        java.io.ObjectStreamField r0;
        java.lang.String $r1;

        r0 := @this: java.io.ObjectStreamField;
        $r1 = r0.<java.io.ObjectStreamField: java.lang.String signature>;
        return $r1;
    }

    private static java.lang.String getClassSignature(java.lang.Class)
    {
        java.lang.Class r0, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;
        java.lang.StringBuilder $r1, r2, $r23, $r24, $r27, $r28;
        boolean $z0, $z1;
        java.lang.InternalError $r22;
        java.lang.String $r25, $r26, $r29, $r31;

        r0 := @parameter0: java.lang.Class;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;

     label0:
        $z0 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();
        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);
        r0 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();
        goto label0;

     label1:
        $z1 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();
        if $z1 == 0 goto label11;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;
        if r0 != $r4 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(73);
        goto label12;

     label2:
        $r6 = <java.lang.Byte: java.lang.Class TYPE>;
        if r0 != $r6 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(66);
        goto label12;

     label3:
        $r8 = <java.lang.Long: java.lang.Class TYPE>;
        if r0 != $r8 goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(74);
        goto label12;

     label4:
        $r10 = <java.lang.Float: java.lang.Class TYPE>;
        if r0 != $r10 goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(70);
        goto label12;

     label5:
        $r12 = <java.lang.Double: java.lang.Class TYPE>;
        if r0 != $r12 goto label6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(68);
        goto label12;

     label6:
        $r14 = <java.lang.Short: java.lang.Class TYPE>;
        if r0 != $r14 goto label7;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(83);
        goto label12;

     label7:
        $r16 = <java.lang.Character: java.lang.Class TYPE>;
        if r0 != $r16 goto label8;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(67);
        goto label12;

     label8:
        $r18 = <java.lang.Boolean: java.lang.Class TYPE>;
        if r0 != $r18 goto label9;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);
        goto label12;

     label9:
        $r20 = <java.lang.Void: java.lang.Class TYPE>;
        if r0 != $r20 goto label10;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(86);
        goto label12;

     label10:
        $r22 = new java.lang.InternalError;
        specialinvoke $r22.<java.lang.InternalError: void <init>()>();
        throw $r22;

     label11:
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(76);
        $r25 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();
        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

     label12:
        $r31 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r31;
    }
}
