public class org.apache.tomcat.util.net.NioEndpoint$Acceptor extends org.apache.tomcat.util.net.AbstractEndpoint$Acceptor
{
    final org.apache.tomcat.util.net.NioEndpoint this$0;

    protected void <init>(org.apache.tomcat.util.net.NioEndpoint)
    {
        org.apache.tomcat.util.net.NioEndpoint$Acceptor r0;
        org.apache.tomcat.util.net.NioEndpoint r1;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Acceptor;
        r1 := @parameter0: org.apache.tomcat.util.net.NioEndpoint;
        r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0> = r1;
        specialinvoke r0.<org.apache.tomcat.util.net.AbstractEndpoint$Acceptor: void <init>()>();
        return;
    }

    public void run()
    {
        org.apache.tomcat.util.net.NioEndpoint$Acceptor r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint$Acceptor$AcceptorState $r1, $r9, $r49;
        java.lang.InterruptedException r2, $r5;
        java.io.IOException r3, $r14, $r26, r27;
        java.lang.Throwable r4, $r37, r38, $r40, $r41, r42, $r43, r44;
        org.apache.tomcat.util.net.NioEndpoint $r6, $r7, $r8, $r10, $r11, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r28, $r34, $r35, $r48;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        null_type n0;
        java.nio.channels.ServerSocketChannel $r12;
        java.nio.channels.SocketChannel r13;
        java.net.SocketTimeoutException $r24, r25;
        org.apache.juli.logging.Log $r29, $r36, $r45;
        org.apache.tomcat.util.res.StringManager $r30, $r46;
        java.lang.String $r31, $r47;
        java.lang.OutOfMemoryError $r32, r33;
        java.io.PrintStream $r39;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Acceptor;
        i0 = 0;
        goto label26;

     label0:
        $r1 = <org.apache.tomcat.util.net.AbstractEndpoint$Acceptor$AcceptorState: org.apache.tomcat.util.net.AbstractEndpoint$Acceptor$AcceptorState PAUSED>;
        r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.AbstractEndpoint$Acceptor$AcceptorState state> = $r1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(50L);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r2 = $r5;

     label4:
        $r6 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z0 = $r6.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z0 == 0 goto label5;

        $r7 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z1 = $r7.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z1 != 0 goto label0;

     label5:
        $r8 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z2 = $r8.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z2 != 0 goto label6;

        goto label27;

     label6:
        $r9 = <org.apache.tomcat.util.net.AbstractEndpoint$Acceptor$AcceptorState: org.apache.tomcat.util.net.AbstractEndpoint$Acceptor$AcceptorState RUNNING>;
        r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.AbstractEndpoint$Acceptor$AcceptorState state> = $r9;

     label7:
        $r10 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        virtualinvoke $r10.<org.apache.tomcat.util.net.NioEndpoint: void countUpOrAwaitConnection()>();
        n0 = null;

     label8:
        $r11 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r12 = $r11.<org.apache.tomcat.util.net.NioEndpoint: java.nio.channels.ServerSocketChannel serverSock>;
        r13 = virtualinvoke $r12.<java.nio.channels.ServerSocketChannel: java.nio.channels.SocketChannel accept()>();

     label9:
        goto label11;

     label10:
        $r14 := @caughtexception;
        r3 = $r14;
        $r15 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        virtualinvoke $r15.<org.apache.tomcat.util.net.NioEndpoint: long countDownConnection()>();
        $r16 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        i0 = virtualinvoke $r16.<org.apache.tomcat.util.net.NioEndpoint: int handleExceptionWithDelay(int)>(i0);
        throw r3;

     label11:
        i0 = 0;
        $r17 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z3 = $r17.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z3 == 0 goto label12;

        $r18 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z4 = $r18.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z4 != 0 goto label12;

        $r19 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z5 = virtualinvoke $r19.<org.apache.tomcat.util.net.NioEndpoint: boolean setSocketOptions(java.nio.channels.SocketChannel)>(r13);
        if $z5 != 0 goto label26;

        $r20 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        virtualinvoke $r20.<org.apache.tomcat.util.net.NioEndpoint: long countDownConnection()>();
        $r21 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        staticinvoke <org.apache.tomcat.util.net.NioEndpoint: void access$0(org.apache.tomcat.util.net.NioEndpoint,java.nio.channels.SocketChannel)>($r21, r13);
        goto label26;

     label12:
        $r22 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        virtualinvoke $r22.<org.apache.tomcat.util.net.NioEndpoint: long countDownConnection()>();
        $r23 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        staticinvoke <org.apache.tomcat.util.net.NioEndpoint: void access$0(org.apache.tomcat.util.net.NioEndpoint,java.nio.channels.SocketChannel)>($r23, r13);

     label13:
        goto label26;

     label14:
        $r24 := @caughtexception;
        r25 = $r24;
        goto label26;

     label15:
        $r26 := @caughtexception;
        r27 = $r26;
        $r28 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z6 = $r28.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z6 == 0 goto label26;

        $r29 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r30 = <org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r31 = virtualinvoke $r30.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.accept.fail");
        interfaceinvoke $r29.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r31, r27);
        goto label26;

     label16:
        $r32 := @caughtexception;
        r33 = $r32;

     label17:
        $r34 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r34.<org.apache.tomcat.util.net.NioEndpoint: byte[] oomParachuteData> = null;
        $r35 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        virtualinvoke $r35.<org.apache.tomcat.util.net.NioEndpoint: void releaseCaches()>();
        $r36 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r36.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("", r33);

     label18:
        goto label26;

     label19:
        $r37 := @caughtexception;
        r38 = $r37;

     label20:
        $r39 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("SEVERE:Memory usage is low, parachute is non existent, your system may start failing.");
        virtualinvoke r38.<java.lang.Throwable: void printStackTrace()>();

     label21:
        goto label26;

     label22:
        $r40 := @caughtexception;
        r4 = $r40;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r4);

     label23:
        goto label26;

     label24:
        $r41 := @caughtexception;
        r42 = $r41;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r42);
        goto label26;

     label25:
        $r43 := @caughtexception;
        r44 = $r43;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r44);
        $r45 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r46 = <org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r47 = virtualinvoke $r46.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.accept.fail");
        interfaceinvoke $r45.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r47, r44);

     label26:
        $r48 = r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z7 = $r48.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z7 != 0 goto label4;

     label27:
        $r49 = <org.apache.tomcat.util.net.AbstractEndpoint$Acceptor$AcceptorState: org.apache.tomcat.util.net.AbstractEndpoint$Acceptor$AcceptorState ENDED>;
        r0.<org.apache.tomcat.util.net.NioEndpoint$Acceptor: org.apache.tomcat.util.net.AbstractEndpoint$Acceptor$AcceptorState state> = $r49;
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.io.IOException from label8 to label9 with label10;
        catch java.net.SocketTimeoutException from label7 to label13 with label14;
        catch java.io.IOException from label7 to label13 with label15;
        catch java.lang.OutOfMemoryError from label7 to label13 with label16;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label20 to label23 with label24;
        catch java.lang.Throwable from label7 to label13 with label25;
    }
}
