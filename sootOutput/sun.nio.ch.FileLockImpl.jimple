public class sun.nio.ch.FileLockImpl extends java.nio.channels.FileLock
{
    private volatile boolean valid;
    static final boolean $assertionsDisabled;

    void <init>(java.nio.channels.FileChannel, long, long, boolean)
    {
        sun.nio.ch.FileLockImpl r0;
        java.nio.channels.FileChannel r1;
        long l0, l1;
        boolean z0;

        r0 := @this: sun.nio.ch.FileLockImpl;
        r1 := @parameter0: java.nio.channels.FileChannel;
        l0 := @parameter1: long;
        l1 := @parameter2: long;
        z0 := @parameter3: boolean;
        specialinvoke r0.<java.nio.channels.FileLock: void <init>(java.nio.channels.FileChannel,long,long,boolean)>(r1, l0, l1, z0);
        r0.<sun.nio.ch.FileLockImpl: boolean valid> = 1;
        return;
    }

    void <init>(java.nio.channels.AsynchronousFileChannel, long, long, boolean)
    {
        sun.nio.ch.FileLockImpl r0;
        java.nio.channels.AsynchronousFileChannel r1;
        long l0, l1;
        boolean z0;

        r0 := @this: sun.nio.ch.FileLockImpl;
        r1 := @parameter0: java.nio.channels.AsynchronousFileChannel;
        l0 := @parameter1: long;
        l1 := @parameter2: long;
        z0 := @parameter3: boolean;
        specialinvoke r0.<java.nio.channels.FileLock: void <init>(java.nio.channels.AsynchronousFileChannel,long,long,boolean)>(r1, l0, l1, z0);
        r0.<sun.nio.ch.FileLockImpl: boolean valid> = 1;
        return;
    }

    public boolean isValid()
    {
        sun.nio.ch.FileLockImpl r0;
        boolean $z0;

        r0 := @this: sun.nio.ch.FileLockImpl;
        $z0 = r0.<sun.nio.ch.FileLockImpl: boolean valid>;
        return $z0;
    }

    void invalidate()
    {
        sun.nio.ch.FileLockImpl r0;
        boolean $z0, $z1;
        java.lang.AssertionError $r1;

        r0 := @this: sun.nio.ch.FileLockImpl;
        $z0 = <sun.nio.ch.FileLockImpl: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);
        if $z1 != 0 goto label0;

        $r1 = new java.lang.AssertionError;
        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();
        throw $r1;

     label0:
        r0.<sun.nio.ch.FileLockImpl: boolean valid> = 0;
        return;
    }

    public synchronized void release() throws java.io.IOException
    {
        sun.nio.ch.FileLockImpl r0;
        java.nio.channels.Channel r1;
        boolean $z0, $z1, $z2, $z3;
        java.nio.channels.ClosedChannelException $r2;
        sun.nio.ch.FileChannelImpl $r3;
        sun.nio.ch.AsynchronousFileChannelImpl $r4;
        java.lang.AssertionError $r5;

        r0 := @this: sun.nio.ch.FileLockImpl;
        r1 = virtualinvoke r0.<sun.nio.ch.FileLockImpl: java.nio.channels.Channel acquiredBy()>();
        $z0 = interfaceinvoke r1.<java.nio.channels.Channel: boolean isOpen()>();
        if $z0 != 0 goto label0;

        $r2 = new java.nio.channels.ClosedChannelException;
        specialinvoke $r2.<java.nio.channels.ClosedChannelException: void <init>()>();
        throw $r2;

     label0:
        $z1 = r0.<sun.nio.ch.FileLockImpl: boolean valid>;
        if $z1 == 0 goto label4;

        $z2 = r1 instanceof sun.nio.ch.FileChannelImpl;
        if $z2 == 0 goto label1;

        $r3 = (sun.nio.ch.FileChannelImpl) r1;
        virtualinvoke $r3.<sun.nio.ch.FileChannelImpl: void release(sun.nio.ch.FileLockImpl)>(r0);
        goto label3;

     label1:
        $z3 = r1 instanceof sun.nio.ch.AsynchronousFileChannelImpl;
        if $z3 == 0 goto label2;

        $r4 = (sun.nio.ch.AsynchronousFileChannelImpl) r1;
        virtualinvoke $r4.<sun.nio.ch.AsynchronousFileChannelImpl: void release(sun.nio.ch.FileLockImpl)>(r0);
        goto label3;

     label2:
        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        throw $r5;

     label3:
        r0.<sun.nio.ch.FileLockImpl: boolean valid> = 0;

     label4:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "sun/nio/ch/FileLockImpl";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <sun.nio.ch.FileLockImpl: boolean $assertionsDisabled> = $z1;
        return;
    }
}
