public class sun.security.x509.DistributionPoint extends java.lang.Object
{
    public static final int KEY_COMPROMISE;
    public static final int CA_COMPROMISE;
    public static final int AFFILIATION_CHANGED;
    public static final int SUPERSEDED;
    public static final int CESSATION_OF_OPERATION;
    public static final int CERTIFICATE_HOLD;
    public static final int PRIVILEGE_WITHDRAWN;
    public static final int AA_COMPROMISE;
    private static final java.lang.String[] REASON_STRINGS;
    private static final byte TAG_DIST_PT;
    private static final byte TAG_REASONS;
    private static final byte TAG_ISSUER;
    private static final byte TAG_FULL_NAME;
    private static final byte TAG_REL_NAME;
    private sun.security.x509.GeneralNames fullName;
    private sun.security.x509.RDN relativeName;
    private boolean[] reasonFlags;
    private sun.security.x509.GeneralNames crlIssuer;
    private volatile int hashCode;

    public void <init>(sun.security.x509.GeneralNames, boolean[], sun.security.x509.GeneralNames)
    {
        sun.security.x509.DistributionPoint r0;
        sun.security.x509.GeneralNames r1, r3;
        boolean[] r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: sun.security.x509.DistributionPoint;
        r1 := @parameter0: sun.security.x509.GeneralNames;
        r2 := @parameter1: boolean[];
        r3 := @parameter2: sun.security.x509.GeneralNames;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        if r3 != null goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fullName and crlIssuer may not both be null");
        throw $r4;

     label0:
        r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName> = r1;
        r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags> = r2;
        r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer> = r3;
        return;
    }

    public void <init>(sun.security.x509.RDN, boolean[], sun.security.x509.GeneralNames)
    {
        sun.security.x509.DistributionPoint r0;
        sun.security.x509.RDN r1;
        boolean[] r2;
        sun.security.x509.GeneralNames r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: sun.security.x509.DistributionPoint;
        r1 := @parameter0: sun.security.x509.RDN;
        r2 := @parameter1: boolean[];
        r3 := @parameter2: sun.security.x509.GeneralNames;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        if r3 != null goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("relativeName and crlIssuer may not both be null");
        throw $r4;

     label0:
        r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName> = r1;
        r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags> = r2;
        r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer> = r3;
        return;
    }

    public void <init>(sun.security.util.DerValue) throws java.io.IOException
    {
        sun.security.x509.DistributionPoint r0;
        sun.security.util.DerValue r1, r2, r3;
        byte $b0;
        java.io.IOException $r4, $r10, $r14, $r16, $r20, $r22, $r26;
        sun.security.util.DerInputStream $r5, $r6, $r7, $r11;
        int $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        sun.security.x509.GeneralNames $r8, $r12, $r19, $r21, $r23, $r24;
        sun.security.x509.RDN $r9, $r13, $r25;
        boolean[] $r15, $r18;
        sun.security.util.BitArray $r17;

        r0 := @this: sun.security.x509.DistributionPoint;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $b0 = r1.<sun.security.util.DerValue: byte tag>;
        if $b0 == 48 goto label0;

        $r4 = new java.io.IOException;
        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Invalid encoding of DistributionPoint.");
        throw $r4;

     label0:
        $r5 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        if $r5 == null goto label12;

        $r6 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i1 = virtualinvoke $r6.<sun.security.util.DerInputStream: int available()>();
        if $i1 == 0 goto label12;

        $r7 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        r2 = virtualinvoke $r7.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $z0 = virtualinvoke r2.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(0);
        if $z0 == 0 goto label6;

        $z1 = virtualinvoke r2.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z1 == 0 goto label6;

        $r8 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        if $r8 != null goto label1;

        $r9 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        if $r9 == null goto label2;

     label1:
        $r10 = new java.io.IOException;
        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("Duplicate DistributionPointName in DistributionPoint.");
        throw $r10;

     label2:
        $r11 = r2.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        r3 = virtualinvoke $r11.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $z2 = virtualinvoke r3.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(0);
        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r3.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z3 == 0 goto label3;

        virtualinvoke r3.<sun.security.util.DerValue: void resetTag(byte)>(48);
        $r12 = new sun.security.x509.GeneralNames;
        specialinvoke $r12.<sun.security.x509.GeneralNames: void <init>(sun.security.util.DerValue)>(r3);
        r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName> = $r12;
        goto label5;

     label3:
        $z4 = virtualinvoke r3.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(1);
        if $z4 == 0 goto label4;

        $z5 = virtualinvoke r3.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z5 == 0 goto label4;

        virtualinvoke r3.<sun.security.util.DerValue: void resetTag(byte)>(49);
        $r13 = new sun.security.x509.RDN;
        specialinvoke $r13.<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>(r3);
        r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName> = $r13;
        goto label5;

     label4:
        $r14 = new java.io.IOException;
        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Invalid DistributionPointName in DistributionPoint");
        throw $r14;

     label5:
        goto label11;

     label6:
        $z6 = virtualinvoke r2.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(1);
        if $z6 == 0 goto label8;

        $z7 = virtualinvoke r2.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z7 != 0 goto label8;

        $r15 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        if $r15 == null goto label7;

        $r16 = new java.io.IOException;
        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("Duplicate Reasons in DistributionPoint.");
        throw $r16;

     label7:
        virtualinvoke r2.<sun.security.util.DerValue: void resetTag(byte)>(3);
        $r17 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.BitArray getUnalignedBitString()>();
        $r18 = virtualinvoke $r17.<sun.security.util.BitArray: boolean[] toBooleanArray()>();
        r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags> = $r18;
        goto label11;

     label8:
        $z8 = virtualinvoke r2.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(2);
        if $z8 == 0 goto label10;

        $z9 = virtualinvoke r2.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z9 == 0 goto label10;

        $r19 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        if $r19 == null goto label9;

        $r20 = new java.io.IOException;
        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>("Duplicate CRLIssuer in DistributionPoint.");
        throw $r20;

     label9:
        virtualinvoke r2.<sun.security.util.DerValue: void resetTag(byte)>(48);
        $r21 = new sun.security.x509.GeneralNames;
        specialinvoke $r21.<sun.security.x509.GeneralNames: void <init>(sun.security.util.DerValue)>(r2);
        r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer> = $r21;
        goto label11;

     label10:
        $r22 = new java.io.IOException;
        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("Invalid encoding of DistributionPoint.");
        throw $r22;

     label11:
        goto label0;

     label12:
        $r23 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        if $r23 != null goto label13;

        $r24 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        if $r24 != null goto label13;

        $r25 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        if $r25 != null goto label13;

        $r26 = new java.io.IOException;
        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>("One of fullName, relativeName,  and crlIssuer has to be set");
        throw $r26;

     label13:
        return;
    }

    public sun.security.x509.GeneralNames getFullName()
    {
        sun.security.x509.DistributionPoint r0;
        sun.security.x509.GeneralNames $r1;

        r0 := @this: sun.security.x509.DistributionPoint;
        $r1 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        return $r1;
    }

    public sun.security.x509.RDN getRelativeName()
    {
        sun.security.x509.DistributionPoint r0;
        sun.security.x509.RDN $r1;

        r0 := @this: sun.security.x509.DistributionPoint;
        $r1 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        return $r1;
    }

    public boolean[] getReasonFlags()
    {
        sun.security.x509.DistributionPoint r0;
        boolean[] $r1;

        r0 := @this: sun.security.x509.DistributionPoint;
        $r1 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        return $r1;
    }

    public sun.security.x509.GeneralNames getCRLIssuer()
    {
        sun.security.x509.DistributionPoint r0;
        sun.security.x509.GeneralNames $r1;

        r0 := @this: sun.security.x509.DistributionPoint;
        $r1 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        return $r1;
    }

    public void encode(sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.x509.DistributionPoint r0;
        sun.security.util.DerOutputStream r1, $r2, r3, r4, r5, $r8, $r10, $r13, r14, $r17, r18, $r23, r24;
        sun.security.x509.GeneralNames $r6, $r9, $r11, $r22, $r25;
        sun.security.x509.RDN $r7, $r12, $r15;
        byte $b0, $b1, $b2, $b3, $b4;
        boolean[] $r16, $r20;
        sun.security.util.BitArray $r19, r21;

        r0 := @this: sun.security.x509.DistributionPoint;
        r1 := @parameter0: sun.security.util.DerOutputStream;
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        $r6 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        if $r6 != null goto label0;

        $r7 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        if $r7 == null goto label3;

     label0:
        $r8 = new sun.security.util.DerOutputStream;
        specialinvoke $r8.<sun.security.util.DerOutputStream: void <init>()>();
        r4 = $r8;
        $r9 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        if $r9 == null goto label1;

        $r10 = new sun.security.util.DerOutputStream;
        specialinvoke $r10.<sun.security.util.DerOutputStream: void <init>()>();
        r5 = $r10;
        $r11 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        virtualinvoke $r11.<sun.security.x509.GeneralNames: void encode(sun.security.util.DerOutputStream)>(r5);
        $b0 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 0);
        virtualinvoke r4.<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>($b0, r5);
        goto label2;

     label1:
        $r12 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        if $r12 == null goto label2;

        $r13 = new sun.security.util.DerOutputStream;
        specialinvoke $r13.<sun.security.util.DerOutputStream: void <init>()>();
        r14 = $r13;
        $r15 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        virtualinvoke $r15.<sun.security.x509.RDN: void encode(sun.security.util.DerOutputStream)>(r14);
        $b1 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 1);
        virtualinvoke r4.<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>($b1, r14);

     label2:
        $b2 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 0);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b2, r4);

     label3:
        $r16 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        if $r16 == null goto label4;

        $r17 = new sun.security.util.DerOutputStream;
        specialinvoke $r17.<sun.security.util.DerOutputStream: void <init>()>();
        r18 = $r17;
        $r19 = new sun.security.util.BitArray;
        $r20 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        specialinvoke $r19.<sun.security.util.BitArray: void <init>(boolean[])>($r20);
        r21 = $r19;
        virtualinvoke r18.<sun.security.util.DerOutputStream: void putTruncatedUnalignedBitString(sun.security.util.BitArray)>(r21);
        $b3 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 0, 1);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>($b3, r18);

     label4:
        $r22 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        if $r22 == null goto label5;

        $r23 = new sun.security.util.DerOutputStream;
        specialinvoke $r23.<sun.security.util.DerOutputStream: void <init>()>();
        r24 = $r23;
        $r25 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        virtualinvoke $r25.<sun.security.x509.GeneralNames: void encode(sun.security.util.DerOutputStream)>(r24);
        $b4 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 2);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>($b4, r24);

     label5:
        virtualinvoke r1.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r3);
        return;
    }

    private static boolean equals(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        if r0 != null goto label1;

        if r1 != null goto label0;

        $z0 = 1;
        goto label2;

     label0:
        $z0 = 0;
        goto label2;

     label1:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label2:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.x509.DistributionPoint r0, r2;
        java.lang.Object r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        sun.security.x509.GeneralNames $r3, $r4, $r7, $r8;
        sun.security.x509.RDN $r5, $r6;
        boolean[] $r9, $r10;

        r0 := @this: sun.security.x509.DistributionPoint;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z1 = r1 instanceof sun.security.x509.DistributionPoint;
        if $z1 != 0 goto label1;

        return 0;

     label1:
        r2 = (sun.security.x509.DistributionPoint) r1;
        $r3 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        $r4 = r2.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        $z2 = staticinvoke <sun.security.x509.DistributionPoint: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);
        if $z2 == 0 goto label2;

        $r5 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        $r6 = r2.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        $z3 = staticinvoke <sun.security.x509.DistributionPoint: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6);
        if $z3 == 0 goto label2;

        $r7 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        $r8 = r2.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        $z4 = staticinvoke <sun.security.x509.DistributionPoint: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8);
        if $z4 == 0 goto label2;

        $r9 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        $r10 = r2.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        $z5 = staticinvoke <java.util.Arrays: boolean equals(boolean[],boolean[])>($r9, $r10);
        if $z5 == 0 goto label2;

        $z6 = 1;
        goto label3;

     label2:
        $z6 = 0;

     label3:
        z0 = $z6;
        return z0;
    }

    public int hashCode()
    {
        sun.security.x509.DistributionPoint r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        sun.security.x509.GeneralNames $r1, $r2, $r5, $r6;
        sun.security.x509.RDN $r3, $r4;
        boolean[] $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: sun.security.x509.DistributionPoint;
        i0 = r0.<sun.security.x509.DistributionPoint: int hashCode>;
        if i0 != 0 goto label6;

        i0 = 1;
        $r1 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        if $r1 == null goto label0;

        $r2 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        $i2 = virtualinvoke $r2.<sun.security.x509.GeneralNames: int hashCode()>();
        i0 = i0 + $i2;

     label0:
        $r3 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        if $r3 == null goto label1;

        $r4 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        $i3 = virtualinvoke $r4.<sun.security.x509.RDN: int hashCode()>();
        i0 = i0 + $i3;

     label1:
        $r5 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        if $r5 == null goto label2;

        $r6 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        $i4 = virtualinvoke $r6.<sun.security.x509.GeneralNames: int hashCode()>();
        i0 = i0 + $i4;

     label2:
        $r7 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        if $r7 == null goto label5;

        i1 = 0;

     label3:
        $r8 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        $i5 = lengthof $r8;
        if i1 >= $i5 goto label5;

        $r9 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        $z0 = $r9[i1];
        if $z0 == 0 goto label4;

        i0 = i0 + i1;

     label4:
        i1 = i1 + 1;
        goto label3;

     label5:
        r0.<sun.security.x509.DistributionPoint: int hashCode> = i0;

     label6:
        return i0;
    }

    private static java.lang.String reasonToString(int)
    {
        int i0, $i1;
        java.lang.String[] $r0, $r1;
        java.lang.String $r2, $r6;
        java.lang.StringBuilder $r3, $r4, $r5;

        i0 := @parameter0: int;
        if i0 <= 0 goto label0;

        $r0 = <sun.security.x509.DistributionPoint: java.lang.String[] REASON_STRINGS>;
        $i1 = lengthof $r0;
        if i0 >= $i1 goto label0;

        $r1 = <sun.security.x509.DistributionPoint: java.lang.String[] REASON_STRINGS>;
        $r2 = $r1[i0];
        return $r2;

     label0:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown reason ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    public java.lang.String toString()
    {
        sun.security.x509.DistributionPoint r0;
        java.lang.StringBuilder $r1, r2, $r4, $r5, $r7, $r8, $r12, $r13, $r15, $r16, $r23, $r24, $r26, $r27, $r31, $r32, $r34, $r35;
        int i0, $i1;
        sun.security.x509.GeneralNames $r3, $r6, $r30, $r33;
        java.lang.String $r9, $r17, $r25, $r28, $r36, $r38;
        sun.security.x509.RDN $r11, $r14;
        boolean[] $r19, $r21, $r22;
        boolean $z0;

        r0 := @this: sun.security.x509.DistributionPoint;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r3 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        if $r3 == null goto label0;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DistributionPoint:\n     ");
        $r6 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames fullName>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label0:
        $r11 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        if $r11 == null goto label1;

        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DistributionPoint:\n     ");
        $r14 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.RDN relativeName>;
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label1:
        $r19 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        if $r19 == null goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ReasonFlags:\n");
        i0 = 0;

     label2:
        $r21 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        $i1 = lengthof $r21;
        if i0 >= $i1 goto label4;

        $r22 = r0.<sun.security.x509.DistributionPoint: boolean[] reasonFlags>;
        $z0 = $r22[i0];
        if $z0 == 0 goto label3;

        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");
        $r25 = staticinvoke <sun.security.x509.DistributionPoint: java.lang.String reasonToString(int)>(i0);
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

     label3:
        i0 = i0 + 1;
        goto label2;

     label4:
        $r30 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        if $r30 == null goto label5;

        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   CRLIssuer:");
        $r33 = r0.<sun.security.x509.DistributionPoint: sun.security.x509.GeneralNames crlIssuer>;
        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

     label5:
        $r38 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r38;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[9];
        $r0[0] = null;
        $r0[1] = "key compromise";
        $r0[2] = "CA compromise";
        $r0[3] = "affiliation changed";
        $r0[4] = "superseded";
        $r0[5] = "cessation of operation";
        $r0[6] = "certificate hold";
        $r0[7] = "privilege withdrawn";
        $r0[8] = "AA compromise";
        <sun.security.x509.DistributionPoint: java.lang.String[] REASON_STRINGS> = $r0;
        return;
    }
}
