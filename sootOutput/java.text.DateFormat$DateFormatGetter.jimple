class java.text.DateFormat$DateFormatGetter extends java.lang.Object implements sun.util.LocaleServiceProviderPool$LocalizedObjectGetter
{
    private static final java.text.DateFormat$DateFormatGetter INSTANCE;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        java.text.DateFormat$DateFormatGetter r0;

        r0 := @this: java.text.DateFormat$DateFormatGetter;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public transient java.text.DateFormat getObject(java.text.spi.DateFormatProvider, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.text.DateFormat$DateFormatGetter r0;
        java.text.spi.DateFormatProvider r1;
        java.util.Locale r2;
        java.lang.String r3;
        java.lang.Object[] r4;
        boolean $z0, $z1;
        int i0, i1, i2, $i3;
        java.lang.AssertionError $r5, $r15;
        java.lang.Object $r6, $r8, $r10;
        java.lang.Integer $r7, $r9, $r11;
        java.text.DateFormat $r12, $r13, $r14;

        r0 := @this: java.text.DateFormat$DateFormatGetter;
        r1 := @parameter0: java.text.spi.DateFormatProvider;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $z0 = <java.text.DateFormat$DateFormatGetter: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $i3 = lengthof r4;
        if $i3 == 3 goto label0;

        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        throw $r5;

     label0:
        $r6 = r4[0];
        $r7 = (java.lang.Integer) $r6;
        i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
        $r8 = r4[1];
        $r9 = (java.lang.Integer) $r8;
        i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();
        $r10 = r4[2];
        $r11 = (java.lang.Integer) $r10;
        i2 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();
        tableswitch(i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r12 = virtualinvoke r1.<java.text.spi.DateFormatProvider: java.text.DateFormat getTimeInstance(int,java.util.Locale)>(i0, r2);
        return $r12;

     label2:
        $r13 = virtualinvoke r1.<java.text.spi.DateFormatProvider: java.text.DateFormat getDateInstance(int,java.util.Locale)>(i1, r2);
        return $r13;

     label3:
        $r14 = virtualinvoke r1.<java.text.spi.DateFormatProvider: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>(i1, i0, r2);
        return $r14;

     label4:
        $z1 = <java.text.DateFormat$DateFormatGetter: boolean $assertionsDisabled>;
        if $z1 != 0 goto label5;

        $r15 = new java.lang.AssertionError;
        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>("should not happen");
        throw $r15;

     label5:
        return null;
    }

    public volatile java.lang.Object getObject(java.lang.Object, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.text.DateFormat$DateFormatGetter r0;
        java.lang.Object r1;
        java.util.Locale r2;
        java.lang.String r3;
        java.lang.Object[] r4;
        java.text.spi.DateFormatProvider $r5;
        java.text.DateFormat $r6;

        r0 := @this: java.text.DateFormat$DateFormatGetter;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $r5 = (java.text.spi.DateFormatProvider) r1;
        $r6 = virtualinvoke r0.<java.text.DateFormat$DateFormatGetter: java.text.DateFormat getObject(java.text.spi.DateFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>($r5, r2, r3, r4);
        return $r6;
    }

    static java.text.DateFormat$DateFormatGetter access$000()
    {
        java.text.DateFormat$DateFormatGetter $r0;

        $r0 = <java.text.DateFormat$DateFormatGetter: java.text.DateFormat$DateFormatGetter INSTANCE>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.text.DateFormat$DateFormatGetter $r1;

        $r0 = class "java/text/DateFormat";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.text.DateFormat$DateFormatGetter: boolean $assertionsDisabled> = $z1;
        $r1 = new java.text.DateFormat$DateFormatGetter;
        specialinvoke $r1.<java.text.DateFormat$DateFormatGetter: void <init>()>();
        <java.text.DateFormat$DateFormatGetter: java.text.DateFormat$DateFormatGetter INSTANCE> = $r1;
        return;
    }
}
