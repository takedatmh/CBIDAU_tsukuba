final class org.apache.catalina.startup.LifecycleCallbackRule extends org.apache.tomcat.util.digester.CallMethodRule
{
    private final boolean postConstruct;

    public void <init>(java.lang.String, int, boolean)
    {
        org.apache.catalina.startup.LifecycleCallbackRule r0;
        java.lang.String r1;
        int i0;
        boolean z0;

        r0 := @this: org.apache.catalina.startup.LifecycleCallbackRule;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        specialinvoke r0.<org.apache.tomcat.util.digester.CallMethodRule: void <init>(java.lang.String,int)>(r1, i0);
        r0.<org.apache.catalina.startup.LifecycleCallbackRule: boolean postConstruct> = z0;
        return;
    }

    public void end(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.startup.LifecycleCallbackRule r0;
        java.lang.String r1, r2, $r15, $r22;
        java.lang.Object[] r3, $r13, $r20;
        org.apache.catalina.deploy.WebXml r4;
        org.apache.tomcat.util.digester.Digester $r5, $r7;
        java.lang.Object $r6, $r8, $r10, $r14, $r17, $r21;
        int $i0;
        boolean $z0, $z1, $z2;
        java.util.Map $r9, $r16;
        java.lang.IllegalArgumentException $r11, $r18;
        org.apache.tomcat.util.res.StringManager $r12, $r19;

        r0 := @this: org.apache.catalina.startup.LifecycleCallbackRule;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r5 = r0.<org.apache.catalina.startup.LifecycleCallbackRule: org.apache.tomcat.util.digester.Digester digester>;
        $r6 = virtualinvoke $r5.<org.apache.tomcat.util.digester.Digester: java.lang.Object peekParams()>();
        r3 = (java.lang.Object[]) $r6;
        if r3 == null goto label1;

        $i0 = lengthof r3;
        if $i0 != 2 goto label1;

        $r7 = r0.<org.apache.catalina.startup.LifecycleCallbackRule: org.apache.tomcat.util.digester.Digester digester>;
        $r8 = virtualinvoke $r7.<org.apache.tomcat.util.digester.Digester: java.lang.Object peek()>();
        r4 = (org.apache.catalina.deploy.WebXml) $r8;
        $z0 = r0.<org.apache.catalina.startup.LifecycleCallbackRule: boolean postConstruct>;
        if $z0 == 0 goto label0;

        $r9 = virtualinvoke r4.<org.apache.catalina.deploy.WebXml: java.util.Map getPostConstructMethods()>();
        $r10 = r3[0];
        $z1 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>($r10);
        if $z1 == 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;
        $r12 = <org.apache.catalina.startup.WebRuleSet: org.apache.tomcat.util.res.StringManager sm>;
        $r13 = newarray (java.lang.Object)[1];
        $r14 = r3[0];
        $r13[0] = $r14;
        $r15 = virtualinvoke $r12.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webRuleSet.postconstruct.duplicate", $r13);
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);
        throw $r11;

     label0:
        $r16 = virtualinvoke r4.<org.apache.catalina.deploy.WebXml: java.util.Map getPreDestroyMethods()>();
        $r17 = r3[0];
        $z2 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>($r17);
        if $z2 == 0 goto label1;

        $r18 = new java.lang.IllegalArgumentException;
        $r19 = <org.apache.catalina.startup.WebRuleSet: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = newarray (java.lang.Object)[1];
        $r21 = r3[0];
        $r20[0] = $r21;
        $r22 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webRuleSet.predestroy.duplicate", $r20);
        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);
        throw $r18;

     label1:
        specialinvoke r0.<org.apache.tomcat.util.digester.CallMethodRule: void end(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }
}
