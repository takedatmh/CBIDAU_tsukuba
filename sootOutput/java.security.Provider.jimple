public abstract class java.security.Provider extends java.util.Properties
{
    static final long serialVersionUID;
    private static final sun.security.util.Debug debug;
    private java.lang.String name;
    private java.lang.String info;
    private double version;
    private transient java.util.Set entrySet;
    private transient int entrySetCallCount;
    private transient boolean initialized;
    private transient boolean legacyChanged;
    private transient boolean servicesChanged;
    private transient java.util.Map legacyStrings;
    private transient java.util.Map serviceMap;
    private transient java.util.Map legacyMap;
    private transient java.util.Set serviceSet;
    private static final java.lang.String ALIAS_PREFIX;
    private static final java.lang.String ALIAS_PREFIX_LOWER;
    private static final int ALIAS_LENGTH;
    private static volatile java.security.Provider$ServiceKey previousKey;
    private static final java.util.Map knownEngines;

    protected void <init>(java.lang.String, double, java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, r2;
        double d0;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.String;
        d0 := @parameter1: double;
        r2 := @parameter2: java.lang.String;
        specialinvoke r0.<java.util.Properties: void <init>()>();
        r0.<java.security.Provider: java.util.Set entrySet> = null;
        r0.<java.security.Provider: int entrySetCallCount> = 0;
        r0.<java.security.Provider: java.lang.String name> = r1;
        r0.<java.security.Provider: double version> = d0;
        r0.<java.security.Provider: java.lang.String info> = r2;
        specialinvoke r0.<java.security.Provider: void putId()>();
        r0.<java.security.Provider: boolean initialized> = 1;
        return;
    }

    public java.lang.String getName()
    {
        java.security.Provider r0;
        java.lang.String $r1;

        r0 := @this: java.security.Provider;
        $r1 = r0.<java.security.Provider: java.lang.String name>;
        return $r1;
    }

    public double getVersion()
    {
        java.security.Provider r0;
        double $d0;

        r0 := @this: java.security.Provider;
        $d0 = r0.<java.security.Provider: double version>;
        return $d0;
    }

    public java.lang.String getInfo()
    {
        java.security.Provider r0;
        java.lang.String $r1;

        r0 := @this: java.security.Provider;
        $r1 = r0.<java.security.Provider: java.lang.String info>;
        return $r1;
    }

    public java.lang.String toString()
    {
        java.security.Provider r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5;
        java.lang.String $r2, $r6;
        double $d0;

        r0 := @this: java.security.Provider;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = r0.<java.security.Provider: java.lang.String name>;
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version ");
        $d0 = r0.<java.security.Provider: double version>;
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    public synchronized void clear()
    {
        java.security.Provider r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r8, $r9, $r11, $r12;
        java.lang.String $r3, $r5, $r10, $r13;
        sun.security.util.Debug $r6, $r7;

        r0 := @this: java.security.Provider;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearProviderProperties.");
        $r3 = r0.<java.security.Provider: java.lang.String name>;
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.security.Provider: void check(java.lang.String)>($r5);
        $r6 = <java.security.Provider: sun.security.util.Debug debug>;
        if $r6 == null goto label0;

        $r7 = <java.security.Provider: sun.security.util.Debug debug>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove ");
        $r10 = r0.<java.security.Provider: java.lang.String name>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider properties");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<sun.security.util.Debug: void println(java.lang.String)>($r13);

     label0:
        specialinvoke r0.<java.security.Provider: void implClear()>();
        return;
    }

    public synchronized void load(java.io.InputStream) throws java.io.IOException
    {
        java.security.Provider r0;
        java.io.InputStream r1;
        java.lang.StringBuilder $r2, $r4, $r6, $r10, $r11, $r13, $r14;
        java.util.Properties r3, $r16;
        java.lang.String $r5, $r7, $r12, $r15;
        sun.security.util.Debug $r8, $r9;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.io.InputStream;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("putProviderProperty.");
        $r5 = r0.<java.security.Provider: java.lang.String name>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.security.Provider: void check(java.lang.String)>($r7);
        $r8 = <java.security.Provider: sun.security.util.Debug debug>;
        if $r8 == null goto label0;

        $r9 = <java.security.Provider: sun.security.util.Debug debug>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Load ");
        $r12 = r0.<java.security.Provider: java.lang.String name>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider properties");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r9.<sun.security.util.Debug: void println(java.lang.String)>($r15);

     label0:
        $r16 = new java.util.Properties;
        specialinvoke $r16.<java.util.Properties: void <init>()>();
        r3 = $r16;
        virtualinvoke r3.<java.util.Properties: void load(java.io.InputStream)>(r1);
        specialinvoke r0.<java.security.Provider: void implPutAll(java.util.Map)>(r3);
        return;
    }

    public synchronized void putAll(java.util.Map)
    {
        java.security.Provider r0;
        java.util.Map r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r9, $r10, $r12, $r13;
        java.lang.String $r4, $r6, $r11, $r14;
        sun.security.util.Debug $r7, $r8;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.util.Map;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("putProviderProperty.");
        $r4 = r0.<java.security.Provider: java.lang.String name>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.security.Provider: void check(java.lang.String)>($r6);
        $r7 = <java.security.Provider: sun.security.util.Debug debug>;
        if $r7 == null goto label0;

        $r8 = <java.security.Provider: sun.security.util.Debug debug>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Put all ");
        $r11 = r0.<java.security.Provider: java.lang.String name>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider properties");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r8.<sun.security.util.Debug: void println(java.lang.String)>($r14);

     label0:
        specialinvoke r0.<java.security.Provider: void implPutAll(java.util.Map)>(r1);
        return;
    }

    public synchronized java.util.Set entrySet()
    {
        java.security.Provider r0;
        int $i0, $i1, $i2;
        java.util.Set $r1, $r4, $r5, $r7;
        java.util.Map $r3;
        java.lang.RuntimeException $r6;

        r0 := @this: java.security.Provider;
        specialinvoke r0.<java.security.Provider: void checkInitialized()>();
        $r1 = r0.<java.security.Provider: java.util.Set entrySet>;
        if $r1 != null goto label1;

        $i0 = r0.<java.security.Provider: int entrySetCallCount>;
        $i1 = $i0 + 1;
        r0.<java.security.Provider: int entrySetCallCount> = $i1;
        if $i0 != 0 goto label0;

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r0);
        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();
        r0.<java.security.Provider: java.util.Set entrySet> = $r4;
        goto label1;

     label0:
        $r5 = specialinvoke r0.<java.util.Properties: java.util.Set entrySet()>();
        return $r5;

     label1:
        $i2 = r0.<java.security.Provider: int entrySetCallCount>;
        if $i2 == 2 goto label2;

        $r6 = new java.lang.RuntimeException;
        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error.");
        throw $r6;

     label2:
        $r7 = r0.<java.security.Provider: java.util.Set entrySet>;
        return $r7;
    }

    public java.util.Set keySet()
    {
        java.security.Provider r0;
        java.util.Set $r1, $r2;

        r0 := @this: java.security.Provider;
        specialinvoke r0.<java.security.Provider: void checkInitialized()>();
        $r1 = specialinvoke r0.<java.util.Properties: java.util.Set keySet()>();
        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);
        return $r2;
    }

    public java.util.Collection values()
    {
        java.security.Provider r0;
        java.util.Collection $r1, $r2;

        r0 := @this: java.security.Provider;
        specialinvoke r0.<java.security.Provider: void checkInitialized()>();
        $r1 = specialinvoke r0.<java.util.Properties: java.util.Collection values()>();
        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);
        return $r2;
    }

    public synchronized java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.security.Provider r0;
        java.lang.Object r1, r2, $r20;
        java.lang.StringBuilder $r3, $r4, $r6, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.String $r5, $r7, $r12, $r19;
        sun.security.util.Debug $r8, $r9;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("putProviderProperty.");
        $r5 = r0.<java.security.Provider: java.lang.String name>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.security.Provider: void check(java.lang.String)>($r7);
        $r8 = <java.security.Provider: sun.security.util.Debug debug>;
        if $r8 == null goto label0;

        $r9 = <java.security.Provider: sun.security.util.Debug debug>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set ");
        $r12 = r0.<java.security.Provider: java.lang.String name>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider property [");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r9.<sun.security.util.Debug: void println(java.lang.String)>($r19);

     label0:
        $r20 = specialinvoke r0.<java.security.Provider: java.lang.Object implPut(java.lang.Object,java.lang.Object)>(r1, r2);
        return $r20;
    }

    public synchronized java.lang.Object remove(java.lang.Object)
    {
        java.security.Provider r0;
        java.lang.Object r1, $r16;
        java.lang.StringBuilder $r2, $r3, $r5, $r9, $r10, $r12, $r13, $r14;
        java.lang.String $r4, $r6, $r11, $r15;
        sun.security.util.Debug $r7, $r8;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.Object;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeProviderProperty.");
        $r4 = r0.<java.security.Provider: java.lang.String name>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.security.Provider: void check(java.lang.String)>($r6);
        $r7 = <java.security.Provider: sun.security.util.Debug debug>;
        if $r7 == null goto label0;

        $r8 = <java.security.Provider: sun.security.util.Debug debug>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove ");
        $r11 = r0.<java.security.Provider: java.lang.String name>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider property ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r8.<sun.security.util.Debug: void println(java.lang.String)>($r15);

     label0:
        $r16 = specialinvoke r0.<java.security.Provider: java.lang.Object implRemove(java.lang.Object)>(r1);
        return $r16;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.security.Provider r0;
        java.lang.Object r1, $r2;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.Object;
        specialinvoke r0.<java.security.Provider: void checkInitialized()>();
        $r2 = specialinvoke r0.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r1);
        return $r2;
    }

    public java.util.Enumeration keys()
    {
        java.security.Provider r0;
        java.util.Enumeration $r1;

        r0 := @this: java.security.Provider;
        specialinvoke r0.<java.security.Provider: void checkInitialized()>();
        $r1 = specialinvoke r0.<java.util.Properties: java.util.Enumeration keys()>();
        return $r1;
    }

    public java.util.Enumeration elements()
    {
        java.security.Provider r0;
        java.util.Enumeration $r1;

        r0 := @this: java.security.Provider;
        specialinvoke r0.<java.security.Provider: void checkInitialized()>();
        $r1 = specialinvoke r0.<java.util.Properties: java.util.Enumeration elements()>();
        return $r1;
    }

    public java.lang.String getProperty(java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, $r2;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.security.Provider: void checkInitialized()>();
        $r2 = specialinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);
        return $r2;
    }

    private void checkInitialized()
    {
        java.security.Provider r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: java.security.Provider;
        $z0 = r0.<java.security.Provider: boolean initialized>;
        if $z0 != 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();
        throw $r1;

     label0:
        return;
    }

    private void check(java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1;
        java.lang.SecurityManager r2;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.security.Provider: void checkInitialized()>();
        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r2 == null goto label0;

        virtualinvoke r2.<java.lang.SecurityManager: void checkSecurityAccess(java.lang.String)>(r1);

     label0:
        return;
    }

    private void putId()
    {
        java.security.Provider r0;
        java.lang.String $r1, $r2, $r4, $r6, $r7, $r10;
        double $d0;
        java.lang.Class $r9;

        r0 := @this: java.security.Provider;
        $r1 = r0.<java.security.Provider: java.lang.String name>;
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);
        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("Provider.id name", $r2);
        $d0 = r0.<java.security.Provider: double version>;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);
        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("Provider.id version", $r4);
        $r6 = r0.<java.security.Provider: java.lang.String info>;
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);
        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("Provider.id info", $r7);
        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();
        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("Provider.id className", $r10);
        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.security.Provider r0;
        java.io.ObjectInputStream r1;
        java.util.HashMap $r2, r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r8, $r9;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.io.ObjectInputStream;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        r3 = $r2;
        $r6 = specialinvoke r0.<java.util.Properties: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.Map$Entry) $r7;
        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);
        goto label0;

     label1:
        r0.<java.security.Provider: java.util.Properties defaults> = null;
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();
        specialinvoke r0.<java.security.Provider: void implClear()>();
        r0.<java.security.Provider: boolean initialized> = 1;
        virtualinvoke r0.<java.security.Provider: void putAll(java.util.Map)>(r3);
        return;
    }

    private void implPutAll(java.util.Map)
    {
        java.security.Provider r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.util.Map;
        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r5;
        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        specialinvoke r0.<java.security.Provider: java.lang.Object implPut(java.lang.Object,java.lang.Object)>($r6, $r7);
        goto label0;

     label1:
        return;
    }

    private java.lang.Object implRemove(java.lang.Object)
    {
        java.security.Provider r0;
        java.lang.Object r1, $r7;
        java.lang.String r2;
        boolean $z0, $z1;
        java.util.Map $r3, $r5;
        java.util.LinkedHashMap $r4;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.lang.String;
        if $z0 == 0 goto label2;

        r2 = (java.lang.String) r1;
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("Provider.");
        if $z1 == 0 goto label0;

        return null;

     label0:
        r0.<java.security.Provider: boolean legacyChanged> = 1;
        $r3 = r0.<java.security.Provider: java.util.Map legacyStrings>;
        if $r3 != null goto label1;

        $r4 = new java.util.LinkedHashMap;
        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();
        r0.<java.security.Provider: java.util.Map legacyStrings> = $r4;

     label1:
        $r5 = r0.<java.security.Provider: java.util.Map legacyStrings>;
        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        $r7 = specialinvoke r0.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r1);
        return $r7;
    }

    private java.lang.Object implPut(java.lang.Object, java.lang.Object)
    {
        java.security.Provider r0;
        java.lang.Object r1, r2, $r9;
        java.lang.String r3, $r7;
        boolean $z0, $z1, $z2;
        java.util.Map $r4, $r6;
        java.util.LinkedHashMap $r5;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $z0 = r1 instanceof java.lang.String;
        if $z0 == 0 goto label2;

        $z1 = r2 instanceof java.lang.String;
        if $z1 == 0 goto label2;

        r3 = (java.lang.String) r1;
        $z2 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("Provider.");
        if $z2 == 0 goto label0;

        return null;

     label0:
        r0.<java.security.Provider: boolean legacyChanged> = 1;
        $r4 = r0.<java.security.Provider: java.util.Map legacyStrings>;
        if $r4 != null goto label1;

        $r5 = new java.util.LinkedHashMap;
        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();
        r0.<java.security.Provider: java.util.Map legacyStrings> = $r5;

     label1:
        $r6 = r0.<java.security.Provider: java.util.Map legacyStrings>;
        $r7 = (java.lang.String) r2;
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r7);

     label2:
        $r9 = specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return $r9;
    }

    private void implClear()
    {
        java.security.Provider r0;
        java.util.Map $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: java.security.Provider;
        $r1 = r0.<java.security.Provider: java.util.Map legacyStrings>;
        if $r1 == null goto label0;

        $r2 = r0.<java.security.Provider: java.util.Map legacyStrings>;
        interfaceinvoke $r2.<java.util.Map: void clear()>();

     label0:
        $r3 = r0.<java.security.Provider: java.util.Map legacyMap>;
        if $r3 == null goto label1;

        $r4 = r0.<java.security.Provider: java.util.Map legacyMap>;
        interfaceinvoke $r4.<java.util.Map: void clear()>();

     label1:
        $r5 = r0.<java.security.Provider: java.util.Map serviceMap>;
        if $r5 == null goto label2;

        $r6 = r0.<java.security.Provider: java.util.Map serviceMap>;
        interfaceinvoke $r6.<java.util.Map: void clear()>();

     label2:
        r0.<java.security.Provider: boolean legacyChanged> = 0;
        r0.<java.security.Provider: boolean servicesChanged> = 0;
        r0.<java.security.Provider: java.util.Set serviceSet> = null;
        specialinvoke r0.<java.util.Properties: void clear()>();
        specialinvoke r0.<java.security.Provider: void putId()>();
        return;
    }

    private void ensureLegacyParsed()
    {
        java.security.Provider r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        boolean $z0, $z1;
        java.util.Map $r3, $r4, $r6, $r7, $r14;
        java.util.LinkedHashMap $r5;
        java.util.Set $r8;
        java.lang.Object $r9, $r10, $r12;
        java.lang.String $r11, $r13;

        r0 := @this: java.security.Provider;
        $z0 = r0.<java.security.Provider: boolean legacyChanged>;
        if $z0 == 0 goto label0;

        $r3 = r0.<java.security.Provider: java.util.Map legacyStrings>;
        if $r3 != null goto label1;

     label0:
        return;

     label1:
        r0.<java.security.Provider: java.util.Set serviceSet> = null;
        $r4 = r0.<java.security.Provider: java.util.Map legacyMap>;
        if $r4 != null goto label2;

        $r5 = new java.util.LinkedHashMap;
        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();
        r0.<java.security.Provider: java.util.Map legacyMap> = $r5;
        goto label3;

     label2:
        $r6 = r0.<java.security.Provider: java.util.Map legacyMap>;
        interfaceinvoke $r6.<java.util.Map: void clear()>();

     label3:
        $r7 = r0.<java.security.Provider: java.util.Map legacyStrings>;
        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();
        r1 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label5;

        $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (java.util.Map$Entry) $r9;
        $r10 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r11 = (java.lang.String) $r10;
        $r12 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r13 = (java.lang.String) $r12;
        specialinvoke r0.<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>($r11, $r13);
        goto label4;

     label5:
        $r14 = r0.<java.security.Provider: java.util.Map legacyMap>;
        specialinvoke r0.<java.security.Provider: void removeInvalidServices(java.util.Map)>($r14);
        r0.<java.security.Provider: boolean legacyChanged> = 0;
        return;
    }

    private void removeInvalidServices(java.util.Map)
    {
        java.security.Provider r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.security.Provider$Service r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r7;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.util.Map;
        $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r6;
        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        r4 = (java.security.Provider$Service) $r7;
        $z1 = staticinvoke <java.security.Provider$Service: boolean access$000(java.security.Provider$Service)>(r4);
        if $z1 != 0 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label1:
        goto label0;

     label2:
        return;
    }

    private java.lang.String[] getTypeAndAlgorithm(java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, r2, r3, $r8, $r12;
        int i0, $i1;
        sun.security.util.Debug $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r11;
        java.lang.String[] $r13;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.String;
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(".");
        if i0 >= 1 goto label1;

        $r4 = <java.security.Provider: sun.security.util.Debug debug>;
        if $r4 == null goto label0;

        $r5 = <java.security.Provider: sun.security.util.Debug debug>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring invalid entry in provider ");
        $r8 = r0.<java.security.Provider: java.lang.String name>;
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<sun.security.util.Debug: void println(java.lang.String)>($r12);

     label0:
        return null;

     label1:
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        $i1 = i0 + 1;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);
        $r13 = newarray (java.lang.String)[2];
        $r13[0] = r2;
        $r13[1] = r3;
        return $r13;
    }

    private void parseLegacyPut(java.lang.String, java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, r2, r4, r5, r7, r8, $r13, $r14, $r15, $r28, $r29, r30, $r31, r32, r33, r45, $r46, r47, r48, $r49, r50, r51, r52;
        java.util.Locale $r3;
        java.lang.String[] r6, r27;
        java.security.Provider$ServiceKey r9, r11, $r16, $r25, $r34, r35, $r53;
        java.security.Provider$Service r10, r12, $r19, r38, $r39, $r56;
        boolean $z0, $z1;
        int $i0, i1, $i2;
        java.util.Map $r17, $r22, $r24, $r36, $r42, $r54, $r59;
        java.lang.Object $r18, $r37, $r55;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r13 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);
        $z0 = virtualinvoke $r13.<java.lang.String: boolean startsWith(java.lang.String)>("alg.alias.");
        if $z0 == 0 goto label2;

        r4 = r2;
        $i0 = <java.security.Provider: int ALIAS_LENGTH>;
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);
        r6 = specialinvoke r0.<java.security.Provider: java.lang.String[] getTypeAndAlgorithm(java.lang.String)>(r5);
        if r6 != null goto label0;

        return;

     label0:
        $r14 = r6[0];
        r7 = staticinvoke <java.security.Provider: java.lang.String getEngineName(java.lang.String)>($r14);
        $r15 = r6[1];
        r8 = virtualinvoke $r15.<java.lang.String: java.lang.String intern()>();
        $r16 = new java.security.Provider$ServiceKey;
        specialinvoke $r16.<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>(r7, r4, 1, null);
        r9 = $r16;
        $r17 = r0.<java.security.Provider: java.util.Map legacyMap>;
        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);
        r10 = (java.security.Provider$Service) $r18;
        if r10 != null goto label1;

        $r19 = new java.security.Provider$Service;
        specialinvoke $r19.<java.security.Provider$Service: void <init>(java.security.Provider,java.security.Provider$1)>(r0, null);
        r10 = $r19;
        staticinvoke <java.security.Provider$Service: java.lang.String access$302(java.security.Provider$Service,java.lang.String)>(r10, r7);
        staticinvoke <java.security.Provider$Service: java.lang.String access$402(java.security.Provider$Service,java.lang.String)>(r10, r4);
        $r22 = r0.<java.security.Provider: java.util.Map legacyMap>;
        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10);

     label1:
        $r24 = r0.<java.security.Provider: java.util.Map legacyMap>;
        $r25 = new java.security.Provider$ServiceKey;
        specialinvoke $r25.<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>(r7, r8, 1, null);
        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, r10);
        staticinvoke <java.security.Provider$Service: void access$500(java.security.Provider$Service,java.lang.String)>(r10, r8);
        goto label9;

     label2:
        r27 = specialinvoke r0.<java.security.Provider: java.lang.String[] getTypeAndAlgorithm(java.lang.String)>(r1);
        if r27 != null goto label3;

        return;

     label3:
        $r28 = r27[1];
        i1 = virtualinvoke $r28.<java.lang.String: int indexOf(int)>(32);
        if i1 != -1 goto label5;

        $r29 = r27[0];
        r30 = staticinvoke <java.security.Provider: java.lang.String getEngineName(java.lang.String)>($r29);
        $r31 = r27[1];
        r32 = virtualinvoke $r31.<java.lang.String: java.lang.String intern()>();
        r33 = r2;
        $r34 = new java.security.Provider$ServiceKey;
        specialinvoke $r34.<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>(r30, r32, 1, null);
        r35 = $r34;
        $r36 = r0.<java.security.Provider: java.util.Map legacyMap>;
        $r37 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>(r35);
        r38 = (java.security.Provider$Service) $r37;
        if r38 != null goto label4;

        $r39 = new java.security.Provider$Service;
        specialinvoke $r39.<java.security.Provider$Service: void <init>(java.security.Provider,java.security.Provider$1)>(r0, null);
        r38 = $r39;
        staticinvoke <java.security.Provider$Service: java.lang.String access$302(java.security.Provider$Service,java.lang.String)>(r38, r30);
        staticinvoke <java.security.Provider$Service: java.lang.String access$402(java.security.Provider$Service,java.lang.String)>(r38, r32);
        $r42 = r0.<java.security.Provider: java.util.Map legacyMap>;
        interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r38);

     label4:
        staticinvoke <java.security.Provider$Service: java.lang.String access$602(java.security.Provider$Service,java.lang.String)>(r38, r33);
        goto label9;

     label5:
        r45 = r2;
        $r46 = r27[0];
        r47 = staticinvoke <java.security.Provider: java.lang.String getEngineName(java.lang.String)>($r46);
        r48 = r27[1];
        $r49 = virtualinvoke r48.<java.lang.String: java.lang.String substring(int,int)>(0, i1);
        r50 = virtualinvoke $r49.<java.lang.String: java.lang.String intern()>();
        $i2 = i1 + 1;
        r51 = virtualinvoke r48.<java.lang.String: java.lang.String substring(int)>($i2);

     label6:
        $z1 = virtualinvoke r51.<java.lang.String: boolean startsWith(java.lang.String)>(" ");
        if $z1 == 0 goto label7;

        r51 = virtualinvoke r51.<java.lang.String: java.lang.String substring(int)>(1);
        goto label6;

     label7:
        r52 = virtualinvoke r51.<java.lang.String: java.lang.String intern()>();
        $r53 = new java.security.Provider$ServiceKey;
        specialinvoke $r53.<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>(r47, r50, 1, null);
        r11 = $r53;
        $r54 = r0.<java.security.Provider: java.util.Map legacyMap>;
        $r55 = interfaceinvoke $r54.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);
        r12 = (java.security.Provider$Service) $r55;
        if r12 != null goto label8;

        $r56 = new java.security.Provider$Service;
        specialinvoke $r56.<java.security.Provider$Service: void <init>(java.security.Provider,java.security.Provider$1)>(r0, null);
        r12 = $r56;
        staticinvoke <java.security.Provider$Service: java.lang.String access$302(java.security.Provider$Service,java.lang.String)>(r12, r47);
        staticinvoke <java.security.Provider$Service: java.lang.String access$402(java.security.Provider$Service,java.lang.String)>(r12, r50);
        $r59 = r0.<java.security.Provider: java.util.Map legacyMap>;
        interfaceinvoke $r59.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r12);

     label8:
        virtualinvoke r12.<java.security.Provider$Service: void addAttribute(java.lang.String,java.lang.String)>(r52, r45);

     label9:
        return;
    }

    public synchronized java.security.Provider$Service getService(java.lang.String, java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, r2;
        java.security.Provider$ServiceKey r3, $r5;
        java.security.Provider$Service r4, $r12;
        boolean $z0;
        java.util.Map $r6, $r7, $r9, $r10;
        java.lang.Object $r8, $r11;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.security.Provider: void checkInitialized()>();
        r3 = <java.security.Provider: java.security.Provider$ServiceKey previousKey>;
        $z0 = virtualinvoke r3.<java.security.Provider$ServiceKey: boolean matches(java.lang.String,java.lang.String)>(r1, r2);
        if $z0 != 0 goto label0;

        $r5 = new java.security.Provider$ServiceKey;
        specialinvoke $r5.<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>(r1, r2, 0, null);
        r3 = $r5;
        <java.security.Provider: java.security.Provider$ServiceKey previousKey> = r3;

     label0:
        $r6 = r0.<java.security.Provider: java.util.Map serviceMap>;
        if $r6 == null goto label1;

        $r7 = r0.<java.security.Provider: java.util.Map serviceMap>;
        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);
        r4 = (java.security.Provider$Service) $r8;
        if r4 == null goto label1;

        return r4;

     label1:
        specialinvoke r0.<java.security.Provider: void ensureLegacyParsed()>();
        $r9 = r0.<java.security.Provider: java.util.Map legacyMap>;
        if $r9 == null goto label2;

        $r10 = r0.<java.security.Provider: java.util.Map legacyMap>;
        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);
        $r12 = (java.security.Provider$Service) $r11;
        goto label3;

     label2:
        $r12 = null;

     label3:
        return $r12;
    }

    public synchronized java.util.Set getServices()
    {
        java.security.Provider r0;
        java.util.LinkedHashSet r1, $r3;
        boolean $z0, $z1;
        java.util.Set $r2, $r10, $r11;
        java.util.Map $r4, $r5, $r7, $r8;
        java.util.Collection $r6, $r9;

        r0 := @this: java.security.Provider;
        specialinvoke r0.<java.security.Provider: void checkInitialized()>();
        $z0 = r0.<java.security.Provider: boolean legacyChanged>;
        if $z0 != 0 goto label0;

        $z1 = r0.<java.security.Provider: boolean servicesChanged>;
        if $z1 == 0 goto label1;

     label0:
        r0.<java.security.Provider: java.util.Set serviceSet> = null;

     label1:
        $r2 = r0.<java.security.Provider: java.util.Set serviceSet>;
        if $r2 != null goto label4;

        specialinvoke r0.<java.security.Provider: void ensureLegacyParsed()>();
        $r3 = new java.util.LinkedHashSet;
        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();
        r1 = $r3;
        $r4 = r0.<java.security.Provider: java.util.Map serviceMap>;
        if $r4 == null goto label2;

        $r5 = r0.<java.security.Provider: java.util.Map serviceMap>;
        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();
        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r6);

     label2:
        $r7 = r0.<java.security.Provider: java.util.Map legacyMap>;
        if $r7 == null goto label3;

        $r8 = r0.<java.security.Provider: java.util.Map legacyMap>;
        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();
        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r9);

     label3:
        $r10 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r1);
        r0.<java.security.Provider: java.util.Set serviceSet> = $r10;
        r0.<java.security.Provider: boolean servicesChanged> = 0;

     label4:
        $r11 = r0.<java.security.Provider: java.util.Set serviceSet>;
        return $r11;
    }

    protected synchronized void putService(java.security.Provider$Service)
    {
        java.security.Provider r0, $r21;
        java.security.Provider$Service r1, $r28;
        java.lang.StringBuilder $r2, $r8, $r10, $r14, $r16, $r17, $r18;
        java.lang.String r3, r4, r7, $r9, $r11, $r15, $r19;
        java.security.Provider$ServiceKey r5, $r25, $r34;
        java.util.Iterator r6;
        sun.security.util.Debug $r12, $r13;
        java.lang.NullPointerException $r20;
        java.lang.IllegalArgumentException $r22;
        java.util.Map $r23, $r26, $r29, $r33;
        java.util.LinkedHashMap $r24;
        java.lang.Object $r27, $r32;
        java.util.List $r31;
        boolean $z0;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.security.Provider$Service;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("putProviderProperty.");
        $r9 = r0.<java.security.Provider: java.lang.String name>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.security.Provider: void check(java.lang.String)>($r11);
        $r12 = <java.security.Provider: sun.security.util.Debug debug>;
        if $r12 == null goto label0;

        $r13 = <java.security.Provider: sun.security.util.Debug debug>;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = r0.<java.security.Provider: java.lang.String name>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".putService(): ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r13.<sun.security.util.Debug: void println(java.lang.String)>($r19);

     label0:
        if r1 != null goto label1;

        $r20 = new java.lang.NullPointerException;
        specialinvoke $r20.<java.lang.NullPointerException: void <init>()>();
        throw $r20;

     label1:
        $r21 = virtualinvoke r1.<java.security.Provider$Service: java.security.Provider getProvider()>();
        if $r21 == r0 goto label2;

        $r22 = new java.lang.IllegalArgumentException;
        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("service.getProvider() must match this Provider object");
        throw $r22;

     label2:
        $r23 = r0.<java.security.Provider: java.util.Map serviceMap>;
        if $r23 != null goto label3;

        $r24 = new java.util.LinkedHashMap;
        specialinvoke $r24.<java.util.LinkedHashMap: void <init>()>();
        r0.<java.security.Provider: java.util.Map serviceMap> = $r24;

     label3:
        r0.<java.security.Provider: boolean servicesChanged> = 1;
        r3 = virtualinvoke r1.<java.security.Provider$Service: java.lang.String getType()>();
        r4 = virtualinvoke r1.<java.security.Provider$Service: java.lang.String getAlgorithm()>();
        $r25 = new java.security.Provider$ServiceKey;
        specialinvoke $r25.<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>(r3, r4, 1, null);
        r5 = $r25;
        $r26 = r0.<java.security.Provider: java.util.Map serviceMap>;
        $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
        $r28 = (java.security.Provider$Service) $r27;
        specialinvoke r0.<java.security.Provider: void implRemoveService(java.security.Provider$Service)>($r28);
        $r29 = r0.<java.security.Provider: java.util.Map serviceMap>;
        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r1);
        $r31 = staticinvoke <java.security.Provider$Service: java.util.List access$700(java.security.Provider$Service)>(r1);
        r6 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        $r32 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r32;
        $r33 = r0.<java.security.Provider: java.util.Map serviceMap>;
        $r34 = new java.security.Provider$ServiceKey;
        specialinvoke $r34.<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>(r3, r7, 1, null);
        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r1);
        goto label4;

     label5:
        specialinvoke r0.<java.security.Provider: void putPropertyStrings(java.security.Provider$Service)>(r1);
        return;
    }

    private void putPropertyStrings(java.security.Provider$Service)
    {
        java.security.Provider r0;
        java.security.Provider$Service r1;
        java.lang.String r2, r3, r6, r7, $r11, $r12, $r21;
        java.lang.StringBuilder $r4, $r8, $r9, $r10, $r16, $r17, $r18, $r19, $r20, $r28, $r29, $r30, $r31, $r32, $r34;
        java.util.Iterator r5, r25;
        java.util.List $r14;
        boolean $z0, $z1;
        java.lang.Object $r15, $r26, $r33, $r35;
        java.util.Map $r23;
        java.util.Set $r24;
        java.util.Map$Entry r27;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.security.Provider$Service;
        r2 = virtualinvoke r1.<java.security.Provider$Service: java.lang.String getType()>();
        r3 = virtualinvoke r1.<java.security.Provider$Service: java.lang.String getAlgorithm()>();
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        $r12 = virtualinvoke r1.<java.security.Provider$Service: java.lang.String getClassName()>();
        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);
        $r14 = staticinvoke <java.security.Provider$Service: java.util.List access$700(java.security.Provider$Service)>(r1);
        r5 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.lang.String) $r15;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r3);
        goto label0;

     label1:
        $r23 = staticinvoke <java.security.Provider$Service: java.util.Map access$800(java.security.Provider$Service)>(r1);
        $r24 = interfaceinvoke $r23.<java.util.Map: java.util.Set entrySet()>();
        r25 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label3;

        $r26 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();
        r27 = (java.util.Map$Entry) $r26;
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r33 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);
        r7 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        $r35 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>();
        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r35);
        goto label2;

     label3:
        return;
    }

    private void removePropertyStrings(java.security.Provider$Service)
    {
        java.security.Provider r0;
        java.security.Provider$Service r1;
        java.lang.String r2, r3, r6, r7, $r11, $r20;
        java.lang.StringBuilder $r4, $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r27, $r28, $r29, $r30, $r31, $r33;
        java.util.Iterator r5, r24;
        java.util.List $r13;
        boolean $z0, $z1;
        java.lang.Object $r14, $r25, $r32;
        java.util.Map $r22;
        java.util.Set $r23;
        java.util.Map$Entry r26;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.security.Provider$Service;
        r2 = virtualinvoke r1.<java.security.Provider$Service: java.lang.String getType()>();
        r3 = virtualinvoke r1.<java.security.Provider$Service: java.lang.String getAlgorithm()>();
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.util.Properties: java.lang.Object remove(java.lang.Object)>($r11);
        $r13 = staticinvoke <java.security.Provider$Service: java.util.List access$700(java.security.Provider$Service)>(r1);
        r5 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.lang.String) $r14;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.util.Properties: java.lang.Object remove(java.lang.Object)>($r20);
        goto label0;

     label1:
        $r22 = staticinvoke <java.security.Provider$Service: java.util.Map access$800(java.security.Provider$Service)>(r1);
        $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Set entrySet()>();
        r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label3;

        $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();
        r26 = (java.util.Map$Entry) $r25;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r32 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);
        r7 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r7);
        goto label2;

     label3:
        return;
    }

    protected synchronized void removeService(java.security.Provider$Service)
    {
        java.security.Provider r0;
        java.security.Provider$Service r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r9, $r11, $r12, $r13;
        java.lang.String $r4, $r6, $r10, $r14;
        sun.security.util.Debug $r7, $r8;
        java.lang.NullPointerException $r15;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.security.Provider$Service;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeProviderProperty.");
        $r4 = r0.<java.security.Provider: java.lang.String name>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.security.Provider: void check(java.lang.String)>($r6);
        $r7 = <java.security.Provider: sun.security.util.Debug debug>;
        if $r7 == null goto label0;

        $r8 = <java.security.Provider: sun.security.util.Debug debug>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = r0.<java.security.Provider: java.lang.String name>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".removeService(): ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r8.<sun.security.util.Debug: void println(java.lang.String)>($r14);

     label0:
        if r1 != null goto label1;

        $r15 = new java.lang.NullPointerException;
        specialinvoke $r15.<java.lang.NullPointerException: void <init>()>();
        throw $r15;

     label1:
        specialinvoke r0.<java.security.Provider: void implRemoveService(java.security.Provider$Service)>(r1);
        return;
    }

    private void implRemoveService(java.security.Provider$Service)
    {
        java.security.Provider r0;
        java.security.Provider$Service r1, r5;
        java.lang.String r2, r3, r7;
        java.security.Provider$ServiceKey r4, $r9, $r17;
        java.util.Iterator r6;
        java.util.Map $r8, $r10, $r12, $r16;
        java.lang.Object $r11, $r15;
        java.util.List $r14;
        boolean $z0;

        r0 := @this: java.security.Provider;
        r1 := @parameter0: java.security.Provider$Service;
        if r1 == null goto label0;

        $r8 = r0.<java.security.Provider: java.util.Map serviceMap>;
        if $r8 != null goto label1;

     label0:
        return;

     label1:
        r2 = virtualinvoke r1.<java.security.Provider$Service: java.lang.String getType()>();
        r3 = virtualinvoke r1.<java.security.Provider$Service: java.lang.String getAlgorithm()>();
        $r9 = new java.security.Provider$ServiceKey;
        specialinvoke $r9.<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>(r2, r3, 0, null);
        r4 = $r9;
        $r10 = r0.<java.security.Provider: java.util.Map serviceMap>;
        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (java.security.Provider$Service) $r11;
        if r1 == r5 goto label2;

        return;

     label2:
        r0.<java.security.Provider: boolean servicesChanged> = 1;
        $r12 = r0.<java.security.Provider: java.util.Map serviceMap>;
        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);
        $r14 = staticinvoke <java.security.Provider$Service: java.util.List access$700(java.security.Provider$Service)>(r1);
        r6 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r15;
        $r16 = r0.<java.security.Provider: java.util.Map serviceMap>;
        $r17 = new java.security.Provider$ServiceKey;
        specialinvoke $r17.<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>(r2, r7, 0, null);
        interfaceinvoke $r16.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r17);
        goto label3;

     label4:
        specialinvoke r0.<java.security.Provider: void removePropertyStrings(java.security.Provider$Service)>(r1);
        return;
    }

    private static void addEngine(java.lang.String, boolean, java.lang.String)
    {
        java.lang.String r0, r1, $r6;
        boolean z0;
        java.security.Provider$EngineDescription $r2, r3;
        java.util.Map $r4, $r8;
        java.util.Locale $r5;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        r1 := @parameter2: java.lang.String;
        $r2 = new java.security.Provider$EngineDescription;
        specialinvoke $r2.<java.security.Provider$EngineDescription: void <init>(java.lang.String,boolean,java.lang.String)>(r0, z0, r1);
        r3 = $r2;
        $r4 = <java.security.Provider: java.util.Map knownEngines>;
        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r3);
        $r8 = <java.security.Provider: java.util.Map knownEngines>;
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3);
        return;
    }

    private static java.lang.String getEngineName(java.lang.String)
    {
        java.lang.String r0, $r6, $r8;
        java.util.Map $r1, $r5;
        java.security.Provider$EngineDescription r2;
        java.util.Locale $r3;
        java.lang.Object $r4, $r7;

        r0 := @parameter0: java.lang.String;
        $r1 = <java.security.Provider: java.util.Map knownEngines>;
        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (java.security.Provider$EngineDescription) $r4;
        if r2 != null goto label0;

        $r5 = <java.security.Provider: java.util.Map knownEngines>;
        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);
        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);
        r2 = (java.security.Provider$EngineDescription) $r7;

     label0:
        if r2 != null goto label1;

        $r8 = r0;
        goto label2;

     label1:
        $r8 = r2.<java.security.Provider$EngineDescription: java.lang.String name>;

     label2:
        return $r8;
    }

    static java.lang.String access$900(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.security.Provider: java.lang.String getEngineName(java.lang.String)>(r0);
        return $r1;
    }

    static java.util.Map access$1000()
    {
        java.util.Map $r0;

        $r0 = <java.security.Provider: java.util.Map knownEngines>;
        return $r0;
    }

    static void <clinit>()
    {
        sun.security.util.Debug $r0;
        java.lang.String $r1;
        int $i0;
        java.security.Provider$ServiceKey $r2;
        java.util.HashMap $r3;

        $r0 = staticinvoke <sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String,java.lang.String)>("provider", "Provider");
        <java.security.Provider: sun.security.util.Debug debug> = $r0;
        $r1 = "Alg.Alias.";
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();
        <java.security.Provider: int ALIAS_LENGTH> = $i0;
        $r2 = new java.security.Provider$ServiceKey;
        specialinvoke $r2.<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>("", "", 0, null);
        <java.security.Provider: java.security.Provider$ServiceKey previousKey> = $r2;
        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        <java.security.Provider: java.util.Map knownEngines> = $r3;
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("AlgorithmParameterGenerator", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("AlgorithmParameters", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("KeyFactory", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("KeyPairGenerator", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("KeyStore", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("MessageDigest", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("SecureRandom", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("Signature", 1, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("CertificateFactory", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("CertPathBuilder", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("CertPathValidator", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("CertStore", 0, "java.security.cert.CertStoreParameters");
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("Cipher", 1, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("ExemptionMechanism", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("Mac", 1, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("KeyAgreement", 1, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("KeyGenerator", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("SecretKeyFactory", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("KeyManagerFactory", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("SSLContext", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("TrustManagerFactory", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("GssApiMechanism", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("SaslClientFactory", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("SaslServerFactory", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("Policy", 0, "java.security.Policy$Parameters");
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("Configuration", 0, "javax.security.auth.login.Configuration$Parameters");
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("XMLSignatureFactory", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("KeyInfoFactory", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("TransformService", 0, null);
        staticinvoke <java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>("TerminalFactory", 0, "java.lang.Object");
        return;
    }
}
