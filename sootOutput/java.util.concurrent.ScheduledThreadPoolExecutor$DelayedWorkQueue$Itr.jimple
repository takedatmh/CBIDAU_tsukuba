class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr extends java.lang.Object implements java.util.Iterator
{
    final java.util.concurrent.RunnableScheduledFuture[] array;
    int cursor;
    int lastRet;
    final java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue this$0;

    void <init>(java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue, java.util.concurrent.RunnableScheduledFuture[])
    {
        java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr r0;
        java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue r1;
        java.util.concurrent.RunnableScheduledFuture[] r2;

        r0 := @this: java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;
        r1 := @parameter0: java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue;
        r2 := @parameter1: java.util.concurrent.RunnableScheduledFuture[];
        r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int cursor> = 0;
        r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int lastRet> = -1;
        r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.util.concurrent.RunnableScheduledFuture[] array> = r2;
        return;
    }

    public boolean hasNext()
    {
        java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr r0;
        int $i0, $i1;
        java.util.concurrent.RunnableScheduledFuture[] $r1;
        boolean $z0;

        r0 := @this: java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;
        $i0 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int cursor>;
        $r1 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.util.concurrent.RunnableScheduledFuture[] array>;
        $i1 = lengthof $r1;
        if $i0 >= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.Runnable next()
    {
        java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.concurrent.RunnableScheduledFuture[] $r1, $r3;
        java.util.NoSuchElementException $r2;
        java.util.concurrent.RunnableScheduledFuture $r5;

        r0 := @this: java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;
        $i1 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int cursor>;
        $r1 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.util.concurrent.RunnableScheduledFuture[] array>;
        $i2 = lengthof $r1;
        if $i1 < $i2 goto label0;

        $r2 = new java.util.NoSuchElementException;
        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();
        throw $r2;

     label0:
        $i3 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int cursor>;
        r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int lastRet> = $i3;
        $r3 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.util.concurrent.RunnableScheduledFuture[] array>;
        $i0 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int cursor>;
        $i4 = $i0 + 1;
        r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int cursor> = $i4;
        $r5 = $r3[$i0];
        return $r5;
    }

    public void remove()
    {
        java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr r0;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;
        java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue $r2;
        java.util.concurrent.RunnableScheduledFuture[] $r3;
        java.util.concurrent.RunnableScheduledFuture $r4;

        r0 := @this: java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;
        $i0 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int lastRet>;
        if $i0 >= 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();
        throw $r1;

     label0:
        $r2 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue this$0>;
        $r3 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.util.concurrent.RunnableScheduledFuture[] array>;
        $i1 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int lastRet>;
        $r4 = $r3[$i1];
        virtualinvoke $r2.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean remove(java.lang.Object)>($r4);
        r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: int lastRet> = -1;
        return;
    }

    public volatile java.lang.Object next()
    {
        java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr r0;
        java.lang.Runnable $r1;

        r0 := @this: java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;
        $r1 = virtualinvoke r0.<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.lang.Runnable next()>();
        return $r1;
    }
}
