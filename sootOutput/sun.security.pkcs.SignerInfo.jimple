public class sun.security.pkcs.SignerInfo extends java.lang.Object implements sun.security.util.DerEncoder
{
    java.math.BigInteger version;
    sun.security.x509.X500Name issuerName;
    java.math.BigInteger certificateSerialNumber;
    sun.security.x509.AlgorithmId digestAlgorithmId;
    sun.security.x509.AlgorithmId digestEncryptionAlgorithmId;
    byte[] encryptedDigest;
    sun.security.pkcs.PKCS9Attributes authenticatedAttributes;
    sun.security.pkcs.PKCS9Attributes unauthenticatedAttributes;

    public void <init>(sun.security.x509.X500Name, java.math.BigInteger, sun.security.x509.AlgorithmId, sun.security.x509.AlgorithmId, byte[])
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.x509.X500Name r1;
        java.math.BigInteger r2, $r6;
        sun.security.x509.AlgorithmId r3, r4;
        byte[] r5;

        r0 := @this: sun.security.pkcs.SignerInfo;
        r1 := @parameter0: sun.security.x509.X500Name;
        r2 := @parameter1: java.math.BigInteger;
        r3 := @parameter2: sun.security.x509.AlgorithmId;
        r4 := @parameter3: sun.security.x509.AlgorithmId;
        r5 := @parameter4: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r6 = <java.math.BigInteger: java.math.BigInteger ONE>;
        r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger version> = $r6;
        r0.<sun.security.pkcs.SignerInfo: sun.security.x509.X500Name issuerName> = r1;
        r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger certificateSerialNumber> = r2;
        r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestAlgorithmId> = r3;
        r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestEncryptionAlgorithmId> = r4;
        r0.<sun.security.pkcs.SignerInfo: byte[] encryptedDigest> = r5;
        return;
    }

    public void <init>(sun.security.x509.X500Name, java.math.BigInteger, sun.security.x509.AlgorithmId, sun.security.pkcs.PKCS9Attributes, sun.security.x509.AlgorithmId, byte[], sun.security.pkcs.PKCS9Attributes)
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.x509.X500Name r1;
        java.math.BigInteger r2, $r8;
        sun.security.x509.AlgorithmId r3, r5;
        sun.security.pkcs.PKCS9Attributes r4, r7;
        byte[] r6;

        r0 := @this: sun.security.pkcs.SignerInfo;
        r1 := @parameter0: sun.security.x509.X500Name;
        r2 := @parameter1: java.math.BigInteger;
        r3 := @parameter2: sun.security.x509.AlgorithmId;
        r4 := @parameter3: sun.security.pkcs.PKCS9Attributes;
        r5 := @parameter4: sun.security.x509.AlgorithmId;
        r6 := @parameter5: byte[];
        r7 := @parameter6: sun.security.pkcs.PKCS9Attributes;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r8 = <java.math.BigInteger: java.math.BigInteger ONE>;
        r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger version> = $r8;
        r0.<sun.security.pkcs.SignerInfo: sun.security.x509.X500Name issuerName> = r1;
        r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger certificateSerialNumber> = r2;
        r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestAlgorithmId> = r3;
        r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes> = r4;
        r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestEncryptionAlgorithmId> = r5;
        r0.<sun.security.pkcs.SignerInfo: byte[] encryptedDigest> = r6;
        r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes unauthenticatedAttributes> = r7;
        return;
    }

    public void <init>(sun.security.util.DerInputStream) throws java.io.IOException, sun.security.pkcs.ParsingException
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.util.DerInputStream r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        r1 := @parameter0: sun.security.util.DerInputStream;
        specialinvoke r0.<sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream,boolean)>(r1, 0);
        return;
    }

    public void <init>(sun.security.util.DerInputStream, boolean) throws java.io.IOException, sun.security.pkcs.ParsingException
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.util.DerInputStream r1;
        boolean z0;
        sun.security.util.DerValue[] r2;
        byte[] r3, $r16;
        sun.security.util.DerValue $r4, r5, $r7, $r9, r14;
        java.math.BigInteger $r6, $r10;
        sun.security.x509.X500Name $r8;
        sun.security.x509.AlgorithmId $r11, $r15;
        int $i0, $i2, $i3, $i5;
        byte $b1, $b4;
        sun.security.pkcs.PKCS9Attributes $r13, $r18;
        sun.security.pkcs.ParsingException $r19;

        r0 := @this: sun.security.pkcs.SignerInfo;
        r1 := @parameter0: sun.security.util.DerInputStream;
        z0 := @parameter1: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r6 = virtualinvoke r1.<sun.security.util.DerInputStream: java.math.BigInteger getBigInteger()>();
        r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger version> = $r6;
        r2 = virtualinvoke r1.<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSequence(int)>(2);
        $r7 = r2[0];
        r3 = virtualinvoke $r7.<sun.security.util.DerValue: byte[] toByteArray()>();
        $r8 = new sun.security.x509.X500Name;
        $r4 = new sun.security.util.DerValue;
        specialinvoke $r4.<sun.security.util.DerValue: void <init>(byte,byte[])>(48, r3);
        specialinvoke $r8.<sun.security.x509.X500Name: void <init>(sun.security.util.DerValue)>($r4);
        r0.<sun.security.pkcs.SignerInfo: sun.security.x509.X500Name issuerName> = $r8;
        $r9 = r2[1];
        $r10 = virtualinvoke $r9.<sun.security.util.DerValue: java.math.BigInteger getBigInteger()>();
        r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger certificateSerialNumber> = $r10;
        r5 = virtualinvoke r1.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r11 = staticinvoke <sun.security.x509.AlgorithmId: sun.security.x509.AlgorithmId parse(sun.security.util.DerValue)>(r5);
        r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestAlgorithmId> = $r11;
        if z0 == 0 goto label0;

        virtualinvoke r1.<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSet(int)>(0);
        goto label1;

     label0:
        $i0 = virtualinvoke r1.<sun.security.util.DerInputStream: int peekByte()>();
        $b1 = (byte) $i0;
        if $b1 != -96 goto label1;

        $r13 = new sun.security.pkcs.PKCS9Attributes;
        specialinvoke $r13.<sun.security.pkcs.PKCS9Attributes: void <init>(sun.security.util.DerInputStream)>(r1);
        r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes> = $r13;

     label1:
        r14 = virtualinvoke r1.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r15 = staticinvoke <sun.security.x509.AlgorithmId: sun.security.x509.AlgorithmId parse(sun.security.util.DerValue)>(r14);
        r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestEncryptionAlgorithmId> = $r15;
        $r16 = virtualinvoke r1.<sun.security.util.DerInputStream: byte[] getOctetString()>();
        r0.<sun.security.pkcs.SignerInfo: byte[] encryptedDigest> = $r16;
        if z0 == 0 goto label2;

        virtualinvoke r1.<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSet(int)>(0);
        goto label3;

     label2:
        $i2 = virtualinvoke r1.<sun.security.util.DerInputStream: int available()>();
        if $i2 == 0 goto label3;

        $i3 = virtualinvoke r1.<sun.security.util.DerInputStream: int peekByte()>();
        $b4 = (byte) $i3;
        if $b4 != -95 goto label3;

        $r18 = new sun.security.pkcs.PKCS9Attributes;
        specialinvoke $r18.<sun.security.pkcs.PKCS9Attributes: void <init>(sun.security.util.DerInputStream,boolean)>(r1, 1);
        r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes unauthenticatedAttributes> = $r18;

     label3:
        $i5 = virtualinvoke r1.<sun.security.util.DerInputStream: int available()>();
        if $i5 == 0 goto label4;

        $r19 = new sun.security.pkcs.ParsingException;
        specialinvoke $r19.<sun.security.pkcs.ParsingException: void <init>(java.lang.String)>("extra data at the end");
        throw $r19;

     label4:
        return;
    }

    public void encode(sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.util.DerOutputStream r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        r1 := @parameter0: sun.security.util.DerOutputStream;
        virtualinvoke r0.<sun.security.pkcs.SignerInfo: void derEncode(java.io.OutputStream)>(r1);
        return;
    }

    public void derEncode(java.io.OutputStream) throws java.io.IOException
    {
        sun.security.pkcs.SignerInfo r0;
        java.io.OutputStream r1;
        sun.security.util.DerOutputStream $r2, r3, r4, r5, $r7, $r17;
        java.math.BigInteger $r6, $r9;
        sun.security.x509.X500Name $r8;
        sun.security.x509.AlgorithmId $r10, $r13;
        sun.security.pkcs.PKCS9Attributes $r11, $r12, $r15, $r16;
        byte[] $r14, $r18;

        r0 := @this: sun.security.pkcs.SignerInfo;
        r1 := @parameter0: java.io.OutputStream;
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        $r6 = r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger version>;
        virtualinvoke r3.<sun.security.util.DerOutputStream: void putInteger(java.math.BigInteger)>($r6);
        $r7 = new sun.security.util.DerOutputStream;
        specialinvoke $r7.<sun.security.util.DerOutputStream: void <init>()>();
        r4 = $r7;
        $r8 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.X500Name issuerName>;
        virtualinvoke $r8.<sun.security.x509.X500Name: void encode(sun.security.util.DerOutputStream)>(r4);
        $r9 = r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger certificateSerialNumber>;
        virtualinvoke r4.<sun.security.util.DerOutputStream: void putInteger(java.math.BigInteger)>($r9);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r4);
        $r10 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestAlgorithmId>;
        virtualinvoke $r10.<sun.security.x509.AlgorithmId: void encode(sun.security.util.DerOutputStream)>(r3);
        $r11 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes>;
        if $r11 == null goto label0;

        $r12 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes>;
        virtualinvoke $r12.<sun.security.pkcs.PKCS9Attributes: void encode(byte,java.io.OutputStream)>(-96, r3);

     label0:
        $r13 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestEncryptionAlgorithmId>;
        virtualinvoke $r13.<sun.security.x509.AlgorithmId: void encode(sun.security.util.DerOutputStream)>(r3);
        $r14 = r0.<sun.security.pkcs.SignerInfo: byte[] encryptedDigest>;
        virtualinvoke r3.<sun.security.util.DerOutputStream: void putOctetString(byte[])>($r14);
        $r15 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes unauthenticatedAttributes>;
        if $r15 == null goto label1;

        $r16 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes unauthenticatedAttributes>;
        virtualinvoke $r16.<sun.security.pkcs.PKCS9Attributes: void encode(byte,java.io.OutputStream)>(-95, r3);

     label1:
        $r17 = new sun.security.util.DerOutputStream;
        specialinvoke $r17.<sun.security.util.DerOutputStream: void <init>()>();
        r5 = $r17;
        virtualinvoke r5.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r3);
        $r18 = virtualinvoke r5.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r18);
        return;
    }

    public java.security.cert.X509Certificate getCertificate(sun.security.pkcs.PKCS7) throws java.io.IOException
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.pkcs.PKCS7 r1;
        java.math.BigInteger $r2;
        sun.security.x509.X500Name $r3;
        java.security.cert.X509Certificate $r4;

        r0 := @this: sun.security.pkcs.SignerInfo;
        r1 := @parameter0: sun.security.pkcs.PKCS7;
        $r2 = r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger certificateSerialNumber>;
        $r3 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.X500Name issuerName>;
        $r4 = virtualinvoke r1.<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate getCertificate(java.math.BigInteger,sun.security.x509.X500Name)>($r2, $r3);
        return $r4;
    }

    public java.util.ArrayList getCertificateChain(sun.security.pkcs.PKCS7) throws java.io.IOException
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.pkcs.PKCS7 r1;
        java.security.cert.X509Certificate r2, r6, $r12, $r14, $r15, $r17, $r19, $r20;
        java.util.ArrayList r3, $r9;
        java.security.cert.X509Certificate[] r4;
        java.security.Principal r5, $r10, $r11, $r13, $r16, $r18;
        int i0, i1, $i2;
        boolean z0, $z2, $z3, $z5;
        java.math.BigInteger $r7;
        sun.security.x509.X500Name $r8;

        r0 := @this: sun.security.pkcs.SignerInfo;
        r1 := @parameter0: sun.security.pkcs.PKCS7;
        $r7 = r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger certificateSerialNumber>;
        $r8 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.X500Name issuerName>;
        r2 = virtualinvoke r1.<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate getCertificate(java.math.BigInteger,sun.security.x509.X500Name)>($r7, $r8);
        if r2 != null goto label0;

        return null;

     label0:
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r3 = $r9;
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);
        r4 = virtualinvoke r1.<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>();
        if r4 == null goto label1;

        $r10 = virtualinvoke r2.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();
        $r11 = virtualinvoke r2.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();
        $z2 = interfaceinvoke $r10.<java.security.Principal: boolean equals(java.lang.Object)>($r11);
        if $z2 == 0 goto label2;

     label1:
        return r3;

     label2:
        r5 = virtualinvoke r2.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();
        i0 = 0;

     label3:
        z0 = 0;
        i1 = i0;

     label4:
        $i2 = lengthof r4;
        if i1 >= $i2 goto label8;

        $r12 = r4[i1];
        $r13 = virtualinvoke $r12.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();
        $z3 = interfaceinvoke r5.<java.security.Principal: boolean equals(java.lang.Object)>($r13);
        if $z3 == 0 goto label7;

        $r14 = r4[i1];
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);
        $r15 = r4[i1];
        $r16 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();
        $r17 = r4[i1];
        $r18 = virtualinvoke $r17.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();
        $z5 = interfaceinvoke $r16.<java.security.Principal: boolean equals(java.lang.Object)>($r18);
        if $z5 == 0 goto label5;

        i0 = lengthof r4;
        goto label6;

     label5:
        $r19 = r4[i1];
        r5 = virtualinvoke $r19.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();
        r6 = r4[i0];
        $r20 = r4[i1];
        r4[i0] = $r20;
        r4[i1] = r6;
        i0 = i0 + 1;

     label6:
        z0 = 1;
        goto label8;

     label7:
        i1 = i1 + 1;
        goto label4;

     label8:
        if z0 != 0 goto label9;

        goto label10;

     label9:
        goto label3;

     label10:
        return r3;
    }

    sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7, byte[]) throws java.security.NoSuchAlgorithmException, java.security.SignatureException
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.pkcs.PKCS7 r1;
        byte[] r2, r5, r8, r10, $r22, $r41;
        sun.security.pkcs.ContentInfo r3;
        java.lang.String r4, $r23, r26, r27, r28, $r48, $r50, $r56, $r58;
        sun.security.util.ObjectIdentifier $r6, r7, $r18, $r20;
        java.security.MessageDigest r9;
        int i0, $i1, $i2, $i3;
        boolean[] r11;
        sun.security.x509.KeyUsageExtension r12, $r32;
        java.io.IOException r13, $r33, $r43, r44;
        boolean z0, $z1, $z2, z3, $z4;
        sun.security.x509.AlgorithmId $r14, $r25;
        sun.security.pkcs.PKCS9Attributes $r15, $r16, $r19, $r24;
        java.lang.Object $r17, $r21, $r35, $r37;
        null_type $n0, $n1, $n2, $n3, $n4;
        byte $b4, $b5;
        java.security.Signature r29;
        java.security.cert.X509Certificate r30;
        java.security.SignatureException $r31, $r34, $r39, $r45, $r53;
        java.lang.Boolean $r36, $r38;
        java.security.PublicKey r40;
        java.lang.StringBuilder $r46, $r47, $r49, $r54, $r55, $r57;
        java.security.InvalidKeyException $r51, r52;

        r0 := @this: sun.security.pkcs.SignerInfo;
        r1 := @parameter0: sun.security.pkcs.PKCS7;
        r2 := @parameter1: byte[];

     label0:
        r3 = virtualinvoke r1.<sun.security.pkcs.PKCS7: sun.security.pkcs.ContentInfo getContentInfo()>();
        if r2 != null goto label1;

        r2 = virtualinvoke r3.<sun.security.pkcs.ContentInfo: byte[] getContentBytes()>();

     label1:
        $r14 = virtualinvoke r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId getDigestAlgorithmId()>();
        r4 = virtualinvoke $r14.<sun.security.x509.AlgorithmId: java.lang.String getName()>();
        $r15 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes>;
        if $r15 != null goto label2;

        r5 = r2;
        goto label14;

     label2:
        $r16 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes>;
        $r6 = <sun.security.pkcs.PKCS9Attribute: sun.security.util.ObjectIdentifier CONTENT_TYPE_OID>;
        $r17 = virtualinvoke $r16.<sun.security.pkcs.PKCS9Attributes: java.lang.Object getAttributeValue(sun.security.util.ObjectIdentifier)>($r6);
        r7 = (sun.security.util.ObjectIdentifier) $r17;
        if r7 == null goto label3;

        $r18 = r3.<sun.security.pkcs.ContentInfo: sun.security.util.ObjectIdentifier contentType>;
        $z1 = virtualinvoke r7.<sun.security.util.ObjectIdentifier: boolean equals(sun.security.util.ObjectIdentifier)>($r18);
        if $z1 != 0 goto label5;

     label3:
        $n0 = null;

     label4:
        return $n0;

     label5:
        $r19 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes>;
        $r20 = <sun.security.pkcs.PKCS9Attribute: sun.security.util.ObjectIdentifier MESSAGE_DIGEST_OID>;
        $r21 = virtualinvoke $r19.<sun.security.pkcs.PKCS9Attributes: java.lang.Object getAttributeValue(sun.security.util.ObjectIdentifier)>($r20);
        $r22 = (byte[]) $r21;
        r8 = (byte[]) $r22;
        if r8 != null goto label7;

        $n1 = null;

     label6:
        return $n1;

     label7:
        $r23 = staticinvoke <sun.security.x509.AlgorithmId: java.lang.String getStandardDigestName(java.lang.String)>(r4);
        r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r23);
        r10 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>(r2);
        $i1 = lengthof r8;
        $i2 = lengthof r10;
        if $i1 == $i2 goto label9;

        $n2 = null;

     label8:
        return $n2;

     label9:
        i0 = 0;

     label10:
        $i3 = lengthof r8;
        if i0 >= $i3 goto label13;

        $b4 = r8[i0];
        $b5 = r10[i0];
        if $b4 == $b5 goto label12;

        $n3 = null;

     label11:
        return $n3;

     label12:
        i0 = i0 + 1;
        goto label10;

     label13:
        $r24 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes>;
        r5 = virtualinvoke $r24.<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>();

     label14:
        $r25 = virtualinvoke r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId getDigestEncryptionAlgorithmId()>();
        r26 = virtualinvoke $r25.<sun.security.x509.AlgorithmId: java.lang.String getName()>();
        r27 = staticinvoke <sun.security.x509.AlgorithmId: java.lang.String getEncAlgFromSigAlg(java.lang.String)>(r26);
        if r27 == null goto label15;

        r26 = r27;

     label15:
        r28 = staticinvoke <sun.security.x509.AlgorithmId: java.lang.String makeSigAlg(java.lang.String,java.lang.String)>(r4, r26);
        r29 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(r28);
        r30 = virtualinvoke r0.<sun.security.pkcs.SignerInfo: java.security.cert.X509Certificate getCertificate(sun.security.pkcs.PKCS7)>(r1);
        if r30 != null goto label17;

        $n4 = null;

     label16:
        return $n4;

     label17:
        $z2 = virtualinvoke r30.<java.security.cert.X509Certificate: boolean hasUnsupportedCriticalExtension()>();
        if $z2 == 0 goto label18;

        $r31 = new java.security.SignatureException;
        specialinvoke $r31.<java.security.SignatureException: void <init>(java.lang.String)>("Certificate has unsupported critical extension(s)");
        throw $r31;

     label18:
        r11 = virtualinvoke r30.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();
        if r11 == null goto label23;

     label19:
        $r32 = new sun.security.x509.KeyUsageExtension;
        specialinvoke $r32.<sun.security.x509.KeyUsageExtension: void <init>(boolean[])>(r11);
        r12 = $r32;

     label20:
        goto label22;

     label21:
        $r33 := @caughtexception;
        r13 = $r33;
        $r34 = new java.security.SignatureException;
        specialinvoke $r34.<java.security.SignatureException: void <init>(java.lang.String)>("Failed to parse keyUsage extension");
        throw $r34;

     label22:
        $r35 = virtualinvoke r12.<sun.security.x509.KeyUsageExtension: java.lang.Object get(java.lang.String)>("digital_signature");
        $r36 = (java.lang.Boolean) $r35;
        z3 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>();
        $r37 = virtualinvoke r12.<sun.security.x509.KeyUsageExtension: java.lang.Object get(java.lang.String)>("non_repudiation");
        $r38 = (java.lang.Boolean) $r37;
        z0 = virtualinvoke $r38.<java.lang.Boolean: boolean booleanValue()>();
        if z3 != 0 goto label23;

        if z0 != 0 goto label23;

        $r39 = new java.security.SignatureException;
        specialinvoke $r39.<java.security.SignatureException: void <init>(java.lang.String)>("Key usage restricted: cannot be used for digital signatures");
        throw $r39;

     label23:
        r40 = virtualinvoke r30.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();
        virtualinvoke r29.<java.security.Signature: void initVerify(java.security.PublicKey)>(r40);
        virtualinvoke r29.<java.security.Signature: void update(byte[])>(r5);
        $r41 = r0.<sun.security.pkcs.SignerInfo: byte[] encryptedDigest>;
        $z4 = virtualinvoke r29.<java.security.Signature: boolean verify(byte[])>($r41);
        if $z4 == 0 goto label25;

     label24:
        return r0;

     label25:
        goto label28;

     label26:
        $r43 := @caughtexception;
        r44 = $r43;
        $r45 = new java.security.SignatureException;
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IO error verifying signature:\n");
        $r48 = virtualinvoke r44.<java.io.IOException: java.lang.String getMessage()>();
        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r45.<java.security.SignatureException: void <init>(java.lang.String)>($r50);
        throw $r45;

     label27:
        $r51 := @caughtexception;
        r52 = $r51;
        $r53 = new java.security.SignatureException;
        $r54 = new java.lang.StringBuilder;
        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InvalidKey: ");
        $r56 = virtualinvoke r52.<java.security.InvalidKeyException: java.lang.String getMessage()>();
        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r53.<java.security.SignatureException: void <init>(java.lang.String)>($r58);
        throw $r53;

     label28:
        return null;

        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label0 to label4 with label26;
        catch java.io.IOException from label5 to label6 with label26;
        catch java.io.IOException from label7 to label8 with label26;
        catch java.io.IOException from label9 to label11 with label26;
        catch java.io.IOException from label12 to label16 with label26;
        catch java.io.IOException from label17 to label24 with label26;
        catch java.security.InvalidKeyException from label0 to label4 with label27;
        catch java.security.InvalidKeyException from label5 to label6 with label27;
        catch java.security.InvalidKeyException from label7 to label8 with label27;
        catch java.security.InvalidKeyException from label9 to label11 with label27;
        catch java.security.InvalidKeyException from label12 to label16 with label27;
        catch java.security.InvalidKeyException from label17 to label24 with label27;
    }

    sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7) throws java.security.NoSuchAlgorithmException, java.security.SignatureException
    {
        sun.security.pkcs.SignerInfo r0, $r2;
        sun.security.pkcs.PKCS7 r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        r1 := @parameter0: sun.security.pkcs.PKCS7;
        $r2 = virtualinvoke r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>(r1, null);
        return $r2;
    }

    public java.math.BigInteger getVersion()
    {
        sun.security.pkcs.SignerInfo r0;
        java.math.BigInteger $r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        $r1 = r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger version>;
        return $r1;
    }

    public sun.security.x509.X500Name getIssuerName()
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.x509.X500Name $r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        $r1 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.X500Name issuerName>;
        return $r1;
    }

    public java.math.BigInteger getCertificateSerialNumber()
    {
        sun.security.pkcs.SignerInfo r0;
        java.math.BigInteger $r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        $r1 = r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger certificateSerialNumber>;
        return $r1;
    }

    public sun.security.x509.AlgorithmId getDigestAlgorithmId()
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.x509.AlgorithmId $r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        $r1 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestAlgorithmId>;
        return $r1;
    }

    public sun.security.pkcs.PKCS9Attributes getAuthenticatedAttributes()
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.pkcs.PKCS9Attributes $r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        $r1 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes>;
        return $r1;
    }

    public sun.security.x509.AlgorithmId getDigestEncryptionAlgorithmId()
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.x509.AlgorithmId $r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        $r1 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestEncryptionAlgorithmId>;
        return $r1;
    }

    public byte[] getEncryptedDigest()
    {
        sun.security.pkcs.SignerInfo r0;
        byte[] $r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        $r1 = r0.<sun.security.pkcs.SignerInfo: byte[] encryptedDigest>;
        return $r1;
    }

    public sun.security.pkcs.PKCS9Attributes getUnauthenticatedAttributes()
    {
        sun.security.pkcs.SignerInfo r0;
        sun.security.pkcs.PKCS9Attributes $r1;

        r0 := @this: sun.security.pkcs.SignerInfo;
        $r1 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes unauthenticatedAttributes>;
        return $r1;
    }

    public java.lang.String toString()
    {
        sun.security.pkcs.SignerInfo r0;
        sun.misc.HexDumpEncoder $r1, r2;
        java.lang.String r3, r10, $r15, r18, $r23, r26, r33, r47, $r52, r55;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r16, $r17, $r19, $r20, $r21, $r24, $r25, $r27, $r28, $r29, $r31, $r32, $r35, $r36, $r37, $r39, $r40, $r41, $r42, $r43, $r45, $r46, $r48, $r49, $r50, $r53, $r54, $r57, $r58, $r59, $r61, $r62;
        sun.security.x509.X500Name $r7;
        java.math.BigInteger $r14, $r22;
        sun.security.x509.AlgorithmId $r30, $r44;
        sun.security.pkcs.PKCS9Attributes $r34, $r38, $r56, $r60;
        byte[] $r51;

        r0 := @this: sun.security.pkcs.SignerInfo;
        $r1 = new sun.misc.HexDumpEncoder;
        specialinvoke $r1.<sun.misc.HexDumpEncoder: void <init>()>();
        r2 = $r1;
        r3 = "";
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signer Info for (issuer): ");
        $r7 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.X500Name issuerName>;
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tversion: ");
        $r14 = r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger version>;
        $r15 = staticinvoke <sun.security.util.Debug: java.lang.String toHexString(java.math.BigInteger)>($r14);
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tcertificateSerialNumber: ");
        $r22 = r0.<sun.security.pkcs.SignerInfo: java.math.BigInteger certificateSerialNumber>;
        $r23 = staticinvoke <sun.security.util.Debug: java.lang.String toHexString(java.math.BigInteger)>($r22);
        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tdigestAlgorithmId: ");
        $r30 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestAlgorithmId>;
        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        $r34 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes>;
        if $r34 == null goto label0;

        $r35 = new java.lang.StringBuilder;
        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tauthenticatedAttributes: ");
        $r38 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes authenticatedAttributes>;
        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r33 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $r41 = new java.lang.StringBuilder;
        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tdigestEncryptionAlgorithmId: ");
        $r44 = r0.<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId digestEncryptionAlgorithmId>;
        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
        $r48 = new java.lang.StringBuilder;
        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tencryptedDigest: \n");
        $r51 = r0.<sun.security.pkcs.SignerInfo: byte[] encryptedDigest>;
        $r52 = virtualinvoke r2.<sun.misc.HexDumpEncoder: java.lang.String encodeBuffer(byte[])>($r51);
        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
        $r56 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes unauthenticatedAttributes>;
        if $r56 == null goto label1;

        $r57 = new java.lang.StringBuilder;
        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tunauthenticatedAttributes: ");
        $r60 = r0.<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS9Attributes unauthenticatedAttributes>;
        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r55 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r55;
    }
}
