public class java.util.LinkedHashSet extends java.util.HashSet implements java.util.Set, java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>(int, float)
    {
        java.util.LinkedHashSet r0;
        int i0;
        float f0;

        r0 := @this: java.util.LinkedHashSet;
        i0 := @parameter0: int;
        f0 := @parameter1: float;
        specialinvoke r0.<java.util.HashSet: void <init>(int,float,boolean)>(i0, f0, 1);
        return;
    }

    public void <init>(int)
    {
        java.util.LinkedHashSet r0;
        int i0;

        r0 := @this: java.util.LinkedHashSet;
        i0 := @parameter0: int;
        specialinvoke r0.<java.util.HashSet: void <init>(int,float,boolean)>(i0, 0.75F, 1);
        return;
    }

    public void <init>()
    {
        java.util.LinkedHashSet r0;

        r0 := @this: java.util.LinkedHashSet;
        specialinvoke r0.<java.util.HashSet: void <init>(int,float,boolean)>(16, 0.75F, 1);
        return;
    }

    public void <init>(java.util.Collection)
    {
        java.util.LinkedHashSet r0;
        java.util.Collection r1;
        int $i0, $i1, $i2;

        r0 := @this: java.util.LinkedHashSet;
        r1 := @parameter0: java.util.Collection;
        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();
        $i1 = 2 * $i0;
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 11);
        specialinvoke r0.<java.util.HashSet: void <init>(int,float,boolean)>($i2, 0.75F, 1);
        virtualinvoke r0.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>(r1);
        return;
    }
}
