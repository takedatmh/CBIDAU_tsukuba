class sun.misc.ProxyGenerator$ConstantPool extends java.lang.Object
{
    private java.util.List pool;
    private java.util.Map map;
    private boolean readOnly;

    private void <init>()
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        java.util.ArrayList $r1;
        java.util.HashMap $r2;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(32);
        r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.List pool> = $r1;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(16);
        r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.Map map> = $r2;
        r0.<sun.misc.ProxyGenerator$ConstantPool: boolean readOnly> = 0;
        return;
    }

    public short getUtf8(java.lang.String)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;
        short $s0;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $s0 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getValue(java.lang.Object)>(r1);
        return $s0;
    }

    public short getInteger(int)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        int i0;
        java.lang.Integer $r1;
        short $s1;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        i0 := @parameter0: int;
        $r1 = new java.lang.Integer;
        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);
        $s1 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getValue(java.lang.Object)>($r1);
        return $s1;
    }

    public short getFloat(float)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        float f0;
        java.lang.Float $r1;
        short $s0;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        f0 := @parameter0: float;
        $r1 = new java.lang.Float;
        specialinvoke $r1.<java.lang.Float: void <init>(float)>(f0);
        $s0 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getValue(java.lang.Object)>($r1);
        return $s0;
    }

    public short getClass(java.lang.String)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        java.lang.String r1;
        short s0, $s1;
        sun.misc.ProxyGenerator$ConstantPool$IndirectEntry $r2;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: java.lang.String;
        s0 = virtualinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getUtf8(java.lang.String)>(r1);
        $r2 = new sun.misc.ProxyGenerator$ConstantPool$IndirectEntry;
        specialinvoke $r2.<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: void <init>(int,short)>(7, s0);
        $s1 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getIndirect(sun.misc.ProxyGenerator$ConstantPool$IndirectEntry)>($r2);
        return $s1;
    }

    public short getString(java.lang.String)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        java.lang.String r1;
        short s0, $s1;
        sun.misc.ProxyGenerator$ConstantPool$IndirectEntry $r2;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: java.lang.String;
        s0 = virtualinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getUtf8(java.lang.String)>(r1);
        $r2 = new sun.misc.ProxyGenerator$ConstantPool$IndirectEntry;
        specialinvoke $r2.<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: void <init>(int,short)>(8, s0);
        $s1 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getIndirect(sun.misc.ProxyGenerator$ConstantPool$IndirectEntry)>($r2);
        return $s1;
    }

    public short getFieldRef(java.lang.String, java.lang.String, java.lang.String)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        java.lang.String r1, r2, r3;
        short s0, s1, $s2;
        sun.misc.ProxyGenerator$ConstantPool$IndirectEntry $r4;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        s0 = virtualinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>(r1);
        s1 = virtualinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getNameAndType(java.lang.String,java.lang.String)>(r2, r3);
        $r4 = new sun.misc.ProxyGenerator$ConstantPool$IndirectEntry;
        specialinvoke $r4.<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: void <init>(int,short,short)>(9, s0, s1);
        $s2 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getIndirect(sun.misc.ProxyGenerator$ConstantPool$IndirectEntry)>($r4);
        return $s2;
    }

    public short getMethodRef(java.lang.String, java.lang.String, java.lang.String)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        java.lang.String r1, r2, r3;
        short s0, s1, $s2;
        sun.misc.ProxyGenerator$ConstantPool$IndirectEntry $r4;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        s0 = virtualinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>(r1);
        s1 = virtualinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getNameAndType(java.lang.String,java.lang.String)>(r2, r3);
        $r4 = new sun.misc.ProxyGenerator$ConstantPool$IndirectEntry;
        specialinvoke $r4.<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: void <init>(int,short,short)>(10, s0, s1);
        $s2 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getIndirect(sun.misc.ProxyGenerator$ConstantPool$IndirectEntry)>($r4);
        return $s2;
    }

    public short getInterfaceMethodRef(java.lang.String, java.lang.String, java.lang.String)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        java.lang.String r1, r2, r3;
        short s0, s1, $s2;
        sun.misc.ProxyGenerator$ConstantPool$IndirectEntry $r4;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        s0 = virtualinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>(r1);
        s1 = virtualinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getNameAndType(java.lang.String,java.lang.String)>(r2, r3);
        $r4 = new sun.misc.ProxyGenerator$ConstantPool$IndirectEntry;
        specialinvoke $r4.<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: void <init>(int,short,short)>(11, s0, s1);
        $s2 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getIndirect(sun.misc.ProxyGenerator$ConstantPool$IndirectEntry)>($r4);
        return $s2;
    }

    public short getNameAndType(java.lang.String, java.lang.String)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        java.lang.String r1, r2;
        short s0, s1, $s2;
        sun.misc.ProxyGenerator$ConstantPool$IndirectEntry $r3;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        s0 = virtualinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getUtf8(java.lang.String)>(r1);
        s1 = virtualinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getUtf8(java.lang.String)>(r2);
        $r3 = new sun.misc.ProxyGenerator$ConstantPool$IndirectEntry;
        specialinvoke $r3.<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: void <init>(int,short,short)>(12, s0, s1);
        $s2 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short getIndirect(sun.misc.ProxyGenerator$ConstantPool$IndirectEntry)>($r3);
        return $s2;
    }

    public void setReadOnly()
    {
        sun.misc.ProxyGenerator$ConstantPool r0;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r0.<sun.misc.ProxyGenerator$ConstantPool: boolean readOnly> = 1;
        return;
    }

    public void write(java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        java.io.OutputStream r1;
        java.io.DataOutputStream $r2, r3;
        java.util.Iterator r4;
        sun.misc.ProxyGenerator$ConstantPool$Entry r5;
        java.util.List $r6, $r7;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: java.io.OutputStream;
        $r2 = new java.io.DataOutputStream;
        specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);
        r3 = $r2;
        $r6 = r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.List pool>;
        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();
        $i1 = $i0 + 1;
        virtualinvoke r3.<java.io.DataOutputStream: void writeShort(int)>($i1);
        $r7 = r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.List pool>;
        r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (sun.misc.ProxyGenerator$ConstantPool$Entry) $r8;
        virtualinvoke r5.<sun.misc.ProxyGenerator$ConstantPool$Entry: void write(java.io.DataOutputStream)>(r3);
        goto label0;

     label1:
        return;
    }

    private short addEntry(sun.misc.ProxyGenerator$ConstantPool$Entry)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        sun.misc.ProxyGenerator$ConstantPool$Entry r1;
        java.util.List $r2, $r3, $r5;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r4;
        short $s2;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: sun.misc.ProxyGenerator$ConstantPool$Entry;
        $r2 = r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.List pool>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);
        $r3 = r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.List pool>;
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();
        if $i0 < 65535 goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("constant pool size limit exceeded");
        throw $r4;

     label0:
        $r5 = r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.List pool>;
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        $s2 = (short) $i1;
        return $s2;
    }

    private short getValue(java.lang.Object)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        java.lang.Object r1, $r5;
        java.lang.Short r2, $r12;
        java.lang.StringBuilder $r3, $r7, $r8;
        short s0, $s1;
        java.util.Map $r4, $r11;
        boolean $z0;
        java.lang.InternalError $r6;
        java.lang.String $r9;
        sun.misc.ProxyGenerator$ConstantPool$ValueEntry $r10;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: java.lang.Object;
        $r4 = r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.Map map>;
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (java.lang.Short) $r5;
        if r2 == null goto label0;

        $s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>();
        return $s1;

     label0:
        $z0 = r0.<sun.misc.ProxyGenerator$ConstantPool: boolean readOnly>;
        if $z0 == 0 goto label1;

        $r6 = new java.lang.InternalError;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("late constant pool addition: ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.InternalError: void <init>(java.lang.String)>($r9);
        throw $r6;

     label1:
        $r10 = new sun.misc.ProxyGenerator$ConstantPool$ValueEntry;
        specialinvoke $r10.<sun.misc.ProxyGenerator$ConstantPool$ValueEntry: void <init>(java.lang.Object)>(r1);
        s0 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short addEntry(sun.misc.ProxyGenerator$ConstantPool$Entry)>($r10);
        $r11 = r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.Map map>;
        $r12 = new java.lang.Short;
        specialinvoke $r12.<java.lang.Short: void <init>(short)>(s0);
        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r12);
        return s0;
    }

    private short getIndirect(sun.misc.ProxyGenerator$ConstantPool$IndirectEntry)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        sun.misc.ProxyGenerator$ConstantPool$IndirectEntry r1;
        java.lang.Short r2, $r7;
        short s0, $s1;
        java.util.Map $r3, $r6;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.InternalError $r5;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: sun.misc.ProxyGenerator$ConstantPool$IndirectEntry;
        $r3 = r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.Map map>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (java.lang.Short) $r4;
        if r2 == null goto label0;

        $s1 = virtualinvoke r2.<java.lang.Short: short shortValue()>();
        return $s1;

     label0:
        $z0 = r0.<sun.misc.ProxyGenerator$ConstantPool: boolean readOnly>;
        if $z0 == 0 goto label1;

        $r5 = new java.lang.InternalError;
        specialinvoke $r5.<java.lang.InternalError: void <init>(java.lang.String)>("late constant pool addition");
        throw $r5;

     label1:
        s0 = specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: short addEntry(sun.misc.ProxyGenerator$ConstantPool$Entry)>(r1);
        $r6 = r0.<sun.misc.ProxyGenerator$ConstantPool: java.util.Map map>;
        $r7 = new java.lang.Short;
        specialinvoke $r7.<java.lang.Short: void <init>(short)>(s0);
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);
        return s0;
    }

    void <init>(sun.misc.ProxyGenerator$1)
    {
        sun.misc.ProxyGenerator$ConstantPool r0;
        sun.misc.ProxyGenerator$1 r1;

        r0 := @this: sun.misc.ProxyGenerator$ConstantPool;
        r1 := @parameter0: sun.misc.ProxyGenerator$1;
        specialinvoke r0.<sun.misc.ProxyGenerator$ConstantPool: void <init>()>();
        return;
    }
}
