public class org.apache.tomcat.util.net.JIoEndpoint extends org.apache.tomcat.util.net.AbstractEndpoint
{
    private static final org.apache.juli.logging.Log log;
    protected java.net.ServerSocket serverSocket;
    protected org.apache.tomcat.util.net.JIoEndpoint$Handler handler;
    protected org.apache.tomcat.util.net.ServerSocketFactory serverSocketFactory;
    protected java.util.concurrent.ConcurrentLinkedQueue waitingRequests;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/tomcat/util/net/JIoEndpoint");
        <org.apache.tomcat.util.net.JIoEndpoint: org.apache.juli.logging.Log log> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        java.util.concurrent.ConcurrentLinkedQueue $r1;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        specialinvoke r0.<org.apache.tomcat.util.net.AbstractEndpoint: void <init>()>();
        r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.ServerSocket serverSocket> = null;
        r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.JIoEndpoint$Handler handler> = null;
        r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.ServerSocketFactory serverSocketFactory> = null;
        $r1 = new java.util.concurrent.ConcurrentLinkedQueue;
        specialinvoke $r1.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();
        r0.<org.apache.tomcat.util.net.JIoEndpoint: java.util.concurrent.ConcurrentLinkedQueue waitingRequests> = $r1;
        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void setMaxConnections(int)>(0);
        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void setExecutorTerminationTimeoutMillis(long)>(0L);
        return;
    }

    public void setHandler(org.apache.tomcat.util.net.JIoEndpoint$Handler)
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        org.apache.tomcat.util.net.JIoEndpoint$Handler r1;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        r1 := @parameter0: org.apache.tomcat.util.net.JIoEndpoint$Handler;
        r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.JIoEndpoint$Handler handler> = r1;
        return;
    }

    public org.apache.tomcat.util.net.JIoEndpoint$Handler getHandler()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        org.apache.tomcat.util.net.JIoEndpoint$Handler $r1;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        $r1 = r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.JIoEndpoint$Handler handler>;
        return $r1;
    }

    public void setServerSocketFactory(org.apache.tomcat.util.net.ServerSocketFactory)
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        org.apache.tomcat.util.net.ServerSocketFactory r1;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        r1 := @parameter0: org.apache.tomcat.util.net.ServerSocketFactory;
        r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.ServerSocketFactory serverSocketFactory> = r1;
        return;
    }

    public org.apache.tomcat.util.net.ServerSocketFactory getServerSocketFactory()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        org.apache.tomcat.util.net.ServerSocketFactory $r1;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        $r1 = r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.ServerSocketFactory serverSocketFactory>;
        return $r1;
    }

    public int getLocalPort()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        java.net.ServerSocket r1;
        int $i0;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        r1 = r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.ServerSocket serverSocket>;
        if r1 != null goto label0;

        return -1;

     label0:
        $i0 = virtualinvoke r1.<java.net.ServerSocket: int getLocalPort()>();
        return $i0;
    }

    public boolean getUseSendfile()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        return 0;
    }

    public boolean getUseComet()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        return 0;
    }

    public boolean getUseCometTimeout()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        return 0;
    }

    public boolean getDeferAccept()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        return 0;
    }

    public boolean getUsePolling()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        return 0;
    }

    private void closeSocket(java.net.Socket)
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        java.net.Socket r1;
        java.io.IOException r2, $r3;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        r1 := @parameter0: java.net.Socket;

     label0:
        virtualinvoke r1.<java.net.Socket: void close()>();

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        r2 = $r3;

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void bind() throws java.lang.Exception
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        java.net.BindException r1, r3, $r16, $r32;
        java.lang.String r2, $r19, $r20, $r24, $r25, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.tomcat.util.net.ServerSocketFactory $r4, $r7, $r11, $r13;
        boolean $z0;
        org.apache.tomcat.util.net.JIoEndpoint$Handler $r5;
        org.apache.tomcat.util.net.SSLImplementation $r6;
        org.apache.tomcat.util.net.DefaultServerSocketFactory $r8;
        java.net.ServerSocket $r9, $r12, $r15;
        java.net.InetAddress $r10, $r14, $r17, $r27;
        java.lang.StringBuilder $r18, $r21, $r22, $r23, $r26, $r29, $r30, $r31;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        $i0 = r0.<org.apache.tomcat.util.net.JIoEndpoint: int acceptorThreadCount>;
        if $i0 != 0 goto label0;

        r0.<org.apache.tomcat.util.net.JIoEndpoint: int acceptorThreadCount> = 1;

     label0:
        $i1 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: int getMaxConnections()>();
        if $i1 != 0 goto label1;

        $i2 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: int getMaxThreadsWithExecutor()>();
        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void setMaxConnections(int)>($i2);

     label1:
        $r4 = r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.ServerSocketFactory serverSocketFactory>;
        if $r4 != null goto label3;

        $z0 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean isSSLEnabled()>();
        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.JIoEndpoint$Handler handler>;
        $r6 = interfaceinvoke $r5.<org.apache.tomcat.util.net.JIoEndpoint$Handler: org.apache.tomcat.util.net.SSLImplementation getSslImplementation()>();
        $r7 = virtualinvoke $r6.<org.apache.tomcat.util.net.SSLImplementation: org.apache.tomcat.util.net.ServerSocketFactory getServerSocketFactory(org.apache.tomcat.util.net.AbstractEndpoint)>(r0);
        r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.ServerSocketFactory serverSocketFactory> = $r7;
        goto label3;

     label2:
        $r8 = new org.apache.tomcat.util.net.DefaultServerSocketFactory;
        specialinvoke $r8.<org.apache.tomcat.util.net.DefaultServerSocketFactory: void <init>(org.apache.tomcat.util.net.AbstractEndpoint)>(r0);
        r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.ServerSocketFactory serverSocketFactory> = $r8;

     label3:
        $r9 = r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.ServerSocket serverSocket>;
        if $r9 != null goto label10;

     label4:
        $r10 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.InetAddress getAddress()>();
        if $r10 != null goto label5;

        $r11 = r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.ServerSocketFactory serverSocketFactory>;
        $i3 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: int getPort()>();
        $i4 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: int getBacklog()>();
        $r12 = interfaceinvoke $r11.<org.apache.tomcat.util.net.ServerSocketFactory: java.net.ServerSocket createSocket(int,int)>($i3, $i4);
        r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.ServerSocket serverSocket> = $r12;
        goto label10;

     label5:
        $r13 = r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.ServerSocketFactory serverSocketFactory>;
        $i5 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: int getPort()>();
        $i6 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: int getBacklog()>();
        $r14 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.InetAddress getAddress()>();
        $r15 = interfaceinvoke $r13.<org.apache.tomcat.util.net.ServerSocketFactory: java.net.ServerSocket createSocket(int,int,java.net.InetAddress)>($i5, $i6, $r14);
        r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.ServerSocket serverSocket> = $r15;

     label6:
        goto label10;

     label7:
        $r16 := @caughtexception;
        r1 = $r16;
        $r17 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.InetAddress getAddress()>();
        if $r17 != null goto label8;

        $r18 = new java.lang.StringBuilder;
        $r19 = virtualinvoke r1.<java.net.BindException: java.lang.String getMessage()>();
        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r19);
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r20);
        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <null>:");
        $i7 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: int getPort()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
        r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label9;

     label8:
        $r23 = new java.lang.StringBuilder;
        $r24 = virtualinvoke r1.<java.net.BindException: java.lang.String getMessage()>();
        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24);
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>($r25);
        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r27 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.InetAddress getAddress()>();
        $r28 = virtualinvoke $r27.<java.net.InetAddress: java.lang.String toString()>();
        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $i8 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: int getPort()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
        r2 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

     label9:
        $r32 = new java.net.BindException;
        specialinvoke $r32.<java.net.BindException: void <init>(java.lang.String)>(r2);
        r3 = $r32;
        virtualinvoke r3.<java.net.BindException: java.lang.Throwable initCause(java.lang.Throwable)>(r1);
        throw r3;

     label10:
        return;

        catch java.net.BindException from label4 to label6 with label7;
    }

    public void startInternal() throws java.lang.Exception
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        org.apache.tomcat.util.net.JIoEndpoint$AsyncTimeout $r1;
        java.lang.Thread r2, $r5;
        boolean $z0;
        java.util.concurrent.Executor $r3;
        java.lang.StringBuilder $r6, $r9;
        java.lang.String $r7, $r8, $r10;
        int $i0;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        $z0 = r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean running>;
        if $z0 != 0 goto label1;

        r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean running> = 1;
        r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean paused> = 0;
        $r3 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: java.util.concurrent.Executor getExecutor()>();
        if $r3 != null goto label0;

        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void createExecutor()>();

     label0:
        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.threads.LimitLatch initializeConnectionLatch()>();
        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void startAcceptorThreads()>();
        $r5 = new java.lang.Thread;
        $r1 = new org.apache.tomcat.util.net.JIoEndpoint$AsyncTimeout;
        specialinvoke $r1.<org.apache.tomcat.util.net.JIoEndpoint$AsyncTimeout: void <init>(org.apache.tomcat.util.net.JIoEndpoint)>(r0);
        $r6 = new java.lang.StringBuilder;
        $r7 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: java.lang.String getName()>();
        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-AsyncTimeout");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r1, $r10);
        r2 = $r5;
        $i0 = r0.<org.apache.tomcat.util.net.JIoEndpoint: int threadPriority>;
        virtualinvoke r2.<java.lang.Thread: void setPriority(int)>($i0);
        virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1);
        virtualinvoke r2.<java.lang.Thread: void start()>();

     label1:
        return;
    }

    public void stopInternal()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void releaseConnectionLatch()>();
        $z0 = r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean paused>;
        if $z0 != 0 goto label0;

        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void pause()>();

     label0:
        $z1 = r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean running>;
        if $z1 == 0 goto label1;

        r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean running> = 0;
        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void unlockAccept()>();

     label1:
        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void shutdownExecutor()>();
        return;
    }

    public void unbind() throws java.lang.Exception
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        java.lang.Exception r1, $r6;
        org.apache.tomcat.util.res.StringManager $r2;
        boolean $z0;
        java.net.ServerSocket $r3, $r4, $r5;
        org.apache.juli.logging.Log $r7;
        java.lang.String $r8;
        org.apache.tomcat.util.net.JIoEndpoint$Handler $r9;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        $z0 = r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean running>;
        if $z0 == 0 goto label0;

        virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void stop()>();

     label0:
        $r3 = r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.ServerSocket serverSocket>;
        if $r3 == null goto label5;

     label1:
        $r4 = r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.ServerSocket serverSocket>;
        if $r4 == null goto label4;

        $r5 = r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.ServerSocket serverSocket>;
        virtualinvoke $r5.<java.net.ServerSocket: void close()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r1 = $r6;
        $r7 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.juli.logging.Log log>;
        $r2 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.err.close");
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r8, r1);

     label4:
        r0.<org.apache.tomcat.util.net.JIoEndpoint: java.net.ServerSocket serverSocket> = null;

     label5:
        $r9 = r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.JIoEndpoint$Handler handler>;
        interfaceinvoke $r9.<org.apache.tomcat.util.net.JIoEndpoint$Handler: void recycle()>();
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected org.apache.tomcat.util.net.AbstractEndpoint$Acceptor createAcceptor()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        org.apache.tomcat.util.net.JIoEndpoint$Acceptor $r1;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        $r1 = new org.apache.tomcat.util.net.JIoEndpoint$Acceptor;
        specialinvoke $r1.<org.apache.tomcat.util.net.JIoEndpoint$Acceptor: void <init>(org.apache.tomcat.util.net.JIoEndpoint)>(r0);
        return $r1;
    }

    protected boolean setSocketOptions(java.net.Socket)
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        java.net.Socket r1;
        java.net.SocketException r2, $r4;
        org.apache.tomcat.util.net.SocketProperties $r3;
        org.apache.juli.logging.Log $r5, $r6, $r11;
        boolean $z0;
        org.apache.tomcat.util.res.StringManager $r7, $r12;
        java.lang.String $r8, $r13;
        java.lang.Throwable $r9, r10;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        r1 := @parameter0: java.net.Socket;

     label0:
        $r3 = r0.<org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.net.SocketProperties socketProperties>;
        virtualinvoke $r3.<org.apache.tomcat.util.net.SocketProperties: void setProperties(java.net.Socket)>(r1);

     label1:
        goto label5;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;
        $r5 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label3;

        $r6 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.juli.logging.Log log>;
        $r7 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = virtualinvoke $r7.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.err.unexpected");
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r8, r2);

     label3:
        return 0;

     label4:
        $r9 := @caughtexception;
        r10 = $r9;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r10);
        $r11 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.juli.logging.Log log>;
        $r12 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r13 = virtualinvoke $r12.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.err.unexpected");
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r13, r10);
        return 0;

     label5:
        return 1;

        catch java.net.SocketException from label0 to label1 with label2;
        catch java.lang.Throwable from label0 to label1 with label4;
    }

    protected boolean processSocket(java.net.Socket)
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        java.net.Socket r1;
        org.apache.tomcat.util.net.SocketWrapper $r2, r3;
        int $i0;
        boolean $z0, $z1;
        java.util.concurrent.Executor $r4;
        org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor $r5;
        java.util.concurrent.RejectedExecutionException $r6, r7;
        org.apache.juli.logging.Log $r8, $r14;
        java.lang.StringBuilder $r9, $r10;
        java.lang.String $r11, $r16;
        java.lang.Throwable $r12, r13;
        org.apache.tomcat.util.res.StringManager $r15;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        r1 := @parameter0: java.net.Socket;

     label0:
        $r2 = new org.apache.tomcat.util.net.SocketWrapper;
        specialinvoke $r2.<org.apache.tomcat.util.net.SocketWrapper: void <init>(java.lang.Object)>(r1);
        r3 = $r2;
        $i0 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: int getMaxKeepAliveRequests()>();
        virtualinvoke r3.<org.apache.tomcat.util.net.SocketWrapper: void setKeepAliveLeft(int)>($i0);
        $z0 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean isSSLEnabled()>();
        virtualinvoke r3.<org.apache.tomcat.util.net.SocketWrapper: void setSecure(boolean)>($z0);
        $z1 = r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean running>;
        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r4 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: java.util.concurrent.Executor getExecutor()>();
        $r5 = new org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor;
        specialinvoke $r5.<org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor: void <init>(org.apache.tomcat.util.net.JIoEndpoint,org.apache.tomcat.util.net.SocketWrapper)>(r0, r3);
        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;
        r7 = $r6;
        $r8 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.juli.logging.Log log>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Socket processing request was rejected for:");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r11, r7);
        return 0;

     label5:
        $r12 := @caughtexception;
        r13 = $r12;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r13);
        $r14 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.juli.logging.Log log>;
        $r15 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r16 = virtualinvoke $r15.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.process.fail");
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r16, r13);
        return 0;

     label6:
        return 1;

        catch java.util.concurrent.RejectedExecutionException from label0 to label1 with label4;
        catch java.util.concurrent.RejectedExecutionException from label2 to label3 with label4;
        catch java.lang.Throwable from label0 to label1 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public void processSocketAsync(org.apache.tomcat.util.net.SocketWrapper, org.apache.tomcat.util.net.SocketStatus)
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        org.apache.tomcat.util.net.SocketWrapper r1, r4;
        org.apache.tomcat.util.net.SocketStatus r2;
        org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor r5, $r11;
        java.lang.ClassLoader r6, $r15, $r19;
        org.apache.tomcat.util.security.PrivilegedSetTccl r7, r8, $r13, $r20, $r25, r26, $r29, r30;
        java.lang.Throwable r9, $r24, $r33, $r34, r35;
        java.util.concurrent.ConcurrentLinkedQueue $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Thread $r12, $r17, $r22, $r28, $r32;
        java.lang.Class $r14, $r18;
        java.util.concurrent.Executor $r23;
        org.apache.juli.logging.Log $r36;
        org.apache.tomcat.util.res.StringManager $r37;
        java.lang.String $r38;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        r2 := @parameter1: org.apache.tomcat.util.net.SocketStatus;

     label0:
        r4 = r1;
        entermonitor r1;

     label1:
        $r10 = r0.<org.apache.tomcat.util.net.JIoEndpoint: java.util.concurrent.ConcurrentLinkedQueue waitingRequests>;
        $z0 = virtualinvoke $r10.<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>(r1);
        if $z0 == 0 goto label15;

        $r11 = new org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor;
        specialinvoke $r11.<org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor: void <init>(org.apache.tomcat.util.net.JIoEndpoint,org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)>(r0, r1, r2);
        r5 = $r11;
        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r6 = virtualinvoke $r12.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label2:
        $z1 = <org.apache.tomcat.util.net.Constants: boolean IS_SECURITY_ENABLED>;
        if $z1 == 0 goto label3;

        $r13 = new org.apache.tomcat.util.security.PrivilegedSetTccl;
        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        specialinvoke $r13.<org.apache.tomcat.util.security.PrivilegedSetTccl: void <init>(java.lang.ClassLoader)>($r15);
        r7 = $r13;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r7);
        goto label4;

     label3:
        $r17 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r18 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        virtualinvoke $r17.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r19);

     label4:
        $z2 = r0.<org.apache.tomcat.util.net.JIoEndpoint: boolean running>;
        if $z2 != 0 goto label9;

     label5:
        $z3 = <org.apache.tomcat.util.net.Constants: boolean IS_SECURITY_ENABLED>;
        if $z3 == 0 goto label6;

        $r20 = new org.apache.tomcat.util.security.PrivilegedSetTccl;
        specialinvoke $r20.<org.apache.tomcat.util.security.PrivilegedSetTccl: void <init>(java.lang.ClassLoader)>(r6);
        r8 = $r20;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r8);
        goto label7;

     label6:
        $r22 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r22.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r6);

     label7:
        exitmonitor r4;

     label8:
        return;

     label9:
        $r23 = virtualinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: java.util.concurrent.Executor getExecutor()>();
        interfaceinvoke $r23.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r5);
        goto label13;

     label10:
        $r24 := @caughtexception;
        r9 = $r24;
        $z4 = <org.apache.tomcat.util.net.Constants: boolean IS_SECURITY_ENABLED>;
        if $z4 == 0 goto label11;

        $r25 = new org.apache.tomcat.util.security.PrivilegedSetTccl;
        specialinvoke $r25.<org.apache.tomcat.util.security.PrivilegedSetTccl: void <init>(java.lang.ClassLoader)>(r6);
        r26 = $r25;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r26);
        goto label12;

     label11:
        $r28 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r28.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r6);

     label12:
        throw r9;

     label13:
        $z5 = <org.apache.tomcat.util.net.Constants: boolean IS_SECURITY_ENABLED>;
        if $z5 == 0 goto label14;

        $r29 = new org.apache.tomcat.util.security.PrivilegedSetTccl;
        specialinvoke $r29.<org.apache.tomcat.util.security.PrivilegedSetTccl: void <init>(java.lang.ClassLoader)>(r6);
        r30 = $r29;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r30);
        goto label15;

     label14:
        $r32 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r32.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r6);

     label15:
        exitmonitor r4;

     label16:
        goto label21;

     label17:
        $r33 := @caughtexception;

     label18:
        exitmonitor r4;

     label19:
        throw $r33;

     label20:
        $r34 := @caughtexception;
        r35 = $r34;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r35);
        $r36 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.juli.logging.Log log>;
        $r37 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r38 = virtualinvoke $r37.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.process.fail");
        interfaceinvoke $r36.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r38, r35);

     label21:
        return;

        catch java.lang.Throwable from label2 to label5 with label10;
        catch java.lang.Throwable from label9 to label10 with label10;
        catch java.lang.Throwable from label1 to label8 with label17;
        catch java.lang.Throwable from label9 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label0 to label8 with label20;
        catch java.lang.Throwable from label9 to label20 with label20;
    }

    public void removeWaitingRequest(org.apache.tomcat.util.net.SocketWrapper)
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        java.util.concurrent.ConcurrentLinkedQueue $r2;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        $r2 = r0.<org.apache.tomcat.util.net.JIoEndpoint: java.util.concurrent.ConcurrentLinkedQueue waitingRequests>;
        virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>(r1);
        return;
    }

    protected org.apache.juli.logging.Log getLog()
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        org.apache.juli.logging.Log $r1;

        r0 := @this: org.apache.tomcat.util.net.JIoEndpoint;
        $r1 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.juli.logging.Log log>;
        return $r1;
    }

    static void access$0(org.apache.tomcat.util.net.JIoEndpoint, java.net.Socket)
    {
        org.apache.tomcat.util.net.JIoEndpoint r0;
        java.net.Socket r1;

        r0 := @parameter0: org.apache.tomcat.util.net.JIoEndpoint;
        r1 := @parameter1: java.net.Socket;
        specialinvoke r0.<org.apache.tomcat.util.net.JIoEndpoint: void closeSocket(java.net.Socket)>(r1);
        return;
    }

    static org.apache.juli.logging.Log access$1()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = <org.apache.tomcat.util.net.JIoEndpoint: org.apache.juli.logging.Log log>;
        return $r0;
    }
}
