final class com.sun.naming.internal.VersionHelper12 extends com.sun.naming.internal.VersionHelper
{

    void <init>()
    {
        com.sun.naming.internal.VersionHelper12 r0;

        r0 := @this: com.sun.naming.internal.VersionHelper12;
        specialinvoke r0.<com.sun.naming.internal.VersionHelper: void <init>()>();
        return;
    }

    public java.lang.Class loadClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        com.sun.naming.internal.VersionHelper12 r0;
        java.lang.String r1;
        java.lang.ClassLoader $r2;
        java.lang.Class $r3;

        r0 := @this: com.sun.naming.internal.VersionHelper12;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<com.sun.naming.internal.VersionHelper12: java.lang.ClassLoader getContextClassLoader()>();
        $r3 = virtualinvoke r0.<com.sun.naming.internal.VersionHelper12: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>(r1, $r2);
        return $r3;
    }

    java.lang.Class loadClass(java.lang.String, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        com.sun.naming.internal.VersionHelper12 r0;
        java.lang.String r1;
        java.lang.ClassLoader r2;
        java.lang.Class r3;

        r0 := @this: com.sun.naming.internal.VersionHelper12;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.ClassLoader;
        r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 1, r2);
        return r3;
    }

    public java.lang.Class loadClass(java.lang.String, java.lang.String) throws java.lang.ClassNotFoundException, java.net.MalformedURLException
    {
        com.sun.naming.internal.VersionHelper12 r0;
        java.lang.String r1, r2;
        java.lang.ClassLoader r3;
        java.net.URLClassLoader r4;
        java.net.URL[] $r5;
        java.lang.Class $r6;

        r0 := @this: com.sun.naming.internal.VersionHelper12;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = virtualinvoke r0.<com.sun.naming.internal.VersionHelper12: java.lang.ClassLoader getContextClassLoader()>();
        $r5 = staticinvoke <com.sun.naming.internal.VersionHelper12: java.net.URL[] getUrlArray(java.lang.String)>(r2);
        r4 = staticinvoke <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[],java.lang.ClassLoader)>($r5, r3);
        $r6 = virtualinvoke r0.<com.sun.naming.internal.VersionHelper12: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>(r1, r4);
        return $r6;
    }

    java.lang.String getJndiProperty(int)
    {
        com.sun.naming.internal.VersionHelper12 r0;
        int i0;
        com.sun.naming.internal.VersionHelper12$1 $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: com.sun.naming.internal.VersionHelper12;
        i0 := @parameter0: int;
        $r1 = new com.sun.naming.internal.VersionHelper12$1;
        specialinvoke $r1.<com.sun.naming.internal.VersionHelper12$1: void <init>(com.sun.naming.internal.VersionHelper12,int)>(r0, i0);
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        $r3 = (java.lang.String) $r2;
        return $r3;
    }

    java.lang.String[] getJndiProperties()
    {
        com.sun.naming.internal.VersionHelper12 r0;
        com.sun.naming.internal.VersionHelper12$2 $r1;
        java.util.Properties r2;
        java.lang.String[] r3, $r4, $r6, $r7;
        int i0, $i1, $i2;
        java.lang.Object $r5;
        java.lang.String $r8, $r9;

        r0 := @this: com.sun.naming.internal.VersionHelper12;
        $r1 = new com.sun.naming.internal.VersionHelper12$2;
        specialinvoke $r1.<com.sun.naming.internal.VersionHelper12$2: void <init>(com.sun.naming.internal.VersionHelper12)>(r0);
        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        r2 = (java.util.Properties) $r5;
        if r2 != null goto label0;

        return null;

     label0:
        $r6 = <com.sun.naming.internal.VersionHelper12: java.lang.String[] PROPS>;
        $i1 = lengthof $r6;
        r3 = newarray (java.lang.String)[$i1];
        i0 = 0;

     label1:
        $r7 = <com.sun.naming.internal.VersionHelper12: java.lang.String[] PROPS>;
        $i2 = lengthof $r7;
        if i0 >= $i2 goto label2;

        $r4 = <com.sun.naming.internal.VersionHelper12: java.lang.String[] PROPS>;
        $r8 = $r4[i0];
        $r9 = virtualinvoke r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r8);
        r3[i0] = $r9;
        i0 = i0 + 1;
        goto label1;

     label2:
        return r3;
    }

    java.io.InputStream getResourceAsStream(java.lang.Class, java.lang.String)
    {
        com.sun.naming.internal.VersionHelper12 r0;
        java.lang.Class r1;
        java.lang.String r2;
        com.sun.naming.internal.VersionHelper12$3 $r3;
        java.lang.Object $r4;
        java.io.InputStream $r5;

        r0 := @this: com.sun.naming.internal.VersionHelper12;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.String;
        $r3 = new com.sun.naming.internal.VersionHelper12$3;
        specialinvoke $r3.<com.sun.naming.internal.VersionHelper12$3: void <init>(com.sun.naming.internal.VersionHelper12,java.lang.Class,java.lang.String)>(r0, r1, r2);
        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);
        $r5 = (java.io.InputStream) $r4;
        return $r5;
    }

    java.io.InputStream getJavaHomeLibStream(java.lang.String)
    {
        com.sun.naming.internal.VersionHelper12 r0;
        java.lang.String r1;
        com.sun.naming.internal.VersionHelper12$4 $r2;
        java.lang.Object $r3;
        java.io.InputStream $r4;

        r0 := @this: com.sun.naming.internal.VersionHelper12;
        r1 := @parameter0: java.lang.String;
        $r2 = new com.sun.naming.internal.VersionHelper12$4;
        specialinvoke $r2.<com.sun.naming.internal.VersionHelper12$4: void <init>(com.sun.naming.internal.VersionHelper12,java.lang.String)>(r0, r1);
        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);
        $r4 = (java.io.InputStream) $r3;
        return $r4;
    }

    javax.naming.NamingEnumeration getResources(java.lang.ClassLoader, java.lang.String) throws java.io.IOException
    {
        com.sun.naming.internal.VersionHelper12 r0;
        java.lang.ClassLoader r1;
        java.lang.String r2;
        com.sun.naming.internal.VersionHelper12$5 $r3;
        java.util.Enumeration r4;
        java.security.PrivilegedActionException r5, $r7;
        java.lang.Object $r6;
        java.lang.Exception $r8;
        java.io.IOException $r9;
        com.sun.naming.internal.VersionHelper12$InputStreamEnumeration $r10;

        r0 := @this: com.sun.naming.internal.VersionHelper12;
        r1 := @parameter0: java.lang.ClassLoader;
        r2 := @parameter1: java.lang.String;

     label0:
        $r3 = new com.sun.naming.internal.VersionHelper12$5;
        specialinvoke $r3.<com.sun.naming.internal.VersionHelper12$5: void <init>(com.sun.naming.internal.VersionHelper12,java.lang.ClassLoader,java.lang.String)>(r0, r1, r2);
        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r3);
        r4 = (java.util.Enumeration) $r6;

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r5 = $r7;
        $r8 = virtualinvoke r5.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $r9 = (java.io.IOException) $r8;
        throw $r9;

     label3:
        $r10 = new com.sun.naming.internal.VersionHelper12$InputStreamEnumeration;
        specialinvoke $r10.<com.sun.naming.internal.VersionHelper12$InputStreamEnumeration: void <init>(com.sun.naming.internal.VersionHelper12,java.util.Enumeration)>(r0, r4);
        return $r10;

        catch java.security.PrivilegedActionException from label0 to label1 with label2;
    }

    java.lang.ClassLoader getContextClassLoader()
    {
        com.sun.naming.internal.VersionHelper12 r0;
        com.sun.naming.internal.VersionHelper12$6 $r1;
        java.lang.Object $r2;
        java.lang.ClassLoader $r3;

        r0 := @this: com.sun.naming.internal.VersionHelper12;
        $r1 = new com.sun.naming.internal.VersionHelper12$6;
        specialinvoke $r1.<com.sun.naming.internal.VersionHelper12$6: void <init>(com.sun.naming.internal.VersionHelper12)>(r0);
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        $r3 = (java.lang.ClassLoader) $r2;
        return $r3;
    }
}
