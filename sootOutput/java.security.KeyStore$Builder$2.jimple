final class java.security.KeyStore$Builder$2 extends java.security.KeyStore$Builder
{
    private volatile boolean getCalled;
    private java.io.IOException oldException;
    private final java.security.PrivilegedExceptionAction action;
    final java.security.Provider val$provider;
    final java.lang.String val$type;
    final java.security.KeyStore$ProtectionParameter val$protection;
    final java.security.AccessControlContext val$context;

    void <init>(java.security.Provider, java.lang.String, java.security.KeyStore$ProtectionParameter, java.security.AccessControlContext)
    {
        java.security.KeyStore$Builder$2 r0;
        java.security.Provider r1;
        java.lang.String r2;
        java.security.KeyStore$ProtectionParameter r3;
        java.security.AccessControlContext r4;
        java.security.KeyStore$Builder$2$1 $r5;

        r0 := @this: java.security.KeyStore$Builder$2;
        r1 := @parameter0: java.security.Provider;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.security.KeyStore$ProtectionParameter;
        r4 := @parameter3: java.security.AccessControlContext;
        r0.<java.security.KeyStore$Builder$2: java.security.Provider val$provider> = r1;
        r0.<java.security.KeyStore$Builder$2: java.lang.String val$type> = r2;
        r0.<java.security.KeyStore$Builder$2: java.security.KeyStore$ProtectionParameter val$protection> = r3;
        r0.<java.security.KeyStore$Builder$2: java.security.AccessControlContext val$context> = r4;
        specialinvoke r0.<java.security.KeyStore$Builder: void <init>()>();
        $r5 = new java.security.KeyStore$Builder$2$1;
        specialinvoke $r5.<java.security.KeyStore$Builder$2$1: void <init>(java.security.KeyStore$Builder$2)>(r0);
        r0.<java.security.KeyStore$Builder$2: java.security.PrivilegedExceptionAction action> = $r5;
        return;
    }

    public synchronized java.security.KeyStore getKeyStore() throws java.security.KeyStoreException
    {
        java.security.KeyStore$Builder$2 r0;
        java.security.PrivilegedActionException r1, $r10;
        java.lang.Throwable r2;
        java.io.IOException $r3, $r5;
        java.security.KeyStoreException $r4, $r11;
        java.security.PrivilegedExceptionAction $r6;
        java.security.AccessControlContext $r7;
        java.lang.Object $r8;
        java.security.KeyStore $r9;

        r0 := @this: java.security.KeyStore$Builder$2;
        $r3 = r0.<java.security.KeyStore$Builder$2: java.io.IOException oldException>;
        if $r3 == null goto label0;

        $r4 = new java.security.KeyStoreException;
        $r5 = r0.<java.security.KeyStore$Builder$2: java.io.IOException oldException>;
        specialinvoke $r4.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Previous KeyStore instantiation failed", $r5);
        throw $r4;

     label0:
        $r6 = r0.<java.security.KeyStore$Builder$2: java.security.PrivilegedExceptionAction action>;
        $r7 = r0.<java.security.KeyStore$Builder$2: java.security.AccessControlContext val$context>;
        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>($r6, $r7);
        $r9 = (java.security.KeyStore) $r8;

     label1:
        return $r9;

     label2:
        $r10 := @caughtexception;
        r1 = $r10;
        r2 = virtualinvoke r1.<java.security.PrivilegedActionException: java.lang.Throwable getCause()>();
        $r11 = new java.security.KeyStoreException;
        specialinvoke $r11.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>("KeyStore instantiation failed", r2);
        throw $r11;

        catch java.security.PrivilegedActionException from label0 to label1 with label2;
    }

    public java.security.KeyStore$ProtectionParameter getProtectionParameter(java.lang.String)
    {
        java.security.KeyStore$Builder$2 r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.security.KeyStore$ProtectionParameter $r4;

        r0 := @this: java.security.KeyStore$Builder$2;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $z0 = r0.<java.security.KeyStore$Builder$2: boolean getCalled>;
        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getKeyStore() must be called first");
        throw $r3;

     label1:
        $r4 = r0.<java.security.KeyStore$Builder$2: java.security.KeyStore$ProtectionParameter val$protection>;
        return $r4;
    }

    static java.io.IOException access$602(java.security.KeyStore$Builder$2, java.io.IOException)
    {
        java.security.KeyStore$Builder$2 r0;
        java.io.IOException r1;

        r0 := @parameter0: java.security.KeyStore$Builder$2;
        r1 := @parameter1: java.io.IOException;
        r0.<java.security.KeyStore$Builder$2: java.io.IOException oldException> = r1;
        return r1;
    }

    static boolean access$702(java.security.KeyStore$Builder$2, boolean)
    {
        java.security.KeyStore$Builder$2 r0;
        boolean z0;

        r0 := @parameter0: java.security.KeyStore$Builder$2;
        z0 := @parameter1: boolean;
        r0.<java.security.KeyStore$Builder$2: boolean getCalled> = z0;
        return z0;
    }
}
