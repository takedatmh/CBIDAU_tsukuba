public class sun.security.util.DerOutputStream extends java.io.ByteArrayOutputStream implements sun.security.util.DerEncoder
{
    private static sun.security.util.ByteArrayLexOrder lexOrder;
    private static sun.security.util.ByteArrayTagOrder tagOrder;

    public void <init>(int)
    {
        sun.security.util.DerOutputStream r0;
        int i0;

        r0 := @this: sun.security.util.DerOutputStream;
        i0 := @parameter0: int;
        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>(int)>(i0);
        return;
    }

    public void <init>()
    {
        sun.security.util.DerOutputStream r0;

        r0 := @this: sun.security.util.DerOutputStream;
        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>()>();
        return;
    }

    public void write(byte, byte[]) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        byte b0;
        byte[] r1;
        int $i1, $i2;

        r0 := @this: sun.security.util.DerOutputStream;
        b0 := @parameter0: byte;
        r1 := @parameter1: byte[];
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(b0);
        $i1 = lengthof r1;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putLength(int)>($i1);
        $i2 = lengthof r1;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte[],int,int)>(r1, 0, $i2);
        return;
    }

    public void write(byte, sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0, r1;
        byte b0;
        int $i1, $i2;
        byte[] $r2;

        r0 := @this: sun.security.util.DerOutputStream;
        b0 := @parameter0: byte;
        r1 := @parameter1: sun.security.util.DerOutputStream;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(b0);
        $i1 = r1.<sun.security.util.DerOutputStream: int count>;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putLength(int)>($i1);
        $r2 = r1.<sun.security.util.DerOutputStream: byte[] buf>;
        $i2 = r1.<sun.security.util.DerOutputStream: int count>;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte[],int,int)>($r2, 0, $i2);
        return;
    }

    public void writeImplicit(byte, sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0, r1;
        byte b0;
        byte[] $r2;
        int $i1, $i2;

        r0 := @this: sun.security.util.DerOutputStream;
        b0 := @parameter0: byte;
        r1 := @parameter1: sun.security.util.DerOutputStream;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(b0);
        $r2 = r1.<sun.security.util.DerOutputStream: byte[] buf>;
        $i1 = r1.<sun.security.util.DerOutputStream: int count>;
        $i2 = $i1 - 1;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte[],int,int)>($r2, 1, $i2);
        return;
    }

    public void putDerValue(sun.security.util.DerValue) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        sun.security.util.DerValue r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: sun.security.util.DerValue;
        virtualinvoke r1.<sun.security.util.DerValue: void encode(sun.security.util.DerOutputStream)>(r0);
        return;
    }

    public void putBoolean(boolean) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        boolean z0;

        r0 := @this: sun.security.util.DerOutputStream;
        z0 := @parameter0: boolean;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(1);
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putLength(int)>(1);
        if z0 == 0 goto label0;

        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(255);
        goto label1;

     label0:
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(0);

     label1:
        return;
    }

    public void putEnumerated(int) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        int i0;

        r0 := @this: sun.security.util.DerOutputStream;
        i0 := @parameter0: int;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(10);
        specialinvoke r0.<sun.security.util.DerOutputStream: void putIntegerContents(int)>(i0);
        return;
    }

    public void putInteger(java.math.BigInteger) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.math.BigInteger r1;
        byte[] r2;
        int $i0, $i1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.math.BigInteger;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(2);
        r2 = virtualinvoke r1.<java.math.BigInteger: byte[] toByteArray()>();
        $i0 = lengthof r2;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putLength(int)>($i0);
        $i1 = lengthof r2;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte[],int,int)>(r2, 0, $i1);
        return;
    }

    public void putInteger(java.lang.Integer) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.lang.Integer r1;
        int $i0;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.lang.Integer;
        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putInteger(int)>($i0);
        return;
    }

    public void putInteger(int) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        int i0;

        r0 := @this: sun.security.util.DerOutputStream;
        i0 := @parameter0: int;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(2);
        specialinvoke r0.<sun.security.util.DerOutputStream: void putIntegerContents(int)>(i0);
        return;
    }

    private void putIntegerContents(int) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        int i0, i1, i2, $i3, $i5, $i6, $i8, $i9, $i11, $i12, $i16, i20, $i22, $i25, i26;
        byte[] r1;
        byte $b4, $b7, $b10, $b13, $b14, $b15, $b17, $b19, $b21, $b23, $b27;
        short $s18, $s24;

        r0 := @this: sun.security.util.DerOutputStream;
        i0 := @parameter0: int;
        r1 = newarray (byte)[4];
        i1 = 0;
        $i3 = i0 & 255;
        $b4 = (byte) $i3;
        r1[3] = $b4;
        $i5 = i0 & 65280;
        $i6 = $i5 >>> 8;
        $b7 = (byte) $i6;
        r1[2] = $b7;
        $i8 = i0 & 16711680;
        $i9 = $i8 >>> 16;
        $b10 = (byte) $i9;
        r1[1] = $b10;
        $i11 = i0 & -16777216;
        $i12 = $i11 >>> 24;
        $b13 = (byte) $i12;
        r1[0] = $b13;
        $b14 = r1[0];
        if $b14 != -1 goto label2;

        i2 = 0;

     label0:
        if i2 >= 3 goto label1;

        $b15 = r1[i2];
        if $b15 != -1 goto label1;

        $i16 = i2 + 1;
        $b17 = r1[$i16];
        $s18 = $b17 & 128;
        if $s18 != 128 goto label1;

        i1 = i1 + 1;
        i2 = i2 + 1;
        goto label0;

     label1:
        goto label4;

     label2:
        $b19 = r1[0];
        if $b19 != 0 goto label4;

        i20 = 0;

     label3:
        if i20 >= 3 goto label4;

        $b21 = r1[i20];
        if $b21 != 0 goto label4;

        $i22 = i20 + 1;
        $b23 = r1[$i22];
        $s24 = $b23 & 128;
        if $s24 != 0 goto label4;

        i1 = i1 + 1;
        i20 = i20 + 1;
        goto label3;

     label4:
        $i25 = 4 - i1;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putLength(int)>($i25);
        i26 = i1;

     label5:
        if i26 >= 4 goto label6;

        $b27 = r1[i26];
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b27);
        i26 = i26 + 1;
        goto label5;

     label6:
        return;
    }

    public void putBitString(byte[]) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: byte[];
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(3);
        $i0 = lengthof r1;
        $i1 = $i0 + 1;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putLength(int)>($i1);
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(0);
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte[])>(r1);
        return;
    }

    public void putUnalignedBitString(sun.security.util.BitArray) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        sun.security.util.BitArray r1;
        byte[] r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: sun.security.util.BitArray;
        r2 = virtualinvoke r1.<sun.security.util.BitArray: byte[] toByteArray()>();
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(3);
        $i0 = lengthof r2;
        $i1 = $i0 + 1;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putLength(int)>($i1);
        $i2 = lengthof r2;
        $i3 = $i2 * 8;
        $i4 = virtualinvoke r1.<sun.security.util.BitArray: int length()>();
        $i5 = $i3 - $i4;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($i5);
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte[])>(r2);
        return;
    }

    public void putTruncatedUnalignedBitString(sun.security.util.BitArray) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        sun.security.util.BitArray r1, $r2;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: sun.security.util.BitArray;
        $r2 = virtualinvoke r1.<sun.security.util.BitArray: sun.security.util.BitArray truncate()>();
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putUnalignedBitString(sun.security.util.BitArray)>($r2);
        return;
    }

    public void putOctetString(byte[]) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        byte[] r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: byte[];
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte,byte[])>(4, r1);
        return;
    }

    public void putNull() throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;

        r0 := @this: sun.security.util.DerOutputStream;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(5);
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putLength(int)>(0);
        return;
    }

    public void putOID(sun.security.util.ObjectIdentifier) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        sun.security.util.ObjectIdentifier r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: sun.security.util.ObjectIdentifier;
        virtualinvoke r1.<sun.security.util.ObjectIdentifier: void encode(sun.security.util.DerOutputStream)>(r0);
        return;
    }

    public void putSequence(sun.security.util.DerValue[]) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0, $r2, r3;
        sun.security.util.DerValue[] r1;
        int i0, $i1;
        sun.security.util.DerValue $r4;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: sun.security.util.DerValue[];
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        i0 = 0;

     label0:
        $i1 = lengthof r1;
        if i0 >= $i1 goto label1;

        $r4 = r1[i0];
        virtualinvoke $r4.<sun.security.util.DerValue: void encode(sun.security.util.DerOutputStream)>(r3);
        i0 = i0 + 1;
        goto label0;

     label1:
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r3);
        return;
    }

    public void putSet(sun.security.util.DerValue[]) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0, $r2, r3;
        sun.security.util.DerValue[] r1;
        int i0, $i1;
        sun.security.util.DerValue $r4;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: sun.security.util.DerValue[];
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        i0 = 0;

     label0:
        $i1 = lengthof r1;
        if i0 >= $i1 goto label1;

        $r4 = r1[i0];
        virtualinvoke $r4.<sun.security.util.DerValue: void encode(sun.security.util.DerOutputStream)>(r3);
        i0 = i0 + 1;
        goto label0;

     label1:
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(49, r3);
        return;
    }

    public void putOrderedSetOf(byte, sun.security.util.DerEncoder[]) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        byte b0;
        sun.security.util.DerEncoder[] r1;
        sun.security.util.ByteArrayLexOrder $r2;

        r0 := @this: sun.security.util.DerOutputStream;
        b0 := @parameter0: byte;
        r1 := @parameter1: sun.security.util.DerEncoder[];
        $r2 = <sun.security.util.DerOutputStream: sun.security.util.ByteArrayLexOrder lexOrder>;
        specialinvoke r0.<sun.security.util.DerOutputStream: void putOrderedSet(byte,sun.security.util.DerEncoder[],java.util.Comparator)>(b0, r1, $r2);
        return;
    }

    public void putOrderedSet(byte, sun.security.util.DerEncoder[]) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        byte b0;
        sun.security.util.DerEncoder[] r1;
        sun.security.util.ByteArrayTagOrder $r2;

        r0 := @this: sun.security.util.DerOutputStream;
        b0 := @parameter0: byte;
        r1 := @parameter1: sun.security.util.DerEncoder[];
        $r2 = <sun.security.util.DerOutputStream: sun.security.util.ByteArrayTagOrder tagOrder>;
        specialinvoke r0.<sun.security.util.DerOutputStream: void putOrderedSet(byte,sun.security.util.DerEncoder[],java.util.Comparator)>(b0, r1, $r2);
        return;
    }

    private void putOrderedSet(byte, sun.security.util.DerEncoder[], java.util.Comparator) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0, $r4, $r6, $r8, $r10, r11;
        byte b0;
        sun.security.util.DerEncoder[] r1;
        java.util.Comparator r2;
        sun.security.util.DerOutputStream[] r3;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        sun.security.util.DerEncoder $r5;
        byte[][] r7;
        byte[] $r9, $r12;

        r0 := @this: sun.security.util.DerOutputStream;
        b0 := @parameter0: byte;
        r1 := @parameter1: sun.security.util.DerEncoder[];
        r2 := @parameter2: java.util.Comparator;
        $i4 = lengthof r1;
        r3 = newarray (sun.security.util.DerOutputStream)[$i4];
        i1 = 0;

     label0:
        $i5 = lengthof r1;
        if i1 >= $i5 goto label1;

        $r4 = new sun.security.util.DerOutputStream;
        specialinvoke $r4.<sun.security.util.DerOutputStream: void <init>()>();
        r3[i1] = $r4;
        $r5 = r1[i1];
        $r6 = r3[i1];
        interfaceinvoke $r5.<sun.security.util.DerEncoder: void derEncode(java.io.OutputStream)>($r6);
        i1 = i1 + 1;
        goto label0;

     label1:
        $i6 = lengthof r3;
        r7 = newarray (byte[])[$i6];
        i2 = 0;

     label2:
        $i7 = lengthof r3;
        if i2 >= $i7 goto label3;

        $r8 = r3[i2];
        $r9 = virtualinvoke $r8.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        r7[i2] = $r9;
        i2 = i2 + 1;
        goto label2;

     label3:
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r7, r2);
        $r10 = new sun.security.util.DerOutputStream;
        specialinvoke $r10.<sun.security.util.DerOutputStream: void <init>()>();
        r11 = $r10;
        i3 = 0;

     label4:
        $i8 = lengthof r3;
        if i3 >= $i8 goto label5;

        $r12 = r7[i3];
        virtualinvoke r11.<sun.security.util.DerOutputStream: void write(byte[])>($r12);
        i3 = i3 + 1;
        goto label4;

     label5:
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(b0, r11);
        return;
    }

    public void putUTF8String(java.lang.String) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.lang.String r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<sun.security.util.DerOutputStream: void writeString(java.lang.String,byte,java.lang.String)>(r1, 12, "UTF8");
        return;
    }

    public void putPrintableString(java.lang.String) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.lang.String r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<sun.security.util.DerOutputStream: void writeString(java.lang.String,byte,java.lang.String)>(r1, 19, "ASCII");
        return;
    }

    public void putT61String(java.lang.String) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.lang.String r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<sun.security.util.DerOutputStream: void writeString(java.lang.String,byte,java.lang.String)>(r1, 20, "ISO-8859-1");
        return;
    }

    public void putIA5String(java.lang.String) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.lang.String r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<sun.security.util.DerOutputStream: void writeString(java.lang.String,byte,java.lang.String)>(r1, 22, "ASCII");
        return;
    }

    public void putBMPString(java.lang.String) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.lang.String r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<sun.security.util.DerOutputStream: void writeString(java.lang.String,byte,java.lang.String)>(r1, 30, "UnicodeBigUnmarked");
        return;
    }

    public void putGeneralString(java.lang.String) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.lang.String r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<sun.security.util.DerOutputStream: void writeString(java.lang.String,byte,java.lang.String)>(r1, 27, "ASCII");
        return;
    }

    private void writeString(java.lang.String, byte, java.lang.String) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.lang.String r1, r2;
        byte b0;
        byte[] r3;
        int $i1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.lang.String;
        b0 := @parameter1: byte;
        r2 := @parameter2: java.lang.String;
        r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>(r2);
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(b0);
        $i1 = lengthof r3;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putLength(int)>($i1);
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte[])>(r3);
        return;
    }

    public void putUTCTime(java.util.Date) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.util.Date r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.util.Date;
        specialinvoke r0.<sun.security.util.DerOutputStream: void putTime(java.util.Date,byte)>(r1, 23);
        return;
    }

    public void putGeneralizedTime(java.util.Date) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.util.Date r1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.util.Date;
        specialinvoke r0.<sun.security.util.DerOutputStream: void putTime(java.util.Date,byte)>(r1, 24);
        return;
    }

    private void putTime(java.util.Date, byte) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.util.Date r1;
        byte b0;
        java.util.TimeZone r2;
        null_type n0;
        java.util.Locale $r3;
        java.text.SimpleDateFormat r4, $r7;
        byte[] r5;
        java.lang.String r6, $r8;
        int $i1;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.util.Date;
        b0 := @parameter1: byte;
        r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");
        n0 = null;
        if b0 != 23 goto label0;

        r6 = "yyMMddHHmmss\'Z\'";
        goto label1;

     label0:
        b0 = 24;
        r6 = "yyyyMMddHHmmss\'Z\'";

     label1:
        $r7 = new java.text.SimpleDateFormat;
        $r3 = <java.util.Locale: java.util.Locale US>;
        specialinvoke $r7.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r6, $r3);
        r4 = $r7;
        virtualinvoke r4.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>(r2);
        $r8 = virtualinvoke r4.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r1);
        r5 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(b0);
        $i1 = lengthof r5;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void putLength(int)>($i1);
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(byte[])>(r5);
        return;
    }

    public void putLength(int) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        int i0, $i3, $i6, $i8, $i11, $i13, $i15;
        byte $b1, $b2, $b4, $b5, $b7, $b9, $b10, $b12, $b14, $b16, $b17;

        r0 := @this: sun.security.util.DerOutputStream;
        i0 := @parameter0: int;
        if i0 >= 128 goto label0;

        $b1 = (byte) i0;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b1);
        goto label4;

     label0:
        if i0 >= 256 goto label1;

        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(-127);
        $b2 = (byte) i0;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b2);
        goto label4;

     label1:
        if i0 >= 65536 goto label2;

        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(-126);
        $i3 = i0 >> 8;
        $b4 = (byte) $i3;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b4);
        $b5 = (byte) i0;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b5);
        goto label4;

     label2:
        if i0 >= 16777216 goto label3;

        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(-125);
        $i6 = i0 >> 16;
        $b7 = (byte) $i6;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b7);
        $i8 = i0 >> 8;
        $b9 = (byte) $i8;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b9);
        $b10 = (byte) i0;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b10);
        goto label4;

     label3:
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(-124);
        $i11 = i0 >> 24;
        $b12 = (byte) $i11;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b12);
        $i13 = i0 >> 16;
        $b14 = (byte) $i13;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b14);
        $i15 = i0 >> 8;
        $b16 = (byte) $i15;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b16);
        $b17 = (byte) i0;
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>($b17);

     label4:
        return;
    }

    public void putTag(byte, boolean, byte)
    {
        sun.security.util.DerOutputStream r0;
        byte b0, b1, b2, $b3, $b4;
        boolean z0;

        r0 := @this: sun.security.util.DerOutputStream;
        b0 := @parameter0: byte;
        z0 := @parameter1: boolean;
        b1 := @parameter2: byte;
        $b3 = b0 | b1;
        b2 = (byte) $b3;
        if z0 == 0 goto label0;

        $b4 = b2 | 32;
        b2 = (byte) $b4;

     label0:
        virtualinvoke r0.<sun.security.util.DerOutputStream: void write(int)>(b2);
        return;
    }

    public void derEncode(java.io.OutputStream) throws java.io.IOException
    {
        sun.security.util.DerOutputStream r0;
        java.io.OutputStream r1;
        byte[] $r2;

        r0 := @this: sun.security.util.DerOutputStream;
        r1 := @parameter0: java.io.OutputStream;
        $r2 = virtualinvoke r0.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r2);
        return;
    }

    static void <clinit>()
    {
        sun.security.util.ByteArrayLexOrder $r0;
        sun.security.util.ByteArrayTagOrder $r1;

        $r0 = new sun.security.util.ByteArrayLexOrder;
        specialinvoke $r0.<sun.security.util.ByteArrayLexOrder: void <init>()>();
        <sun.security.util.DerOutputStream: sun.security.util.ByteArrayLexOrder lexOrder> = $r0;
        $r1 = new sun.security.util.ByteArrayTagOrder;
        specialinvoke $r1.<sun.security.util.ByteArrayTagOrder: void <init>()>();
        <sun.security.util.DerOutputStream: sun.security.util.ByteArrayTagOrder tagOrder> = $r1;
        return;
    }
}
