class java.util.Currency$CurrencyNameGetter extends java.lang.Object implements sun.util.LocaleServiceProviderPool$LocalizedObjectGetter
{
    private static final java.util.Currency$CurrencyNameGetter INSTANCE;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        java.util.Currency$CurrencyNameGetter r0;

        r0 := @this: java.util.Currency$CurrencyNameGetter;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public transient java.lang.String getObject(java.util.spi.CurrencyNameProvider, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.util.Currency$CurrencyNameGetter r0;
        java.util.spi.CurrencyNameProvider r1;
        java.util.Locale r2;
        java.lang.String r3, $r8, $r9;
        java.lang.Object[] r4;
        boolean $z0, $z1;
        int i0, $i1;
        java.lang.AssertionError $r5, $r10;
        java.lang.Object $r6;
        java.lang.Integer $r7;

        r0 := @this: java.util.Currency$CurrencyNameGetter;
        r1 := @parameter0: java.util.spi.CurrencyNameProvider;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $z0 = <java.util.Currency$CurrencyNameGetter: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $i1 = lengthof r4;
        if $i1 == 1 goto label0;

        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        throw $r5;

     label0:
        $r6 = r4[0];
        $r7 = (java.lang.Integer) $r6;
        i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r8 = virtualinvoke r1.<java.util.spi.CurrencyNameProvider: java.lang.String getSymbol(java.lang.String,java.util.Locale)>(r3, r2);
        return $r8;

     label2:
        $r9 = virtualinvoke r1.<java.util.spi.CurrencyNameProvider: java.lang.String getDisplayName(java.lang.String,java.util.Locale)>(r3, r2);
        return $r9;

     label3:
        $z1 = <java.util.Currency$CurrencyNameGetter: boolean $assertionsDisabled>;
        if $z1 != 0 goto label4;

        $r10 = new java.lang.AssertionError;
        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();
        throw $r10;

     label4:
        return null;
    }

    public volatile java.lang.Object getObject(java.lang.Object, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.util.Currency$CurrencyNameGetter r0;
        java.lang.Object r1;
        java.util.Locale r2;
        java.lang.String r3, $r6;
        java.lang.Object[] r4;
        java.util.spi.CurrencyNameProvider $r5;

        r0 := @this: java.util.Currency$CurrencyNameGetter;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $r5 = (java.util.spi.CurrencyNameProvider) r1;
        $r6 = virtualinvoke r0.<java.util.Currency$CurrencyNameGetter: java.lang.String getObject(java.util.spi.CurrencyNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>($r5, r2, r3, r4);
        return $r6;
    }

    static java.util.Currency$CurrencyNameGetter access$500()
    {
        java.util.Currency$CurrencyNameGetter $r0;

        $r0 = <java.util.Currency$CurrencyNameGetter: java.util.Currency$CurrencyNameGetter INSTANCE>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.util.Currency$CurrencyNameGetter $r1;

        $r0 = class "java/util/Currency";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.util.Currency$CurrencyNameGetter: boolean $assertionsDisabled> = $z1;
        $r1 = new java.util.Currency$CurrencyNameGetter;
        specialinvoke $r1.<java.util.Currency$CurrencyNameGetter: void <init>()>();
        <java.util.Currency$CurrencyNameGetter: java.util.Currency$CurrencyNameGetter INSTANCE> = $r1;
        return;
    }
}
