public final class sun.security.krb5.internal.crypto.Des extends java.lang.Object
{
    private static final java.lang.String CHARSET;
    private static final long[] bad_keys;
    private static final byte[] good_parity;

    public void <init>()
    {
        sun.security.krb5.internal.crypto.Des r0;

        r0 := @this: sun.security.krb5.internal.crypto.Des;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static final byte[] set_parity(byte[])
    {
        byte[] r0, $r1;
        int i0;
        byte $b1, $b3;
        short $s2;

        r0 := @parameter0: byte[];
        i0 = 0;

     label0:
        if i0 >= 8 goto label1;

        $r1 = <sun.security.krb5.internal.crypto.Des: byte[] good_parity>;
        $b1 = r0[i0];
        $s2 = $b1 & 255;
        $b3 = $r1[$s2];
        r0[i0] = $b3;
        i0 = i0 + 1;
        goto label0;

     label1:
        return r0;
    }

    public static final long set_parity(long)
    {
        long l0, $l1;
        byte[] $r0, $r1;

        l0 := @parameter0: long;
        $r0 = staticinvoke <sun.security.krb5.internal.crypto.Des: byte[] long2octet(long)>(l0);
        $r1 = staticinvoke <sun.security.krb5.internal.crypto.Des: byte[] set_parity(byte[])>($r0);
        $l1 = staticinvoke <sun.security.krb5.internal.crypto.Des: long octet2long(byte[])>($r1);
        return $l1;
    }

    public static final boolean bad_key(long)
    {
        long l0, $l3;
        int i1, $i2;
        long[] $r0, $r1;
        byte $b4;

        l0 := @parameter0: long;
        i1 = 0;

     label0:
        $r0 = <sun.security.krb5.internal.crypto.Des: long[] bad_keys>;
        $i2 = lengthof $r0;
        if i1 >= $i2 goto label2;

        $r1 = <sun.security.krb5.internal.crypto.Des: long[] bad_keys>;
        $l3 = $r1[i1];
        $b4 = $l3 cmp l0;
        if $b4 != 0 goto label1;

        return 1;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        return 0;
    }

    public static final boolean bad_key(byte[])
    {
        byte[] r0;
        long $l0;
        boolean $z0;

        r0 := @parameter0: byte[];
        $l0 = staticinvoke <sun.security.krb5.internal.crypto.Des: long octet2long(byte[])>(r0);
        $z0 = staticinvoke <sun.security.krb5.internal.crypto.Des: boolean bad_key(long)>($l0);
        return $z0;
    }

    public static long octet2long(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];
        $l0 = staticinvoke <sun.security.krb5.internal.crypto.Des: long octet2long(byte[],int)>(r0, 0);
        return $l0;
    }

    public static long octet2long(byte[], int)
    {
        byte[] r0;
        int i0, i2, $i3, $i4, $i5, $i9, $i10;
        long l1, $l7, $l8, $l11;
        byte $b6;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        l1 = 0L;
        i2 = 0;

     label0:
        if i2 >= 8 goto label2;

        $i3 = i2 + i0;
        $i4 = lengthof r0;
        if $i3 >= $i4 goto label1;

        $i5 = i2 + i0;
        $b6 = r0[$i5];
        $l7 = (long) $b6;
        $l8 = $l7 & 255L;
        $i9 = 7 - i2;
        $i10 = $i9 * 8;
        $l11 = $l8 << $i10;
        l1 = l1 | $l11;

     label1:
        i2 = i2 + 1;
        goto label0;

     label2:
        return l1;
    }

    public static byte[] long2octet(long)
    {
        long l0, $l4, $l5;
        byte[] r0;
        int i1, $i2, $i3, $i6;
        byte $b7;

        l0 := @parameter0: long;
        r0 = newarray (byte)[8];
        i1 = 0;

     label0:
        if i1 >= 8 goto label1;

        $i2 = 7 - i1;
        $i3 = $i2 * 8;
        $l4 = l0 >>> $i3;
        $l5 = $l4 & 255L;
        $i6 = (int) $l5;
        $b7 = (byte) $i6;
        r0[i1] = $b7;
        i1 = i1 + 1;
        goto label0;

     label1:
        return r0;
    }

    public static void long2octet(long, byte[])
    {
        long l0;
        byte[] r0;

        l0 := @parameter0: long;
        r0 := @parameter1: byte[];
        staticinvoke <sun.security.krb5.internal.crypto.Des: void long2octet(long,byte[],int)>(l0, r0, 0);
        return;
    }

    public static void long2octet(long, byte[], int)
    {
        long l0, $l8, $l9;
        byte[] r0;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i10;
        byte $b11;

        l0 := @parameter0: long;
        r0 := @parameter1: byte[];
        i1 := @parameter2: int;
        i2 = 0;

     label0:
        if i2 >= 8 goto label2;

        $i3 = i2 + i1;
        $i4 = lengthof r0;
        if $i3 >= $i4 goto label1;

        $i5 = i2 + i1;
        $i6 = 7 - i2;
        $i7 = $i6 * 8;
        $l8 = l0 >>> $i7;
        $l9 = $l8 & 255L;
        $i10 = (int) $l9;
        $b11 = (byte) $i10;
        r0[$i5] = $b11;

     label1:
        i2 = i2 + 1;
        goto label0;

     label2:
        return;
    }

    public static void cbc_encrypt(byte[], byte[], byte[], byte[], boolean) throws sun.security.krb5.KrbCryptoException
    {
        byte[] r0, r1, r2, r3, r9;
        boolean z0;
        null_type n0;
        java.security.GeneralSecurityException r4, $r11, $r22, r23;
        java.lang.StringBuilder $r5, $r13, $r15;
        sun.security.krb5.KrbCryptoException r6, $r12, $r24, r26;
        javax.crypto.spec.SecretKeySpec r8, $r20, r21;
        javax.crypto.Cipher r10;
        java.lang.String $r14, $r16, $r25;
        javax.crypto.spec.IvParameterSpec $r18, r19;
        int $i0;

        r0 := @parameter0: byte[];
        r1 := @parameter1: byte[];
        r2 := @parameter2: byte[];
        r3 := @parameter3: byte[];
        z0 := @parameter4: boolean;
        n0 = null;

     label0:
        r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES/CBC/NoPadding");

     label1:
        goto label3;

     label2:
        $r11 := @caughtexception;
        r4 = $r11;
        $r12 = new sun.security.krb5.KrbCryptoException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JCE provider may not be installed. ");
        $r14 = virtualinvoke r4.<java.security.GeneralSecurityException: java.lang.String getMessage()>();
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r12.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r16);
        r6 = $r12;
        virtualinvoke r6.<sun.security.krb5.KrbCryptoException: java.lang.Throwable initCause(java.lang.Throwable)>(r4);
        throw r6;

     label3:
        $r18 = new javax.crypto.spec.IvParameterSpec;
        specialinvoke $r18.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r3);
        r19 = $r18;
        $r20 = new javax.crypto.spec.SecretKeySpec;
        specialinvoke $r20.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, "DES");
        r21 = $r20;

     label4:
        staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("DES");
        r8 = r21;
        if z0 == 0 goto label5;

        virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, r8, r19);
        goto label6;

     label5:
        virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, r8, r19);

     label6:
        r9 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0);
        $i0 = lengthof r9;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, r1, 0, $i0);

     label7:
        goto label9;

     label8:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = new sun.security.krb5.KrbCryptoException;
        $r25 = virtualinvoke r23.<java.security.GeneralSecurityException: java.lang.String getMessage()>();
        specialinvoke $r24.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r25);
        r26 = $r24;
        virtualinvoke r26.<sun.security.krb5.KrbCryptoException: java.lang.Throwable initCause(java.lang.Throwable)>(r23);
        throw r26;

     label9:
        return;

        catch java.security.GeneralSecurityException from label0 to label1 with label2;
        catch java.security.GeneralSecurityException from label4 to label7 with label8;
    }

    public static long char_to_key(char[]) throws sun.security.krb5.KrbCryptoException
    {
        char[] r0;
        long l0, l1, l4, l5, $l14, $l16, $l17, $l18, $l20, $l21, l22, l27;
        byte[] r1, r15, r16, r17, $r19, $r20, r21, $r22, r23;
        java.lang.Exception r2, $r8;
        sun.security.krb5.KrbCryptoException r3, $r9;
        int i2, i3, i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i19, $i32, $i33;
        java.lang.String $r4, $r5, $r6, $r7, $r13;
        java.lang.StringBuilder $r10, $r11, $r12;
        byte $b12, $b23, $b24, $b26, $b28, $b29, $b31;
        boolean $z0, $z1;
        short $s25, $s30;

        r0 := @parameter0: char[];
        l0 = 0L;
        l1 = 0L;
        r1 = null;

     label0:
        $r4 = <sun.security.krb5.internal.crypto.Des: java.lang.String CHARSET>;
        if $r4 != null goto label1;

        $r5 = new java.lang.String;
        specialinvoke $r5.<java.lang.String: void <init>(char[])>(r0);
        r1 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();
        goto label2;

     label1:
        $r6 = new java.lang.String;
        specialinvoke $r6.<java.lang.String: void <init>(char[])>(r0);
        $r7 = <sun.security.krb5.internal.crypto.Des: java.lang.String CHARSET>;
        r1 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>($r7);

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;
        r2 = $r8;
        if r1 == null goto label4;

        $i7 = lengthof r1;
        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>(r1, 0, $i7, 0);

     label4:
        $r9 = new sun.security.krb5.KrbCryptoException;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to convert passwd, ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r13);
        r3 = $r9;
        virtualinvoke r3.<sun.security.krb5.KrbCryptoException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);
        throw r3;

     label5:
        r15 = staticinvoke <sun.security.krb5.internal.crypto.Des: byte[] pad(byte[])>(r1);
        r16 = newarray (byte)[8];
        $i8 = lengthof r15;
        $i9 = $i8 / 8;
        $i10 = lengthof r15;
        $i11 = $i10 % 8;
        if $i11 != 0 goto label6;

        $b12 = 0;
        goto label7;

     label6:
        $b12 = 1;

     label7:
        i2 = $i9 + $b12;
        i3 = 0;

     label8:
        if i3 >= i2 goto label12;

        $i13 = i3 * 8;
        $l14 = staticinvoke <sun.security.krb5.internal.crypto.Des: long octet2long(byte[],int)>(r15, $i13);
        l4 = $l14 & 9187201950435737471L;
        $i15 = i3 % 2;
        if $i15 != 1 goto label11;

        l5 = 0L;
        i6 = 0;

     label9:
        if i6 >= 64 goto label10;

        $l16 = 1L << i6;
        $l17 = l4 & $l16;
        $l18 = $l17 >>> i6;
        $i19 = 63 - i6;
        $l20 = $l18 << $i19;
        l5 = l5 | $l20;
        i6 = i6 + 1;
        goto label9;

     label10:
        l4 = l5 >>> 1;

     label11:
        $l21 = l4 << 1;
        l0 = l0 ^ $l21;
        i3 = i3 + 1;
        goto label8;

     label12:
        l22 = staticinvoke <sun.security.krb5.internal.crypto.Des: long set_parity(long)>(l0);
        $z0 = staticinvoke <sun.security.krb5.internal.crypto.Des: boolean bad_key(long)>(l22);
        if $z0 == 0 goto label13;

        r17 = staticinvoke <sun.security.krb5.internal.crypto.Des: byte[] long2octet(long)>(l22);
        $b23 = 7;
        $b24 = r17[$b23];
        $s25 = $b24 ^ 240;
        $b26 = (byte) $s25;
        r17[$b23] = $b26;
        l22 = staticinvoke <sun.security.krb5.internal.crypto.Des: long octet2long(byte[])>(r17);

     label13:
        $r19 = staticinvoke <sun.security.krb5.internal.crypto.Des: byte[] long2octet(long)>(l22);
        $r20 = staticinvoke <sun.security.krb5.internal.crypto.Des: byte[] long2octet(long)>(l22);
        r21 = staticinvoke <sun.security.krb5.internal.crypto.Des: byte[] des_cksum(byte[],byte[],byte[])>($r19, r15, $r20);
        $r22 = staticinvoke <sun.security.krb5.internal.crypto.Des: byte[] set_parity(byte[])>(r21);
        l27 = staticinvoke <sun.security.krb5.internal.crypto.Des: long octet2long(byte[])>($r22);
        $z1 = staticinvoke <sun.security.krb5.internal.crypto.Des: boolean bad_key(long)>(l27);
        if $z1 == 0 goto label14;

        r23 = staticinvoke <sun.security.krb5.internal.crypto.Des: byte[] long2octet(long)>(l27);
        $b28 = 7;
        $b29 = r23[$b28];
        $s30 = $b29 ^ 240;
        $b31 = (byte) $s30;
        r23[$b28] = $b31;
        l27 = staticinvoke <sun.security.krb5.internal.crypto.Des: long octet2long(byte[])>(r23);

     label14:
        if r1 == null goto label15;

        $i32 = lengthof r1;
        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>(r1, 0, $i32, 0);

     label15:
        if r15 == null goto label16;

        $i33 = lengthof r15;
        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>(r15, 0, $i33, 0);

     label16:
        return l27;

        catch java.lang.Exception from label0 to label2 with label3;
    }

    public static byte[] des_cksum(byte[], byte[], byte[]) throws sun.security.krb5.KrbCryptoException
    {
        byte[] r0, r1, r2, r3;
        null_type n0;
        java.lang.Exception r4, $r10;
        java.lang.StringBuilder $r5, $r12, $r14;
        sun.security.krb5.KrbCryptoException r6, $r11, $r24, r26;
        javax.crypto.spec.SecretKeySpec r8, $r19, r20;
        int i0, $i1, $i2, $i3;
        javax.crypto.Cipher r9;
        java.lang.String $r13, $r15, $r25;
        javax.crypto.spec.IvParameterSpec $r17, r18, $r21;
        java.security.GeneralSecurityException $r22, r23;

        r0 := @parameter0: byte[];
        r1 := @parameter1: byte[];
        r2 := @parameter2: byte[];
        n0 = null;
        r3 = newarray (byte)[8];

     label0:
        r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES/CBC/NoPadding");

     label1:
        goto label3;

     label2:
        $r10 := @caughtexception;
        r4 = $r10;
        $r11 = new sun.security.krb5.KrbCryptoException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JCE provider may not be installed. ");
        $r13 = virtualinvoke r4.<java.lang.Exception: java.lang.String getMessage()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r15);
        r6 = $r11;
        virtualinvoke r6.<sun.security.krb5.KrbCryptoException: java.lang.Throwable initCause(java.lang.Throwable)>(r4);
        throw r6;

     label3:
        $r17 = new javax.crypto.spec.IvParameterSpec;
        specialinvoke $r17.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r0);
        r18 = $r17;
        $r19 = new javax.crypto.spec.SecretKeySpec;
        specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, "DES");
        r20 = $r19;

     label4:
        staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("DES");
        r8 = r20;
        virtualinvoke r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, r8, r18);
        i0 = 0;

     label5:
        $i1 = lengthof r1;
        $i2 = $i1 / 8;
        if i0 >= $i2 goto label6;

        $i3 = i0 * 8;
        r3 = virtualinvoke r9.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, $i3, 8);
        $r21 = new javax.crypto.spec.IvParameterSpec;
        specialinvoke $r21.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r3);
        virtualinvoke r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, r8, $r21);
        i0 = i0 + 1;
        goto label5;

     label6:
        goto label8;

     label7:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = new sun.security.krb5.KrbCryptoException;
        $r25 = virtualinvoke r23.<java.security.GeneralSecurityException: java.lang.String getMessage()>();
        specialinvoke $r24.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r25);
        r26 = $r24;
        virtualinvoke r26.<sun.security.krb5.KrbCryptoException: java.lang.Throwable initCause(java.lang.Throwable)>(r23);
        throw r26;

     label8:
        return r3;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.security.GeneralSecurityException from label4 to label6 with label7;
    }

    static byte[] pad(byte[])
    {
        byte[] r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @parameter0: byte[];
        $i2 = lengthof r0;
        if $i2 >= 8 goto label0;

        i0 = lengthof r0;
        goto label1;

     label0:
        $i3 = lengthof r0;
        i0 = $i3 % 8;

     label1:
        if i0 != 0 goto label2;

        return r0;

     label2:
        $i4 = 8 - i0;
        $i5 = lengthof r0;
        $i6 = $i4 + $i5;
        r1 = newarray (byte)[$i6];
        $i7 = lengthof r1;
        i1 = $i7 - 1;

     label3:
        $i8 = lengthof r0;
        $i9 = $i8 - 1;
        if i1 <= $i9 goto label4;

        r1[i1] = 0;
        i1 = i1 + -1;
        goto label3;

     label4:
        $i10 = lengthof r0;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i10);
        return r1;
    }

    public static byte[] string_to_key_bytes(char[]) throws sun.security.krb5.KrbCryptoException
    {
        char[] r0;
        long $l0;
        byte[] $r1;

        r0 := @parameter0: char[];
        $l0 = staticinvoke <sun.security.krb5.internal.crypto.Des: long char_to_key(char[])>(r0);
        $r1 = staticinvoke <sun.security.krb5.internal.crypto.Des: byte[] long2octet(long)>($l0);
        return $r1;
    }

    static void <clinit>()
    {
        sun.security.action.GetPropertyAction $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        long[] $r3;
        byte[] $r4;

        $r0 = new sun.security.action.GetPropertyAction;
        specialinvoke $r0.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>("sun.security.krb5.msinterop.des.s2kcharset");
        $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        $r2 = (java.lang.String) $r1;
        <sun.security.krb5.internal.crypto.Des: java.lang.String CHARSET> = $r2;
        $r3 = newarray (long)[16];
        $r3[0] = 72340172838076673L;
        $r3[1] = -72340172838076674L;
        $r3[2] = 2242545357980376863L;
        $r3[3] = -2242545357980376864L;
        $r3[4] = 143554428589179390L;
        $r3[5] = -143554428589179391L;
        $r3[6] = 2296870857142767345L;
        $r3[7] = -2296870857142767346L;
        $r3[8] = 135110050437988849L;
        $r3[9] = -2305315235293957887L;
        $r3[10] = 2305315235293957886L;
        $r3[11] = -135110050437988850L;
        $r3[12] = 80784550989267214L;
        $r3[13] = 2234100979542855169L;
        $r3[14] = -2234100979542855170L;
        $r3[15] = -80784550989267215L;
        <sun.security.krb5.internal.crypto.Des: long[] bad_keys> = $r3;
        $r4 = newarray (byte)[256];
        $r4[0] = 1;
        $r4[1] = 1;
        $r4[2] = 2;
        $r4[3] = 2;
        $r4[4] = 4;
        $r4[5] = 4;
        $r4[6] = 7;
        $r4[7] = 7;
        $r4[8] = 8;
        $r4[9] = 8;
        $r4[10] = 11;
        $r4[11] = 11;
        $r4[12] = 13;
        $r4[13] = 13;
        $r4[14] = 14;
        $r4[15] = 14;
        $r4[16] = 16;
        $r4[17] = 16;
        $r4[18] = 19;
        $r4[19] = 19;
        $r4[20] = 21;
        $r4[21] = 21;
        $r4[22] = 22;
        $r4[23] = 22;
        $r4[24] = 25;
        $r4[25] = 25;
        $r4[26] = 26;
        $r4[27] = 26;
        $r4[28] = 28;
        $r4[29] = 28;
        $r4[30] = 31;
        $r4[31] = 31;
        $r4[32] = 32;
        $r4[33] = 32;
        $r4[34] = 35;
        $r4[35] = 35;
        $r4[36] = 37;
        $r4[37] = 37;
        $r4[38] = 38;
        $r4[39] = 38;
        $r4[40] = 41;
        $r4[41] = 41;
        $r4[42] = 42;
        $r4[43] = 42;
        $r4[44] = 44;
        $r4[45] = 44;
        $r4[46] = 47;
        $r4[47] = 47;
        $r4[48] = 49;
        $r4[49] = 49;
        $r4[50] = 50;
        $r4[51] = 50;
        $r4[52] = 52;
        $r4[53] = 52;
        $r4[54] = 55;
        $r4[55] = 55;
        $r4[56] = 56;
        $r4[57] = 56;
        $r4[58] = 59;
        $r4[59] = 59;
        $r4[60] = 61;
        $r4[61] = 61;
        $r4[62] = 62;
        $r4[63] = 62;
        $r4[64] = 64;
        $r4[65] = 64;
        $r4[66] = 67;
        $r4[67] = 67;
        $r4[68] = 69;
        $r4[69] = 69;
        $r4[70] = 70;
        $r4[71] = 70;
        $r4[72] = 73;
        $r4[73] = 73;
        $r4[74] = 74;
        $r4[75] = 74;
        $r4[76] = 76;
        $r4[77] = 76;
        $r4[78] = 79;
        $r4[79] = 79;
        $r4[80] = 81;
        $r4[81] = 81;
        $r4[82] = 82;
        $r4[83] = 82;
        $r4[84] = 84;
        $r4[85] = 84;
        $r4[86] = 87;
        $r4[87] = 87;
        $r4[88] = 88;
        $r4[89] = 88;
        $r4[90] = 91;
        $r4[91] = 91;
        $r4[92] = 93;
        $r4[93] = 93;
        $r4[94] = 94;
        $r4[95] = 94;
        $r4[96] = 97;
        $r4[97] = 97;
        $r4[98] = 98;
        $r4[99] = 98;
        $r4[100] = 100;
        $r4[101] = 100;
        $r4[102] = 103;
        $r4[103] = 103;
        $r4[104] = 104;
        $r4[105] = 104;
        $r4[106] = 107;
        $r4[107] = 107;
        $r4[108] = 109;
        $r4[109] = 109;
        $r4[110] = 110;
        $r4[111] = 110;
        $r4[112] = 112;
        $r4[113] = 112;
        $r4[114] = 115;
        $r4[115] = 115;
        $r4[116] = 117;
        $r4[117] = 117;
        $r4[118] = 118;
        $r4[119] = 118;
        $r4[120] = 121;
        $r4[121] = 121;
        $r4[122] = 122;
        $r4[123] = 122;
        $r4[124] = 124;
        $r4[125] = 124;
        $r4[126] = 127;
        $r4[127] = 127;
        $r4[128] = -128;
        $r4[129] = -128;
        $r4[130] = -125;
        $r4[131] = -125;
        $r4[132] = -123;
        $r4[133] = -123;
        $r4[134] = -122;
        $r4[135] = -122;
        $r4[136] = -119;
        $r4[137] = -119;
        $r4[138] = -118;
        $r4[139] = -118;
        $r4[140] = -116;
        $r4[141] = -116;
        $r4[142] = -113;
        $r4[143] = -113;
        $r4[144] = -111;
        $r4[145] = -111;
        $r4[146] = -110;
        $r4[147] = -110;
        $r4[148] = -108;
        $r4[149] = -108;
        $r4[150] = -105;
        $r4[151] = -105;
        $r4[152] = -104;
        $r4[153] = -104;
        $r4[154] = -101;
        $r4[155] = -101;
        $r4[156] = -99;
        $r4[157] = -99;
        $r4[158] = -98;
        $r4[159] = -98;
        $r4[160] = -95;
        $r4[161] = -95;
        $r4[162] = -94;
        $r4[163] = -94;
        $r4[164] = -92;
        $r4[165] = -92;
        $r4[166] = -89;
        $r4[167] = -89;
        $r4[168] = -88;
        $r4[169] = -88;
        $r4[170] = -85;
        $r4[171] = -85;
        $r4[172] = -83;
        $r4[173] = -83;
        $r4[174] = -82;
        $r4[175] = -82;
        $r4[176] = -80;
        $r4[177] = -80;
        $r4[178] = -77;
        $r4[179] = -77;
        $r4[180] = -75;
        $r4[181] = -75;
        $r4[182] = -74;
        $r4[183] = -74;
        $r4[184] = -71;
        $r4[185] = -71;
        $r4[186] = -70;
        $r4[187] = -70;
        $r4[188] = -68;
        $r4[189] = -68;
        $r4[190] = -65;
        $r4[191] = -65;
        $r4[192] = -63;
        $r4[193] = -63;
        $r4[194] = -62;
        $r4[195] = -62;
        $r4[196] = -60;
        $r4[197] = -60;
        $r4[198] = -57;
        $r4[199] = -57;
        $r4[200] = -56;
        $r4[201] = -56;
        $r4[202] = -53;
        $r4[203] = -53;
        $r4[204] = -51;
        $r4[205] = -51;
        $r4[206] = -50;
        $r4[207] = -50;
        $r4[208] = -48;
        $r4[209] = -48;
        $r4[210] = -45;
        $r4[211] = -45;
        $r4[212] = -43;
        $r4[213] = -43;
        $r4[214] = -42;
        $r4[215] = -42;
        $r4[216] = -39;
        $r4[217] = -39;
        $r4[218] = -38;
        $r4[219] = -38;
        $r4[220] = -36;
        $r4[221] = -36;
        $r4[222] = -33;
        $r4[223] = -33;
        $r4[224] = -32;
        $r4[225] = -32;
        $r4[226] = -29;
        $r4[227] = -29;
        $r4[228] = -27;
        $r4[229] = -27;
        $r4[230] = -26;
        $r4[231] = -26;
        $r4[232] = -23;
        $r4[233] = -23;
        $r4[234] = -22;
        $r4[235] = -22;
        $r4[236] = -20;
        $r4[237] = -20;
        $r4[238] = -17;
        $r4[239] = -17;
        $r4[240] = -15;
        $r4[241] = -15;
        $r4[242] = -14;
        $r4[243] = -14;
        $r4[244] = -12;
        $r4[245] = -12;
        $r4[246] = -9;
        $r4[247] = -9;
        $r4[248] = -8;
        $r4[249] = -8;
        $r4[250] = -5;
        $r4[251] = -5;
        $r4[252] = -3;
        $r4[253] = -3;
        $r4[254] = -2;
        $r4[255] = -2;
        <sun.security.krb5.internal.crypto.Des: byte[] good_parity> = $r4;
        return;
    }
}
