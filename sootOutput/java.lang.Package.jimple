public class java.lang.Package extends java.lang.Object implements java.lang.reflect.AnnotatedElement
{
    private static java.util.Map pkgs;
    private static java.util.Map urls;
    private static java.util.Map mans;
    private final java.lang.String pkgName;
    private final java.lang.String specTitle;
    private final java.lang.String specVersion;
    private final java.lang.String specVendor;
    private final java.lang.String implTitle;
    private final java.lang.String implVersion;
    private final java.lang.String implVendor;
    private final java.net.URL sealBase;
    private final transient java.lang.ClassLoader loader;
    private transient java.lang.Class packageInfo;

    public java.lang.String getName()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;
        $r1 = r0.<java.lang.Package: java.lang.String pkgName>;
        return $r1;
    }

    public java.lang.String getSpecificationTitle()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;
        $r1 = r0.<java.lang.Package: java.lang.String specTitle>;
        return $r1;
    }

    public java.lang.String getSpecificationVersion()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;
        $r1 = r0.<java.lang.Package: java.lang.String specVersion>;
        return $r1;
    }

    public java.lang.String getSpecificationVendor()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;
        $r1 = r0.<java.lang.Package: java.lang.String specVendor>;
        return $r1;
    }

    public java.lang.String getImplementationTitle()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;
        $r1 = r0.<java.lang.Package: java.lang.String implTitle>;
        return $r1;
    }

    public java.lang.String getImplementationVersion()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;
        $r1 = r0.<java.lang.Package: java.lang.String implVersion>;
        return $r1;
    }

    public java.lang.String getImplementationVendor()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;
        $r1 = r0.<java.lang.Package: java.lang.String implVendor>;
        return $r1;
    }

    public boolean isSealed()
    {
        java.lang.Package r0;
        java.net.URL $r1;
        boolean $z0;

        r0 := @this: java.lang.Package;
        $r1 = r0.<java.lang.Package: java.net.URL sealBase>;
        if $r1 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isSealed(java.net.URL)
    {
        java.lang.Package r0;
        java.net.URL r1, $r2;
        boolean $z0;

        r0 := @this: java.lang.Package;
        r1 := @parameter0: java.net.URL;
        $r2 = r0.<java.lang.Package: java.net.URL sealBase>;
        $z0 = virtualinvoke r1.<java.net.URL: boolean equals(java.lang.Object)>($r2);
        return $z0;
    }

    public boolean isCompatibleWith(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.Package r0;
        java.lang.String r1, $r5, $r6, $r8, $r9, $r13, $r16, $r20;
        java.lang.String[] r2, r15;
        int[] r3, r4;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, $i19, $i20, $i21, $i22;
        java.lang.NumberFormatException $r7, $r14, $r21;
        java.lang.StringBuilder $r10, $r11, $r12, $r17, $r18, $r19;

        r0 := @this: java.lang.Package;
        r1 := @parameter0: java.lang.String;
        $r5 = r0.<java.lang.Package: java.lang.String specVersion>;
        if $r5 == null goto label0;

        $r6 = r0.<java.lang.Package: java.lang.String specVersion>;
        $i5 = virtualinvoke $r6.<java.lang.String: int length()>();
        if $i5 >= 1 goto label1;

     label0:
        $r7 = new java.lang.NumberFormatException;
        specialinvoke $r7.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Empty version string");
        throw $r7;

     label1:
        $r8 = r0.<java.lang.Package: java.lang.String specVersion>;
        r2 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", -1);
        $i6 = lengthof r2;
        r3 = newarray (int)[$i6];
        i0 = 0;

     label2:
        $i7 = lengthof r2;
        if i0 >= $i7 goto label4;

        $r9 = r2[i0];
        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);
        r3[i0] = $i8;
        $i9 = r3[i0];
        if $i9 >= 0 goto label3;

        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $i10 = r3[i0];
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        $r14 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>($r13);
        throw $r14;

     label3:
        i0 = i0 + 1;
        goto label2;

     label4:
        r15 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", -1);
        $i11 = lengthof r15;
        r4 = newarray (int)[$i11];
        i1 = 0;

     label5:
        $i12 = lengthof r15;
        if i1 >= $i12 goto label7;

        $r16 = r15[i1];
        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);
        r4[i1] = $i13;
        $i14 = r4[i1];
        if $i14 >= 0 goto label6;

        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $i15 = r4[i1];
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        $r21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>($r20);
        throw $r21;

     label6:
        i1 = i1 + 1;
        goto label5;

     label7:
        $i16 = lengthof r4;
        $i17 = lengthof r3;
        i18 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i17);
        i2 = 0;

     label8:
        if i2 >= i18 goto label15;

        $i19 = lengthof r4;
        if i2 >= $i19 goto label9;

        $i20 = r4[i2];
        goto label10;

     label9:
        $i20 = 0;

     label10:
        i3 = $i20;
        $i21 = lengthof r3;
        if i2 >= $i21 goto label11;

        $i22 = r3[i2];
        goto label12;

     label11:
        $i22 = 0;

     label12:
        i4 = $i22;
        if i4 >= i3 goto label13;

        return 0;

     label13:
        if i4 <= i3 goto label14;

        return 1;

     label14:
        i2 = i2 + 1;
        goto label8;

     label15:
        return 1;
    }

    public static java.lang.Package getPackage(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Class $r1;
        java.lang.ClassLoader r2;
        java.lang.Package $r3, $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <sun.reflect.Reflection: java.lang.Class getCallerClass()>();
        r2 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getClassLoader(java.lang.Class)>($r1);
        if r2 == null goto label0;

        $r3 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>(r0);
        return $r3;

     label0:
        $r4 = staticinvoke <java.lang.Package: java.lang.Package getSystemPackage(java.lang.String)>(r0);
        return $r4;
    }

    public static java.lang.Package[] getPackages()
    {
        java.lang.Class $r0;
        java.lang.ClassLoader r1;
        java.lang.Package[] $r2, $r3;

        $r0 = staticinvoke <sun.reflect.Reflection: java.lang.Class getCallerClass()>();
        r1 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getClassLoader(java.lang.Class)>($r0);
        if r1 == null goto label0;

        $r2 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Package[] getPackages()>();
        return $r2;

     label0:
        $r3 = staticinvoke <java.lang.Package: java.lang.Package[] getSystemPackages()>();
        return $r3;
    }

    static java.lang.Package getPackage(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String r1, r3;
        int i0;
        java.lang.ClassLoader r2;
        java.lang.Package $r4, $r5;

        r0 := @parameter0: java.lang.Class;
        r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();
        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);
        if i0 == -1 goto label1;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        r2 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        if r2 == null goto label0;

        $r4 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>(r3);
        return $r4;

     label0:
        $r5 = staticinvoke <java.lang.Package: java.lang.Package getSystemPackage(java.lang.String)>(r3);
        return $r5;

     label1:
        return null;
    }

    public int hashCode()
    {
        java.lang.Package r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: java.lang.Package;
        $r1 = r0.<java.lang.Package: java.lang.String pkgName>;
        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Package r0;
        java.lang.String r1, r2, r6, r10, $r13, $r17;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r16;

        r0 := @this: java.lang.Package;
        r1 = r0.<java.lang.Package: java.lang.String specTitle>;
        r2 = r0.<java.lang.Package: java.lang.String specVersion>;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label1;

     label0:
        r6 = "";

     label1:
        if r2 == null goto label2;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i1 <= 0 goto label2;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", version ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label3;

     label2:
        r10 = "";

     label3:
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package ");
        $r13 = r0.<java.lang.Package: java.lang.String pkgName>;
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r17;
    }

    private java.lang.Class getPackageInfo()
    {
        java.lang.Package r0;
        java.lang.StringBuilder $r1, $r5, $r6;
        java.lang.ClassNotFoundException r2, $r10;
        java.lang.Class $r3, $r9, $r11;
        java.lang.String $r4, $r7;
        java.lang.ClassLoader $r8;

        r0 := @this: java.lang.Package;
        $r3 = r0.<java.lang.Package: java.lang.Class packageInfo>;
        if $r3 != null goto label3;

     label0:
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r4 = r0.<java.lang.Package: java.lang.String pkgName>;
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".package-info");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r8 = r0.<java.lang.Package: java.lang.ClassLoader loader>;
        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r7, 0, $r8);
        r0.<java.lang.Package: java.lang.Class packageInfo> = $r9;

     label1:
        goto label3;

     label2:
        $r10 := @caughtexception;
        r2 = $r10;
        r0.<java.lang.Package: java.lang.Class packageInfo> = class "java/lang/Package$1PackageInfoProxy";

     label3:
        $r11 = r0.<java.lang.Package: java.lang.Class packageInfo>;
        return $r11;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    {
        java.lang.Package r0;
        java.lang.Class r1, $r2;
        java.lang.annotation.Annotation $r3;

        r0 := @this: java.lang.Package;
        r1 := @parameter0: java.lang.Class;
        $r2 = specialinvoke r0.<java.lang.Package: java.lang.Class getPackageInfo()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(r1);
        return $r3;
    }

    public boolean isAnnotationPresent(java.lang.Class)
    {
        java.lang.Package r0;
        java.lang.Class r1, $r2;
        boolean $z0;

        r0 := @this: java.lang.Package;
        r1 := @parameter0: java.lang.Class;
        $r2 = specialinvoke r0.<java.lang.Package: java.lang.Class getPackageInfo()>();
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(r1);
        return $z0;
    }

    public java.lang.annotation.Annotation[] getAnnotations()
    {
        java.lang.Package r0;
        java.lang.Class $r1;
        java.lang.annotation.Annotation[] $r2;

        r0 := @this: java.lang.Package;
        $r1 = specialinvoke r0.<java.lang.Package: java.lang.Class getPackageInfo()>();
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()>();
        return $r2;
    }

    public java.lang.annotation.Annotation[] getDeclaredAnnotations()
    {
        java.lang.Package r0;
        java.lang.Class $r1;
        java.lang.annotation.Annotation[] $r2;

        r0 := @this: java.lang.Package;
        $r1 = specialinvoke r0.<java.lang.Package: java.lang.Class getPackageInfo()>();
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>();
        return $r2;
    }

    void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL, java.lang.ClassLoader)
    {
        java.lang.Package r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7;
        java.net.URL r8;
        java.lang.ClassLoader r9;

        r0 := @this: java.lang.Package;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        r6 := @parameter5: java.lang.String;
        r7 := @parameter6: java.lang.String;
        r8 := @parameter7: java.net.URL;
        r9 := @parameter8: java.lang.ClassLoader;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.Package: java.lang.String pkgName> = r1;
        r0.<java.lang.Package: java.lang.String implTitle> = r5;
        r0.<java.lang.Package: java.lang.String implVersion> = r6;
        r0.<java.lang.Package: java.lang.String implVendor> = r7;
        r0.<java.lang.Package: java.lang.String specTitle> = r2;
        r0.<java.lang.Package: java.lang.String specVersion> = r3;
        r0.<java.lang.Package: java.lang.String specVendor> = r4;
        r0.<java.lang.Package: java.net.URL sealBase> = r8;
        r0.<java.lang.Package: java.lang.ClassLoader loader> = r9;
        return;
    }

    private void <init>(java.lang.String, java.util.jar.Manifest, java.net.URL, java.lang.ClassLoader)
    {
        java.lang.Package r0;
        java.lang.String r1, r5, r6, r7, r8, r9, r10, r11, r12, $r15, $r31;
        java.util.jar.Manifest r2;
        java.net.URL r3, r13;
        java.lang.ClassLoader r4;
        java.util.jar.Attributes r14, r23;
        java.util.jar.Attributes$Name $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        boolean $z0;

        r0 := @this: java.lang.Package;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.Manifest;
        r3 := @parameter2: java.net.URL;
        r4 := @parameter3: java.lang.ClassLoader;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r15 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
        r5 = virtualinvoke $r15.<java.lang.String: java.lang.String concat(java.lang.String)>("/");
        r6 = null;
        r7 = null;
        r8 = null;
        r9 = null;
        r10 = null;
        r11 = null;
        r12 = null;
        r13 = null;
        r14 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>(r5);
        if r14 == null goto label0;

        $r16 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_TITLE>;
        r7 = virtualinvoke r14.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r16);
        $r17 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VERSION>;
        r8 = virtualinvoke r14.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r17);
        $r18 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VENDOR>;
        r9 = virtualinvoke r14.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r18);
        $r19 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_TITLE>;
        r10 = virtualinvoke r14.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r19);
        $r20 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VERSION>;
        r11 = virtualinvoke r14.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r20);
        $r21 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VENDOR>;
        r12 = virtualinvoke r14.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r21);
        $r22 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;
        r6 = virtualinvoke r14.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r22);

     label0:
        r23 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();
        if r23 == null goto label7;

        if r7 != null goto label1;

        $r24 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_TITLE>;
        r7 = virtualinvoke r23.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r24);

     label1:
        if r8 != null goto label2;

        $r25 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VERSION>;
        r8 = virtualinvoke r23.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r25);

     label2:
        if r9 != null goto label3;

        $r26 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VENDOR>;
        r9 = virtualinvoke r23.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r26);

     label3:
        if r10 != null goto label4;

        $r27 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_TITLE>;
        r10 = virtualinvoke r23.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r27);

     label4:
        if r11 != null goto label5;

        $r28 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VERSION>;
        r11 = virtualinvoke r23.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r28);

     label5:
        if r12 != null goto label6;

        $r29 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VENDOR>;
        r12 = virtualinvoke r23.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r29);

     label6:
        if r6 != null goto label7;

        $r30 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;
        r6 = virtualinvoke r23.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r30);

     label7:
        $r31 = "true";
        $z0 = virtualinvoke $r31.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);
        if $z0 == 0 goto label8;

        r13 = r3;

     label8:
        r0.<java.lang.Package: java.lang.String pkgName> = r1;
        r0.<java.lang.Package: java.lang.String specTitle> = r7;
        r0.<java.lang.Package: java.lang.String specVersion> = r8;
        r0.<java.lang.Package: java.lang.String specVendor> = r9;
        r0.<java.lang.Package: java.lang.String implTitle> = r10;
        r0.<java.lang.Package: java.lang.String implVersion> = r11;
        r0.<java.lang.Package: java.lang.String implVendor> = r12;
        r0.<java.lang.Package: java.net.URL sealBase> = r13;
        r0.<java.lang.Package: java.lang.ClassLoader loader> = r4;
        return;
    }

    static java.lang.Package getSystemPackage(java.lang.String)
    {
        java.lang.String r0, r4, $r8, r9;
        java.util.Map $r1, r2, $r6;
        java.lang.Package r3;
        java.lang.Throwable r5, $r11;
        java.lang.Object $r7;

        r0 := @parameter0: java.lang.String;
        $r1 = <java.lang.Package: java.util.Map pkgs>;
        r2 = $r1;
        entermonitor $r1;

     label0:
        $r6 = <java.lang.Package: java.util.Map pkgs>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        r3 = (java.lang.Package) $r7;
        if r3 != null goto label1;

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
        r9 = virtualinvoke $r8.<java.lang.String: java.lang.String concat(java.lang.String)>("/");
        r4 = staticinvoke <java.lang.Package: java.lang.String getSystemPackage0(java.lang.String)>(r9);
        if r4 == null goto label1;

        r3 = staticinvoke <java.lang.Package: java.lang.Package defineSystemPackage(java.lang.String,java.lang.String)>(r9, r4);

     label1:
        exitmonitor r2;

     label2:
        return r3;

     label3:
        $r11 := @caughtexception;

     label4:
        r5 = $r11;
        exitmonitor r2;

     label5:
        throw r5;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static java.lang.Package[] getSystemPackages()
    {
        java.lang.String[] r0;
        java.util.Map r1, $r3, $r8, $r10;
        int i0, $i1, $i2;
        java.lang.Throwable r2, $r14;
        java.lang.String $r4, $r5, $r6;
        java.util.Collection $r9;
        java.lang.Package[] $r11, $r13;
        java.lang.Object[] $r12;

        r0 = staticinvoke <java.lang.Package: java.lang.String[] getSystemPackages0()>();
        $r3 = <java.lang.Package: java.util.Map pkgs>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        i0 = 0;

     label1:
        $i1 = lengthof r0;
        if i0 >= $i1 goto label2;

        $r4 = r0[i0];
        $r5 = r0[i0];
        $r6 = staticinvoke <java.lang.Package: java.lang.String getSystemPackage0(java.lang.String)>($r5);
        staticinvoke <java.lang.Package: java.lang.Package defineSystemPackage(java.lang.String,java.lang.String)>($r4, $r6);
        i0 = i0 + 1;
        goto label1;

     label2:
        $r8 = <java.lang.Package: java.util.Map pkgs>;
        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();
        $r10 = <java.lang.Package: java.util.Map pkgs>;
        $i2 = interfaceinvoke $r10.<java.util.Map: int size()>();
        $r11 = newarray (java.lang.Package)[$i2];
        $r12 = interfaceinvoke $r9.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r11);
        $r13 = (java.lang.Package[]) $r12;
        exitmonitor r1;

     label3:
        return $r13;

     label4:
        $r14 := @caughtexception;

     label5:
        r2 = $r14;
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label0 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private static java.lang.Package defineSystemPackage(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.Package$1 $r2;
        java.lang.Object $r3;
        java.lang.Package $r4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = new java.lang.Package$1;
        specialinvoke $r2.<java.lang.Package$1: void <init>(java.lang.String,java.lang.String)>(r0, r1);
        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);
        $r4 = (java.lang.Package) $r3;
        return $r4;
    }

    private static java.util.jar.Manifest loadManifest(java.lang.String)
    {
        java.lang.String r0;
        java.io.FileInputStream $r1, r2;
        java.lang.Throwable r3, r5, r7, r8, r9, r10, r11, $r13, $r14, r15, $r16, r17, $r18, $r19, $r20, r21, $r22, $r23;
        java.util.jar.JarInputStream r4, $r12;
        java.util.jar.Manifest r6;
        java.io.IOException $r24, r25;

        r0 := @parameter0: java.lang.String;

     label0:
        $r1 = new java.io.FileInputStream;
        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r0);
        r2 = $r1;
        r3 = null;

     label1:
        $r12 = new java.util.jar.JarInputStream;
        specialinvoke $r12.<java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>(r2, 0);
        r4 = $r12;
        r5 = null;

     label2:
        r6 = virtualinvoke r4.<java.util.jar.JarInputStream: java.util.jar.Manifest getManifest()>();

     label3:
        if r4 == null goto label8;

        if r5 == null goto label7;

     label4:
        virtualinvoke r4.<java.util.jar.JarInputStream: void close()>();

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;
        r7 = $r13;
        virtualinvoke r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r7);
        goto label8;

     label7:
        virtualinvoke r4.<java.util.jar.JarInputStream: void close()>();

     label8:
        if r2 == null goto label13;

        if r3 == null goto label12;

     label9:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label10:
        goto label13;

     label11:
        $r14 := @caughtexception;
        r15 = $r14;
        virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r15);
        goto label13;

     label12:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label13:
        return r6;

     label14:
        $r16 := @caughtexception;

     label15:
        r17 = $r16;
        r5 = r17;
        throw r17;

     label16:
        $r18 := @caughtexception;
        r8 = $r18;

     label17:
        if r4 == null goto label22;

        if r5 == null goto label21;

     label18:
        virtualinvoke r4.<java.util.jar.JarInputStream: void close()>();

     label19:
        goto label22;

     label20:
        $r19 := @caughtexception;
        r9 = $r19;
        virtualinvoke r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9);
        goto label22;

     label21:
        virtualinvoke r4.<java.util.jar.JarInputStream: void close()>();

     label22:
        throw r8;

     label23:
        $r20 := @caughtexception;
        r21 = $r20;
        r3 = r21;
        throw r21;

     label24:
        $r22 := @caughtexception;
        r10 = $r22;

     label25:
        if r2 == null goto label30;

        if r3 == null goto label29;

     label26:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label27:
        goto label30;

     label28:
        $r23 := @caughtexception;
        r11 = $r23;
        virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r11);
        goto label30;

     label29:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label30:
        throw r10;

     label31:
        $r24 := @caughtexception;
        r25 = $r24;
        return null;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label9 to label10 with label11;
        catch java.lang.Throwable from label2 to label3 with label14;
        catch java.lang.Throwable from label2 to label3 with label16;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label15 to label17 with label16;
        catch java.lang.Throwable from label1 to label8 with label23;
        catch java.lang.Throwable from label15 to label23 with label23;
        catch java.lang.Throwable from label1 to label8 with label24;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label15 to label25 with label24;
        catch java.io.IOException from label0 to label13 with label31;
        catch java.io.IOException from label15 to label31 with label31;
    }

    private static native java.lang.String getSystemPackage0(java.lang.String);

    private static native java.lang.String[] getSystemPackages0();

    static java.util.Map access$000()
    {
        java.util.Map $r0;

        $r0 = <java.lang.Package: java.util.Map urls>;
        return $r0;
    }

    static java.util.jar.Manifest access$100(java.lang.String)
    {
        java.lang.String r0;
        java.util.jar.Manifest $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Package: java.util.jar.Manifest loadManifest(java.lang.String)>(r0);
        return $r1;
    }

    static java.util.Map access$200()
    {
        java.util.Map $r0;

        $r0 = <java.lang.Package: java.util.Map mans>;
        return $r0;
    }

    void <init>(java.lang.String, java.util.jar.Manifest, java.net.URL, java.lang.ClassLoader, java.lang.Package$1)
    {
        java.lang.Package r0;
        java.lang.String r1;
        java.util.jar.Manifest r2;
        java.net.URL r3;
        java.lang.ClassLoader r4;
        java.lang.Package$1 r5;

        r0 := @this: java.lang.Package;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.Manifest;
        r3 := @parameter2: java.net.URL;
        r4 := @parameter3: java.lang.ClassLoader;
        r5 := @parameter4: java.lang.Package$1;
        specialinvoke r0.<java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL,java.lang.ClassLoader)>(r1, r2, r3, r4);
        return;
    }

    static java.util.Map access$400()
    {
        java.util.Map $r0;

        $r0 = <java.lang.Package: java.util.Map pkgs>;
        return $r0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1, $r2;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(31);
        <java.lang.Package: java.util.Map pkgs> = $r0;
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(10);
        <java.lang.Package: java.util.Map urls> = $r1;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(10);
        <java.lang.Package: java.util.Map mans> = $r2;
        return;
    }
}
