public class sun.util.locale.UnicodeLocaleExtension extends sun.util.locale.Extension
{
    public static final char SINGLETON;
    private final java.util.Set attributes;
    private final java.util.Map keywords;
    public static final sun.util.locale.UnicodeLocaleExtension CA_JAPANESE;
    public static final sun.util.locale.UnicodeLocaleExtension NU_THAI;

    private void <init>(java.lang.String, java.lang.String)
    {
        sun.util.locale.UnicodeLocaleExtension r0;
        java.lang.String r1, r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.util.Set $r8;
        java.util.Map $r9;

        r0 := @this: sun.util.locale.UnicodeLocaleExtension;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<sun.util.locale.Extension: void <init>(char,java.lang.String)>(117, $r7);
        $r8 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Set attributes> = $r8;
        $r9 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r1, r2);
        r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Map keywords> = $r9;
        return;
    }

    void <init>(java.util.SortedSet, java.util.SortedMap)
    {
        sun.util.locale.UnicodeLocaleExtension r0;
        java.util.SortedSet r1;
        java.util.SortedMap r2;
        java.lang.StringBuilder r3, $r12, $r15, $r24, $r26;
        java.util.Iterator r4, r19;
        java.lang.String r5, r6, r7, $r28;
        java.util.Set $r8, $r10, $r13, $r18;
        java.util.Map $r9, $r11, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r14, $r20, $r22, $r23;
        java.util.Map$Entry r21;
        int $i0;

        r0 := @this: sun.util.locale.UnicodeLocaleExtension;
        r1 := @parameter0: java.util.SortedSet;
        r2 := @parameter1: java.util.SortedMap;
        specialinvoke r0.<sun.util.locale.Extension: void <init>(char)>(117);
        if r1 == null goto label0;

        r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Set attributes> = r1;
        goto label1;

     label0:
        $r8 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Set attributes> = $r8;

     label1:
        if r2 == null goto label2;

        r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Map keywords> = r2;
        goto label3;

     label2:
        $r9 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
        r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Map keywords> = $r9;

     label3:
        $r10 = r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Set attributes>;
        $z0 = interfaceinvoke $r10.<java.util.Set: boolean isEmpty()>();
        if $z0 == 0 goto label4;

        $r11 = r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Map keywords>;
        $z1 = interfaceinvoke $r11.<java.util.Map: boolean isEmpty()>();
        if $z1 != 0 goto label10;

     label4:
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        r3 = $r12;
        $r13 = r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Set attributes>;
        r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label6;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.lang.String) $r14;
        $r15 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        goto label5;

     label6:
        $r17 = r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Map keywords>;
        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Set entrySet()>();
        r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z3 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label9;

        $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();
        r21 = (java.util.Map$Entry) $r20;
        $r22 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();
        r6 = (java.lang.String) $r22;
        $r23 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();
        r7 = (java.lang.String) $r23;
        $r24 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $i0 = virtualinvoke r7.<java.lang.String: int length()>();
        if $i0 <= 0 goto label8;

        $r26 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

     label8:
        goto label7;

     label9:
        $r28 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String substring(int)>(1);
        virtualinvoke r0.<sun.util.locale.UnicodeLocaleExtension: void setValue(java.lang.String)>($r28);

     label10:
        return;
    }

    public java.util.Set getUnicodeLocaleAttributes()
    {
        sun.util.locale.UnicodeLocaleExtension r0;
        java.util.Set $r1, $r2, $r3, $r4, $r5;

        r0 := @this: sun.util.locale.UnicodeLocaleExtension;
        $r2 = r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Set attributes>;
        $r1 = <java.util.Collections: java.util.Set EMPTY_SET>;
        if $r2 != $r1 goto label0;

        $r3 = r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Set attributes>;
        return $r3;

     label0:
        $r4 = r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Set attributes>;
        $r5 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r4);
        return $r5;
    }

    public java.util.Set getUnicodeLocaleKeys()
    {
        sun.util.locale.UnicodeLocaleExtension r0;
        java.util.Map $r1, $r2, $r4;
        java.util.Set $r3, $r5, $r6;

        r0 := @this: sun.util.locale.UnicodeLocaleExtension;
        $r2 = r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Map keywords>;
        $r1 = <java.util.Collections: java.util.Map EMPTY_MAP>;
        if $r2 != $r1 goto label0;

        $r3 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        return $r3;

     label0:
        $r4 = r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Map keywords>;
        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();
        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r5);
        return $r6;
    }

    public java.lang.String getUnicodeLocaleType(java.lang.String)
    {
        sun.util.locale.UnicodeLocaleExtension r0;
        java.lang.String r1, $r4;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: sun.util.locale.UnicodeLocaleExtension;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<sun.util.locale.UnicodeLocaleExtension: java.util.Map keywords>;
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (java.lang.String) $r3;
        return $r4;
    }

    public static boolean isSingletonChar(char)
    {
        char c0, $c1;
        boolean $z0;

        c0 := @parameter0: char;
        $c1 = staticinvoke <sun.util.locale.LocaleUtils: char toLower(char)>(c0);
        if 117 != $c1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isAttribute(java.lang.String)
    {
        java.lang.String r0;
        int i0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        if i0 < 3 goto label0;

        if i0 > 8 goto label0;

        $z0 = staticinvoke <sun.util.locale.LocaleUtils: boolean isAlphaNumericString(java.lang.String)>(r0);
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public static boolean isKey(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i0 != 2 goto label0;

        $z0 = staticinvoke <sun.util.locale.LocaleUtils: boolean isAlphaNumericString(java.lang.String)>(r0);
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public static boolean isTypeSubtag(java.lang.String)
    {
        java.lang.String r0;
        int i0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        if i0 < 3 goto label0;

        if i0 > 8 goto label0;

        $z0 = staticinvoke <sun.util.locale.LocaleUtils: boolean isAlphaNumericString(java.lang.String)>(r0);
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public volatile java.lang.String toString()
    {
        sun.util.locale.UnicodeLocaleExtension r0;
        java.lang.String $r1;

        r0 := @this: sun.util.locale.UnicodeLocaleExtension;
        $r1 = specialinvoke r0.<sun.util.locale.Extension: java.lang.String toString()>();
        return $r1;
    }

    public volatile java.lang.String getID()
    {
        sun.util.locale.UnicodeLocaleExtension r0;
        java.lang.String $r1;

        r0 := @this: sun.util.locale.UnicodeLocaleExtension;
        $r1 = specialinvoke r0.<sun.util.locale.Extension: java.lang.String getID()>();
        return $r1;
    }

    public volatile java.lang.String getValue()
    {
        sun.util.locale.UnicodeLocaleExtension r0;
        java.lang.String $r1;

        r0 := @this: sun.util.locale.UnicodeLocaleExtension;
        $r1 = specialinvoke r0.<sun.util.locale.Extension: java.lang.String getValue()>();
        return $r1;
    }

    public volatile char getKey()
    {
        sun.util.locale.UnicodeLocaleExtension r0;
        char $c0;

        r0 := @this: sun.util.locale.UnicodeLocaleExtension;
        $c0 = specialinvoke r0.<sun.util.locale.Extension: char getKey()>();
        return $c0;
    }

    static void <clinit>()
    {
        sun.util.locale.UnicodeLocaleExtension $r0, $r1;

        $r0 = new sun.util.locale.UnicodeLocaleExtension;
        specialinvoke $r0.<sun.util.locale.UnicodeLocaleExtension: void <init>(java.lang.String,java.lang.String)>("ca", "japanese");
        <sun.util.locale.UnicodeLocaleExtension: sun.util.locale.UnicodeLocaleExtension CA_JAPANESE> = $r0;
        $r1 = new sun.util.locale.UnicodeLocaleExtension;
        specialinvoke $r1.<sun.util.locale.UnicodeLocaleExtension: void <init>(java.lang.String,java.lang.String)>("nu", "thai");
        <sun.util.locale.UnicodeLocaleExtension: sun.util.locale.UnicodeLocaleExtension NU_THAI> = $r1;
        return;
    }
}
