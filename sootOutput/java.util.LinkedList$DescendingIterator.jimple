class java.util.LinkedList$DescendingIterator extends java.lang.Object implements java.util.Iterator
{
    private final java.util.LinkedList$ListItr itr;
    final java.util.LinkedList this$0;

    private void <init>(java.util.LinkedList)
    {
        java.util.LinkedList$DescendingIterator r0;
        java.util.LinkedList r1, $r3, $r4;
        java.util.LinkedList$ListItr $r2;
        int $i0;

        r0 := @this: java.util.LinkedList$DescendingIterator;
        r1 := @parameter0: java.util.LinkedList;
        r0.<java.util.LinkedList$DescendingIterator: java.util.LinkedList this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.LinkedList$ListItr;
        $r3 = r0.<java.util.LinkedList$DescendingIterator: java.util.LinkedList this$0>;
        $r4 = r0.<java.util.LinkedList$DescendingIterator: java.util.LinkedList this$0>;
        $i0 = virtualinvoke $r4.<java.util.LinkedList: int size()>();
        specialinvoke $r2.<java.util.LinkedList$ListItr: void <init>(java.util.LinkedList,int)>($r3, $i0);
        r0.<java.util.LinkedList$DescendingIterator: java.util.LinkedList$ListItr itr> = $r2;
        return;
    }

    public boolean hasNext()
    {
        java.util.LinkedList$DescendingIterator r0;
        java.util.LinkedList$ListItr $r1;
        boolean $z0;

        r0 := @this: java.util.LinkedList$DescendingIterator;
        $r1 = r0.<java.util.LinkedList$DescendingIterator: java.util.LinkedList$ListItr itr>;
        $z0 = virtualinvoke $r1.<java.util.LinkedList$ListItr: boolean hasPrevious()>();
        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.LinkedList$DescendingIterator r0;
        java.util.LinkedList$ListItr $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.LinkedList$DescendingIterator;
        $r1 = r0.<java.util.LinkedList$DescendingIterator: java.util.LinkedList$ListItr itr>;
        $r2 = virtualinvoke $r1.<java.util.LinkedList$ListItr: java.lang.Object previous()>();
        return $r2;
    }

    public void remove()
    {
        java.util.LinkedList$DescendingIterator r0;
        java.util.LinkedList$ListItr $r1;

        r0 := @this: java.util.LinkedList$DescendingIterator;
        $r1 = r0.<java.util.LinkedList$DescendingIterator: java.util.LinkedList$ListItr itr>;
        virtualinvoke $r1.<java.util.LinkedList$ListItr: void remove()>();
        return;
    }

    void <init>(java.util.LinkedList, java.util.LinkedList$1)
    {
        java.util.LinkedList$DescendingIterator r0;
        java.util.LinkedList r1;
        java.util.LinkedList$1 r2;

        r0 := @this: java.util.LinkedList$DescendingIterator;
        r1 := @parameter0: java.util.LinkedList;
        r2 := @parameter1: java.util.LinkedList$1;
        specialinvoke r0.<java.util.LinkedList$DescendingIterator: void <init>(java.util.LinkedList)>(r1);
        return;
    }
}
