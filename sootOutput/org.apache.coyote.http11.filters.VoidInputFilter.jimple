public class org.apache.coyote.http11.filters.VoidInputFilter extends java.lang.Object implements org.apache.coyote.http11.InputFilter
{
    protected static final java.lang.String ENCODING_NAME;
    protected static final org.apache.tomcat.util.buf.ByteChunk ENCODING;

    static void <clinit>()
    {
        org.apache.tomcat.util.buf.ByteChunk $r0, $r3;
        java.nio.charset.Charset $r1;
        java.lang.String $r2, $r4;
        byte[] $r5;
        int $i0;

        $r0 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r0.<org.apache.tomcat.util.buf.ByteChunk: void <init>()>();
        <org.apache.coyote.http11.filters.VoidInputFilter: org.apache.tomcat.util.buf.ByteChunk ENCODING> = $r0;
        $r3 = <org.apache.coyote.http11.filters.VoidInputFilter: org.apache.tomcat.util.buf.ByteChunk ENCODING>;
        $r4 = "void";
        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);
        $r2 = "void";
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();
        virtualinvoke $r3.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>($r5, 0, $i0);
        return;
    }

    public void <init>()
    {
        org.apache.coyote.http11.filters.VoidInputFilter r0;

        r0 := @this: org.apache.coyote.http11.filters.VoidInputFilter;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public int doRead(org.apache.tomcat.util.buf.ByteChunk, org.apache.coyote.Request) throws java.io.IOException
    {
        org.apache.coyote.http11.filters.VoidInputFilter r0;
        org.apache.tomcat.util.buf.ByteChunk r1;
        org.apache.coyote.Request r2;

        r0 := @this: org.apache.coyote.http11.filters.VoidInputFilter;
        r1 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        r2 := @parameter1: org.apache.coyote.Request;
        return -1;
    }

    public void setRequest(org.apache.coyote.Request)
    {
        org.apache.coyote.http11.filters.VoidInputFilter r0;
        org.apache.coyote.Request r1;

        r0 := @this: org.apache.coyote.http11.filters.VoidInputFilter;
        r1 := @parameter0: org.apache.coyote.Request;
        return;
    }

    public void setBuffer(org.apache.coyote.InputBuffer)
    {
        org.apache.coyote.http11.filters.VoidInputFilter r0;
        org.apache.coyote.InputBuffer r1;

        r0 := @this: org.apache.coyote.http11.filters.VoidInputFilter;
        r1 := @parameter0: org.apache.coyote.InputBuffer;
        return;
    }

    public void recycle()
    {
        org.apache.coyote.http11.filters.VoidInputFilter r0;

        r0 := @this: org.apache.coyote.http11.filters.VoidInputFilter;
        return;
    }

    public org.apache.tomcat.util.buf.ByteChunk getEncodingName()
    {
        org.apache.coyote.http11.filters.VoidInputFilter r0;
        org.apache.tomcat.util.buf.ByteChunk $r1;

        r0 := @this: org.apache.coyote.http11.filters.VoidInputFilter;
        $r1 = <org.apache.coyote.http11.filters.VoidInputFilter: org.apache.tomcat.util.buf.ByteChunk ENCODING>;
        return $r1;
    }

    public long end() throws java.io.IOException
    {
        org.apache.coyote.http11.filters.VoidInputFilter r0;

        r0 := @this: org.apache.coyote.http11.filters.VoidInputFilter;
        return 0L;
    }

    public int available()
    {
        org.apache.coyote.http11.filters.VoidInputFilter r0;

        r0 := @this: org.apache.coyote.http11.filters.VoidInputFilter;
        return 0;
    }
}
