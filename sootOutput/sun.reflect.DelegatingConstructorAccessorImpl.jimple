class sun.reflect.DelegatingConstructorAccessorImpl extends sun.reflect.ConstructorAccessorImpl
{
    private sun.reflect.ConstructorAccessorImpl delegate;

    void <init>(sun.reflect.ConstructorAccessorImpl)
    {
        sun.reflect.DelegatingConstructorAccessorImpl r0;
        sun.reflect.ConstructorAccessorImpl r1;

        r0 := @this: sun.reflect.DelegatingConstructorAccessorImpl;
        r1 := @parameter0: sun.reflect.ConstructorAccessorImpl;
        specialinvoke r0.<sun.reflect.ConstructorAccessorImpl: void <init>()>();
        virtualinvoke r0.<sun.reflect.DelegatingConstructorAccessorImpl: void setDelegate(sun.reflect.ConstructorAccessorImpl)>(r1);
        return;
    }

    public java.lang.Object newInstance(java.lang.Object[]) throws java.lang.InstantiationException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException
    {
        sun.reflect.DelegatingConstructorAccessorImpl r0;
        java.lang.Object[] r1;
        sun.reflect.ConstructorAccessorImpl $r2;
        java.lang.Object $r3;

        r0 := @this: sun.reflect.DelegatingConstructorAccessorImpl;
        r1 := @parameter0: java.lang.Object[];
        $r2 = r0.<sun.reflect.DelegatingConstructorAccessorImpl: sun.reflect.ConstructorAccessorImpl delegate>;
        $r3 = virtualinvoke $r2.<sun.reflect.ConstructorAccessorImpl: java.lang.Object newInstance(java.lang.Object[])>(r1);
        return $r3;
    }

    void setDelegate(sun.reflect.ConstructorAccessorImpl)
    {
        sun.reflect.DelegatingConstructorAccessorImpl r0;
        sun.reflect.ConstructorAccessorImpl r1;

        r0 := @this: sun.reflect.DelegatingConstructorAccessorImpl;
        r1 := @parameter0: sun.reflect.ConstructorAccessorImpl;
        r0.<sun.reflect.DelegatingConstructorAccessorImpl: sun.reflect.ConstructorAccessorImpl delegate> = r1;
        return;
    }
}
