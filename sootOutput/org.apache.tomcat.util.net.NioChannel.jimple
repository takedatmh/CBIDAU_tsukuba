public class org.apache.tomcat.util.net.NioChannel extends java.lang.Object implements java.nio.channels.ByteChannel
{
    protected static final org.apache.tomcat.util.res.StringManager sm;
    protected static java.nio.ByteBuffer emptyBuf;
    protected java.nio.channels.SocketChannel sc;
    protected org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler bufHandler;
    protected org.apache.tomcat.util.net.NioEndpoint$Poller poller;

    static void <clinit>()
    {
        org.apache.tomcat.util.res.StringManager $r0;
        java.nio.ByteBuffer $r1;

        $r0 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.tomcat.util.net.res");
        <org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.res.StringManager sm> = $r0;
        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(0);
        <org.apache.tomcat.util.net.NioChannel: java.nio.ByteBuffer emptyBuf> = $r1;
        return;
    }

    public void <init>(java.nio.channels.SocketChannel, org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler) throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioChannel r0;
        java.nio.channels.SocketChannel r1;
        org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler r2;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        r1 := @parameter0: java.nio.channels.SocketChannel;
        r2 := @parameter1: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel sc> = null;
        r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel sc> = r1;
        r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler bufHandler> = r2;
        return;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioChannel r0;
        org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler $r1, $r4;
        java.nio.ByteBuffer $r2, $r5;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        $r1 = r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler bufHandler>;
        $r2 = interfaceinvoke $r1.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getReadBuffer()>();
        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer clear()>();
        $r4 = r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler bufHandler>;
        $r5 = interfaceinvoke $r4.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getWriteBuffer()>();
        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer clear()>();
        return;
    }

    public int getBufferSize()
    {
        org.apache.tomcat.util.net.NioChannel r0;
        byte b0;
        org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler $r1, $r2, $r4, $r6, $r8;
        java.nio.ByteBuffer $r3, $r5, $r7, $r9;
        int $i2, i3, $i5, i6;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        $r1 = r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler bufHandler>;
        if $r1 != null goto label0;

        return 0;

     label0:
        b0 = 0;
        $r2 = r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler bufHandler>;
        $r3 = interfaceinvoke $r2.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getReadBuffer()>();
        if $r3 == null goto label1;

        $r4 = r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler bufHandler>;
        $r5 = interfaceinvoke $r4.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getReadBuffer()>();
        $i2 = virtualinvoke $r5.<java.nio.ByteBuffer: int capacity()>();
        goto label2;

     label1:
        $i2 = 0;

     label2:
        i3 = b0 + $i2;
        $r6 = r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler bufHandler>;
        $r7 = interfaceinvoke $r6.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getWriteBuffer()>();
        if $r7 == null goto label3;

        $r8 = r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler bufHandler>;
        $r9 = interfaceinvoke $r8.<org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler: java.nio.ByteBuffer getWriteBuffer()>();
        $i5 = virtualinvoke $r9.<java.nio.ByteBuffer: int capacity()>();
        goto label4;

     label3:
        $i5 = 0;

     label4:
        i6 = i3 + $i5;
        return i6;
    }

    public boolean flush(boolean, java.nio.channels.Selector, long) throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioChannel r0;
        boolean z0;
        java.nio.channels.Selector r1;
        long l0;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        z0 := @parameter0: boolean;
        r1 := @parameter1: java.nio.channels.Selector;
        l0 := @parameter2: long;
        return 1;
    }

    public void close() throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioChannel r0;
        java.nio.channels.SocketChannel $r1, $r3;
        java.net.Socket $r2;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel getIOChannel()>();
        $r2 = virtualinvoke $r1.<java.nio.channels.SocketChannel: java.net.Socket socket()>();
        virtualinvoke $r2.<java.net.Socket: void close()>();
        $r3 = virtualinvoke r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel getIOChannel()>();
        virtualinvoke $r3.<java.nio.channels.SocketChannel: void close()>();
        return;
    }

    public void close(boolean) throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioChannel r0;
        boolean z0, $z1;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        z0 := @parameter0: boolean;
        $z1 = virtualinvoke r0.<org.apache.tomcat.util.net.NioChannel: boolean isOpen()>();
        if $z1 != 0 goto label0;

        if z0 == 0 goto label1;

     label0:
        virtualinvoke r0.<org.apache.tomcat.util.net.NioChannel: void close()>();

     label1:
        return;
    }

    public boolean isOpen()
    {
        org.apache.tomcat.util.net.NioChannel r0;
        java.nio.channels.SocketChannel $r1;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        $r1 = r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel sc>;
        $z0 = virtualinvoke $r1.<java.nio.channels.SocketChannel: boolean isOpen()>();
        return $z0;
    }

    public int write(java.nio.ByteBuffer) throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioChannel r0;
        java.nio.ByteBuffer r1;
        java.nio.channels.SocketChannel $r2;
        int $i0;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        r1 := @parameter0: java.nio.ByteBuffer;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioChannel: void checkInterruptStatus()>();
        $r2 = r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel sc>;
        $i0 = virtualinvoke $r2.<java.nio.channels.SocketChannel: int write(java.nio.ByteBuffer)>(r1);
        return $i0;
    }

    public int read(java.nio.ByteBuffer) throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioChannel r0;
        java.nio.ByteBuffer r1;
        java.nio.channels.SocketChannel $r2;
        int $i0;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        r1 := @parameter0: java.nio.ByteBuffer;
        $r2 = r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel sc>;
        $i0 = virtualinvoke $r2.<java.nio.channels.SocketChannel: int read(java.nio.ByteBuffer)>(r1);
        return $i0;
    }

    public java.lang.Object getAttachment()
    {
        org.apache.tomcat.util.net.NioChannel r0;
        org.apache.tomcat.util.net.NioEndpoint$Poller r1;
        java.nio.channels.Selector r2, $r5;
        java.nio.channels.SelectionKey r3, $r7;
        java.lang.Object r4, $r8;
        java.nio.channels.SocketChannel $r6;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        r1 = virtualinvoke r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.NioEndpoint$Poller getPoller()>();
        if r1 == null goto label0;

        $r5 = virtualinvoke r1.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector getSelector()>();
        goto label1;

     label0:
        $r5 = null;

     label1:
        r2 = $r5;
        if r2 == null goto label2;

        $r6 = virtualinvoke r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel getIOChannel()>();
        $r7 = virtualinvoke $r6.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)>(r2);
        goto label3;

     label2:
        $r7 = null;

     label3:
        r3 = $r7;
        if r3 == null goto label4;

        $r8 = virtualinvoke r3.<java.nio.channels.SelectionKey: java.lang.Object attachment()>();
        goto label5;

     label4:
        $r8 = null;

     label5:
        r4 = $r8;
        return r4;
    }

    public org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler getBufHandler()
    {
        org.apache.tomcat.util.net.NioChannel r0;
        org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler $r1;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        $r1 = r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler bufHandler>;
        return $r1;
    }

    public org.apache.tomcat.util.net.NioEndpoint$Poller getPoller()
    {
        org.apache.tomcat.util.net.NioChannel r0;
        org.apache.tomcat.util.net.NioEndpoint$Poller $r1;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        $r1 = r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.NioEndpoint$Poller poller>;
        return $r1;
    }

    public java.nio.channels.SocketChannel getIOChannel()
    {
        org.apache.tomcat.util.net.NioChannel r0;
        java.nio.channels.SocketChannel $r1;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        $r1 = r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel sc>;
        return $r1;
    }

    public boolean isClosing()
    {
        org.apache.tomcat.util.net.NioChannel r0;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        return 0;
    }

    public boolean isHandshakeComplete()
    {
        org.apache.tomcat.util.net.NioChannel r0;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        return 1;
    }

    public int handshake(boolean, boolean) throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioChannel r0;
        boolean z0, z1;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        z0 := @parameter0: boolean;
        z1 := @parameter1: boolean;
        return 0;
    }

    public void setPoller(org.apache.tomcat.util.net.NioEndpoint$Poller)
    {
        org.apache.tomcat.util.net.NioChannel r0;
        org.apache.tomcat.util.net.NioEndpoint$Poller r1;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        r1 := @parameter0: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r0.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.NioEndpoint$Poller poller> = r1;
        return;
    }

    public void setIOChannel(java.nio.channels.SocketChannel)
    {
        org.apache.tomcat.util.net.NioChannel r0;
        java.nio.channels.SocketChannel r1;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        r1 := @parameter0: java.nio.channels.SocketChannel;
        r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel sc> = r1;
        return;
    }

    public java.lang.String toString()
    {
        org.apache.tomcat.util.net.NioChannel r0;
        java.lang.StringBuilder $r1, $r4, $r7;
        java.lang.String $r2, $r3, $r6, $r8;
        java.nio.channels.SocketChannel $r5;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        $r1 = new java.lang.StringBuilder;
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r5 = r0.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel sc>;
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r8;
    }

    public int getOutboundRemaining()
    {
        org.apache.tomcat.util.net.NioChannel r0;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        return 0;
    }

    public boolean flushOutbound() throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioChannel r0;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        return 0;
    }

    protected void checkInterruptStatus() throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioChannel r0;
        boolean $z0;
        org.apache.tomcat.util.res.StringManager $r1;
        java.io.IOException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.tomcat.util.net.NioChannel;
        $z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();
        if $z0 == 0 goto label0;

        $r2 = new java.io.IOException;
        $r1 = <org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("channel.nio.interrupted");
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        return;
    }
}
