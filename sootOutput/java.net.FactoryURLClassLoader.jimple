final class java.net.FactoryURLClassLoader extends java.net.URLClassLoader
{

    void <init>(java.net.URL[], java.lang.ClassLoader, java.security.AccessControlContext)
    {
        java.net.FactoryURLClassLoader r0;
        java.net.URL[] r1;
        java.lang.ClassLoader r2;
        java.security.AccessControlContext r3;

        r0 := @this: java.net.FactoryURLClassLoader;
        r1 := @parameter0: java.net.URL[];
        r2 := @parameter1: java.lang.ClassLoader;
        r3 := @parameter2: java.security.AccessControlContext;
        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.security.AccessControlContext)>(r1, r2, r3);
        return;
    }

    void <init>(java.net.URL[], java.security.AccessControlContext)
    {
        java.net.FactoryURLClassLoader r0;
        java.net.URL[] r1;
        java.security.AccessControlContext r2;

        r0 := @this: java.net.FactoryURLClassLoader;
        r1 := @parameter0: java.net.URL[];
        r2 := @parameter1: java.security.AccessControlContext;
        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[],java.security.AccessControlContext)>(r1, r2);
        return;
    }

    public final java.lang.Class loadClass(java.lang.String, boolean) throws java.lang.ClassNotFoundException
    {
        java.net.FactoryURLClassLoader r0;
        java.lang.String r1, $r3;
        boolean z0;
        java.lang.SecurityManager r2;
        int i0;
        java.lang.Class $r4;

        r0 := @this: java.net.FactoryURLClassLoader;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r2 == null goto label0;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);
        if i0 == -1 goto label0;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        virtualinvoke r2.<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>($r3);

     label0:
        $r4 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>(r1, z0);
        return $r4;
    }

    static void <clinit>()
    {
        staticinvoke <java.lang.ClassLoader: boolean registerAsParallelCapable()>();
        return;
    }
}
