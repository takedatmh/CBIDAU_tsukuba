final class java.util.concurrent.ConcurrentHashMap$WriteThroughEntry extends java.util.AbstractMap$SimpleEntry
{
    final java.util.concurrent.ConcurrentHashMap this$0;

    void <init>(java.util.concurrent.ConcurrentHashMap, java.lang.Object, java.lang.Object)
    {
        java.util.concurrent.ConcurrentHashMap$WriteThroughEntry r0;
        java.util.concurrent.ConcurrentHashMap r1;
        java.lang.Object r2, r3;

        r0 := @this: java.util.concurrent.ConcurrentHashMap$WriteThroughEntry;
        r1 := @parameter0: java.util.concurrent.ConcurrentHashMap;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: java.lang.Object;
        r0.<java.util.concurrent.ConcurrentHashMap$WriteThroughEntry: java.util.concurrent.ConcurrentHashMap this$0> = r1;
        specialinvoke r0.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(r2, r3);
        return;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.util.concurrent.ConcurrentHashMap$WriteThroughEntry r0;
        java.lang.Object r1, r2, $r5;
        java.lang.NullPointerException $r3;
        java.util.concurrent.ConcurrentHashMap $r4;

        r0 := @this: java.util.concurrent.ConcurrentHashMap$WriteThroughEntry;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label0:
        r2 = specialinvoke r0.<java.util.AbstractMap$SimpleEntry: java.lang.Object setValue(java.lang.Object)>(r1);
        $r4 = r0.<java.util.concurrent.ConcurrentHashMap$WriteThroughEntry: java.util.concurrent.ConcurrentHashMap this$0>;
        $r5 = virtualinvoke r0.<java.util.concurrent.ConcurrentHashMap$WriteThroughEntry: java.lang.Object getKey()>();
        virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);
        return r2;
    }
}
