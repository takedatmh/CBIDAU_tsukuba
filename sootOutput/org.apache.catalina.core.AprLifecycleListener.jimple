public class org.apache.catalina.core.AprLifecycleListener extends java.lang.Object implements org.apache.catalina.LifecycleListener
{
    private static final org.apache.juli.logging.Log log;
    private static boolean instanceCreated;
    private static final java.util.List initInfoLogMessages;
    protected static final org.apache.tomcat.util.res.StringManager sm;
    protected static final int TCN_REQUIRED_MAJOR;
    protected static final int TCN_REQUIRED_MINOR;
    protected static final int TCN_REQUIRED_PATCH;
    protected static final int TCN_RECOMMENDED_MINOR;
    protected static final int TCN_RECOMMENDED_PV;
    protected static java.lang.String SSLEngine;
    protected static java.lang.String FIPSMode;
    protected static java.lang.String SSLRandomSeed;
    protected static boolean sslInitialized;
    protected static boolean aprInitialized;
    protected static boolean sslAvailable;
    protected static boolean aprAvailable;
    protected static boolean fipsModeActive;
    private static final int FIPS_ON;
    private static final int FIPS_OFF;
    protected static final java.lang.Object lock;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        java.util.ArrayList $r1;
        org.apache.tomcat.util.res.StringManager $r2;
        java.lang.Object $r3;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/core/AprLifecycleListener");
        <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log> = $r0;
        <org.apache.catalina.core.AprLifecycleListener: boolean instanceCreated> = 0;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(3);
        <org.apache.catalina.core.AprLifecycleListener: java.util.List initInfoLogMessages> = $r1;
        $r2 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.catalina.core");
        <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm> = $r2;
        <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLEngine> = "on";
        <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode> = "off";
        <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLRandomSeed> = "builtin";
        <org.apache.catalina.core.AprLifecycleListener: boolean sslInitialized> = 0;
        <org.apache.catalina.core.AprLifecycleListener: boolean aprInitialized> = 0;
        <org.apache.catalina.core.AprLifecycleListener: boolean sslAvailable> = 0;
        <org.apache.catalina.core.AprLifecycleListener: boolean aprAvailable> = 0;
        <org.apache.catalina.core.AprLifecycleListener: boolean fipsModeActive> = 0;
        $r3 = new java.lang.Object;
        specialinvoke $r3.<java.lang.Object: void <init>()>();
        <org.apache.catalina.core.AprLifecycleListener: java.lang.Object lock> = $r3;
        return;
    }

    public static boolean isAprAvailable()
    {
        boolean $z0, $z1;
        java.lang.Object r0, $r1;
        java.lang.Throwable $r2;

        $z0 = <org.apache.catalina.core.AprLifecycleListener: boolean instanceCreated>;
        if $z0 == 0 goto label5;

        $r1 = <org.apache.catalina.core.AprLifecycleListener: java.lang.Object lock>;
        r0 = $r1;
        entermonitor $r1;

     label0:
        staticinvoke <org.apache.catalina.core.AprLifecycleListener: void init()>();
        exitmonitor r0;

     label1:
        goto label5;

     label2:
        $r2 := @caughtexception;

     label3:
        exitmonitor r0;

     label4:
        throw $r2;

     label5:
        $z1 = <org.apache.catalina.core.AprLifecycleListener: boolean aprAvailable>;
        return $z1;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void <init>()
    {
        org.apache.catalina.core.AprLifecycleListener r0;

        r0 := @this: org.apache.catalina.core.AprLifecycleListener;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        <org.apache.catalina.core.AprLifecycleListener: boolean instanceCreated> = 1;
        return;
    }

    public void lifecycleEvent(org.apache.catalina.LifecycleEvent)
    {
        org.apache.catalina.core.AprLifecycleListener r0;
        org.apache.catalina.LifecycleEvent r1;
        java.lang.String $r2, r5, $r6, $r17, $r18, $r19, $r20, $r23, $r26, $r28, $r29, $r37;
        java.lang.Object r3, $r7, $r9, $r30, r31;
        java.util.Iterator r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r8, $r11;
        org.apache.juli.logging.Log $r10, $r15, $r25, $r35;
        java.lang.Throwable $r12, r13, r14, $r27, $r32, r33, r34, $r38;
        org.apache.tomcat.util.res.StringManager $r16, $r22, $r36;
        java.lang.Error $r21, r24;

        r0 := @this: org.apache.catalina.core.AprLifecycleListener;
        r1 := @parameter0: org.apache.catalina.LifecycleEvent;
        $r2 = "before_init";
        $r6 = virtualinvoke r1.<org.apache.catalina.LifecycleEvent: java.lang.String getType()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z0 == 0 goto label12;

        $r7 = <org.apache.catalina.core.AprLifecycleListener: java.lang.Object lock>;
        r3 = $r7;
        entermonitor $r7;

     label0:
        staticinvoke <org.apache.catalina.core.AprLifecycleListener: void init()>();
        $r8 = <org.apache.catalina.core.AprLifecycleListener: java.util.List initInfoLogMessages>;
        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();
        goto label2;

     label1:
        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.lang.String) $r9;
        $r10 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void info(java.lang.Object)>(r5);

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label1;

        $r11 = <org.apache.catalina.core.AprLifecycleListener: java.util.List initInfoLogMessages>;
        interfaceinvoke $r11.<java.util.List: void clear()>();
        $z2 = <org.apache.catalina.core.AprLifecycleListener: boolean aprAvailable>;
        if $z2 == 0 goto label6;

     label3:
        staticinvoke <org.apache.catalina.core.AprLifecycleListener: void initializeSSL()>();

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;
        r13 = $r12;
        r14 = staticinvoke <org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>(r13);
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r14);
        $r15 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r16 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r17 = virtualinvoke $r16.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.sslInit");
        interfaceinvoke $r15.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r17, r14);

     label6:
        $r18 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode>;
        if $r18 == null goto label7;

        $r19 = "off";
        $r20 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode>;
        $z3 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r20);
        if $z3 != 0 goto label7;

        $z4 = virtualinvoke r0.<org.apache.catalina.core.AprLifecycleListener: boolean isFIPSModeActive()>();
        if $z4 != 0 goto label7;

        $r21 = new java.lang.Error;
        $r22 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r23 = virtualinvoke $r22.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.initializeFIPSFailed");
        specialinvoke $r21.<java.lang.Error: void <init>(java.lang.String)>($r23);
        r24 = $r21;
        $r25 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r26 = virtualinvoke r24.<java.lang.Error: java.lang.String getMessage()>();
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void fatal(java.lang.Object,java.lang.Throwable)>($r26, r24);
        throw r24;

     label7:
        exitmonitor r3;

     label8:
        goto label23;

     label9:
        $r27 := @caughtexception;

     label10:
        exitmonitor r3;

     label11:
        throw $r27;

     label12:
        $r28 = "after_destroy";
        $r29 = virtualinvoke r1.<org.apache.catalina.LifecycleEvent: java.lang.String getType()>();
        $z5 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r29);
        if $z5 == 0 goto label23;

        $r30 = <org.apache.catalina.core.AprLifecycleListener: java.lang.Object lock>;
        r31 = $r30;
        entermonitor $r30;

     label13:
        $z6 = <org.apache.catalina.core.AprLifecycleListener: boolean aprAvailable>;
        if $z6 != 0 goto label15;

        exitmonitor r31;

     label14:
        return;

     label15:
        staticinvoke <org.apache.catalina.core.AprLifecycleListener: void terminateAPR()>();

     label16:
        goto label18;

     label17:
        $r32 := @caughtexception;
        r33 = $r32;
        r34 = staticinvoke <org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>(r33);
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r34);
        $r35 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r36 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r37 = virtualinvoke $r36.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.aprDestroy");
        interfaceinvoke $r35.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r37);

     label18:
        exitmonitor r31;

     label19:
        goto label23;

     label20:
        $r38 := @caughtexception;

     label21:
        exitmonitor r31;

     label22:
        throw $r38;

     label23:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label0 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    private static void terminateAPR() throws java.lang.ClassNotFoundException, java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        java.lang.String r0;
        java.lang.reflect.Method r1;
        java.lang.Class $r2;

        r0 = "terminate";
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.tomcat.jni.Library");
        r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r0, null);
        virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null);
        <org.apache.catalina.core.AprLifecycleListener: boolean aprAvailable> = 0;
        <org.apache.catalina.core.AprLifecycleListener: boolean aprInitialized> = 0;
        <org.apache.catalina.core.AprLifecycleListener: boolean sslInitialized> = 0;
        <org.apache.catalina.core.AprLifecycleListener: boolean sslAvailable> = 0;
        <org.apache.catalina.core.AprLifecycleListener: boolean fipsModeActive> = 0;
        return;
    }

    private static void init()
    {
        boolean z0, z1, z2, z3, $z4, $z6, $z10, $z11, $z12, $z13;
        short s0, s1;
        org.apache.tomcat.jni.LibraryNotFoundError r0, $r1;
        int i2, i3, i4, $i5, $i6, $i7, i8, $i9, $i10, $i11;
        org.apache.juli.logging.Log $r2, $r3, $r18, $r23;
        org.apache.tomcat.util.res.StringManager $r4, $r11, $r19, $r24, $r38, $r49, $r67;
        java.lang.Object[] $r5, $r12, $r20, $r25, $r39, $r50, $r68;
        java.lang.String $r6, $r7, $r8, $r9, $r13, $r14, $r21, $r22, $r27, $r32, $r33, $r41, $r46, $r47, $r52, $r57, $r59, $r64, $r65, $r73;
        java.util.List $r10, $r37, $r48, $r66;
        java.lang.Throwable $r15, r16, r17, $r34, r35, r36;
        java.lang.StringBuilder $r26, $r28, $r29, $r30, $r31, $r40, $r42, $r43, $r44, $r45, $r51, $r53, $r54, $r55, $r56, $r58, $r60, $r61, $r62, $r63;
        java.lang.Boolean $r69, $r70, $r71, $r72;

        z0 = 0;
        z1 = 0;
        z2 = 0;
        z3 = 0;
        s0 = 1132;
        s1 = 1208;
        $z4 = <org.apache.catalina.core.AprLifecycleListener: boolean aprInitialized>;
        if $z4 == 0 goto label0;

        return;

     label0:
        <org.apache.catalina.core.AprLifecycleListener: boolean aprInitialized> = 1;

     label1:
        staticinvoke <org.apache.tomcat.jni.Library: boolean initialize(java.lang.String)>(null);
        i2 = <org.apache.tomcat.jni.Library: int TCN_MAJOR_VERSION>;
        i3 = <org.apache.tomcat.jni.Library: int TCN_MINOR_VERSION>;
        i4 = <org.apache.tomcat.jni.Library: int TCN_PATCH_VERSION>;
        $i5 = i2 * 1000;
        $i6 = i3 * 100;
        $i7 = $i5 + $i6;
        i8 = $i7 + i4;

     label2:
        goto label6;

     label3:
        $r1 := @caughtexception;
        r0 = $r1;
        $r2 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $z6 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label4;

        $r3 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r4 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[3];
        $r6 = virtualinvoke r0.<org.apache.tomcat.jni.LibraryNotFoundError: java.lang.String getLibraryNames()>();
        $r5[0] = $r6;
        $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.library.path");
        $r5[1] = $r7;
        $r8 = virtualinvoke r0.<org.apache.tomcat.jni.LibraryNotFoundError: java.lang.String getMessage()>();
        $r5[2] = $r8;
        $r9 = virtualinvoke $r4.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.aprInitDebug", $r5);
        interfaceinvoke $r3.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r9, r0);

     label4:
        $r10 = <org.apache.catalina.core.AprLifecycleListener: java.util.List initInfoLogMessages>;
        $r11 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = newarray (java.lang.Object)[1];
        $r13 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.library.path");
        $r12[0] = $r13;
        $r14 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.aprInit", $r12);
        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r14);
        return;

     label5:
        $r15 := @caughtexception;
        r16 = $r15;
        r17 = staticinvoke <org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>(r16);
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r17);
        $r18 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r19 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = newarray (java.lang.Object)[1];
        $r21 = virtualinvoke r17.<java.lang.Throwable: java.lang.String getMessage()>();
        $r20[0] = $r21;
        $r22 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.aprInitError", $r20);
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r22, r17);
        return;

     label6:
        if i8 >= s0 goto label11;

        $r23 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r24 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r25 = newarray (java.lang.Object)[2];
        $r26 = new java.lang.StringBuilder;
        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i2);
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r27);
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $r25[0] = $r32;
        $r25[1] = "1.1.32";
        $r33 = virtualinvoke $r24.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.tcnInvalid", $r25);
        interfaceinvoke $r23.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r33);

     label7:
        staticinvoke <org.apache.catalina.core.AprLifecycleListener: void terminateAPR()>();

     label8:
        goto label10;

     label9:
        $r34 := @caughtexception;
        r35 = $r34;
        r36 = staticinvoke <org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>(r35);
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r36);

     label10:
        return;

     label11:
        if i8 >= s1 goto label12;

        $r37 = <org.apache.catalina.core.AprLifecycleListener: java.util.List initInfoLogMessages>;
        $r38 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r39 = newarray (java.lang.Object)[2];
        $r40 = new java.lang.StringBuilder;
        $r41 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i2);
        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>($r41);
        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();
        $r39[0] = $r46;
        $r39[1] = "1.2.8";
        $r47 = virtualinvoke $r38.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.tcnVersion", $r39);
        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>($r47);

     label12:
        $r48 = <org.apache.catalina.core.AprLifecycleListener: java.util.List initInfoLogMessages>;
        $r49 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r50 = newarray (java.lang.Object)[2];
        $r51 = new java.lang.StringBuilder;
        $r52 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i2);
        specialinvoke $r51.<java.lang.StringBuilder: void <init>(java.lang.String)>($r52);
        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();
        $r50[0] = $r57;
        $r58 = new java.lang.StringBuilder;
        $i9 = <org.apache.tomcat.jni.Library: int APR_MAJOR_VERSION>;
        $r59 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i9);
        specialinvoke $r58.<java.lang.StringBuilder: void <init>(java.lang.String)>($r59);
        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $i10 = <org.apache.tomcat.jni.Library: int APR_MINOR_VERSION>;
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $i11 = <org.apache.tomcat.jni.Library: int APR_PATCH_VERSION>;
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
        $r50[1] = $r64;
        $r65 = virtualinvoke $r49.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.tcnValid", $r50);
        interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>($r65);
        $r66 = <org.apache.catalina.core.AprLifecycleListener: java.util.List initInfoLogMessages>;
        $r67 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r68 = newarray (java.lang.Object)[4];
        $z10 = <org.apache.tomcat.jni.Library: boolean APR_HAVE_IPV6>;
        $r69 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10);
        $r68[0] = $r69;
        $z11 = <org.apache.tomcat.jni.Library: boolean APR_HAS_SENDFILE>;
        $r70 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);
        $r68[1] = $r70;
        $z12 = <org.apache.tomcat.jni.Library: boolean APR_HAS_SO_ACCEPTFILTER>;
        $r71 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12);
        $r68[2] = $r71;
        $z13 = <org.apache.tomcat.jni.Library: boolean APR_HAS_RANDOM>;
        $r72 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13);
        $r68[3] = $r72;
        $r73 = virtualinvoke $r67.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.flags", $r68);
        interfaceinvoke $r66.<java.util.List: boolean add(java.lang.Object)>($r73);
        <org.apache.catalina.core.AprLifecycleListener: boolean aprAvailable> = 1;
        return;

        catch org.apache.tomcat.jni.LibraryNotFoundError from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    private static void initializeSSL() throws java.lang.Exception
    {
        java.lang.String $r0, $r1, r2, $r7, r8, $r9, r11, $r13, $r14, $r17, $r18, $r19, $r25, $r26, $r27, $r30, $r31, $r32, $r35, $r36, $r37, $r42, $r46, $r47, $r50, $r56, $r60, $r61;
        java.lang.Class[] r3;
        java.lang.Object[] r4, $r23, $r40, $r45, $r59;
        java.lang.Class r5;
        java.lang.reflect.Method r6, r15;
        int i0, i2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        byte $b1;
        org.apache.juli.logging.Log $r20, $r21, $r28, $r48, $r52, $r54, $r57;
        org.apache.tomcat.util.res.StringManager $r22, $r29, $r34, $r39, $r44, $r49, $r51, $r55, $r58;
        java.lang.Integer $r24, $r41;
        java.lang.IllegalStateException $r33, $r38, $r53;
        java.lang.IllegalArgumentException $r43;

        $r0 = "off";
        $r1 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLEngine>;
        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);
        if $z1 == 0 goto label0;

        return;

     label0:
        $z2 = <org.apache.catalina.core.AprLifecycleListener: boolean sslInitialized>;
        if $z2 == 0 goto label1;

        return;

     label1:
        <org.apache.catalina.core.AprLifecycleListener: boolean sslInitialized> = 1;
        r2 = "randSet";
        r3 = newarray (java.lang.Class)[1];
        r3[0] = class "java/lang/String";
        r4 = newarray (java.lang.Object)[1];
        $r9 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLRandomSeed>;
        r4[0] = $r9;
        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.tomcat.jni.SSL");
        r6 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r2, r3);
        virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r4);
        r11 = "initialize";
        $b1 = 0;
        $r13 = "on";
        $r7 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLEngine>;
        $z3 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);
        if $z3 == 0 goto label2;

        $r14 = null;
        goto label3;

     label2:
        $r14 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLEngine>;

     label3:
        r4[$b1] = $r14;
        r15 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r11, r3);
        virtualinvoke r15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r4);
        $r17 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode>;
        if $r17 == null goto label13;

        $r18 = "off";
        $r19 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode>;
        $z4 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r19);
        if $z4 != 0 goto label13;

        <org.apache.catalina.core.AprLifecycleListener: boolean fipsModeActive> = 0;
        i0 = staticinvoke <org.apache.tomcat.jni.SSL: int fipsModeGet()>();
        $r20 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r20.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label4;

        $r21 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r22 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r23 = newarray (java.lang.Object)[1];
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r23[0] = $r24;
        $r25 = virtualinvoke $r22.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.currentFIPSMode", $r23);
        interfaceinvoke $r21.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r25);

     label4:
        $r26 = "on";
        $r27 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode>;
        $z6 = virtualinvoke $r26.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r27);
        if $z6 == 0 goto label6;

        if i0 != 1 goto label5;

        $r28 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r29 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r30 = virtualinvoke $r29.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.skipFIPSInitialization");
        interfaceinvoke $r28.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r30);
        <org.apache.catalina.core.AprLifecycleListener: boolean fipsModeActive> = 1;
        z0 = 0;
        goto label11;

     label5:
        z0 = 1;
        goto label11;

     label6:
        $r31 = "require";
        $r32 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode>;
        $z7 = virtualinvoke $r31.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r32);
        if $z7 == 0 goto label8;

        if i0 != 1 goto label7;

        <org.apache.catalina.core.AprLifecycleListener: boolean fipsModeActive> = 1;
        z0 = 0;
        goto label11;

     label7:
        $r33 = new java.lang.IllegalStateException;
        $r34 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r35 = virtualinvoke $r34.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.requireNotInFIPSMode");
        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35);
        throw $r33;

     label8:
        $r36 = "enter";
        $r37 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode>;
        $z8 = virtualinvoke $r36.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r37);
        if $z8 == 0 goto label10;

        if i0 != 0 goto label9;

        z0 = 1;
        goto label11;

     label9:
        $r38 = new java.lang.IllegalStateException;
        $r39 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r40 = newarray (java.lang.Object)[1];
        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r40[0] = $r41;
        $r42 = virtualinvoke $r39.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.enterAlreadyInFIPSMode", $r40);
        specialinvoke $r38.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r42);
        throw $r38;

     label10:
        $r43 = new java.lang.IllegalArgumentException;
        $r44 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r45 = newarray (java.lang.Object)[1];
        $r46 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode>;
        $r45[0] = $r46;
        $r47 = virtualinvoke $r44.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.wrongFIPSMode", $r45);
        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r47);
        throw $r43;

     label11:
        if z0 == 0 goto label13;

        $r48 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r49 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r50 = virtualinvoke $r49.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.initializingFIPS");
        interfaceinvoke $r48.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r50);
        i2 = staticinvoke <org.apache.tomcat.jni.SSL: int fipsModeSet(int)>(1);
        if i2 == 1 goto label12;

        $r51 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        r8 = virtualinvoke $r51.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.initializeFIPSFailed");
        $r52 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        interfaceinvoke $r52.<org.apache.juli.logging.Log: void error(java.lang.Object)>(r8);
        $r53 = new java.lang.IllegalStateException;
        specialinvoke $r53.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r8);
        throw $r53;

     label12:
        <org.apache.catalina.core.AprLifecycleListener: boolean fipsModeActive> = 1;
        $r54 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r55 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r56 = virtualinvoke $r55.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.initializeFIPSSuccess");
        interfaceinvoke $r54.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r56);

     label13:
        $r57 = <org.apache.catalina.core.AprLifecycleListener: org.apache.juli.logging.Log log>;
        $r58 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r59 = newarray (java.lang.Object)[1];
        $r60 = staticinvoke <org.apache.tomcat.jni.SSL: java.lang.String versionString()>();
        $r59[0] = $r60;
        $r61 = virtualinvoke $r58.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("aprListener.initializedOpenSSL", $r59);
        interfaceinvoke $r57.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r61);
        <org.apache.catalina.core.AprLifecycleListener: boolean sslAvailable> = 1;
        return;
    }

    public java.lang.String getSSLEngine()
    {
        org.apache.catalina.core.AprLifecycleListener r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.AprLifecycleListener;
        $r1 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLEngine>;
        return $r1;
    }

    public void setSSLEngine(java.lang.String)
    {
        org.apache.catalina.core.AprLifecycleListener r0;
        java.lang.String r1, $r2, $r5;
        org.apache.tomcat.util.res.StringManager $r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.catalina.core.AprLifecycleListener;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLEngine>;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 != 0 goto label1;

        $z1 = <org.apache.catalina.core.AprLifecycleListener: boolean sslInitialized>;
        if $z1 == 0 goto label0;

        $r4 = new java.lang.IllegalStateException;
        $r3 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.tooLateForSSLEngine");
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);
        throw $r4;

     label0:
        <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLEngine> = r1;

     label1:
        return;
    }

    public java.lang.String getSSLRandomSeed()
    {
        org.apache.catalina.core.AprLifecycleListener r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.AprLifecycleListener;
        $r1 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLRandomSeed>;
        return $r1;
    }

    public void setSSLRandomSeed(java.lang.String)
    {
        org.apache.catalina.core.AprLifecycleListener r0;
        java.lang.String r1, $r2, $r5;
        org.apache.tomcat.util.res.StringManager $r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.catalina.core.AprLifecycleListener;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLRandomSeed>;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 != 0 goto label1;

        $z1 = <org.apache.catalina.core.AprLifecycleListener: boolean sslInitialized>;
        if $z1 == 0 goto label0;

        $r4 = new java.lang.IllegalStateException;
        $r3 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.tooLateForSSLRandomSeed");
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);
        throw $r4;

     label0:
        <org.apache.catalina.core.AprLifecycleListener: java.lang.String SSLRandomSeed> = r1;

     label1:
        return;
    }

    public java.lang.String getFIPSMode()
    {
        org.apache.catalina.core.AprLifecycleListener r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.AprLifecycleListener;
        $r1 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode>;
        return $r1;
    }

    public void setFIPSMode(java.lang.String)
    {
        org.apache.catalina.core.AprLifecycleListener r0;
        java.lang.String r1, $r2, $r5;
        org.apache.tomcat.util.res.StringManager $r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.catalina.core.AprLifecycleListener;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode>;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 != 0 goto label1;

        $z1 = <org.apache.catalina.core.AprLifecycleListener: boolean sslInitialized>;
        if $z1 == 0 goto label0;

        $r4 = new java.lang.IllegalStateException;
        $r3 = <org.apache.catalina.core.AprLifecycleListener: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("aprListener.tooLateForFIPSMode");
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);
        throw $r4;

     label0:
        <org.apache.catalina.core.AprLifecycleListener: java.lang.String FIPSMode> = r1;

     label1:
        return;
    }

    public boolean isFIPSModeActive()
    {
        org.apache.catalina.core.AprLifecycleListener r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.AprLifecycleListener;
        $z0 = <org.apache.catalina.core.AprLifecycleListener: boolean fipsModeActive>;
        return $z0;
    }
}
