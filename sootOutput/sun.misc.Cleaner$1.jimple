class sun.misc.Cleaner$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.Throwable val$x;
    final sun.misc.Cleaner this$0;

    void <init>(sun.misc.Cleaner, java.lang.Throwable)
    {
        sun.misc.Cleaner$1 r0;
        sun.misc.Cleaner r1;
        java.lang.Throwable r2;

        r0 := @this: sun.misc.Cleaner$1;
        r1 := @parameter0: sun.misc.Cleaner;
        r2 := @parameter1: java.lang.Throwable;
        r0.<sun.misc.Cleaner$1: sun.misc.Cleaner this$0> = r1;
        r0.<sun.misc.Cleaner$1: java.lang.Throwable val$x> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run()
    {
        sun.misc.Cleaner$1 r0;
        java.io.PrintStream $r1;
        java.lang.Error $r2;
        java.lang.Throwable $r3;

        r0 := @this: sun.misc.Cleaner$1;
        $r1 = <java.lang.System: java.io.PrintStream err>;
        if $r1 == null goto label0;

        $r2 = new java.lang.Error;
        $r3 = r0.<sun.misc.Cleaner$1: java.lang.Throwable val$x>;
        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>("Cleaner terminated abnormally", $r3);
        virtualinvoke $r2.<java.lang.Error: void printStackTrace()>();

     label0:
        staticinvoke <java.lang.System: void exit(int)>(1);
        return null;
    }

    public volatile java.lang.Object run()
    {
        sun.misc.Cleaner$1 r0;
        java.lang.Void $r1;

        r0 := @this: sun.misc.Cleaner$1;
        $r1 = virtualinvoke r0.<sun.misc.Cleaner$1: java.lang.Void run()>();
        return $r1;
    }
}
