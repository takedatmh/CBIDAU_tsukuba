class sun.util.PreHashedMap$1$1 extends java.lang.Object implements java.util.Iterator
{
    private int i;
    java.lang.Object[] a;
    java.lang.String cur;
    final sun.util.PreHashedMap$1 this$1;

    void <init>(sun.util.PreHashedMap$1)
    {
        sun.util.PreHashedMap$1$1 r0;
        sun.util.PreHashedMap$1 r1;

        r0 := @this: sun.util.PreHashedMap$1$1;
        r1 := @parameter0: sun.util.PreHashedMap$1;
        r0.<sun.util.PreHashedMap$1$1: sun.util.PreHashedMap$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.util.PreHashedMap$1$1: int i> = -1;
        r0.<sun.util.PreHashedMap$1$1: java.lang.Object[] a> = null;
        r0.<sun.util.PreHashedMap$1$1: java.lang.String cur> = null;
        return;
    }

    private boolean findNext()
    {
        sun.util.PreHashedMap$1$1 r0;
        java.lang.Object[] $r1, $r2, $r3, $r5, $r6, $r7, $r15, $r22, $r26, $r28, $r29, $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.Object $r4, $r8, $r16, $r23, $r27, $r31;
        java.lang.String $r9, $r32;
        sun.util.PreHashedMap$1 $r11, $r13, $r18, $r20, $r24;
        sun.util.PreHashedMap $r12, $r14, $r19, $r21, $r25;

        r0 := @this: sun.util.PreHashedMap$1$1;
        $r1 = r0.<sun.util.PreHashedMap$1$1: java.lang.Object[] a>;
        if $r1 == null goto label1;

        $r2 = r0.<sun.util.PreHashedMap$1$1: java.lang.Object[] a>;
        $i0 = lengthof $r2;
        if $i0 != 3 goto label0;

        $r3 = r0.<sun.util.PreHashedMap$1$1: java.lang.Object[] a>;
        $r4 = $r3[2];
        $r5 = (java.lang.Object[]) $r4;
        $r6 = (java.lang.Object[]) $r5;
        r0.<sun.util.PreHashedMap$1$1: java.lang.Object[] a> = $r6;
        $r7 = r0.<sun.util.PreHashedMap$1$1: java.lang.Object[] a>;
        $r8 = $r7[0];
        $r9 = (java.lang.String) $r8;
        r0.<sun.util.PreHashedMap$1$1: java.lang.String cur> = $r9;
        return 1;

     label0:
        $i1 = r0.<sun.util.PreHashedMap$1$1: int i>;
        $i2 = $i1 + 1;
        r0.<sun.util.PreHashedMap$1$1: int i> = $i2;
        r0.<sun.util.PreHashedMap$1$1: java.lang.Object[] a> = null;

     label1:
        r0.<sun.util.PreHashedMap$1$1: java.lang.String cur> = null;
        $i3 = r0.<sun.util.PreHashedMap$1$1: int i>;
        $r11 = r0.<sun.util.PreHashedMap$1$1: sun.util.PreHashedMap$1 this$1>;
        $r12 = $r11.<sun.util.PreHashedMap$1: sun.util.PreHashedMap this$0>;
        $i4 = staticinvoke <sun.util.PreHashedMap: int access$100(sun.util.PreHashedMap)>($r12);
        if $i3 < $i4 goto label2;

        return 0;

     label2:
        $i5 = r0.<sun.util.PreHashedMap$1$1: int i>;
        if $i5 < 0 goto label3;

        $r13 = r0.<sun.util.PreHashedMap$1$1: sun.util.PreHashedMap$1 this$1>;
        $r14 = $r13.<sun.util.PreHashedMap$1: sun.util.PreHashedMap this$0>;
        $r15 = staticinvoke <sun.util.PreHashedMap: java.lang.Object[] access$200(sun.util.PreHashedMap)>($r14);
        $i6 = r0.<sun.util.PreHashedMap$1$1: int i>;
        $r16 = $r15[$i6];
        if $r16 != null goto label5;

     label3:
        $i7 = r0.<sun.util.PreHashedMap$1$1: int i>;
        $i8 = $i7 + 1;
        r0.<sun.util.PreHashedMap$1$1: int i> = $i8;
        $r18 = r0.<sun.util.PreHashedMap$1$1: sun.util.PreHashedMap$1 this$1>;
        $r19 = $r18.<sun.util.PreHashedMap$1: sun.util.PreHashedMap this$0>;
        $i9 = staticinvoke <sun.util.PreHashedMap: int access$100(sun.util.PreHashedMap)>($r19);
        if $i8 < $i9 goto label4;

        return 0;

     label4:
        $r20 = r0.<sun.util.PreHashedMap$1$1: sun.util.PreHashedMap$1 this$1>;
        $r21 = $r20.<sun.util.PreHashedMap$1: sun.util.PreHashedMap this$0>;
        $r22 = staticinvoke <sun.util.PreHashedMap: java.lang.Object[] access$200(sun.util.PreHashedMap)>($r21);
        $i10 = r0.<sun.util.PreHashedMap$1$1: int i>;
        $r23 = $r22[$i10];
        if $r23 == null goto label3;

     label5:
        $r24 = r0.<sun.util.PreHashedMap$1$1: sun.util.PreHashedMap$1 this$1>;
        $r25 = $r24.<sun.util.PreHashedMap$1: sun.util.PreHashedMap this$0>;
        $r26 = staticinvoke <sun.util.PreHashedMap: java.lang.Object[] access$200(sun.util.PreHashedMap)>($r25);
        $i11 = r0.<sun.util.PreHashedMap$1$1: int i>;
        $r27 = $r26[$i11];
        $r28 = (java.lang.Object[]) $r27;
        $r29 = (java.lang.Object[]) $r28;
        r0.<sun.util.PreHashedMap$1$1: java.lang.Object[] a> = $r29;
        $r30 = r0.<sun.util.PreHashedMap$1$1: java.lang.Object[] a>;
        $r31 = $r30[0];
        $r32 = (java.lang.String) $r31;
        r0.<sun.util.PreHashedMap$1$1: java.lang.String cur> = $r32;
        return 1;
    }

    public boolean hasNext()
    {
        sun.util.PreHashedMap$1$1 r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: sun.util.PreHashedMap$1$1;
        $r1 = r0.<sun.util.PreHashedMap$1$1: java.lang.String cur>;
        if $r1 == null goto label0;

        return 1;

     label0:
        $z0 = specialinvoke r0.<sun.util.PreHashedMap$1$1: boolean findNext()>();
        return $z0;
    }

    public java.lang.String next()
    {
        sun.util.PreHashedMap$1$1 r0;
        java.lang.String r1, $r2;
        boolean $z0;
        java.util.NoSuchElementException $r3;

        r0 := @this: sun.util.PreHashedMap$1$1;
        $r2 = r0.<sun.util.PreHashedMap$1$1: java.lang.String cur>;
        if $r2 != null goto label0;

        $z0 = specialinvoke r0.<sun.util.PreHashedMap$1$1: boolean findNext()>();
        if $z0 != 0 goto label0;

        $r3 = new java.util.NoSuchElementException;
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();
        throw $r3;

     label0:
        r1 = r0.<sun.util.PreHashedMap$1$1: java.lang.String cur>;
        r0.<sun.util.PreHashedMap$1$1: java.lang.String cur> = null;
        return r1;
    }

    public void remove()
    {
        sun.util.PreHashedMap$1$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: sun.util.PreHashedMap$1$1;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r1;
    }

    public volatile java.lang.Object next()
    {
        sun.util.PreHashedMap$1$1 r0;
        java.lang.String $r1;

        r0 := @this: sun.util.PreHashedMap$1$1;
        $r1 = virtualinvoke r0.<sun.util.PreHashedMap$1$1: java.lang.String next()>();
        return $r1;
    }
}
