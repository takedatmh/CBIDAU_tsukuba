public class java.io.ByteArrayInputStream extends java.io.InputStream
{
    protected byte[] buf;
    protected int pos;
    protected int mark;
    protected int count;

    public void <init>(byte[])
    {
        java.io.ByteArrayInputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.ByteArrayInputStream;
        r1 := @parameter0: byte[];
        specialinvoke r0.<java.io.InputStream: void <init>()>();
        r0.<java.io.ByteArrayInputStream: int mark> = 0;
        r0.<java.io.ByteArrayInputStream: byte[] buf> = r1;
        r0.<java.io.ByteArrayInputStream: int pos> = 0;
        $i0 = lengthof r1;
        r0.<java.io.ByteArrayInputStream: int count> = $i0;
        return;
    }

    public void <init>(byte[], int, int)
    {
        java.io.ByteArrayInputStream r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: java.io.ByteArrayInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<java.io.InputStream: void <init>()>();
        r0.<java.io.ByteArrayInputStream: int mark> = 0;
        r0.<java.io.ByteArrayInputStream: byte[] buf> = r1;
        r0.<java.io.ByteArrayInputStream: int pos> = i0;
        $i2 = i0 + i1;
        $i3 = lengthof r1;
        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);
        r0.<java.io.ByteArrayInputStream: int count> = $i4;
        r0.<java.io.ByteArrayInputStream: int mark> = i0;
        return;
    }

    public synchronized int read()
    {
        java.io.ByteArrayInputStream r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;
        short $s5;

        r0 := @this: java.io.ByteArrayInputStream;
        $i1 = r0.<java.io.ByteArrayInputStream: int pos>;
        $i2 = r0.<java.io.ByteArrayInputStream: int count>;
        if $i1 >= $i2 goto label0;

        $r1 = r0.<java.io.ByteArrayInputStream: byte[] buf>;
        $i0 = r0.<java.io.ByteArrayInputStream: int pos>;
        $i3 = $i0 + 1;
        r0.<java.io.ByteArrayInputStream: int pos> = $i3;
        $b4 = $r1[$i0];
        $s5 = $b4 & 255;
        goto label1;

     label0:
        $s5 = -1;

     label1:
        return $s5;
    }

    public synchronized int read(byte[], int, int)
    {
        java.io.ByteArrayInputStream r0;
        byte[] r1, $r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.NullPointerException $r2;
        java.lang.IndexOutOfBoundsException $r3;

        r0 := @this: java.io.ByteArrayInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        if i0 < 0 goto label1;

        if i1 < 0 goto label1;

        $i3 = lengthof r1;
        $i4 = $i3 - i0;
        if i1 <= $i4 goto label2;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();
        throw $r3;

     label2:
        $i5 = r0.<java.io.ByteArrayInputStream: int pos>;
        $i6 = r0.<java.io.ByteArrayInputStream: int count>;
        if $i5 < $i6 goto label3;

        return -1;

     label3:
        $i7 = r0.<java.io.ByteArrayInputStream: int count>;
        $i8 = r0.<java.io.ByteArrayInputStream: int pos>;
        i2 = $i7 - $i8;
        if i1 <= i2 goto label4;

        i1 = i2;

     label4:
        if i1 > 0 goto label5;

        return 0;

     label5:
        $r4 = r0.<java.io.ByteArrayInputStream: byte[] buf>;
        $i9 = r0.<java.io.ByteArrayInputStream: int pos>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i9, r1, i0, i1);
        $i10 = r0.<java.io.ByteArrayInputStream: int pos>;
        $i11 = $i10 + i1;
        r0.<java.io.ByteArrayInputStream: int pos> = $i11;
        return i1;
    }

    public synchronized long skip(long)
    {
        java.io.ByteArrayInputStream r0;
        long l0, l1, $l7, $l9, $l10;
        int $i2, $i3, $i4, $i8, $i11;
        byte $b5, $b6;

        r0 := @this: java.io.ByteArrayInputStream;
        l0 := @parameter0: long;
        $i2 = r0.<java.io.ByteArrayInputStream: int count>;
        $i3 = r0.<java.io.ByteArrayInputStream: int pos>;
        $i4 = $i2 - $i3;
        l1 = (long) $i4;
        $b5 = l0 cmp l1;
        if $b5 >= 0 goto label2;

        $b6 = l0 cmp 0L;
        if $b6 >= 0 goto label0;

        $l7 = 0L;
        goto label1;

     label0:
        $l7 = l0;

     label1:
        l1 = $l7;

     label2:
        $i8 = r0.<java.io.ByteArrayInputStream: int pos>;
        $l9 = (long) $i8;
        $l10 = $l9 + l1;
        $i11 = (int) $l10;
        r0.<java.io.ByteArrayInputStream: int pos> = $i11;
        return l1;
    }

    public synchronized int available()
    {
        java.io.ByteArrayInputStream r0;
        int $i0, $i1, $i2;

        r0 := @this: java.io.ByteArrayInputStream;
        $i0 = r0.<java.io.ByteArrayInputStream: int count>;
        $i1 = r0.<java.io.ByteArrayInputStream: int pos>;
        $i2 = $i0 - $i1;
        return $i2;
    }

    public boolean markSupported()
    {
        java.io.ByteArrayInputStream r0;

        r0 := @this: java.io.ByteArrayInputStream;
        return 1;
    }

    public void mark(int)
    {
        java.io.ByteArrayInputStream r0;
        int i0, $i1;

        r0 := @this: java.io.ByteArrayInputStream;
        i0 := @parameter0: int;
        $i1 = r0.<java.io.ByteArrayInputStream: int pos>;
        r0.<java.io.ByteArrayInputStream: int mark> = $i1;
        return;
    }

    public synchronized void reset()
    {
        java.io.ByteArrayInputStream r0;
        int $i0;

        r0 := @this: java.io.ByteArrayInputStream;
        $i0 = r0.<java.io.ByteArrayInputStream: int mark>;
        r0.<java.io.ByteArrayInputStream: int pos> = $i0;
        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.ByteArrayInputStream r0;

        r0 := @this: java.io.ByteArrayInputStream;
        return;
    }
}
