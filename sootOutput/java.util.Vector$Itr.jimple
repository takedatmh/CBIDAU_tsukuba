class java.util.Vector$Itr extends java.lang.Object implements java.util.Iterator
{
    int cursor;
    int lastRet;
    int expectedModCount;
    final java.util.Vector this$0;

    private void <init>(java.util.Vector)
    {
        java.util.Vector$Itr r0;
        java.util.Vector r1, $r2;
        int $i0;

        r0 := @this: java.util.Vector$Itr;
        r1 := @parameter0: java.util.Vector;
        r0.<java.util.Vector$Itr: java.util.Vector this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.Vector$Itr: int lastRet> = -1;
        $r2 = r0.<java.util.Vector$Itr: java.util.Vector this$0>;
        $i0 = $r2.<java.util.Vector: int modCount>;
        r0.<java.util.Vector$Itr: int expectedModCount> = $i0;
        return;
    }

    public boolean hasNext()
    {
        java.util.Vector$Itr r0;
        int $i0, $i1;
        java.util.Vector $r1;
        boolean $z0;

        r0 := @this: java.util.Vector$Itr;
        $i0 = r0.<java.util.Vector$Itr: int cursor>;
        $r1 = r0.<java.util.Vector$Itr: java.util.Vector this$0>;
        $i1 = $r1.<java.util.Vector: int elementCount>;
        if $i0 == $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.Vector$Itr r0;
        java.util.Vector r1, $r3, $r4, $r6;
        int i0, $i2, $i3;
        java.lang.Throwable r2, $r8;
        java.util.NoSuchElementException $r5;
        java.lang.Object $r7;

        r0 := @this: java.util.Vector$Itr;
        $r3 = r0.<java.util.Vector$Itr: java.util.Vector this$0>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        virtualinvoke r0.<java.util.Vector$Itr: void checkForComodification()>();
        i0 = r0.<java.util.Vector$Itr: int cursor>;
        $r4 = r0.<java.util.Vector$Itr: java.util.Vector this$0>;
        $i2 = $r4.<java.util.Vector: int elementCount>;
        if i0 < $i2 goto label1;

        $r5 = new java.util.NoSuchElementException;
        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();
        throw $r5;

     label1:
        $i3 = i0 + 1;
        r0.<java.util.Vector$Itr: int cursor> = $i3;
        $r6 = r0.<java.util.Vector$Itr: java.util.Vector this$0>;
        r0.<java.util.Vector$Itr: int lastRet> = i0;
        $r7 = virtualinvoke $r6.<java.util.Vector: java.lang.Object elementData(int)>(i0);
        exitmonitor r1;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

     label4:
        r2 = $r8;
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void remove()
    {
        java.util.Vector$Itr r0;
        java.util.Vector r1, $r4, $r5, $r7;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r3;

        r0 := @this: java.util.Vector$Itr;
        $i0 = r0.<java.util.Vector$Itr: int lastRet>;
        if $i0 != -1 goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();
        throw $r3;

     label0:
        $r4 = r0.<java.util.Vector$Itr: java.util.Vector this$0>;
        r1 = $r4;
        entermonitor $r4;

     label1:
        virtualinvoke r0.<java.util.Vector$Itr: void checkForComodification()>();
        $r5 = r0.<java.util.Vector$Itr: java.util.Vector this$0>;
        $i1 = r0.<java.util.Vector$Itr: int lastRet>;
        virtualinvoke $r5.<java.util.Vector: java.lang.Object remove(int)>($i1);
        $r7 = r0.<java.util.Vector$Itr: java.util.Vector this$0>;
        $i2 = $r7.<java.util.Vector: int modCount>;
        r0.<java.util.Vector$Itr: int expectedModCount> = $i2;
        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r8 := @caughtexception;

     label4:
        r2 = $r8;
        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $i3 = r0.<java.util.Vector$Itr: int lastRet>;
        r0.<java.util.Vector$Itr: int cursor> = $i3;
        r0.<java.util.Vector$Itr: int lastRet> = -1;
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    final void checkForComodification()
    {
        java.util.Vector$Itr r0;
        java.util.Vector $r1;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: java.util.Vector$Itr;
        $r1 = r0.<java.util.Vector$Itr: java.util.Vector this$0>;
        $i0 = $r1.<java.util.Vector: int modCount>;
        $i1 = r0.<java.util.Vector$Itr: int expectedModCount>;
        if $i0 == $i1 goto label0;

        $r2 = new java.util.ConcurrentModificationException;
        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();
        throw $r2;

     label0:
        return;
    }

    void <init>(java.util.Vector, java.util.Vector$1)
    {
        java.util.Vector$Itr r0;
        java.util.Vector r1;
        java.util.Vector$1 r2;

        r0 := @this: java.util.Vector$Itr;
        r1 := @parameter0: java.util.Vector;
        r2 := @parameter1: java.util.Vector$1;
        specialinvoke r0.<java.util.Vector$Itr: void <init>(java.util.Vector)>(r1);
        return;
    }
}
