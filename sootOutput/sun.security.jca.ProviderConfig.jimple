final class sun.security.jca.ProviderConfig extends java.lang.Object
{
    private static final sun.security.util.Debug debug;
    private static final java.lang.String P11_SOL_NAME;
    private static final java.lang.String P11_SOL_ARG;
    private static final int MAX_LOAD_TRIES;
    private static final java.lang.Class[] CL_STRING;
    private final java.lang.String className;
    private final java.lang.String argument;
    private int tries;
    private volatile java.security.Provider provider;
    private boolean isLoading;

    void <init>(java.lang.String, java.lang.String)
    {
        sun.security.jca.ProviderConfig r0;
        java.lang.String r1, r2, $r3;
        boolean $z0, $z1;

        r0 := @this: sun.security.jca.ProviderConfig;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("sun.security.pkcs11.SunPKCS11");
        if $z0 == 0 goto label0;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("${java.home}/lib/security/sunpkcs11-solaris.cfg");
        if $z1 == 0 goto label0;

        specialinvoke r0.<sun.security.jca.ProviderConfig: void checkSunPKCS11Solaris()>();

     label0:
        r0.<sun.security.jca.ProviderConfig: java.lang.String className> = r1;
        $r3 = staticinvoke <sun.security.jca.ProviderConfig: java.lang.String expand(java.lang.String)>(r2);
        r0.<sun.security.jca.ProviderConfig: java.lang.String argument> = $r3;
        return;
    }

    void <init>(java.lang.String)
    {
        sun.security.jca.ProviderConfig r0;
        java.lang.String r1;

        r0 := @this: sun.security.jca.ProviderConfig;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<sun.security.jca.ProviderConfig: void <init>(java.lang.String,java.lang.String)>(r1, "");
        return;
    }

    void <init>(java.security.Provider)
    {
        sun.security.jca.ProviderConfig r0;
        java.security.Provider r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: sun.security.jca.ProviderConfig;
        r1 := @parameter0: java.security.Provider;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        r0.<sun.security.jca.ProviderConfig: java.lang.String className> = $r3;
        r0.<sun.security.jca.ProviderConfig: java.lang.String argument> = "";
        r0.<sun.security.jca.ProviderConfig: java.security.Provider provider> = r1;
        return;
    }

    private void checkSunPKCS11Solaris()
    {
        sun.security.jca.ProviderConfig r0;
        sun.security.jca.ProviderConfig$1 $r1;
        java.lang.Boolean r2, $r4;
        java.lang.Object $r3;

        r0 := @this: sun.security.jca.ProviderConfig;
        $r1 = new sun.security.jca.ProviderConfig$1;
        specialinvoke $r1.<sun.security.jca.ProviderConfig$1: void <init>(sun.security.jca.ProviderConfig)>(r0);
        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        r2 = (java.lang.Boolean) $r3;
        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;
        if r2 != $r4 goto label0;

        r0.<sun.security.jca.ProviderConfig: int tries> = 30;

     label0:
        return;
    }

    private boolean hasArgument()
    {
        sun.security.jca.ProviderConfig r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        r0 := @this: sun.security.jca.ProviderConfig;
        $r1 = r0.<sun.security.jca.ProviderConfig: java.lang.String argument>;
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();
        if $i0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private boolean shouldLoad()
    {
        sun.security.jca.ProviderConfig r0;
        int $i0;
        boolean $z0;

        r0 := @this: sun.security.jca.ProviderConfig;
        $i0 = r0.<sun.security.jca.ProviderConfig: int tries>;
        if $i0 >= 30 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private void disableLoad()
    {
        sun.security.jca.ProviderConfig r0;

        r0 := @this: sun.security.jca.ProviderConfig;
        r0.<sun.security.jca.ProviderConfig: int tries> = 30;
        return;
    }

    boolean isLoaded()
    {
        sun.security.jca.ProviderConfig r0;
        java.security.Provider $r1;
        boolean $z0;

        r0 := @this: sun.security.jca.ProviderConfig;
        $r1 = r0.<sun.security.jca.ProviderConfig: java.security.Provider provider>;
        if $r1 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.jca.ProviderConfig r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3, $r4, $r5, $r6;

        r0 := @this: sun.security.jca.ProviderConfig;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.security.jca.ProviderConfig;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (sun.security.jca.ProviderConfig) r1;
        $r3 = r0.<sun.security.jca.ProviderConfig: java.lang.String className>;
        $r4 = r2.<sun.security.jca.ProviderConfig: java.lang.String className>;
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z1 == 0 goto label2;

        $r5 = r0.<sun.security.jca.ProviderConfig: java.lang.String argument>;
        $r6 = r2.<sun.security.jca.ProviderConfig: java.lang.String argument>;
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z2 == 0 goto label2;

        $z3 = 1;
        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public int hashCode()
    {
        sun.security.jca.ProviderConfig r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: sun.security.jca.ProviderConfig;
        $r1 = r0.<sun.security.jca.ProviderConfig: java.lang.String className>;
        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        $r2 = r0.<sun.security.jca.ProviderConfig: java.lang.String argument>;
        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();
        $i2 = $i0 + $i1;
        return $i2;
    }

    public java.lang.String toString()
    {
        sun.security.jca.ProviderConfig r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8, $r9;

        r0 := @this: sun.security.jca.ProviderConfig;
        $z0 = specialinvoke r0.<sun.security.jca.ProviderConfig: boolean hasArgument()>();
        if $z0 == 0 goto label0;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = r0.<sun.security.jca.ProviderConfig: java.lang.String className>;
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\'");
        $r5 = r0.<sun.security.jca.ProviderConfig: java.lang.String argument>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r8;

     label0:
        $r9 = r0.<sun.security.jca.ProviderConfig: java.lang.String className>;
        return $r9;
    }

    synchronized java.security.Provider getProvider()
    {
        sun.security.jca.ProviderConfig r0;
        java.security.Provider r1, r11;
        java.lang.StringBuilder $r2, $r6, $r7;
        java.lang.Throwable r3, $r12;
        boolean $z0, $z1;
        sun.security.util.Debug $r4, $r5;
        java.lang.String $r8;
        java.lang.Exception $r9;
        int $i0, $i1;

        r0 := @this: sun.security.jca.ProviderConfig;
        r1 = r0.<sun.security.jca.ProviderConfig: java.security.Provider provider>;
        if r1 == null goto label0;

        return r1;

     label0:
        $z0 = specialinvoke r0.<sun.security.jca.ProviderConfig: boolean shouldLoad()>();
        if $z0 != 0 goto label1;

        return null;

     label1:
        $z1 = r0.<sun.security.jca.ProviderConfig: boolean isLoading>;
        if $z1 == 0 goto label3;

        $r4 = <sun.security.jca.ProviderConfig: sun.security.util.Debug debug>;
        if $r4 == null goto label2;

        $r5 = <sun.security.jca.ProviderConfig: sun.security.util.Debug debug>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recursion loading provider: ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<sun.security.util.Debug: void println(java.lang.String)>($r8);
        $r9 = new java.lang.Exception;
        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>("Call trace");
        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label2:
        return null;

     label3:
        r0.<sun.security.jca.ProviderConfig: boolean isLoading> = 1;
        $i0 = r0.<sun.security.jca.ProviderConfig: int tries>;
        $i1 = $i0 + 1;
        r0.<sun.security.jca.ProviderConfig: int tries> = $i1;
        r11 = specialinvoke r0.<sun.security.jca.ProviderConfig: java.security.Provider doLoadProvider()>();

     label4:
        r0.<sun.security.jca.ProviderConfig: boolean isLoading> = 0;
        goto label8;

     label5:
        $r12 := @caughtexception;

     label6:
        r3 = $r12;

     label7:
        r0.<sun.security.jca.ProviderConfig: boolean isLoading> = 0;
        throw r3;

     label8:
        r0.<sun.security.jca.ProviderConfig: java.security.Provider provider> = r11;
        return r11;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private java.security.Provider doLoadProvider()
    {
        sun.security.jca.ProviderConfig r0;
        sun.security.jca.ProviderConfig$2 $r1;
        java.lang.Object $r2;
        java.security.Provider $r3;

        r0 := @this: sun.security.jca.ProviderConfig;
        $r1 = new sun.security.jca.ProviderConfig$2;
        specialinvoke $r1.<sun.security.jca.ProviderConfig$2: void <init>(sun.security.jca.ProviderConfig)>(r0);
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        $r3 = (java.security.Provider) $r2;
        return $r3;
    }

    private static java.lang.String expand(java.lang.String)
    {
        java.lang.String r0, $r3;
        boolean $z0;
        sun.security.jca.ProviderConfig$3 $r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("${");
        if $z0 != 0 goto label0;

        return r0;

     label0:
        $r1 = new sun.security.jca.ProviderConfig$3;
        specialinvoke $r1.<sun.security.jca.ProviderConfig$3: void <init>(java.lang.String)>(r0);
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        $r3 = (java.lang.String) $r2;
        return $r3;
    }

    static sun.security.util.Debug access$000()
    {
        sun.security.util.Debug $r0;

        $r0 = <sun.security.jca.ProviderConfig: sun.security.util.Debug debug>;
        return $r0;
    }

    static java.lang.String access$100(sun.security.jca.ProviderConfig)
    {
        sun.security.jca.ProviderConfig r0;
        java.lang.String $r1;

        r0 := @parameter0: sun.security.jca.ProviderConfig;
        $r1 = r0.<sun.security.jca.ProviderConfig: java.lang.String className>;
        return $r1;
    }

    static boolean access$200(sun.security.jca.ProviderConfig)
    {
        sun.security.jca.ProviderConfig r0;
        boolean $z0;

        r0 := @parameter0: sun.security.jca.ProviderConfig;
        $z0 = specialinvoke r0.<sun.security.jca.ProviderConfig: boolean hasArgument()>();
        return $z0;
    }

    static java.lang.Class[] access$300()
    {
        java.lang.Class[] $r0;

        $r0 = <sun.security.jca.ProviderConfig: java.lang.Class[] CL_STRING>;
        return $r0;
    }

    static java.lang.String access$400(sun.security.jca.ProviderConfig)
    {
        sun.security.jca.ProviderConfig r0;
        java.lang.String $r1;

        r0 := @parameter0: sun.security.jca.ProviderConfig;
        $r1 = r0.<sun.security.jca.ProviderConfig: java.lang.String argument>;
        return $r1;
    }

    static void access$500(sun.security.jca.ProviderConfig)
    {
        sun.security.jca.ProviderConfig r0;

        r0 := @parameter0: sun.security.jca.ProviderConfig;
        specialinvoke r0.<sun.security.jca.ProviderConfig: void disableLoad()>();
        return;
    }

    static void <clinit>()
    {
        sun.security.util.Debug $r0;
        java.lang.Class[] $r1;

        $r0 = staticinvoke <sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String,java.lang.String)>("jca", "ProviderConfig");
        <sun.security.jca.ProviderConfig: sun.security.util.Debug debug> = $r0;
        $r1 = newarray (java.lang.Class)[1];
        $r1[0] = class "java/lang/String";
        <sun.security.jca.ProviderConfig: java.lang.Class[] CL_STRING> = $r1;
        return;
    }
}
