public class java.util.ResourceBundle$Control extends java.lang.Object
{
    public static final java.util.List FORMAT_DEFAULT;
    public static final java.util.List FORMAT_CLASS;
    public static final java.util.List FORMAT_PROPERTIES;
    public static final long TTL_DONT_CACHE;
    public static final long TTL_NO_EXPIRATION_CONTROL;
    private static final java.util.ResourceBundle$Control INSTANCE;
    private static final java.util.ResourceBundle$Control$CandidateListCache CANDIDATES_CACHE;

    protected void <init>()
    {
        java.util.ResourceBundle$Control r0;

        r0 := @this: java.util.ResourceBundle$Control;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static final java.util.ResourceBundle$Control getControl(java.util.List)
    {
        java.util.List r0, $r1, $r3, $r5;
        boolean $z0, $z1, $z2;
        java.util.ResourceBundle$Control $r2, $r4, $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @parameter0: java.util.List;
        $r1 = <java.util.ResourceBundle$Control: java.util.List FORMAT_PROPERTIES>;
        $z0 = interfaceinvoke r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 == 0 goto label0;

        $r2 = staticinvoke <java.util.ResourceBundle$SingleFormatControl: java.util.ResourceBundle$Control access$800()>();
        return $r2;

     label0:
        $r3 = <java.util.ResourceBundle$Control: java.util.List FORMAT_CLASS>;
        $z1 = interfaceinvoke r0.<java.util.List: boolean equals(java.lang.Object)>($r3);
        if $z1 == 0 goto label1;

        $r4 = staticinvoke <java.util.ResourceBundle$SingleFormatControl: java.util.ResourceBundle$Control access$900()>();
        return $r4;

     label1:
        $r5 = <java.util.ResourceBundle$Control: java.util.List FORMAT_DEFAULT>;
        $z2 = interfaceinvoke r0.<java.util.List: boolean equals(java.lang.Object)>($r5);
        if $z2 == 0 goto label2;

        $r6 = <java.util.ResourceBundle$Control: java.util.ResourceBundle$Control INSTANCE>;
        return $r6;

     label2:
        $r7 = new java.lang.IllegalArgumentException;
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r7;
    }

    public static final java.util.ResourceBundle$Control getNoFallbackControl(java.util.List)
    {
        java.util.List r0, $r1, $r3, $r5;
        boolean $z0, $z1, $z2;
        java.util.ResourceBundle$Control $r2, $r4, $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @parameter0: java.util.List;
        $r1 = <java.util.ResourceBundle$Control: java.util.List FORMAT_DEFAULT>;
        $z0 = interfaceinvoke r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 == 0 goto label0;

        $r2 = staticinvoke <java.util.ResourceBundle$NoFallbackControl: java.util.ResourceBundle$Control access$1000()>();
        return $r2;

     label0:
        $r3 = <java.util.ResourceBundle$Control: java.util.List FORMAT_PROPERTIES>;
        $z1 = interfaceinvoke r0.<java.util.List: boolean equals(java.lang.Object)>($r3);
        if $z1 == 0 goto label1;

        $r4 = staticinvoke <java.util.ResourceBundle$NoFallbackControl: java.util.ResourceBundle$Control access$1100()>();
        return $r4;

     label1:
        $r5 = <java.util.ResourceBundle$Control: java.util.List FORMAT_CLASS>;
        $z2 = interfaceinvoke r0.<java.util.List: boolean equals(java.lang.Object)>($r5);
        if $z2 == 0 goto label2;

        $r6 = staticinvoke <java.util.ResourceBundle$NoFallbackControl: java.util.ResourceBundle$Control access$1200()>();
        return $r6;

     label2:
        $r7 = new java.lang.IllegalArgumentException;
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r7;
    }

    public java.util.List getFormats(java.lang.String)
    {
        java.util.ResourceBundle$Control r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;
        java.util.List $r3;

        r0 := @this: java.util.ResourceBundle$Control;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $r3 = <java.util.ResourceBundle$Control: java.util.List FORMAT_DEFAULT>;
        return $r3;
    }

    public java.util.List getCandidateLocales(java.lang.String, java.util.Locale)
    {
        java.util.ResourceBundle$Control r0;
        java.lang.String r1;
        java.util.Locale r2;
        java.util.ResourceBundle$Control$CandidateListCache $r3;
        java.lang.NullPointerException $r4;
        java.util.ArrayList $r5;
        sun.util.locale.BaseLocale $r6;
        java.lang.Object $r7;
        java.util.Collection $r8;

        r0 := @this: java.util.ResourceBundle$Control;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Locale;
        if r1 != null goto label0;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();
        throw $r4;

     label0:
        $r5 = new java.util.ArrayList;
        $r3 = <java.util.ResourceBundle$Control: java.util.ResourceBundle$Control$CandidateListCache CANDIDATES_CACHE>;
        $r6 = virtualinvoke r2.<java.util.Locale: sun.util.locale.BaseLocale getBaseLocale()>();
        $r7 = virtualinvoke $r3.<java.util.ResourceBundle$Control$CandidateListCache: java.lang.Object get(java.lang.Object)>($r6);
        $r8 = (java.util.Collection) $r7;
        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);
        return $r5;
    }

    public java.util.Locale getFallbackLocale(java.lang.String, java.util.Locale)
    {
        java.util.ResourceBundle$Control r0;
        java.lang.String r1;
        java.util.Locale r2, r3, $r5;
        java.lang.NullPointerException $r4;
        boolean $z0;

        r0 := @this: java.util.ResourceBundle$Control;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Locale;
        if r1 != null goto label0;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();
        throw $r4;

     label0:
        r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        $z0 = virtualinvoke r2.<java.util.Locale: boolean equals(java.lang.Object)>(r3);
        if $z0 == 0 goto label1;

        $r5 = null;
        goto label2;

     label1:
        $r5 = r3;

     label2:
        return $r5;
    }

    public java.util.ResourceBundle newBundle(java.lang.String, java.util.Locale, java.lang.String, java.lang.ClassLoader, boolean) throws java.lang.IllegalAccessException, java.lang.InstantiationException, java.io.IOException
    {
        java.util.ResourceBundle$Control r0;
        java.lang.String r1, r3, r5, $r15, $r18, r21, $r34;
        java.util.Locale r2;
        java.lang.ClassLoader r4, r8;
        boolean z0, z1, $z2, $z3, $z4;
        java.util.ResourceBundle r6;
        java.lang.Class r7, $r11;
        null_type n0;
        java.security.PrivilegedActionException r9, $r25;
        java.lang.Throwable r10, $r29;
        java.lang.Object $r12, $r23;
        java.lang.ClassCastException $r13;
        java.lang.StringBuilder $r14, $r16, $r17, $r31, $r32, $r33;
        java.lang.ClassNotFoundException $r19, r20;
        java.util.ResourceBundle$Control$1 $r22;
        java.io.InputStream r24;
        java.lang.Exception $r26;
        java.io.IOException $r27;
        java.util.PropertyResourceBundle $r28;
        java.lang.IllegalArgumentException $r30;

        r0 := @this: java.util.ResourceBundle$Control;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.ClassLoader;
        z0 := @parameter4: boolean;
        r5 = virtualinvoke r0.<java.util.ResourceBundle$Control: java.lang.String toBundleName(java.lang.String,java.util.Locale)>(r1, r2);
        r6 = null;
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.class");
        if $z2 == 0 goto label4;

     label0:
        r7 = virtualinvoke r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r5);
        $r11 = class "java/util/ResourceBundle";
        $z3 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r7);
        if $z3 == 0 goto label1;

        $r12 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>();
        r6 = (java.util.ResourceBundle) $r12;
        goto label2;

     label1:
        $r13 = new java.lang.ClassCastException;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be cast to ResourceBundle");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r13.<java.lang.ClassCastException: void <init>(java.lang.String)>($r18);
        throw $r13;

     label2:
        goto label17;

     label3:
        $r19 := @caughtexception;
        r20 = $r19;
        goto label17;

     label4:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.properties");
        if $z4 == 0 goto label16;

        r21 = specialinvoke r0.<java.util.ResourceBundle$Control: java.lang.String toResourceName0(java.lang.String,java.lang.String)>(r5, "properties");
        if r21 != null goto label5;

        return r6;

     label5:
        r8 = r4;
        z1 = z0;
        n0 = null;

     label6:
        $r22 = new java.util.ResourceBundle$Control$1;
        specialinvoke $r22.<java.util.ResourceBundle$Control$1: void <init>(java.util.ResourceBundle$Control,boolean,java.lang.ClassLoader,java.lang.String)>(r0, z1, r8, r21);
        $r23 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r22);
        r24 = (java.io.InputStream) $r23;

     label7:
        goto label9;

     label8:
        $r25 := @caughtexception;
        r9 = $r25;
        $r26 = virtualinvoke r9.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $r27 = (java.io.IOException) $r26;
        throw $r27;

     label9:
        if r24 == null goto label15;

     label10:
        $r28 = new java.util.PropertyResourceBundle;
        specialinvoke $r28.<java.util.PropertyResourceBundle: void <init>(java.io.InputStream)>(r24);
        r6 = $r28;

     label11:
        virtualinvoke r24.<java.io.InputStream: void close()>();
        goto label15;

     label12:
        $r29 := @caughtexception;

     label13:
        r10 = $r29;

     label14:
        virtualinvoke r24.<java.io.InputStream: void close()>();
        throw r10;

     label15:
        goto label17;

     label16:
        $r30 = new java.lang.IllegalArgumentException;
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown format: ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);
        throw $r30;

     label17:
        return r6;

        catch java.lang.ClassNotFoundException from label0 to label2 with label3;
        catch java.security.PrivilegedActionException from label6 to label7 with label8;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public long getTimeToLive(java.lang.String, java.util.Locale)
    {
        java.util.ResourceBundle$Control r0;
        java.lang.String r1;
        java.util.Locale r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.ResourceBundle$Control;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Locale;
        if r1 == null goto label0;

        if r2 != null goto label1;

     label0:
        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label1:
        return -2L;
    }

    public boolean needsReload(java.lang.String, java.util.Locale, java.lang.String, java.lang.ClassLoader, java.util.ResourceBundle, long)
    {
        java.util.ResourceBundle$Control r0;
        java.lang.String r1, r3, r6, $r11;
        java.util.Locale r2;
        java.lang.ClassLoader r4;
        java.util.ResourceBundle r5;
        long l0, l1;
        boolean z0, $z1, $z2, $z4, $z5;
        java.net.URL r7;
        java.net.URLConnection r8;
        java.util.jar.JarEntry r9;
        java.lang.NullPointerException $r10, $r13, r14;
        java.net.JarURLConnection $r12;
        byte $b2, $b3;
        java.lang.Exception $r15, r16;

        r0 := @this: java.util.ResourceBundle$Control;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.ClassLoader;
        r5 := @parameter4: java.util.ResourceBundle;
        l0 := @parameter5: long;
        if r5 != null goto label0;

        $r10 = new java.lang.NullPointerException;
        specialinvoke $r10.<java.lang.NullPointerException: void <init>()>();
        throw $r10;

     label0:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.class");
        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.properties");
        if $z2 == 0 goto label2;

     label1:
        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(5);

     label2:
        z0 = 0;

     label3:
        $r11 = virtualinvoke r0.<java.util.ResourceBundle$Control: java.lang.String toBundleName(java.lang.String,java.util.Locale)>(r1, r2);
        r6 = specialinvoke r0.<java.util.ResourceBundle$Control: java.lang.String toResourceName0(java.lang.String,java.lang.String)>($r11, r3);
        if r6 != null goto label5;

     label4:
        return z0;

     label5:
        r7 = virtualinvoke r4.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r6);
        if r7 == null goto label11;

        l1 = 0L;
        r8 = virtualinvoke r7.<java.net.URL: java.net.URLConnection openConnection()>();
        if r8 == null goto label8;

        virtualinvoke r8.<java.net.URLConnection: void setUseCaches(boolean)>(0);
        $z4 = r8 instanceof java.net.JarURLConnection;
        if $z4 == 0 goto label7;

        $r12 = (java.net.JarURLConnection) r8;
        r9 = virtualinvoke $r12.<java.net.JarURLConnection: java.util.jar.JarEntry getJarEntry()>();
        if r9 == null goto label6;

        l1 = virtualinvoke r9.<java.util.jar.JarEntry: long getTime()>();
        $b2 = l1 cmp -1L;
        if $b2 != 0 goto label6;

        l1 = 0L;

     label6:
        goto label8;

     label7:
        l1 = virtualinvoke r8.<java.net.URLConnection: long getLastModified()>();

     label8:
        $b3 = l1 cmp l0;
        if $b3 < 0 goto label9;

        $z5 = 1;
        goto label10;

     label9:
        $z5 = 0;

     label10:
        z0 = $z5;

     label11:
        goto label14;

     label12:
        $r13 := @caughtexception;
        r14 = $r13;
        throw r14;

     label13:
        $r15 := @caughtexception;
        r16 = $r15;

     label14:
        return z0;

        catch java.lang.NullPointerException from label3 to label4 with label12;
        catch java.lang.NullPointerException from label5 to label11 with label12;
        catch java.lang.Exception from label3 to label4 with label13;
        catch java.lang.Exception from label5 to label11 with label13;
    }

    public java.lang.String toBundleName(java.lang.String, java.util.Locale)
    {
        java.util.ResourceBundle$Control r0;
        java.lang.String r1, r4, r5, r6, r7, $r35;
        java.util.Locale r2, $r3;
        java.lang.StringBuilder r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r28, $r29, $r31, $r32;

        r0 := @this: java.util.ResourceBundle$Control;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Locale;
        $r3 = <java.util.Locale: java.util.Locale ROOT>;
        if r2 != $r3 goto label0;

        return r1;

     label0:
        r4 = virtualinvoke r2.<java.util.Locale: java.lang.String getLanguage()>();
        r5 = virtualinvoke r2.<java.util.Locale: java.lang.String getScript()>();
        r6 = virtualinvoke r2.<java.util.Locale: java.lang.String getCountry()>();
        r7 = virtualinvoke r2.<java.util.Locale: java.lang.String getVariant()>();
        if r4 != "" goto label1;

        if r6 != "" goto label1;

        if r7 != "" goto label1;

        return r1;

     label1:
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);
        r8 = $r9;
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
        if r5 == "" goto label4;

        if r7 == "" goto label2;

        $r11 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        goto label7;

     label2:
        if r6 == "" goto label3;

        $r18 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        goto label7;

     label3:
        $r23 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        goto label7;

     label4:
        if r7 == "" goto label5;

        $r26 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        goto label7;

     label5:
        if r6 == "" goto label6;

        $r31 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);
        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        goto label7;

     label6:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

     label7:
        $r35 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r35;
    }

    public final java.lang.String toResourceName(java.lang.String, java.lang.String)
    {
        java.util.ResourceBundle$Control r0;
        java.lang.String r1, r2, $r5, $r9;
        java.lang.StringBuilder $r3, r4, $r6, $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.util.ResourceBundle$Control;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new java.lang.StringBuilder;
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i1 = $i0 + 1;
        $i2 = virtualinvoke r2.<java.lang.String: int length()>();
        $i3 = $i1 + $i2;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i3);
        r4 = $r3;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
        $r6 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r9;
    }

    private java.lang.String toResourceName0(java.lang.String, java.lang.String)
    {
        java.util.ResourceBundle$Control r0;
        java.lang.String r1, r2, $r3;
        boolean $z0;

        r0 := @this: java.util.ResourceBundle$Control;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("://");
        if $z0 == 0 goto label0;

        return null;

     label0:
        $r3 = virtualinvoke r0.<java.util.ResourceBundle$Control: java.lang.String toResourceName(java.lang.String,java.lang.String)>(r1, r2);
        return $r3;
    }

    static java.util.ResourceBundle$Control access$300()
    {
        java.util.ResourceBundle$Control $r0;

        $r0 = <java.util.ResourceBundle$Control: java.util.ResourceBundle$Control INSTANCE>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r3, $r6;
        java.util.List $r1, $r2, $r4, $r5, $r7, $r8;
        java.util.ResourceBundle$Control $r9;
        java.util.ResourceBundle$Control$CandidateListCache $r10;

        $r0 = newarray (java.lang.String)[2];
        $r0[0] = "java.class";
        $r0[1] = "java.properties";
        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);
        <java.util.ResourceBundle$Control: java.util.List FORMAT_DEFAULT> = $r2;
        $r3 = newarray (java.lang.String)[1];
        $r3[0] = "java.class";
        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);
        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);
        <java.util.ResourceBundle$Control: java.util.List FORMAT_CLASS> = $r5;
        $r6 = newarray (java.lang.String)[1];
        $r6[0] = "java.properties";
        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);
        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);
        <java.util.ResourceBundle$Control: java.util.List FORMAT_PROPERTIES> = $r8;
        $r9 = new java.util.ResourceBundle$Control;
        specialinvoke $r9.<java.util.ResourceBundle$Control: void <init>()>();
        <java.util.ResourceBundle$Control: java.util.ResourceBundle$Control INSTANCE> = $r9;
        $r10 = new java.util.ResourceBundle$Control$CandidateListCache;
        specialinvoke $r10.<java.util.ResourceBundle$Control$CandidateListCache: void <init>(java.util.ResourceBundle$1)>(null);
        <java.util.ResourceBundle$Control: java.util.ResourceBundle$Control$CandidateListCache CANDIDATES_CACHE> = $r10;
        return;
    }
}
