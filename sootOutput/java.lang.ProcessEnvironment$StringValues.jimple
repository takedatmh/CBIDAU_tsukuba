class java.lang.ProcessEnvironment$StringValues extends java.util.AbstractCollection
{
    private final java.util.Collection c;

    public void <init>(java.util.Collection)
    {
        java.lang.ProcessEnvironment$StringValues r0;
        java.util.Collection r1;

        r0 := @this: java.lang.ProcessEnvironment$StringValues;
        r1 := @parameter0: java.util.Collection;
        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();
        r0.<java.lang.ProcessEnvironment$StringValues: java.util.Collection c> = r1;
        return;
    }

    public int size()
    {
        java.lang.ProcessEnvironment$StringValues r0;
        java.util.Collection $r1;
        int $i0;

        r0 := @this: java.lang.ProcessEnvironment$StringValues;
        $r1 = r0.<java.lang.ProcessEnvironment$StringValues: java.util.Collection c>;
        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();
        return $i0;
    }

    public boolean isEmpty()
    {
        java.lang.ProcessEnvironment$StringValues r0;
        java.util.Collection $r1;
        boolean $z0;

        r0 := @this: java.lang.ProcessEnvironment$StringValues;
        $r1 = r0.<java.lang.ProcessEnvironment$StringValues: java.util.Collection c>;
        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();
        return $z0;
    }

    public void clear()
    {
        java.lang.ProcessEnvironment$StringValues r0;
        java.util.Collection $r1;

        r0 := @this: java.lang.ProcessEnvironment$StringValues;
        $r1 = r0.<java.lang.ProcessEnvironment$StringValues: java.util.Collection c>;
        interfaceinvoke $r1.<java.util.Collection: void clear()>();
        return;
    }

    public java.util.Iterator iterator()
    {
        java.lang.ProcessEnvironment$StringValues r0;
        java.lang.ProcessEnvironment$StringValues$1 $r1;

        r0 := @this: java.lang.ProcessEnvironment$StringValues;
        $r1 = new java.lang.ProcessEnvironment$StringValues$1;
        specialinvoke $r1.<java.lang.ProcessEnvironment$StringValues$1: void <init>(java.lang.ProcessEnvironment$StringValues)>(r0);
        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.ProcessEnvironment$StringValues r0;
        java.lang.Object r1;
        java.util.Collection $r2;
        java.lang.ProcessEnvironment$Value $r3;
        boolean $z0;

        r0 := @this: java.lang.ProcessEnvironment$StringValues;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.lang.ProcessEnvironment$StringValues: java.util.Collection c>;
        $r3 = staticinvoke <java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOfQueryOnly(java.lang.Object)>(r1);
        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>($r3);
        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.ProcessEnvironment$StringValues r0;
        java.lang.Object r1;
        java.util.Collection $r2;
        java.lang.ProcessEnvironment$Value $r3;
        boolean $z0;

        r0 := @this: java.lang.ProcessEnvironment$StringValues;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.lang.ProcessEnvironment$StringValues: java.util.Collection c>;
        $r3 = staticinvoke <java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOfQueryOnly(java.lang.Object)>(r1);
        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean remove(java.lang.Object)>($r3);
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.ProcessEnvironment$StringValues r0, $r3;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.util.Collection $r2, $r4;

        r0 := @this: java.lang.ProcessEnvironment$StringValues;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.lang.ProcessEnvironment$StringValues;
        if $z0 == 0 goto label0;

        $r2 = r0.<java.lang.ProcessEnvironment$StringValues: java.util.Collection c>;
        $r3 = (java.lang.ProcessEnvironment$StringValues) r1;
        $r4 = $r3.<java.lang.ProcessEnvironment$StringValues: java.util.Collection c>;
        $z1 = interfaceinvoke $r2.<java.util.Collection: boolean equals(java.lang.Object)>($r4);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public int hashCode()
    {
        java.lang.ProcessEnvironment$StringValues r0;
        java.util.Collection $r1;
        int $i0;

        r0 := @this: java.lang.ProcessEnvironment$StringValues;
        $r1 = r0.<java.lang.ProcessEnvironment$StringValues: java.util.Collection c>;
        $i0 = interfaceinvoke $r1.<java.util.Collection: int hashCode()>();
        return $i0;
    }

    static java.util.Collection access$700(java.lang.ProcessEnvironment$StringValues)
    {
        java.lang.ProcessEnvironment$StringValues r0;
        java.util.Collection $r1;

        r0 := @parameter0: java.lang.ProcessEnvironment$StringValues;
        $r1 = r0.<java.lang.ProcessEnvironment$StringValues: java.util.Collection c>;
        return $r1;
    }
}
