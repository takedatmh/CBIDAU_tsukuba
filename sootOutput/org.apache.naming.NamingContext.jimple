public class org.apache.naming.NamingContext extends java.lang.Object implements javax.naming.Context
{
    protected static final javax.naming.NameParser nameParser;
    private static final org.apache.juli.logging.Log log;
    protected java.util.Hashtable env;
    protected static final org.apache.naming.StringManager sm;
    protected java.util.HashMap bindings;
    protected java.lang.String name;
    private boolean exceptionOnFailedWrite;

    static void <clinit>()
    {
        org.apache.naming.NameParserImpl $r0;
        org.apache.juli.logging.Log $r1;
        org.apache.naming.StringManager $r2;

        $r0 = new org.apache.naming.NameParserImpl;
        specialinvoke $r0.<org.apache.naming.NameParserImpl: void <init>()>();
        <org.apache.naming.NamingContext: javax.naming.NameParser nameParser> = $r0;
        $r1 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/naming/NamingContext");
        <org.apache.naming.NamingContext: org.apache.juli.logging.Log log> = $r1;
        $r2 = staticinvoke <org.apache.naming.StringManager: org.apache.naming.StringManager getManager(java.lang.String)>("org.apache.naming");
        <org.apache.naming.NamingContext: org.apache.naming.StringManager sm> = $r2;
        return;
    }

    public void <init>(java.util.Hashtable, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.util.Hashtable r1, $r6;
        java.lang.String r2, r4;
        java.util.Enumeration r3;
        java.util.HashMap $r5;
        java.lang.Object $r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.util.Hashtable;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.naming.NamingContext: boolean exceptionOnFailedWrite> = 1;
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>()>();
        r0.<org.apache.naming.NamingContext: java.util.HashMap bindings> = $r5;
        $r6 = new java.util.Hashtable;
        specialinvoke $r6.<java.util.Hashtable: void <init>()>();
        r0.<org.apache.naming.NamingContext: java.util.Hashtable env> = $r6;
        r0.<org.apache.naming.NamingContext: java.lang.String name> = r2;
        if r1 == null goto label2;

        r3 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration keys()>();
        goto label1;

     label0:
        $r7 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (java.lang.String) $r7;
        $r8 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);
        virtualinvoke r0.<org.apache.naming.NamingContext: java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)>(r4, $r8);

     label1:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 != 0 goto label0;

     label2:
        return;
    }

    public void <init>(java.util.Hashtable, java.lang.String, java.util.HashMap) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.util.Hashtable r1;
        java.lang.String r2;
        java.util.HashMap r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.util.Hashtable;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.util.HashMap;
        specialinvoke r0.<org.apache.naming.NamingContext: void <init>(java.util.Hashtable,java.lang.String)>(r1, r2);
        r0.<org.apache.naming.NamingContext: java.util.HashMap bindings> = r3;
        return;
    }

    public boolean getExceptionOnFailedWrite()
    {
        org.apache.naming.NamingContext r0;
        boolean $z0;

        r0 := @this: org.apache.naming.NamingContext;
        $z0 = r0.<org.apache.naming.NamingContext: boolean exceptionOnFailedWrite>;
        return $z0;
    }

    public void setExceptionOnFailedWrite(boolean)
    {
        org.apache.naming.NamingContext r0;
        boolean z0;

        r0 := @this: org.apache.naming.NamingContext;
        z0 := @parameter0: boolean;
        r0.<org.apache.naming.NamingContext: boolean exceptionOnFailedWrite> = z0;
        return;
    }

    public java.lang.Object lookup(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r0.<org.apache.naming.NamingContext: java.lang.Object lookup(javax.naming.Name,boolean)>(r1, 1);
        return $r2;
    }

    public java.lang.Object lookup(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        javax.naming.CompositeName $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.CompositeName;
        specialinvoke $r2.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        $r3 = virtualinvoke r0.<org.apache.naming.NamingContext: java.lang.Object lookup(javax.naming.Name,boolean)>($r2, 1);
        return $r3;
    }

    public void bind(javax.naming.Name, java.lang.Object) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1;
        java.lang.Object r2;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.Object;
        virtualinvoke r0.<org.apache.naming.NamingContext: void bind(javax.naming.Name,java.lang.Object,boolean)>(r1, r2, 0);
        return;
    }

    public void bind(java.lang.String, java.lang.Object) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        java.lang.Object r2;
        javax.naming.CompositeName $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = new javax.naming.CompositeName;
        specialinvoke $r3.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        virtualinvoke r0.<org.apache.naming.NamingContext: void bind(javax.naming.Name,java.lang.Object)>($r3, r2);
        return;
    }

    public void rebind(javax.naming.Name, java.lang.Object) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1;
        java.lang.Object r2;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.Object;
        virtualinvoke r0.<org.apache.naming.NamingContext: void bind(javax.naming.Name,java.lang.Object,boolean)>(r1, r2, 1);
        return;
    }

    public void rebind(java.lang.String, java.lang.Object) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        java.lang.Object r2;
        javax.naming.CompositeName $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = new javax.naming.CompositeName;
        specialinvoke $r3.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        virtualinvoke r0.<org.apache.naming.NamingContext: void rebind(javax.naming.Name,java.lang.Object)>($r3, r2);
        return;
    }

    public void unbind(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1, $r17;
        org.apache.naming.StringManager $r2, $r11, $r19;
        org.apache.naming.NamingEntry r3;
        boolean $z0, $z1, $z2;
        java.lang.String $r4, $r6, $r8, $r13, $r14, $r20, $r22;
        int $i0, $i1, $i2;
        javax.naming.NamingException $r5, $r18;
        java.util.HashMap $r7, $r21;
        java.lang.Object $r9, $r15;
        javax.naming.NameNotFoundException $r10;
        java.lang.Object[] $r12;
        javax.naming.Context $r16;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        $z0 = virtualinvoke r0.<org.apache.naming.NamingContext: boolean checkWritable()>();
        if $z0 != 0 goto label1;

        return;

     label0:
        r1 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);

     label1:
        $z1 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z1 != 0 goto label2;

        $r4 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();
        if $i0 == 0 goto label0;

     label2:
        $z2 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z2 == 0 goto label3;

        $r5 = new javax.naming.NamingException;
        $r2 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r6 = virtualinvoke $r2.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.invalidName");
        specialinvoke $r5.<javax.naming.NamingException: void <init>(java.lang.String)>($r6);
        throw $r5;

     label3:
        $r7 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r8 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);
        r3 = (org.apache.naming.NamingEntry) $r9;
        if r3 != null goto label4;

        $r10 = new javax.naming.NameNotFoundException;
        $r11 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r12 = newarray (java.lang.Object)[2];
        $r12[0] = r1;
        $r13 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r12[1] = $r13;
        $r14 = virtualinvoke $r11.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingContext.nameNotBound", $r12);
        specialinvoke $r10.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r14);
        throw $r10;

     label4:
        $i1 = interfaceinvoke r1.<javax.naming.Name: int size()>();
        if $i1 <= 1 goto label6;

        $i2 = r3.<org.apache.naming.NamingEntry: int type>;
        if $i2 != 10 goto label5;

        $r15 = r3.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r16 = (javax.naming.Context) $r15;
        $r17 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);
        interfaceinvoke $r16.<javax.naming.Context: void unbind(javax.naming.Name)>($r17);
        goto label7;

     label5:
        $r18 = new javax.naming.NamingException;
        $r19 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r20 = virtualinvoke $r19.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.contextExpected");
        specialinvoke $r18.<javax.naming.NamingException: void <init>(java.lang.String)>($r20);
        throw $r18;

     label6:
        $r21 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r22 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        virtualinvoke $r21.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r22);

     label7:
        return;
    }

    public void unbind(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        javax.naming.CompositeName $r2;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.CompositeName;
        specialinvoke $r2.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        virtualinvoke r0.<org.apache.naming.NamingContext: void unbind(javax.naming.Name)>($r2);
        return;
    }

    public void rename(javax.naming.Name, javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1, r2;
        java.lang.Object r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: javax.naming.Name;
        r3 = virtualinvoke r0.<org.apache.naming.NamingContext: java.lang.Object lookup(javax.naming.Name)>(r1);
        virtualinvoke r0.<org.apache.naming.NamingContext: void bind(javax.naming.Name,java.lang.Object)>(r2, r3);
        virtualinvoke r0.<org.apache.naming.NamingContext: void unbind(javax.naming.Name)>(r1);
        return;
    }

    public void rename(java.lang.String, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1, r2;
        javax.naming.CompositeName $r3, $r4;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new javax.naming.CompositeName;
        specialinvoke $r3.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        $r4 = new javax.naming.CompositeName;
        specialinvoke $r4.<javax.naming.CompositeName: void <init>(java.lang.String)>(r2);
        virtualinvoke r0.<org.apache.naming.NamingContext: void rename(javax.naming.Name,javax.naming.Name)>($r3, $r4);
        return;
    }

    public javax.naming.NamingEnumeration list(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1, $r21;
        org.apache.naming.NamingEntry r2;
        boolean $z0, $z1;
        java.lang.String $r3, $r9, $r14, $r15, $r18;
        int $i0, $i1;
        org.apache.naming.NamingContextEnumeration $r4;
        java.util.HashMap $r5, $r8;
        java.util.Collection $r6;
        java.util.Iterator $r7;
        java.lang.Object $r10, $r19;
        javax.naming.NameNotFoundException $r11;
        org.apache.naming.StringManager $r12, $r17;
        java.lang.Object[] $r13;
        javax.naming.NamingException $r16;
        javax.naming.Context $r20;
        javax.naming.NamingEnumeration $r22;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        goto label1;

     label0:
        r1 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);

     label1:
        $z0 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z0 != 0 goto label2;

        $r3 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 == 0 goto label0;

     label2:
        $z1 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z1 == 0 goto label3;

        $r4 = new org.apache.naming.NamingContextEnumeration;
        $r5 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();
        specialinvoke $r4.<org.apache.naming.NamingContextEnumeration: void <init>(java.util.Iterator)>($r7);
        return $r4;

     label3:
        $r8 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r9 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r10 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);
        r2 = (org.apache.naming.NamingEntry) $r10;
        if r2 != null goto label4;

        $r11 = new javax.naming.NameNotFoundException;
        $r12 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r13 = newarray (java.lang.Object)[2];
        $r13[0] = r1;
        $r14 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r13[1] = $r14;
        $r15 = virtualinvoke $r12.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingContext.nameNotBound", $r13);
        specialinvoke $r11.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r15);
        throw $r11;

     label4:
        $i1 = r2.<org.apache.naming.NamingEntry: int type>;
        if $i1 == 10 goto label5;

        $r16 = new javax.naming.NamingException;
        $r17 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r18 = virtualinvoke $r17.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.contextExpected");
        specialinvoke $r16.<javax.naming.NamingException: void <init>(java.lang.String)>($r18);
        throw $r16;

     label5:
        $r19 = r2.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r20 = (javax.naming.Context) $r19;
        $r21 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);
        $r22 = interfaceinvoke $r20.<javax.naming.Context: javax.naming.NamingEnumeration list(javax.naming.Name)>($r21);
        return $r22;
    }

    public javax.naming.NamingEnumeration list(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        javax.naming.CompositeName $r2;
        javax.naming.NamingEnumeration $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.CompositeName;
        specialinvoke $r2.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        $r3 = virtualinvoke r0.<org.apache.naming.NamingContext: javax.naming.NamingEnumeration list(javax.naming.Name)>($r2);
        return $r3;
    }

    public javax.naming.NamingEnumeration listBindings(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1, $r21;
        org.apache.naming.NamingEntry r2;
        boolean $z0, $z1;
        java.lang.String $r3, $r9, $r14, $r15, $r18;
        int $i0, $i1;
        org.apache.naming.NamingContextBindingsEnumeration $r4;
        java.util.HashMap $r5, $r8;
        java.util.Collection $r6;
        java.util.Iterator $r7;
        java.lang.Object $r10, $r19;
        javax.naming.NameNotFoundException $r11;
        org.apache.naming.StringManager $r12, $r17;
        java.lang.Object[] $r13;
        javax.naming.NamingException $r16;
        javax.naming.Context $r20;
        javax.naming.NamingEnumeration $r22;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        goto label1;

     label0:
        r1 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);

     label1:
        $z0 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z0 != 0 goto label2;

        $r3 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 == 0 goto label0;

     label2:
        $z1 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z1 == 0 goto label3;

        $r4 = new org.apache.naming.NamingContextBindingsEnumeration;
        $r5 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();
        specialinvoke $r4.<org.apache.naming.NamingContextBindingsEnumeration: void <init>(java.util.Iterator,javax.naming.Context)>($r7, r0);
        return $r4;

     label3:
        $r8 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r9 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r10 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);
        r2 = (org.apache.naming.NamingEntry) $r10;
        if r2 != null goto label4;

        $r11 = new javax.naming.NameNotFoundException;
        $r12 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r13 = newarray (java.lang.Object)[2];
        $r13[0] = r1;
        $r14 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r13[1] = $r14;
        $r15 = virtualinvoke $r12.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingContext.nameNotBound", $r13);
        specialinvoke $r11.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r15);
        throw $r11;

     label4:
        $i1 = r2.<org.apache.naming.NamingEntry: int type>;
        if $i1 == 10 goto label5;

        $r16 = new javax.naming.NamingException;
        $r17 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r18 = virtualinvoke $r17.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.contextExpected");
        specialinvoke $r16.<javax.naming.NamingException: void <init>(java.lang.String)>($r18);
        throw $r16;

     label5:
        $r19 = r2.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r20 = (javax.naming.Context) $r19;
        $r21 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);
        $r22 = interfaceinvoke $r20.<javax.naming.Context: javax.naming.NamingEnumeration listBindings(javax.naming.Name)>($r21);
        return $r22;
    }

    public javax.naming.NamingEnumeration listBindings(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        javax.naming.CompositeName $r2;
        javax.naming.NamingEnumeration $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.CompositeName;
        specialinvoke $r2.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        $r3 = virtualinvoke r0.<org.apache.naming.NamingContext: javax.naming.NamingEnumeration listBindings(javax.naming.Name)>($r2);
        return $r3;
    }

    public void destroySubcontext(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1, $r17;
        org.apache.naming.StringManager $r2, $r11, $r19, $r27;
        org.apache.naming.NamingEntry r3;
        boolean $z0, $z1, $z2;
        java.lang.String $r4, $r6, $r8, $r13, $r14, $r20, $r24, $r28;
        int $i0, $i1, $i2, $i3;
        javax.naming.NamingException $r5, $r18;
        java.util.HashMap $r7, $r23;
        java.lang.Object $r9, $r15, $r21;
        javax.naming.NameNotFoundException $r10;
        java.lang.Object[] $r12;
        javax.naming.Context $r16, $r22;
        javax.naming.NotContextException $r26;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        $z0 = virtualinvoke r0.<org.apache.naming.NamingContext: boolean checkWritable()>();
        if $z0 != 0 goto label1;

        return;

     label0:
        r1 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);

     label1:
        $z1 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z1 != 0 goto label2;

        $r4 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();
        if $i0 == 0 goto label0;

     label2:
        $z2 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z2 == 0 goto label3;

        $r5 = new javax.naming.NamingException;
        $r2 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r6 = virtualinvoke $r2.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.invalidName");
        specialinvoke $r5.<javax.naming.NamingException: void <init>(java.lang.String)>($r6);
        throw $r5;

     label3:
        $r7 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r8 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);
        r3 = (org.apache.naming.NamingEntry) $r9;
        if r3 != null goto label4;

        $r10 = new javax.naming.NameNotFoundException;
        $r11 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r12 = newarray (java.lang.Object)[2];
        $r12[0] = r1;
        $r13 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r12[1] = $r13;
        $r14 = virtualinvoke $r11.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingContext.nameNotBound", $r12);
        specialinvoke $r10.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r14);
        throw $r10;

     label4:
        $i1 = interfaceinvoke r1.<javax.naming.Name: int size()>();
        if $i1 <= 1 goto label6;

        $i2 = r3.<org.apache.naming.NamingEntry: int type>;
        if $i2 != 10 goto label5;

        $r15 = r3.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r16 = (javax.naming.Context) $r15;
        $r17 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);
        interfaceinvoke $r16.<javax.naming.Context: void destroySubcontext(javax.naming.Name)>($r17);
        goto label8;

     label5:
        $r18 = new javax.naming.NamingException;
        $r19 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r20 = virtualinvoke $r19.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.contextExpected");
        specialinvoke $r18.<javax.naming.NamingException: void <init>(java.lang.String)>($r20);
        throw $r18;

     label6:
        $i3 = r3.<org.apache.naming.NamingEntry: int type>;
        if $i3 != 10 goto label7;

        $r21 = r3.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r22 = (javax.naming.Context) $r21;
        interfaceinvoke $r22.<javax.naming.Context: void close()>();
        $r23 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r24 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        virtualinvoke $r23.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r24);
        goto label8;

     label7:
        $r26 = new javax.naming.NotContextException;
        $r27 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r28 = virtualinvoke $r27.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.contextExpected");
        specialinvoke $r26.<javax.naming.NotContextException: void <init>(java.lang.String)>($r28);
        throw $r26;

     label8:
        return;
    }

    public void destroySubcontext(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        javax.naming.CompositeName $r2;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.CompositeName;
        specialinvoke $r2.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        virtualinvoke r0.<org.apache.naming.NamingContext: void destroySubcontext(javax.naming.Name)>($r2);
        return;
    }

    public javax.naming.Context createSubcontext(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0, r2, $r3;
        javax.naming.Name r1;
        boolean $z0, $z1;
        java.util.Hashtable $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        $z0 = virtualinvoke r0.<org.apache.naming.NamingContext: boolean checkWritable()>();
        if $z0 != 0 goto label0;

        return null;

     label0:
        $r3 = new org.apache.naming.NamingContext;
        $r4 = r0.<org.apache.naming.NamingContext: java.util.Hashtable env>;
        $r5 = r0.<org.apache.naming.NamingContext: java.lang.String name>;
        specialinvoke $r3.<org.apache.naming.NamingContext: void <init>(java.util.Hashtable,java.lang.String)>($r4, $r5);
        r2 = $r3;
        virtualinvoke r0.<org.apache.naming.NamingContext: void bind(javax.naming.Name,java.lang.Object)>(r1, r2);
        $z1 = virtualinvoke r0.<org.apache.naming.NamingContext: boolean getExceptionOnFailedWrite()>();
        virtualinvoke r2.<org.apache.naming.NamingContext: void setExceptionOnFailedWrite(boolean)>($z1);
        return r2;
    }

    public javax.naming.Context createSubcontext(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        javax.naming.CompositeName $r2;
        javax.naming.Context $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.CompositeName;
        specialinvoke $r2.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        $r3 = virtualinvoke r0.<org.apache.naming.NamingContext: javax.naming.Context createSubcontext(javax.naming.Name)>($r2);
        return $r3;
    }

    public java.lang.Object lookupLink(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        $r2 = virtualinvoke r0.<org.apache.naming.NamingContext: java.lang.Object lookup(javax.naming.Name,boolean)>(r1, 0);
        return $r2;
    }

    public java.lang.Object lookupLink(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        javax.naming.CompositeName $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.CompositeName;
        specialinvoke $r2.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        $r3 = virtualinvoke r0.<org.apache.naming.NamingContext: java.lang.Object lookup(javax.naming.Name,boolean)>($r2, 0);
        return $r3;
    }

    public javax.naming.NameParser getNameParser(javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1, $r8;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r6, $r12;
        int $i0, $i1;
        javax.naming.NameParser $r4, $r9, $r13;
        java.util.HashMap $r5;
        javax.naming.Context $r7;
        javax.naming.NotContextException $r10;
        org.apache.naming.StringManager $r11;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        goto label1;

     label0:
        r1 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);

     label1:
        $z0 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z0 != 0 goto label2;

        $r3 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 == 0 goto label0;

     label2:
        $z1 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z1 == 0 goto label3;

        $r4 = <org.apache.naming.NamingContext: javax.naming.NameParser nameParser>;
        return $r4;

     label3:
        $i1 = interfaceinvoke r1.<javax.naming.Name: int size()>();
        if $i1 <= 1 goto label5;

        $r5 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r6 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        r2 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);
        $z2 = r2 instanceof javax.naming.Context;
        if $z2 == 0 goto label4;

        $r7 = (javax.naming.Context) r2;
        $r8 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);
        $r9 = interfaceinvoke $r7.<javax.naming.Context: javax.naming.NameParser getNameParser(javax.naming.Name)>($r8);
        return $r9;

     label4:
        $r10 = new javax.naming.NotContextException;
        $r11 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r12 = virtualinvoke $r11.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.contextExpected");
        specialinvoke $r10.<javax.naming.NotContextException: void <init>(java.lang.String)>($r12);
        throw $r10;

     label5:
        $r13 = <org.apache.naming.NamingContext: javax.naming.NameParser nameParser>;
        return $r13;
    }

    public javax.naming.NameParser getNameParser(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        javax.naming.CompositeName $r2;
        javax.naming.NameParser $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.CompositeName;
        specialinvoke $r2.<javax.naming.CompositeName: void <init>(java.lang.String)>(r1);
        $r3 = virtualinvoke r0.<org.apache.naming.NamingContext: javax.naming.NameParser getNameParser(javax.naming.Name)>($r2);
        return $r3;
    }

    public javax.naming.Name composeName(javax.naming.Name, javax.naming.Name) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1, r2, r4, $r5;
        java.lang.Object $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: javax.naming.Name;
        $r3 = interfaceinvoke r2.<javax.naming.Name: java.lang.Object clone()>();
        r4 = (javax.naming.Name) $r3;
        $r5 = interfaceinvoke r4.<javax.naming.Name: javax.naming.Name addAll(javax.naming.Name)>(r1);
        return $r5;
    }

    public java.lang.String composeName(java.lang.String, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1, r2, $r4, $r7;
        java.lang.StringBuilder $r3, $r5, $r6;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    public java.lang.Object addToEnvironment(java.lang.String, java.lang.Object) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        java.lang.Object r2, $r4;
        java.util.Hashtable $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = r0.<org.apache.naming.NamingContext: java.util.Hashtable env>;
        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return $r4;
    }

    public java.lang.Object removeFromEnvironment(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.apache.naming.NamingContext: java.util.Hashtable env>;
        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);
        return $r3;
    }

    public java.util.Hashtable getEnvironment() throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        java.util.Hashtable $r1;

        r0 := @this: org.apache.naming.NamingContext;
        $r1 = r0.<org.apache.naming.NamingContext: java.util.Hashtable env>;
        return $r1;
    }

    public void close() throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        boolean $z0;
        java.util.Hashtable $r1;

        r0 := @this: org.apache.naming.NamingContext;
        $z0 = virtualinvoke r0.<org.apache.naming.NamingContext: boolean checkWritable()>();
        if $z0 != 0 goto label0;

        return;

     label0:
        $r1 = r0.<org.apache.naming.NamingContext: java.util.Hashtable env>;
        virtualinvoke $r1.<java.util.Hashtable: void clear()>();
        return;
    }

    public java.lang.String getNameInNamespace() throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.OperationNotSupportedException $r1;
        org.apache.naming.StringManager $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.naming.NamingContext;
        $r1 = new javax.naming.OperationNotSupportedException;
        $r2 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r3 = virtualinvoke $r2.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.noAbsoluteName");
        specialinvoke $r1.<javax.naming.OperationNotSupportedException: void <init>(java.lang.String)>($r3);
        throw $r1;
    }

    protected java.lang.Object lookup(javax.naming.Name, boolean) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0, $r6;
        javax.naming.Name r1, $r23;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        org.apache.naming.NamingEntry r2;
        java.lang.String r3, $r5, $r8, $r11, $r16, $r17, $r20, $r27, $r40, r47;
        javax.naming.NamingException r4, $r18, $r42, r43, $r49;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Hashtable $r7, $r30, $r33;
        java.util.HashMap $r9, $r10;
        java.lang.Object $r12, $r21, $r24, $r25, $r28, $r31, $r32, r34, $r35, $r36, $r39, $r51;
        javax.naming.NameNotFoundException $r13;
        org.apache.naming.StringManager $r14, $r19, $r46;
        java.lang.Object[] $r15;
        javax.naming.Context $r22;
        javax.naming.LinkRef $r26;
        javax.naming.InitialContext $r29;
        org.apache.naming.ResourceRef $r37;
        javax.naming.RefAddr $r38;
        java.lang.Exception $r44, r45;
        org.apache.juli.logging.Log $r48;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        z0 := @parameter1: boolean;
        goto label1;

     label0:
        r1 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);

     label1:
        $z2 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z2 != 0 goto label2;

        $r5 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();
        if $i0 == 0 goto label0;

     label2:
        $z3 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z3 == 0 goto label3;

        $r6 = new org.apache.naming.NamingContext;
        $r7 = r0.<org.apache.naming.NamingContext: java.util.Hashtable env>;
        $r8 = r0.<org.apache.naming.NamingContext: java.lang.String name>;
        $r9 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        specialinvoke $r6.<org.apache.naming.NamingContext: void <init>(java.util.Hashtable,java.lang.String,java.util.HashMap)>($r7, $r8, $r9);
        return $r6;

     label3:
        $r10 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r11 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);
        r2 = (org.apache.naming.NamingEntry) $r12;
        if r2 != null goto label4;

        $r13 = new javax.naming.NameNotFoundException;
        $r14 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r15 = newarray (java.lang.Object)[2];
        $r15[0] = r1;
        $r16 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r15[1] = $r16;
        $r17 = virtualinvoke $r14.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingContext.nameNotBound", $r15);
        specialinvoke $r13.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r17);
        throw $r13;

     label4:
        $i1 = interfaceinvoke r1.<javax.naming.Name: int size()>();
        if $i1 <= 1 goto label6;

        $i2 = r2.<org.apache.naming.NamingEntry: int type>;
        if $i2 == 10 goto label5;

        $r18 = new javax.naming.NamingException;
        $r19 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r20 = virtualinvoke $r19.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.contextExpected");
        specialinvoke $r18.<javax.naming.NamingException: void <init>(java.lang.String)>($r20);
        throw $r18;

     label5:
        $r21 = r2.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r22 = (javax.naming.Context) $r21;
        $r23 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);
        $r24 = interfaceinvoke $r22.<javax.naming.Context: java.lang.Object lookup(javax.naming.Name)>($r23);
        return $r24;

     label6:
        if z0 == 0 goto label8;

        $i3 = r2.<org.apache.naming.NamingEntry: int type>;
        if $i3 != 1 goto label8;

        $r25 = r2.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r26 = (javax.naming.LinkRef) $r25;
        r3 = virtualinvoke $r26.<javax.naming.LinkRef: java.lang.String getLinkName()>();
        $z4 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(".");
        if $z4 == 0 goto label7;

        $r27 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(1);
        $r28 = virtualinvoke r0.<org.apache.naming.NamingContext: java.lang.Object lookup(java.lang.String)>($r27);
        return $r28;

     label7:
        $r29 = new javax.naming.InitialContext;
        $r30 = r0.<org.apache.naming.NamingContext: java.util.Hashtable env>;
        specialinvoke $r29.<javax.naming.InitialContext: void <init>(java.util.Hashtable)>($r30);
        $r31 = virtualinvoke $r29.<javax.naming.InitialContext: java.lang.Object lookup(java.lang.String)>(r3);
        return $r31;

     label8:
        $i4 = r2.<org.apache.naming.NamingEntry: int type>;
        if $i4 != 2 goto label13;

     label9:
        $r32 = r2.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r33 = r0.<org.apache.naming.NamingContext: java.util.Hashtable env>;
        r34 = staticinvoke <javax.naming.spi.NamingManager: java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>($r32, r1, r0, $r33);
        $r35 = r2.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $z5 = $r35 instanceof org.apache.naming.ResourceRef;
        if $z5 == 0 goto label10;

        $r36 = r2.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r37 = (org.apache.naming.ResourceRef) $r36;
        $r38 = virtualinvoke $r37.<org.apache.naming.ResourceRef: javax.naming.RefAddr get(java.lang.String)>("singleton");
        $r39 = virtualinvoke $r38.<javax.naming.RefAddr: java.lang.Object getContent()>();
        $r40 = (java.lang.String) $r39;
        z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r40);
        if z1 == 0 goto label10;

        r2.<org.apache.naming.NamingEntry: int type> = 0;
        r2.<org.apache.naming.NamingEntry: java.lang.Object value> = r34;

     label10:
        return r34;

     label11:
        $r42 := @caughtexception;
        r43 = $r42;
        throw r43;

     label12:
        $r44 := @caughtexception;
        r45 = $r44;
        $r46 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        r47 = virtualinvoke $r46.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.failResolvingReference");
        $r48 = <org.apache.naming.NamingContext: org.apache.juli.logging.Log log>;
        interfaceinvoke $r48.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>(r47, r45);
        $r49 = new javax.naming.NamingException;
        specialinvoke $r49.<javax.naming.NamingException: void <init>(java.lang.String)>(r47);
        r4 = $r49;
        virtualinvoke r4.<javax.naming.NamingException: java.lang.Throwable initCause(java.lang.Throwable)>(r45);
        throw r4;

     label13:
        $r51 = r2.<org.apache.naming.NamingEntry: java.lang.Object value>;
        return $r51;

        catch javax.naming.NamingException from label9 to label10 with label11;
        catch java.lang.Exception from label9 to label10 with label12;
    }

    protected void bind(javax.naming.Name, java.lang.Object, boolean) throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        javax.naming.Name r1, $r19, $r22;
        java.lang.Object r2, r5, $r11, $r17, $r20;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.naming.StringManager $r3, $r13, $r24, $r27;
        org.apache.naming.NamingEntry r4, $r32, r34, $r35, $r37, $r41, $r43;
        java.lang.String $r6, $r8, $r10, $r15, $r16, $r25, $r29, $r30, $r33, $r36, $r38, $r42, $r44, $r46;
        int $i0, $i1, $i2;
        javax.naming.NamingException $r7, $r23;
        java.util.HashMap $r9, $r45;
        javax.naming.NameNotFoundException $r12;
        java.lang.Object[] $r14, $r28;
        javax.naming.Context $r18, $r21;
        javax.naming.NameAlreadyBoundException $r26;
        java.util.Hashtable $r31;
        javax.naming.Referenceable $r39;
        javax.naming.Reference r40;

        r0 := @this: org.apache.naming.NamingContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.Object;
        z0 := @parameter2: boolean;
        $z1 = virtualinvoke r0.<org.apache.naming.NamingContext: boolean checkWritable()>();
        if $z1 != 0 goto label1;

        return;

     label0:
        r1 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);

     label1:
        $z2 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z2 != 0 goto label2;

        $r6 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();
        if $i0 == 0 goto label0;

     label2:
        $z3 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z3 == 0 goto label3;

        $r7 = new javax.naming.NamingException;
        $r3 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r8 = virtualinvoke $r3.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.invalidName");
        specialinvoke $r7.<javax.naming.NamingException: void <init>(java.lang.String)>($r8);
        throw $r7;

     label3:
        $r9 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r10 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r11 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);
        r4 = (org.apache.naming.NamingEntry) $r11;
        $i1 = interfaceinvoke r1.<javax.naming.Name: int size()>();
        if $i1 <= 1 goto label7;

        if r4 != null goto label4;

        $r12 = new javax.naming.NameNotFoundException;
        $r13 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r14 = newarray (java.lang.Object)[2];
        $r14[0] = r1;
        $r15 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r14[1] = $r15;
        $r16 = virtualinvoke $r13.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingContext.nameNotBound", $r14);
        specialinvoke $r12.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r16);
        throw $r12;

     label4:
        $i2 = r4.<org.apache.naming.NamingEntry: int type>;
        if $i2 != 10 goto label6;

        if z0 == 0 goto label5;

        $r17 = r4.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r18 = (javax.naming.Context) $r17;
        $r19 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);
        interfaceinvoke $r18.<javax.naming.Context: void rebind(javax.naming.Name,java.lang.Object)>($r19, r2);
        goto label14;

     label5:
        $r20 = r4.<org.apache.naming.NamingEntry: java.lang.Object value>;
        $r21 = (javax.naming.Context) $r20;
        $r22 = interfaceinvoke r1.<javax.naming.Name: javax.naming.Name getSuffix(int)>(1);
        interfaceinvoke $r21.<javax.naming.Context: void bind(javax.naming.Name,java.lang.Object)>($r22, r2);
        goto label14;

     label6:
        $r23 = new javax.naming.NamingException;
        $r24 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r25 = virtualinvoke $r24.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.contextExpected");
        specialinvoke $r23.<javax.naming.NamingException: void <init>(java.lang.String)>($r25);
        throw $r23;

     label7:
        if z0 != 0 goto label8;

        if r4 == null goto label8;

        $r26 = new javax.naming.NameAlreadyBoundException;
        $r27 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r28 = newarray (java.lang.Object)[1];
        $r29 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        $r28[0] = $r29;
        $r30 = virtualinvoke $r27.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingContext.alreadyBound", $r28);
        specialinvoke $r26.<javax.naming.NameAlreadyBoundException: void <init>(java.lang.String)>($r30);
        throw $r26;

     label8:
        $r31 = r0.<org.apache.naming.NamingContext: java.util.Hashtable env>;
        r5 = staticinvoke <javax.naming.spi.NamingManager: java.lang.Object getStateToBind(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)>(r2, r1, r0, $r31);
        $z4 = r5 instanceof javax.naming.Context;
        if $z4 == 0 goto label9;

        $r32 = new org.apache.naming.NamingEntry;
        $r33 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        specialinvoke $r32.<org.apache.naming.NamingEntry: void <init>(java.lang.String,java.lang.Object,int)>($r33, r5, 10);
        r34 = $r32;
        goto label13;

     label9:
        $z5 = r5 instanceof javax.naming.LinkRef;
        if $z5 == 0 goto label10;

        $r35 = new org.apache.naming.NamingEntry;
        $r36 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        specialinvoke $r35.<org.apache.naming.NamingEntry: void <init>(java.lang.String,java.lang.Object,int)>($r36, r5, 1);
        r34 = $r35;
        goto label13;

     label10:
        $z6 = r5 instanceof javax.naming.Reference;
        if $z6 == 0 goto label11;

        $r37 = new org.apache.naming.NamingEntry;
        $r38 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        specialinvoke $r37.<org.apache.naming.NamingEntry: void <init>(java.lang.String,java.lang.Object,int)>($r38, r5, 2);
        r34 = $r37;
        goto label13;

     label11:
        $z7 = r5 instanceof javax.naming.Referenceable;
        if $z7 == 0 goto label12;

        $r39 = (javax.naming.Referenceable) r5;
        r40 = interfaceinvoke $r39.<javax.naming.Referenceable: javax.naming.Reference getReference()>();
        $r41 = new org.apache.naming.NamingEntry;
        $r42 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        specialinvoke $r41.<org.apache.naming.NamingEntry: void <init>(java.lang.String,java.lang.Object,int)>($r42, r40, 2);
        r34 = $r41;
        goto label13;

     label12:
        $r43 = new org.apache.naming.NamingEntry;
        $r44 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        specialinvoke $r43.<org.apache.naming.NamingEntry: void <init>(java.lang.String,java.lang.Object,int)>($r44, r5, 0);
        r34 = $r43;

     label13:
        $r45 = r0.<org.apache.naming.NamingContext: java.util.HashMap bindings>;
        $r46 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(0);
        virtualinvoke $r45.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, r34);

     label14:
        return;
    }

    protected boolean isWritable()
    {
        org.apache.naming.NamingContext r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.naming.NamingContext;
        $r1 = r0.<org.apache.naming.NamingContext: java.lang.String name>;
        $z0 = staticinvoke <org.apache.naming.ContextAccessController: boolean isWritable(java.lang.Object)>($r1);
        return $z0;
    }

    protected boolean checkWritable() throws javax.naming.NamingException
    {
        org.apache.naming.NamingContext r0;
        org.apache.naming.StringManager $r1;
        boolean $z0, $z1;
        javax.naming.OperationNotSupportedException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.naming.NamingContext;
        $z0 = virtualinvoke r0.<org.apache.naming.NamingContext: boolean isWritable()>();
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $z1 = r0.<org.apache.naming.NamingContext: boolean exceptionOnFailedWrite>;
        if $z1 == 0 goto label1;

        $r2 = new javax.naming.OperationNotSupportedException;
        $r1 = <org.apache.naming.NamingContext: org.apache.naming.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("namingContext.readOnly");
        specialinvoke $r2.<javax.naming.OperationNotSupportedException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label1:
        return 0;
    }
}
