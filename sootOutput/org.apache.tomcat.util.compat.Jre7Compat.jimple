class org.apache.tomcat.util.compat.Jre7Compat extends org.apache.tomcat.util.compat.JreCompat
{
    private static final int RUNTIME_MAJOR_VERSION;
    private static final java.lang.reflect.Method forLanguageTagMethod;
    private static final java.lang.reflect.Constructor gzipOutputStreamConstructor;

    static void <clinit>()
    {
        java.lang.reflect.Method r0;
        java.lang.reflect.Constructor r1;
        java.lang.SecurityException r2, $r8;
        java.lang.Class $r3, $r5, $r7;
        java.lang.Class[] $r4, $r6;
        java.lang.NoSuchMethodException $r9, r10;

        r0 = null;
        r1 = null;

     label0:
        $r3 = class "java/util/Locale";
        $r4 = newarray (java.lang.Class)[1];
        $r4[0] = class "java/lang/String";
        r0 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("forLanguageTag", $r4);
        $r5 = class "java/util/zip/GZIPOutputStream";
        $r6 = newarray (java.lang.Class)[2];
        $r6[0] = class "java/io/OutputStream";
        $r7 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r6[1] = $r7;
        r1 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r6);

     label1:
        goto label4;

     label2:
        $r8 := @caughtexception;
        r2 = $r8;
        goto label4;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;

     label4:
        <org.apache.tomcat.util.compat.Jre7Compat: java.lang.reflect.Method forLanguageTagMethod> = r0;
        <org.apache.tomcat.util.compat.Jre7Compat: java.lang.reflect.Constructor gzipOutputStreamConstructor> = r1;
        return;

        catch java.lang.SecurityException from label0 to label1 with label2;
        catch java.lang.NoSuchMethodException from label0 to label1 with label3;
    }

    void <init>()
    {
        org.apache.tomcat.util.compat.Jre7Compat r0;

        r0 := @this: org.apache.tomcat.util.compat.Jre7Compat;
        specialinvoke r0.<org.apache.tomcat.util.compat.JreCompat: void <init>()>();
        return;
    }

    static boolean isSupported()
    {
        java.lang.reflect.Method $r0;

        $r0 = <org.apache.tomcat.util.compat.Jre7Compat: java.lang.reflect.Method forLanguageTagMethod>;
        if $r0 == null goto label0;

        return 1;

     label0:
        return 0;
    }

    public java.util.Locale forLanguageTag(java.lang.String)
    {
        org.apache.tomcat.util.compat.Jre7Compat r0;
        java.lang.String r1;
        java.lang.reflect.Method $r2;
        java.lang.IllegalArgumentException r3, $r7;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.util.Locale $r6;
        java.lang.IllegalAccessException $r8, r9;
        java.lang.reflect.InvocationTargetException $r10, r11;

        r0 := @this: org.apache.tomcat.util.compat.Jre7Compat;
        r1 := @parameter0: java.lang.String;

     label0:
        $r2 = <org.apache.tomcat.util.compat.Jre7Compat: java.lang.reflect.Method forLanguageTagMethod>;
        $r4 = newarray (java.lang.Object)[1];
        $r4[0] = r1;
        $r5 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);
        $r6 = (java.util.Locale) $r5;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;
        r3 = $r7;
        return null;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        return null;

     label4:
        $r10 := @caughtexception;
        r11 = $r10;
        return null;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
        catch java.lang.IllegalAccessException from label0 to label1 with label3;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label4;
    }

    public java.util.zip.GZIPOutputStream getFlushableGZipOutputStream(java.io.OutputStream)
    {
        org.apache.tomcat.util.compat.Jre7Compat r0;
        java.io.OutputStream r1;
        java.lang.reflect.Constructor $r2;
        java.lang.InstantiationException r3, $r8;
        java.lang.Object[] $r4;
        java.lang.Boolean $r5;
        java.lang.Object $r6;
        java.util.zip.GZIPOutputStream $r7;
        java.lang.UnsupportedOperationException $r9, $r12, $r15, $r18;
        java.lang.IllegalAccessException $r10, r11;
        java.lang.IllegalArgumentException $r13, r14;
        java.lang.reflect.InvocationTargetException $r16, r17;

        r0 := @this: org.apache.tomcat.util.compat.Jre7Compat;
        r1 := @parameter0: java.io.OutputStream;

     label0:
        $r2 = <org.apache.tomcat.util.compat.Jre7Compat: java.lang.reflect.Constructor gzipOutputStreamConstructor>;
        $r4 = newarray (java.lang.Object)[2];
        $r4[0] = r1;
        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;
        $r4[1] = $r5;
        $r6 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);
        $r7 = (java.util.zip.GZIPOutputStream) $r6;

     label1:
        return $r7;

     label2:
        $r8 := @caughtexception;
        r3 = $r8;
        $r9 = new java.lang.UnsupportedOperationException;
        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r3);
        throw $r9;

     label3:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = new java.lang.UnsupportedOperationException;
        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r11);
        throw $r12;

     label4:
        $r13 := @caughtexception;
        r14 = $r13;
        $r15 = new java.lang.UnsupportedOperationException;
        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r14);
        throw $r15;

     label5:
        $r16 := @caughtexception;
        r17 = $r16;
        $r18 = new java.lang.UnsupportedOperationException;
        specialinvoke $r18.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r17);
        throw $r18;

        catch java.lang.InstantiationException from label0 to label1 with label2;
        catch java.lang.IllegalAccessException from label0 to label1 with label3;
        catch java.lang.IllegalArgumentException from label0 to label1 with label4;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label5;
    }

    public int jarFileRuntimeMajorVersion()
    {
        org.apache.tomcat.util.compat.Jre7Compat r0;

        r0 := @this: org.apache.tomcat.util.compat.Jre7Compat;
        return 7;
    }

    public boolean isCommonsAnnotations1_1Available()
    {
        org.apache.tomcat.util.compat.Jre7Compat r0;

        r0 := @this: org.apache.tomcat.util.compat.Jre7Compat;
        return 1;
    }
}
