class sun.util.LocaleServiceProviderPool$NullProvider extends java.util.spi.LocaleServiceProvider
{
    private static final sun.util.LocaleServiceProviderPool$NullProvider INSTANCE;

    private void <init>()
    {
        sun.util.LocaleServiceProviderPool$NullProvider r0;

        r0 := @this: sun.util.LocaleServiceProviderPool$NullProvider;
        specialinvoke r0.<java.util.spi.LocaleServiceProvider: void <init>()>();
        return;
    }

    public java.util.Locale[] getAvailableLocales()
    {
        sun.util.LocaleServiceProviderPool$NullProvider r0;
        java.lang.RuntimeException $r1;

        r0 := @this: sun.util.LocaleServiceProviderPool$NullProvider;
        $r1 = new java.lang.RuntimeException;
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Should not get called.");
        throw $r1;
    }

    static sun.util.LocaleServiceProviderPool$NullProvider access$300()
    {
        sun.util.LocaleServiceProviderPool$NullProvider $r0;

        $r0 = <sun.util.LocaleServiceProviderPool$NullProvider: sun.util.LocaleServiceProviderPool$NullProvider INSTANCE>;
        return $r0;
    }

    static void <clinit>()
    {
        sun.util.LocaleServiceProviderPool$NullProvider $r0;

        $r0 = new sun.util.LocaleServiceProviderPool$NullProvider;
        specialinvoke $r0.<sun.util.LocaleServiceProviderPool$NullProvider: void <init>()>();
        <sun.util.LocaleServiceProviderPool$NullProvider: sun.util.LocaleServiceProviderPool$NullProvider INSTANCE> = $r0;
        return;
    }
}
