public class sun.security.x509.X509CertInfo extends java.lang.Object implements sun.security.x509.CertAttrSet
{
    public static final java.lang.String IDENT;
    public static final java.lang.String NAME;
    public static final java.lang.String VERSION;
    public static final java.lang.String SERIAL_NUMBER;
    public static final java.lang.String ALGORITHM_ID;
    public static final java.lang.String ISSUER;
    public static final java.lang.String VALIDITY;
    public static final java.lang.String SUBJECT;
    public static final java.lang.String KEY;
    public static final java.lang.String ISSUER_ID;
    public static final java.lang.String SUBJECT_ID;
    public static final java.lang.String EXTENSIONS;
    protected sun.security.x509.CertificateVersion version;
    protected sun.security.x509.CertificateSerialNumber serialNum;
    protected sun.security.x509.CertificateAlgorithmId algId;
    protected sun.security.x509.CertificateIssuerName issuer;
    protected sun.security.x509.CertificateValidity interval;
    protected sun.security.x509.CertificateSubjectName subject;
    protected sun.security.x509.CertificateX509Key pubKey;
    protected sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId;
    protected sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId;
    protected sun.security.x509.CertificateExtensions extensions;
    private static final int ATTR_VERSION;
    private static final int ATTR_SERIAL;
    private static final int ATTR_ALGORITHM;
    private static final int ATTR_ISSUER;
    private static final int ATTR_VALIDITY;
    private static final int ATTR_SUBJECT;
    private static final int ATTR_KEY;
    private static final int ATTR_ISSUER_ID;
    private static final int ATTR_SUBJECT_ID;
    private static final int ATTR_EXTENSIONS;
    private byte[] rawCertInfo;
    private static final java.util.Map map;

    public void <init>()
    {
        sun.security.x509.X509CertInfo r0;
        sun.security.x509.CertificateVersion $r1;

        r0 := @this: sun.security.x509.X509CertInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new sun.security.x509.CertificateVersion;
        specialinvoke $r1.<sun.security.x509.CertificateVersion: void <init>()>();
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version> = $r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions> = null;
        r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo> = null;
        return;
    }

    public void <init>(byte[]) throws java.security.cert.CertificateParsingException
    {
        sun.security.x509.X509CertInfo r0;
        byte[] r1;
        sun.security.x509.CertificateVersion $r2;
        sun.security.util.DerValue r3, $r5;
        java.security.cert.CertificateParsingException r4, $r8;
        java.io.IOException $r6, r7;
        java.lang.String $r9;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new sun.security.x509.CertificateVersion;
        specialinvoke $r2.<sun.security.x509.CertificateVersion: void <init>()>();
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version> = $r2;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions> = null;
        r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo> = null;

     label0:
        $r5 = new sun.security.util.DerValue;
        specialinvoke $r5.<sun.security.util.DerValue: void <init>(byte[])>(r1);
        r3 = $r5;
        specialinvoke r0.<sun.security.x509.X509CertInfo: void parse(sun.security.util.DerValue)>(r3);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r7 = $r6;
        $r8 = new java.security.cert.CertificateParsingException;
        $r9 = virtualinvoke r7.<java.io.IOException: java.lang.String toString()>();
        specialinvoke $r8.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r9);
        r4 = $r8;
        virtualinvoke r4.<java.security.cert.CertificateParsingException: java.lang.Throwable initCause(java.lang.Throwable)>(r7);
        throw r4;

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void <init>(sun.security.util.DerValue) throws java.security.cert.CertificateParsingException
    {
        sun.security.x509.X509CertInfo r0;
        sun.security.util.DerValue r1;
        sun.security.x509.CertificateVersion $r2;
        java.io.IOException r3, $r5;
        java.security.cert.CertificateParsingException r4, $r6;
        java.lang.String $r7;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new sun.security.x509.CertificateVersion;
        specialinvoke $r2.<sun.security.x509.CertificateVersion: void <init>()>();
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version> = $r2;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId> = null;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions> = null;
        r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo> = null;

     label0:
        specialinvoke r0.<sun.security.x509.X509CertInfo: void parse(sun.security.util.DerValue)>(r1);

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = new java.security.cert.CertificateParsingException;
        $r7 = virtualinvoke r3.<java.io.IOException: java.lang.String toString()>();
        specialinvoke $r6.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r7);
        r4 = $r6;
        virtualinvoke r4.<java.security.cert.CertificateParsingException: java.lang.Throwable initCause(java.lang.Throwable)>(r3);
        throw r4;

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void encode(java.io.OutputStream) throws java.security.cert.CertificateException, java.io.IOException
    {
        sun.security.x509.X509CertInfo r0;
        java.io.OutputStream r1;
        sun.security.util.DerOutputStream r2, $r4;
        byte[] $r3, $r5, $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.io.OutputStream;
        $r3 = r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        if $r3 != null goto label0;

        $r4 = new sun.security.util.DerOutputStream;
        specialinvoke $r4.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r4;
        specialinvoke r0.<sun.security.x509.X509CertInfo: void emit(sun.security.util.DerOutputStream)>(r2);
        $r5 = virtualinvoke r2.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo> = $r5;

     label0:
        $r6 = r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();
        $r8 = (byte[]) $r7;
        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r8);
        return;
    }

    public java.util.Enumeration getElements()
    {
        sun.security.x509.X509CertInfo r0;
        sun.security.x509.AttributeNameEnumeration $r1, r2;
        java.util.Enumeration $r3;

        r0 := @this: sun.security.x509.X509CertInfo;
        $r1 = new sun.security.x509.AttributeNameEnumeration;
        specialinvoke $r1.<sun.security.x509.AttributeNameEnumeration: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("version");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("serialNumber");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("algorithmID");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("issuer");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("validity");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("subject");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("key");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("issuerID");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("subjectID");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("extensions");
        $r3 = virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: java.util.Enumeration elements()>();
        return $r3;
    }

    public java.lang.String getName()
    {
        sun.security.x509.X509CertInfo r0;

        r0 := @this: sun.security.x509.X509CertInfo;
        return "info";
    }

    public byte[] getEncodedInfo() throws java.security.cert.CertificateEncodingException
    {
        sun.security.x509.X509CertInfo r0;
        sun.security.util.DerOutputStream r1, $r3;
        byte[] $r2, $r4, $r5, $r7;
        java.lang.Object $r6;
        java.io.IOException $r8, r9;
        java.security.cert.CertificateEncodingException $r10, $r14;
        java.lang.String $r11, $r15;
        java.security.cert.CertificateException $r12, r13;

        r0 := @this: sun.security.x509.X509CertInfo;

     label0:
        $r2 = r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        if $r2 != null goto label1;

        $r3 = new sun.security.util.DerOutputStream;
        specialinvoke $r3.<sun.security.util.DerOutputStream: void <init>()>();
        r1 = $r3;
        specialinvoke r0.<sun.security.x509.X509CertInfo: void emit(sun.security.util.DerOutputStream)>(r1);
        $r4 = virtualinvoke r1.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo> = $r4;

     label1:
        $r5 = r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Object clone()>();
        $r7 = (byte[]) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.security.cert.CertificateEncodingException;
        $r11 = virtualinvoke r9.<java.io.IOException: java.lang.String toString()>();
        specialinvoke $r10.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r11);
        throw $r10;

     label4:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new java.security.cert.CertificateEncodingException;
        $r15 = virtualinvoke r13.<java.security.cert.CertificateException: java.lang.String toString()>();
        specialinvoke $r14.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r15);
        throw $r14;

        catch java.io.IOException from label0 to label2 with label3;
        catch java.security.cert.CertificateException from label0 to label2 with label4;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.x509.X509CertInfo r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.security.x509.X509CertInfo;
        if $z0 == 0 goto label0;

        $r2 = (sun.security.x509.X509CertInfo) r1;
        $z1 = virtualinvoke r0.<sun.security.x509.X509CertInfo: boolean equals(sun.security.x509.X509CertInfo)>($r2);
        return $z1;

     label0:
        return 0;
    }

    public boolean equals(sun.security.x509.X509CertInfo)
    {
        sun.security.x509.X509CertInfo r0, r1;
        int i0, $i1, $i2, $i3;
        byte[] $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b4, $b5;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: sun.security.x509.X509CertInfo;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $r2 = r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        if $r2 == null goto label1;

        $r3 = r1.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        if $r3 != null goto label2;

     label1:
        return 0;

     label2:
        $r4 = r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        $i1 = lengthof $r4;
        $r5 = r1.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        $i2 = lengthof $r5;
        if $i1 == $i2 goto label3;

        return 0;

     label3:
        i0 = 0;

     label4:
        $r6 = r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        $i3 = lengthof $r6;
        if i0 >= $i3 goto label6;

        $r7 = r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        $b4 = $r7[i0];
        $r8 = r1.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        $b5 = $r8[i0];
        if $b4 == $b5 goto label5;

        return 0;

     label5:
        i0 = i0 + 1;
        goto label4;

     label6:
        return 1;
    }

    public int hashCode()
    {
        sun.security.x509.X509CertInfo r0;
        int i0, i1, $i2, $i4;
        byte[] $r1, $r2;
        byte $b3;

        r0 := @this: sun.security.x509.X509CertInfo;
        i0 = 0;
        i1 = 1;

     label0:
        $r1 = r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        $i2 = lengthof $r1;
        if i1 >= $i2 goto label1;

        $r2 = r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo>;
        $b3 = $r2[i1];
        $i4 = $b3 * i1;
        i0 = i0 + $i4;
        i1 = i1 + 1;
        goto label0;

     label1:
        return i0;
    }

    public java.lang.String toString()
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.StringBuilder r1, $r15, $r17, $r18, $r21, $r22, $r25, $r26, $r29, $r30, $r33, $r34, $r37, $r38, $r41, $r42, $r45, $r46, $r49, $r50, $r53, $r54, $r57, $r58, $r61, $r62, $r65, $r66, $r69, $r70, $r74, $r75, $r78, $r79, $r83, $r84, $r87, $r88, $r93, $r94, $r95, $r98, $r99, $r100, $r101, $r112, $r113, $r115, $r116, $r126, $r127, $r128, $r135, $r136, $r137, $r138;
        java.util.Collection r2, $r131;
        java.lang.Object[] r3;
        int i0, $i1, $i2, $i3, $i4, i5, $i6;
        sun.security.x509.Extension r4, r134;
        byte[] r5, r110;
        sun.security.util.DerOutputStream r6, $r109;
        sun.misc.HexDumpEncoder r7, $r111;
        sun.security.x509.CertificateSubjectName $r8, $r27;
        sun.security.x509.CertificateX509Key $r9, $r43;
        sun.security.x509.CertificateValidity $r10, $r51;
        sun.security.x509.CertificateIssuerName $r11, $r59;
        sun.security.x509.CertificateAlgorithmId $r12, $r35;
        sun.security.x509.CertificateSerialNumber $r13, $r67;
        java.lang.NullPointerException $r14;
        sun.security.x509.CertificateVersion $r19;
        java.lang.String $r20, $r23, $r28, $r31, $r36, $r39, $r44, $r47, $r52, $r55, $r60, $r63, $r68, $r71, $r77, $r80, $r86, $r89, $r96, $r102, $r107, $r114, $r117, $r119, $r129, $r139, $r143;
        sun.security.x509.CertificateIssuerUniqueIdentity $r73, $r76;
        sun.security.x509.CertificateSubjectUniqueIdentity $r82, $r85;
        sun.security.x509.CertificateExtensions $r91, $r92, $r124;
        java.lang.Object $r104, $r133;
        sun.security.util.ObjectIdentifier $r105;
        java.lang.Class $r106;
        java.lang.Exception $r121, r122;
        java.util.Map r125;
        boolean $z0, $z1;
        java.util.Iterator r132;

        r0 := @this: sun.security.x509.X509CertInfo;
        $r8 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject>;
        if $r8 == null goto label0;

        $r9 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey>;
        if $r9 == null goto label0;

        $r10 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval>;
        if $r10 == null goto label0;

        $r11 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer>;
        if $r11 == null goto label0;

        $r12 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId>;
        if $r12 == null goto label0;

        $r13 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum>;
        if $r13 != null goto label1;

     label0:
        $r14 = new java.lang.NullPointerException;
        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("X.509 cert is incomplete");
        throw $r14;

     label1:
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        r1 = $r15;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\n");
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");
        $r19 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        $r20 = virtualinvoke $r19.<sun.security.x509.CertificateVersion: java.lang.String toString()>();
        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Subject: ");
        $r27 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject>;
        $r28 = virtualinvoke $r27.<sun.security.x509.CertificateSubjectName: java.lang.String toString()>();
        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Signature Algorithm: ");
        $r35 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId>;
        $r36 = virtualinvoke $r35.<sun.security.x509.CertificateAlgorithmId: java.lang.String toString()>();
        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);
        $r41 = new java.lang.StringBuilder;
        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Key:  ");
        $r43 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey>;
        $r44 = virtualinvoke $r43.<sun.security.x509.CertificateX509Key: java.lang.String toString()>();
        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);
        $r49 = new java.lang.StringBuilder;
        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");
        $r51 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval>;
        $r52 = virtualinvoke $r51.<sun.security.x509.CertificateValidity: java.lang.String toString()>();
        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);
        $r57 = new java.lang.StringBuilder;
        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Issuer: ");
        $r59 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer>;
        $r60 = virtualinvoke $r59.<sun.security.x509.CertificateIssuerName: java.lang.String toString()>();
        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);
        $r65 = new java.lang.StringBuilder;
        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");
        $r67 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum>;
        $r68 = virtualinvoke $r67.<sun.security.x509.CertificateSerialNumber: java.lang.String toString()>();
        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);
        $r73 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId>;
        if $r73 == null goto label2;

        $r74 = new java.lang.StringBuilder;
        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();
        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Issuer Id:\n");
        $r76 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId>;
        $r77 = virtualinvoke $r76.<sun.security.x509.CertificateIssuerUniqueIdentity: java.lang.String toString()>();
        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);
        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

     label2:
        $r82 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId>;
        if $r82 == null goto label3;

        $r83 = new java.lang.StringBuilder;
        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Subject Id:\n");
        $r85 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId>;
        $r86 = virtualinvoke $r85.<sun.security.x509.CertificateSubjectUniqueIdentity: java.lang.String toString()>();
        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);
        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

     label3:
        $r91 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        if $r91 == null goto label13;

        $r92 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        r2 = virtualinvoke $r92.<sun.security.x509.CertificateExtensions: java.util.Collection getAllExtensions()>();
        r3 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray()>();
        $r93 = new java.lang.StringBuilder;
        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();
        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nCertificate Extensions: ");
        $i1 = lengthof r3;
        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);
        i0 = 0;

     label4:
        $i2 = lengthof r3;
        if i0 >= $i2 goto label11;

        $r98 = new java.lang.StringBuilder;
        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();
        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n[");
        $i3 = i0 + 1;
        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");
        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);
        $r104 = r3[i0];
        r4 = (sun.security.x509.Extension) $r104;

     label5:
        $r105 = virtualinvoke r4.<sun.security.x509.Extension: sun.security.util.ObjectIdentifier getExtensionId()>();
        $r106 = staticinvoke <sun.security.x509.OIDMap: java.lang.Class getClass(sun.security.util.ObjectIdentifier)>($r105);
        if $r106 != null goto label7;

        $r107 = virtualinvoke r4.<sun.security.x509.Extension: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107);
        r5 = virtualinvoke r4.<sun.security.x509.Extension: byte[] getExtensionValue()>();
        if r5 == null goto label6;

        $r109 = new sun.security.util.DerOutputStream;
        specialinvoke $r109.<sun.security.util.DerOutputStream: void <init>()>();
        r6 = $r109;
        virtualinvoke r6.<sun.security.util.DerOutputStream: void putOctetString(byte[])>(r5);
        r110 = virtualinvoke r6.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        $r111 = new sun.misc.HexDumpEncoder;
        specialinvoke $r111.<sun.misc.HexDumpEncoder: void <init>()>();
        r7 = $r111;
        $r112 = new java.lang.StringBuilder;
        specialinvoke $r112.<java.lang.StringBuilder: void <init>()>();
        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extension unknown: DER encoded OCTET string =\n");
        $r114 = virtualinvoke r7.<sun.misc.HexDumpEncoder: java.lang.String encodeBuffer(byte[])>(r110);
        $r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114);
        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117);

     label6:
        goto label8;

     label7:
        $r119 = virtualinvoke r4.<sun.security.x509.Extension: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r119);

     label8:
        goto label10;

     label9:
        $r121 := @caughtexception;
        r122 = $r121;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Error parsing this extension");

     label10:
        i0 = i0 + 1;
        goto label4;

     label11:
        $r124 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        r125 = virtualinvoke $r124.<sun.security.x509.CertificateExtensions: java.util.Map getUnparseableExtensions()>();
        $z0 = interfaceinvoke r125.<java.util.Map: boolean isEmpty()>();
        if $z0 != 0 goto label13;

        $r126 = new java.lang.StringBuilder;
        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();
        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nUnparseable certificate extensions: ");
        $i4 = interfaceinvoke r125.<java.util.Map: int size()>();
        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);
        i5 = 1;
        $r131 = interfaceinvoke r125.<java.util.Map: java.util.Collection values()>();
        r132 = interfaceinvoke $r131.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke r132.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label13;

        $r133 = interfaceinvoke r132.<java.util.Iterator: java.lang.Object next()>();
        r134 = (sun.security.x509.Extension) $r133;
        $r135 = new java.lang.StringBuilder;
        specialinvoke $r135.<java.lang.StringBuilder: void <init>()>();
        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n[");
        $i6 = i5;
        i5 = i5 + 1;
        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");
        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r139);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r134);
        goto label12;

     label13:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n]");
        $r143 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r143;

        catch java.lang.Exception from label5 to label8 with label9;
    }

    public void set(java.lang.String, java.lang.Object) throws java.security.cert.CertificateException, java.io.IOException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.String r1, r5, $r6, $r11;
        java.lang.Object r2;
        sun.security.x509.X509AttributeName $r3, r4;
        int i0;
        java.security.cert.CertificateException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        sun.security.x509.CertificateVersion $r12;
        sun.security.x509.CertificateSerialNumber $r13;
        sun.security.x509.CertificateAlgorithmId $r14;
        sun.security.x509.CertificateIssuerName $r15;
        sun.security.x509.CertificateValidity $r16;
        sun.security.x509.CertificateSubjectName $r17;
        sun.security.x509.CertificateX509Key $r18;
        sun.security.x509.CertificateIssuerUniqueIdentity $r19;
        sun.security.x509.CertificateSubjectUniqueIdentity $r20;
        sun.security.x509.CertificateExtensions $r21, $r22, $r23;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = new sun.security.x509.X509AttributeName;
        specialinvoke $r3.<sun.security.x509.X509AttributeName: void <init>(java.lang.String)>(r1);
        r4 = $r3;
        $r6 = virtualinvoke r4.<sun.security.x509.X509AttributeName: java.lang.String getPrefix()>();
        i0 = specialinvoke r0.<sun.security.x509.X509CertInfo: int attributeMap(java.lang.String)>($r6);
        if i0 != 0 goto label0;

        $r7 = new java.security.cert.CertificateException;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute name not recognized: ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r11);
        throw $r7;

     label0:
        r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo> = null;
        r5 = virtualinvoke r4.<sun.security.x509.X509AttributeName: java.lang.String getSuffix()>();
        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label5;
            case 4: goto label7;
            case 5: goto label9;
            case 6: goto label11;
            case 7: goto label13;
            case 8: goto label15;
            case 9: goto label17;
            case 10: goto label19;
            default: goto label22;
        };

     label1:
        if r5 != null goto label2;

        specialinvoke r0.<sun.security.x509.X509CertInfo: void setVersion(java.lang.Object)>(r2);
        goto label22;

     label2:
        $r12 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        virtualinvoke $r12.<sun.security.x509.CertificateVersion: void set(java.lang.String,java.lang.Object)>(r5, r2);
        goto label22;

     label3:
        if r5 != null goto label4;

        specialinvoke r0.<sun.security.x509.X509CertInfo: void setSerialNumber(java.lang.Object)>(r2);
        goto label22;

     label4:
        $r13 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum>;
        virtualinvoke $r13.<sun.security.x509.CertificateSerialNumber: void set(java.lang.String,java.lang.Object)>(r5, r2);
        goto label22;

     label5:
        if r5 != null goto label6;

        specialinvoke r0.<sun.security.x509.X509CertInfo: void setAlgorithmId(java.lang.Object)>(r2);
        goto label22;

     label6:
        $r14 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId>;
        virtualinvoke $r14.<sun.security.x509.CertificateAlgorithmId: void set(java.lang.String,java.lang.Object)>(r5, r2);
        goto label22;

     label7:
        if r5 != null goto label8;

        specialinvoke r0.<sun.security.x509.X509CertInfo: void setIssuer(java.lang.Object)>(r2);
        goto label22;

     label8:
        $r15 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer>;
        virtualinvoke $r15.<sun.security.x509.CertificateIssuerName: void set(java.lang.String,java.lang.Object)>(r5, r2);
        goto label22;

     label9:
        if r5 != null goto label10;

        specialinvoke r0.<sun.security.x509.X509CertInfo: void setValidity(java.lang.Object)>(r2);
        goto label22;

     label10:
        $r16 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval>;
        virtualinvoke $r16.<sun.security.x509.CertificateValidity: void set(java.lang.String,java.lang.Object)>(r5, r2);
        goto label22;

     label11:
        if r5 != null goto label12;

        specialinvoke r0.<sun.security.x509.X509CertInfo: void setSubject(java.lang.Object)>(r2);
        goto label22;

     label12:
        $r17 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject>;
        virtualinvoke $r17.<sun.security.x509.CertificateSubjectName: void set(java.lang.String,java.lang.Object)>(r5, r2);
        goto label22;

     label13:
        if r5 != null goto label14;

        specialinvoke r0.<sun.security.x509.X509CertInfo: void setKey(java.lang.Object)>(r2);
        goto label22;

     label14:
        $r18 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey>;
        virtualinvoke $r18.<sun.security.x509.CertificateX509Key: void set(java.lang.String,java.lang.Object)>(r5, r2);
        goto label22;

     label15:
        if r5 != null goto label16;

        specialinvoke r0.<sun.security.x509.X509CertInfo: void setIssuerUniqueId(java.lang.Object)>(r2);
        goto label22;

     label16:
        $r19 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId>;
        virtualinvoke $r19.<sun.security.x509.CertificateIssuerUniqueIdentity: void set(java.lang.String,java.lang.Object)>(r5, r2);
        goto label22;

     label17:
        if r5 != null goto label18;

        specialinvoke r0.<sun.security.x509.X509CertInfo: void setSubjectUniqueId(java.lang.Object)>(r2);
        goto label22;

     label18:
        $r20 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId>;
        virtualinvoke $r20.<sun.security.x509.CertificateSubjectUniqueIdentity: void set(java.lang.String,java.lang.Object)>(r5, r2);
        goto label22;

     label19:
        if r5 != null goto label20;

        specialinvoke r0.<sun.security.x509.X509CertInfo: void setExtensions(java.lang.Object)>(r2);
        goto label22;

     label20:
        $r21 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        if $r21 != null goto label21;

        $r22 = new sun.security.x509.CertificateExtensions;
        specialinvoke $r22.<sun.security.x509.CertificateExtensions: void <init>()>();
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions> = $r22;

     label21:
        $r23 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        virtualinvoke $r23.<sun.security.x509.CertificateExtensions: void set(java.lang.String,java.lang.Object)>(r5, r2);

     label22:
        return;
    }

    public void delete(java.lang.String) throws java.security.cert.CertificateException, java.io.IOException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.String r1, r4, $r5, $r10;
        sun.security.x509.X509AttributeName $r2, r3;
        int i0;
        java.security.cert.CertificateException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        sun.security.x509.CertificateVersion $r11;
        sun.security.x509.CertificateSerialNumber $r12;
        sun.security.x509.CertificateAlgorithmId $r13;
        sun.security.x509.CertificateIssuerName $r14;
        sun.security.x509.CertificateValidity $r15;
        sun.security.x509.CertificateSubjectName $r16;
        sun.security.x509.CertificateX509Key $r17;
        sun.security.x509.CertificateIssuerUniqueIdentity $r18;
        sun.security.x509.CertificateSubjectUniqueIdentity $r19;
        sun.security.x509.CertificateExtensions $r20, $r21;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = new sun.security.x509.X509AttributeName;
        specialinvoke $r2.<sun.security.x509.X509AttributeName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        $r5 = virtualinvoke r3.<sun.security.x509.X509AttributeName: java.lang.String getPrefix()>();
        i0 = specialinvoke r0.<sun.security.x509.X509CertInfo: int attributeMap(java.lang.String)>($r5);
        if i0 != 0 goto label0;

        $r6 = new java.security.cert.CertificateException;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute name not recognized: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label0:
        r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo> = null;
        r4 = virtualinvoke r3.<sun.security.x509.X509AttributeName: java.lang.String getSuffix()>();
        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label5;
            case 4: goto label7;
            case 5: goto label9;
            case 6: goto label11;
            case 7: goto label13;
            case 8: goto label15;
            case 9: goto label17;
            case 10: goto label19;
            default: goto label21;
        };

     label1:
        if r4 != null goto label2;

        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version> = null;
        goto label21;

     label2:
        $r11 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        virtualinvoke $r11.<sun.security.x509.CertificateVersion: void delete(java.lang.String)>(r4);
        goto label21;

     label3:
        if r4 != null goto label4;

        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum> = null;
        goto label21;

     label4:
        $r12 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum>;
        virtualinvoke $r12.<sun.security.x509.CertificateSerialNumber: void delete(java.lang.String)>(r4);
        goto label21;

     label5:
        if r4 != null goto label6;

        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId> = null;
        goto label21;

     label6:
        $r13 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId>;
        virtualinvoke $r13.<sun.security.x509.CertificateAlgorithmId: void delete(java.lang.String)>(r4);
        goto label21;

     label7:
        if r4 != null goto label8;

        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer> = null;
        goto label21;

     label8:
        $r14 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer>;
        virtualinvoke $r14.<sun.security.x509.CertificateIssuerName: void delete(java.lang.String)>(r4);
        goto label21;

     label9:
        if r4 != null goto label10;

        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval> = null;
        goto label21;

     label10:
        $r15 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval>;
        virtualinvoke $r15.<sun.security.x509.CertificateValidity: void delete(java.lang.String)>(r4);
        goto label21;

     label11:
        if r4 != null goto label12;

        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject> = null;
        goto label21;

     label12:
        $r16 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject>;
        virtualinvoke $r16.<sun.security.x509.CertificateSubjectName: void delete(java.lang.String)>(r4);
        goto label21;

     label13:
        if r4 != null goto label14;

        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey> = null;
        goto label21;

     label14:
        $r17 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey>;
        virtualinvoke $r17.<sun.security.x509.CertificateX509Key: void delete(java.lang.String)>(r4);
        goto label21;

     label15:
        if r4 != null goto label16;

        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId> = null;
        goto label21;

     label16:
        $r18 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId>;
        virtualinvoke $r18.<sun.security.x509.CertificateIssuerUniqueIdentity: void delete(java.lang.String)>(r4);
        goto label21;

     label17:
        if r4 != null goto label18;

        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId> = null;
        goto label21;

     label18:
        $r19 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId>;
        virtualinvoke $r19.<sun.security.x509.CertificateSubjectUniqueIdentity: void delete(java.lang.String)>(r4);
        goto label21;

     label19:
        if r4 != null goto label20;

        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions> = null;
        goto label21;

     label20:
        $r20 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        if $r20 == null goto label21;

        $r21 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        virtualinvoke $r21.<sun.security.x509.CertificateExtensions: void delete(java.lang.String)>(r4);

     label21:
        return;
    }

    public java.lang.Object get(java.lang.String) throws java.security.cert.CertificateException, java.io.IOException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.String r1, r4, $r5, $r10;
        sun.security.x509.X509AttributeName $r2, r3;
        int i0;
        java.security.cert.CertificateParsingException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        sun.security.x509.CertificateExtensions $r11, $r12, $r13;
        java.lang.Object $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r39, $r43;
        sun.security.x509.CertificateSubjectName $r15, $r16;
        sun.security.x509.CertificateIssuerName $r18, $r19;
        sun.security.x509.CertificateX509Key $r21, $r22;
        sun.security.x509.CertificateAlgorithmId $r24, $r25;
        sun.security.x509.CertificateValidity $r27, $r28;
        sun.security.x509.CertificateVersion $r30, $r31;
        sun.security.x509.CertificateSerialNumber $r33, $r34;
        sun.security.x509.CertificateIssuerUniqueIdentity $r36, $r37, $r38;
        sun.security.x509.CertificateSubjectUniqueIdentity $r40, $r41, $r42;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = new sun.security.x509.X509AttributeName;
        specialinvoke $r2.<sun.security.x509.X509AttributeName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        $r5 = virtualinvoke r3.<sun.security.x509.X509AttributeName: java.lang.String getPrefix()>();
        i0 = specialinvoke r0.<sun.security.x509.X509CertInfo: int attributeMap(java.lang.String)>($r5);
        if i0 != 0 goto label0;

        $r6 = new java.security.cert.CertificateParsingException;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute name not recognized: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label0:
        r4 = virtualinvoke r3.<sun.security.x509.X509AttributeName: java.lang.String getSuffix()>();
        tableswitch(i0)
        {
            case 1: goto label14;
            case 2: goto label16;
            case 3: goto label10;
            case 4: goto label6;
            case 5: goto label12;
            case 6: goto label4;
            case 7: goto label8;
            case 8: goto label18;
            case 9: goto label21;
            case 10: goto label1;
            default: goto label24;
        };

     label1:
        if r4 != null goto label2;

        $r11 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        return $r11;

     label2:
        $r12 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        if $r12 != null goto label3;

        return null;

     label3:
        $r13 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        $r14 = virtualinvoke $r13.<sun.security.x509.CertificateExtensions: java.lang.Object get(java.lang.String)>(r4);
        return $r14;

     label4:
        if r4 != null goto label5;

        $r15 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject>;
        return $r15;

     label5:
        $r16 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject>;
        $r17 = virtualinvoke $r16.<sun.security.x509.CertificateSubjectName: java.lang.Object get(java.lang.String)>(r4);
        return $r17;

     label6:
        if r4 != null goto label7;

        $r18 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer>;
        return $r18;

     label7:
        $r19 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer>;
        $r20 = virtualinvoke $r19.<sun.security.x509.CertificateIssuerName: java.lang.Object get(java.lang.String)>(r4);
        return $r20;

     label8:
        if r4 != null goto label9;

        $r21 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey>;
        return $r21;

     label9:
        $r22 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey>;
        $r23 = virtualinvoke $r22.<sun.security.x509.CertificateX509Key: java.lang.Object get(java.lang.String)>(r4);
        return $r23;

     label10:
        if r4 != null goto label11;

        $r24 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId>;
        return $r24;

     label11:
        $r25 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId>;
        $r26 = virtualinvoke $r25.<sun.security.x509.CertificateAlgorithmId: java.lang.Object get(java.lang.String)>(r4);
        return $r26;

     label12:
        if r4 != null goto label13;

        $r27 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval>;
        return $r27;

     label13:
        $r28 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval>;
        $r29 = virtualinvoke $r28.<sun.security.x509.CertificateValidity: java.lang.Object get(java.lang.String)>(r4);
        return $r29;

     label14:
        if r4 != null goto label15;

        $r30 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        return $r30;

     label15:
        $r31 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        $r32 = virtualinvoke $r31.<sun.security.x509.CertificateVersion: java.lang.Object get(java.lang.String)>(r4);
        return $r32;

     label16:
        if r4 != null goto label17;

        $r33 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum>;
        return $r33;

     label17:
        $r34 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum>;
        $r35 = virtualinvoke $r34.<sun.security.x509.CertificateSerialNumber: java.lang.Object get(java.lang.String)>(r4);
        return $r35;

     label18:
        if r4 != null goto label19;

        $r36 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId>;
        return $r36;

     label19:
        $r37 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId>;
        if $r37 != null goto label20;

        return null;

     label20:
        $r38 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId>;
        $r39 = virtualinvoke $r38.<sun.security.x509.CertificateIssuerUniqueIdentity: java.lang.Object get(java.lang.String)>(r4);
        return $r39;

     label21:
        if r4 != null goto label22;

        $r40 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId>;
        return $r40;

     label22:
        $r41 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId>;
        if $r41 != null goto label23;

        return null;

     label23:
        $r42 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId>;
        $r43 = virtualinvoke $r42.<sun.security.x509.CertificateSubjectUniqueIdentity: java.lang.Object get(java.lang.String)>(r4);
        return $r43;

     label24:
        return null;
    }

    private void parse(sun.security.util.DerValue) throws java.security.cert.CertificateParsingException, java.io.IOException
    {
        sun.security.x509.X509CertInfo r0;
        sun.security.util.DerValue r1, r3, r24;
        sun.security.util.DerInputStream r2, $r30;
        sun.security.x509.X500Name r4, r5;
        byte $b0;
        java.security.cert.CertificateParsingException $r6, $r14, $r20, $r23, $r28;
        byte[] $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        sun.security.x509.CertificateVersion $r8, $r19, $r22, $r27;
        sun.security.x509.CertificateSerialNumber $r9;
        sun.security.x509.CertificateAlgorithmId $r10;
        sun.security.x509.CertificateIssuerName $r11, $r12;
        java.lang.Object $r13, $r18;
        sun.security.x509.CertificateValidity $r15;
        sun.security.x509.CertificateSubjectName $r16, $r17, $r31;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        sun.security.x509.CertificateX509Key $r21;
        sun.security.x509.CertificateIssuerUniqueIdentity $r25;
        sun.security.x509.CertificateSubjectUniqueIdentity $r26;
        sun.security.x509.CertificateExtensions $r29, $r32;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: sun.security.util.DerValue;
        $b0 = r1.<sun.security.util.DerValue: byte tag>;
        if $b0 == 48 goto label0;

        $r6 = new java.security.cert.CertificateParsingException;
        specialinvoke $r6.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("signed fields invalid");
        throw $r6;

     label0:
        $r7 = virtualinvoke r1.<sun.security.util.DerValue: byte[] toByteArray()>();
        r0.<sun.security.x509.X509CertInfo: byte[] rawCertInfo> = $r7;
        r2 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        r3 = virtualinvoke r2.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $z0 = virtualinvoke r3.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(0);
        if $z0 == 0 goto label1;

        $r8 = new sun.security.x509.CertificateVersion;
        specialinvoke $r8.<sun.security.x509.CertificateVersion: void <init>(sun.security.util.DerValue)>(r3);
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version> = $r8;
        r3 = virtualinvoke r2.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();

     label1:
        $r9 = new sun.security.x509.CertificateSerialNumber;
        specialinvoke $r9.<sun.security.x509.CertificateSerialNumber: void <init>(sun.security.util.DerValue)>(r3);
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum> = $r9;
        $r10 = new sun.security.x509.CertificateAlgorithmId;
        specialinvoke $r10.<sun.security.x509.CertificateAlgorithmId: void <init>(sun.security.util.DerInputStream)>(r2);
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId> = $r10;
        $r11 = new sun.security.x509.CertificateIssuerName;
        specialinvoke $r11.<sun.security.x509.CertificateIssuerName: void <init>(sun.security.util.DerInputStream)>(r2);
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer> = $r11;
        $r12 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer>;
        $r13 = virtualinvoke $r12.<sun.security.x509.CertificateIssuerName: java.lang.Object get(java.lang.String)>("dname");
        r4 = (sun.security.x509.X500Name) $r13;
        $z1 = virtualinvoke r4.<sun.security.x509.X500Name: boolean isEmpty()>();
        if $z1 == 0 goto label2;

        $r14 = new java.security.cert.CertificateParsingException;
        specialinvoke $r14.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("Empty issuer DN not allowed in X509Certificates");
        throw $r14;

     label2:
        $r15 = new sun.security.x509.CertificateValidity;
        specialinvoke $r15.<sun.security.x509.CertificateValidity: void <init>(sun.security.util.DerInputStream)>(r2);
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval> = $r15;
        $r16 = new sun.security.x509.CertificateSubjectName;
        specialinvoke $r16.<sun.security.x509.CertificateSubjectName: void <init>(sun.security.util.DerInputStream)>(r2);
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject> = $r16;
        $r17 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject>;
        $r18 = virtualinvoke $r17.<sun.security.x509.CertificateSubjectName: java.lang.Object get(java.lang.String)>("dname");
        r5 = (sun.security.x509.X500Name) $r18;
        $r19 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        $i1 = virtualinvoke $r19.<sun.security.x509.CertificateVersion: int compare(int)>(0);
        if $i1 != 0 goto label3;

        $z2 = virtualinvoke r5.<sun.security.x509.X500Name: boolean isEmpty()>();
        if $z2 == 0 goto label3;

        $r20 = new java.security.cert.CertificateParsingException;
        specialinvoke $r20.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("Empty subject DN not allowed in v1 certificate");
        throw $r20;

     label3:
        $r21 = new sun.security.x509.CertificateX509Key;
        specialinvoke $r21.<sun.security.x509.CertificateX509Key: void <init>(sun.security.util.DerInputStream)>(r2);
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey> = $r21;
        $i2 = virtualinvoke r2.<sun.security.util.DerInputStream: int available()>();
        if $i2 == 0 goto label4;

        $r22 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        $i3 = virtualinvoke $r22.<sun.security.x509.CertificateVersion: int compare(int)>(0);
        if $i3 != 0 goto label5;

        $r23 = new java.security.cert.CertificateParsingException;
        specialinvoke $r23.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("no more data allowed for version 1 certificate");
        throw $r23;

     label4:
        return;

     label5:
        r24 = virtualinvoke r2.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $z3 = virtualinvoke r24.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(1);
        if $z3 == 0 goto label7;

        $r25 = new sun.security.x509.CertificateIssuerUniqueIdentity;
        specialinvoke $r25.<sun.security.x509.CertificateIssuerUniqueIdentity: void <init>(sun.security.util.DerValue)>(r24);
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId> = $r25;
        $i4 = virtualinvoke r2.<sun.security.util.DerInputStream: int available()>();
        if $i4 != 0 goto label6;

        return;

     label6:
        r24 = virtualinvoke r2.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();

     label7:
        $z4 = virtualinvoke r24.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(2);
        if $z4 == 0 goto label9;

        $r26 = new sun.security.x509.CertificateSubjectUniqueIdentity;
        specialinvoke $r26.<sun.security.x509.CertificateSubjectUniqueIdentity: void <init>(sun.security.util.DerValue)>(r24);
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId> = $r26;
        $i5 = virtualinvoke r2.<sun.security.util.DerInputStream: int available()>();
        if $i5 != 0 goto label8;

        return;

     label8:
        r24 = virtualinvoke r2.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();

     label9:
        $r27 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        $i6 = virtualinvoke $r27.<sun.security.x509.CertificateVersion: int compare(int)>(2);
        if $i6 == 0 goto label10;

        $r28 = new java.security.cert.CertificateParsingException;
        specialinvoke $r28.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("Extensions not allowed in v2 certificate");
        throw $r28;

     label10:
        $z5 = virtualinvoke r24.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z5 == 0 goto label11;

        $z6 = virtualinvoke r24.<sun.security.util.DerValue: boolean isContextSpecific(byte)>(3);
        if $z6 == 0 goto label11;

        $r29 = new sun.security.x509.CertificateExtensions;
        $r30 = r24.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        specialinvoke $r29.<sun.security.x509.CertificateExtensions: void <init>(sun.security.util.DerInputStream)>($r30);
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions> = $r29;

     label11:
        $r31 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject>;
        $r32 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        specialinvoke r0.<sun.security.x509.X509CertInfo: void verifyCert(sun.security.x509.CertificateSubjectName,sun.security.x509.CertificateExtensions)>($r31, $r32);
        return;
    }

    private void verifyCert(sun.security.x509.CertificateSubjectName, sun.security.x509.CertificateExtensions) throws java.security.cert.CertificateParsingException, java.io.IOException
    {
        sun.security.x509.X509CertInfo r0;
        sun.security.x509.CertificateSubjectName r1;
        sun.security.x509.CertificateExtensions r2;
        sun.security.x509.X500Name r3;
        null_type n0, n1, n2;
        java.io.IOException r4, $r11;
        java.lang.Object $r5, $r7, $r9;
        boolean $z0, $z1, $z2;
        java.security.cert.CertificateParsingException $r6, $r12, $r13, $r14;
        sun.security.x509.SubjectAlternativeNameExtension r8;
        sun.security.x509.GeneralNames r10;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: sun.security.x509.CertificateSubjectName;
        r2 := @parameter1: sun.security.x509.CertificateExtensions;
        $r5 = virtualinvoke r1.<sun.security.x509.CertificateSubjectName: java.lang.Object get(java.lang.String)>("dname");
        r3 = (sun.security.x509.X500Name) $r5;
        $z0 = virtualinvoke r3.<sun.security.x509.X500Name: boolean isEmpty()>();
        if $z0 == 0 goto label7;

        if r2 != null goto label0;

        $r6 = new java.security.cert.CertificateParsingException;
        specialinvoke $r6.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("X.509 Certificate is incomplete: subject field is empty, and certificate has no extensions");
        throw $r6;

     label0:
        n0 = null;
        n1 = null;
        n2 = null;

     label1:
        $r7 = virtualinvoke r2.<sun.security.x509.CertificateExtensions: java.lang.Object get(java.lang.String)>("SubjectAlternativeName");
        r8 = (sun.security.x509.SubjectAlternativeNameExtension) $r7;
        $r9 = virtualinvoke r8.<sun.security.x509.SubjectAlternativeNameExtension: java.lang.Object get(java.lang.String)>("subject_name");
        r10 = (sun.security.x509.GeneralNames) $r9;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;
        r4 = $r11;
        $r12 = new java.security.cert.CertificateParsingException;
        specialinvoke $r12.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("X.509 Certificate is incomplete: subject field is empty, and SubjectAlternativeName extension is absent");
        throw $r12;

     label4:
        if r10 == null goto label5;

        $z1 = virtualinvoke r10.<sun.security.x509.GeneralNames: boolean isEmpty()>();
        if $z1 == 0 goto label6;

     label5:
        $r13 = new java.security.cert.CertificateParsingException;
        specialinvoke $r13.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("X.509 Certificate is incomplete: subject field is empty, and SubjectAlternativeName extension is empty");
        throw $r13;

     label6:
        $z2 = virtualinvoke r8.<sun.security.x509.SubjectAlternativeNameExtension: boolean isCritical()>();
        if $z2 != 0 goto label7;

        $r14 = new java.security.cert.CertificateParsingException;
        specialinvoke $r14.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("X.509 Certificate is incomplete: SubjectAlternativeName extension MUST be marked critical when subject field is empty");
        throw $r14;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void emit(sun.security.util.DerOutputStream) throws java.security.cert.CertificateException, java.io.IOException
    {
        sun.security.x509.X509CertInfo r0;
        sun.security.util.DerOutputStream r1, $r2, r3;
        sun.security.x509.CertificateVersion $r4, $r7, $r13;
        sun.security.x509.CertificateSerialNumber $r5;
        sun.security.x509.CertificateAlgorithmId $r6;
        int $i0, $i1;
        sun.security.x509.CertificateIssuerName $r8, $r11;
        java.lang.String $r9, $r15;
        java.security.cert.CertificateParsingException $r10, $r16;
        sun.security.x509.CertificateValidity $r12;
        sun.security.x509.CertificateSubjectName $r14, $r17;
        sun.security.x509.CertificateX509Key $r18;
        sun.security.x509.CertificateIssuerUniqueIdentity $r19, $r20;
        sun.security.x509.CertificateSubjectUniqueIdentity $r21, $r22;
        sun.security.x509.CertificateExtensions $r23, $r24;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: sun.security.util.DerOutputStream;
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        $r4 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        virtualinvoke $r4.<sun.security.x509.CertificateVersion: void encode(java.io.OutputStream)>(r3);
        $r5 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum>;
        virtualinvoke $r5.<sun.security.x509.CertificateSerialNumber: void encode(java.io.OutputStream)>(r3);
        $r6 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId>;
        virtualinvoke $r6.<sun.security.x509.CertificateAlgorithmId: void encode(java.io.OutputStream)>(r3);
        $r7 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        $i0 = virtualinvoke $r7.<sun.security.x509.CertificateVersion: int compare(int)>(0);
        if $i0 != 0 goto label0;

        $r8 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer>;
        $r9 = virtualinvoke $r8.<sun.security.x509.CertificateIssuerName: java.lang.String toString()>();
        if $r9 != null goto label0;

        $r10 = new java.security.cert.CertificateParsingException;
        specialinvoke $r10.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("Null issuer DN not allowed in v1 certificate");
        throw $r10;

     label0:
        $r11 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer>;
        virtualinvoke $r11.<sun.security.x509.CertificateIssuerName: void encode(java.io.OutputStream)>(r3);
        $r12 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval>;
        virtualinvoke $r12.<sun.security.x509.CertificateValidity: void encode(java.io.OutputStream)>(r3);
        $r13 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        $i1 = virtualinvoke $r13.<sun.security.x509.CertificateVersion: int compare(int)>(0);
        if $i1 != 0 goto label1;

        $r14 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject>;
        $r15 = virtualinvoke $r14.<sun.security.x509.CertificateSubjectName: java.lang.String toString()>();
        if $r15 != null goto label1;

        $r16 = new java.security.cert.CertificateParsingException;
        specialinvoke $r16.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("Null subject DN not allowed in v1 certificate");
        throw $r16;

     label1:
        $r17 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject>;
        virtualinvoke $r17.<sun.security.x509.CertificateSubjectName: void encode(java.io.OutputStream)>(r3);
        $r18 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey>;
        virtualinvoke $r18.<sun.security.x509.CertificateX509Key: void encode(java.io.OutputStream)>(r3);
        $r19 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId>;
        if $r19 == null goto label2;

        $r20 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId>;
        virtualinvoke $r20.<sun.security.x509.CertificateIssuerUniqueIdentity: void encode(java.io.OutputStream)>(r3);

     label2:
        $r21 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId>;
        if $r21 == null goto label3;

        $r22 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId>;
        virtualinvoke $r22.<sun.security.x509.CertificateSubjectUniqueIdentity: void encode(java.io.OutputStream)>(r3);

     label3:
        $r23 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        if $r23 == null goto label4;

        $r24 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions>;
        virtualinvoke $r24.<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream)>(r3);

     label4:
        virtualinvoke r1.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r3);
        return;
    }

    private int attributeMap(java.lang.String)
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Integer r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (java.lang.Integer) $r4;
        if r3 != null goto label0;

        return 0;

     label0:
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
        return $i0;
    }

    private void setVersion(java.lang.Object) throws java.security.cert.CertificateException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.Object r1;
        boolean $z0;
        java.security.cert.CertificateException $r2;
        sun.security.x509.CertificateVersion $r3;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.security.x509.CertificateVersion;
        if $z0 != 0 goto label0;

        $r2 = new java.security.cert.CertificateException;
        specialinvoke $r2.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Version class type invalid.");
        throw $r2;

     label0:
        $r3 = (sun.security.x509.CertificateVersion) r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version> = $r3;
        return;
    }

    private void setSerialNumber(java.lang.Object) throws java.security.cert.CertificateException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.Object r1;
        boolean $z0;
        java.security.cert.CertificateException $r2;
        sun.security.x509.CertificateSerialNumber $r3;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.security.x509.CertificateSerialNumber;
        if $z0 != 0 goto label0;

        $r2 = new java.security.cert.CertificateException;
        specialinvoke $r2.<java.security.cert.CertificateException: void <init>(java.lang.String)>("SerialNumber class type invalid.");
        throw $r2;

     label0:
        $r3 = (sun.security.x509.CertificateSerialNumber) r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSerialNumber serialNum> = $r3;
        return;
    }

    private void setAlgorithmId(java.lang.Object) throws java.security.cert.CertificateException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.Object r1;
        boolean $z0;
        java.security.cert.CertificateException $r2;
        sun.security.x509.CertificateAlgorithmId $r3;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.security.x509.CertificateAlgorithmId;
        if $z0 != 0 goto label0;

        $r2 = new java.security.cert.CertificateException;
        specialinvoke $r2.<java.security.cert.CertificateException: void <init>(java.lang.String)>("AlgorithmId class type invalid.");
        throw $r2;

     label0:
        $r3 = (sun.security.x509.CertificateAlgorithmId) r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateAlgorithmId algId> = $r3;
        return;
    }

    private void setIssuer(java.lang.Object) throws java.security.cert.CertificateException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.Object r1;
        boolean $z0;
        java.security.cert.CertificateException $r2;
        sun.security.x509.CertificateIssuerName $r3;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.security.x509.CertificateIssuerName;
        if $z0 != 0 goto label0;

        $r2 = new java.security.cert.CertificateException;
        specialinvoke $r2.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Issuer class type invalid.");
        throw $r2;

     label0:
        $r3 = (sun.security.x509.CertificateIssuerName) r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerName issuer> = $r3;
        return;
    }

    private void setValidity(java.lang.Object) throws java.security.cert.CertificateException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.Object r1;
        boolean $z0;
        java.security.cert.CertificateException $r2;
        sun.security.x509.CertificateValidity $r3;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.security.x509.CertificateValidity;
        if $z0 != 0 goto label0;

        $r2 = new java.security.cert.CertificateException;
        specialinvoke $r2.<java.security.cert.CertificateException: void <init>(java.lang.String)>("CertificateValidity class type invalid.");
        throw $r2;

     label0:
        $r3 = (sun.security.x509.CertificateValidity) r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateValidity interval> = $r3;
        return;
    }

    private void setSubject(java.lang.Object) throws java.security.cert.CertificateException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.Object r1;
        boolean $z0;
        java.security.cert.CertificateException $r2;
        sun.security.x509.CertificateSubjectName $r3;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.security.x509.CertificateSubjectName;
        if $z0 != 0 goto label0;

        $r2 = new java.security.cert.CertificateException;
        specialinvoke $r2.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Subject class type invalid.");
        throw $r2;

     label0:
        $r3 = (sun.security.x509.CertificateSubjectName) r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectName subject> = $r3;
        return;
    }

    private void setKey(java.lang.Object) throws java.security.cert.CertificateException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.Object r1;
        boolean $z0;
        java.security.cert.CertificateException $r2;
        sun.security.x509.CertificateX509Key $r3;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.security.x509.CertificateX509Key;
        if $z0 != 0 goto label0;

        $r2 = new java.security.cert.CertificateException;
        specialinvoke $r2.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Key class type invalid.");
        throw $r2;

     label0:
        $r3 = (sun.security.x509.CertificateX509Key) r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateX509Key pubKey> = $r3;
        return;
    }

    private void setIssuerUniqueId(java.lang.Object) throws java.security.cert.CertificateException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.Object r1;
        sun.security.x509.CertificateVersion $r2;
        int $i0;
        java.security.cert.CertificateException $r3, $r4;
        boolean $z0;
        sun.security.x509.CertificateIssuerUniqueIdentity $r5;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        $i0 = virtualinvoke $r2.<sun.security.x509.CertificateVersion: int compare(int)>(1);
        if $i0 >= 0 goto label0;

        $r3 = new java.security.cert.CertificateException;
        specialinvoke $r3.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Invalid version");
        throw $r3;

     label0:
        $z0 = r1 instanceof sun.security.x509.CertificateIssuerUniqueIdentity;
        if $z0 != 0 goto label1;

        $r4 = new java.security.cert.CertificateException;
        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>("IssuerUniqueId class type invalid.");
        throw $r4;

     label1:
        $r5 = (sun.security.x509.CertificateIssuerUniqueIdentity) r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId> = $r5;
        return;
    }

    private void setSubjectUniqueId(java.lang.Object) throws java.security.cert.CertificateException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.Object r1;
        sun.security.x509.CertificateVersion $r2;
        int $i0;
        java.security.cert.CertificateException $r3, $r4;
        boolean $z0;
        sun.security.x509.CertificateSubjectUniqueIdentity $r5;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        $i0 = virtualinvoke $r2.<sun.security.x509.CertificateVersion: int compare(int)>(1);
        if $i0 >= 0 goto label0;

        $r3 = new java.security.cert.CertificateException;
        specialinvoke $r3.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Invalid version");
        throw $r3;

     label0:
        $z0 = r1 instanceof sun.security.x509.CertificateSubjectUniqueIdentity;
        if $z0 != 0 goto label1;

        $r4 = new java.security.cert.CertificateException;
        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>("SubjectUniqueId class type invalid.");
        throw $r4;

     label1:
        $r5 = (sun.security.x509.CertificateSubjectUniqueIdentity) r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId> = $r5;
        return;
    }

    private void setExtensions(java.lang.Object) throws java.security.cert.CertificateException
    {
        sun.security.x509.X509CertInfo r0;
        java.lang.Object r1;
        sun.security.x509.CertificateVersion $r2;
        int $i0;
        java.security.cert.CertificateException $r3, $r4;
        boolean $z0;
        sun.security.x509.CertificateExtensions $r5;

        r0 := @this: sun.security.x509.X509CertInfo;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateVersion version>;
        $i0 = virtualinvoke $r2.<sun.security.x509.CertificateVersion: int compare(int)>(2);
        if $i0 >= 0 goto label0;

        $r3 = new java.security.cert.CertificateException;
        specialinvoke $r3.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Invalid version");
        throw $r3;

     label0:
        $z0 = r1 instanceof sun.security.x509.CertificateExtensions;
        if $z0 != 0 goto label1;

        $r4 = new java.security.cert.CertificateException;
        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Extensions class type invalid.");
        throw $r4;

     label1:
        $r5 = (sun.security.x509.CertificateExtensions) r1;
        r0.<sun.security.x509.X509CertInfo: sun.security.x509.CertificateExtensions extensions> = $r5;
        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28;
        java.lang.Integer $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <sun.security.x509.X509CertInfo: java.util.Map map> = $r0;
        $r1 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("version", $r2);
        $r4 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("serialNumber", $r5);
        $r7 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("algorithmID", $r8);
        $r10 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("issuer", $r11);
        $r13 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("validity", $r14);
        $r16 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("subject", $r17);
        $r19 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);
        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key", $r20);
        $r22 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("issuerID", $r23);
        $r25 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);
        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("subjectID", $r26);
        $r28 = <sun.security.x509.X509CertInfo: java.util.Map map>;
        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);
        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("extensions", $r29);
        return;
    }
}
