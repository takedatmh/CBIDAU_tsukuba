public class org.apache.naming.resources.FileDirContext extends org.apache.naming.resources.BaseDirContext
{
    private static final org.apache.juli.logging.Log log;
    protected static final int BUFFER_SIZE;
    protected java.io.File base;
    protected java.lang.String absoluteBase;
    private java.lang.String canonicalBase;
    protected boolean allowLinking;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/naming/resources/FileDirContext");
        <org.apache.naming.resources.FileDirContext: org.apache.juli.logging.Log log> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.naming.resources.FileDirContext r0;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        specialinvoke r0.<org.apache.naming.resources.BaseDirContext: void <init>()>();
        r0.<org.apache.naming.resources.FileDirContext: java.io.File base> = null;
        r0.<org.apache.naming.resources.FileDirContext: java.lang.String absoluteBase> = null;
        r0.<org.apache.naming.resources.FileDirContext: java.lang.String canonicalBase> = null;
        r0.<org.apache.naming.resources.FileDirContext: boolean allowLinking> = 0;
        return;
    }

    public void <init>(java.util.Hashtable)
    {
        org.apache.naming.resources.FileDirContext r0;
        java.util.Hashtable r1;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.util.Hashtable;
        specialinvoke r0.<org.apache.naming.resources.BaseDirContext: void <init>(java.util.Hashtable)>(r1);
        r0.<org.apache.naming.resources.FileDirContext: java.io.File base> = null;
        r0.<org.apache.naming.resources.FileDirContext: java.lang.String absoluteBase> = null;
        r0.<org.apache.naming.resources.FileDirContext: java.lang.String canonicalBase> = null;
        r0.<org.apache.naming.resources.FileDirContext: boolean allowLinking> = 0;
        return;
    }

    public void setDocBase(java.lang.String)
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, $r5, $r16, $r18, $r19, $r21;
        org.apache.naming.StringManager $r2, $r14;
        java.io.IOException r3, $r9, $r22, r23;
        java.lang.IllegalArgumentException $r4, $r13, $r24;
        java.io.File $r6, $r7, $r8, $r10, $r11, $r12, $r17, $r20;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r15;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r5 = virtualinvoke $r2.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("resources.null");
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r4;

     label0:
        $r6 = new java.io.File;
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r1);
        r0.<org.apache.naming.resources.FileDirContext: java.io.File base> = $r6;

     label1:
        $r7 = r0.<org.apache.naming.resources.FileDirContext: java.io.File base>;
        $r8 = virtualinvoke $r7.<java.io.File: java.io.File getCanonicalFile()>();
        r0.<org.apache.naming.resources.FileDirContext: java.io.File base> = $r8;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;
        r3 = $r9;

     label4:
        $r10 = r0.<org.apache.naming.resources.FileDirContext: java.io.File base>;
        $z0 = virtualinvoke $r10.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label5;

        $r11 = r0.<org.apache.naming.resources.FileDirContext: java.io.File base>;
        $z1 = virtualinvoke $r11.<java.io.File: boolean isDirectory()>();
        if $z1 == 0 goto label5;

        $r12 = r0.<org.apache.naming.resources.FileDirContext: java.io.File base>;
        $z2 = virtualinvoke $r12.<java.io.File: boolean canRead()>();
        if $z2 != 0 goto label6;

     label5:
        $r13 = new java.lang.IllegalArgumentException;
        $r14 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r15 = newarray (java.lang.Object)[1];
        $r15[0] = r1;
        $r16 = virtualinvoke $r14.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("fileResources.base", $r15);
        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);
        throw $r13;

     label6:
        $r17 = r0.<org.apache.naming.resources.FileDirContext: java.io.File base>;
        $r18 = virtualinvoke $r17.<java.io.File: java.lang.String getAbsolutePath()>();
        $r19 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.lang.String normalize(java.lang.String)>($r18);
        r0.<org.apache.naming.resources.FileDirContext: java.lang.String absoluteBase> = $r19;

     label7:
        $r20 = r0.<org.apache.naming.resources.FileDirContext: java.io.File base>;
        $r21 = virtualinvoke $r20.<java.io.File: java.lang.String getCanonicalPath()>();
        r0.<org.apache.naming.resources.FileDirContext: java.lang.String canonicalBase> = $r21;

     label8:
        goto label10;

     label9:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = new java.lang.IllegalArgumentException;
        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r23);
        throw $r24;

     label10:
        specialinvoke r0.<org.apache.naming.resources.BaseDirContext: void setDocBase(java.lang.String)>(r1);
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label7 to label8 with label9;
    }

    public void setAllowLinking(boolean)
    {
        org.apache.naming.resources.FileDirContext r0;
        boolean z0;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        z0 := @parameter0: boolean;
        r0.<org.apache.naming.resources.FileDirContext: boolean allowLinking> = z0;
        return;
    }

    public boolean getAllowLinking()
    {
        org.apache.naming.resources.FileDirContext r0;
        boolean $z0;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        $z0 = r0.<org.apache.naming.resources.FileDirContext: boolean allowLinking>;
        return $z0;
    }

    public void release()
    {
        org.apache.naming.resources.FileDirContext r0;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        specialinvoke r0.<org.apache.naming.resources.BaseDirContext: void release()>();
        return;
    }

    protected java.lang.String doGetRealPath(java.lang.String)
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, $r4, $r5;
        java.io.File $r2, r3;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.io.File;
        $r4 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.lang.String getDocBase()>();
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r4, r1);
        r3 = $r2;
        $r5 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();
        return $r5;
    }

    protected java.lang.Object doLookup(java.lang.String)
    {
        org.apache.naming.resources.FileDirContext r0, r3, $r4;
        java.lang.String r1, $r6;
        null_type n0;
        java.io.File r2;
        boolean $z0, $z1;
        java.util.Hashtable $r5;
        java.lang.Object r7;
        org.apache.naming.resources.FileDirContext$FileResource $r8;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        n0 = null;
        r2 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File file(java.lang.String,boolean)>(r1, 1);
        if r2 != null goto label0;

        return null;

     label0:
        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();
        if $z0 == 0 goto label1;

        $r4 = new org.apache.naming.resources.FileDirContext;
        $r5 = r0.<org.apache.naming.resources.FileDirContext: java.util.Hashtable env>;
        specialinvoke $r4.<org.apache.naming.resources.FileDirContext: void <init>(java.util.Hashtable)>($r5);
        r3 = $r4;
        $r6 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();
        virtualinvoke r3.<org.apache.naming.resources.FileDirContext: void setDocBase(java.lang.String)>($r6);
        $z1 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: boolean getAllowLinking()>();
        virtualinvoke r3.<org.apache.naming.resources.FileDirContext: void setAllowLinking(boolean)>($z1);
        r7 = r3;
        goto label2;

     label1:
        $r8 = new org.apache.naming.resources.FileDirContext$FileResource;
        specialinvoke $r8.<org.apache.naming.resources.FileDirContext$FileResource: void <init>(java.io.File)>(r2);
        r7 = $r8;

     label2:
        return r7;
    }

    public void unbind(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, $r6, $r10;
        java.io.File r2;
        javax.naming.NameNotFoundException $r3;
        org.apache.naming.StringManager $r4, $r8;
        java.lang.Object[] $r5, $r9;
        boolean $z0;
        javax.naming.NamingException $r7;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File file(java.lang.String,boolean)>(r1, 1);
        if r2 != null goto label0;

        $r3 = new javax.naming.NameNotFoundException;
        $r4 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r5[0] = r1;
        $r6 = virtualinvoke $r4.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.notFound", $r5);
        specialinvoke $r3.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r6);
        throw $r3;

     label0:
        $z0 = virtualinvoke r2.<java.io.File: boolean delete()>();
        if $z0 != 0 goto label1;

        $r7 = new javax.naming.NamingException;
        $r8 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r9 = newarray (java.lang.Object)[1];
        $r9[0] = r1;
        $r10 = virtualinvoke $r8.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.unbindFailed", $r9);
        specialinvoke $r7.<javax.naming.NamingException: void <init>(java.lang.String)>($r10);
        throw $r7;

     label1:
        return;
    }

    public void rename(java.lang.String, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, r2, $r8, $r12, $r16;
        java.io.File r3, r4;
        javax.naming.NameNotFoundException $r5;
        org.apache.naming.StringManager $r6, $r10, $r14;
        java.lang.Object[] $r7, $r11, $r15;
        javax.naming.NamingException $r9, $r13;
        boolean $z0;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File file(java.lang.String,boolean)>(r1, 1);
        if r3 != null goto label0;

        $r5 = new javax.naming.NameNotFoundException;
        $r6 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r7 = newarray (java.lang.Object)[1];
        $r7[0] = r1;
        $r8 = virtualinvoke $r6.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.notFound", $r7);
        specialinvoke $r5.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r8);
        throw $r5;

     label0:
        r4 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File file(java.lang.String,boolean)>(r2, 0);
        if r4 != null goto label1;

        $r9 = new javax.naming.NamingException;
        $r10 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r11 = newarray (java.lang.Object)[2];
        $r11[0] = r1;
        $r11[1] = r2;
        $r12 = virtualinvoke $r10.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.renameFail", $r11);
        specialinvoke $r9.<javax.naming.NamingException: void <init>(java.lang.String)>($r12);
        throw $r9;

     label1:
        $z0 = virtualinvoke r3.<java.io.File: boolean renameTo(java.io.File)>(r4);
        if $z0 != 0 goto label2;

        $r13 = new javax.naming.NamingException;
        $r14 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r15 = newarray (java.lang.Object)[2];
        $r15[0] = r1;
        $r15[1] = r2;
        $r16 = virtualinvoke $r14.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.renameFail", $r15);
        specialinvoke $r13.<javax.naming.NamingException: void <init>(java.lang.String)>($r16);
        throw $r13;

     label2:
        return;
    }

    protected java.util.List doListBindings(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        java.io.File r2;
        java.util.List $r3;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File file(java.lang.String,boolean)>(r1, 1);
        if r2 != null goto label0;

        return null;

     label0:
        $r3 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.util.List list(java.io.File)>(r2);
        return $r3;
    }

    public void destroySubcontext(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.apache.naming.resources.FileDirContext: void unbind(java.lang.String)>(r1);
        return;
    }

    public java.lang.Object lookupLink(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.lang.Object lookup(java.lang.String)>(r1);
        return $r2;
    }

    public java.lang.String getNameInNamespace() throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String $r1;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        $r1 = r0.<org.apache.naming.resources.FileDirContext: java.lang.String docBase>;
        return $r1;
    }

    protected javax.naming.directory.Attributes doGetAttributes(java.lang.String, java.lang.String[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        java.lang.String[] r2;
        java.io.File r3;
        org.apache.naming.resources.FileDirContext$FileResourceAttributes $r4;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String[];
        r3 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File file(java.lang.String,boolean)>(r1, 1);
        if r3 != null goto label0;

        return null;

     label0:
        $r4 = new org.apache.naming.resources.FileDirContext$FileResourceAttributes;
        specialinvoke $r4.<org.apache.naming.resources.FileDirContext$FileResourceAttributes: void <init>(java.io.File)>(r3);
        return $r4;
    }

    public void modifyAttributes(java.lang.String, int, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        int i0;
        javax.naming.directory.Attributes r2;
        javax.naming.OperationNotSupportedException $r3;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: javax.naming.directory.Attributes;
        $r3 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r3.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r3;
    }

    public void modifyAttributes(java.lang.String, javax.naming.directory.ModificationItem[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        javax.naming.directory.ModificationItem[] r2;
        javax.naming.OperationNotSupportedException $r3;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.naming.directory.ModificationItem[];
        $r3 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r3.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r3;
    }

    public void bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, $r8, $r12, $r16;
        java.lang.Object r2;
        javax.naming.directory.Attributes r3;
        org.apache.naming.StringManager $r4, $r10, $r14;
        java.io.File r5;
        boolean $z0, $z1;
        javax.naming.NamingException $r6, $r9;
        java.lang.Object[] $r7, $r11, $r15;
        javax.naming.NameAlreadyBoundException $r13;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: javax.naming.directory.Attributes;
        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");
        if $z0 == 0 goto label0;

        $r6 = new javax.naming.NamingException;
        $r4 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r7 = newarray (java.lang.Object)[1];
        $r7[0] = r1;
        $r8 = virtualinvoke $r4.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.bindFailed", $r7);
        specialinvoke $r6.<javax.naming.NamingException: void <init>(java.lang.String)>($r8);
        throw $r6;

     label0:
        r5 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File file(java.lang.String,boolean)>(r1, 0);
        if r5 != null goto label1;

        $r9 = new javax.naming.NamingException;
        $r10 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r11 = newarray (java.lang.Object)[1];
        $r11[0] = r1;
        $r12 = virtualinvoke $r10.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.bindFailed", $r11);
        specialinvoke $r9.<javax.naming.NamingException: void <init>(java.lang.String)>($r12);
        throw $r9;

     label1:
        $z1 = virtualinvoke r5.<java.io.File: boolean exists()>();
        if $z1 == 0 goto label2;

        $r13 = new javax.naming.NameAlreadyBoundException;
        $r14 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r15 = newarray (java.lang.Object)[1];
        $r15[0] = r1;
        $r16 = virtualinvoke $r14.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.alreadyBound", $r15);
        specialinvoke $r13.<javax.naming.NameAlreadyBoundException: void <init>(java.lang.String)>($r16);
        throw $r13;

     label2:
        virtualinvoke r0.<org.apache.naming.resources.FileDirContext: void rebind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)>(r1, r2, r3);
        return;
    }

    public void rebind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, $r15, $r21, $r25, $r29, $r36;
        java.lang.Object r2;
        javax.naming.directory.Attributes r3;
        java.io.File r4;
        java.io.InputStream r5;
        java.io.IOException r6, r8, r11, $r17, $r32, $r39, $r40, r41, $r42, r43, $r44, r45;
        byte[] r7;
        byte b0;
        javax.naming.NamingException r9, $r12, $r18, $r22, $r26, $r33;
        java.lang.Throwable r10, $r38;
        org.apache.naming.StringManager $r13, $r19, $r23, $r27, $r34;
        java.lang.Object[] $r14, $r20, $r24, $r28, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.naming.resources.Resource $r16;
        java.io.FileOutputStream r30, $r31;
        int i1;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: javax.naming.directory.Attributes;
        r4 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File file(java.lang.String,boolean)>(r1, 0);
        if r4 != null goto label0;

        $r12 = new javax.naming.NamingException;
        $r13 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r14 = newarray (java.lang.Object)[1];
        $r14[0] = r1;
        $r15 = virtualinvoke $r13.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.bindFailed", $r14);
        specialinvoke $r12.<javax.naming.NamingException: void <init>(java.lang.String)>($r15);
        throw $r12;

     label0:
        r5 = null;
        $z0 = r2 instanceof org.apache.naming.resources.Resource;
        if $z0 == 0 goto label4;

     label1:
        $r16 = (org.apache.naming.resources.Resource) r2;
        r5 = virtualinvoke $r16.<org.apache.naming.resources.Resource: java.io.InputStream streamContent()>();

     label2:
        goto label7;

     label3:
        $r17 := @caughtexception;
        r6 = $r17;
        goto label7;

     label4:
        $z1 = r2 instanceof java.io.InputStream;
        if $z1 == 0 goto label5;

        r5 = (java.io.InputStream) r2;
        goto label7;

     label5:
        $z2 = r2 instanceof javax.naming.directory.DirContext;
        if $z2 == 0 goto label7;

        $z3 = virtualinvoke r4.<java.io.File: boolean exists()>();
        if $z3 == 0 goto label6;

        $z4 = virtualinvoke r4.<java.io.File: boolean delete()>();
        if $z4 != 0 goto label6;

        $r18 = new javax.naming.NamingException;
        $r19 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r20 = newarray (java.lang.Object)[1];
        $r20[0] = r1;
        $r21 = virtualinvoke $r19.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.bindFailed", $r20);
        specialinvoke $r18.<javax.naming.NamingException: void <init>(java.lang.String)>($r21);
        throw $r18;

     label6:
        $z5 = virtualinvoke r4.<java.io.File: boolean mkdir()>();
        if $z5 != 0 goto label7;

        $r22 = new javax.naming.NamingException;
        $r23 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r24 = newarray (java.lang.Object)[1];
        $r24[0] = r1;
        $r25 = virtualinvoke $r23.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.bindFailed", $r24);
        specialinvoke $r22.<javax.naming.NamingException: void <init>(java.lang.String)>($r25);
        throw $r22;

     label7:
        if r5 != null goto label8;

        $r26 = new javax.naming.NamingException;
        $r27 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r28 = newarray (java.lang.Object)[1];
        $r28[0] = r1;
        $r29 = virtualinvoke $r27.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.bindFailed", $r28);
        specialinvoke $r26.<javax.naming.NamingException: void <init>(java.lang.String)>($r29);
        throw $r26;

     label8:
        r30 = null;
        r7 = newarray (byte)[2048];
        b0 = -1;

     label9:
        $r31 = new java.io.FileOutputStream;
        specialinvoke $r31.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);
        r30 = $r31;

     label10:
        i1 = virtualinvoke r5.<java.io.InputStream: int read(byte[])>(r7);
        if i1 != -1 goto label11;

        goto label21;

     label11:
        virtualinvoke r30.<java.io.FileOutputStream: void write(byte[],int,int)>(r7, 0, i1);
        goto label10;

     label12:
        $r32 := @caughtexception;
        r8 = $r32;
        $r33 = new javax.naming.NamingException;
        $r34 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r35 = newarray (java.lang.Object)[1];
        $r35[0] = r8;
        $r36 = virtualinvoke $r34.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.bindFailed", $r35);
        specialinvoke $r33.<javax.naming.NamingException: void <init>(java.lang.String)>($r36);
        r9 = $r33;
        virtualinvoke r9.<javax.naming.NamingException: java.lang.Throwable initCause(java.lang.Throwable)>(r8);
        throw r9;

     label13:
        $r38 := @caughtexception;
        r10 = $r38;
        if r30 == null goto label17;

     label14:
        virtualinvoke r30.<java.io.FileOutputStream: void close()>();

     label15:
        goto label17;

     label16:
        $r39 := @caughtexception;
        r11 = $r39;

     label17:
        virtualinvoke r5.<java.io.InputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r40 := @caughtexception;
        r41 = $r40;

     label20:
        throw r10;

     label21:
        if r30 == null goto label25;

     label22:
        virtualinvoke r30.<java.io.FileOutputStream: void close()>();

     label23:
        goto label25;

     label24:
        $r42 := @caughtexception;
        r43 = $r42;

     label25:
        virtualinvoke r5.<java.io.InputStream: void close()>();

     label26:
        goto label28;

     label27:
        $r44 := @caughtexception;
        r45 = $r44;

     label28:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label9 to label12 with label12;
        catch java.lang.Throwable from label9 to label13 with label13;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.io.IOException from label25 to label26 with label27;
    }

    public javax.naming.directory.DirContext createSubcontext(java.lang.String, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, $r7, $r11, $r15;
        javax.naming.directory.Attributes r2;
        java.io.File r3;
        javax.naming.NamingException $r4, $r12;
        org.apache.naming.StringManager $r5, $r9, $r13;
        java.lang.Object[] $r6, $r10, $r14;
        boolean $z0, $z1;
        javax.naming.NameAlreadyBoundException $r8;
        java.lang.Object $r16;
        javax.naming.directory.DirContext $r17;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.naming.directory.Attributes;
        r3 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File file(java.lang.String,boolean)>(r1, 0);
        if r3 != null goto label0;

        $r4 = new javax.naming.NamingException;
        $r5 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r6 = newarray (java.lang.Object)[1];
        $r6[0] = r1;
        $r7 = virtualinvoke $r5.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.bindFailed", $r6);
        specialinvoke $r4.<javax.naming.NamingException: void <init>(java.lang.String)>($r7);
        throw $r4;

     label0:
        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label1;

        $r8 = new javax.naming.NameAlreadyBoundException;
        $r9 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r10 = newarray (java.lang.Object)[1];
        $r10[0] = r1;
        $r11 = virtualinvoke $r9.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.alreadyBound", $r10);
        specialinvoke $r8.<javax.naming.NameAlreadyBoundException: void <init>(java.lang.String)>($r11);
        throw $r8;

     label1:
        $z1 = virtualinvoke r3.<java.io.File: boolean mkdir()>();
        if $z1 != 0 goto label2;

        $r12 = new javax.naming.NamingException;
        $r13 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r14 = newarray (java.lang.Object)[1];
        $r14[0] = r1;
        $r15 = virtualinvoke $r13.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.bindFailed", $r14);
        specialinvoke $r12.<javax.naming.NamingException: void <init>(java.lang.String)>($r15);
        throw $r12;

     label2:
        $r16 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.lang.Object lookup(java.lang.String)>(r1);
        $r17 = (javax.naming.directory.DirContext) $r16;
        return $r17;
    }

    public javax.naming.directory.DirContext getSchema(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        javax.naming.OperationNotSupportedException $r2;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r2.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r2;
    }

    public javax.naming.directory.DirContext getSchemaClassDefinition(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        javax.naming.OperationNotSupportedException $r2;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r2.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r2;
    }

    public javax.naming.NamingEnumeration search(java.lang.String, javax.naming.directory.Attributes, java.lang.String[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        javax.naming.directory.Attributes r2;
        java.lang.String[] r3;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.naming.directory.Attributes;
        r3 := @parameter2: java.lang.String[];
        return null;
    }

    public javax.naming.NamingEnumeration search(java.lang.String, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        javax.naming.directory.Attributes r2;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.naming.directory.Attributes;
        return null;
    }

    public javax.naming.NamingEnumeration search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, r2;
        javax.naming.directory.SearchControls r3;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: javax.naming.directory.SearchControls;
        return null;
    }

    public javax.naming.NamingEnumeration search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls) throws javax.naming.NamingException
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, r2;
        java.lang.Object[] r3;
        javax.naming.directory.SearchControls r4;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Object[];
        r4 := @parameter3: javax.naming.directory.SearchControls;
        return null;
    }

    protected java.lang.String normalize(java.lang.String)
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, $r3;
        char $c0;
        boolean $z0;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        $c0 = <java.io.File: char separatorChar>;
        if $c0 != 92 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        $r3 = staticinvoke <org.apache.tomcat.util.http.RequestUtil: java.lang.String normalize(java.lang.String,boolean)>(r1, $z0);
        return $r3;
    }

    protected java.io.File file(java.lang.String)
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        java.io.File $r2;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File file(java.lang.String,boolean)>(r1, 1);
        return $r2;
    }

    protected java.io.File file(java.lang.String, boolean)
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1, $r5, $r6;
        boolean z0, $z1;
        java.io.File r2, $r3, $r4, $r7;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("/");
        if $z1 == 0 goto label0;

        r1 = "";

     label0:
        $r3 = new java.io.File;
        $r4 = r0.<org.apache.naming.resources.FileDirContext: java.io.File base>;
        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, r1);
        r2 = $r3;
        $r5 = r0.<org.apache.naming.resources.FileDirContext: java.lang.String absoluteBase>;
        $r6 = r0.<org.apache.naming.resources.FileDirContext: java.lang.String canonicalBase>;
        $r7 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.io.File validate(java.io.File,java.lang.String,boolean,java.lang.String,java.lang.String)>(r2, r1, z0, $r5, $r6);
        return $r7;
    }

    protected java.io.File validate(java.io.File, java.lang.String, boolean, java.lang.String, java.lang.String)
    {
        org.apache.naming.resources.FileDirContext r0;
        java.io.File r1;
        java.lang.String r2, r3, r4, r5, $r8, r9, r10, r11;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.io.IOException r6, $r7;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.io.File;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.String;
        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("/");
        if $z1 == 0 goto label0;

        $z2 = virtualinvoke r1.<java.io.File: boolean isFile()>();
        if $z2 == 0 goto label0;

        return null;

     label0:
        if z0 == 0 goto label1;

        $z3 = virtualinvoke r1.<java.io.File: boolean canRead()>();
        if $z3 != 0 goto label1;

        return null;

     label1:
        $z4 = r0.<org.apache.naming.resources.FileDirContext: boolean allowLinking>;
        if $z4 == 0 goto label2;

        return r1;

     label2:
        $z5 = <org.apache.naming.resources.JrePlatform: boolean IS_WINDOWS>;
        if $z5 == 0 goto label3;

        $z6 = specialinvoke r0.<org.apache.naming.resources.FileDirContext: boolean isInvalidWindowsFilename(java.lang.String)>(r2);
        if $z6 == 0 goto label3;

        return null;

     label3:
        r5 = null;

     label4:
        r5 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>();

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;
        r6 = $r7;

     label7:
        if r5 == null goto label8;

        $z7 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>(r4);
        if $z7 != 0 goto label9;

     label8:
        return null;

     label9:
        $r8 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();
        r9 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.lang.String normalize(java.lang.String)>($r8);
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        $i1 = virtualinvoke r9.<java.lang.String: int length()>();
        if $i0 <= $i1 goto label10;

        return null;

     label10:
        $i2 = virtualinvoke r3.<java.lang.String: int length()>();
        r10 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i2);
        $i3 = virtualinvoke r4.<java.lang.String: int length()>();
        r11 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i3);
        $i4 = virtualinvoke r11.<java.lang.String: int length()>();
        if $i4 <= 0 goto label11;

        r11 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: java.lang.String normalize(java.lang.String)>(r11);

     label11:
        $z8 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>(r10);
        if $z8 != 0 goto label12;

        return null;

     label12:
        return r1;

        catch java.io.IOException from label4 to label5 with label6;
    }

    private boolean isInvalidWindowsFilename(java.lang.String)
    {
        org.apache.naming.resources.FileDirContext r0;
        java.lang.String r1;
        int i0, i1, $i3;
        char c2, $c4;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.lang.String;
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if i0 != 0 goto label0;

        return 0;

     label0:
        i1 = 0;
        goto label4;

     label1:
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        if c2 == 34 goto label2;

        if c2 == 60 goto label2;

        if c2 != 62 goto label3;

     label2:
        return 1;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label1;

        $i3 = i0 - 1;
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);
        if $c4 != 32 goto label5;

        return 1;

     label5:
        return 0;
    }

    protected java.util.List list(java.io.File)
    {
        org.apache.naming.resources.FileDirContext r0, r6, $r14;
        java.io.File r1, r5, $r12;
        java.util.ArrayList $r2, r3;
        java.lang.String[] r4;
        null_type n0, n1;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.juli.logging.Log $r7;
        org.apache.naming.StringManager $r8;
        java.lang.Object[] $r9;
        java.lang.String $r10, $r11, $r13, $r16, $r20;
        java.util.Hashtable $r15;
        java.lang.Object r17;
        org.apache.naming.resources.FileDirContext$FileResource $r18;
        org.apache.naming.NamingEntry $r19, r21;

        r0 := @this: org.apache.naming.resources.FileDirContext;
        r1 := @parameter0: java.io.File;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
        if $z0 != 0 goto label0;

        return r3;

     label0:
        r4 = virtualinvoke r1.<java.io.File: java.lang.String[] list()>();
        if r4 != null goto label1;

        $r7 = <org.apache.naming.resources.FileDirContext: org.apache.juli.logging.Log log>;
        $r8 = <org.apache.naming.resources.FileDirContext: org.apache.naming.StringManager sm>;
        $r9 = newarray (java.lang.Object)[1];
        $r10 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();
        $r9[0] = $r10;
        $r11 = virtualinvoke $r8.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("fileResources.listingNull", $r9);
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r11);
        return r3;

     label1:
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r4);
        n0 = null;
        i0 = 0;
        goto label5;

     label2:
        $r12 = new java.io.File;
        $r13 = r4[i0];
        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r13);
        r5 = $r12;
        n1 = null;
        $z1 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();
        if $z1 == 0 goto label3;

        $r14 = new org.apache.naming.resources.FileDirContext;
        $r15 = r0.<org.apache.naming.resources.FileDirContext: java.util.Hashtable env>;
        specialinvoke $r14.<org.apache.naming.resources.FileDirContext: void <init>(java.util.Hashtable)>($r15);
        r6 = $r14;
        $r16 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();
        virtualinvoke r6.<org.apache.naming.resources.FileDirContext: void setDocBase(java.lang.String)>($r16);
        $z2 = virtualinvoke r0.<org.apache.naming.resources.FileDirContext: boolean getAllowLinking()>();
        virtualinvoke r6.<org.apache.naming.resources.FileDirContext: void setAllowLinking(boolean)>($z2);
        r17 = r6;
        goto label4;

     label3:
        $r18 = new org.apache.naming.resources.FileDirContext$FileResource;
        specialinvoke $r18.<org.apache.naming.resources.FileDirContext$FileResource: void <init>(java.io.File)>(r5);
        r17 = $r18;

     label4:
        $r19 = new org.apache.naming.NamingEntry;
        $r20 = r4[i0];
        specialinvoke $r19.<org.apache.naming.NamingEntry: void <init>(java.lang.String,java.lang.Object,int)>($r20, r17, 0);
        r21 = $r19;
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r21);
        i0 = i0 + 1;

     label5:
        $i1 = lengthof r4;
        if i0 < $i1 goto label2;

        return r3;
    }
}
