public class sun.misc.Launcher extends java.lang.Object
{
    private static java.net.URLStreamHandlerFactory factory;
    private static sun.misc.Launcher launcher;
    private static java.lang.String bootClassPath;
    private java.lang.ClassLoader loader;
    private static java.net.URLStreamHandler fileHandler;

    public static sun.misc.Launcher getLauncher()
    {
        sun.misc.Launcher $r0;

        $r0 = <sun.misc.Launcher: sun.misc.Launcher launcher>;
        return $r0;
    }

    public void <init>()
    {
        sun.misc.Launcher r0;
        sun.misc.Launcher$ExtClassLoader r1;
        java.io.IOException r2, $r5, $r8, r9;
        java.lang.SecurityManager r3, $r16;
        java.lang.IllegalAccessException r4, $r20;
        java.lang.InternalError $r6, $r10, $r27;
        java.lang.ClassLoader $r7, $r12, $r17;
        java.lang.Thread $r11;
        java.lang.String r13, $r14, $r15, $r31;
        boolean $z0, $z1;
        java.lang.Class $r18;
        java.lang.Object $r19;
        java.lang.InstantiationException $r21, r22;
        java.lang.ClassNotFoundException $r23, r24;
        java.lang.ClassCastException $r25, r26;
        java.lang.StringBuilder $r28, $r29, $r30;

        r0 := @this: sun.misc.Launcher;
        specialinvoke r0.<java.lang.Object: void <init>()>();

     label0:
        r1 = staticinvoke <sun.misc.Launcher$ExtClassLoader: sun.misc.Launcher$ExtClassLoader getExtClassLoader()>();

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        $r6 = new java.lang.InternalError;
        specialinvoke $r6.<java.lang.InternalError: void <init>(java.lang.String)>("Could not create extension class loader");
        throw $r6;

     label3:
        $r7 = staticinvoke <sun.misc.Launcher$AppClassLoader: java.lang.ClassLoader getAppClassLoader(java.lang.ClassLoader)>(r1);
        r0.<sun.misc.Launcher: java.lang.ClassLoader loader> = $r7;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.InternalError;
        specialinvoke $r10.<java.lang.InternalError: void <init>(java.lang.String)>("Could not create application class loader");
        throw $r10;

     label6:
        $r11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r12 = r0.<sun.misc.Launcher: java.lang.ClassLoader loader>;
        virtualinvoke $r11.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r12);
        r13 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.security.manager");
        if r13 == null goto label16;

        r3 = null;
        $r14 = "";
        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r13);
        if $z0 != 0 goto label7;

        $r15 = "default";
        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r13);
        if $z1 == 0 goto label8;

     label7:
        $r16 = new java.lang.SecurityManager;
        specialinvoke $r16.<java.lang.SecurityManager: void <init>()>();
        r3 = $r16;
        goto label14;

     label8:
        $r17 = r0.<sun.misc.Launcher: java.lang.ClassLoader loader>;
        $r18 = virtualinvoke $r17.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r13);
        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.Object newInstance()>();
        r3 = (java.lang.SecurityManager) $r19;

     label9:
        goto label14;

     label10:
        $r20 := @caughtexception;
        r4 = $r20;
        goto label14;

     label11:
        $r21 := @caughtexception;
        r22 = $r21;
        goto label14;

     label12:
        $r23 := @caughtexception;
        r24 = $r23;
        goto label14;

     label13:
        $r25 := @caughtexception;
        r26 = $r25;

     label14:
        if r3 == null goto label15;

        staticinvoke <java.lang.System: void setSecurityManager(java.lang.SecurityManager)>(r3);
        goto label16;

     label15:
        $r27 = new java.lang.InternalError;
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create SecurityManager: ");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r27.<java.lang.InternalError: void <init>(java.lang.String)>($r31);
        throw $r27;

     label16:
        return;

        catch java.io.IOException from label0 to label1 with label2;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label8 to label9 with label10;
        catch java.lang.InstantiationException from label8 to label9 with label11;
        catch java.lang.ClassNotFoundException from label8 to label9 with label12;
        catch java.lang.ClassCastException from label8 to label9 with label13;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        sun.misc.Launcher r0;
        java.lang.ClassLoader $r1;

        r0 := @this: sun.misc.Launcher;
        $r1 = r0.<sun.misc.Launcher: java.lang.ClassLoader loader>;
        return $r1;
    }

    public static sun.misc.URLClassPath getBootstrapClassPath()
    {
        sun.misc.URLClassPath $r0;

        $r0 = <sun.misc.Launcher$BootClassPathHolder: sun.misc.URLClassPath bcp>;
        return $r0;
    }

    private static java.net.URL[] pathToURLs(java.io.File[])
    {
        java.io.File[] r0;
        java.net.URL[] r1;
        int i0, $i1, $i2;
        java.io.File $r2;
        java.net.URL $r3;

        r0 := @parameter0: java.io.File[];
        $i1 = lengthof r0;
        r1 = newarray (java.net.URL)[$i1];
        i0 = 0;

     label0:
        $i2 = lengthof r0;
        if i0 >= $i2 goto label1;

        $r2 = r0[i0];
        $r3 = staticinvoke <sun.misc.Launcher: java.net.URL getFileURL(java.io.File)>($r2);
        r1[i0] = $r3;
        i0 = i0 + 1;
        goto label0;

     label1:
        return r1;
    }

    private static java.io.File[] getClassPath(java.lang.String)
    {
        java.lang.String r0, $r1, $r4, $r6, $r9;
        int i0, i1, i2, $i3, i4, i7, $i8, i9, $i10, $i11, $i12, $i13, i14;
        boolean z0;
        java.io.File[] r2, r3;
        byte $b5, b6;
        java.io.File $r5, $r7, $r8, $r10;

        r0 := @parameter0: java.lang.String;
        if r0 == null goto label9;

        i0 = 0;
        i1 = 1;
        z0 = 0;
        i2 = 0;

     label0:
        $r1 = <java.io.File: java.lang.String pathSeparator>;
        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>($r1, i2);
        i4 = $i3;
        if $i3 == -1 goto label1;

        i1 = i1 + 1;
        i2 = i4 + 1;
        goto label0;

     label1:
        r2 = newarray (java.io.File)[i1];
        $b5 = 0;
        b6 = $b5;
        i7 = $b5;

     label2:
        $r4 = <java.io.File: java.lang.String pathSeparator>;
        $i8 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>($r4, i7);
        i9 = $i8;
        if $i8 == -1 goto label5;

        $i10 = i9 - i7;
        if $i10 <= 0 goto label3;

        $i11 = i0;
        i0 = i0 + 1;
        $r5 = new java.io.File;
        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i7, i9);
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);
        r2[$i11] = $r5;
        goto label4;

     label3:
        $i12 = i0;
        i0 = i0 + 1;
        $r7 = new java.io.File;
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(".");
        r2[$i12] = $r7;

     label4:
        i7 = i9 + 1;
        goto label2;

     label5:
        $i13 = virtualinvoke r0.<java.lang.String: int length()>();
        if i7 >= $i13 goto label6;

        i14 = i0 + 1;
        $r8 = new java.io.File;
        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i7);
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9);
        r2[i0] = $r8;
        goto label7;

     label6:
        i14 = i0 + 1;
        $r10 = new java.io.File;
        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(".");
        r2[i0] = $r10;

     label7:
        if i14 == i1 goto label8;

        r3 = newarray (java.io.File)[i14];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i14);
        r2 = r3;

     label8:
        goto label10;

     label9:
        r2 = newarray (java.io.File)[0];

     label10:
        return r2;
    }

    static java.net.URL getFileURL(java.io.File)
    {
        java.io.File r0;
        java.io.IOException r1, $r2;
        java.net.URL $r3;
        java.net.MalformedURLException $r4, r5;
        java.lang.InternalError $r6;

        r0 := @parameter0: java.io.File;

     label0:
        r0 = virtualinvoke r0.<java.io.File: java.io.File getCanonicalFile()>();

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        r1 = $r2;

     label3:
        $r3 = staticinvoke <sun.net.www.ParseUtil: java.net.URL fileToEncodedURL(java.io.File)>(r0);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;
        r5 = $r4;
        $r6 = new java.lang.InternalError;
        specialinvoke $r6.<java.lang.InternalError: void <init>()>();
        throw $r6;

        catch java.io.IOException from label0 to label1 with label2;
        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    static java.net.URLStreamHandlerFactory access$100()
    {
        java.net.URLStreamHandlerFactory $r0;

        $r0 = <sun.misc.Launcher: java.net.URLStreamHandlerFactory factory>;
        return $r0;
    }

    static java.io.File[] access$200(java.lang.String)
    {
        java.lang.String r0;
        java.io.File[] $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>(r0);
        return $r1;
    }

    static java.net.URL[] access$300(java.io.File[])
    {
        java.io.File[] r0;
        java.net.URL[] $r1;

        r0 := @parameter0: java.io.File[];
        $r1 = staticinvoke <sun.misc.Launcher: java.net.URL[] pathToURLs(java.io.File[])>(r0);
        return $r1;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <sun.misc.Launcher: java.lang.String bootClassPath>;
        return $r0;
    }

    static void <clinit>()
    {
        sun.misc.Launcher$Factory $r0;
        sun.misc.Launcher $r1;
        java.lang.String $r2;

        $r0 = new sun.misc.Launcher$Factory;
        specialinvoke $r0.<sun.misc.Launcher$Factory: void <init>(sun.misc.Launcher$1)>(null);
        <sun.misc.Launcher: java.net.URLStreamHandlerFactory factory> = $r0;
        $r1 = new sun.misc.Launcher;
        specialinvoke $r1.<sun.misc.Launcher: void <init>()>();
        <sun.misc.Launcher: sun.misc.Launcher launcher> = $r1;
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.boot.class.path");
        <sun.misc.Launcher: java.lang.String bootClassPath> = $r2;
        return;
    }
}
