final class sun.security.provider.SunEntries extends java.lang.Object
{
    private static final java.lang.String PROP_EGD;
    private static final java.lang.String PROP_RNDSOURCE;
    static final java.lang.String URL_DEV_RANDOM;
    static final java.lang.String URL_DEV_URANDOM;
    private static final java.lang.String seedSource;

    private void <init>()
    {
        sun.security.provider.SunEntries r0;

        r0 := @this: sun.security.provider.SunEntries;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static void putEntries(java.util.Map)
    {
        java.util.Map r0;
        boolean z0, z1;
        java.lang.String r1, $r2;

        r0 := @parameter0: java.util.Map;
        z0 = staticinvoke <sun.security.provider.NativePRNG: boolean isAvailable()>();
        $r2 = <sun.security.provider.SunEntries: java.lang.String seedSource>;
        z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("file:/dev/urandom");
        if z0 == 0 goto label0;

        if z1 == 0 goto label0;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SecureRandom.NativePRNG", "sun.security.provider.NativePRNG");

     label0:
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SecureRandom.SHA1PRNG", "sun.security.provider.SecureRandom");
        if z0 == 0 goto label1;

        if z1 != 0 goto label1;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SecureRandom.NativePRNG", "sun.security.provider.NativePRNG");

     label1:
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Signature.SHA1withDSA", "sun.security.provider.DSA$SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Signature.NONEwithDSA", "sun.security.provider.DSA$RawDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.RawDSA", "NONEwithDSA");
        r1 = "java.security.interfaces.DSAPublicKey|java.security.interfaces.DSAPrivateKey";
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Signature.SHA1withDSA SupportedKeyClasses", r1);
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Signature.NONEwithDSA SupportedKeyClasses", r1);
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.DSA", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.DSS", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.SHA/DSA", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.SHA-1/DSA", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.SHA1/DSA", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.SHAwithDSA", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.DSAWithSHA1", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.OID.1.2.840.10040.4.3", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.1.2.840.10040.4.3", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.1.3.14.3.2.13", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.Signature.1.3.14.3.2.27", "SHA1withDSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyPairGenerator.DSA", "sun.security.provider.DSAKeyPairGenerator");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.KeyPairGenerator.OID.1.2.840.10040.4.1", "DSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.KeyPairGenerator.1.2.840.10040.4.1", "DSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.KeyPairGenerator.1.3.14.3.2.12", "DSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MessageDigest.MD2", "sun.security.provider.MD2");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MessageDigest.MD5", "sun.security.provider.MD5");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MessageDigest.SHA", "sun.security.provider.SHA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.MessageDigest.SHA-1", "SHA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.MessageDigest.SHA1", "SHA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MessageDigest.SHA-256", "sun.security.provider.SHA2");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MessageDigest.SHA-384", "sun.security.provider.SHA5$SHA384");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MessageDigest.SHA-512", "sun.security.provider.SHA5$SHA512");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AlgorithmParameterGenerator.DSA", "sun.security.provider.DSAParameterGenerator");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AlgorithmParameters.DSA", "sun.security.provider.DSAParameters");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.AlgorithmParameters.1.3.14.3.2.12", "DSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.AlgorithmParameters.1.2.840.10040.4.1", "DSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyFactory.DSA", "sun.security.provider.DSAKeyFactory");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.KeyFactory.1.3.14.3.2.12", "DSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.KeyFactory.1.2.840.10040.4.1", "DSA");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertificateFactory.X.509", "sun.security.provider.X509Factory");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alg.Alias.CertificateFactory.X509", "X.509");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyStore.JKS", "sun.security.provider.JavaKeyStore$JKS");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyStore.CaseExactJKS", "sun.security.provider.JavaKeyStore$CaseExactJKS");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Policy.JavaPolicy", "sun.security.provider.PolicySpiFile");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Configuration.JavaLoginConfig", "sun.security.provider.ConfigSpiFile");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertPathBuilder.PKIX", "sun.security.provider.certpath.SunCertPathBuilder");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertPathBuilder.PKIX ValidationAlgorithm", "RFC3280");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertPathValidator.PKIX", "sun.security.provider.certpath.PKIXCertPathValidator");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertPathValidator.PKIX ValidationAlgorithm", "RFC3280");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertStore.LDAP", "sun.security.provider.certpath.ldap.LDAPCertStore");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertStore.LDAP LDAPSchema", "RFC2587");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertStore.Collection", "sun.security.provider.certpath.CollectionCertStore");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertStore.com.sun.security.IndexedCollection", "sun.security.provider.certpath.IndexedCollectionCertStore");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Signature.SHA1withDSA KeySize", "1024");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyPairGenerator.DSA KeySize", "1024");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AlgorithmParameterGenerator.DSA KeySize", "1024");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Signature.SHA1withDSA ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyPairGenerator.DSA ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MessageDigest.MD5 ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MessageDigest.SHA ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AlgorithmParameterGenerator.DSA ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AlgorithmParameters.DSA ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyFactory.DSA ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SecureRandom.SHA1PRNG ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertificateFactory.X.509 ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyStore.JKS ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertPathValidator.PKIX ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertPathBuilder.PKIX ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertStore.LDAP ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertStore.Collection ImplementedIn", "Software");
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertStore.com.sun.security.IndexedCollection ImplementedIn", "Software");
        return;
    }

    static java.lang.String getSeedSource()
    {
        java.lang.String $r0;

        $r0 = <sun.security.provider.SunEntries: java.lang.String seedSource>;
        return $r0;
    }

    static void <clinit>()
    {
        sun.security.provider.SunEntries$1 $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 = new sun.security.provider.SunEntries$1;
        specialinvoke $r0.<sun.security.provider.SunEntries$1: void <init>()>();
        $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        $r2 = (java.lang.String) $r1;
        <sun.security.provider.SunEntries: java.lang.String seedSource> = $r2;
        return;
    }
}
