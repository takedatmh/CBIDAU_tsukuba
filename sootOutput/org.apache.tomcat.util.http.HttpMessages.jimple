public class org.apache.tomcat.util.http.HttpMessages extends java.lang.Object
{
    private static final java.util.Map instances;
    private static final org.apache.tomcat.util.http.HttpMessages DEFAULT;
    private final org.apache.tomcat.util.res.StringManager sm;
    private java.lang.String st_200;
    private java.lang.String st_302;
    private java.lang.String st_400;
    private java.lang.String st_404;
    private java.lang.String st_500;

    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;
        java.util.Locale $r1;
        org.apache.tomcat.util.http.HttpMessages $r2;
        org.apache.tomcat.util.res.StringManager $r3;

        $r0 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        <org.apache.tomcat.util.http.HttpMessages: java.util.Map instances> = $r0;
        $r2 = new org.apache.tomcat.util.http.HttpMessages;
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        $r3 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String,java.util.Locale)>("org.apache.tomcat.util.http.res", $r1);
        specialinvoke $r2.<org.apache.tomcat.util.http.HttpMessages: void <init>(org.apache.tomcat.util.res.StringManager)>($r3);
        <org.apache.tomcat.util.http.HttpMessages: org.apache.tomcat.util.http.HttpMessages DEFAULT> = $r2;
        return;
    }

    private void <init>(org.apache.tomcat.util.res.StringManager)
    {
        org.apache.tomcat.util.http.HttpMessages r0;
        org.apache.tomcat.util.res.StringManager r1;

        r0 := @this: org.apache.tomcat.util.http.HttpMessages;
        r1 := @parameter0: org.apache.tomcat.util.res.StringManager;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_200> = null;
        r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_302> = null;
        r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_400> = null;
        r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_404> = null;
        r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_500> = null;
        r0.<org.apache.tomcat.util.http.HttpMessages: org.apache.tomcat.util.res.StringManager sm> = r1;
        return;
    }

    public java.lang.String getMessage(int)
    {
        org.apache.tomcat.util.http.HttpMessages r0;
        int i0;
        java.lang.String $r1, $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r19, $r20, $r24, $r25;
        org.apache.tomcat.util.res.StringManager $r2, $r6, $r10, $r14, $r18, $r21;
        java.lang.StringBuilder $r22, $r23;

        r0 := @this: org.apache.tomcat.util.http.HttpMessages;
        i0 := @parameter0: int;
        lookupswitch(i0)
        {
            case 200: goto label0;
            case 302: goto label2;
            case 400: goto label4;
            case 404: goto label6;
            case 500: goto label8;
            default: goto label10;
        };

     label0:
        $r1 = r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_200>;
        if $r1 != null goto label1;

        $r2 = r0.<org.apache.tomcat.util.http.HttpMessages: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("sc.200");
        r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_200> = $r3;

     label1:
        $r4 = r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_200>;
        return $r4;

     label2:
        $r5 = r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_302>;
        if $r5 != null goto label3;

        $r6 = r0.<org.apache.tomcat.util.http.HttpMessages: org.apache.tomcat.util.res.StringManager sm>;
        $r7 = virtualinvoke $r6.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("sc.302");
        r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_302> = $r7;

     label3:
        $r8 = r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_302>;
        return $r8;

     label4:
        $r9 = r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_400>;
        if $r9 != null goto label5;

        $r10 = r0.<org.apache.tomcat.util.http.HttpMessages: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = virtualinvoke $r10.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("sc.400");
        r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_400> = $r11;

     label5:
        $r12 = r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_400>;
        return $r12;

     label6:
        $r13 = r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_404>;
        if $r13 != null goto label7;

        $r14 = r0.<org.apache.tomcat.util.http.HttpMessages: org.apache.tomcat.util.res.StringManager sm>;
        $r15 = virtualinvoke $r14.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("sc.404");
        r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_404> = $r15;

     label7:
        $r16 = r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_404>;
        return $r16;

     label8:
        $r17 = r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_500>;
        if $r17 != null goto label9;

        $r18 = r0.<org.apache.tomcat.util.http.HttpMessages: org.apache.tomcat.util.res.StringManager sm>;
        $r19 = virtualinvoke $r18.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("sc.500");
        r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_500> = $r19;

     label9:
        $r20 = r0.<org.apache.tomcat.util.http.HttpMessages: java.lang.String st_500>;
        return $r20;

     label10:
        $r21 = r0.<org.apache.tomcat.util.http.HttpMessages: org.apache.tomcat.util.res.StringManager sm>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("sc.");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        $r25 = virtualinvoke $r21.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>($r24);
        return $r25;
    }

    public static org.apache.tomcat.util.http.HttpMessages getInstance(java.util.Locale)
    {
        java.util.Locale r0, $r5, $r6;
        java.util.Map $r1, $r8;
        org.apache.tomcat.util.http.HttpMessages r2, $r7;
        org.apache.tomcat.util.res.StringManager r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @parameter0: java.util.Locale;
        $r1 = <org.apache.tomcat.util.http.HttpMessages: java.util.Map instances>;
        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (org.apache.tomcat.util.http.HttpMessages) $r4;
        if r2 != null goto label2;

        r3 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String,java.util.Locale)>("org.apache.tomcat.util.http.res", r0);
        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        $r6 = virtualinvoke r3.<org.apache.tomcat.util.res.StringManager: java.util.Locale getLocale()>();
        $z0 = virtualinvoke $r5.<java.util.Locale: boolean equals(java.lang.Object)>($r6);
        if $z0 == 0 goto label0;

        r2 = <org.apache.tomcat.util.http.HttpMessages: org.apache.tomcat.util.http.HttpMessages DEFAULT>;
        goto label1;

     label0:
        $r7 = new org.apache.tomcat.util.http.HttpMessages;
        specialinvoke $r7.<org.apache.tomcat.util.http.HttpMessages: void <init>(org.apache.tomcat.util.res.StringManager)>(r3);
        r2 = $r7;

     label1:
        $r8 = <org.apache.tomcat.util.http.HttpMessages: java.util.Map instances>;
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

     label2:
        return r2;
    }

    public static java.lang.String filter(java.lang.String)
    {
        java.lang.String r0, $r9;
        char[] r1;
        java.lang.StringBuilder r2, $r3;
        int i0, $i1, $i2, $i3, $i4, $i7;
        char $c5, $c6;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        r1 = newarray (char)[$i1];
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i2, r1, 0);
        $r3 = new java.lang.StringBuilder;
        $i3 = lengthof r1;
        $i4 = $i3 + 50;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i4);
        r2 = $r3;
        i0 = 0;
        goto label8;

     label1:
        $c5 = r1[i0];
        lookupswitch($c5)
        {
            case 34: goto label5;
            case 38: goto label4;
            case 60: goto label2;
            case 62: goto label3;
            default: goto label6;
        };

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&lt;");
        goto label7;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&gt;");
        goto label7;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");
        goto label7;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&quot;");
        goto label7;

     label6:
        $c6 = r1[i0];
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

     label7:
        i0 = i0 + 1;

     label8:
        $i7 = lengthof r1;
        if i0 < $i7 goto label1;

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r9;
    }

    public static boolean isSafeInHttpHeader(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1;
        char c2;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return 1;

     label0:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i1 = 0;
        goto label6;

     label1:
        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);
        if 32 > c2 goto label2;

        if c2 <= 126 goto label5;

     label2:
        if 128 > c2 goto label3;

        if c2 <= 255 goto label5;

     label3:
        if c2 != 9 goto label4;

        goto label5;

     label4:
        return 0;

     label5:
        i1 = i1 + 1;

     label6:
        if i1 < i0 goto label1;

        return 1;
    }
}
