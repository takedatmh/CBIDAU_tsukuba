final class java.util.Currency$1 extends java.lang.Object implements java.security.PrivilegedAction
{

    void <init>()
    {
        java.util.Currency$1 r0;

        r0 := @this: java.util.Currency$1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Object run()
    {
        java.util.Currency$1 r0;
        java.lang.String r1, r2, $r11, $r14, $r28, $r39, $r42, $r45, r61, $r63, $r64, $r66;
        java.io.BufferedInputStream $r3;
        java.io.FileInputStream $r4;
        java.io.DataInputStream r5, $r17;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Throwable r6, r7, r8, r51, $r52, $r53, r54, $r55, $r56;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r15, $r16, $r37, $r38, $r40, $r41, $r43, $r44;
        java.lang.InternalError $r18, $r19, $r33, r34;
        int[] $r20, $r24, $r25, $r26, $r27, $r29, $r30;
        long[] $r21;
        java.lang.String[] $r22, $r23;
        java.io.IOException $r31, r32, $r67, r68;
        java.io.File $r36, r46;
        boolean $z0, $z1;
        java.util.Properties $r47, r48;
        java.io.FileReader $r49, r50;
        java.util.Set r57;
        java.util.regex.Pattern r58;
        java.util.Iterator r59;
        java.lang.Object $r60;
        java.util.Locale $r62, $r65;

        r0 := @this: java.util.Currency$1;
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

     label0:
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = <java.io.File: java.lang.String separator>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");
        $r14 = <java.io.File: java.lang.String separator>;
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("currency.data");
        r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        $r17 = new java.io.DataInputStream;
        $r3 = new java.io.BufferedInputStream;
        $r4 = new java.io.FileInputStream;
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);
        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r4);
        specialinvoke $r17.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r3);
        r5 = $r17;
        $i2 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();
        if $i2 == 1131770436 goto label1;

        $r18 = new java.lang.InternalError;
        specialinvoke $r18.<java.lang.InternalError: void <init>(java.lang.String)>("Currency data is possibly corrupted");
        throw $r18;

     label1:
        $i3 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();
        <java.util.Currency: int formatVersion> = $i3;
        $i4 = <java.util.Currency: int formatVersion>;
        if $i4 == 1 goto label2;

        $r19 = new java.lang.InternalError;
        specialinvoke $r19.<java.lang.InternalError: void <init>(java.lang.String)>("Currency data format is incorrect");
        throw $r19;

     label2:
        $i5 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();
        <java.util.Currency: int dataVersion> = $i5;
        $r20 = staticinvoke <java.util.Currency: int[] access$000(java.io.DataInputStream,int)>(r5, 676);
        <java.util.Currency: int[] mainTable> = $r20;
        i0 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();
        $r21 = staticinvoke <java.util.Currency: long[] access$100(java.io.DataInputStream,int)>(r5, i0);
        <java.util.Currency: long[] scCutOverTimes> = $r21;
        $r22 = staticinvoke <java.util.Currency: java.lang.String[] access$200(java.io.DataInputStream,int)>(r5, i0);
        <java.util.Currency: java.lang.String[] scOldCurrencies> = $r22;
        $r23 = staticinvoke <java.util.Currency: java.lang.String[] access$200(java.io.DataInputStream,int)>(r5, i0);
        <java.util.Currency: java.lang.String[] scNewCurrencies> = $r23;
        $r24 = staticinvoke <java.util.Currency: int[] access$000(java.io.DataInputStream,int)>(r5, i0);
        <java.util.Currency: int[] scOldCurrenciesDFD> = $r24;
        $r25 = staticinvoke <java.util.Currency: int[] access$000(java.io.DataInputStream,int)>(r5, i0);
        <java.util.Currency: int[] scNewCurrenciesDFD> = $r25;
        $r26 = staticinvoke <java.util.Currency: int[] access$000(java.io.DataInputStream,int)>(r5, i0);
        <java.util.Currency: int[] scOldCurrenciesNumericCode> = $r26;
        $r27 = staticinvoke <java.util.Currency: int[] access$000(java.io.DataInputStream,int)>(r5, i0);
        <java.util.Currency: int[] scNewCurrenciesNumericCode> = $r27;
        i1 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();
        $r28 = virtualinvoke r5.<java.io.DataInputStream: java.lang.String readUTF()>();
        <java.util.Currency: java.lang.String otherCurrencies> = $r28;
        $r29 = staticinvoke <java.util.Currency: int[] access$000(java.io.DataInputStream,int)>(r5, i1);
        <java.util.Currency: int[] otherCurrenciesDFD> = $r29;
        $r30 = staticinvoke <java.util.Currency: int[] access$000(java.io.DataInputStream,int)>(r5, i1);
        <java.util.Currency: int[] otherCurrenciesNumericCode> = $r30;
        virtualinvoke r5.<java.io.DataInputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r31 := @caughtexception;
        r32 = $r31;
        $r33 = new java.lang.InternalError;
        specialinvoke $r33.<java.lang.InternalError: void <init>()>();
        r34 = $r33;
        virtualinvoke r34.<java.lang.InternalError: java.lang.Throwable initCause(java.lang.Throwable)>(r32);
        throw r34;

     label5:
        $r36 = new java.io.File;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r39 = <java.io.File: java.lang.String separator>;
        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");
        $r42 = <java.io.File: java.lang.String separator>;
        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("currency.properties");
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r36.<java.io.File: void <init>(java.lang.String)>($r45);
        r46 = $r36;
        $z0 = virtualinvoke r46.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label23;

        $r47 = new java.util.Properties;
        specialinvoke $r47.<java.util.Properties: void <init>()>();
        r48 = $r47;
        $r49 = new java.io.FileReader;
        specialinvoke $r49.<java.io.FileReader: void <init>(java.io.File)>(r46);
        r50 = $r49;
        r51 = null;

     label6:
        virtualinvoke r48.<java.util.Properties: void load(java.io.Reader)>(r50);

     label7:
        if r50 == null goto label21;

        if r51 == null goto label11;

     label8:
        virtualinvoke r50.<java.io.FileReader: void close()>();

     label9:
        goto label21;

     label10:
        $r52 := @caughtexception;
        r6 = $r52;
        virtualinvoke r51.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r6);
        goto label21;

     label11:
        virtualinvoke r50.<java.io.FileReader: void close()>();
        goto label21;

     label12:
        $r53 := @caughtexception;

     label13:
        r54 = $r53;
        r51 = r54;
        throw r54;

     label14:
        $r55 := @caughtexception;
        r7 = $r55;

     label15:
        if r50 == null goto label20;

        if r51 == null goto label19;

     label16:
        virtualinvoke r50.<java.io.FileReader: void close()>();

     label17:
        goto label20;

     label18:
        $r56 := @caughtexception;
        r8 = $r56;
        virtualinvoke r51.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r8);
        goto label20;

     label19:
        virtualinvoke r50.<java.io.FileReader: void close()>();

     label20:
        throw r7;

     label21:
        r57 = virtualinvoke r48.<java.util.Properties: java.util.Set stringPropertyNames()>();
        r58 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([A-Z]{3})\\s*,\\s*(\\d{3})\\s*,\\s*([0-3])");
        r59 = interfaceinvoke r57.<java.util.Set: java.util.Iterator iterator()>();

     label22:
        $z1 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label23;

        $r60 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();
        r61 = (java.lang.String) $r60;
        $r62 = <java.util.Locale: java.util.Locale ROOT>;
        $r63 = virtualinvoke r61.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r62);
        $r64 = virtualinvoke r48.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r61);
        $r65 = <java.util.Locale: java.util.Locale ROOT>;
        $r66 = virtualinvoke $r64.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r65);
        staticinvoke <java.util.Currency: void access$300(java.util.regex.Pattern,java.lang.String,java.lang.String)>(r58, $r63, $r66);
        goto label22;

     label23:
        goto label25;

     label24:
        $r67 := @caughtexception;
        r68 = $r67;
        staticinvoke <java.util.Currency: void access$400(java.lang.String,java.lang.Throwable)>("currency.properties is ignored because of an IOException", r68);

     label25:
        return null;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Throwable from label8 to label9 with label10;
        catch java.lang.Throwable from label6 to label7 with label12;
        catch java.lang.Throwable from label6 to label7 with label14;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label13 to label15 with label14;
        catch java.io.IOException from label5 to label23 with label24;
    }
}
