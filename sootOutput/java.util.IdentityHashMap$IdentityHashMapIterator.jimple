abstract class java.util.IdentityHashMap$IdentityHashMapIterator extends java.lang.Object implements java.util.Iterator
{
    int index;
    int expectedModCount;
    int lastReturnedIndex;
    boolean indexValid;
    java.lang.Object[] traversalTable;
    final java.util.IdentityHashMap this$0;

    private void <init>(java.util.IdentityHashMap)
    {
        java.util.IdentityHashMap$IdentityHashMapIterator r0;
        java.util.IdentityHashMap r1, $r3, $r4, $r6, $r7;
        int $i0, $i1, $i2;
        java.lang.Object[] $r5, $r8;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapIterator;
        r1 := @parameter0: java.util.IdentityHashMap;
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        $i0 = staticinvoke <java.util.IdentityHashMap: int access$000(java.util.IdentityHashMap)>($r3);
        if $i0 == 0 goto label0;

        $i1 = 0;
        goto label1;

     label0:
        $r4 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        $r5 = staticinvoke <java.util.IdentityHashMap: java.lang.Object[] access$100(java.util.IdentityHashMap)>($r4);
        $i1 = lengthof $r5;

     label1:
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int index> = $i1;
        $r6 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        $i2 = staticinvoke <java.util.IdentityHashMap: int access$200(java.util.IdentityHashMap)>($r6);
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int expectedModCount> = $i2;
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int lastReturnedIndex> = -1;
        $r7 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        $r8 = staticinvoke <java.util.IdentityHashMap: java.lang.Object[] access$100(java.util.IdentityHashMap)>($r7);
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.lang.Object[] traversalTable> = $r8;
        return;
    }

    public boolean hasNext()
    {
        java.util.IdentityHashMap$IdentityHashMapIterator r0;
        java.lang.Object[] r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapIterator;
        r1 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.lang.Object[] traversalTable>;
        i0 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int index>;

     label0:
        $i1 = lengthof r1;
        if i0 >= $i1 goto label2;

        r2 = r1[i0];
        if r2 == null goto label1;

        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int index> = i0;
        $z0 = 1;
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: boolean indexValid> = $z0;
        return $z0;

     label1:
        i0 = i0 + 2;
        goto label0;

     label2:
        $i2 = lengthof r1;
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int index> = $i2;
        return 0;
    }

    protected int nextIndex()
    {
        java.util.IdentityHashMap$IdentityHashMapIterator r0;
        java.util.IdentityHashMap $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.ConcurrentModificationException $r2;
        boolean $z0, $z1;
        java.util.NoSuchElementException $r3;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapIterator;
        $r1 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        $i0 = staticinvoke <java.util.IdentityHashMap: int access$200(java.util.IdentityHashMap)>($r1);
        $i1 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int expectedModCount>;
        if $i0 == $i1 goto label0;

        $r2 = new java.util.ConcurrentModificationException;
        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();
        throw $r2;

     label0:
        $z0 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: boolean indexValid>;
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>();
        if $z1 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();
        throw $r3;

     label1:
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: boolean indexValid> = 0;
        $i2 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int index>;
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int lastReturnedIndex> = $i2;
        $i3 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int index>;
        $i4 = $i3 + 2;
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int index> = $i4;
        $i5 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int lastReturnedIndex>;
        return $i5;
    }

    public void remove()
    {
        java.util.IdentityHashMap$IdentityHashMapIterator r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15;
        java.lang.Object[] r1, r4, $r10, $r16, $r18;
        java.lang.Object r2, r3, $r15, $r19;
        java.lang.IllegalStateException $r5;
        java.util.IdentityHashMap $r6, $r8, $r9, $r11, $r13, $r14, $r17;
        java.util.ConcurrentModificationException $r7;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapIterator;
        $i6 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int lastReturnedIndex>;
        if $i6 != -1 goto label0;

        $r5 = new java.lang.IllegalStateException;
        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();
        throw $r5;

     label0:
        $r6 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        $i7 = staticinvoke <java.util.IdentityHashMap: int access$200(java.util.IdentityHashMap)>($r6);
        $i8 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int expectedModCount>;
        if $i7 == $i8 goto label1;

        $r7 = new java.util.ConcurrentModificationException;
        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();
        throw $r7;

     label1:
        $r8 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        $i9 = staticinvoke <java.util.IdentityHashMap: int access$204(java.util.IdentityHashMap)>($r8);
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int expectedModCount> = $i9;
        i0 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int lastReturnedIndex>;
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int lastReturnedIndex> = -1;
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int index> = i0;
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: boolean indexValid> = 0;
        r1 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.lang.Object[] traversalTable>;
        i1 = lengthof r1;
        i2 = i0;
        r2 = r1[i2];
        r1[i2] = null;
        $i10 = i2 + 1;
        r1[$i10] = null;
        $r9 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        $r10 = staticinvoke <java.util.IdentityHashMap: java.lang.Object[] access$100(java.util.IdentityHashMap)>($r9);
        if r1 == $r10 goto label2;

        $r11 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        virtualinvoke $r11.<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>(r2);
        $r13 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        $i11 = staticinvoke <java.util.IdentityHashMap: int access$200(java.util.IdentityHashMap)>($r13);
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int expectedModCount> = $i11;
        return;

     label2:
        $r14 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        staticinvoke <java.util.IdentityHashMap: int access$010(java.util.IdentityHashMap)>($r14);
        i3 = staticinvoke <java.util.IdentityHashMap: int access$300(int,int)>(i2, i1);

     label3:
        $r15 = r1[i3];
        r3 = $r15;
        if $r15 == null goto label8;

        i4 = staticinvoke <java.util.IdentityHashMap: int access$400(java.lang.Object,int)>(r3, i1);
        if i3 >= i4 goto label4;

        if i4 <= i2 goto label5;

        if i2 <= i3 goto label5;

     label4:
        if i4 > i2 goto label7;

        if i2 > i3 goto label7;

     label5:
        if i3 >= i0 goto label6;

        if i2 < i0 goto label6;

        $r16 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.lang.Object[] traversalTable>;
        $r17 = r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.util.IdentityHashMap this$0>;
        $r18 = staticinvoke <java.util.IdentityHashMap: java.lang.Object[] access$100(java.util.IdentityHashMap)>($r17);
        if $r16 != $r18 goto label6;

        i5 = i1 - i0;
        r4 = newarray (java.lang.Object)[i5];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r4, 0, i5);
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: java.lang.Object[] traversalTable> = r4;
        r0.<java.util.IdentityHashMap$IdentityHashMapIterator: int index> = 0;

     label6:
        r1[i2] = r3;
        $i13 = i2 + 1;
        $i14 = i3 + 1;
        $r19 = r1[$i14];
        r1[$i13] = $r19;
        r1[i3] = null;
        $i15 = i3 + 1;
        r1[$i15] = null;
        i2 = i3;

     label7:
        i3 = staticinvoke <java.util.IdentityHashMap: int access$300(int,int)>(i3, i1);
        goto label3;

     label8:
        return;
    }

    void <init>(java.util.IdentityHashMap, java.util.IdentityHashMap$1)
    {
        java.util.IdentityHashMap$IdentityHashMapIterator r0;
        java.util.IdentityHashMap r1;
        java.util.IdentityHashMap$1 r2;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapIterator;
        r1 := @parameter0: java.util.IdentityHashMap;
        r2 := @parameter1: java.util.IdentityHashMap$1;
        specialinvoke r0.<java.util.IdentityHashMap$IdentityHashMapIterator: void <init>(java.util.IdentityHashMap)>(r1);
        return;
    }
}
