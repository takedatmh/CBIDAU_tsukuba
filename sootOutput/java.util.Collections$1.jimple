final class java.util.Collections$1 extends java.lang.Object implements java.util.Iterator
{
    private boolean hasNext;
    final java.lang.Object val$e;

    void <init>(java.lang.Object)
    {
        java.util.Collections$1 r0;
        java.lang.Object r1;

        r0 := @this: java.util.Collections$1;
        r1 := @parameter0: java.lang.Object;
        r0.<java.util.Collections$1: java.lang.Object val$e> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.Collections$1: boolean hasNext> = 1;
        return;
    }

    public boolean hasNext()
    {
        java.util.Collections$1 r0;
        boolean $z0;

        r0 := @this: java.util.Collections$1;
        $z0 = r0.<java.util.Collections$1: boolean hasNext>;
        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.Collections$1 r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        r0 := @this: java.util.Collections$1;
        $z0 = r0.<java.util.Collections$1: boolean hasNext>;
        if $z0 == 0 goto label0;

        r0.<java.util.Collections$1: boolean hasNext> = 0;
        $r1 = r0.<java.util.Collections$1: java.lang.Object val$e>;
        return $r1;

     label0:
        $r2 = new java.util.NoSuchElementException;
        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();
        throw $r2;
    }

    public void remove()
    {
        java.util.Collections$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.Collections$1;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r1;
    }
}
