class java.net.NetworkInterface$1checkedAddresses extends java.lang.Object implements java.util.Enumeration
{
    private int i;
    private int count;
    private java.net.InetAddress[] local_addrs;
    final java.net.NetworkInterface this$0;

    void <init>(java.net.NetworkInterface)
    {
        java.net.NetworkInterface$1checkedAddresses r0;
        java.net.NetworkInterface r1;
        boolean z0;
        java.lang.SecurityManager r2;
        java.lang.SecurityException r3, r4, $r8, $r17;
        java.net.InetAddress[] $r5, $r6, $r9, $r10, $r13, $r15;
        int $i0, i1, $i2, $i3, $i4;
        java.net.NetPermission $r7;
        java.net.InetAddress $r11, $r16;
        java.lang.String $r12;

        r0 := @this: java.net.NetworkInterface$1checkedAddresses;
        r1 := @parameter0: java.net.NetworkInterface;
        r0.<java.net.NetworkInterface$1checkedAddresses: java.net.NetworkInterface this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.net.NetworkInterface$1checkedAddresses: int i> = 0;
        r0.<java.net.NetworkInterface$1checkedAddresses: int count> = 0;
        $r5 = staticinvoke <java.net.NetworkInterface: java.net.InetAddress[] access$000(java.net.NetworkInterface)>(r1);
        $i0 = lengthof $r5;
        $r6 = newarray (java.net.InetAddress)[$i0];
        r0.<java.net.NetworkInterface$1checkedAddresses: java.net.InetAddress[] local_addrs> = $r6;
        z0 = 1;
        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r2 == null goto label3;

     label0:
        $r7 = new java.net.NetPermission;
        specialinvoke $r7.<java.net.NetPermission: void <init>(java.lang.String)>("getNetworkInformation");
        virtualinvoke r2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r7);

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r3 = $r8;
        z0 = 0;

     label3:
        i1 = 0;

     label4:
        $r9 = staticinvoke <java.net.NetworkInterface: java.net.InetAddress[] access$000(java.net.NetworkInterface)>(r1);
        $i2 = lengthof $r9;
        if i1 >= $i2 goto label10;

     label5:
        if r2 == null goto label6;

        if z0 != 0 goto label6;

        $r10 = staticinvoke <java.net.NetworkInterface: java.net.InetAddress[] access$000(java.net.NetworkInterface)>(r1);
        $r11 = $r10[i1];
        $r12 = virtualinvoke $r11.<java.net.InetAddress: java.lang.String getHostAddress()>();
        virtualinvoke r2.<java.lang.SecurityManager: void checkConnect(java.lang.String,int)>($r12, -1);

     label6:
        $r13 = r0.<java.net.NetworkInterface$1checkedAddresses: java.net.InetAddress[] local_addrs>;
        $i3 = r0.<java.net.NetworkInterface$1checkedAddresses: int count>;
        $i4 = $i3 + 1;
        r0.<java.net.NetworkInterface$1checkedAddresses: int count> = $i4;
        $r15 = staticinvoke <java.net.NetworkInterface: java.net.InetAddress[] access$000(java.net.NetworkInterface)>(r1);
        $r16 = $r15[i1];
        $r13[$i3] = $r16;

     label7:
        goto label9;

     label8:
        $r17 := @caughtexception;
        r4 = $r17;

     label9:
        i1 = i1 + 1;
        goto label4;

     label10:
        return;

        catch java.lang.SecurityException from label0 to label1 with label2;
        catch java.lang.SecurityException from label5 to label7 with label8;
    }

    public java.net.InetAddress nextElement()
    {
        java.net.NetworkInterface$1checkedAddresses r0;
        int $i0, $i1, $i2, $i3;
        java.net.InetAddress[] $r1;
        java.net.InetAddress $r3;
        java.util.NoSuchElementException $r4;

        r0 := @this: java.net.NetworkInterface$1checkedAddresses;
        $i1 = r0.<java.net.NetworkInterface$1checkedAddresses: int i>;
        $i2 = r0.<java.net.NetworkInterface$1checkedAddresses: int count>;
        if $i1 >= $i2 goto label0;

        $r1 = r0.<java.net.NetworkInterface$1checkedAddresses: java.net.InetAddress[] local_addrs>;
        $i0 = r0.<java.net.NetworkInterface$1checkedAddresses: int i>;
        $i3 = $i0 + 1;
        r0.<java.net.NetworkInterface$1checkedAddresses: int i> = $i3;
        $r3 = $r1[$i0];
        return $r3;

     label0:
        $r4 = new java.util.NoSuchElementException;
        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();
        throw $r4;
    }

    public boolean hasMoreElements()
    {
        java.net.NetworkInterface$1checkedAddresses r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface$1checkedAddresses;
        $i0 = r0.<java.net.NetworkInterface$1checkedAddresses: int i>;
        $i1 = r0.<java.net.NetworkInterface$1checkedAddresses: int count>;
        if $i0 >= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public volatile java.lang.Object nextElement()
    {
        java.net.NetworkInterface$1checkedAddresses r0;
        java.net.InetAddress $r1;

        r0 := @this: java.net.NetworkInterface$1checkedAddresses;
        $r1 = virtualinvoke r0.<java.net.NetworkInterface$1checkedAddresses: java.net.InetAddress nextElement()>();
        return $r1;
    }
}
