class java.util.logging.LogManager$3 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.util.logging.Logger val$l;
    final java.util.logging.Logger val$sysLogger;
    final java.util.logging.LogManager this$0;

    void <init>(java.util.logging.LogManager, java.util.logging.Logger, java.util.logging.Logger)
    {
        java.util.logging.LogManager$3 r0;
        java.util.logging.LogManager r1;
        java.util.logging.Logger r2, r3;

        r0 := @this: java.util.logging.LogManager$3;
        r1 := @parameter0: java.util.logging.LogManager;
        r2 := @parameter1: java.util.logging.Logger;
        r3 := @parameter2: java.util.logging.Logger;
        r0.<java.util.logging.LogManager$3: java.util.logging.LogManager this$0> = r1;
        r0.<java.util.logging.LogManager$3: java.util.logging.Logger val$l> = r2;
        r0.<java.util.logging.LogManager$3: java.util.logging.Logger val$sysLogger> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run()
    {
        java.util.logging.LogManager$3 r0;
        java.util.logging.Handler[] r1;
        int i0, i1;
        java.util.logging.Handler r2;
        java.util.logging.Logger $r3, $r4;

        r0 := @this: java.util.logging.LogManager$3;
        $r3 = r0.<java.util.logging.LogManager$3: java.util.logging.Logger val$l>;
        r1 = virtualinvoke $r3.<java.util.logging.Logger: java.util.logging.Handler[] accessCheckedHandlers()>();
        i0 = lengthof r1;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        r2 = r1[i1];
        $r4 = r0.<java.util.logging.LogManager$3: java.util.logging.Logger val$sysLogger>;
        virtualinvoke $r4.<java.util.logging.Logger: void addHandler(java.util.logging.Handler)>(r2);
        i1 = i1 + 1;
        goto label0;

     label1:
        return null;
    }

    public volatile java.lang.Object run()
    {
        java.util.logging.LogManager$3 r0;
        java.lang.Void $r1;

        r0 := @this: java.util.logging.LogManager$3;
        $r1 = virtualinvoke r0.<java.util.logging.LogManager$3: java.lang.Void run()>();
        return $r1;
    }
}
