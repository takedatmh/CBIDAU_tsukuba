final class java.util.ResourceBundle$BundleReference extends java.lang.ref.SoftReference implements java.util.ResourceBundle$CacheKeyReference
{
    private java.util.ResourceBundle$CacheKey cacheKey;

    void <init>(java.util.ResourceBundle, java.lang.ref.ReferenceQueue, java.util.ResourceBundle$CacheKey)
    {
        java.util.ResourceBundle$BundleReference r0;
        java.util.ResourceBundle r1;
        java.lang.ref.ReferenceQueue r2;
        java.util.ResourceBundle$CacheKey r3;

        r0 := @this: java.util.ResourceBundle$BundleReference;
        r1 := @parameter0: java.util.ResourceBundle;
        r2 := @parameter1: java.lang.ref.ReferenceQueue;
        r3 := @parameter2: java.util.ResourceBundle$CacheKey;
        specialinvoke r0.<java.lang.ref.SoftReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, r2);
        r0.<java.util.ResourceBundle$BundleReference: java.util.ResourceBundle$CacheKey cacheKey> = r3;
        return;
    }

    public java.util.ResourceBundle$CacheKey getCacheKey()
    {
        java.util.ResourceBundle$BundleReference r0;
        java.util.ResourceBundle$CacheKey $r1;

        r0 := @this: java.util.ResourceBundle$BundleReference;
        $r1 = r0.<java.util.ResourceBundle$BundleReference: java.util.ResourceBundle$CacheKey cacheKey>;
        return $r1;
    }
}
