class java.util.Formatter$Conversion extends java.lang.Object
{
    static final char DECIMAL_INTEGER;
    static final char OCTAL_INTEGER;
    static final char HEXADECIMAL_INTEGER;
    static final char HEXADECIMAL_INTEGER_UPPER;
    static final char SCIENTIFIC;
    static final char SCIENTIFIC_UPPER;
    static final char GENERAL;
    static final char GENERAL_UPPER;
    static final char DECIMAL_FLOAT;
    static final char HEXADECIMAL_FLOAT;
    static final char HEXADECIMAL_FLOAT_UPPER;
    static final char CHARACTER;
    static final char CHARACTER_UPPER;
    static final char DATE_TIME;
    static final char DATE_TIME_UPPER;
    static final char BOOLEAN;
    static final char BOOLEAN_UPPER;
    static final char STRING;
    static final char STRING_UPPER;
    static final char HASHCODE;
    static final char HASHCODE_UPPER;
    static final char LINE_SEPARATOR;
    static final char PERCENT_SIGN;

    private void <init>()
    {
        java.util.Formatter$Conversion r0;

        r0 := @this: java.util.Formatter$Conversion;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static boolean isValid(char)
    {
        char c0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        c0 := @parameter0: char;
        $z0 = staticinvoke <java.util.Formatter$Conversion: boolean isGeneral(char)>(c0);
        if $z0 != 0 goto label0;

        $z1 = staticinvoke <java.util.Formatter$Conversion: boolean isInteger(char)>(c0);
        if $z1 != 0 goto label0;

        $z2 = staticinvoke <java.util.Formatter$Conversion: boolean isFloat(char)>(c0);
        if $z2 != 0 goto label0;

        $z3 = staticinvoke <java.util.Formatter$Conversion: boolean isText(char)>(c0);
        if $z3 != 0 goto label0;

        if c0 == 116 goto label0;

        $z4 = staticinvoke <java.util.Formatter$Conversion: boolean isCharacter(char)>(c0);
        if $z4 == 0 goto label1;

     label0:
        $z5 = 1;
        goto label2;

     label1:
        $z5 = 0;

     label2:
        return $z5;
    }

    static boolean isGeneral(char)
    {
        char c0;

        c0 := @parameter0: char;
        lookupswitch(c0)
        {
            case 66: goto label0;
            case 72: goto label0;
            case 83: goto label0;
            case 98: goto label0;
            case 104: goto label0;
            case 115: goto label0;
            default: goto label1;
        };

     label0:
        return 1;

     label1:
        return 0;
    }

    static boolean isCharacter(char)
    {
        char c0;

        c0 := @parameter0: char;
        lookupswitch(c0)
        {
            case 67: goto label0;
            case 99: goto label0;
            default: goto label1;
        };

     label0:
        return 1;

     label1:
        return 0;
    }

    static boolean isInteger(char)
    {
        char c0;

        c0 := @parameter0: char;
        lookupswitch(c0)
        {
            case 88: goto label0;
            case 100: goto label0;
            case 111: goto label0;
            case 120: goto label0;
            default: goto label1;
        };

     label0:
        return 1;

     label1:
        return 0;
    }

    static boolean isFloat(char)
    {
        char c0;

        c0 := @parameter0: char;
        lookupswitch(c0)
        {
            case 65: goto label0;
            case 69: goto label0;
            case 71: goto label0;
            case 97: goto label0;
            case 101: goto label0;
            case 102: goto label0;
            case 103: goto label0;
            default: goto label1;
        };

     label0:
        return 1;

     label1:
        return 0;
    }

    static boolean isText(char)
    {
        char c0;

        c0 := @parameter0: char;
        lookupswitch(c0)
        {
            case 37: goto label0;
            case 110: goto label0;
            default: goto label1;
        };

     label0:
        return 1;

     label1:
        return 0;
    }
}
