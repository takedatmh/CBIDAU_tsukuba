public class org.apache.catalina.valves.CrawlerSessionManagerValve extends org.apache.catalina.valves.ValveBase implements javax.servlet.http.HttpSessionBindingListener
{
    private static final org.apache.juli.logging.Log log;
    private final java.util.Map clientIdSessionId;
    private final java.util.Map sessionIdClientId;
    private java.lang.String crawlerUserAgents;
    private java.util.regex.Pattern uaPattern;
    private java.lang.String crawlerIps;
    private java.util.regex.Pattern ipPattern;
    private int sessionInactiveInterval;
    private boolean isHostAware;
    private boolean isContextAware;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/valves/CrawlerSessionManagerValve");
        <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        java.util.concurrent.ConcurrentHashMap $r1, $r2;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        specialinvoke r0.<org.apache.catalina.valves.ValveBase: void <init>(boolean)>(1);
        $r1 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.Map clientIdSessionId> = $r1;
        $r2 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.Map sessionIdClientId> = $r2;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.lang.String crawlerUserAgents> = ".*[bB]ot.*|.*Yahoo! Slurp.*|.*Feedfetcher-Google.*";
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.regex.Pattern uaPattern> = null;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.lang.String crawlerIps> = null;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.regex.Pattern ipPattern> = null;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: int sessionInactiveInterval> = 60;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: boolean isHostAware> = 1;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: boolean isContextAware> = 1;
        return;
    }

    public void setCrawlerUserAgents(java.lang.String)
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        java.lang.String r1;
        int $i0;
        java.util.regex.Pattern $r2;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.lang.String crawlerUserAgents> = r1;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.regex.Pattern uaPattern> = null;
        goto label2;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.regex.Pattern uaPattern> = $r2;

     label2:
        return;
    }

    public java.lang.String getCrawlerUserAgents()
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        $r1 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.lang.String crawlerUserAgents>;
        return $r1;
    }

    public void setCrawlerIps(java.lang.String)
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        java.lang.String r1;
        int $i0;
        java.util.regex.Pattern $r2;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.lang.String crawlerIps> = r1;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.regex.Pattern ipPattern> = null;
        goto label2;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.regex.Pattern ipPattern> = $r2;

     label2:
        return;
    }

    public java.lang.String getCrawlerIps()
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        $r1 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.lang.String crawlerIps>;
        return $r1;
    }

    public void setSessionInactiveInterval(int)
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        int i0;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        i0 := @parameter0: int;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: int sessionInactiveInterval> = i0;
        return;
    }

    public int getSessionInactiveInterval()
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        int $i0;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        $i0 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: int sessionInactiveInterval>;
        return $i0;
    }

    public java.util.Map getClientIpSessionId()
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        java.util.Map $r1;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        $r1 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.Map clientIdSessionId>;
        return $r1;
    }

    public boolean isHostAware()
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        $z0 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: boolean isHostAware>;
        return $z0;
    }

    public void setHostAware(boolean)
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: boolean isHostAware> = z0;
        return;
    }

    public boolean isContextAware()
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        $z0 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: boolean isContextAware>;
        return $z0;
    }

    public void setContextAware(boolean)
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: boolean isContextAware> = z0;
        return;
    }

    protected void initInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        specialinvoke r0.<org.apache.catalina.valves.ValveBase: void initInternal()>();
        $r1 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.lang.String crawlerUserAgents>;
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r1);
        r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.regex.Pattern uaPattern> = $r2;
        return;
    }

    public void invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) throws java.io.IOException, javax.servlet.ServletException
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        org.apache.catalina.connector.Request r1;
        org.apache.catalina.connector.Response r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.String r3, r4, r5, r7, $r13, $r17, $r19, $r25, $r28, $r34, $r37, $r44, $r47, $r53, $r56, $r60, $r63, $r66, $r70, $r72, $r74, $r78, $r81;
        java.util.Enumeration r6;
        org.apache.catalina.Host $r8;
        org.apache.catalina.Context $r9;
        org.apache.juli.logging.Log $r10, $r11, $r22, $r23, $r31, $r32, $r41, $r42, $r50, $r51, $r67, $r68, $r75, $r76;
        java.lang.StringBuilder $r12, $r14, $r15, $r16, $r18, $r24, $r26, $r27, $r33, $r35, $r36, $r43, $r45, $r46, $r52, $r54, $r55, $r69, $r71, $r73, $r77, $r79, $r80;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        javax.servlet.http.HttpSession $r20, r58;
        java.lang.Object $r21, $r49;
        java.util.regex.Pattern $r29, $r38, $r39;
        java.util.regex.Matcher $r30, $r40;
        java.util.Map $r48, $r59, $r62;
        org.apache.catalina.Valve $r57;
        java.lang.Class $r65;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        r1 := @parameter0: org.apache.catalina.connector.Request;
        r2 := @parameter1: org.apache.catalina.connector.Response;
        z0 = 0;
        r3 = null;
        r4 = virtualinvoke r1.<org.apache.catalina.connector.Request: java.lang.String getRemoteAddr()>();
        $r8 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.catalina.Host getHost()>();
        $r9 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.catalina.Context getContext()>();
        r5 = specialinvoke r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.lang.String getClientIdentifier(org.apache.catalina.Host,org.apache.catalina.Context,java.lang.String)>($r8, $r9, r4);
        $r10 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r10.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label0;

        $r11 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $r12 = new java.lang.StringBuilder;
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();
        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ClientIdentifier=");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RequestedSessionId=");
        $r17 = virtualinvoke r1.<org.apache.catalina.connector.Request: java.lang.String getRequestedSessionId()>();
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r19);

     label0:
        $r20 = virtualinvoke r1.<org.apache.catalina.connector.Request: javax.servlet.http.HttpSession getSession(boolean)>(0);
        if $r20 != null goto label5;

        r6 = virtualinvoke r1.<org.apache.catalina.connector.Request: java.util.Enumeration getHeaders(java.lang.String)>("user-agent");
        r7 = null;
        $z2 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z2 == 0 goto label1;

        $r21 = interfaceinvoke r6.<java.util.Enumeration: java.lang.Object nextElement()>();
        r7 = (java.lang.String) $r21;

     label1:
        if r7 == null goto label3;

        $z3 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z3 != 0 goto label3;

        $r22 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r22.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label2;

        $r23 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $r24 = new java.lang.StringBuilder;
        $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>();
        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);
        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>($r25);
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": UserAgent=");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r23.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r28);

     label2:
        $r29 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.regex.Pattern uaPattern>;
        $r30 = virtualinvoke $r29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r7);
        $z5 = virtualinvoke $r30.<java.util.regex.Matcher: boolean matches()>();
        if $z5 == 0 goto label3;

        z0 = 1;
        $r31 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $z6 = interfaceinvoke $r31.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label3;

        $r32 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $r33 = new java.lang.StringBuilder;
        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();
        $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);
        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>($r34);
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Bot found. UserAgent=");
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r32.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r37);

     label3:
        $r38 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.regex.Pattern ipPattern>;
        if $r38 == null goto label4;

        $r39 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.regex.Pattern ipPattern>;
        $r40 = virtualinvoke $r39.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);
        $z7 = virtualinvoke $r40.<java.util.regex.Matcher: boolean matches()>();
        if $z7 == 0 goto label4;

        z0 = 1;
        $r41 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $z8 = interfaceinvoke $r41.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z8 == 0 goto label4;

        $r42 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $r43 = new java.lang.StringBuilder;
        $i3 = virtualinvoke r1.<java.lang.Object: int hashCode()>();
        $r44 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);
        specialinvoke $r43.<java.lang.StringBuilder: void <init>(java.lang.String)>($r44);
        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Bot found. IP=");
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r42.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r47);

     label4:
        if z0 == 0 goto label5;

        $r48 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.Map clientIdSessionId>;
        $r49 = interfaceinvoke $r48.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
        r3 = (java.lang.String) $r49;
        if r3 == null goto label5;

        virtualinvoke r1.<org.apache.catalina.connector.Request: void setRequestedSessionId(java.lang.String)>(r3);
        $r50 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $z9 = interfaceinvoke $r50.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z9 == 0 goto label5;

        $r51 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $r52 = new java.lang.StringBuilder;
        $i4 = virtualinvoke r1.<java.lang.Object: int hashCode()>();
        $r53 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);
        specialinvoke $r52.<java.lang.StringBuilder: void <init>(java.lang.String)>($r53);
        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": SessionID=");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r51.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r56);

     label5:
        $r57 = virtualinvoke r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.catalina.Valve getNext()>();
        interfaceinvoke $r57.<org.apache.catalina.Valve: void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)>(r1, r2);
        if z0 == 0 goto label7;

        if r3 != null goto label6;

        r58 = virtualinvoke r1.<org.apache.catalina.connector.Request: javax.servlet.http.HttpSession getSession(boolean)>(0);
        if r58 == null goto label7;

        $r59 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.Map clientIdSessionId>;
        $r60 = interfaceinvoke r58.<javax.servlet.http.HttpSession: java.lang.String getId()>();
        interfaceinvoke $r59.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r60);
        $r62 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.Map sessionIdClientId>;
        $r63 = interfaceinvoke r58.<javax.servlet.http.HttpSession: java.lang.String getId()>();
        interfaceinvoke $r62.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r63, r5);
        $r65 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r66 = virtualinvoke $r65.<java.lang.Class: java.lang.String getName()>();
        interfaceinvoke r58.<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>($r66, r0);
        $i5 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: int sessionInactiveInterval>;
        interfaceinvoke r58.<javax.servlet.http.HttpSession: void setMaxInactiveInterval(int)>($i5);
        $r67 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $z10 = interfaceinvoke $r67.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z10 == 0 goto label7;

        $r68 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $r69 = new java.lang.StringBuilder;
        $i6 = virtualinvoke r1.<java.lang.Object: int hashCode()>();
        $r70 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);
        specialinvoke $r69.<java.lang.StringBuilder: void <init>(java.lang.String)>($r70);
        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": New bot session. SessionID=");
        $r72 = interfaceinvoke r58.<javax.servlet.http.HttpSession: java.lang.String getId()>();
        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);
        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r68.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r74);
        goto label7;

     label6:
        $r75 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $z11 = interfaceinvoke $r75.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z11 == 0 goto label7;

        $r76 = <org.apache.catalina.valves.CrawlerSessionManagerValve: org.apache.juli.logging.Log log>;
        $r77 = new java.lang.StringBuilder;
        $i7 = virtualinvoke r1.<java.lang.Object: int hashCode()>();
        $r78 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i7);
        specialinvoke $r77.<java.lang.StringBuilder: void <init>(java.lang.String)>($r78);
        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Bot session accessed. SessionID=");
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r76.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r81);

     label7:
        return;
    }

    private java.lang.String getClientIdentifier(org.apache.catalina.Host, org.apache.catalina.Context, java.lang.String)
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        org.apache.catalina.Host r1;
        org.apache.catalina.Context r2;
        java.lang.String r3, $r7, $r9, $r11;
        java.lang.StringBuilder $r4, r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        r1 := @parameter0: org.apache.catalina.Host;
        r2 := @parameter1: org.apache.catalina.Context;
        r3 := @parameter2: java.lang.String;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);
        r5 = $r4;
        $z0 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: boolean isHostAware>;
        if $z0 == 0 goto label0;

        $r6 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
        $r7 = interfaceinvoke r1.<org.apache.catalina.Host: java.lang.String getName()>();
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label0:
        $z1 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: boolean isContextAware>;
        if $z1 == 0 goto label1;

        $r9 = interfaceinvoke r2.<org.apache.catalina.Context: java.lang.String getName()>();
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label1:
        $r11 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r11;
    }

    public void valueBound(javax.servlet.http.HttpSessionBindingEvent)
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        javax.servlet.http.HttpSessionBindingEvent r1;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        r1 := @parameter0: javax.servlet.http.HttpSessionBindingEvent;
        return;
    }

    public void valueUnbound(javax.servlet.http.HttpSessionBindingEvent)
    {
        org.apache.catalina.valves.CrawlerSessionManagerValve r0;
        javax.servlet.http.HttpSessionBindingEvent r1;
        java.lang.String r2, $r5;
        java.util.Map $r3, $r7;
        javax.servlet.http.HttpSession $r4;
        java.lang.Object $r6;

        r0 := @this: org.apache.catalina.valves.CrawlerSessionManagerValve;
        r1 := @parameter0: javax.servlet.http.HttpSessionBindingEvent;
        $r3 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.Map sessionIdClientId>;
        $r4 = virtualinvoke r1.<javax.servlet.http.HttpSessionBindingEvent: javax.servlet.http.HttpSession getSession()>();
        $r5 = interfaceinvoke $r4.<javax.servlet.http.HttpSession: java.lang.String getId()>();
        $r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);
        r2 = (java.lang.String) $r6;
        if r2 == null goto label0;

        $r7 = r0.<org.apache.catalina.valves.CrawlerSessionManagerValve: java.util.Map clientIdSessionId>;
        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

     label0:
        return;
    }
}
