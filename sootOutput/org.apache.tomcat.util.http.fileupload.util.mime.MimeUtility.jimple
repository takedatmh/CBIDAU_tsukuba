public final class org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility extends java.lang.Object
{
    private static final java.lang.String US_ASCII_CHARSET;
    private static final java.lang.String BASE64_ENCODING_MARKER;
    private static final java.lang.String QUOTEDPRINTABLE_ENCODING_MARKER;
    private static final java.lang.String ENCODED_TOKEN_MARKER;
    private static final java.lang.String ENCODED_TOKEN_FINISHER;
    private static final java.lang.String LINEAR_WHITESPACE;
    private static final java.util.Map MIME2JAVA;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA> = $r0;
        $r1 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("iso-2022-cn", "ISO2022CN");
        $r3 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("iso-2022-kr", "ISO2022KR");
        $r5 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("utf-8", "UTF8");
        $r7 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("utf8", "UTF8");
        $r9 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ja_jp.iso2022-7", "ISO2022JP");
        $r11 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ja_jp.eucjp", "EUCJIS");
        $r13 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("euc-kr", "KSC5601");
        $r15 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("euckr", "KSC5601");
        $r17 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("us-ascii", "ISO-8859-1");
        $r19 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("x-us-ascii", "ISO-8859-1");
        return;
    }

    private void <init>()
    {
        org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility r0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String decodeText(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r2, r3, $r5, $r6, $r7, $r8, $r13, $r16;
        int i0, i1, i2, i3, i5, $i6, $i7, $i8, $i10, $i12;
        java.lang.StringBuilder r1, $r4;
        boolean z0, $z1;
        char c4, c9, c11;
        org.apache.tomcat.util.http.fileupload.util.mime.ParseException $r11, r12;

        r0 := @parameter0: java.lang.String;
        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("=?");
        if $i6 >= 0 goto label0;

        return r0;

     label0:
        i0 = 0;
        i1 = virtualinvoke r0.<java.lang.String: int length()>();
        i2 = -1;
        i3 = -1;
        $r4 = new java.lang.StringBuilder;
        $i7 = virtualinvoke r0.<java.lang.String: int length()>();
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i7);
        r1 = $r4;
        z0 = 0;
        goto label15;

     label1:
        c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        $r5 = " \t\r\n";
        $i8 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(c4);
        if $i8 == -1 goto label5;

        i2 = i0;
        goto label4;

     label2:
        c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        $r6 = " \t\r\n";
        $i10 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(c9);
        if $i10 == -1 goto label3;

        i0 = i0 + 1;
        goto label4;

     label3:
        i3 = i0;
        goto label15;

     label4:
        if i0 < i1 goto label2;

        goto label15;

     label5:
        i5 = i0;
        goto label7;

     label6:
        c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        $r7 = " \t\r\n";
        $i12 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>(c11);
        if $i12 != -1 goto label8;

        i0 = i0 + 1;

     label7:
        if i0 < i1 goto label6;

     label8:
        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i5, i0);
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("=?");
        if $z1 == 0 goto label13;

     label9:
        r3 = staticinvoke <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.lang.String decodeWord(java.lang.String)>(r2);
        if z0 != 0 goto label10;

        if i2 == -1 goto label10;

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i3);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        i2 = -1;

     label10:
        z0 = 1;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label11:
        goto label15;

     label12:
        $r11 := @caughtexception;
        r12 = $r11;

     label13:
        if i2 == -1 goto label14;

        $r13 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i3);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        i2 = -1;

     label14:
        z0 = 0;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label15:
        if i0 < i1 goto label1;

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r16;

        catch org.apache.tomcat.util.http.fileupload.util.mime.ParseException from label9 to label11 with label12;
    }

    private static java.lang.String decodeWord(java.lang.String) throws org.apache.tomcat.util.http.fileupload.util.mime.ParseException, java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r2, r3, r4, $r10, $r14, $r15, $r20, $r24, $r29, $r30, $r31;
        java.lang.StringBuilder $r1, $r9, $r12, $r13, $r18, $r19, $r22, $r23, $r27, $r28;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.io.ByteArrayOutputStream r5, $r25;
        byte[] r6, r7;
        boolean $z0, $z1, $z2;
        org.apache.tomcat.util.http.fileupload.util.mime.ParseException $r8, $r11, $r17, $r21;
        java.util.Locale $r16;
        java.io.UnsupportedEncodingException $r26, $r34;
        java.io.IOException $r32, r33;

        r0 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("=?");
        if $z0 != 0 goto label0;

        $r8 = new org.apache.tomcat.util.http.fileupload.util.mime.ParseException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid RFC 2047 encoded-word: ");
        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<org.apache.tomcat.util.http.fileupload.util.mime.ParseException: void <init>(java.lang.String)>($r10);
        throw $r8;

     label0:
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, 2);
        if i0 != -1 goto label1;

        $r11 = new org.apache.tomcat.util.http.fileupload.util.mime.ParseException;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Missing charset in RFC 2047 encoded-word: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<org.apache.tomcat.util.http.fileupload.util.mime.ParseException: void <init>(java.lang.String)>($r14);
        throw $r11;

     label1:
        $r15 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, i0);
        $r16 = <java.util.Locale: java.util.Locale ENGLISH>;
        r2 = virtualinvoke $r15.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r16);
        $i3 = i0 + 1;
        i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, $i3);
        if i1 != -1 goto label2;

        $r17 = new org.apache.tomcat.util.http.fileupload.util.mime.ParseException;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("Missing encoding in RFC 2047 encoded-word: ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r17.<org.apache.tomcat.util.http.fileupload.util.mime.ParseException: void <init>(java.lang.String)>($r20);
        throw $r17;

     label2:
        $i4 = i0 + 1;
        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i4, i1);
        $i5 = i1 + 1;
        i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("?=", $i5);
        if i2 != -1 goto label3;

        $r21 = new org.apache.tomcat.util.http.fileupload.util.mime.ParseException;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Missing encoded text in RFC 2047 encoded-word: ");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r21.<org.apache.tomcat.util.http.fileupload.util.mime.ParseException: void <init>(java.lang.String)>($r24);
        throw $r21;

     label3:
        $i6 = i1 + 1;
        r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, i2);
        $i7 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i7 != 0 goto label4;

        return "";

     label4:
        $r25 = new java.io.ByteArrayOutputStream;
        $i8 = virtualinvoke r4.<java.lang.String: int length()>();
        specialinvoke $r25.<java.io.ByteArrayOutputStream: void <init>(int)>($i8);
        r5 = $r25;
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("B");
        if $z1 == 0 goto label5;

        r6 = staticinvoke <org.apache.tomcat.util.codec.binary.Base64: byte[] decodeBase64(java.lang.String)>(r4);
        goto label7;

     label5:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("Q");
        if $z2 == 0 goto label6;

        r7 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");
        staticinvoke <org.apache.tomcat.util.http.fileupload.util.mime.QuotedPrintableDecoder: int decode(byte[],java.io.OutputStream)>(r7, r5);
        r6 = virtualinvoke r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        goto label7;

     label6:
        $r26 = new java.io.UnsupportedEncodingException;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown RFC 2047 encoding: ");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r26.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r29);
        throw $r26;

     label7:
        $r30 = new java.lang.String;
        $r31 = staticinvoke <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.lang.String javaCharset(java.lang.String)>(r2);
        specialinvoke $r30.<java.lang.String: void <init>(byte[],java.lang.String)>(r6, $r31);

     label8:
        return $r30;

     label9:
        $r32 := @caughtexception;
        r33 = $r32;
        $r34 = new java.io.UnsupportedEncodingException;
        specialinvoke $r34.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>("Invalid RFC 2047 encoding");
        throw $r34;

        catch java.io.IOException from label4 to label8 with label9;
    }

    private static java.lang.String javaCharset(java.lang.String)
    {
        java.lang.String r0, r2, $r4;
        java.util.Locale $r1;
        java.util.Map $r3;
        java.lang.Object $r5;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        $r3 = <org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility: java.util.Map MIME2JAVA>;
        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);
        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);
        r2 = (java.lang.String) $r5;
        if r2 != null goto label1;

        return r0;

     label1:
        return r2;
    }
}
