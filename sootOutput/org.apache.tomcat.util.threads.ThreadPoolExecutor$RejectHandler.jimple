class org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler extends java.lang.Object implements java.util.concurrent.RejectedExecutionHandler
{

    private void <init>()
    {
        org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler r0;

        r0 := @this: org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void rejectedExecution(java.lang.Runnable, java.util.concurrent.ThreadPoolExecutor)
    {
        org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler r0;
        java.lang.Runnable r1;
        java.util.concurrent.ThreadPoolExecutor r2;
        java.util.concurrent.RejectedExecutionException $r3;

        r0 := @this: org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler;
        r1 := @parameter0: java.lang.Runnable;
        r2 := @parameter1: java.util.concurrent.ThreadPoolExecutor;
        $r3 = new java.util.concurrent.RejectedExecutionException;
        specialinvoke $r3.<java.util.concurrent.RejectedExecutionException: void <init>()>();
        throw $r3;
    }

    void <init>(org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler)
    {
        org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler r0, r1;

        r0 := @this: org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler;
        r1 := @parameter0: org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler;
        specialinvoke r0.<org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler: void <init>()>();
        return;
    }
}
