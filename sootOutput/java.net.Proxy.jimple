public class java.net.Proxy extends java.lang.Object
{
    private java.net.Proxy$Type type;
    private java.net.SocketAddress sa;
    public static final java.net.Proxy NO_PROXY;

    private void <init>()
    {
        java.net.Proxy r0;
        java.net.Proxy$Type $r2;

        r0 := @this: java.net.Proxy;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;
        r0.<java.net.Proxy: java.net.Proxy$Type type> = $r2;
        r0.<java.net.Proxy: java.net.SocketAddress sa> = null;
        return;
    }

    public void <init>(java.net.Proxy$Type, java.net.SocketAddress)
    {
        java.net.Proxy r0;
        java.net.Proxy$Type r1, $r3;
        java.net.SocketAddress r2;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r10;

        r0 := @this: java.net.Proxy;
        r1 := @parameter0: java.net.Proxy$Type;
        r2 := @parameter1: java.net.SocketAddress;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;
        if r1 == $r3 goto label0;

        $z0 = r2 instanceof java.net.InetSocketAddress;
        if $z0 != 0 goto label1;

     label0:
        $r5 = new java.lang.IllegalArgumentException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not compatible with address ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);
        throw $r5;

     label1:
        r0.<java.net.Proxy: java.net.Proxy$Type type> = r1;
        r0.<java.net.Proxy: java.net.SocketAddress sa> = r2;
        return;
    }

    public java.net.Proxy$Type type()
    {
        java.net.Proxy r0;
        java.net.Proxy$Type $r1;

        r0 := @this: java.net.Proxy;
        $r1 = r0.<java.net.Proxy: java.net.Proxy$Type type>;
        return $r1;
    }

    public java.net.SocketAddress address()
    {
        java.net.Proxy r0;
        java.net.SocketAddress $r1;

        r0 := @this: java.net.Proxy;
        $r1 = r0.<java.net.Proxy: java.net.SocketAddress sa>;
        return $r1;
    }

    public java.lang.String toString()
    {
        java.net.Proxy r0;
        java.net.Proxy$Type $r1, $r2, $r4;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.net.SocketAddress $r7;
        java.lang.String $r9;

        r0 := @this: java.net.Proxy;
        $r2 = virtualinvoke r0.<java.net.Proxy: java.net.Proxy$Type type()>();
        $r1 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;
        if $r2 != $r1 goto label0;

        return "DIRECT";

     label0:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke r0.<java.net.Proxy: java.net.Proxy$Type type()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");
        $r7 = virtualinvoke r0.<java.net.Proxy: java.net.SocketAddress address()>();
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r9;
    }

    public final boolean equals(java.lang.Object)
    {
        java.net.Proxy r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.net.Proxy$Type $r3, $r4;
        java.net.SocketAddress $r5, $r6, $r7, $r8;

        r0 := @this: java.net.Proxy;
        r1 := @parameter0: java.lang.Object;
        if r1 == null goto label0;

        $z0 = r1 instanceof java.net.Proxy;
        if $z0 != 0 goto label1;

     label0:
        return 0;

     label1:
        r2 = (java.net.Proxy) r1;
        $r3 = virtualinvoke r2.<java.net.Proxy: java.net.Proxy$Type type()>();
        $r4 = virtualinvoke r0.<java.net.Proxy: java.net.Proxy$Type type()>();
        if $r3 != $r4 goto label5;

        $r5 = virtualinvoke r0.<java.net.Proxy: java.net.SocketAddress address()>();
        if $r5 != null goto label4;

        $r6 = virtualinvoke r2.<java.net.Proxy: java.net.SocketAddress address()>();
        if $r6 != null goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r7 = virtualinvoke r0.<java.net.Proxy: java.net.SocketAddress address()>();
        $r8 = virtualinvoke r2.<java.net.Proxy: java.net.SocketAddress address()>();
        $z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);
        return $z2;

     label5:
        return 0;
    }

    public final int hashCode()
    {
        java.net.Proxy r0;
        java.net.SocketAddress $r1, $r4;
        java.net.Proxy$Type $r2, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.net.Proxy;
        $r1 = virtualinvoke r0.<java.net.Proxy: java.net.SocketAddress address()>();
        if $r1 != null goto label0;

        $r2 = virtualinvoke r0.<java.net.Proxy: java.net.Proxy$Type type()>();
        $i0 = virtualinvoke $r2.<java.net.Proxy$Type: int hashCode()>();
        return $i0;

     label0:
        $r3 = virtualinvoke r0.<java.net.Proxy: java.net.Proxy$Type type()>();
        $i1 = virtualinvoke $r3.<java.net.Proxy$Type: int hashCode()>();
        $r4 = virtualinvoke r0.<java.net.Proxy: java.net.SocketAddress address()>();
        $i2 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();
        $i3 = $i1 + $i2;
        return $i3;
    }

    static void <clinit>()
    {
        java.net.Proxy $r0;

        $r0 = new java.net.Proxy;
        specialinvoke $r0.<java.net.Proxy: void <init>()>();
        <java.net.Proxy: java.net.Proxy NO_PROXY> = $r0;
        return;
    }
}
