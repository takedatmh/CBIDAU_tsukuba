public abstract class org.apache.catalina.realm.RealmBase extends org.apache.catalina.util.LifecycleMBeanBase implements org.apache.catalina.Realm
{
    private static final org.apache.juli.logging.Log log;
    protected org.apache.catalina.Container container;
    protected org.apache.juli.logging.Log containerLog;
    protected java.lang.String digest;
    protected java.lang.String digestEncoding;
    protected static final java.lang.String info;
    protected volatile java.security.MessageDigest md;
    protected static final org.apache.tomcat.util.security.MD5Encoder md5Encoder;
    protected static volatile java.security.MessageDigest md5Helper;
    protected static final org.apache.tomcat.util.res.StringManager sm;
    protected java.beans.PropertyChangeSupport support;
    protected boolean validate;
    protected java.lang.String x509UsernameRetrieverClassName;
    protected org.apache.catalina.realm.X509UsernameRetriever x509UsernameRetriever;
    protected org.apache.catalina.realm.RealmBase$AllRolesMode allRolesMode;
    protected boolean stripRealmForGss;
    private int transportGuaranteeRedirectStatus;
    protected java.lang.String realmPath;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        org.apache.tomcat.util.security.MD5Encoder $r1;
        org.apache.tomcat.util.res.StringManager $r2;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/realm/RealmBase");
        <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log> = $r0;
        $r1 = new org.apache.tomcat.util.security.MD5Encoder;
        specialinvoke $r1.<org.apache.tomcat.util.security.MD5Encoder: void <init>()>();
        <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.security.MD5Encoder md5Encoder> = $r1;
        $r2 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.catalina.realm");
        <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm> = $r2;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.realm.RealmBase r0;
        java.beans.PropertyChangeSupport $r1;
        org.apache.catalina.realm.RealmBase$AllRolesMode $r2;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        specialinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: void <init>()>();
        r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.Container container> = null;
        r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog> = null;
        r0.<org.apache.catalina.realm.RealmBase: java.lang.String digest> = null;
        r0.<org.apache.catalina.realm.RealmBase: java.lang.String digestEncoding> = null;
        r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md> = null;
        $r1 = new java.beans.PropertyChangeSupport;
        specialinvoke $r1.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);
        r0.<org.apache.catalina.realm.RealmBase: java.beans.PropertyChangeSupport support> = $r1;
        r0.<org.apache.catalina.realm.RealmBase: boolean validate> = 1;
        $r2 = <org.apache.catalina.realm.RealmBase$AllRolesMode: org.apache.catalina.realm.RealmBase$AllRolesMode STRICT_MODE>;
        r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.realm.RealmBase$AllRolesMode allRolesMode> = $r2;
        r0.<org.apache.catalina.realm.RealmBase: boolean stripRealmForGss> = 1;
        r0.<org.apache.catalina.realm.RealmBase: int transportGuaranteeRedirectStatus> = 302;
        r0.<org.apache.catalina.realm.RealmBase: java.lang.String realmPath> = "/realm0";
        return;
    }

    public int getTransportGuaranteeRedirectStatus()
    {
        org.apache.catalina.realm.RealmBase r0;
        int $i0;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $i0 = r0.<org.apache.catalina.realm.RealmBase: int transportGuaranteeRedirectStatus>;
        return $i0;
    }

    public void setTransportGuaranteeRedirectStatus(int)
    {
        org.apache.catalina.realm.RealmBase r0;
        int i0;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        i0 := @parameter0: int;
        r0.<org.apache.catalina.realm.RealmBase: int transportGuaranteeRedirectStatus> = i0;
        return;
    }

    public org.apache.catalina.Container getContainer()
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.Container $r1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.Container container>;
        return $r1;
    }

    public void setContainer(org.apache.catalina.Container)
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.Container r1, r2, $r4;
        java.beans.PropertyChangeSupport $r3;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: org.apache.catalina.Container;
        r2 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.Container container>;
        r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.Container container> = r1;
        $r3 = r0.<org.apache.catalina.realm.RealmBase: java.beans.PropertyChangeSupport support>;
        $r4 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.Container container>;
        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("container", r2, $r4);
        return;
    }

    public java.lang.String getAllRolesMode()
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.realm.RealmBase$AllRolesMode $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.realm.RealmBase$AllRolesMode allRolesMode>;
        $r2 = virtualinvoke $r1.<org.apache.catalina.realm.RealmBase$AllRolesMode: java.lang.String toString()>();
        return $r2;
    }

    public void setAllRolesMode(java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String r1;
        org.apache.catalina.realm.RealmBase$AllRolesMode $r2;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        $r2 = staticinvoke <org.apache.catalina.realm.RealmBase$AllRolesMode: org.apache.catalina.realm.RealmBase$AllRolesMode toMode(java.lang.String)>(r1);
        r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.realm.RealmBase$AllRolesMode allRolesMode> = $r2;
        return;
    }

    public java.lang.String getDigest()
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = r0.<org.apache.catalina.realm.RealmBase: java.lang.String digest>;
        return $r1;
    }

    public void setDigest(java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.RealmBase: java.lang.String digest> = r1;
        return;
    }

    public java.lang.String getDigestEncoding()
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = r0.<org.apache.catalina.realm.RealmBase: java.lang.String digestEncoding>;
        return $r1;
    }

    public void setDigestEncoding(java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.RealmBase: java.lang.String digestEncoding> = r1;
        return;
    }

    protected java.nio.charset.Charset getDigestCharset() throws java.io.UnsupportedEncodingException
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String $r1, $r3;
        java.nio.charset.Charset $r2, $r4;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = r0.<org.apache.catalina.realm.RealmBase: java.lang.String digestEncoding>;
        if $r1 != null goto label0;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
        return $r2;

     label0:
        $r3 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getDigestEncoding()>();
        $r4 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharset(java.lang.String)>($r3);
        return $r4;
    }

    public java.lang.String getInfo()
    {
        org.apache.catalina.realm.RealmBase r0;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        return "org.apache.catalina.realm.RealmBase/1.0";
    }

    public boolean getValidate()
    {
        org.apache.catalina.realm.RealmBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $z0 = r0.<org.apache.catalina.realm.RealmBase: boolean validate>;
        return $z0;
    }

    public void setValidate(boolean)
    {
        org.apache.catalina.realm.RealmBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.realm.RealmBase: boolean validate> = z0;
        return;
    }

    public java.lang.String getX509UsernameRetrieverClassName()
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = r0.<org.apache.catalina.realm.RealmBase: java.lang.String x509UsernameRetrieverClassName>;
        return $r1;
    }

    public void setX509UsernameRetrieverClassName(java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.RealmBase: java.lang.String x509UsernameRetrieverClassName> = r1;
        return;
    }

    public boolean isStripRealmForGss()
    {
        org.apache.catalina.realm.RealmBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $z0 = r0.<org.apache.catalina.realm.RealmBase: boolean stripRealmForGss>;
        return $z0;
    }

    public void setStripRealmForGss(boolean)
    {
        org.apache.catalina.realm.RealmBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.realm.RealmBase: boolean stripRealmForGss> = z0;
        return;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.beans.PropertyChangeListener r1;
        java.beans.PropertyChangeSupport $r2;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.beans.PropertyChangeListener;
        $r2 = r0.<org.apache.catalina.realm.RealmBase: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);
        return;
    }

    public java.security.Principal authenticate(java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String r1, $r6;
        org.apache.tomcat.util.res.StringManager $r2;
        org.apache.juli.logging.Log $r3, $r4;
        boolean $z0;
        java.lang.Object[] $r5;
        java.security.Principal $r7;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        return null;

     label0:
        $r3 = r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog>;
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog>;
        $r2 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r5[0] = r1;
        $r6 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.authenticateSuccess", $r5);
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r6);

     label1:
        $r7 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.security.Principal getPrincipal(java.lang.String)>(r1);
        return $r7;
    }

    public java.security.Principal authenticate(java.lang.String, java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String r1, r2, r4, $r8, $r10, $r15, $r20, $r26;
        org.apache.tomcat.util.res.StringManager $r3, $r13, $r18, $r24;
        boolean z0, $z1, $z3, $z4, $z5;
        org.apache.juli.logging.Log $r5, $r6, $r11, $r12, $r16, $r17, $r22, $r23;
        java.lang.Object[] $r7, $r14, $r19, $r25;
        java.lang.Class $r9;
        java.security.Principal $r21;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        if r1 == null goto label0;

        if r2 != null goto label2;

     label0:
        $r5 = r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog>;
        $z1 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z1 == 0 goto label1;

        $r6 = r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog>;
        $r3 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r7 = newarray (java.lang.Object)[1];
        $r7[0] = r1;
        $r8 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.authenticateFailure", $r7);
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r8);

     label1:
        return null;

     label2:
        r4 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getPassword(java.lang.String)>(r1);
        if r4 != null goto label4;

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();
        virtualinvoke r0.<org.apache.catalina.realm.RealmBase: boolean compareCredentials(java.lang.String,java.lang.String)>(r2, $r10);
        $r11 = r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog>;
        $z3 = interfaceinvoke $r11.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z3 == 0 goto label3;

        $r12 = r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog>;
        $r13 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = newarray (java.lang.Object)[1];
        $r14[0] = r1;
        $r15 = virtualinvoke $r13.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.authenticateFailure", $r14);
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r15);

     label3:
        return null;

     label4:
        z0 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: boolean compareCredentials(java.lang.String,java.lang.String)>(r2, r4);
        if z0 == 0 goto label6;

        $r16 = r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog>;
        $z4 = interfaceinvoke $r16.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z4 == 0 goto label5;

        $r17 = r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog>;
        $r18 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r19 = newarray (java.lang.Object)[1];
        $r19[0] = r1;
        $r20 = virtualinvoke $r18.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.authenticateSuccess", $r19);
        interfaceinvoke $r17.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r20);

     label5:
        $r21 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.security.Principal getPrincipal(java.lang.String)>(r1);
        return $r21;

     label6:
        $r22 = r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog>;
        $z5 = interfaceinvoke $r22.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z5 == 0 goto label7;

        $r23 = r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog>;
        $r24 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r25 = newarray (java.lang.Object)[1];
        $r25[0] = r1;
        $r26 = virtualinvoke $r24.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.authenticateFailure", $r25);
        interfaceinvoke $r23.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r26);

     label7:
        return null;
    }

    public java.security.Principal authenticate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r14, $r16, $r22, $r38, $r40, $r42, r46, $r70;
        null_type n0, n1;
        java.io.UnsupportedEncodingException r11, $r35;
        java.security.MessageDigest r12, $r43, $r44;
        java.util.Locale $r13;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r37, $r39, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69;
        java.nio.charset.Charset $r33;
        byte[] r34, $r45;
        org.apache.juli.logging.Log $r36, $r48, $r49;
        java.lang.IllegalArgumentException $r41;
        java.lang.Throwable $r47;
        boolean $z0, $z1;
        java.security.Principal $r71;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        r6 := @parameter5: java.lang.String;
        r7 := @parameter6: java.lang.String;
        r8 := @parameter7: java.lang.String;
        r9 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getDigest(java.lang.String,java.lang.String)>(r1, r7);
        if r9 != null goto label0;

        return null;

     label0:
        $r13 = <java.util.Locale: java.util.Locale ENGLISH>;
        r14 = virtualinvoke r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13);
        if r6 != null goto label1;

        $r15 = new java.lang.StringBuilder;
        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14);
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r16);
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        r10 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label2;

     label1:
        $r21 = new java.lang.StringBuilder;
        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14);
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        r10 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        n0 = null;

     label3:
        $r33 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.nio.charset.Charset getDigestCharset()>();
        r34 = virtualinvoke r10.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r33);

     label4:
        goto label6;

     label5:
        $r35 := @caughtexception;
        r11 = $r35;
        $r36 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("Illegal digestEncoding: ");
        $r38 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getDigestEncoding()>();
        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r36.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r40, r11);
        $r41 = new java.lang.IllegalArgumentException;
        $r42 = virtualinvoke r11.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();
        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);
        throw $r41;

     label6:
        n1 = null;
        $r43 = <org.apache.catalina.realm.RealmBase: java.security.MessageDigest md5Helper>;
        r12 = $r43;
        entermonitor $r43;

     label7:
        $r44 = <org.apache.catalina.realm.RealmBase: java.security.MessageDigest md5Helper>;
        $r45 = virtualinvoke $r44.<java.security.MessageDigest: byte[] digest(byte[])>(r34);
        r46 = staticinvoke <org.apache.tomcat.util.security.MD5Encoder: java.lang.String encode(byte[])>($r45);
        exitmonitor r12;

     label8:
        goto label12;

     label9:
        $r47 := @caughtexception;

     label10:
        exitmonitor r12;

     label11:
        throw $r47;

     label12:
        $r48 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r48.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label13;

        $r49 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r50 = new java.lang.StringBuilder;
        specialinvoke $r50.<java.lang.StringBuilder: void <init>(java.lang.String)>("Digest : ");
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Username:");
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ClientDigest:");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nonce:");
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nc:");
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cnonce:");
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" qop:");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" realm:");
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("md5a2:");
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Server digest:");
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r49.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r70);

     label13:
        $z1 = virtualinvoke r46.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z1 == 0 goto label14;

        $r71 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.security.Principal getPrincipal(java.lang.String)>(r1);
        return $r71;

     label14:
        return null;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    public java.security.Principal authenticate(java.security.cert.X509Certificate[])
    {
        org.apache.catalina.realm.RealmBase r0;
        java.security.cert.X509Certificate[] r1;
        int i0, $i1, $i2;
        java.lang.Exception r2, $r15;
        org.apache.juli.logging.Log $r3, $r4, $r5, $r6, $r16, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r7, $r11, $r12;
        java.security.cert.X509Certificate $r8, $r14, $r18;
        java.security.Principal $r9, $r19;
        java.lang.String $r10, $r13;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.security.cert.X509Certificate[];
        if r1 == null goto label0;

        $i1 = lengthof r1;
        if $i1 >= 1 goto label1;

     label0:
        return null;

     label1:
        $r3 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label2;

        $r4 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Authenticating client certificate chain");

     label2:
        $z1 = r0.<org.apache.catalina.realm.RealmBase: boolean validate>;
        if $z1 == 0 goto label10;

        i0 = 0;
        goto label9;

     label3:
        $r5 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label4;

        $r6 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(" Checking validity for \'");
        $r8 = r1[i0];
        $r9 = virtualinvoke $r8.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();
        $r10 = interfaceinvoke $r9.<java.security.Principal: java.lang.String getName()>();
        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r13);

     label4:
        $r14 = r1[i0];
        virtualinvoke $r14.<java.security.cert.X509Certificate: void checkValidity()>();

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;
        r2 = $r15;
        $r16 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r16.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label7;

        $r17 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r17.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("  Validity exception", r2);

     label7:
        return null;

     label8:
        i0 = i0 + 1;

     label9:
        $i2 = lengthof r1;
        if i0 < $i2 goto label3;

     label10:
        $r18 = r1[0];
        $r19 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.security.Principal getPrincipal(java.security.cert.X509Certificate)>($r18);
        return $r19;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public java.security.Principal authenticate(org.ietf.jgss.GSSContext, boolean)
    {
        org.apache.catalina.realm.RealmBase r0;
        org.ietf.jgss.GSSContext r1;
        boolean z0, $z1, $z2, $z3, $z4;
        org.ietf.jgss.GSSName r2;
        org.ietf.jgss.GSSException r3, r5, $r6, $r11;
        org.apache.tomcat.util.res.StringManager $r4, $r14, $r19;
        int i0;
        org.apache.juli.logging.Log $r7, $r12, $r13, $r18;
        java.lang.String $r8, r9, $r16, $r20;
        org.ietf.jgss.GSSCredential r10;
        java.lang.Object[] $r15;
        java.security.Principal $r17;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: org.ietf.jgss.GSSContext;
        z0 := @parameter1: boolean;
        $z1 = interfaceinvoke r1.<org.ietf.jgss.GSSContext: boolean isEstablished()>();
        if $z1 == 0 goto label9;

        r2 = null;

     label0:
        r2 = interfaceinvoke r1.<org.ietf.jgss.GSSContext: org.ietf.jgss.GSSName getSrcName()>();

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;
        $r7 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r4 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = virtualinvoke $r4.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("realmBase.gssNameFail");
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r8, r3);

     label3:
        if r2 == null goto label10;

        r9 = interfaceinvoke r2.<org.ietf.jgss.GSSName: java.lang.String toString()>();
        $z2 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: boolean isStripRealmForGss()>();
        if $z2 == 0 goto label4;

        i0 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(64);
        if i0 <= 0 goto label4;

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label4:
        r10 = null;
        if z0 == 0 goto label8;

        $z3 = interfaceinvoke r1.<org.ietf.jgss.GSSContext: boolean getCredDelegState()>();
        if $z3 == 0 goto label8;

     label5:
        r10 = interfaceinvoke r1.<org.ietf.jgss.GSSContext: org.ietf.jgss.GSSCredential getDelegCred()>();

     label6:
        goto label8;

     label7:
        $r11 := @caughtexception;
        r5 = $r11;
        $r12 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r12.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label8;

        $r13 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r14 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r15 = newarray (java.lang.Object)[1];
        $r15[0] = r9;
        $r16 = virtualinvoke $r14.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.delegatedCredentialFail", $r15);
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r16, r5);

     label8:
        $r17 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.security.Principal getPrincipal(java.lang.String,org.ietf.jgss.GSSCredential)>(r9, r10);
        return $r17;

     label9:
        $r18 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r19 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("realmBase.gssContextNotEstablished");
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r20);

     label10:
        return null;

        catch org.ietf.jgss.GSSException from label0 to label1 with label2;
        catch org.ietf.jgss.GSSException from label5 to label6 with label7;
    }

    protected boolean compareCredentials(java.lang.String, java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0, r4, r8;
        java.lang.String r1, r2, r3, r6, r17, r27;
        java.nio.charset.Charset $r5, $r22;
        byte[] r7, r9, $r13, $r15, r18, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.security.MessageDigest $r11, $r12, $r14, $r20, $r21, $r24, $r25;
        java.lang.Throwable $r16, $r26;
        byte b0;
        int $i1, $i2;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        if r2 != null goto label0;

        return 0;

     label0:
        $z0 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: boolean hasMessageDigest()>();
        if $z0 == 0 goto label16;

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("{MD5}");
        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("{SHA}");
        if $z2 == 0 goto label8;

     label1:
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(5);
        r4 = r0;
        entermonitor r0;

     label2:
        $r11 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        virtualinvoke $r11.<java.security.MessageDigest: void reset()>();
        $r12 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        $r5 = <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset ISO_8859_1>;
        $r13 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5);
        virtualinvoke $r12.<java.security.MessageDigest: void update(byte[])>($r13);
        $r14 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>();
        r6 = staticinvoke <org.apache.tomcat.util.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r15);
        exitmonitor r4;

     label3:
        goto label7;

     label4:
        $r16 := @caughtexception;

     label5:
        exitmonitor r4;

     label6:
        throw $r16;

     label7:
        $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        return $z3;

     label8:
        $z4 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("{SSHA}");
        if $z4 == 0 goto label15;

        r17 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(6);
        r18 = staticinvoke <org.apache.tomcat.util.codec.binary.Base64: byte[] decodeBase64(java.lang.String)>(r17);
        b0 = 20;
        r7 = newarray (byte)[20];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r18, 0, r7, 0, 20);
        r8 = r0;
        entermonitor r0;

     label9:
        $r20 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        virtualinvoke $r20.<java.security.MessageDigest: void reset()>();
        $r21 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        $r22 = <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset ISO_8859_1>;
        $r23 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r22);
        virtualinvoke $r21.<java.security.MessageDigest: void update(byte[])>($r23);
        $r24 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        $i1 = lengthof r18;
        $i2 = $i1 - 20;
        virtualinvoke $r24.<java.security.MessageDigest: void update(byte[],int,int)>(r18, 20, $i2);
        $r25 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        r9 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest()>();
        exitmonitor r8;

     label10:
        goto label14;

     label11:
        $r26 := @caughtexception;

     label12:
        exitmonitor r8;

     label13:
        throw $r26;

     label14:
        $z5 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r9, r7);
        return $z5;

     label15:
        r27 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String digest(java.lang.String)>(r1);
        $z6 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r27);
        return $z6;

     label16:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        return $z7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label9 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void backgroundProcess()
    {
        org.apache.catalina.realm.RealmBase r0;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        return;
    }

    public org.apache.catalina.deploy.SecurityConstraint[] findSecurityConstraints(org.apache.catalina.connector.Request, org.apache.catalina.Context)
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.connector.Request r1;
        org.apache.catalina.Context r2;
        java.util.ArrayList r3, $r31, $r52, $r74, $r95;
        org.apache.catalina.deploy.SecurityConstraint[] r4, $r33, $r54, $r76, $r99;
        java.lang.String r5, r6, r9, $r26, $r28, $r29, $r48, $r69, r72, $r91, r94;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, z19, $z20, $z21, $z22, $z24, $z25, z26, $z27, $z29;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, i45, $i46, $i47, $i48;
        org.apache.catalina.deploy.SecurityCollection[] r7, r35, r56, r78;
        java.lang.String[] r8, r50, r71, r93;
        org.apache.juli.logging.Log $r10, $r11, $r14, $r15, $r36, $r37, $r57, $r58, $r79, $r80, $r97, $r98;
        org.apache.tomcat.util.buf.MessageBytes $r12;
        org.apache.catalina.deploy.SecurityConstraint $r13, $r17, $r24, $r32, $r34, $r39, $r46, $r53, $r55, $r60, $r67, $r75, $r77, $r82, $r89, $r96;
        java.lang.StringBuilder $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r38, $r40, $r41, $r42, $r43, $r44, $r45, $r47, $r59, $r61, $r62, $r63, $r64, $r65, $r66, $r68, $r81, $r83, $r84, $r85, $r86, $r87, $r88, $r90;
        org.apache.catalina.deploy.SecurityCollection $r27, $r30, $r49, $r51, $r70, $r73, $r92;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: org.apache.catalina.connector.Request;
        r2 := @parameter1: org.apache.catalina.Context;
        r3 = null;
        r4 = interfaceinvoke r2.<org.apache.catalina.Context: org.apache.catalina.deploy.SecurityConstraint[] findConstraints()>();
        if r4 == null goto label0;

        $i7 = lengthof r4;
        if $i7 != 0 goto label2;

     label0:
        $r10 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r10.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label1;

        $r11 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  No applicable constraints defined");

     label1:
        return null;

     label2:
        $r12 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.tomcat.util.buf.MessageBytes getRequestPathMB()>();
        r5 = virtualinvoke $r12.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        if r5 == null goto label3;

        $i8 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i8 != 0 goto label4;

     label3:
        r5 = "/";

     label4:
        r6 = virtualinvoke r1.<org.apache.catalina.connector.Request: java.lang.String getMethod()>();
        z0 = 0;
        i0 = 0;
        goto label18;

     label5:
        $r13 = r4[i0];
        r7 = virtualinvoke $r13.<org.apache.catalina.deploy.SecurityConstraint: org.apache.catalina.deploy.SecurityCollection[] findCollections()>();
        if r7 != null goto label6;

        goto label17;

     label6:
        $r14 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r14.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label7;

        $r15 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Checking constraint \'");
        $r17 = r4[i0];
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' against ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --> ");
        $r24 = r4[i0];
        $z4 = virtualinvoke $r24.<org.apache.catalina.deploy.SecurityConstraint: boolean included(java.lang.String,java.lang.String)>(r5, r6);
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r15.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r26);

     label7:
        i1 = 0;
        goto label16;

     label8:
        $r27 = r7[i1];
        r8 = virtualinvoke $r27.<org.apache.catalina.deploy.SecurityCollection: java.lang.String[] findPatterns()>();
        if r8 != null goto label9;

        goto label15;

     label9:
        i2 = 0;
        goto label14;

     label10:
        $r28 = r8[i2];
        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r28);
        if $z5 != 0 goto label11;

        $r29 = r8[i2];
        $i9 = virtualinvoke $r29.<java.lang.String: int length()>();
        if $i9 != 0 goto label13;

        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("/");
        if $z6 == 0 goto label13;

     label11:
        z0 = 1;
        $r30 = r7[i1];
        $z7 = virtualinvoke $r30.<org.apache.catalina.deploy.SecurityCollection: boolean findMethod(java.lang.String)>(r6);
        if $z7 == 0 goto label13;

        if r3 != null goto label12;

        $r31 = new java.util.ArrayList;
        specialinvoke $r31.<java.util.ArrayList: void <init>()>();
        r3 = $r31;

     label12:
        $r32 = r4[i0];
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r32);

     label13:
        i2 = i2 + 1;

     label14:
        $i10 = lengthof r8;
        if i2 < $i10 goto label10;

     label15:
        i1 = i1 + 1;

     label16:
        $i11 = lengthof r7;
        if i1 < $i11 goto label8;

     label17:
        i0 = i0 + 1;

     label18:
        $i12 = lengthof r4;
        if i0 < $i12 goto label5;

        if z0 == 0 goto label19;

        $r33 = specialinvoke r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.deploy.SecurityConstraint[] resultsToArray(java.util.ArrayList)>(r3);
        return $r33;

     label19:
        i13 = -1;
        i14 = 0;
        goto label36;

     label20:
        $r34 = r4[i14];
        r35 = virtualinvoke $r34.<org.apache.catalina.deploy.SecurityConstraint: org.apache.catalina.deploy.SecurityCollection[] findCollections()>();
        if r35 != null goto label21;

        goto label35;

     label21:
        $r36 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z9 = interfaceinvoke $r36.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z9 == 0 goto label22;

        $r37 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Checking constraint \'");
        $r39 = r4[i14];
        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' against ");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --> ");
        $r46 = r4[i14];
        $z10 = virtualinvoke $r46.<org.apache.catalina.deploy.SecurityConstraint: boolean included(java.lang.String,java.lang.String)>(r5, r6);
        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r37.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r48);

     label22:
        i15 = 0;
        goto label34;

     label23:
        $r49 = r35[i15];
        r50 = virtualinvoke $r49.<org.apache.catalina.deploy.SecurityCollection: java.lang.String[] findPatterns()>();
        if r50 != null goto label24;

        goto label33;

     label24:
        z1 = 0;
        i3 = -1;
        i4 = 0;
        goto label29;

     label25:
        r9 = r50[i4];
        $z11 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z11 == 0 goto label28;

        $z12 = virtualinvoke r9.<java.lang.String: boolean endsWith(java.lang.String)>("/*");
        if $z12 == 0 goto label28;

        $i16 = virtualinvoke r9.<java.lang.String: int length()>();
        if $i16 < i13 goto label28;

        $i17 = virtualinvoke r9.<java.lang.String: int length()>();
        if $i17 != 2 goto label26;

        z1 = 1;
        i3 = virtualinvoke r9.<java.lang.String: int length()>();
        goto label28;

     label26:
        $i18 = virtualinvoke r9.<java.lang.String: int length()>();
        $i19 = $i18 - 1;
        $z13 = virtualinvoke r9.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, r5, 0, $i19);
        if $z13 != 0 goto label27;

        $i20 = virtualinvoke r9.<java.lang.String: int length()>();
        $i21 = $i20 - 2;
        $i22 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i21 != $i22 goto label28;

        $i23 = virtualinvoke r9.<java.lang.String: int length()>();
        $i24 = $i23 - 2;
        $z14 = virtualinvoke r9.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, r5, 0, $i24);
        if $z14 == 0 goto label28;

     label27:
        z1 = 1;
        i3 = virtualinvoke r9.<java.lang.String: int length()>();

     label28:
        i4 = i4 + 1;

     label29:
        $i25 = lengthof r50;
        if i4 < $i25 goto label25;

        if z1 == 0 goto label33;

        if i3 <= i13 goto label31;

        z0 = 0;
        if r3 == null goto label30;

        virtualinvoke r3.<java.util.ArrayList: void clear()>();

     label30:
        i13 = i3;

     label31:
        $r51 = r35[i15];
        $z15 = virtualinvoke $r51.<org.apache.catalina.deploy.SecurityCollection: boolean findMethod(java.lang.String)>(r6);
        if $z15 == 0 goto label33;

        z0 = 1;
        if r3 != null goto label32;

        $r52 = new java.util.ArrayList;
        specialinvoke $r52.<java.util.ArrayList: void <init>()>();
        r3 = $r52;

     label32:
        $r53 = r4[i14];
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r53);

     label33:
        i15 = i15 + 1;

     label34:
        $i26 = lengthof r35;
        if i15 < $i26 goto label23;

     label35:
        i14 = i14 + 1;

     label36:
        $i27 = lengthof r4;
        if i14 < $i27 goto label20;

        if z0 == 0 goto label37;

        $r54 = specialinvoke r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.deploy.SecurityConstraint[] resultsToArray(java.util.ArrayList)>(r3);
        return $r54;

     label37:
        i28 = 0;
        goto label50;

     label38:
        $r55 = r4[i28];
        r56 = virtualinvoke $r55.<org.apache.catalina.deploy.SecurityConstraint: org.apache.catalina.deploy.SecurityCollection[] findCollections()>();
        if r56 != null goto label39;

        goto label49;

     label39:
        $r57 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z17 = interfaceinvoke $r57.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z17 == 0 goto label40;

        $r58 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r59 = new java.lang.StringBuilder;
        specialinvoke $r59.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Checking constraint \'");
        $r60 = r4[i28];
        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' against ");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --> ");
        $r67 = r4[i28];
        $z18 = virtualinvoke $r67.<org.apache.catalina.deploy.SecurityConstraint: boolean included(java.lang.String,java.lang.String)>(r5, r6);
        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z18);
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r58.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r69);

     label40:
        z19 = 0;
        i29 = -1;
        i30 = 0;
        goto label47;

     label41:
        $r70 = r56[i30];
        r71 = virtualinvoke $r70.<org.apache.catalina.deploy.SecurityCollection: java.lang.String[] findPatterns()>();
        if r71 != null goto label42;

        goto label46;

     label42:
        i31 = 0;
        goto label45;

     label43:
        r72 = r71[i31];
        $z20 = virtualinvoke r72.<java.lang.String: boolean startsWith(java.lang.String)>("*.");
        if $z20 == 0 goto label44;

        i5 = virtualinvoke r5.<java.lang.String: int lastIndexOf(int)>(47);
        i6 = virtualinvoke r5.<java.lang.String: int lastIndexOf(int)>(46);
        if i5 < 0 goto label44;

        if i6 <= i5 goto label44;

        $i32 = virtualinvoke r5.<java.lang.String: int length()>();
        $i33 = $i32 - 1;
        if i6 == $i33 goto label44;

        $i34 = virtualinvoke r5.<java.lang.String: int length()>();
        $i35 = $i34 - i6;
        $i36 = virtualinvoke r72.<java.lang.String: int length()>();
        $i37 = $i36 - 1;
        if $i35 != $i37 goto label44;

        $i38 = virtualinvoke r5.<java.lang.String: int length()>();
        $i39 = $i38 - i6;
        $z21 = virtualinvoke r72.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(1, r5, i6, $i39);
        if $z21 == 0 goto label44;

        z19 = 1;
        i29 = i30;

     label44:
        i31 = i31 + 1;

     label45:
        $i40 = lengthof r71;
        if i31 >= $i40 goto label46;

        if z19 == 0 goto label43;

     label46:
        i30 = i30 + 1;

     label47:
        $i41 = lengthof r56;
        if i30 < $i41 goto label41;

        if z19 == 0 goto label49;

        z0 = 1;
        $r73 = r56[i29];
        $z22 = virtualinvoke $r73.<org.apache.catalina.deploy.SecurityCollection: boolean findMethod(java.lang.String)>(r6);
        if $z22 == 0 goto label49;

        if r3 != null goto label48;

        $r74 = new java.util.ArrayList;
        specialinvoke $r74.<java.util.ArrayList: void <init>()>();
        r3 = $r74;

     label48:
        $r75 = r4[i28];
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r75);

     label49:
        i28 = i28 + 1;

     label50:
        $i42 = lengthof r4;
        if i28 < $i42 goto label38;

        if z0 == 0 goto label51;

        $r76 = specialinvoke r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.deploy.SecurityConstraint[] resultsToArray(java.util.ArrayList)>(r3);
        return $r76;

     label51:
        i43 = 0;
        goto label65;

     label52:
        $r77 = r4[i43];
        r78 = virtualinvoke $r77.<org.apache.catalina.deploy.SecurityConstraint: org.apache.catalina.deploy.SecurityCollection[] findCollections()>();
        if r78 != null goto label53;

        goto label64;

     label53:
        $r79 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z24 = interfaceinvoke $r79.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z24 == 0 goto label54;

        $r80 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r81 = new java.lang.StringBuilder;
        specialinvoke $r81.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Checking constraint \'");
        $r82 = r4[i43];
        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r82);
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' against ");
        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --> ");
        $r89 = r4[i43];
        $z25 = virtualinvoke $r89.<org.apache.catalina.deploy.SecurityConstraint: boolean included(java.lang.String,java.lang.String)>(r5, r6);
        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z25);
        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r80.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r91);

     label54:
        i44 = 0;
        goto label63;

     label55:
        $r92 = r78[i44];
        r93 = virtualinvoke $r92.<org.apache.catalina.deploy.SecurityCollection: java.lang.String[] findPatterns()>();
        if r93 != null goto label56;

        goto label62;

     label56:
        z26 = 0;
        i45 = 0;
        goto label59;

     label57:
        r94 = r93[i45];
        $z27 = virtualinvoke r94.<java.lang.String: boolean equals(java.lang.Object)>("/");
        if $z27 == 0 goto label58;

        z26 = 1;

     label58:
        i45 = i45 + 1;

     label59:
        $i46 = lengthof r93;
        if i45 >= $i46 goto label60;

        if z26 == 0 goto label57;

     label60:
        if z26 == 0 goto label62;

        if r3 != null goto label61;

        $r95 = new java.util.ArrayList;
        specialinvoke $r95.<java.util.ArrayList: void <init>()>();
        r3 = $r95;

     label61:
        $r96 = r4[i43];
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r96);

     label62:
        i44 = i44 + 1;

     label63:
        $i47 = lengthof r78;
        if i44 < $i47 goto label55;

     label64:
        i43 = i43 + 1;

     label65:
        $i48 = lengthof r4;
        if i43 < $i48 goto label52;

        if r3 != null goto label66;

        $r97 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z29 = interfaceinvoke $r97.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z29 == 0 goto label66;

        $r98 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r98.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  No applicable constraint located");

     label66:
        $r99 = specialinvoke r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.deploy.SecurityConstraint[] resultsToArray(java.util.ArrayList)>(r3);
        return $r99;
    }

    private org.apache.catalina.deploy.SecurityConstraint[] resultsToArray(java.util.ArrayList)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.util.ArrayList r1;
        org.apache.catalina.deploy.SecurityConstraint[] r2;
        int $i0, $i1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.util.ArrayList;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();
        if $i0 != 0 goto label1;

     label0:
        return null;

     label1:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();
        r2 = newarray (org.apache.catalina.deploy.SecurityConstraint)[$i1];
        virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r2);
        return r2;
    }

    public boolean hasResourcePermission(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, org.apache.catalina.deploy.SecurityConstraint[], org.apache.catalina.Context) throws java.io.IOException
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.connector.Request r1;
        org.apache.catalina.connector.Response r2;
        org.apache.catalina.deploy.SecurityConstraint[] r3;
        org.apache.catalina.Context r4, $r8, $r46;
        java.security.Principal r5;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i7, $i8;
        org.apache.catalina.deploy.SecurityConstraint r6, r41;
        java.lang.String[] r7, r47;
        org.apache.juli.logging.Log $r9, $r10, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r27, $r28, $r35, $r36, $r44, $r45, $r50, $r51;
        java.lang.StringBuilder $r11, $r12, $r23, $r25, $r29, $r31, $r37, $r39;
        java.lang.String $r13, $r20, $r24, $r26, $r30, $r32, $r40, $r53;
        org.apache.catalina.realm.RealmBase$AllRolesMode $r33, $r34, $r38, $r42, $r43, $r48, $r49;
        org.apache.tomcat.util.res.StringManager $r52;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: org.apache.catalina.connector.Request;
        r2 := @parameter1: org.apache.catalina.connector.Response;
        r3 := @parameter2: org.apache.catalina.deploy.SecurityConstraint[];
        r4 := @parameter3: org.apache.catalina.Context;
        if r3 == null goto label0;

        $i2 = lengthof r3;
        if $i2 != 0 goto label1;

     label0:
        return 1;

     label1:
        r5 = virtualinvoke r1.<org.apache.catalina.connector.Request: java.security.Principal getPrincipal()>();
        z0 = 0;
        z1 = 0;
        i0 = 0;
        goto label17;

     label2:
        r6 = r3[i0];
        $z2 = virtualinvoke r6.<org.apache.catalina.deploy.SecurityConstraint: boolean getAllRoles()>();
        if $z2 == 0 goto label3;

        $r8 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.catalina.Context getContext()>();
        r7 = interfaceinvoke $r8.<org.apache.catalina.Context: java.lang.String[] findSecurityRoles()>();
        goto label4;

     label3:
        r7 = virtualinvoke r6.<org.apache.catalina.deploy.SecurityConstraint: java.lang.String[] findAuthRoles()>();

     label4:
        if r7 != null goto label5;

        r7 = newarray (java.lang.String)[0];

     label5:
        $r9 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label6;

        $r10 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Checking roles ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r13);

     label6:
        $i3 = lengthof r7;
        if $i3 != 0 goto label10;

        $z4 = virtualinvoke r6.<org.apache.catalina.deploy.SecurityConstraint: boolean getAllRoles()>();
        if $z4 != 0 goto label10;

        $z5 = virtualinvoke r6.<org.apache.catalina.deploy.SecurityConstraint: boolean getAuthConstraint()>();
        if $z5 == 0 goto label8;

        $r14 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z6 = interfaceinvoke $r14.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label7;

        $r15 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r15.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("No roles");

     label7:
        z0 = 0;
        z1 = 1;
        goto label18;

     label8:
        $r16 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z7 = interfaceinvoke $r16.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z7 == 0 goto label9;

        $r17 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r17.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Passing all access");

     label9:
        z0 = 1;
        goto label16;

     label10:
        if r5 != null goto label11;

        $r18 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z8 = interfaceinvoke $r18.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z8 == 0 goto label16;

        $r19 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r19.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  No user authenticated, cannot grant access");
        goto label16;

     label11:
        i1 = 0;
        goto label15;

     label12:
        $r20 = r7[i1];
        $z9 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: boolean hasRole(org.apache.catalina.Wrapper,java.security.Principal,java.lang.String)>(null, r5, $r20);
        if $z9 == 0 goto label13;

        z0 = 1;
        $r21 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z10 = interfaceinvoke $r21.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z10 == 0 goto label14;

        $r22 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Role found:  ");
        $r24 = r7[i1];
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r22.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r26);
        goto label14;

     label13:
        $r27 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z11 = interfaceinvoke $r27.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z11 == 0 goto label14;

        $r28 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r29 = new java.lang.StringBuilder;
        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("No role found:  ");
        $r30 = r7[i1];
        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r28.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r32);

     label14:
        i1 = i1 + 1;

     label15:
        $i4 = lengthof r7;
        if i1 < $i4 goto label12;

     label16:
        i0 = i0 + 1;

     label17:
        $i5 = lengthof r3;
        if i0 < $i5 goto label2;

     label18:
        if z1 != 0 goto label26;

        $r33 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.realm.RealmBase$AllRolesMode allRolesMode>;
        $r34 = <org.apache.catalina.realm.RealmBase$AllRolesMode: org.apache.catalina.realm.RealmBase$AllRolesMode STRICT_MODE>;
        if $r33 == $r34 goto label26;

        if z0 != 0 goto label26;

        if r5 == null goto label26;

        $r35 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z12 = interfaceinvoke $r35.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z12 == 0 goto label19;

        $r36 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("Checking for all roles mode: ");
        $r38 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.realm.RealmBase$AllRolesMode allRolesMode>;
        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r36.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r40);

     label19:
        i6 = 0;
        goto label25;

     label20:
        r41 = r3[i6];
        $z13 = virtualinvoke r41.<org.apache.catalina.deploy.SecurityConstraint: boolean getAllRoles()>();
        if $z13 == 0 goto label24;

        $r42 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.realm.RealmBase$AllRolesMode allRolesMode>;
        $r43 = <org.apache.catalina.realm.RealmBase$AllRolesMode: org.apache.catalina.realm.RealmBase$AllRolesMode AUTH_ONLY_MODE>;
        if $r42 != $r43 goto label22;

        $r44 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z14 = interfaceinvoke $r44.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z14 == 0 goto label21;

        $r45 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r45.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Granting access for role-name=*, auth-only");

     label21:
        z0 = 1;
        goto label26;

     label22:
        $r46 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.catalina.Context getContext()>();
        r47 = interfaceinvoke $r46.<org.apache.catalina.Context: java.lang.String[] findSecurityRoles()>();
        $i7 = lengthof r47;
        if $i7 != 0 goto label24;

        $r48 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.realm.RealmBase$AllRolesMode allRolesMode>;
        $r49 = <org.apache.catalina.realm.RealmBase$AllRolesMode: org.apache.catalina.realm.RealmBase$AllRolesMode STRICT_AUTH_ONLY_MODE>;
        if $r48 != $r49 goto label24;

        $r50 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z15 = interfaceinvoke $r50.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z15 == 0 goto label23;

        $r51 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r51.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Granting access for role-name=*, strict auth-only");

     label23:
        z0 = 1;
        goto label26;

     label24:
        i6 = i6 + 1;

     label25:
        $i8 = lengthof r3;
        if i6 < $i8 goto label20;

     label26:
        if z0 != 0 goto label27;

        $r52 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r53 = virtualinvoke $r52.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("realmBase.forbidden");
        virtualinvoke r2.<org.apache.catalina.connector.Response: void sendError(int,java.lang.String)>(403, $r53);

     label27:
        return z0;
    }

    public boolean hasRole(org.apache.catalina.Wrapper, java.security.Principal, java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.Wrapper r1;
        java.security.Principal r2;
        java.lang.String r3, r4, r5, $r11, $r15;
        boolean z0, $z1, $z2;
        org.apache.catalina.realm.GenericPrincipal r6;
        org.apache.juli.logging.Log $r7, $r8, $r12;
        org.apache.tomcat.util.res.StringManager $r9, $r13;
        java.lang.Object[] $r10, $r14;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: org.apache.catalina.Wrapper;
        r2 := @parameter1: java.security.Principal;
        r3 := @parameter2: java.lang.String;
        if r1 == null goto label0;

        r4 = interfaceinvoke r1.<org.apache.catalina.Wrapper: java.lang.String findSecurityReference(java.lang.String)>(r3);
        if r4 == null goto label0;

        r3 = r4;

     label0:
        if r2 == null goto label1;

        if r3 == null goto label1;

        $z1 = r2 instanceof org.apache.catalina.realm.GenericPrincipal;
        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        r6 = (org.apache.catalina.realm.GenericPrincipal) r2;
        z0 = virtualinvoke r6.<org.apache.catalina.realm.GenericPrincipal: boolean hasRole(java.lang.String)>(r3);
        $r7 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r7.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label4;

        r5 = interfaceinvoke r2.<java.security.Principal: java.lang.String getName()>();
        if z0 == 0 goto label3;

        $r8 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r9 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = newarray (java.lang.Object)[2];
        $r10[0] = r5;
        $r10[1] = r3;
        $r11 = virtualinvoke $r9.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.hasRoleSuccess", $r10);
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r11);
        goto label4;

     label3:
        $r12 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r13 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = newarray (java.lang.Object)[2];
        $r14[0] = r5;
        $r14[1] = r3;
        $r15 = virtualinvoke $r13.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.hasRoleFailure", $r14);
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r15);

     label4:
        return z0;
    }

    public boolean hasUserDataPermission(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, org.apache.catalina.deploy.SecurityConstraint[]) throws java.io.IOException
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.connector.Request r1;
        org.apache.catalina.connector.Response r2;
        org.apache.catalina.deploy.SecurityConstraint[] r3;
        int i0, $i1, $i2, i3, $i4;
        org.apache.catalina.deploy.SecurityConstraint r4;
        java.lang.String r5, r6, r7, r8, $r21, r24, $r30, $r34, $r43, $r45, $r46;
        org.apache.juli.logging.Log $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r19, $r20, $r40, $r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.servlet.http.HttpServletRequest $r15;
        org.apache.catalina.connector.Connector $r18;
        java.lang.StringBuilder $r22, r23, $r25, $r26, $r28, $r42, $r44;
        org.apache.catalina.Context $r33;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: org.apache.catalina.connector.Request;
        r2 := @parameter1: org.apache.catalina.connector.Response;
        r3 := @parameter2: org.apache.catalina.deploy.SecurityConstraint[];
        if r3 == null goto label0;

        $i1 = lengthof r3;
        if $i1 != 0 goto label2;

     label0:
        $r9 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label1;

        $r10 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  No applicable security constraint defined");

     label1:
        return 1;

     label2:
        i0 = 0;
        goto label8;

     label3:
        r4 = r3[i0];
        r5 = virtualinvoke r4.<org.apache.catalina.deploy.SecurityConstraint: java.lang.String getUserConstraint()>();
        if r5 != null goto label5;

        $r11 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r11.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label4;

        $r12 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  No applicable user data constraint defined");

     label4:
        return 1;

     label5:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("NONE");
        if $z2 == 0 goto label7;

        $r13 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r13.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label6;

        $r14 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  User data constraint has no restrictions");

     label6:
        return 1;

     label7:
        i0 = i0 + 1;

     label8:
        $i2 = lengthof r3;
        if i0 < $i2 goto label3;

        $r15 = virtualinvoke r1.<org.apache.catalina.connector.Request: javax.servlet.http.HttpServletRequest getRequest()>();
        $z4 = interfaceinvoke $r15.<javax.servlet.http.HttpServletRequest: boolean isSecure()>();
        if $z4 == 0 goto label10;

        $r16 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r16.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label9;

        $r17 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r17.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  User data constraint already satisfied");

     label9:
        return 1;

     label10:
        $r18 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.catalina.connector.Connector getConnector()>();
        i3 = virtualinvoke $r18.<org.apache.catalina.connector.Connector: int getRedirectPort()>();
        if i3 > 0 goto label12;

        $r19 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z6 = interfaceinvoke $r19.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label11;

        $r20 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r20.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  SSL redirect is disabled");

     label11:
        $r21 = virtualinvoke r1.<org.apache.catalina.connector.Request: java.lang.String getRequestURI()>();
        virtualinvoke r2.<org.apache.catalina.connector.Response: void sendError(int,java.lang.String)>(403, $r21);
        return 0;

     label12:
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        r23 = $r22;
        r24 = "https";
        r6 = virtualinvoke r1.<org.apache.catalina.connector.Request: java.lang.String getServerName()>();
        $r25 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");
        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        if i3 == 443 goto label13;

        $r28 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

     label13:
        $r30 = virtualinvoke r1.<org.apache.catalina.connector.Request: java.lang.String getRequestURI()>();
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        r7 = virtualinvoke r1.<org.apache.catalina.connector.Request: java.lang.String getRequestedSessionId()>();
        if r7 == null goto label14;

        $z7 = virtualinvoke r1.<org.apache.catalina.connector.Request: boolean isRequestedSessionIdFromURL()>();
        if $z7 == 0 goto label14;

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r33 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.catalina.Context getContext()>();
        $r34 = staticinvoke <org.apache.catalina.util.SessionConfig: java.lang.String getSessionUriParamName(org.apache.catalina.Context)>($r33);
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

     label14:
        r8 = virtualinvoke r1.<org.apache.catalina.connector.Request: java.lang.String getQueryString()>();
        if r8 == null goto label15;

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

     label15:
        $r40 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z8 = interfaceinvoke $r40.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z8 == 0 goto label16;

        $r41 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r42 = new java.lang.StringBuilder;
        specialinvoke $r42.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Redirecting to ");
        $r43 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();
        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r41.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r45);

     label16:
        $r46 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();
        $i4 = r0.<org.apache.catalina.realm.RealmBase: int transportGuaranteeRedirectStatus>;
        virtualinvoke r2.<org.apache.catalina.connector.Response: void sendRedirect(java.lang.String,int)>($r46, $i4);
        return 0;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.beans.PropertyChangeListener r1;
        java.beans.PropertyChangeSupport $r2;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.beans.PropertyChangeListener;
        $r2 = r0.<org.apache.catalina.realm.RealmBase: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);
        return;
    }

    protected void initInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.Container $r1, $r2;
        org.apache.juli.logging.Log $r3;
        java.lang.String $r4;
        org.apache.catalina.realm.X509UsernameRetriever $r5;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        specialinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: void initInternal()>();
        $r1 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.Container container>;
        if $r1 == null goto label0;

        $r2 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.Container container>;
        $r3 = interfaceinvoke $r2.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        r0.<org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log containerLog> = $r3;

     label0:
        $r4 = r0.<org.apache.catalina.realm.RealmBase: java.lang.String x509UsernameRetrieverClassName>;
        $r5 = staticinvoke <org.apache.catalina.realm.RealmBase: org.apache.catalina.realm.X509UsernameRetriever createUsernameRetriever(java.lang.String)>($r4);
        r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.realm.X509UsernameRetriever x509UsernameRetriever> = $r5;
        return;
    }

    protected void startInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.realm.RealmBase r0;
        java.security.NoSuchAlgorithmException r1, $r6;
        org.apache.tomcat.util.res.StringManager $r2;
        java.lang.String $r3, $r4, $r9, $r10;
        java.security.MessageDigest $r5;
        org.apache.catalina.LifecycleException $r7;
        java.lang.Object[] $r8;
        org.apache.catalina.LifecycleState $r11;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r3 = r0.<org.apache.catalina.realm.RealmBase: java.lang.String digest>;
        if $r3 == null goto label3;

     label0:
        $r4 = r0.<org.apache.catalina.realm.RealmBase: java.lang.String digest>;
        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4);
        r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md> = $r5;

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r1 = $r6;
        $r7 = new org.apache.catalina.LifecycleException;
        $r2 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = newarray (java.lang.Object)[1];
        $r9 = r0.<org.apache.catalina.realm.RealmBase: java.lang.String digest>;
        $r8[0] = $r9;
        $r10 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.algorithm", $r8);
        specialinvoke $r7.<org.apache.catalina.LifecycleException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r1);
        throw $r7;

     label3:
        $r11 = <org.apache.catalina.LifecycleState: org.apache.catalina.LifecycleState STARTING>;
        virtualinvoke r0.<org.apache.catalina.realm.RealmBase: void setState(org.apache.catalina.LifecycleState)>($r11);
        return;

        catch java.security.NoSuchAlgorithmException from label0 to label1 with label2;
    }

    protected void stopInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.LifecycleState $r1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = <org.apache.catalina.LifecycleState: org.apache.catalina.LifecycleState STOPPING>;
        virtualinvoke r0.<org.apache.catalina.realm.RealmBase: void setState(org.apache.catalina.LifecycleState)>($r1);
        r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md> = null;
        return;
    }

    public java.lang.String toString()
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r3, $r6;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Realm[");
        r2 = $r1;
        $r3 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    protected java.lang.String digest(java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0, r2;
        java.lang.String r1, $r11, $r13, $r15, $r19, $r24;
        null_type n0;
        java.io.UnsupportedEncodingException r3, $r8;
        boolean $z0;
        java.security.MessageDigest $r5, $r16, $r17;
        java.nio.charset.Charset $r6;
        byte[] r7, $r18;
        org.apache.juli.logging.Log $r9, $r22;
        java.lang.StringBuilder $r10, $r12;
        java.lang.IllegalArgumentException $r14;
        java.lang.Exception $r20, r21;
        org.apache.tomcat.util.res.StringManager $r23;
        java.lang.Throwable $r26;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: boolean hasMessageDigest()>();
        if $z0 != 0 goto label0;

        return r1;

     label0:
        r2 = r0;
        entermonitor r0;

     label1:
        $r5 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        virtualinvoke $r5.<java.security.MessageDigest: void reset()>();
        n0 = null;

     label2:
        $r6 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.nio.charset.Charset getDigestCharset()>();
        r7 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        r3 = $r8;
        $r9 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Illegal digestEncoding: ");
        $r11 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getDigestEncoding()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r13, r3);
        $r14 = new java.lang.IllegalArgumentException;
        $r15 = virtualinvoke r3.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();
        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);
        throw $r14;

     label5:
        $r16 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        virtualinvoke $r16.<java.security.MessageDigest: void update(byte[])>(r7);
        $r17 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        $r18 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest()>();
        $r19 = staticinvoke <org.apache.tomcat.util.buf.HexUtils: java.lang.String toHexString(byte[])>($r18);

     label6:
        exitmonitor r2;

     label7:
        return $r19;

     label8:
        $r20 := @caughtexception;

     label9:
        r21 = $r20;
        $r22 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r23 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r24 = virtualinvoke $r23.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("realmBase.digest");
        interfaceinvoke $r22.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r24, r21);
        exitmonitor r2;

     label10:
        return r1;

     label11:
        $r26 := @caughtexception;

     label12:
        exitmonitor r2;

     label13:
        throw $r26;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
        catch java.lang.Exception from label1 to label6 with label8;
        catch java.lang.Throwable from label1 to label7 with label11;
        catch java.lang.Throwable from label9 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    protected boolean hasMessageDigest()
    {
        org.apache.catalina.realm.RealmBase r0;
        java.security.MessageDigest $r1;
        boolean $z0;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = r0.<org.apache.catalina.realm.RealmBase: java.security.MessageDigest md>;
        if $r1 != null goto label0;

        $z0 = 0;
        goto label1;

     label0:
        $z0 = 1;

     label1:
        return $z0;
    }

    protected java.lang.String getDigest(java.lang.String, java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String r1, r2, $r11, $r12, $r14, $r18, r20, $r26, $r28, $r30, $r35;
        java.security.MessageDigest $r3, r6, $r7, $r31, $r32;
        java.security.NoSuchAlgorithmException r4, $r8;
        null_type n0, n1;
        java.io.UnsupportedEncodingException r5, $r23;
        org.apache.juli.logging.Log $r9, $r24;
        java.lang.IllegalStateException $r10;
        boolean $z0;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r19, $r25, $r27;
        java.nio.charset.Charset $r21;
        byte[] r22, r33;
        java.lang.IllegalArgumentException $r29;
        java.lang.Throwable $r34;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <org.apache.catalina.realm.RealmBase: java.security.MessageDigest md5Helper>;
        if $r3 != null goto label3;

     label0:
        $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");
        <org.apache.catalina.realm.RealmBase: java.security.MessageDigest md5Helper> = $r7;

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r4 = $r8;
        $r9 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Couldn\'t get MD5 digest: ", r4);
        $r10 = new java.lang.IllegalStateException;
        $r11 = virtualinvoke r4.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();
        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);
        throw $r10;

     label3:
        $z0 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: boolean hasMessageDigest()>();
        if $z0 == 0 goto label4;

        $r12 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getPassword(java.lang.String)>(r1);
        return $r12;

     label4:
        $r13 = new java.lang.StringBuilder;
        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r18 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getPassword(java.lang.String)>(r1);
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        n0 = null;

     label5:
        $r21 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.nio.charset.Charset getDigestCharset()>();
        r22 = virtualinvoke r20.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r21);

     label6:
        goto label8;

     label7:
        $r23 := @caughtexception;
        r5 = $r23;
        $r24 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("Illegal digestEncoding: ");
        $r26 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getDigestEncoding()>();
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r24.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r28, r5);
        $r29 = new java.lang.IllegalArgumentException;
        $r30 = virtualinvoke r5.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();
        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);
        throw $r29;

     label8:
        n1 = null;
        $r31 = <org.apache.catalina.realm.RealmBase: java.security.MessageDigest md5Helper>;
        r6 = $r31;
        entermonitor $r31;

     label9:
        $r32 = <org.apache.catalina.realm.RealmBase: java.security.MessageDigest md5Helper>;
        r33 = virtualinvoke $r32.<java.security.MessageDigest: byte[] digest(byte[])>(r22);
        exitmonitor r6;

     label10:
        goto label14;

     label11:
        $r34 := @caughtexception;

     label12:
        exitmonitor r6;

     label13:
        throw $r34;

     label14:
        $r35 = staticinvoke <org.apache.tomcat.util.security.MD5Encoder: java.lang.String encode(byte[])>(r33);
        return $r35;

        catch java.security.NoSuchAlgorithmException from label0 to label1 with label2;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label7;
        catch java.lang.Throwable from label9 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    protected abstract java.lang.String getName();

    protected abstract java.lang.String getPassword(java.lang.String);

    protected java.security.Principal getPrincipal(java.security.cert.X509Certificate)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.security.cert.X509Certificate r1;
        java.lang.String r2, $r8;
        org.apache.catalina.realm.X509UsernameRetriever $r3;
        org.apache.juli.logging.Log $r4, $r5;
        boolean $z0;
        org.apache.tomcat.util.res.StringManager $r6;
        java.lang.Object[] $r7;
        java.security.Principal $r9;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.security.cert.X509Certificate;
        $r3 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.realm.X509UsernameRetriever x509UsernameRetriever>;
        r2 = interfaceinvoke $r3.<org.apache.catalina.realm.X509UsernameRetriever: java.lang.String getUsername(java.security.cert.X509Certificate)>(r1);
        $r4 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r4.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r5 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        $r6 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r7 = newarray (java.lang.Object)[1];
        $r7[0] = r2;
        $r8 = virtualinvoke $r6.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.gotX509Username", $r7);
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r8);

     label0:
        $r9 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.security.Principal getPrincipal(java.lang.String)>(r2);
        return $r9;
    }

    protected abstract java.security.Principal getPrincipal(java.lang.String);

    protected java.security.Principal getPrincipal(java.lang.String, org.ietf.jgss.GSSCredential)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String r1;
        org.ietf.jgss.GSSCredential r2;
        java.security.Principal r3;
        boolean $z0;
        org.apache.catalina.realm.GenericPrincipal $r4;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.ietf.jgss.GSSCredential;
        r3 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.security.Principal getPrincipal(java.lang.String)>(r1);
        $z0 = r3 instanceof org.apache.catalina.realm.GenericPrincipal;
        if $z0 == 0 goto label0;

        $r4 = (org.apache.catalina.realm.GenericPrincipal) r3;
        virtualinvoke $r4.<org.apache.catalina.realm.GenericPrincipal: void setGssCredential(org.ietf.jgss.GSSCredential)>(r2);

     label0:
        return r3;
    }

    protected org.apache.catalina.Server getServer()
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.Container r1;
        org.apache.catalina.Service r2;
        boolean $z0, $z1, $z2;
        org.apache.catalina.Engine $r3;
        org.apache.catalina.Server $r4;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.Container container>;
        $z0 = r1 instanceof org.apache.catalina.Context;
        if $z0 == 0 goto label0;

        r1 = interfaceinvoke r1.<org.apache.catalina.Container: org.apache.catalina.Container getParent()>();

     label0:
        $z1 = r1 instanceof org.apache.catalina.Host;
        if $z1 == 0 goto label1;

        r1 = interfaceinvoke r1.<org.apache.catalina.Container: org.apache.catalina.Container getParent()>();

     label1:
        $z2 = r1 instanceof org.apache.catalina.Engine;
        if $z2 == 0 goto label2;

        $r3 = (org.apache.catalina.Engine) r1;
        r2 = interfaceinvoke $r3.<org.apache.catalina.Engine: org.apache.catalina.Service getService()>();
        if r2 == null goto label2;

        $r4 = interfaceinvoke r2.<org.apache.catalina.Service: org.apache.catalina.Server getServer()>();
        return $r4;

     label2:
        return null;
    }

    public static final java.lang.String Digest(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r9;
        java.security.MessageDigest r3, $r4;
        java.lang.Object $r5;
        byte[] $r6, $r7, $r8;
        java.lang.Exception $r10, r11;
        org.apache.juli.logging.Log $r12;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;

     label0:
        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1);
        $r5 = virtualinvoke $r4.<java.security.MessageDigest: java.lang.Object clone()>();
        r3 = (java.security.MessageDigest) $r5;
        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r3.<java.security.MessageDigest: void update(byte[])>($r6);
        goto label2;

     label1:
        $r7 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r2);
        virtualinvoke r3.<java.security.MessageDigest: void update(byte[])>($r7);

     label2:
        $r8 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>();
        $r9 = staticinvoke <org.apache.tomcat.util.buf.HexUtils: java.lang.String toHexString(byte[])>($r8);

     label3:
        return $r9;

     label4:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = <org.apache.catalina.realm.RealmBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void error(java.lang.Object)>(r11);
        return r0;

        catch java.lang.Exception from label0 to label3 with label4;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.String r1, $r2, $r3, $r6, $r7, $r9, $r11, $r12, $r13;
        byte b0;
        int i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        java.io.PrintStream $r4, $r10, $r14;
        java.lang.StringBuilder $r5, $r8;

        r0 := @parameter0: java.lang.String[];
        r1 = null;
        b0 = 2;
        $i2 = lengthof r0;
        if $i2 <= 4 goto label0;

        $r2 = r0[2];
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-e");
        if $z0 == 0 goto label0;

        r1 = r0[3];
        b0 = 4;

     label0:
        $i3 = lengthof r0;
        if $i3 <= b0 goto label3;

        $r3 = r0[0];
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-a");
        if $z1 == 0 goto label3;

        i1 = b0;
        goto label2;

     label1:
        $r4 = <java.lang.System: java.io.PrintStream out>;
        $r5 = new java.lang.StringBuilder;
        $r6 = r0[i1];
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>($r9);
        $r10 = <java.lang.System: java.io.PrintStream out>;
        $r11 = r0[i1];
        $r12 = r0[1];
        $r13 = staticinvoke <org.apache.catalina.realm.RealmBase: java.lang.String Digest(java.lang.String,java.lang.String,java.lang.String)>($r11, $r12, r1);
        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);
        i1 = i1 + 1;

     label2:
        $i4 = lengthof r0;
        if i1 < $i4 goto label1;

        goto label4;

     label3:
        $r14 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Usage: RealmBase -a <algorithm> [-e <encoding>] <credentials>");

     label4:
        return;
    }

    public java.lang.String getObjectNameKeyProperties()
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r3, $r6, $r8;
        org.apache.catalina.Container $r5;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("type=Realm");
        r2 = $r1;
        $r3 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getRealmSuffix()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.Container container>;
        $r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String getContainerKeyProperties(org.apache.catalina.Container)>($r5);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r8;
    }

    public java.lang.String getDomainInternal()
    {
        org.apache.catalina.realm.RealmBase r0;
        org.apache.catalina.Container $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = r0.<org.apache.catalina.realm.RealmBase: org.apache.catalina.Container container>;
        $r2 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String getDomain(org.apache.catalina.Container)>($r1);
        return $r2;
    }

    public java.lang.String getRealmPath()
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = r0.<org.apache.catalina.realm.RealmBase: java.lang.String realmPath>;
        return $r1;
    }

    public void setRealmPath(java.lang.String)
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.realm.RealmBase: java.lang.String realmPath> = r1;
        return;
    }

    protected java.lang.String getRealmSuffix()
    {
        org.apache.catalina.realm.RealmBase r0;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @this: org.apache.catalina.realm.RealmBase;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(",realmPath=");
        $r2 = virtualinvoke r0.<org.apache.catalina.realm.RealmBase: java.lang.String getRealmPath()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r4;
    }

    private static org.apache.catalina.realm.X509UsernameRetriever createUsernameRetriever(java.lang.String) throws org.apache.catalina.LifecycleException
    {
        java.lang.String r0, $r3, $r4, $r12, $r18, $r24, $r30;
        java.lang.Class r1;
        org.apache.tomcat.util.res.StringManager $r2, $r16, $r22, $r28;
        boolean $z0;
        org.apache.catalina.realm.X509SubjectDnRetriever $r5;
        java.lang.Object $r6;
        org.apache.catalina.realm.X509UsernameRetriever $r7;
        java.lang.ClassNotFoundException $r8, r9;
        org.apache.catalina.LifecycleException $r10, $r15, $r21, $r27;
        java.lang.Object[] $r11, $r17, $r23, $r29;
        java.lang.InstantiationException $r13, r14;
        java.lang.IllegalAccessException $r19, r20;
        java.lang.ClassCastException $r25, r26;

        r0 := @parameter0: java.lang.String;
        if r0 == null goto label0;

        $r3 = "";
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z0 == 0 goto label1;

     label0:
        $r5 = new org.apache.catalina.realm.X509SubjectDnRetriever;
        specialinvoke $r5.<org.apache.catalina.realm.X509SubjectDnRetriever: void <init>()>();
        return $r5;

     label1:
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);
        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>();
        $r7 = (org.apache.catalina.realm.X509UsernameRetriever) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new org.apache.catalina.LifecycleException;
        $r2 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[1];
        $r11[0] = r0;
        $r12 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.createUsernameRetriever.ClassNotFoundException", $r11);
        specialinvoke $r10.<org.apache.catalina.LifecycleException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r9);
        throw $r10;

     label4:
        $r13 := @caughtexception;
        r14 = $r13;
        $r15 = new org.apache.catalina.LifecycleException;
        $r16 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r17 = newarray (java.lang.Object)[1];
        $r17[0] = r0;
        $r18 = virtualinvoke $r16.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.createUsernameRetriever.InstantiationException", $r17);
        specialinvoke $r15.<org.apache.catalina.LifecycleException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r14);
        throw $r15;

     label5:
        $r19 := @caughtexception;
        r20 = $r19;
        $r21 = new org.apache.catalina.LifecycleException;
        $r22 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r23 = newarray (java.lang.Object)[1];
        $r23[0] = r0;
        $r24 = virtualinvoke $r22.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.createUsernameRetriever.IllegalAccessException", $r23);
        specialinvoke $r21.<org.apache.catalina.LifecycleException: void <init>(java.lang.String,java.lang.Throwable)>($r24, r20);
        throw $r21;

     label6:
        $r25 := @caughtexception;
        r26 = $r25;
        $r27 = new org.apache.catalina.LifecycleException;
        $r28 = <org.apache.catalina.realm.RealmBase: org.apache.tomcat.util.res.StringManager sm>;
        $r29 = newarray (java.lang.Object)[1];
        $r29[0] = r0;
        $r30 = virtualinvoke $r28.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("realmBase.createUsernameRetriever.ClassCastException", $r29);
        specialinvoke $r27.<org.apache.catalina.LifecycleException: void <init>(java.lang.String,java.lang.Throwable)>($r30, r26);
        throw $r27;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label1 to label2 with label6;
    }
}
