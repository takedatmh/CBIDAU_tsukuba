public class sun.util.BuddhistCalendar extends java.util.GregorianCalendar
{
    private static final long serialVersionUID;
    private static final int BUDDHIST_YEAR_OFFSET;
    private transient int yearOffset;

    public void <init>()
    {
        sun.util.BuddhistCalendar r0;

        r0 := @this: sun.util.BuddhistCalendar;
        specialinvoke r0.<java.util.GregorianCalendar: void <init>()>();
        r0.<sun.util.BuddhistCalendar: int yearOffset> = 543;
        return;
    }

    public void <init>(java.util.TimeZone)
    {
        sun.util.BuddhistCalendar r0;
        java.util.TimeZone r1;

        r0 := @this: sun.util.BuddhistCalendar;
        r1 := @parameter0: java.util.TimeZone;
        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r1);
        r0.<sun.util.BuddhistCalendar: int yearOffset> = 543;
        return;
    }

    public void <init>(java.util.Locale)
    {
        sun.util.BuddhistCalendar r0;
        java.util.Locale r1;

        r0 := @this: sun.util.BuddhistCalendar;
        r1 := @parameter0: java.util.Locale;
        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.Locale)>(r1);
        r0.<sun.util.BuddhistCalendar: int yearOffset> = 543;
        return;
    }

    public void <init>(java.util.TimeZone, java.util.Locale)
    {
        sun.util.BuddhistCalendar r0;
        java.util.TimeZone r1;
        java.util.Locale r2;

        r0 := @this: sun.util.BuddhistCalendar;
        r1 := @parameter0: java.util.TimeZone;
        r2 := @parameter1: java.util.Locale;
        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>(r1, r2);
        r0.<sun.util.BuddhistCalendar: int yearOffset> = 543;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        sun.util.BuddhistCalendar r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: sun.util.BuddhistCalendar;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.util.BuddhistCalendar;
        if $z0 == 0 goto label0;

        $z1 = specialinvoke r0.<java.util.GregorianCalendar: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public int hashCode()
    {
        sun.util.BuddhistCalendar r0;
        int $i0, $i1;

        r0 := @this: sun.util.BuddhistCalendar;
        $i0 = specialinvoke r0.<java.util.GregorianCalendar: int hashCode()>();
        $i1 = $i0 ^ 543;
        return $i1;
    }

    public int get(int)
    {
        sun.util.BuddhistCalendar r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: sun.util.BuddhistCalendar;
        i0 := @parameter0: int;
        if i0 != 1 goto label0;

        $i1 = specialinvoke r0.<java.util.GregorianCalendar: int get(int)>(i0);
        $i2 = r0.<sun.util.BuddhistCalendar: int yearOffset>;
        $i3 = $i1 + $i2;
        return $i3;

     label0:
        $i4 = specialinvoke r0.<java.util.GregorianCalendar: int get(int)>(i0);
        return $i4;
    }

    public void set(int, int)
    {
        sun.util.BuddhistCalendar r0;
        int i0, i1, $i2, $i3;

        r0 := @this: sun.util.BuddhistCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 != 1 goto label0;

        $i2 = r0.<sun.util.BuddhistCalendar: int yearOffset>;
        $i3 = i1 - $i2;
        specialinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, $i3);
        goto label1;

     label0:
        specialinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i1);

     label1:
        return;
    }

    public void add(int, int)
    {
        sun.util.BuddhistCalendar r0;
        int i0, i1, i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: sun.util.BuddhistCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 = r0.<sun.util.BuddhistCalendar: int yearOffset>;
        r0.<sun.util.BuddhistCalendar: int yearOffset> = 0;

     label0:
        specialinvoke r0.<java.util.GregorianCalendar: void add(int,int)>(i0, i1);

     label1:
        r0.<sun.util.BuddhistCalendar: int yearOffset> = i2;
        goto label5;

     label2:
        $r2 := @caughtexception;

     label3:
        r1 = $r2;

     label4:
        r0.<sun.util.BuddhistCalendar: int yearOffset> = i2;
        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void roll(int, int)
    {
        sun.util.BuddhistCalendar r0;
        int i0, i1, i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: sun.util.BuddhistCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 = r0.<sun.util.BuddhistCalendar: int yearOffset>;
        r0.<sun.util.BuddhistCalendar: int yearOffset> = 0;

     label0:
        specialinvoke r0.<java.util.GregorianCalendar: void roll(int,int)>(i0, i1);

     label1:
        r0.<sun.util.BuddhistCalendar: int yearOffset> = i2;
        goto label5;

     label2:
        $r2 := @caughtexception;

     label3:
        r1 = $r2;

     label4:
        r0.<sun.util.BuddhistCalendar: int yearOffset> = i2;
        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.String getDisplayName(int, int, java.util.Locale)
    {
        sun.util.BuddhistCalendar r0;
        int i0, i1, $i2, $i3;
        java.util.Locale r1;
        java.util.ResourceBundle r2;
        java.lang.String[] r3;
        java.lang.String $r4, $r8, $r9;
        int[] $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: sun.util.BuddhistCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.util.Locale;
        if i0 == 0 goto label0;

        $r4 = specialinvoke r0.<java.util.GregorianCalendar: java.lang.String getDisplayName(int,int,java.util.Locale)>(i0, i1, r1);
        return $r4;

     label0:
        if i0 < 0 goto label1;

        $r5 = r0.<sun.util.BuddhistCalendar: int[] fields>;
        $i2 = lengthof $r5;
        if i0 >= $i2 goto label1;

        if i1 < 1 goto label1;

        if i1 <= 2 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r6;

     label2:
        if r1 != null goto label3;

        $r7 = new java.lang.NullPointerException;
        specialinvoke $r7.<java.lang.NullPointerException: void <init>()>();
        throw $r7;

     label3:
        r2 = staticinvoke <sun.util.resources.LocaleData: java.util.ResourceBundle getDateFormatData(java.util.Locale)>(r1);
        $r8 = specialinvoke r0.<sun.util.BuddhistCalendar: java.lang.String getKey(int)>(i1);
        r3 = virtualinvoke r2.<java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)>($r8);
        $i3 = virtualinvoke r0.<sun.util.BuddhistCalendar: int get(int)>(i0);
        $r9 = r3[$i3];
        return $r9;
    }

    public java.util.Map getDisplayNames(int, int, java.util.Locale)
    {
        sun.util.BuddhistCalendar r0;
        int i0, i1, $i2;
        java.util.Locale r1;
        java.util.Map r2, r3, $r4, $r8;
        int[] $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: sun.util.BuddhistCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.util.Locale;
        if i0 == 0 goto label0;

        $r4 = specialinvoke r0.<java.util.GregorianCalendar: java.util.Map getDisplayNames(int,int,java.util.Locale)>(i0, i1, r1);
        return $r4;

     label0:
        if i0 < 0 goto label1;

        $r5 = r0.<sun.util.BuddhistCalendar: int[] fields>;
        $i2 = lengthof $r5;
        if i0 >= $i2 goto label1;

        if i1 < 0 goto label1;

        if i1 <= 2 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r6;

     label2:
        if r1 != null goto label3;

        $r7 = new java.lang.NullPointerException;
        specialinvoke $r7.<java.lang.NullPointerException: void <init>()>();
        throw $r7;

     label3:
        if i1 != 0 goto label6;

        r2 = specialinvoke r0.<sun.util.BuddhistCalendar: java.util.Map getDisplayNamesImpl(int,int,java.util.Locale)>(i0, 1, r1);
        r3 = specialinvoke r0.<sun.util.BuddhistCalendar: java.util.Map getDisplayNamesImpl(int,int,java.util.Locale)>(i0, 2, r1);
        if r2 != null goto label4;

        return r3;

     label4:
        if r3 == null goto label5;

        interfaceinvoke r2.<java.util.Map: void putAll(java.util.Map)>(r3);

     label5:
        return r2;

     label6:
        $r8 = specialinvoke r0.<sun.util.BuddhistCalendar: java.util.Map getDisplayNamesImpl(int,int,java.util.Locale)>(i0, i1, r1);
        return $r8;
    }

    private java.util.Map getDisplayNamesImpl(int, int, java.util.Locale)
    {
        sun.util.BuddhistCalendar r0;
        int i0, i1, i2, $i3;
        java.util.Locale r1;
        java.util.ResourceBundle r2;
        java.lang.String[] r3;
        java.util.HashMap r4, $r6;
        java.lang.String $r5, $r7;
        java.lang.Integer $r8;

        r0 := @this: sun.util.BuddhistCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.util.Locale;
        r2 = staticinvoke <sun.util.resources.LocaleData: java.util.ResourceBundle getDateFormatData(java.util.Locale)>(r1);
        $r5 = specialinvoke r0.<sun.util.BuddhistCalendar: java.lang.String getKey(int)>(i1);
        r3 = virtualinvoke r2.<java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)>($r5);
        $r6 = new java.util.HashMap;
        specialinvoke $r6.<java.util.HashMap: void <init>(int)>(4);
        r4 = $r6;
        i2 = 0;

     label0:
        $i3 = lengthof r3;
        if i2 >= $i3 goto label1;

        $r7 = r3[i2];
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);
        i2 = i2 + 1;
        goto label0;

     label1:
        return r4;
    }

    private java.lang.String getKey(int)
    {
        sun.util.BuddhistCalendar r0;
        int i0;
        java.lang.StringBuilder $r1, r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r8;

        r0 := @this: sun.util.BuddhistCalendar;
        i0 := @parameter0: int;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r3 = class "sun/util/BuddhistCalendar";
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        if i0 != 1 goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".short");

     label0:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".Eras");
        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r8;
    }

    public int getActualMaximum(int)
    {
        sun.util.BuddhistCalendar r0;
        int i0, i1, i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: sun.util.BuddhistCalendar;
        i0 := @parameter0: int;
        i1 = r0.<sun.util.BuddhistCalendar: int yearOffset>;
        r0.<sun.util.BuddhistCalendar: int yearOffset> = 0;

     label0:
        i2 = specialinvoke r0.<java.util.GregorianCalendar: int getActualMaximum(int)>(i0);

     label1:
        r0.<sun.util.BuddhistCalendar: int yearOffset> = i1;
        return i2;

     label2:
        $r2 := @caughtexception;

     label3:
        r1 = $r2;

     label4:
        r0.<sun.util.BuddhistCalendar: int yearOffset> = i1;
        throw r1;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.String toString()
    {
        sun.util.BuddhistCalendar r0;
        java.lang.String r1, $r3, $r5, $r7, $r9;
        int i0, i1, $i2, i3, $i4, $i6, $i7;
        java.lang.StringBuilder r2, $r4, $r6;
        boolean $z0, $z1;
        char $c5;

        r0 := @this: sun.util.BuddhistCalendar;
        r1 = specialinvoke r0.<java.util.GregorianCalendar: java.lang.String toString()>();
        $z0 = virtualinvoke r0.<sun.util.BuddhistCalendar: boolean isSet(int)>(1);
        if $z0 != 0 goto label0;

        return r1;

     label0:
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("YEAR=");
        if i0 != -1 goto label1;

        return r1;

     label1:
        $r3 = "YEAR=";
        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();
        i3 = i0 + $i2;
        $r4 = new java.lang.StringBuilder;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i3);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
        r2 = $r4;

     label2:
        $i4 = i3;
        i3 = i3 + 1;
        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);
        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c5);
        if $z1 == 0 goto label3;

        goto label2;

     label3:
        $i6 = virtualinvoke r0.<sun.util.BuddhistCalendar: int internalGet(int)>(1);
        i1 = $i6 + 543;
        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $i7 = i3 - 1;
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i7);
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r9;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        sun.util.BuddhistCalendar r0;
        java.io.ObjectInputStream r1;

        r0 := @this: sun.util.BuddhistCalendar;
        r1 := @parameter0: java.io.ObjectInputStream;
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();
        r0.<sun.util.BuddhistCalendar: int yearOffset> = 543;
        return;
    }
}
