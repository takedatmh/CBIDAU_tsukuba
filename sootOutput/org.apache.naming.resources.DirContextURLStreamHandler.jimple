public class org.apache.naming.resources.DirContextURLStreamHandler extends java.net.URLStreamHandler
{
    private static java.util.Hashtable clBindings;
    private static java.util.Hashtable threadBindings;
    protected javax.naming.directory.DirContext context;

    static void <clinit>()
    {
        java.util.Hashtable $r0, $r1;

        $r0 = new java.util.Hashtable;
        specialinvoke $r0.<java.util.Hashtable: void <init>()>();
        <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable clBindings> = $r0;
        $r1 = new java.util.Hashtable;
        specialinvoke $r1.<java.util.Hashtable: void <init>()>();
        <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable threadBindings> = $r1;
        return;
    }

    public void <init>()
    {
        org.apache.naming.resources.DirContextURLStreamHandler r0;

        r0 := @this: org.apache.naming.resources.DirContextURLStreamHandler;
        specialinvoke r0.<java.net.URLStreamHandler: void <init>()>();
        r0.<org.apache.naming.resources.DirContextURLStreamHandler: javax.naming.directory.DirContext context> = null;
        return;
    }

    public void <init>(javax.naming.directory.DirContext)
    {
        org.apache.naming.resources.DirContextURLStreamHandler r0;
        javax.naming.directory.DirContext r1;

        r0 := @this: org.apache.naming.resources.DirContextURLStreamHandler;
        r1 := @parameter0: javax.naming.directory.DirContext;
        specialinvoke r0.<java.net.URLStreamHandler: void <init>()>();
        r0.<org.apache.naming.resources.DirContextURLStreamHandler: javax.naming.directory.DirContext context> = null;
        r0.<org.apache.naming.resources.DirContextURLStreamHandler: javax.naming.directory.DirContext context> = r1;
        return;
    }

    protected java.net.URLConnection openConnection(java.net.URL) throws java.io.IOException
    {
        org.apache.naming.resources.DirContextURLStreamHandler r0;
        java.net.URL r1;
        javax.naming.directory.DirContext r2;
        org.apache.naming.resources.DirContextURLConnection $r3;

        r0 := @this: org.apache.naming.resources.DirContextURLStreamHandler;
        r1 := @parameter0: java.net.URL;
        r2 = r0.<org.apache.naming.resources.DirContextURLStreamHandler: javax.naming.directory.DirContext context>;
        if r2 != null goto label0;

        r2 = staticinvoke <org.apache.naming.resources.DirContextURLStreamHandler: javax.naming.directory.DirContext get()>();

     label0:
        $r3 = new org.apache.naming.resources.DirContextURLConnection;
        specialinvoke $r3.<org.apache.naming.resources.DirContextURLConnection: void <init>(javax.naming.directory.DirContext,java.net.URL)>(r2, r1);
        return $r3;
    }

    protected java.lang.String toExternalForm(java.net.URL)
    {
        org.apache.naming.resources.DirContextURLStreamHandler r0;
        java.net.URL r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder r2, $r10;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r14, $r15, $r17, $r19, $r21, $r23, $r25;

        r0 := @this: org.apache.naming.resources.DirContextURLStreamHandler;
        r1 := @parameter0: java.net.URL;
        $r3 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();
        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();
        i0 = $i1 + 1;
        $r4 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();
        if $r4 == null goto label0;

        $r5 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();
        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();
        i0 = i0 + $i2;

     label0:
        $r6 = virtualinvoke r1.<java.net.URL: java.lang.String getQuery()>();
        if $r6 == null goto label1;

        $r7 = virtualinvoke r1.<java.net.URL: java.lang.String getQuery()>();
        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();
        $i4 = 1 + $i3;
        i0 = i0 + $i4;

     label1:
        $r8 = virtualinvoke r1.<java.net.URL: java.lang.String getRef()>();
        if $r8 == null goto label2;

        $r9 = virtualinvoke r1.<java.net.URL: java.lang.String getRef()>();
        $i5 = virtualinvoke $r9.<java.lang.String: int length()>();
        $i6 = 1 + $i5;
        i0 = i0 + $i6;

     label2:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>(i0);
        r2 = $r10;
        $r11 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r14 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();
        if $r14 == null goto label3;

        $r15 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label3:
        $r17 = virtualinvoke r1.<java.net.URL: java.lang.String getQuery()>();
        if $r17 == null goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);
        $r19 = virtualinvoke r1.<java.net.URL: java.lang.String getQuery()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label4:
        $r21 = virtualinvoke r1.<java.net.URL: java.lang.String getRef()>();
        if $r21 == null goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");
        $r23 = virtualinvoke r1.<java.net.URL: java.lang.String getRef()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label5:
        $r25 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r25;
    }

    public static void setProtocolHandler()
    {
        java.lang.String r0, r1, $r4, r6;
        int $i0;
        java.lang.StringBuilder $r3, $r5;

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.protocol.handler.pkgs");
        if r0 != null goto label0;

        r1 = "org.apache.naming.resources";
        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("java.protocol.handler.pkgs", r1);
        goto label1;

     label0:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("org.apache.naming.resources");
        if $i0 != -1 goto label1;

        $r3 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|org.apache.naming.resources");
        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("java.protocol.handler.pkgs", r6);

     label1:
        return;
    }

    public static boolean isBound()
    {
        java.util.Hashtable $r0, $r3;
        java.lang.Thread $r1, $r4;
        java.lang.ClassLoader $r2;
        boolean $z0, $z1;

        $r0 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable clBindings>;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        $z0 = virtualinvoke $r0.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r2);
        if $z0 != 0 goto label0;

        $r3 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable threadBindings>;
        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z1 = virtualinvoke $r3.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r4);
        if $z1 != 0 goto label0;

        return 0;

     label0:
        return 1;
    }

    public static void bind(javax.naming.directory.DirContext)
    {
        javax.naming.directory.DirContext r0;
        java.lang.Thread $r1;
        java.lang.ClassLoader r2;
        java.util.Hashtable $r3;

        r0 := @parameter0: javax.naming.directory.DirContext;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        if r2 == null goto label0;

        $r3 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable clBindings>;
        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label0:
        return;
    }

    public static void unbind()
    {
        java.lang.Thread $r0;
        java.lang.ClassLoader r1;
        java.util.Hashtable $r2;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        if r1 == null goto label0;

        $r2 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable clBindings>;
        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

     label0:
        return;
    }

    public static void bindThread(javax.naming.directory.DirContext)
    {
        javax.naming.directory.DirContext r0;
        java.util.Hashtable $r1;
        java.lang.Thread $r2;

        r0 := @parameter0: javax.naming.directory.DirContext;
        $r1 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable threadBindings>;
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r0);
        return;
    }

    public static void unbindThread()
    {
        java.util.Hashtable $r0;
        java.lang.Thread $r1;

        $r0 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable threadBindings>;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r1);
        return;
    }

    public static javax.naming.directory.DirContext get()
    {
        null_type n0;
        java.lang.Thread r0;
        java.lang.ClassLoader r1, r8;
        java.util.Hashtable $r2, $r5, $r9;
        java.lang.Object $r3, $r6, $r10;
        javax.naming.directory.DirContext r4, r7;
        java.lang.IllegalStateException $r11;

        n0 = null;
        r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r1 = virtualinvoke r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        $r2 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable clBindings>;
        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        r4 = (javax.naming.directory.DirContext) $r3;
        if r4 == null goto label0;

        return r4;

     label0:
        $r5 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable threadBindings>;
        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);
        r7 = (javax.naming.directory.DirContext) $r6;
        r8 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();
        goto label3;

     label1:
        $r9 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable clBindings>;
        $r10 = virtualinvoke $r9.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r8);
        r7 = (javax.naming.directory.DirContext) $r10;
        if r7 == null goto label2;

        return r7;

     label2:
        r8 = virtualinvoke r8.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

     label3:
        if r8 != null goto label1;

        if r7 != null goto label4;

        $r11 = new java.lang.IllegalStateException;
        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Illegal class loader binding");
        throw $r11;

     label4:
        return r7;
    }

    public static void bind(java.lang.ClassLoader, javax.naming.directory.DirContext)
    {
        java.lang.ClassLoader r0;
        javax.naming.directory.DirContext r1;
        java.util.Hashtable $r2;

        r0 := @parameter0: java.lang.ClassLoader;
        r1 := @parameter1: javax.naming.directory.DirContext;
        $r2 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable clBindings>;
        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);
        return;
    }

    public static void unbind(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0;
        java.util.Hashtable $r1;

        r0 := @parameter0: java.lang.ClassLoader;
        $r1 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable clBindings>;
        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r0);
        return;
    }

    public static javax.naming.directory.DirContext get(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0;
        java.util.Hashtable $r1;
        java.lang.Object $r2;
        javax.naming.directory.DirContext $r3;

        r0 := @parameter0: java.lang.ClassLoader;
        $r1 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable clBindings>;
        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);
        $r3 = (javax.naming.directory.DirContext) $r2;
        return $r3;
    }

    public static javax.naming.directory.DirContext get(java.lang.Thread)
    {
        java.lang.Thread r0;
        java.util.Hashtable $r1;
        java.lang.Object $r2;
        javax.naming.directory.DirContext $r3;

        r0 := @parameter0: java.lang.Thread;
        $r1 = <org.apache.naming.resources.DirContextURLStreamHandler: java.util.Hashtable threadBindings>;
        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);
        $r3 = (javax.naming.directory.DirContext) $r2;
        return $r3;
    }
}
