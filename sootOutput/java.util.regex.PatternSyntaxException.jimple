public class java.util.regex.PatternSyntaxException extends java.lang.IllegalArgumentException
{
    private static final long serialVersionUID;
    private final java.lang.String desc;
    private final java.lang.String pattern;
    private final int index;
    private static final java.lang.String nl;

    public void <init>(java.lang.String, java.lang.String, int)
    {
        java.util.regex.PatternSyntaxException r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: java.util.regex.PatternSyntaxException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>()>();
        r0.<java.util.regex.PatternSyntaxException: java.lang.String desc> = r1;
        r0.<java.util.regex.PatternSyntaxException: java.lang.String pattern> = r2;
        r0.<java.util.regex.PatternSyntaxException: int index> = i0;
        return;
    }

    public int getIndex()
    {
        java.util.regex.PatternSyntaxException r0;
        int $i0;

        r0 := @this: java.util.regex.PatternSyntaxException;
        $i0 = r0.<java.util.regex.PatternSyntaxException: int index>;
        return $i0;
    }

    public java.lang.String getDescription()
    {
        java.util.regex.PatternSyntaxException r0;
        java.lang.String $r1;

        r0 := @this: java.util.regex.PatternSyntaxException;
        $r1 = r0.<java.util.regex.PatternSyntaxException: java.lang.String desc>;
        return $r1;
    }

    public java.lang.String getPattern()
    {
        java.util.regex.PatternSyntaxException r0;
        java.lang.String $r1;

        r0 := @this: java.util.regex.PatternSyntaxException;
        $r1 = r0.<java.util.regex.PatternSyntaxException: java.lang.String pattern>;
        return $r1;
    }

    public java.lang.String getMessage()
    {
        java.util.regex.PatternSyntaxException r0;
        java.lang.StringBuffer $r1, r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3, $r7, $r9, $r11, $r15;

        r0 := @this: java.util.regex.PatternSyntaxException;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        $r3 = r0.<java.util.regex.PatternSyntaxException: java.lang.String desc>;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $i1 = r0.<java.util.regex.PatternSyntaxException: int index>;
        if $i1 < 0 goto label0;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" near index ");
        $i2 = r0.<java.util.regex.PatternSyntaxException: int index>;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

     label0:
        $r7 = <java.util.regex.PatternSyntaxException: java.lang.String nl>;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r9 = r0.<java.util.regex.PatternSyntaxException: java.lang.String pattern>;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $i3 = r0.<java.util.regex.PatternSyntaxException: int index>;
        if $i3 < 0 goto label3;

        $r11 = <java.util.regex.PatternSyntaxException: java.lang.String nl>;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);
        i0 = 0;

     label1:
        $i4 = r0.<java.util.regex.PatternSyntaxException: int index>;
        if i0 >= $i4 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);
        i0 = i0 + 1;
        goto label1;

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(94);

     label3:
        $r15 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r15;
    }

    static void <clinit>()
    {
        sun.security.action.GetPropertyAction $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 = new sun.security.action.GetPropertyAction;
        specialinvoke $r0.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>("line.separator");
        $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        $r2 = (java.lang.String) $r1;
        <java.util.regex.PatternSyntaxException: java.lang.String nl> = $r2;
        return;
    }
}
