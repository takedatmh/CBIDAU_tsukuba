abstract class java.beans.ChangeListenerMap extends java.lang.Object
{
    private java.util.Map map;

    void <init>()
    {
        java.beans.ChangeListenerMap r0;

        r0 := @this: java.beans.ChangeListenerMap;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    protected abstract java.util.EventListener[] newArray(int);

    protected abstract java.util.EventListener newProxy(java.lang.String, java.util.EventListener);

    public final synchronized void add(java.lang.String, java.util.EventListener)
    {
        java.beans.ChangeListenerMap r0;
        java.lang.String r1;
        java.util.EventListener r2;
        java.util.HashMap $r3;
        java.util.EventListener[] r4, r5;
        int i0, $i1, $i2;
        java.util.Map $r6, $r7, $r9;
        java.lang.Object $r8;

        r0 := @this: java.beans.ChangeListenerMap;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.EventListener;
        $r6 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        if $r6 != null goto label0;

        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        r0.<java.beans.ChangeListenerMap: java.util.Map map> = $r3;

     label0:
        $r7 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r4 = (java.util.EventListener[]) $r8;
        if r4 == null goto label1;

        $i1 = lengthof r4;
        goto label2;

     label1:
        $i1 = 0;

     label2:
        i0 = $i1;
        $i2 = i0 + 1;
        r5 = virtualinvoke r0.<java.beans.ChangeListenerMap: java.util.EventListener[] newArray(int)>($i2);
        r5[i0] = r2;
        if r4 == null goto label3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r5, 0, i0);

     label3:
        $r9 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);
        return;
    }

    public final synchronized void remove(java.lang.String, java.util.EventListener)
    {
        java.beans.ChangeListenerMap r0;
        java.lang.String r1;
        java.util.EventListener r2, $r8;
        java.util.EventListener[] r3, r4;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.Map $r5, $r6, $r9, $r11, $r13;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: java.beans.ChangeListenerMap;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.EventListener;
        $r5 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        if $r5 == null goto label3;

        $r6 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (java.util.EventListener[]) $r7;
        if r3 == null goto label3;

        i0 = 0;

     label0:
        $i2 = lengthof r3;
        if i0 >= $i2 goto label3;

        $r8 = r3[i0];
        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r8);
        if $z0 == 0 goto label2;

        $i3 = lengthof r3;
        i1 = $i3 - 1;
        if i1 <= 0 goto label1;

        r4 = virtualinvoke r0.<java.beans.ChangeListenerMap: java.util.EventListener[] newArray(int)>(i1);
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 0, i0);
        $i4 = i0 + 1;
        $i5 = i1 - i0;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, $i4, r4, i0, $i5);
        $r9 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);
        goto label3;

     label1:
        $r11 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);
        $r13 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        $z1 = interfaceinvoke $r13.<java.util.Map: boolean isEmpty()>();
        if $z1 == 0 goto label3;

        r0.<java.beans.ChangeListenerMap: java.util.Map map> = null;
        goto label3;

     label2:
        i0 = i0 + 1;
        goto label0;

     label3:
        return;
    }

    public final synchronized java.util.EventListener[] get(java.lang.String)
    {
        java.beans.ChangeListenerMap r0;
        java.lang.String r1;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.util.EventListener[] $r5;

        r0 := @this: java.beans.ChangeListenerMap;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        if $r2 == null goto label0;

        $r3 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r5 = (java.util.EventListener[]) $r4;
        goto label1;

     label0:
        $r5 = null;

     label1:
        return $r5;
    }

    public final void set(java.lang.String, java.util.EventListener[])
    {
        java.beans.ChangeListenerMap r0;
        java.lang.String r1;
        java.util.EventListener[] r2;
        java.util.HashMap $r3;
        java.util.Map $r4, $r5, $r7, $r8, $r10;
        boolean $z0;

        r0 := @this: java.beans.ChangeListenerMap;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.EventListener[];
        if r2 == null goto label1;

        $r4 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        if $r4 != null goto label0;

        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        r0.<java.beans.ChangeListenerMap: java.util.Map map> = $r3;

     label0:
        $r5 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        goto label2;

     label1:
        $r7 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        if $r7 == null goto label2;

        $r8 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);
        $r10 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        $z0 = interfaceinvoke $r10.<java.util.Map: boolean isEmpty()>();
        if $z0 == 0 goto label2;

        r0.<java.beans.ChangeListenerMap: java.util.Map map> = null;

     label2:
        return;
    }

    public final synchronized java.util.EventListener[] getListeners()
    {
        java.beans.ChangeListenerMap r0;
        java.util.ArrayList r1, $r8;
        java.util.EventListener[] r2, r3, $r7, r19, $r21, $r23;
        int i0, i1, i2, i3, $i4;
        java.util.EventListener r4, r5, $r20;
        java.util.Map $r6, $r9, $r11;
        java.lang.Object $r10, $r14, $r16, $r18;
        java.util.Set $r12;
        java.util.Iterator r13;
        boolean $z1;
        java.util.Map$Entry r15;
        java.lang.String r17;
        java.lang.Object[] $r22;

        r0 := @this: java.beans.ChangeListenerMap;
        $r6 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        if $r6 != null goto label0;

        $r7 = virtualinvoke r0.<java.beans.ChangeListenerMap: java.util.EventListener[] newArray(int)>(0);
        return $r7;

     label0:
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r1 = $r8;
        $r9 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(null);
        r2 = (java.util.EventListener[]) $r10;
        if r2 == null goto label2;

        r3 = r2;
        i0 = lengthof r3;
        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);
        i1 = i1 + 1;
        goto label1;

     label2:
        $r11 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();
        r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label6;

        $r14 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();
        r15 = (java.util.Map$Entry) $r14;
        $r16 = interfaceinvoke r15.<java.util.Map$Entry: java.lang.Object getKey()>();
        r17 = (java.lang.String) $r16;
        if r17 == null goto label5;

        $r18 = interfaceinvoke r15.<java.util.Map$Entry: java.lang.Object getValue()>();
        r19 = (java.util.EventListener[]) $r18;
        i2 = lengthof r19;
        i3 = 0;

     label4:
        if i3 >= i2 goto label5;

        r5 = r19[i3];
        $r20 = virtualinvoke r0.<java.beans.ChangeListenerMap: java.util.EventListener newProxy(java.lang.String,java.util.EventListener)>(r17, r5);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r20);
        i3 = i3 + 1;
        goto label4;

     label5:
        goto label3;

     label6:
        $i4 = interfaceinvoke r1.<java.util.List: int size()>();
        $r21 = virtualinvoke r0.<java.beans.ChangeListenerMap: java.util.EventListener[] newArray(int)>($i4);
        $r22 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r21);
        $r23 = (java.util.EventListener[]) $r22;
        return $r23;
    }

    public final java.util.EventListener[] getListeners(java.lang.String)
    {
        java.beans.ChangeListenerMap r0;
        java.lang.String r1;
        java.util.EventListener[] r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @this: java.beans.ChangeListenerMap;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        r2 = virtualinvoke r0.<java.beans.ChangeListenerMap: java.util.EventListener[] get(java.lang.String)>(r1);
        if r2 == null goto label0;

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (java.util.EventListener[]) $r3;
        return $r4;

     label0:
        $r5 = virtualinvoke r0.<java.beans.ChangeListenerMap: java.util.EventListener[] newArray(int)>(0);
        return $r5;
    }

    public final synchronized boolean hasListeners(java.lang.String)
    {
        java.beans.ChangeListenerMap r0;
        java.lang.String r1;
        java.util.EventListener[] r2;
        java.util.Map $r3, $r4, $r6;
        java.lang.Object $r5, $r7;
        boolean $z0;

        r0 := @this: java.beans.ChangeListenerMap;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        if $r3 != null goto label0;

        return 0;

     label0:
        $r4 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(null);
        r2 = (java.util.EventListener[]) $r5;
        if r2 != null goto label1;

        if r1 == null goto label2;

        $r6 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        if null == $r7 goto label2;

     label1:
        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final java.util.Set getEntries()
    {
        java.beans.ChangeListenerMap r0;
        java.util.Map $r1, $r2;
        java.util.Set $r3;

        r0 := @this: java.beans.ChangeListenerMap;
        $r1 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        if $r1 == null goto label0;

        $r2 = r0.<java.beans.ChangeListenerMap: java.util.Map map>;
        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();
        goto label1;

     label0:
        $r3 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

     label1:
        return $r3;
    }

    public abstract java.util.EventListener extract(java.util.EventListener);
}
