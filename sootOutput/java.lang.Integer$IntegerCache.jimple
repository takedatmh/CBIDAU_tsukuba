class java.lang.Integer$IntegerCache extends java.lang.Object
{
    static final int low;
    static final int high;
    static final java.lang.Integer[] cache;

    private void <init>()
    {
        java.lang.Integer$IntegerCache r0;

        r0 := @this: java.lang.Integer$IntegerCache;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static void <clinit>()
    {
        int i0, i1, i2, $i3, i4, $i5, $i6, $i7, i8, $i9;
        java.lang.String r0;
        java.lang.Integer $r1;
        java.lang.Integer[] $r2, $r3, $r4;

        i0 = 127;
        r0 = staticinvoke <sun.misc.VM: java.lang.String getSavedProperty(java.lang.String)>("java.lang.Integer.IntegerCache.high");
        if r0 == null goto label0;

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i1, 127);
        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i4, 2147483518);

     label0:
        <java.lang.Integer$IntegerCache: int high> = i0;
        $i5 = <java.lang.Integer$IntegerCache: int high>;
        $i6 = $i5 - -128;
        $i7 = $i6 + 1;
        $r2 = newarray (java.lang.Integer)[$i7];
        <java.lang.Integer$IntegerCache: java.lang.Integer[] cache> = $r2;
        i8 = -128;
        i2 = 0;

     label1:
        $r3 = <java.lang.Integer$IntegerCache: java.lang.Integer[] cache>;
        $i9 = lengthof $r3;
        if i2 >= $i9 goto label2;

        $r4 = <java.lang.Integer$IntegerCache: java.lang.Integer[] cache>;
        $r1 = new java.lang.Integer;
        $i3 = i8;
        i8 = i8 + 1;
        specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i3);
        $r4[i2] = $r1;
        i2 = i2 + 1;
        goto label1;

     label2:
        return;
    }
}
