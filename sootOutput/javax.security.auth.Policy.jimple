public abstract class javax.security.auth.Policy extends java.lang.Object
{
    private static javax.security.auth.Policy policy;
    private final java.security.AccessControlContext acc;
    private static boolean isCustomPolicy;

    protected void <init>()
    {
        javax.security.auth.Policy r0;
        java.security.AccessControlContext $r1;

        r0 := @this: javax.security.auth.Policy;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();
        r0.<javax.security.auth.Policy: java.security.AccessControlContext acc> = $r1;
        return;
    }

    public static javax.security.auth.Policy getPolicy()
    {
        java.lang.SecurityManager r0;
        javax.security.auth.AuthPermission $r1;
        javax.security.auth.Policy $r2;

        r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r0 == null goto label0;

        $r1 = new javax.security.auth.AuthPermission;
        specialinvoke $r1.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("getPolicy");
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);

     label0:
        $r2 = staticinvoke <javax.security.auth.Policy: javax.security.auth.Policy getPolicyNoCheck()>();
        return $r2;
    }

    static javax.security.auth.Policy getPolicyNoCheck()
    {
        javax.security.auth.Policy $r0, r3, $r6, $r22;
        java.lang.Class r1, $r5;
        null_type n0;
        java.lang.String r2, r9, $r20;
        java.lang.Throwable r4, $r21;
        javax.security.auth.Policy$1 $r7;
        java.lang.Object $r8, $r11, $r14;
        javax.security.auth.Policy$2 $r10;
        javax.security.auth.Policy$3 $r12;
        java.security.AccessControlContext $r13, $r15;
        java.lang.Exception $r17, r18;
        java.lang.SecurityException $r19;

        $r0 = <javax.security.auth.Policy: javax.security.auth.Policy policy>;
        if $r0 != null goto label9;

        $r5 = class "javax/security/auth/Policy";
        r1 = $r5;
        entermonitor $r5;

     label0:
        $r6 = <javax.security.auth.Policy: javax.security.auth.Policy policy>;
        if $r6 != null goto label4;

        n0 = null;
        $r7 = new javax.security.auth.Policy$1;
        specialinvoke $r7.<javax.security.auth.Policy$1: void <init>()>();
        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r7);
        r9 = (java.lang.String) $r8;
        if r9 != null goto label1;

        r9 = "com.sun.security.auth.PolicyFile";

     label1:
        r2 = r9;
        $r10 = new javax.security.auth.Policy$2;
        specialinvoke $r10.<javax.security.auth.Policy$2: void <init>(java.lang.String)>(r2);
        $r11 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r10);
        r3 = (javax.security.auth.Policy) $r11;
        $r12 = new javax.security.auth.Policy$3;
        specialinvoke $r12.<javax.security.auth.Policy$3: void <init>(javax.security.auth.Policy,java.lang.String)>(r3, r2);
        $r13 = r3.<javax.security.auth.Policy: java.security.AccessControlContext acc>;
        $r14 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r13);
        $r15 = (java.security.AccessControlContext) $r14;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>($r12, $r15);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;
        r18 = $r17;
        $r19 = new java.lang.SecurityException;
        $r20 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("unable.to.instantiate.Subject.based.policy");
        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>($r20);
        throw $r19;

     label4:
        exitmonitor r1;

     label5:
        goto label9;

     label6:
        $r21 := @caughtexception;

     label7:
        r4 = $r21;
        exitmonitor r1;

     label8:
        throw r4;

     label9:
        $r22 = <javax.security.auth.Policy: javax.security.auth.Policy policy>;
        return $r22;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label0 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static void setPolicy(javax.security.auth.Policy)
    {
        javax.security.auth.Policy r0;
        java.lang.SecurityManager r1;
        javax.security.auth.AuthPermission $r2;
        boolean $z0;

        r0 := @parameter0: javax.security.auth.Policy;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = new javax.security.auth.AuthPermission;
        specialinvoke $r2.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("setPolicy");
        virtualinvoke r1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);

     label0:
        <javax.security.auth.Policy: javax.security.auth.Policy policy> = r0;
        if r0 == null goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        <javax.security.auth.Policy: boolean isCustomPolicy> = $z0;
        return;
    }

    static boolean isCustomPolicySet(sun.security.util.Debug)
    {
        sun.security.util.Debug r0;
        javax.security.auth.Policy $r1, $r5;
        java.lang.StringBuilder $r2, $r4, $r7, $r11, $r12, $r13;
        java.lang.String r3, $r6, $r8, $r14;
        boolean $z0, $z1, $z2;
        javax.security.auth.Policy$4 $r9;
        java.lang.Object $r10;

        r0 := @parameter0: sun.security.util.Debug;
        $r1 = <javax.security.auth.Policy: javax.security.auth.Policy policy>;
        if $r1 == null goto label1;

        if r0 == null goto label0;

        $z0 = <javax.security.auth.Policy: boolean isCustomPolicy>;
        if $z0 == 0 goto label0;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Providing backwards compatibility for javax.security.auth.policy implementation: ");
        $r5 = <javax.security.auth.Policy: javax.security.auth.Policy policy>;
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r0.<sun.security.util.Debug: void println(java.lang.String)>($r8);

     label0:
        $z1 = <javax.security.auth.Policy: boolean isCustomPolicy>;
        return $z1;

     label1:
        $r9 = new javax.security.auth.Policy$4;
        specialinvoke $r9.<javax.security.auth.Policy$4: void <init>()>();
        $r10 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r9);
        r3 = (java.lang.String) $r10;
        if r3 == null goto label3;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("com.sun.security.auth.PolicyFile");
        if $z2 != 0 goto label3;

        if r0 == null goto label2;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Providing backwards compatibility for javax.security.auth.policy implementation: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r0.<sun.security.util.Debug: void println(java.lang.String)>($r14);

     label2:
        return 1;

     label3:
        return 0;
    }

    public abstract java.security.PermissionCollection getPermissions(javax.security.auth.Subject, java.security.CodeSource);

    public abstract void refresh();

    static boolean access$002(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;
        <javax.security.auth.Policy: boolean isCustomPolicy> = z0;
        return z0;
    }
}
