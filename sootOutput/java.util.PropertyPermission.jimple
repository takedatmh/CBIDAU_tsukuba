public final class java.util.PropertyPermission extends java.security.BasicPermission
{
    private static final int READ;
    private static final int WRITE;
    private static final int ALL;
    private static final int NONE;
    private transient int mask;
    private java.lang.String actions;
    private static final long serialVersionUID;

    private void init(int)
    {
        java.util.PropertyPermission r0;
        int i0, $i1;
        java.lang.IllegalArgumentException $r1, $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: java.util.PropertyPermission;
        i0 := @parameter0: int;
        $i1 = i0 & 3;
        if $i1 == i0 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid actions mask");
        throw $r1;

     label0:
        if i0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid actions mask");
        throw $r2;

     label1:
        $r3 = virtualinvoke r0.<java.util.PropertyPermission: java.lang.String getName()>();
        if $r3 != null goto label2;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("name can\'t be null");
        throw $r4;

     label2:
        r0.<java.util.PropertyPermission: int mask> = i0;
        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.util.PropertyPermission r0;
        java.lang.String r1, r2;
        int $i0;

        r0 := @this: java.util.PropertyPermission;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.security.BasicPermission: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        $i0 = staticinvoke <java.util.PropertyPermission: int getMask(java.lang.String)>(r2);
        specialinvoke r0.<java.util.PropertyPermission: void init(int)>($i0);
        return;
    }

    public boolean implies(java.security.Permission)
    {
        java.util.PropertyPermission r0, r2;
        java.security.Permission r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.util.PropertyPermission;
        r1 := @parameter0: java.security.Permission;
        $z0 = r1 instanceof java.util.PropertyPermission;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        r2 = (java.util.PropertyPermission) r1;
        $i0 = r0.<java.util.PropertyPermission: int mask>;
        $i1 = r2.<java.util.PropertyPermission: int mask>;
        $i2 = $i0 & $i1;
        $i3 = r2.<java.util.PropertyPermission: int mask>;
        if $i2 != $i3 goto label1;

        $z1 = specialinvoke r0.<java.security.BasicPermission: boolean implies(java.security.Permission)>(r2);
        if $z1 == 0 goto label1;

        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.PropertyPermission r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        java.lang.String $r3, $r4;

        r0 := @this: java.util.PropertyPermission;
        r1 := @parameter0: java.lang.Object;
        if r1 != r0 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof java.util.PropertyPermission;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.PropertyPermission) r1;
        $i0 = r0.<java.util.PropertyPermission: int mask>;
        $i1 = r2.<java.util.PropertyPermission: int mask>;
        if $i0 != $i1 goto label2;

        $r3 = virtualinvoke r0.<java.util.PropertyPermission: java.lang.String getName()>();
        $r4 = virtualinvoke r2.<java.util.PropertyPermission: java.lang.String getName()>();
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z1 == 0 goto label2;

        $z2 = 1;
        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public int hashCode()
    {
        java.util.PropertyPermission r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: java.util.PropertyPermission;
        $r1 = virtualinvoke r0.<java.util.PropertyPermission: java.lang.String getName()>();
        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        return $i0;
    }

    private static int getMask(java.lang.String)
    {
        java.lang.String r0, $r6, $r11;
        byte b0, b3;
        char[] r1;
        int i1, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i20, $i22, $i24, $i26, $i28, $i30, $i32, $i34, $i38;
        char c2, $c5, $c7, $c9, $c11, $c13, $c15, $c17, $c18, $c19, $c21, $c23, $c25, $c27, $c29, $c31, $c33, $c35, $c36, $c37, $c39;
        boolean z0;
        java.lang.IllegalArgumentException $r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String;
        b0 = 0;
        if r0 != null goto label0;

        return b0;

     label0:
        if r0 != "read" goto label1;

        return 1;

     label1:
        if r0 != "write" goto label2;

        return 2;

     label2:
        if r0 != "read,write" goto label3;

        return 3;

     label3:
        r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
        $i4 = lengthof r1;
        i1 = $i4 - 1;
        if i1 >= 0 goto label4;

        return b0;

     label4:
        if i1 == -1 goto label26;

     label5:
        if i1 == -1 goto label7;

        $c5 = r1[i1];
        c2 = $c5;
        if $c5 == 32 goto label6;

        if c2 == 13 goto label6;

        if c2 == 10 goto label6;

        if c2 == 12 goto label6;

        if c2 != 9 goto label7;

     label6:
        i1 = i1 + -1;
        goto label5;

     label7:
        if i1 < 3 goto label12;

        $i6 = i1 - 3;
        $c7 = r1[$i6];
        if $c7 == 114 goto label8;

        $i8 = i1 - 3;
        $c9 = r1[$i8];
        if $c9 != 82 goto label12;

     label8:
        $i10 = i1 - 2;
        $c11 = r1[$i10];
        if $c11 == 101 goto label9;

        $i12 = i1 - 2;
        $c13 = r1[$i12];
        if $c13 != 69 goto label12;

     label9:
        $i14 = i1 - 1;
        $c15 = r1[$i14];
        if $c15 == 97 goto label10;

        $i16 = i1 - 1;
        $c17 = r1[$i16];
        if $c17 != 65 goto label12;

     label10:
        $c18 = r1[i1];
        if $c18 == 100 goto label11;

        $c19 = r1[i1];
        if $c19 != 68 goto label12;

     label11:
        b3 = 4;
        b0 = b0 | 1;
        goto label19;

     label12:
        if i1 < 4 goto label18;

        $i20 = i1 - 4;
        $c21 = r1[$i20];
        if $c21 == 119 goto label13;

        $i22 = i1 - 4;
        $c23 = r1[$i22];
        if $c23 != 87 goto label18;

     label13:
        $i24 = i1 - 3;
        $c25 = r1[$i24];
        if $c25 == 114 goto label14;

        $i26 = i1 - 3;
        $c27 = r1[$i26];
        if $c27 != 82 goto label18;

     label14:
        $i28 = i1 - 2;
        $c29 = r1[$i28];
        if $c29 == 105 goto label15;

        $i30 = i1 - 2;
        $c31 = r1[$i30];
        if $c31 != 73 goto label18;

     label15:
        $i32 = i1 - 1;
        $c33 = r1[$i32];
        if $c33 == 116 goto label16;

        $i34 = i1 - 1;
        $c35 = r1[$i34];
        if $c35 != 84 goto label18;

     label16:
        $c36 = r1[i1];
        if $c36 == 101 goto label17;

        $c37 = r1[i1];
        if $c37 != 69 goto label18;

     label17:
        b3 = 5;
        b0 = b0 | 2;
        goto label19;

     label18:
        $r2 = new java.lang.IllegalArgumentException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid permission: ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);
        throw $r2;

     label19:
        z0 = 0;

     label20:
        if i1 < b3 goto label25;

        if z0 != 0 goto label25;

        $i38 = i1 - b3;
        $c39 = r1[$i38];
        lookupswitch($c39)
        {
            case 9: goto label22;
            case 10: goto label22;
            case 12: goto label22;
            case 13: goto label22;
            case 32: goto label22;
            case 44: goto label21;
            default: goto label23;
        };

     label21:
        z0 = 1;

     label22:
        goto label24;

     label23:
        $r7 = new java.lang.IllegalArgumentException;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid permission: ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);
        throw $r7;

     label24:
        i1 = i1 + -1;
        goto label20;

     label25:
        i1 = i1 - b3;
        goto label4;

     label26:
        return b0;
    }

    static java.lang.String getActions(int)
    {
        int i0, $i1, $i2;
        java.lang.StringBuilder $r0, r1;
        boolean z0, z1;
        java.lang.String $r5;

        i0 := @parameter0: int;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
        r1 = $r0;
        z0 = 0;
        $i1 = i0 & 1;
        if $i1 != 1 goto label0;

        z0 = 1;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read");

     label0:
        $i2 = i0 & 2;
        if $i2 != 2 goto label3;

        if z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
        goto label2;

     label1:
        z1 = 1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("write");

     label3:
        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;
    }

    public java.lang.String getActions()
    {
        java.util.PropertyPermission r0;
        java.lang.String $r1, $r2, $r3;
        int $i0;

        r0 := @this: java.util.PropertyPermission;
        $r1 = r0.<java.util.PropertyPermission: java.lang.String actions>;
        if $r1 != null goto label0;

        $i0 = r0.<java.util.PropertyPermission: int mask>;
        $r2 = staticinvoke <java.util.PropertyPermission: java.lang.String getActions(int)>($i0);
        r0.<java.util.PropertyPermission: java.lang.String actions> = $r2;

     label0:
        $r3 = r0.<java.util.PropertyPermission: java.lang.String actions>;
        return $r3;
    }

    int getMask()
    {
        java.util.PropertyPermission r0;
        int $i0;

        r0 := @this: java.util.PropertyPermission;
        $i0 = r0.<java.util.PropertyPermission: int mask>;
        return $i0;
    }

    public java.security.PermissionCollection newPermissionCollection()
    {
        java.util.PropertyPermission r0;
        java.util.PropertyPermissionCollection $r1;

        r0 := @this: java.util.PropertyPermission;
        $r1 = new java.util.PropertyPermissionCollection;
        specialinvoke $r1.<java.util.PropertyPermissionCollection: void <init>()>();
        return $r1;
    }

    private synchronized void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.PropertyPermission r0;
        java.io.ObjectOutputStream r1;
        java.lang.String $r2;

        r0 := @this: java.util.PropertyPermission;
        r1 := @parameter0: java.io.ObjectOutputStream;
        $r2 = r0.<java.util.PropertyPermission: java.lang.String actions>;
        if $r2 != null goto label0;

        virtualinvoke r0.<java.util.PropertyPermission: java.lang.String getActions()>();

     label0:
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();
        return;
    }

    private synchronized void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.PropertyPermission r0;
        java.io.ObjectInputStream r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: java.util.PropertyPermission;
        r1 := @parameter0: java.io.ObjectInputStream;
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();
        $r2 = r0.<java.util.PropertyPermission: java.lang.String actions>;
        $i0 = staticinvoke <java.util.PropertyPermission: int getMask(java.lang.String)>($r2);
        specialinvoke r0.<java.util.PropertyPermission: void init(int)>($i0);
        return;
    }
}
