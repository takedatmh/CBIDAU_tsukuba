public class java.security.cert.PKIXParameters extends java.lang.Object implements java.security.cert.CertPathParameters
{
    private java.util.Set unmodTrustAnchors;
    private java.util.Date date;
    private java.util.List certPathCheckers;
    private java.lang.String sigProvider;
    private boolean revocationEnabled;
    private java.util.Set unmodInitialPolicies;
    private boolean explicitPolicyRequired;
    private boolean policyMappingInhibited;
    private boolean anyPolicyInhibited;
    private boolean policyQualifiersRejected;
    private java.util.List certStores;
    private java.security.cert.CertSelector certSelector;

    public void <init>(java.util.Set) throws java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.PKIXParameters r0;
        java.util.Set r1, $r2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.util.Set;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.security.cert.PKIXParameters: boolean revocationEnabled> = 1;
        r0.<java.security.cert.PKIXParameters: boolean explicitPolicyRequired> = 0;
        r0.<java.security.cert.PKIXParameters: boolean policyMappingInhibited> = 0;
        r0.<java.security.cert.PKIXParameters: boolean anyPolicyInhibited> = 0;
        r0.<java.security.cert.PKIXParameters: boolean policyQualifiersRejected> = 1;
        virtualinvoke r0.<java.security.cert.PKIXParameters: void setTrustAnchors(java.util.Set)>(r1);
        $r2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        r0.<java.security.cert.PKIXParameters: java.util.Set unmodInitialPolicies> = $r2;
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers> = $r3;
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r0.<java.security.cert.PKIXParameters: java.util.List certStores> = $r4;
        return;
    }

    public void <init>(java.security.KeyStore) throws java.security.KeyStoreException, java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.PKIXParameters r0;
        java.security.KeyStore r1;
        java.util.HashSet r2, $r7;
        java.util.Enumeration r3;
        java.lang.String r4;
        java.security.cert.Certificate r5;
        java.lang.NullPointerException $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8;
        java.security.cert.TrustAnchor $r9;
        java.security.cert.X509Certificate $r10;
        java.util.Set $r11;
        java.util.ArrayList $r12, $r13;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.security.KeyStore;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.security.cert.PKIXParameters: boolean revocationEnabled> = 1;
        r0.<java.security.cert.PKIXParameters: boolean explicitPolicyRequired> = 0;
        r0.<java.security.cert.PKIXParameters: boolean policyMappingInhibited> = 0;
        r0.<java.security.cert.PKIXParameters: boolean anyPolicyInhibited> = 0;
        r0.<java.security.cert.PKIXParameters: boolean policyQualifiersRejected> = 1;
        if r1 != null goto label0;

        $r6 = new java.lang.NullPointerException;
        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("the keystore parameter must be non-null");
        throw $r6;

     label0:
        $r7 = new java.util.HashSet;
        specialinvoke $r7.<java.util.HashSet: void <init>()>();
        r2 = $r7;
        r3 = virtualinvoke r1.<java.security.KeyStore: java.util.Enumeration aliases()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (java.lang.String) $r8;
        $z1 = virtualinvoke r1.<java.security.KeyStore: boolean isCertificateEntry(java.lang.String)>(r4);
        if $z1 == 0 goto label2;

        r5 = virtualinvoke r1.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r4);
        $z2 = r5 instanceof java.security.cert.X509Certificate;
        if $z2 == 0 goto label2;

        $r9 = new java.security.cert.TrustAnchor;
        $r10 = (java.security.cert.X509Certificate) r5;
        specialinvoke $r9.<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>($r10, null);
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label2:
        goto label1;

     label3:
        virtualinvoke r0.<java.security.cert.PKIXParameters: void setTrustAnchors(java.util.Set)>(r2);
        $r11 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        r0.<java.security.cert.PKIXParameters: java.util.Set unmodInitialPolicies> = $r11;
        $r12 = new java.util.ArrayList;
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();
        r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers> = $r12;
        $r13 = new java.util.ArrayList;
        specialinvoke $r13.<java.util.ArrayList: void <init>()>();
        r0.<java.security.cert.PKIXParameters: java.util.List certStores> = $r13;
        return;
    }

    public java.util.Set getTrustAnchors()
    {
        java.security.cert.PKIXParameters r0;
        java.util.Set $r1;

        r0 := @this: java.security.cert.PKIXParameters;
        $r1 = r0.<java.security.cert.PKIXParameters: java.util.Set unmodTrustAnchors>;
        return $r1;
    }

    public void setTrustAnchors(java.util.Set) throws java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.PKIXParameters r0;
        java.util.Set r1, $r8;
        java.util.Iterator r2;
        java.lang.NullPointerException $r3;
        boolean $z0, $z1, $z2;
        java.security.InvalidAlgorithmParameterException $r4;
        java.lang.Object $r5;
        java.lang.ClassCastException $r6;
        java.util.HashSet $r7;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.util.Set;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("the trustAnchors parameters must be non-null");
        throw $r3;

     label0:
        $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();
        if $z0 == 0 goto label1;

        $r4 = new java.security.InvalidAlgorithmParameterException;
        specialinvoke $r4.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("the trustAnchors parameter must be non-empty");
        throw $r4;

     label1:
        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        $z2 = $r5 instanceof java.security.cert.TrustAnchor;
        if $z2 != 0 goto label2;

        $r6 = new java.lang.ClassCastException;
        specialinvoke $r6.<java.lang.ClassCastException: void <init>(java.lang.String)>("all elements of set must be of type java.security.cert.TrustAnchor");
        throw $r6;

     label3:
        $r7 = new java.util.HashSet;
        specialinvoke $r7.<java.util.HashSet: void <init>(java.util.Collection)>(r1);
        $r8 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r7);
        r0.<java.security.cert.PKIXParameters: java.util.Set unmodTrustAnchors> = $r8;
        return;
    }

    public java.util.Set getInitialPolicies()
    {
        java.security.cert.PKIXParameters r0;
        java.util.Set $r1;

        r0 := @this: java.security.cert.PKIXParameters;
        $r1 = r0.<java.security.cert.PKIXParameters: java.util.Set unmodInitialPolicies>;
        return $r1;
    }

    public void setInitialPolicies(java.util.Set)
    {
        java.security.cert.PKIXParameters r0;
        java.util.Set r1, $r6, $r7;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.lang.ClassCastException $r4;
        java.util.HashSet $r5;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.util.Set;
        if r1 == null goto label2;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        $z1 = $r3 instanceof java.lang.String;
        if $z1 != 0 goto label0;

        $r4 = new java.lang.ClassCastException;
        specialinvoke $r4.<java.lang.ClassCastException: void <init>(java.lang.String)>("all elements of set must be of type java.lang.String");
        throw $r4;

     label1:
        $r5 = new java.util.HashSet;
        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r1);
        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r5);
        r0.<java.security.cert.PKIXParameters: java.util.Set unmodInitialPolicies> = $r6;
        goto label3;

     label2:
        $r7 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        r0.<java.security.cert.PKIXParameters: java.util.Set unmodInitialPolicies> = $r7;

     label3:
        return;
    }

    public void setCertStores(java.util.List)
    {
        java.security.cert.PKIXParameters r0;
        java.util.List r1;
        java.util.ArrayList $r2, $r6;
        java.util.Iterator r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.ClassCastException $r5;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.util.List;
        if r1 != null goto label0;

        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<java.security.cert.PKIXParameters: java.util.List certStores> = $r2;
        goto label3;

     label0:
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $z1 = $r4 instanceof java.security.cert.CertStore;
        if $z1 != 0 goto label1;

        $r5 = new java.lang.ClassCastException;
        specialinvoke $r5.<java.lang.ClassCastException: void <init>(java.lang.String)>("all elements of list must be of type java.security.cert.CertStore");
        throw $r5;

     label2:
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);
        r0.<java.security.cert.PKIXParameters: java.util.List certStores> = $r6;

     label3:
        return;
    }

    public void addCertStore(java.security.cert.CertStore)
    {
        java.security.cert.PKIXParameters r0;
        java.security.cert.CertStore r1;
        java.util.List $r2;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.security.cert.CertStore;
        if r1 == null goto label0;

        $r2 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label0:
        return;
    }

    public java.util.List getCertStores()
    {
        java.security.cert.PKIXParameters r0;
        java.util.ArrayList $r1;
        java.util.List $r2, $r3;

        r0 := @this: java.security.cert.PKIXParameters;
        $r1 = new java.util.ArrayList;
        $r2 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;
        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);
        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);
        return $r3;
    }

    public void setRevocationEnabled(boolean)
    {
        java.security.cert.PKIXParameters r0;
        boolean z0;

        r0 := @this: java.security.cert.PKIXParameters;
        z0 := @parameter0: boolean;
        r0.<java.security.cert.PKIXParameters: boolean revocationEnabled> = z0;
        return;
    }

    public boolean isRevocationEnabled()
    {
        java.security.cert.PKIXParameters r0;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;
        $z0 = r0.<java.security.cert.PKIXParameters: boolean revocationEnabled>;
        return $z0;
    }

    public void setExplicitPolicyRequired(boolean)
    {
        java.security.cert.PKIXParameters r0;
        boolean z0;

        r0 := @this: java.security.cert.PKIXParameters;
        z0 := @parameter0: boolean;
        r0.<java.security.cert.PKIXParameters: boolean explicitPolicyRequired> = z0;
        return;
    }

    public boolean isExplicitPolicyRequired()
    {
        java.security.cert.PKIXParameters r0;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;
        $z0 = r0.<java.security.cert.PKIXParameters: boolean explicitPolicyRequired>;
        return $z0;
    }

    public void setPolicyMappingInhibited(boolean)
    {
        java.security.cert.PKIXParameters r0;
        boolean z0;

        r0 := @this: java.security.cert.PKIXParameters;
        z0 := @parameter0: boolean;
        r0.<java.security.cert.PKIXParameters: boolean policyMappingInhibited> = z0;
        return;
    }

    public boolean isPolicyMappingInhibited()
    {
        java.security.cert.PKIXParameters r0;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;
        $z0 = r0.<java.security.cert.PKIXParameters: boolean policyMappingInhibited>;
        return $z0;
    }

    public void setAnyPolicyInhibited(boolean)
    {
        java.security.cert.PKIXParameters r0;
        boolean z0;

        r0 := @this: java.security.cert.PKIXParameters;
        z0 := @parameter0: boolean;
        r0.<java.security.cert.PKIXParameters: boolean anyPolicyInhibited> = z0;
        return;
    }

    public boolean isAnyPolicyInhibited()
    {
        java.security.cert.PKIXParameters r0;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;
        $z0 = r0.<java.security.cert.PKIXParameters: boolean anyPolicyInhibited>;
        return $z0;
    }

    public void setPolicyQualifiersRejected(boolean)
    {
        java.security.cert.PKIXParameters r0;
        boolean z0;

        r0 := @this: java.security.cert.PKIXParameters;
        z0 := @parameter0: boolean;
        r0.<java.security.cert.PKIXParameters: boolean policyQualifiersRejected> = z0;
        return;
    }

    public boolean getPolicyQualifiersRejected()
    {
        java.security.cert.PKIXParameters r0;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;
        $z0 = r0.<java.security.cert.PKIXParameters: boolean policyQualifiersRejected>;
        return $z0;
    }

    public java.util.Date getDate()
    {
        java.security.cert.PKIXParameters r0;
        java.util.Date $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: java.security.cert.PKIXParameters;
        $r1 = r0.<java.security.cert.PKIXParameters: java.util.Date date>;
        if $r1 != null goto label0;

        return null;

     label0:
        $r2 = r0.<java.security.cert.PKIXParameters: java.util.Date date>;
        $r3 = virtualinvoke $r2.<java.util.Date: java.lang.Object clone()>();
        $r4 = (java.util.Date) $r3;
        return $r4;
    }

    public void setDate(java.util.Date)
    {
        java.security.cert.PKIXParameters r0;
        java.util.Date r1, $r3;
        java.lang.Object $r2;
        null_type n0;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.util.Date;
        if r1 == null goto label0;

        $r2 = virtualinvoke r1.<java.util.Date: java.lang.Object clone()>();
        $r3 = (java.util.Date) $r2;
        r0.<java.security.cert.PKIXParameters: java.util.Date date> = $r3;
        goto label1;

     label0:
        n0 = null;

     label1:
        return;
    }

    public void setCertPathCheckers(java.util.List)
    {
        java.security.cert.PKIXParameters r0;
        java.util.List r1;
        java.util.ArrayList r2, $r5, $r9;
        java.util.Iterator r3;
        java.security.cert.PKIXCertPathChecker r4, $r8;
        boolean $z0;
        java.lang.Object $r6, $r7;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.util.List;
        if r1 == null goto label2;

        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r2 = $r5;
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.security.cert.PKIXCertPathChecker) $r6;
        $r7 = virtualinvoke r4.<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>();
        $r8 = (java.security.cert.PKIXCertPathChecker) $r7;
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8);
        goto label0;

     label1:
        r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers> = r2;
        goto label3;

     label2:
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers> = $r9;

     label3:
        return;
    }

    public java.util.List getCertPathCheckers()
    {
        java.security.cert.PKIXParameters r0;
        java.util.ArrayList $r1, r2;
        java.util.Iterator r3;
        java.security.cert.PKIXCertPathChecker r4, $r8;
        java.util.List $r5, $r9;
        boolean $z0;
        java.lang.Object $r6, $r7;

        r0 := @this: java.security.cert.PKIXParameters;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r5 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.security.cert.PKIXCertPathChecker) $r6;
        $r7 = virtualinvoke r4.<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>();
        $r8 = (java.security.cert.PKIXCertPathChecker) $r7;
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8);
        goto label0;

     label1:
        $r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);
        return $r9;
    }

    public void addCertPathChecker(java.security.cert.PKIXCertPathChecker)
    {
        java.security.cert.PKIXParameters r0;
        java.security.cert.PKIXCertPathChecker r1, $r4;
        java.util.List $r2;
        java.lang.Object $r3;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.security.cert.PKIXCertPathChecker;
        if r1 == null goto label0;

        $r2 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;
        $r3 = virtualinvoke r1.<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>();
        $r4 = (java.security.cert.PKIXCertPathChecker) $r3;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

     label0:
        return;
    }

    public java.lang.String getSigProvider()
    {
        java.security.cert.PKIXParameters r0;
        java.lang.String $r1;

        r0 := @this: java.security.cert.PKIXParameters;
        $r1 = r0.<java.security.cert.PKIXParameters: java.lang.String sigProvider>;
        return $r1;
    }

    public void setSigProvider(java.lang.String)
    {
        java.security.cert.PKIXParameters r0;
        java.lang.String r1;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.lang.String;
        r0.<java.security.cert.PKIXParameters: java.lang.String sigProvider> = r1;
        return;
    }

    public java.security.cert.CertSelector getTargetCertConstraints()
    {
        java.security.cert.PKIXParameters r0;
        java.security.cert.CertSelector $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: java.security.cert.PKIXParameters;
        $r1 = r0.<java.security.cert.PKIXParameters: java.security.cert.CertSelector certSelector>;
        if $r1 == null goto label0;

        $r2 = r0.<java.security.cert.PKIXParameters: java.security.cert.CertSelector certSelector>;
        $r3 = interfaceinvoke $r2.<java.security.cert.CertSelector: java.lang.Object clone()>();
        $r4 = (java.security.cert.CertSelector) $r3;
        return $r4;

     label0:
        return null;
    }

    public void setTargetCertConstraints(java.security.cert.CertSelector)
    {
        java.security.cert.PKIXParameters r0;
        java.security.cert.CertSelector r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.security.cert.PKIXParameters;
        r1 := @parameter0: java.security.cert.CertSelector;
        if r1 == null goto label0;

        $r2 = interfaceinvoke r1.<java.security.cert.CertSelector: java.lang.Object clone()>();
        $r3 = (java.security.cert.CertSelector) $r2;
        r0.<java.security.cert.PKIXParameters: java.security.cert.CertSelector certSelector> = $r3;
        goto label1;

     label0:
        r0.<java.security.cert.PKIXParameters: java.security.cert.CertSelector certSelector> = null;

     label1:
        return;
    }

    public java.lang.Object clone()
    {
        java.security.cert.PKIXParameters r0, r1;
        java.util.ArrayList $r2, $r9;
        java.util.Iterator r3;
        java.security.cert.PKIXCertPathChecker r4, $r15;
        java.lang.Object $r5, $r12, $r14;
        java.util.List $r6, $r7, $r8, $r10, $r11, $r13;
        int $i0;
        boolean $z0;
        java.lang.CloneNotSupportedException $r17, r18;
        java.lang.InternalError $r19;
        java.lang.String $r20;

        r0 := @this: java.security.cert.PKIXParameters;

     label0:
        $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        r1 = (java.security.cert.PKIXParameters) $r5;
        $r6 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;
        if $r6 == null goto label1;

        $r2 = new java.util.ArrayList;
        $r7 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;
        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);
        r1.<java.security.cert.PKIXParameters: java.util.List certStores> = $r2;

     label1:
        $r8 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;
        if $r8 == null goto label3;

        $r9 = new java.util.ArrayList;
        $r10 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;
        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();
        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);
        r1.<java.security.cert.PKIXParameters: java.util.List certPathCheckers> = $r9;
        $r11 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;
        r3 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.security.cert.PKIXCertPathChecker) $r12;
        $r13 = r1.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;
        $r14 = virtualinvoke r4.<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>();
        $r15 = (java.security.cert.PKIXCertPathChecker) $r14;
        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r15);
        goto label2;

     label3:
        return r1;

     label4:
        $r17 := @caughtexception;
        r18 = $r17;
        $r19 = new java.lang.InternalError;
        $r20 = virtualinvoke r18.<java.lang.CloneNotSupportedException: java.lang.String toString()>();
        specialinvoke $r19.<java.lang.InternalError: void <init>(java.lang.String)>($r20);
        throw $r19;

        catch java.lang.CloneNotSupportedException from label0 to label3 with label4;
    }

    public java.lang.String toString()
    {
        java.security.cert.PKIXParameters r0;
        java.lang.StringBuffer $r1, r2;
        java.util.Set $r4, $r7, $r13, $r14, $r18;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r16, $r17, $r20, $r21, $r24, $r25, $r28, $r29, $r32, $r33, $r36, $r37, $r40, $r41, $r42, $r43, $r46, $r47, $r48, $r49, $r52, $r53, $r54, $r55, $r58, $r59, $r60, $r61, $r64, $r65, $r66, $r67, $r70, $r71, $r74, $r75, $r79, $r80, $r83, $r84, $r88, $r89, $r92, $r93;
        java.lang.String $r8, $r11, $r19, $r22, $r27, $r30, $r34, $r35, $r38, $r44, $r50, $r56, $r62, $r68, $r73, $r76, $r82, $r85, $r91, $r94, $r97;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Date $r26;
        java.security.cert.CertSelector $r72;
        java.util.List $r78, $r81, $r87, $r90;

        r0 := @this: java.security.cert.PKIXParameters;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[\n");
        $r4 = r0.<java.security.cert.PKIXParameters: java.util.Set unmodTrustAnchors>;
        if $r4 == null goto label0;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Trust Anchors: ");
        $r7 = r0.<java.security.cert.PKIXParameters: java.util.Set unmodTrustAnchors>;
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

     label0:
        $r13 = r0.<java.security.cert.PKIXParameters: java.util.Set unmodInitialPolicies>;
        if $r13 == null goto label2;

        $r14 = r0.<java.security.cert.PKIXParameters: java.util.Set unmodInitialPolicies>;
        $z0 = interfaceinvoke $r14.<java.util.Set: boolean isEmpty()>();
        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Initial Policy OIDs: any\n");
        goto label2;

     label1:
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Initial Policy OIDs: [");
        $r18 = r0.<java.security.cert.PKIXParameters: java.util.Set unmodInitialPolicies>;
        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();
        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

     label2:
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Validity Date: ");
        $r26 = r0.<java.security.cert.PKIXParameters: java.util.Date date>;
        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26);
        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Signature Provider: ");
        $r34 = r0.<java.security.cert.PKIXParameters: java.lang.String sigProvider>;
        $r35 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r34);
        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);
        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Default Revocation Enabled: ");
        $z1 = r0.<java.security.cert.PKIXParameters: boolean revocationEnabled>;
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Explicit Policy Required: ");
        $z2 = r0.<java.security.cert.PKIXParameters: boolean explicitPolicyRequired>;
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);
        $r52 = new java.lang.StringBuilder;
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Policy Mapping Inhibited: ");
        $z3 = r0.<java.security.cert.PKIXParameters: boolean policyMappingInhibited>;
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);
        $r58 = new java.lang.StringBuilder;
        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Any Policy Inhibited: ");
        $z4 = r0.<java.security.cert.PKIXParameters: boolean anyPolicyInhibited>;
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);
        $r64 = new java.lang.StringBuilder;
        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Policy Qualifiers Rejected: ");
        $z5 = r0.<java.security.cert.PKIXParameters: boolean policyQualifiersRejected>;
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r68);
        $r70 = new java.lang.StringBuilder;
        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Target Cert Constraints: ");
        $r72 = r0.<java.security.cert.PKIXParameters: java.security.cert.CertSelector certSelector>;
        $r73 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r72);
        $r74 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);
        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r76);
        $r78 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;
        if $r78 == null goto label3;

        $r79 = new java.lang.StringBuilder;
        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Certification Path Checkers: [");
        $r81 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;
        $r82 = virtualinvoke $r81.<java.lang.Object: java.lang.String toString()>();
        $r83 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");
        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r85);

     label3:
        $r87 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;
        if $r87 == null goto label4;

        $r88 = new java.lang.StringBuilder;
        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();
        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  CertStores: [");
        $r90 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;
        $r91 = virtualinvoke $r90.<java.lang.Object: java.lang.String toString()>();
        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);
        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");
        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r94);

     label4:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r97 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r97;
    }
}
