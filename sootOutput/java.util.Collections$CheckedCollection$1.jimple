class java.util.Collections$CheckedCollection$1 extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator val$it;
    final java.util.Collections$CheckedCollection this$0;

    void <init>(java.util.Collections$CheckedCollection, java.util.Iterator)
    {
        java.util.Collections$CheckedCollection$1 r0;
        java.util.Collections$CheckedCollection r1;
        java.util.Iterator r2;

        r0 := @this: java.util.Collections$CheckedCollection$1;
        r1 := @parameter0: java.util.Collections$CheckedCollection;
        r2 := @parameter1: java.util.Iterator;
        r0.<java.util.Collections$CheckedCollection$1: java.util.Collections$CheckedCollection this$0> = r1;
        r0.<java.util.Collections$CheckedCollection$1: java.util.Iterator val$it> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean hasNext()
    {
        java.util.Collections$CheckedCollection$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: java.util.Collections$CheckedCollection$1;
        $r1 = r0.<java.util.Collections$CheckedCollection$1: java.util.Iterator val$it>;
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();
        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.Collections$CheckedCollection$1 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.Collections$CheckedCollection$1;
        $r1 = r0.<java.util.Collections$CheckedCollection$1: java.util.Iterator val$it>;
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();
        return $r2;
    }

    public void remove()
    {
        java.util.Collections$CheckedCollection$1 r0;
        java.util.Iterator $r1;

        r0 := @this: java.util.Collections$CheckedCollection$1;
        $r1 = r0.<java.util.Collections$CheckedCollection$1: java.util.Iterator val$it>;
        interfaceinvoke $r1.<java.util.Iterator: void remove()>();
        return;
    }
}
