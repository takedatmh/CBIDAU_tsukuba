class sun.nio.ch.SocketDispatcher extends sun.nio.ch.NativeDispatcher
{

    void <init>()
    {
        sun.nio.ch.SocketDispatcher r0;

        r0 := @this: sun.nio.ch.SocketDispatcher;
        specialinvoke r0.<sun.nio.ch.NativeDispatcher: void <init>()>();
        return;
    }

    int read(java.io.FileDescriptor, long, int) throws java.io.IOException
    {
        sun.nio.ch.SocketDispatcher r0;
        java.io.FileDescriptor r1;
        long l0;
        int i1, $i2;

        r0 := @this: sun.nio.ch.SocketDispatcher;
        r1 := @parameter0: java.io.FileDescriptor;
        l0 := @parameter1: long;
        i1 := @parameter2: int;
        $i2 = staticinvoke <sun.nio.ch.FileDispatcherImpl: int read0(java.io.FileDescriptor,long,int)>(r1, l0, i1);
        return $i2;
    }

    long readv(java.io.FileDescriptor, long, int) throws java.io.IOException
    {
        sun.nio.ch.SocketDispatcher r0;
        java.io.FileDescriptor r1;
        long l0, $l2;
        int i1;

        r0 := @this: sun.nio.ch.SocketDispatcher;
        r1 := @parameter0: java.io.FileDescriptor;
        l0 := @parameter1: long;
        i1 := @parameter2: int;
        $l2 = staticinvoke <sun.nio.ch.FileDispatcherImpl: long readv0(java.io.FileDescriptor,long,int)>(r1, l0, i1);
        return $l2;
    }

    int write(java.io.FileDescriptor, long, int) throws java.io.IOException
    {
        sun.nio.ch.SocketDispatcher r0;
        java.io.FileDescriptor r1;
        long l0;
        int i1, $i2;

        r0 := @this: sun.nio.ch.SocketDispatcher;
        r1 := @parameter0: java.io.FileDescriptor;
        l0 := @parameter1: long;
        i1 := @parameter2: int;
        $i2 = staticinvoke <sun.nio.ch.FileDispatcherImpl: int write0(java.io.FileDescriptor,long,int)>(r1, l0, i1);
        return $i2;
    }

    long writev(java.io.FileDescriptor, long, int) throws java.io.IOException
    {
        sun.nio.ch.SocketDispatcher r0;
        java.io.FileDescriptor r1;
        long l0, $l2;
        int i1;

        r0 := @this: sun.nio.ch.SocketDispatcher;
        r1 := @parameter0: java.io.FileDescriptor;
        l0 := @parameter1: long;
        i1 := @parameter2: int;
        $l2 = staticinvoke <sun.nio.ch.FileDispatcherImpl: long writev0(java.io.FileDescriptor,long,int)>(r1, l0, i1);
        return $l2;
    }

    void close(java.io.FileDescriptor) throws java.io.IOException
    {
        sun.nio.ch.SocketDispatcher r0;
        java.io.FileDescriptor r1;

        r0 := @this: sun.nio.ch.SocketDispatcher;
        r1 := @parameter0: java.io.FileDescriptor;
        staticinvoke <sun.nio.ch.FileDispatcherImpl: void close0(java.io.FileDescriptor)>(r1);
        return;
    }

    void preClose(java.io.FileDescriptor) throws java.io.IOException
    {
        sun.nio.ch.SocketDispatcher r0;
        java.io.FileDescriptor r1;

        r0 := @this: sun.nio.ch.SocketDispatcher;
        r1 := @parameter0: java.io.FileDescriptor;
        staticinvoke <sun.nio.ch.FileDispatcherImpl: void preClose0(java.io.FileDescriptor)>(r1);
        return;
    }
}
