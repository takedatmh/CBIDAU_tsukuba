class sun.net.www.HeaderParser$ParserIterator extends java.lang.Object implements java.util.Iterator
{
    int index;
    boolean returnsValue;
    final sun.net.www.HeaderParser this$0;

    void <init>(sun.net.www.HeaderParser, boolean)
    {
        sun.net.www.HeaderParser$ParserIterator r0;
        sun.net.www.HeaderParser r1;
        boolean z0;

        r0 := @this: sun.net.www.HeaderParser$ParserIterator;
        r1 := @parameter0: sun.net.www.HeaderParser;
        z0 := @parameter1: boolean;
        r0.<sun.net.www.HeaderParser$ParserIterator: sun.net.www.HeaderParser this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.net.www.HeaderParser$ParserIterator: boolean returnsValue> = z0;
        return;
    }

    public boolean hasNext()
    {
        sun.net.www.HeaderParser$ParserIterator r0;
        int $i0, $i1;
        sun.net.www.HeaderParser $r1;
        boolean $z0;

        r0 := @this: sun.net.www.HeaderParser$ParserIterator;
        $i0 = r0.<sun.net.www.HeaderParser$ParserIterator: int index>;
        $r1 = r0.<sun.net.www.HeaderParser$ParserIterator: sun.net.www.HeaderParser this$0>;
        $i1 = $r1.<sun.net.www.HeaderParser: int nkeys>;
        if $i0 >= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.Object next()
    {
        sun.net.www.HeaderParser$ParserIterator r0;
        int $i0, $i1;
        sun.net.www.HeaderParser $r2;
        java.lang.String[][] $r3;
        java.lang.String[] $r4;
        boolean $z0;
        byte $b2;
        java.lang.String $r5;

        r0 := @this: sun.net.www.HeaderParser$ParserIterator;
        $r2 = r0.<sun.net.www.HeaderParser$ParserIterator: sun.net.www.HeaderParser this$0>;
        $r3 = $r2.<sun.net.www.HeaderParser: java.lang.String[][] tab>;
        $i0 = r0.<sun.net.www.HeaderParser$ParserIterator: int index>;
        $i1 = $i0 + 1;
        r0.<sun.net.www.HeaderParser$ParserIterator: int index> = $i1;
        $r4 = $r3[$i0];
        $z0 = r0.<sun.net.www.HeaderParser$ParserIterator: boolean returnsValue>;
        if $z0 == 0 goto label0;

        $b2 = 1;
        goto label1;

     label0:
        $b2 = 0;

     label1:
        $r5 = $r4[$b2];
        return $r5;
    }

    public void remove()
    {
        sun.net.www.HeaderParser$ParserIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: sun.net.www.HeaderParser$ParserIterator;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("remove not supported");
        throw $r1;
    }
}
