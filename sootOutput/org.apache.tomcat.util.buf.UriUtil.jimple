public final class org.apache.tomcat.util.buf.UriUtil extends java.lang.Object
{
    private static java.util.regex.Pattern PATTERN_EXCLAMATION_MARK;
    private static java.util.regex.Pattern PATTERN_CARET;
    private static java.util.regex.Pattern PATTERN_ASTERISK;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("!/");
        <org.apache.tomcat.util.buf.UriUtil: java.util.regex.Pattern PATTERN_EXCLAMATION_MARK> = $r0;
        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\^/");
        <org.apache.tomcat.util.buf.UriUtil: java.util.regex.Pattern PATTERN_CARET> = $r1;
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\*/");
        <org.apache.tomcat.util.buf.UriUtil: java.util.regex.Pattern PATTERN_ASTERISK> = $r2;
        return;
    }

    private void <init>()
    {
        org.apache.tomcat.util.buf.UriUtil r0;

        r0 := @this: org.apache.tomcat.util.buf.UriUtil;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static boolean isSchemeChar(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;
        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c0);
        if $z0 != 0 goto label0;

        if c0 == 43 goto label0;

        if c0 == 45 goto label0;

        if c0 == 46 goto label0;

        return 0;

     label0:
        return 1;
    }

    public static boolean hasScheme(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int i0, i1;
        char c2;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;
        i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        i1 = 0;
        goto label4;

     label0:
        c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i1);
        if c2 != 58 goto label2;

        if i1 <= 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: boolean isSchemeChar(char)>(c2);
        if $z0 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label0;

        return 0;
    }

    public static java.net.URL buildJarUrl(java.io.File) throws java.net.MalformedURLException
    {
        java.io.File r0;
        java.net.URL $r1;

        r0 := @parameter0: java.io.File;
        $r1 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: java.net.URL buildJarUrl(java.io.File,java.lang.String)>(r0, null);
        return $r1;
    }

    public static java.net.URL buildJarUrl(java.io.File, java.lang.String) throws java.net.MalformedURLException
    {
        java.io.File r0;
        java.lang.String r1, $r3;
        java.net.URI $r2;
        java.net.URL $r4;

        r0 := @parameter0: java.io.File;
        r1 := @parameter1: java.lang.String;
        $r2 = virtualinvoke r0.<java.io.File: java.net.URI toURI()>();
        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>();
        $r4 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: java.net.URL buildJarUrl(java.lang.String,java.lang.String)>($r3, r1);
        return $r4;
    }

    public static java.net.URL buildJarUrl(java.lang.String) throws java.net.MalformedURLException
    {
        java.lang.String r0;
        java.net.URL $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: java.net.URL buildJarUrl(java.lang.String,java.lang.String)>(r0, null);
        return $r1;
    }

    public static java.net.URL buildJarUrl(java.lang.String, java.lang.String) throws java.net.MalformedURLException
    {
        java.lang.String r0, r1, r2, $r7, $r10;
        java.lang.StringBuilder r3, $r4;
        java.net.URL $r9;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: java.lang.String makeSafeForJarUrl(java.lang.String)>(r0);
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r3 = $r4;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!/");
        if r1 == null goto label0;

        $r7 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: java.lang.String makeSafeForJarUrl(java.lang.String)>(r1);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label0:
        $r9 = new java.net.URL;
        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>("jar", null, -1, $r10);
        return $r9;
    }

    public static java.net.URL buildJarSafeUrl(java.io.File) throws java.net.MalformedURLException
    {
        java.io.File r0;
        java.lang.String r1, $r3;
        java.net.URI $r2;
        java.net.URL $r4;

        r0 := @parameter0: java.io.File;
        $r2 = virtualinvoke r0.<java.io.File: java.net.URI toURI()>();
        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>();
        r1 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: java.lang.String makeSafeForJarUrl(java.lang.String)>($r3);
        $r4 = new java.net.URL;
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>(r1);
        return $r4;
    }

    private static java.lang.String makeSafeForJarUrl(java.lang.String)
    {
        java.lang.String r0, r2, r6, $r9;
        java.util.regex.Pattern $r1, $r4, $r7;
        java.util.regex.Matcher $r3, $r5, $r8;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.apache.tomcat.util.buf.UriUtil: java.util.regex.Pattern PATTERN_EXCLAMATION_MARK>;
        $r3 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);
        r2 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("%21/");
        $r4 = <org.apache.tomcat.util.buf.UriUtil: java.util.regex.Pattern PATTERN_CARET>;
        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);
        r6 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("%5e/");
        $r7 = <org.apache.tomcat.util.buf.UriUtil: java.util.regex.Pattern PATTERN_ASTERISK>;
        $r8 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6);
        $r9 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("%2a/");
        return $r9;
    }
}
