public final class org.apache.coyote.ajp.Constants extends java.lang.Object
{
    public static final java.lang.String Package;
    public static final int DEFAULT_CONNECTION_LINGER;
    public static final int DEFAULT_CONNECTION_TIMEOUT;
    public static final int DEFAULT_CONNECTION_UPLOAD_TIMEOUT;
    public static final boolean DEFAULT_TCP_NO_DELAY;
    public static final boolean DEFAULT_USE_SENDFILE;
    public static final byte JK_AJP13_FORWARD_REQUEST;
    public static final byte JK_AJP13_SHUTDOWN;
    public static final byte JK_AJP13_PING_REQUEST;
    public static final byte JK_AJP13_CPING_REQUEST;
    public static final byte JK_AJP13_SEND_BODY_CHUNK;
    public static final byte JK_AJP13_SEND_HEADERS;
    public static final byte JK_AJP13_END_RESPONSE;
    public static final byte JK_AJP13_GET_BODY_CHUNK;
    public static final byte JK_AJP13_CPONG_REPLY;
    public static final int SC_RESP_CONTENT_TYPE;
    public static final int SC_RESP_CONTENT_LANGUAGE;
    public static final int SC_RESP_CONTENT_LENGTH;
    public static final int SC_RESP_DATE;
    public static final int SC_RESP_LAST_MODIFIED;
    public static final int SC_RESP_LOCATION;
    public static final int SC_RESP_SET_COOKIE;
    public static final int SC_RESP_SET_COOKIE2;
    public static final int SC_RESP_SERVLET_ENGINE;
    public static final int SC_RESP_STATUS;
    public static final int SC_RESP_WWW_AUTHENTICATE;
    public static final int SC_RESP_AJP13_MAX;
    public static final byte SC_A_CONTEXT;
    public static final byte SC_A_SERVLET_PATH;
    public static final byte SC_A_REMOTE_USER;
    public static final byte SC_A_AUTH_TYPE;
    public static final byte SC_A_QUERY_STRING;
    public static final byte SC_A_JVM_ROUTE;
    public static final byte SC_A_SSL_CERT;
    public static final byte SC_A_SSL_CIPHER;
    public static final byte SC_A_SSL_SESSION;
    public static final byte SC_A_SSL_KEYSIZE;
    public static final byte SC_A_SSL_KEY_SIZE;
    public static final byte SC_A_SECRET;
    public static final byte SC_A_STORED_METHOD;
    public static final byte SC_A_REQ_ATTRIBUTE;
    public static final java.lang.String SC_A_REQ_LOCAL_ADDR;
    public static final java.lang.String SC_A_REQ_REMOTE_PORT;
    public static final java.lang.String SC_A_SSL_PROTOCOL;
    public static final byte SC_A_ARE_DONE;
    public static final int MAX_PACKET_SIZE;
    public static final int H_SIZE;
    public static final int READ_HEAD_LEN;
    public static final int SEND_HEAD_LEN;
    public static final int MAX_READ_SIZE;
    public static final int MAX_SEND_SIZE;
    private static final java.lang.String[] methodTransArray;
    public static final int SC_M_JK_STORED;
    public static final int SC_REQ_ACCEPT;
    public static final int SC_REQ_ACCEPT_CHARSET;
    public static final int SC_REQ_ACCEPT_ENCODING;
    public static final int SC_REQ_ACCEPT_LANGUAGE;
    public static final int SC_REQ_AUTHORIZATION;
    public static final int SC_REQ_CONNECTION;
    public static final int SC_REQ_CONTENT_TYPE;
    public static final int SC_REQ_CONTENT_LENGTH;
    public static final int SC_REQ_COOKIE;
    public static final int SC_REQ_COOKIE2;
    public static final int SC_REQ_HOST;
    public static final int SC_REQ_PRAGMA;
    public static final int SC_REQ_REFERER;
    public static final int SC_REQ_USER_AGENT;
    private static final java.lang.String[] headerTransArray;
    private static final java.lang.String[] responseTransArray;
    private static final java.util.Hashtable responseTransHash;
    public static final java.lang.String CRLF;
    public static final byte[] SERVER_BYTES;
    public static final byte CR;
    public static final byte LF;
    public static final byte SP;
    public static final byte HT;
    public static final byte COLON;
    public static final byte A;
    public static final byte a;
    public static final byte Z;
    public static final byte QUESTION;
    public static final byte LC_OFFSET;
    public static final int DEFAULT_HTTP_HEADER_BUFFER_SIZE;
    public static final byte[] CRLF_BYTES;
    public static final byte[] COLON_BYTES;
    public static final java.lang.String CONNECTION;
    public static final java.lang.String CLOSE;
    public static final byte[] CLOSE_BYTES;
    public static final java.lang.String KEEPALIVE;
    public static final byte[] KEEPALIVE_BYTES;
    public static final java.lang.String CHUNKED;
    public static final byte[] ACK_BYTES;
    public static final java.lang.String TRANSFERENCODING;
    public static final byte[] _200_BYTES;
    public static final byte[] _400_BYTES;
    public static final byte[] _404_BYTES;
    public static final int IDENTITY_FILTER;
    public static final int CHUNKED_FILTER;
    public static final int VOID_FILTER;
    public static final int GZIP_FILTER;
    public static final int BUFFERED_FILTER;
    public static final java.lang.String HTTP_10;
    public static final java.lang.String HTTP_11;
    public static final byte[] HTTP_11_BYTES;
    public static final java.lang.String GET;
    public static final java.lang.String HEAD;
    public static final java.lang.String POST;

    static void <clinit>()
    {
        int i0, $i1;
        java.lang.String[] $r0, $r1, $r2;
        java.util.Hashtable $r3, $r4;
        java.lang.String $r5;
        java.lang.Integer $r6;
        java.lang.Exception $r8, r9;
        byte[] $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        $r0 = newarray (java.lang.String)[27];
        $r0[0] = "OPTIONS";
        $r0[1] = "GET";
        $r0[2] = "HEAD";
        $r0[3] = "POST";
        $r0[4] = "PUT";
        $r0[5] = "DELETE";
        $r0[6] = "TRACE";
        $r0[7] = "PROPFIND";
        $r0[8] = "PROPPATCH";
        $r0[9] = "MKCOL";
        $r0[10] = "COPY";
        $r0[11] = "MOVE";
        $r0[12] = "LOCK";
        $r0[13] = "UNLOCK";
        $r0[14] = "ACL";
        $r0[15] = "REPORT";
        $r0[16] = "VERSION-CONTROL";
        $r0[17] = "CHECKIN";
        $r0[18] = "CHECKOUT";
        $r0[19] = "UNCHECKOUT";
        $r0[20] = "SEARCH";
        $r0[21] = "MKWORKSPACE";
        $r0[22] = "UPDATE";
        $r0[23] = "LABEL";
        $r0[24] = "MERGE";
        $r0[25] = "BASELINE-CONTROL";
        $r0[26] = "MKACTIVITY";
        <org.apache.coyote.ajp.Constants: java.lang.String[] methodTransArray> = $r0;
        $r1 = newarray (java.lang.String)[14];
        $r1[0] = "accept";
        $r1[1] = "accept-charset";
        $r1[2] = "accept-encoding";
        $r1[3] = "accept-language";
        $r1[4] = "authorization";
        $r1[5] = "connection";
        $r1[6] = "content-type";
        $r1[7] = "content-length";
        $r1[8] = "cookie";
        $r1[9] = "cookie2";
        $r1[10] = "host";
        $r1[11] = "pragma";
        $r1[12] = "referer";
        $r1[13] = "user-agent";
        <org.apache.coyote.ajp.Constants: java.lang.String[] headerTransArray> = $r1;
        $r2 = newarray (java.lang.String)[11];
        $r2[0] = "Content-Type";
        $r2[1] = "Content-Language";
        $r2[2] = "Content-Length";
        $r2[3] = "Date";
        $r2[4] = "Last-Modified";
        $r2[5] = "Location";
        $r2[6] = "Set-Cookie";
        $r2[7] = "Set-Cookie2";
        $r2[8] = "Servlet-Engine";
        $r2[9] = "Status";
        $r2[10] = "WWW-Authenticate";
        <org.apache.coyote.ajp.Constants: java.lang.String[] responseTransArray> = $r2;
        $r3 = new java.util.Hashtable;
        specialinvoke $r3.<java.util.Hashtable: void <init>(int)>(20);
        <org.apache.coyote.ajp.Constants: java.util.Hashtable responseTransHash> = $r3;

     label0:
        i0 = 0;
        goto label2;

     label1:
        $r4 = <org.apache.coyote.ajp.Constants: java.util.Hashtable responseTransHash>;
        $r5 = staticinvoke <org.apache.coyote.ajp.Constants: java.lang.String getResponseHeaderForCode(int)>(i0);
        $i1 = 40961 + i0;
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);
        i0 = i0 + 1;

     label2:
        if i0 < 11 goto label1;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        r9 = $r8;

     label5:
        $r10 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: byte[] convertToBytes(java.lang.String)>("Server: Apache-Coyote/1.1\r\n");
        <org.apache.coyote.ajp.Constants: byte[] SERVER_BYTES> = $r10;
        $r11 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: byte[] convertToBytes(java.lang.String)>("\r\n");
        <org.apache.coyote.ajp.Constants: byte[] CRLF_BYTES> = $r11;
        $r12 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: byte[] convertToBytes(java.lang.String)>(": ");
        <org.apache.coyote.ajp.Constants: byte[] COLON_BYTES> = $r12;
        $r13 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: byte[] convertToBytes(java.lang.String)>("close");
        <org.apache.coyote.ajp.Constants: byte[] CLOSE_BYTES> = $r13;
        $r14 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: byte[] convertToBytes(java.lang.String)>("keep-alive");
        <org.apache.coyote.ajp.Constants: byte[] KEEPALIVE_BYTES> = $r14;
        $r15 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: byte[] convertToBytes(java.lang.String)>("HTTP/1.1 100 Continue\r\n\r\n");
        <org.apache.coyote.ajp.Constants: byte[] ACK_BYTES> = $r15;
        $r16 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: byte[] convertToBytes(java.lang.String)>("200");
        <org.apache.coyote.ajp.Constants: byte[] _200_BYTES> = $r16;
        $r17 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: byte[] convertToBytes(java.lang.String)>("400");
        <org.apache.coyote.ajp.Constants: byte[] _400_BYTES> = $r17;
        $r18 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: byte[] convertToBytes(java.lang.String)>("404");
        <org.apache.coyote.ajp.Constants: byte[] _404_BYTES> = $r18;
        $r19 = staticinvoke <org.apache.tomcat.util.buf.ByteChunk: byte[] convertToBytes(java.lang.String)>("HTTP/1.1");
        <org.apache.coyote.ajp.Constants: byte[] HTTP_11_BYTES> = $r19;
        return;

        catch java.lang.Exception from label0 to label3 with label4;
    }

    public void <init>()
    {
        org.apache.coyote.ajp.Constants r0;

        r0 := @this: org.apache.coyote.ajp.Constants;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static final java.lang.String getMethodForCode(int)
    {
        int i0;
        java.lang.String[] $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;
        $r0 = <org.apache.coyote.ajp.Constants: java.lang.String[] methodTransArray>;
        $r1 = $r0[i0];
        return $r1;
    }

    public static final java.lang.String getHeaderForCode(int)
    {
        int i0;
        java.lang.String[] $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;
        $r0 = <org.apache.coyote.ajp.Constants: java.lang.String[] headerTransArray>;
        $r1 = $r0[i0];
        return $r1;
    }

    public static final java.lang.String getResponseHeaderForCode(int)
    {
        int i0;
        java.lang.String[] $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;
        $r0 = <org.apache.coyote.ajp.Constants: java.lang.String[] responseTransArray>;
        $r1 = $r0[i0];
        return $r1;
    }

    public static final int getResponseAjpIndex(java.lang.String)
    {
        java.lang.String r0;
        java.util.Hashtable $r1;
        java.lang.Integer r2;
        java.lang.Object $r3;
        int $i0;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.apache.coyote.ajp.Constants: java.util.Hashtable responseTransHash>;
        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (java.lang.Integer) $r3;
        if r2 != null goto label0;

        return 0;

     label0:
        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
        return $i0;
    }
}
