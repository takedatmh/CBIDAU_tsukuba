public abstract class sun.net.dns.ResolverConfiguration extends java.lang.Object
{
    private static final java.lang.Object lock;
    private static sun.net.dns.ResolverConfiguration provider;

    protected void <init>()
    {
        sun.net.dns.ResolverConfiguration r0;

        r0 := @this: sun.net.dns.ResolverConfiguration;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static sun.net.dns.ResolverConfiguration open()
    {
        java.lang.Object $r0, r1;
        java.lang.Throwable r2, $r6;
        sun.net.dns.ResolverConfiguration $r3, $r5;
        sun.net.dns.ResolverConfigurationImpl $r4;

        $r0 = <sun.net.dns.ResolverConfiguration: java.lang.Object lock>;
        r1 = $r0;
        entermonitor $r0;

     label0:
        $r3 = <sun.net.dns.ResolverConfiguration: sun.net.dns.ResolverConfiguration provider>;
        if $r3 != null goto label1;

        $r4 = new sun.net.dns.ResolverConfigurationImpl;
        specialinvoke $r4.<sun.net.dns.ResolverConfigurationImpl: void <init>()>();
        <sun.net.dns.ResolverConfiguration: sun.net.dns.ResolverConfiguration provider> = $r4;

     label1:
        $r5 = <sun.net.dns.ResolverConfiguration: sun.net.dns.ResolverConfiguration provider>;
        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

     label4:
        r2 = $r6;
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public abstract java.util.List searchlist();

    public abstract java.util.List nameservers();

    public abstract sun.net.dns.ResolverConfiguration$Options options();

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        <sun.net.dns.ResolverConfiguration: java.lang.Object lock> = $r0;
        return;
    }
}
