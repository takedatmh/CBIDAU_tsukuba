final class java.lang.ProcessImpl extends java.lang.Object
{
    private static final sun.misc.JavaIOFileDescriptorAccess fdAccess;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        java.lang.ProcessImpl r0;

        r0 := @this: java.lang.ProcessImpl;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static byte[] toCString(java.lang.String)
    {
        java.lang.String r0;
        byte[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();
        $i0 = lengthof r1;
        $i1 = $i0 + 1;
        r2 = newarray (byte)[$i1];
        $i2 = lengthof r1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i2);
        $i3 = lengthof r2;
        $i4 = $i3 - 1;
        r2[$i4] = 0;
        return r2;
    }

    static java.lang.Process start(java.lang.String[], java.util.Map, java.lang.String, java.lang.ProcessBuilder$Redirect[], boolean) throws java.io.IOException
    {
        java.lang.String[] r0;
        java.util.Map r1;
        java.lang.String r2, $r18, $r57;
        java.lang.ProcessBuilder$Redirect[] r3;
        boolean z0, $z1, $z2, $z3;
        byte[][] r4, r5;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        byte[] r6, $r19, $r20, r21, r23, $r58, $r59;
        java.io.FileOutputStream r7, r8, $r40, $r50;
        java.lang.UNIXProcess r9, $r56;
        java.lang.Throwable r10, r11, r12, r13, r14, r15, r16, $r60, $r61, $r62, $r63, $r64, $r65, $r66;
        java.lang.AssertionError $r17;
        int[] r22, $r25, r26;
        java.io.FileInputStream r24, $r31;
        java.lang.ProcessBuilder$Redirect $r27, $r28, $r29, $r30, $r32, $r36, $r37, $r38, $r39, $r41, $r43, $r46, $r47, $r48, $r49, $r51, $r53;
        java.io.File $r33, $r42, $r52;
        sun.misc.JavaIOFileDescriptorAccess $r34, $r44, $r54;
        java.io.FileDescriptor $r35, $r45, $r55;

        r0 := @parameter0: java.lang.String[];
        r1 := @parameter1: java.util.Map;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: java.lang.ProcessBuilder$Redirect[];
        z0 := @parameter4: boolean;
        $z1 = <java.lang.ProcessImpl: boolean $assertionsDisabled>;
        if $z1 != 0 goto label1;

        if r0 == null goto label0;

        $i5 = lengthof r0;
        if $i5 > 0 goto label1;

     label0:
        $r17 = new java.lang.AssertionError;
        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();
        throw $r17;

     label1:
        $i6 = lengthof r0;
        $i7 = $i6 - 1;
        r4 = newarray (byte[])[$i7];
        i0 = lengthof r4;
        i1 = 0;

     label2:
        $i8 = lengthof r4;
        if i1 >= $i8 goto label3;

        $i9 = i1 + 1;
        $r18 = r0[$i9];
        $r19 = virtualinvoke $r18.<java.lang.String: byte[] getBytes()>();
        r4[i1] = $r19;
        $r20 = r4[i1];
        $i10 = lengthof $r20;
        i0 = i0 + $i10;
        i1 = i1 + 1;
        goto label2;

     label3:
        r21 = newarray (byte)[i0];
        i2 = 0;
        r5 = r4;
        i3 = lengthof r5;
        i4 = 0;

     label4:
        if i4 >= i3 goto label5;

        r6 = r5[i4];
        $i11 = lengthof r6;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r21, i2, $i11);
        $i12 = lengthof r6;
        $i13 = $i12 + 1;
        i2 = i2 + $i13;
        i4 = i4 + 1;
        goto label4;

     label5:
        r22 = newarray (int)[1];
        r23 = staticinvoke <java.lang.ProcessEnvironment: byte[] toEnvironmentBlock(java.util.Map,int[])>(r1, r22);
        r24 = null;
        r7 = null;
        r8 = null;

     label6:
        if r3 != null goto label7;

        $r25 = newarray (int)[3];
        $r25[0] = -1;
        $r25[1] = -1;
        $r25[2] = -1;
        r26 = $r25;
        goto label16;

     label7:
        r26 = newarray (int)[3];
        $r27 = r3[0];
        $r28 = <java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect PIPE>;
        if $r27 != $r28 goto label8;

        r26[0] = -1;
        goto label10;

     label8:
        $r29 = r3[0];
        $r30 = <java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect INHERIT>;
        if $r29 != $r30 goto label9;

        r26[0] = 0;
        goto label10;

     label9:
        $r31 = new java.io.FileInputStream;
        $r32 = r3[0];
        $r33 = virtualinvoke $r32.<java.lang.ProcessBuilder$Redirect: java.io.File file()>();
        specialinvoke $r31.<java.io.FileInputStream: void <init>(java.io.File)>($r33);
        r24 = $r31;
        $r34 = <java.lang.ProcessImpl: sun.misc.JavaIOFileDescriptorAccess fdAccess>;
        $r35 = virtualinvoke r24.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();
        $i14 = interfaceinvoke $r34.<sun.misc.JavaIOFileDescriptorAccess: int get(java.io.FileDescriptor)>($r35);
        r26[0] = $i14;

     label10:
        $r36 = r3[1];
        $r37 = <java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect PIPE>;
        if $r36 != $r37 goto label11;

        r26[1] = -1;
        goto label13;

     label11:
        $r38 = r3[1];
        $r39 = <java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect INHERIT>;
        if $r38 != $r39 goto label12;

        r26[1] = 1;
        goto label13;

     label12:
        $r40 = new java.io.FileOutputStream;
        $r41 = r3[1];
        $r42 = virtualinvoke $r41.<java.lang.ProcessBuilder$Redirect: java.io.File file()>();
        $r43 = r3[1];
        $z2 = virtualinvoke $r43.<java.lang.ProcessBuilder$Redirect: boolean append()>();
        specialinvoke $r40.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r42, $z2);
        r7 = $r40;
        $r44 = <java.lang.ProcessImpl: sun.misc.JavaIOFileDescriptorAccess fdAccess>;
        $r45 = virtualinvoke r7.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();
        $i15 = interfaceinvoke $r44.<sun.misc.JavaIOFileDescriptorAccess: int get(java.io.FileDescriptor)>($r45);
        r26[1] = $i15;

     label13:
        $r46 = r3[2];
        $r47 = <java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect PIPE>;
        if $r46 != $r47 goto label14;

        r26[2] = -1;
        goto label16;

     label14:
        $r48 = r3[2];
        $r49 = <java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect INHERIT>;
        if $r48 != $r49 goto label15;

        r26[2] = 2;
        goto label16;

     label15:
        $r50 = new java.io.FileOutputStream;
        $r51 = r3[2];
        $r52 = virtualinvoke $r51.<java.lang.ProcessBuilder$Redirect: java.io.File file()>();
        $r53 = r3[2];
        $z3 = virtualinvoke $r53.<java.lang.ProcessBuilder$Redirect: boolean append()>();
        specialinvoke $r50.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r52, $z3);
        r8 = $r50;
        $r54 = <java.lang.ProcessImpl: sun.misc.JavaIOFileDescriptorAccess fdAccess>;
        $r55 = virtualinvoke r8.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();
        $i16 = interfaceinvoke $r54.<sun.misc.JavaIOFileDescriptorAccess: int get(java.io.FileDescriptor)>($r55);
        r26[2] = $i16;

     label16:
        $r56 = new java.lang.UNIXProcess;
        $r57 = r0[0];
        $r58 = staticinvoke <java.lang.ProcessImpl: byte[] toCString(java.lang.String)>($r57);
        $i17 = lengthof r4;
        $i18 = r22[0];
        $r59 = staticinvoke <java.lang.ProcessImpl: byte[] toCString(java.lang.String)>(r2);
        specialinvoke $r56.<java.lang.UNIXProcess: void <init>(byte[],byte[],int,byte[],int,byte[],int[],boolean)>($r58, r21, $i17, r23, $i18, $r59, r26, z0);
        r9 = $r56;

     label17:
        if r24 == null goto label18;

        virtualinvoke r24.<java.io.FileInputStream: void close()>();

     label18:
        if r7 == null goto label19;

        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

     label19:
        if r8 == null goto label24;

        virtualinvoke r8.<java.io.FileOutputStream: void close()>();
        goto label24;

     label20:
        $r60 := @caughtexception;

     label21:
        r10 = $r60;

     label22:
        if r8 == null goto label23;

        virtualinvoke r8.<java.io.FileOutputStream: void close()>();

     label23:
        throw r10;

     label24:
        goto label34;

     label25:
        $r61 := @caughtexception;

     label26:
        r11 = $r61;

     label27:
        if r7 == null goto label28;

        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

     label28:
        if r8 == null goto label33;

        virtualinvoke r8.<java.io.FileOutputStream: void close()>();
        goto label33;

     label29:
        $r62 := @caughtexception;

     label30:
        r12 = $r62;

     label31:
        if r8 == null goto label32;

        virtualinvoke r8.<java.io.FileOutputStream: void close()>();

     label32:
        throw r12;

     label33:
        throw r11;

     label34:
        return r9;

     label35:
        $r63 := @caughtexception;

     label36:
        r13 = $r63;

     label37:
        if r24 == null goto label38;

        virtualinvoke r24.<java.io.FileInputStream: void close()>();

     label38:
        if r7 == null goto label39;

        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

     label39:
        if r8 == null goto label44;

        virtualinvoke r8.<java.io.FileOutputStream: void close()>();
        goto label44;

     label40:
        $r64 := @caughtexception;

     label41:
        r14 = $r64;

     label42:
        if r8 == null goto label43;

        virtualinvoke r8.<java.io.FileOutputStream: void close()>();

     label43:
        throw r14;

     label44:
        goto label54;

     label45:
        $r65 := @caughtexception;

     label46:
        r15 = $r65;

     label47:
        if r7 == null goto label48;

        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

     label48:
        if r8 == null goto label53;

        virtualinvoke r8.<java.io.FileOutputStream: void close()>();
        goto label53;

     label49:
        $r66 := @caughtexception;

     label50:
        r16 = $r66;

     label51:
        if r8 == null goto label52;

        virtualinvoke r8.<java.io.FileOutputStream: void close()>();

     label52:
        throw r16;

     label53:
        throw r15;

     label54:
        throw r13;

        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label6 to label17 with label35;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch java.lang.Throwable from label41 to label42 with label40;
        catch java.lang.Throwable from label37 to label38 with label45;
        catch java.lang.Throwable from label47 to label48 with label49;
        catch java.lang.Throwable from label50 to label51 with label49;
        catch java.lang.Throwable from label46 to label47 with label45;
        catch java.lang.Throwable from label36 to label37 with label35;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        sun.misc.JavaIOFileDescriptorAccess $r1;

        $r0 = class "java/lang/ProcessImpl";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.lang.ProcessImpl: boolean $assertionsDisabled> = $z1;
        $r1 = staticinvoke <sun.misc.SharedSecrets: sun.misc.JavaIOFileDescriptorAccess getJavaIOFileDescriptorAccess()>();
        <java.lang.ProcessImpl: sun.misc.JavaIOFileDescriptorAccess fdAccess> = $r1;
        return;
    }
}
