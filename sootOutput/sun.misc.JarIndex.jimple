public class sun.misc.JarIndex extends java.lang.Object
{
    private java.util.HashMap indexMap;
    private java.util.HashMap jarMap;
    private java.lang.String[] jarFiles;
    public static final java.lang.String INDEX_NAME;
    private static final boolean metaInfFilenames;

    public void <init>()
    {
        sun.misc.JarIndex r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: sun.misc.JarIndex;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        r0.<sun.misc.JarIndex: java.util.HashMap indexMap> = $r1;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        r0.<sun.misc.JarIndex: java.util.HashMap jarMap> = $r2;
        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        sun.misc.JarIndex r0;
        java.io.InputStream r1;

        r0 := @this: sun.misc.JarIndex;
        r1 := @parameter0: java.io.InputStream;
        specialinvoke r0.<sun.misc.JarIndex: void <init>()>();
        virtualinvoke r0.<sun.misc.JarIndex: void read(java.io.InputStream)>(r1);
        return;
    }

    public void <init>(java.lang.String[]) throws java.io.IOException
    {
        sun.misc.JarIndex r0;
        java.lang.String[] r1;

        r0 := @this: sun.misc.JarIndex;
        r1 := @parameter0: java.lang.String[];
        specialinvoke r0.<sun.misc.JarIndex: void <init>()>();
        r0.<sun.misc.JarIndex: java.lang.String[] jarFiles> = r1;
        specialinvoke r0.<sun.misc.JarIndex: void parseJars(java.lang.String[])>(r1);
        return;
    }

    public static sun.misc.JarIndex getJarIndex(java.util.jar.JarFile) throws java.io.IOException
    {
        java.util.jar.JarFile r0;
        sun.misc.JarIndex $r1;

        r0 := @parameter0: java.util.jar.JarFile;
        $r1 = staticinvoke <sun.misc.JarIndex: sun.misc.JarIndex getJarIndex(java.util.jar.JarFile,sun.misc.MetaIndex)>(r0, null);
        return $r1;
    }

    public static sun.misc.JarIndex getJarIndex(java.util.jar.JarFile, sun.misc.MetaIndex) throws java.io.IOException
    {
        java.util.jar.JarFile r0;
        sun.misc.MetaIndex r1;
        sun.misc.JarIndex r2, $r4;
        java.util.jar.JarEntry r3;
        boolean $z0;
        java.io.InputStream $r5;

        r0 := @parameter0: java.util.jar.JarFile;
        r1 := @parameter1: sun.misc.MetaIndex;
        r2 = null;
        if r1 == null goto label0;

        $z0 = virtualinvoke r1.<sun.misc.MetaIndex: boolean mayContain(java.lang.String)>("META-INF/INDEX.LIST");
        if $z0 != 0 goto label0;

        return null;

     label0:
        r3 = virtualinvoke r0.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>("META-INF/INDEX.LIST");
        if r3 == null goto label1;

        $r4 = new sun.misc.JarIndex;
        $r5 = virtualinvoke r0.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r3);
        specialinvoke $r4.<sun.misc.JarIndex: void <init>(java.io.InputStream)>($r5);
        r2 = $r4;

     label1:
        return r2;
    }

    public java.lang.String[] getJarFiles()
    {
        sun.misc.JarIndex r0;
        java.lang.String[] $r1;

        r0 := @this: sun.misc.JarIndex;
        $r1 = r0.<sun.misc.JarIndex: java.lang.String[] jarFiles>;
        return $r1;
    }

    private void addToList(java.lang.String, java.lang.String, java.util.HashMap)
    {
        sun.misc.JarIndex r0;
        java.lang.String r1, r2;
        java.util.HashMap r3;
        java.util.LinkedList r4, $r6, r7;
        java.lang.Object $r5;
        boolean $z1;

        r0 := @this: sun.misc.JarIndex;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.util.HashMap;
        $r5 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r4 = (java.util.LinkedList) $r5;
        if r4 != null goto label0;

        $r6 = new java.util.LinkedList;
        specialinvoke $r6.<java.util.LinkedList: void <init>()>();
        r7 = $r6;
        virtualinvoke r7.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);
        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r7);
        goto label1;

     label0:
        $z1 = virtualinvoke r4.<java.util.LinkedList: boolean contains(java.lang.Object)>(r2);
        if $z1 != 0 goto label1;

        virtualinvoke r4.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);

     label1:
        return;
    }

    public java.util.LinkedList get(java.lang.String)
    {
        sun.misc.JarIndex r0;
        java.lang.String r1, $r7;
        null_type n0;
        int i0, $i1;
        java.util.HashMap $r2, $r6;
        java.lang.Object $r3, $r8;
        java.util.LinkedList $r4, r5;

        r0 := @this: sun.misc.JarIndex;
        r1 := @parameter0: java.lang.String;
        n0 = null;
        $r2 = r0.<sun.misc.JarIndex: java.util.HashMap indexMap>;
        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (java.util.LinkedList) $r3;
        r5 = $r4;
        if $r4 != null goto label0;

        $i1 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");
        i0 = $i1;
        if $i1 == -1 goto label0;

        $r6 = r0.<sun.misc.JarIndex: java.util.HashMap indexMap>;
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);
        r5 = (java.util.LinkedList) $r8;

     label0:
        return r5;
    }

    public void add(java.lang.String, java.lang.String)
    {
        sun.misc.JarIndex r0;
        java.lang.String r1, r2, r3;
        int i0, $i1;
        java.util.HashMap $r4, $r5;

        r0 := @this: sun.misc.JarIndex;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $i1 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");
        i0 = $i1;
        if $i1 == -1 goto label0;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        goto label1;

     label0:
        r3 = r1;

     label1:
        $r4 = r0.<sun.misc.JarIndex: java.util.HashMap indexMap>;
        specialinvoke r0.<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>(r3, r2, $r4);
        $r5 = r0.<sun.misc.JarIndex: java.util.HashMap jarMap>;
        specialinvoke r0.<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>(r2, r3, $r5);
        return;
    }

    private void addExplicit(java.lang.String, java.lang.String)
    {
        sun.misc.JarIndex r0;
        java.lang.String r1, r2;
        java.util.HashMap $r3, $r4;

        r0 := @this: sun.misc.JarIndex;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = r0.<sun.misc.JarIndex: java.util.HashMap indexMap>;
        specialinvoke r0.<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>(r1, r2, $r3);
        $r4 = r0.<sun.misc.JarIndex: java.util.HashMap jarMap>;
        specialinvoke r0.<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>(r2, r1, $r4);
        return;
    }

    private void parseJars(java.lang.String[]) throws java.io.IOException
    {
        sun.misc.JarIndex r0;
        java.lang.String[] r1;
        null_type n0;
        int i0, $i2;
        char $c1;
        java.util.zip.ZipFile r2, $r7;
        java.util.Enumeration r3;
        java.util.zip.ZipEntry r4;
        java.lang.String r5, r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r9;

        r0 := @this: sun.misc.JarIndex;
        r1 := @parameter0: java.lang.String[];
        if r1 != null goto label0;

        return;

     label0:
        n0 = null;
        i0 = 0;

     label1:
        $i2 = lengthof r1;
        if i0 >= $i2 goto label8;

        r6 = r1[i0];
        $r7 = new java.util.zip.ZipFile;
        $c1 = <java.io.File: char separatorChar>;
        $r8 = virtualinvoke r6.<java.lang.String: java.lang.String replace(char,char)>(47, $c1);
        specialinvoke $r7.<java.util.zip.ZipFile: void <init>(java.lang.String)>($r8);
        r2 = $r7;
        r3 = virtualinvoke r2.<java.util.zip.ZipFile: java.util.Enumeration entries()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (java.util.zip.ZipEntry) $r9;
        r5 = virtualinvoke r4.<java.util.zip.ZipEntry: java.lang.String getName()>();
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("META-INF/");
        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("META-INF/INDEX.LIST");
        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("META-INF/MANIFEST.MF");
        if $z3 == 0 goto label3;

        goto label2;

     label3:
        $z4 = <sun.misc.JarIndex: boolean metaInfFilenames>;
        if $z4 != 0 goto label4;

        virtualinvoke r0.<sun.misc.JarIndex: void add(java.lang.String,java.lang.String)>(r5, r6);
        goto label6;

     label4:
        $z5 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("META-INF/");
        if $z5 != 0 goto label5;

        virtualinvoke r0.<sun.misc.JarIndex: void add(java.lang.String,java.lang.String)>(r5, r6);
        goto label6;

     label5:
        $z6 = virtualinvoke r4.<java.util.zip.ZipEntry: boolean isDirectory()>();
        if $z6 != 0 goto label6;

        specialinvoke r0.<sun.misc.JarIndex: void addExplicit(java.lang.String,java.lang.String)>(r5, r6);

     label6:
        goto label2;

     label7:
        virtualinvoke r2.<java.util.zip.ZipFile: void close()>();
        i0 = i0 + 1;
        goto label1;

     label8:
        return;
    }

    public void write(java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.JarIndex r0;
        java.io.OutputStream r1;
        java.io.BufferedWriter $r2, r4;
        java.io.OutputStreamWriter $r3;
        int i0, $i1;
        java.lang.String r5, $r14, $r19, $r20, $r23;
        java.util.LinkedList r6;
        java.util.Iterator r7;
        java.lang.String[] $r8, $r9, $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r17, $r21, $r22;
        java.util.HashMap $r15;
        java.lang.Object $r16, $r18;
        boolean $z0;

        r0 := @this: sun.misc.JarIndex;
        r1 := @parameter0: java.io.OutputStream;
        $r2 = new java.io.BufferedWriter;
        $r3 = new java.io.OutputStreamWriter;
        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, "UTF8");
        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r3);
        r4 = $r2;
        virtualinvoke r4.<java.io.BufferedWriter: void write(java.lang.String)>("JarIndex-Version: 1.0\n\n");
        $r8 = r0.<sun.misc.JarIndex: java.lang.String[] jarFiles>;
        if $r8 == null goto label4;

        i0 = 0;

     label0:
        $r9 = r0.<sun.misc.JarIndex: java.lang.String[] jarFiles>;
        $i1 = lengthof $r9;
        if i0 >= $i1 goto label3;

        $r10 = r0.<sun.misc.JarIndex: java.lang.String[] jarFiles>;
        r5 = $r10[i0];
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<java.io.BufferedWriter: void write(java.lang.String)>($r14);
        $r15 = r0.<sun.misc.JarIndex: java.util.HashMap jarMap>;
        $r16 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);
        r6 = (java.util.LinkedList) $r16;
        if r6 == null goto label2;

        r7 = virtualinvoke r6.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        $r19 = (java.lang.String) $r18;
        $r20 = (java.lang.String) $r19;
        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<java.io.BufferedWriter: void write(java.lang.String)>($r23);
        goto label1;

     label2:
        virtualinvoke r4.<java.io.BufferedWriter: void write(java.lang.String)>("\n");
        i0 = i0 + 1;
        goto label0;

     label3:
        virtualinvoke r4.<java.io.BufferedWriter: void flush()>();

     label4:
        return;
    }

    public void read(java.io.InputStream) throws java.io.IOException
    {
        sun.misc.JarIndex r0;
        java.io.InputStream r1;
        java.io.BufferedReader $r2, r4;
        java.io.InputStreamReader $r3;
        null_type n0;
        java.lang.String r5, r7, $r9, r10;
        java.util.Vector r6, $r8;
        boolean $z0, $z1;
        int $i0, $i1;
        java.util.HashMap $r11, $r12;
        java.lang.String[] $r13, $r15, $r16;
        java.lang.Object[] $r14;

        r0 := @this: sun.misc.JarIndex;
        r1 := @parameter0: java.io.InputStream;
        $r2 = new java.io.BufferedReader;
        $r3 = new java.io.InputStreamReader;
        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, "UTF8");
        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3);
        r4 = $r2;
        n0 = null;
        r5 = null;
        $r8 = new java.util.Vector;
        specialinvoke $r8.<java.util.Vector: void <init>()>();
        r6 = $r8;

     label0:
        $r9 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();
        r10 = $r9;
        if $r9 == null goto label1;

        $z0 = virtualinvoke r10.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");
        if $z0 != 0 goto label1;

        goto label0;

     label1:
        if r10 == null goto label5;

        $i0 = virtualinvoke r10.<java.lang.String: int length()>();
        if $i0 != 0 goto label2;

        goto label4;

     label2:
        $z1 = virtualinvoke r10.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");
        if $z1 == 0 goto label3;

        r5 = r10;
        virtualinvoke r6.<java.util.Vector: boolean add(java.lang.Object)>(r5);
        goto label4;

     label3:
        r7 = r10;
        $r11 = r0.<sun.misc.JarIndex: java.util.HashMap indexMap>;
        specialinvoke r0.<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>(r7, r5, $r11);
        $r12 = r0.<sun.misc.JarIndex: java.util.HashMap jarMap>;
        specialinvoke r0.<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>(r5, r7, $r12);

     label4:
        r10 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();
        goto label1;

     label5:
        $i1 = virtualinvoke r6.<java.util.Vector: int size()>();
        $r13 = newarray (java.lang.String)[$i1];
        $r14 = virtualinvoke r6.<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>($r13);
        $r15 = (java.lang.String[]) $r14;
        $r16 = (java.lang.String[]) $r15;
        r0.<sun.misc.JarIndex: java.lang.String[] jarFiles> = $r16;
        return;
    }

    public void merge(sun.misc.JarIndex, java.lang.String)
    {
        sun.misc.JarIndex r0, r1;
        java.lang.String r2, r5, r8;
        java.util.Iterator r3, r7;
        java.util.Map$Entry r4;
        java.util.LinkedList r6;
        java.util.HashMap $r9;
        java.util.Set $r10;
        boolean $z0, $z1;
        java.lang.Object $r11, $r12, $r13, $r14;

        r0 := @this: sun.misc.JarIndex;
        r1 := @parameter0: sun.misc.JarIndex;
        r2 := @parameter1: java.lang.String;
        $r9 = r0.<sun.misc.JarIndex: java.util.HashMap indexMap>;
        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r11;
        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        r5 = (java.lang.String) $r12;
        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        r6 = (java.util.LinkedList) $r13;
        r7 = virtualinvoke r6.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label3;

        $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        r8 = (java.lang.String) $r14;
        if r2 == null goto label2;

        r8 = virtualinvoke r2.<java.lang.String: java.lang.String concat(java.lang.String)>(r8);

     label2:
        virtualinvoke r1.<sun.misc.JarIndex: void add(java.lang.String,java.lang.String)>(r5, r8);
        goto label1;

     label3:
        goto label0;

     label4:
        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 = "true";
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.misc.JarIndex.metaInfFilenames");
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);
        <sun.misc.JarIndex: boolean metaInfFilenames> = $z0;
        return;
    }
}
