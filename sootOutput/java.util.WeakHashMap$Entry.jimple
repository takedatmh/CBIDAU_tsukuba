class java.util.WeakHashMap$Entry extends java.lang.ref.WeakReference implements java.util.Map$Entry
{
    java.lang.Object value;
    int hash;
    java.util.WeakHashMap$Entry next;

    void <init>(java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue, int, java.util.WeakHashMap$Entry)
    {
        java.util.WeakHashMap$Entry r0, r4;
        java.lang.Object r1, r2;
        java.lang.ref.ReferenceQueue r3;
        int i0;

        r0 := @this: java.util.WeakHashMap$Entry;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: java.lang.ref.ReferenceQueue;
        i0 := @parameter3: int;
        r4 := @parameter4: java.util.WeakHashMap$Entry;
        specialinvoke r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, r3);
        r0.<java.util.WeakHashMap$Entry: java.lang.Object value> = r2;
        r0.<java.util.WeakHashMap$Entry: int hash> = i0;
        r0.<java.util.WeakHashMap$Entry: java.util.WeakHashMap$Entry next> = r4;
        return;
    }

    public java.lang.Object getKey()
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.Object $r1, $r2;

        r0 := @this: java.util.WeakHashMap$Entry;
        $r1 = virtualinvoke r0.<java.util.WeakHashMap$Entry: java.lang.Object get()>();
        $r2 = staticinvoke <java.util.WeakHashMap: java.lang.Object unmaskNull(java.lang.Object)>($r1);
        return $r2;
    }

    public java.lang.Object getValue()
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.Object $r1;

        r0 := @this: java.util.WeakHashMap$Entry;
        $r1 = r0.<java.util.WeakHashMap$Entry: java.lang.Object value>;
        return $r1;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.Object r1, r2;

        r0 := @this: java.util.WeakHashMap$Entry;
        r1 := @parameter0: java.lang.Object;
        r2 = r0.<java.util.WeakHashMap$Entry: java.lang.Object value>;
        r0.<java.util.WeakHashMap$Entry: java.lang.Object value> = r1;
        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.Object r1, r3, r4, r5, r6;
        java.util.Map$Entry r2;
        boolean $z0, $z1, $z2;

        r0 := @this: java.util.WeakHashMap$Entry;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.util.Map$Entry;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        r2 = (java.util.Map$Entry) r1;
        r3 = virtualinvoke r0.<java.util.WeakHashMap$Entry: java.lang.Object getKey()>();
        r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();
        if r3 == r4 goto label1;

        if r3 == null goto label3;

        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r4);
        if $z1 == 0 goto label3;

     label1:
        r5 = virtualinvoke r0.<java.util.WeakHashMap$Entry: java.lang.Object getValue()>();
        r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();
        if r5 == r6 goto label2;

        if r5 == null goto label3;

        $z2 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>(r6);
        if $z2 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.Object r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: java.util.WeakHashMap$Entry;
        r1 = virtualinvoke r0.<java.util.WeakHashMap$Entry: java.lang.Object getKey()>();
        r2 = virtualinvoke r0.<java.util.WeakHashMap$Entry: java.lang.Object getValue()>();
        if r1 != null goto label0;

        $i0 = 0;
        goto label1;

     label0:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label1:
        if r2 != null goto label2;

        $i1 = 0;
        goto label3;

     label2:
        $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

     label3:
        $i2 = $i0 ^ $i1;
        return $i2;
    }

    public java.lang.String toString()
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.Object $r2, $r5;
        java.lang.String $r7;

        r0 := @this: java.util.WeakHashMap$Entry;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke r0.<java.util.WeakHashMap$Entry: java.lang.Object getKey()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r5 = virtualinvoke r0.<java.util.WeakHashMap$Entry: java.lang.Object getValue()>();
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }
}
