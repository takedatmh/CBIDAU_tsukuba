class java.lang.ProcessEnvironment$StringValues$1 extends java.lang.Object implements java.util.Iterator
{
    java.util.Iterator i;
    final java.lang.ProcessEnvironment$StringValues this$0;

    void <init>(java.lang.ProcessEnvironment$StringValues)
    {
        java.lang.ProcessEnvironment$StringValues$1 r0;
        java.lang.ProcessEnvironment$StringValues r1, $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;

        r0 := @this: java.lang.ProcessEnvironment$StringValues$1;
        r1 := @parameter0: java.lang.ProcessEnvironment$StringValues;
        r0.<java.lang.ProcessEnvironment$StringValues$1: java.lang.ProcessEnvironment$StringValues this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = r0.<java.lang.ProcessEnvironment$StringValues$1: java.lang.ProcessEnvironment$StringValues this$0>;
        $r3 = staticinvoke <java.lang.ProcessEnvironment$StringValues: java.util.Collection access$700(java.lang.ProcessEnvironment$StringValues)>($r2);
        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();
        r0.<java.lang.ProcessEnvironment$StringValues$1: java.util.Iterator i> = $r4;
        return;
    }

    public boolean hasNext()
    {
        java.lang.ProcessEnvironment$StringValues$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: java.lang.ProcessEnvironment$StringValues$1;
        $r1 = r0.<java.lang.ProcessEnvironment$StringValues$1: java.util.Iterator i>;
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();
        return $z0;
    }

    public java.lang.String next()
    {
        java.lang.ProcessEnvironment$StringValues$1 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        java.lang.ProcessEnvironment$Value $r3;
        java.lang.String $r4;

        r0 := @this: java.lang.ProcessEnvironment$StringValues$1;
        $r1 = r0.<java.lang.ProcessEnvironment$StringValues$1: java.util.Iterator i>;
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();
        $r3 = (java.lang.ProcessEnvironment$Value) $r2;
        $r4 = virtualinvoke $r3.<java.lang.ProcessEnvironment$Value: java.lang.String toString()>();
        return $r4;
    }

    public void remove()
    {
        java.lang.ProcessEnvironment$StringValues$1 r0;
        java.util.Iterator $r1;

        r0 := @this: java.lang.ProcessEnvironment$StringValues$1;
        $r1 = r0.<java.lang.ProcessEnvironment$StringValues$1: java.util.Iterator i>;
        interfaceinvoke $r1.<java.util.Iterator: void remove()>();
        return;
    }

    public volatile java.lang.Object next()
    {
        java.lang.ProcessEnvironment$StringValues$1 r0;
        java.lang.String $r1;

        r0 := @this: java.lang.ProcessEnvironment$StringValues$1;
        $r1 = virtualinvoke r0.<java.lang.ProcessEnvironment$StringValues$1: java.lang.String next()>();
        return $r1;
    }
}
