public class org.apache.catalina.mbeans.MBeanFactory extends java.lang.Object
{
    private static final org.apache.juli.logging.Log log;
    private static javax.management.MBeanServer mserver;
    private java.lang.Object container;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        javax.management.MBeanServer $r1;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/mbeans/MBeanFactory");
        <org.apache.catalina.mbeans.MBeanFactory: org.apache.juli.logging.Log log> = $r0;
        $r1 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.MBeanServer createServer()>();
        <org.apache.catalina.mbeans.MBeanFactory: javax.management.MBeanServer mserver> = $r1;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.mbeans.MBeanFactory r0;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void setContainer(java.lang.Object)
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.Object r1;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.Object;
        r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.Object container> = r1;
        return;
    }

    public java.lang.String findObjectName(java.lang.String)
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.catalina.core.StandardContext");
        if $z0 == 0 goto label0;

        return "StandardContext";

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.catalina.core.StandardEngine");
        if $z1 == 0 goto label1;

        return "Engine";

     label1:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.catalina.core.StandardHost");
        if $z2 == 0 goto label2;

        return "Host";

     label2:
        return null;
    }

    private final java.lang.String getPathStr(java.lang.String)
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("/");
        if $z0 == 0 goto label1;

     label0:
        return "";

     label1:
        return r1;
    }

    private org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        javax.management.ObjectName r1;
        java.lang.String r2, r3, r6, r7, r8, r10, r13, r16;
        org.apache.catalina.Service r4;
        org.apache.catalina.core.StandardEngine r5;
        int i0;
        org.apache.catalina.Host r9;
        org.apache.catalina.core.StandardContext r11;
        org.apache.catalina.Container $r12, $r14, $r15, $r17;
        boolean $z0, $z1, $z2;
        org.apache.catalina.core.StandardHost r18;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: javax.management.ObjectName;
        r2 = virtualinvoke r1.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("type");
        r3 = virtualinvoke r1.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("j2eeType");
        r4 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.Service getService(javax.management.ObjectName)>(r1);
        $r12 = interfaceinvoke r4.<org.apache.catalina.Service: org.apache.catalina.Container getContainer()>();
        r5 = (org.apache.catalina.core.StandardEngine) $r12;
        if r3 == null goto label0;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("WebModule");
        if $z0 == 0 goto label0;

        r6 = virtualinvoke r1.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("name");
        r13 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(2);
        i0 = virtualinvoke r13.<java.lang.String: int indexOf(int)>(47);
        r7 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        r8 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>(i0);
        $r14 = virtualinvoke r5.<org.apache.catalina.core.StandardEngine: org.apache.catalina.Container findChild(java.lang.String)>(r7);
        r9 = (org.apache.catalina.Host) $r14;
        r10 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.String getPathStr(java.lang.String)>(r8);
        $r15 = interfaceinvoke r9.<org.apache.catalina.Host: org.apache.catalina.Container findChild(java.lang.String)>(r10);
        r11 = (org.apache.catalina.core.StandardContext) $r15;
        return r11;

     label0:
        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Engine");
        if $z1 == 0 goto label1;

        return r5;

     label1:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Host");
        if $z2 == 0 goto label2;

        r16 = virtualinvoke r1.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("host");
        $r17 = virtualinvoke r5.<org.apache.catalina.core.StandardEngine: org.apache.catalina.Container findChild(java.lang.String)>(r16);
        r18 = (org.apache.catalina.core.StandardHost) $r17;
        return r18;

     label2:
        return null;
    }

    private org.apache.catalina.core.ContainerBase getParentContainerFromChild(javax.management.ObjectName) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        javax.management.ObjectName r1;
        java.lang.String r2, r3, r12;
        org.apache.catalina.Service r4;
        org.apache.catalina.core.StandardEngine r5;
        org.apache.catalina.core.StandardHost r6, r11;
        org.apache.catalina.core.StandardContext r7;
        org.apache.catalina.Container $r8, $r9, $r10, $r13;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: javax.management.ObjectName;
        r2 = virtualinvoke r1.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("host");
        r3 = virtualinvoke r1.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("path");
        r4 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.Service getService(javax.management.ObjectName)>(r1);
        $r8 = interfaceinvoke r4.<org.apache.catalina.Service: org.apache.catalina.Container getContainer()>();
        r5 = (org.apache.catalina.core.StandardEngine) $r8;
        if r2 != null goto label0;

        return r5;

     label0:
        if r3 != null goto label1;

        $r9 = virtualinvoke r5.<org.apache.catalina.core.StandardEngine: org.apache.catalina.Container findChild(java.lang.String)>(r2);
        r6 = (org.apache.catalina.core.StandardHost) $r9;
        return r6;

     label1:
        $r10 = virtualinvoke r5.<org.apache.catalina.core.StandardEngine: org.apache.catalina.Container findChild(java.lang.String)>(r2);
        r11 = (org.apache.catalina.core.StandardHost) $r10;
        r12 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.String getPathStr(java.lang.String)>(r3);
        $r13 = virtualinvoke r11.<org.apache.catalina.core.StandardHost: org.apache.catalina.Container findChild(java.lang.String)>(r12);
        r7 = (org.apache.catalina.core.StandardContext) $r13;
        return r7;
    }

    private org.apache.catalina.Service getService(javax.management.ObjectName) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        javax.management.ObjectName r1, $r12, $r14;
        org.apache.catalina.core.StandardService r2;
        java.lang.String r3, $r13, $r15;
        org.apache.catalina.Service[] r4;
        int i0, $i1;
        java.lang.Object $r5, $r6, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;
        org.apache.catalina.Service $r7, $r11;
        org.apache.catalina.Server $r10;
        java.lang.Exception $r16;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: javax.management.ObjectName;
        $r5 = r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.Object container>;
        $z0 = $r5 instanceof org.apache.catalina.Service;
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.Object container>;
        $r7 = (org.apache.catalina.Service) $r6;
        return $r7;

     label0:
        r2 = null;
        r3 = virtualinvoke r1.<javax.management.ObjectName: java.lang.String getDomain()>();
        $r8 = r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.Object container>;
        $z1 = $r8 instanceof org.apache.catalina.Server;
        if $z1 == 0 goto label4;

        $r9 = r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.Object container>;
        $r10 = (org.apache.catalina.Server) $r9;
        r4 = interfaceinvoke $r10.<org.apache.catalina.Server: org.apache.catalina.Service[] findServices()>();
        i0 = 0;
        goto label3;

     label1:
        $r11 = r4[i0];
        r2 = (org.apache.catalina.core.StandardService) $r11;
        $r12 = virtualinvoke r2.<org.apache.catalina.core.StandardService: javax.management.ObjectName getObjectName()>();
        $r13 = virtualinvoke $r12.<javax.management.ObjectName: java.lang.String getDomain()>();
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r13);
        if $z2 == 0 goto label2;

        goto label4;

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = lengthof r4;
        if i0 < $i1 goto label1;

     label4:
        if r2 == null goto label5;

        $r14 = virtualinvoke r2.<org.apache.catalina.core.StandardService: javax.management.ObjectName getObjectName()>();
        $r15 = virtualinvoke $r14.<javax.management.ObjectName: java.lang.String getDomain()>();
        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z3 != 0 goto label6;

     label5:
        $r16 = new java.lang.Exception;
        specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.String)>("Service with the domain is not found");
        throw $r16;

     label6:
        return r2;
    }

    public java.lang.String createAccessLoggerValve(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, $r9;
        javax.management.ObjectName $r2, r3, r6;
        org.apache.catalina.valves.AccessLogValve r4, $r7;
        org.apache.catalina.core.ContainerBase r5;
        org.apache.catalina.Pipeline $r8;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.management.ObjectName;
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        $r7 = new org.apache.catalina.valves.AccessLogValve;
        specialinvoke $r7.<org.apache.catalina.valves.AccessLogValve: void <init>()>();
        r4 = $r7;
        r5 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r3);
        $r8 = virtualinvoke r5.<org.apache.catalina.core.ContainerBase: org.apache.catalina.Pipeline getPipeline()>();
        interfaceinvoke $r8.<org.apache.catalina.Pipeline: void addValve(org.apache.catalina.Valve)>(r4);
        r6 = virtualinvoke r4.<org.apache.catalina.valves.AccessLogValve: javax.management.ObjectName getObjectName()>();
        $r9 = virtualinvoke r6.<javax.management.ObjectName: java.lang.String toString()>();
        return $r9;
    }

    public java.lang.String createAjpConnector(java.lang.String, java.lang.String, int) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, $r3;
        int i0;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        $r3 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)>(r1, r2, i0, 1, 0);
        return $r3;
    }

    public java.lang.String createDataSourceRealm(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, $r14;
        org.apache.catalina.realm.DataSourceRealm $r8, r9;
        javax.management.ObjectName r10, r12, $r13;
        org.apache.catalina.core.ContainerBase r11;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        r6 := @parameter5: java.lang.String;
        r7 := @parameter6: java.lang.String;
        $r8 = new org.apache.catalina.realm.DataSourceRealm;
        specialinvoke $r8.<org.apache.catalina.realm.DataSourceRealm: void <init>()>();
        r9 = $r8;
        virtualinvoke r9.<org.apache.catalina.realm.DataSourceRealm: void setDataSourceName(java.lang.String)>(r2);
        virtualinvoke r9.<org.apache.catalina.realm.DataSourceRealm: void setRoleNameCol(java.lang.String)>(r3);
        virtualinvoke r9.<org.apache.catalina.realm.DataSourceRealm: void setUserCredCol(java.lang.String)>(r4);
        virtualinvoke r9.<org.apache.catalina.realm.DataSourceRealm: void setUserNameCol(java.lang.String)>(r5);
        virtualinvoke r9.<org.apache.catalina.realm.DataSourceRealm: void setUserRoleTable(java.lang.String)>(r6);
        virtualinvoke r9.<org.apache.catalina.realm.DataSourceRealm: void setUserTable(java.lang.String)>(r7);
        $r13 = new javax.management.ObjectName;
        specialinvoke $r13.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r10 = $r13;
        r11 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r10);
        virtualinvoke r11.<org.apache.catalina.core.ContainerBase: void setRealm(org.apache.catalina.Realm)>(r9);
        r12 = virtualinvoke r9.<org.apache.catalina.realm.DataSourceRealm: javax.management.ObjectName getObjectName()>();
        if r12 == null goto label0;

        $r14 = virtualinvoke r12.<javax.management.ObjectName: java.lang.String toString()>();
        return $r14;

     label0:
        return null;
    }

    public java.lang.String createHttpConnector(java.lang.String, java.lang.String, int) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, $r3;
        int i0;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        $r3 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)>(r1, r2, i0, 0, 0);
        return $r3;
    }

    private java.lang.String createConnector(java.lang.String, java.lang.String, int, boolean, boolean) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, $r9, $r11, $r13;
        int i0, $i1;
        boolean z0, z1;
        org.apache.catalina.connector.Connector $r3, r4;
        javax.management.ObjectName r5, r7, $r12;
        org.apache.catalina.Service r6;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        $r3 = new org.apache.catalina.connector.Connector;
        specialinvoke $r3.<org.apache.catalina.connector.Connector: void <init>()>();
        r4 = $r3;
        if r2 == null goto label0;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i1 <= 0 goto label0;

        virtualinvoke r4.<org.apache.catalina.connector.Connector: boolean setProperty(java.lang.String,java.lang.String)>("address", r2);

     label0:
        virtualinvoke r4.<org.apache.catalina.connector.Connector: void setPort(int)>(i0);
        if z0 == 0 goto label1;

        $r9 = "AJP/1.3";
        goto label2;

     label1:
        $r9 = "HTTP/1.1";

     label2:
        virtualinvoke r4.<org.apache.catalina.connector.Connector: void setProtocol(java.lang.String)>($r9);
        virtualinvoke r4.<org.apache.catalina.connector.Connector: void setSecure(boolean)>(z1);
        if z1 == 0 goto label3;

        $r11 = "https";
        goto label4;

     label3:
        $r11 = "http";

     label4:
        virtualinvoke r4.<org.apache.catalina.connector.Connector: void setScheme(java.lang.String)>($r11);
        $r12 = new javax.management.ObjectName;
        specialinvoke $r12.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r5 = $r12;
        r6 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.Service getService(javax.management.ObjectName)>(r5);
        interfaceinvoke r6.<org.apache.catalina.Service: void addConnector(org.apache.catalina.connector.Connector)>(r4);
        r7 = virtualinvoke r4.<org.apache.catalina.connector.Connector: javax.management.ObjectName getObjectName()>();
        $r13 = virtualinvoke r7.<javax.management.ObjectName: java.lang.String toString()>();
        return $r13;
    }

    public java.lang.String createHttpsConnector(java.lang.String, java.lang.String, int) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, $r3;
        int i0;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        $r3 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)>(r1, r2, i0, 0, 1);
        return $r3;
    }

    public java.lang.String createJDBCRealm(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, r3, r4, r5, $r12;
        org.apache.catalina.realm.JDBCRealm $r6, r7;
        javax.management.ObjectName r8, r10, $r11;
        org.apache.catalina.core.ContainerBase r9;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        $r6 = new org.apache.catalina.realm.JDBCRealm;
        specialinvoke $r6.<org.apache.catalina.realm.JDBCRealm: void <init>()>();
        r7 = $r6;
        virtualinvoke r7.<org.apache.catalina.realm.JDBCRealm: void setDriverName(java.lang.String)>(r2);
        virtualinvoke r7.<org.apache.catalina.realm.JDBCRealm: void setConnectionName(java.lang.String)>(r3);
        virtualinvoke r7.<org.apache.catalina.realm.JDBCRealm: void setConnectionPassword(java.lang.String)>(r4);
        virtualinvoke r7.<org.apache.catalina.realm.JDBCRealm: void setConnectionURL(java.lang.String)>(r5);
        $r11 = new javax.management.ObjectName;
        specialinvoke $r11.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r8 = $r11;
        r9 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r8);
        virtualinvoke r9.<org.apache.catalina.core.ContainerBase: void setRealm(org.apache.catalina.Realm)>(r7);
        r10 = virtualinvoke r7.<org.apache.catalina.realm.JDBCRealm: javax.management.ObjectName getObjectName()>();
        if r10 == null goto label0;

        $r12 = virtualinvoke r10.<javax.management.ObjectName: java.lang.String toString()>();
        return $r12;

     label0:
        return null;
    }

    public java.lang.String createJNDIRealm(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, $r8;
        org.apache.catalina.realm.JNDIRealm $r2, r3;
        javax.management.ObjectName r4, r6, $r7;
        org.apache.catalina.core.ContainerBase r5;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.catalina.realm.JNDIRealm;
        specialinvoke $r2.<org.apache.catalina.realm.JNDIRealm: void <init>()>();
        r3 = $r2;
        $r7 = new javax.management.ObjectName;
        specialinvoke $r7.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r4 = $r7;
        r5 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r4);
        virtualinvoke r5.<org.apache.catalina.core.ContainerBase: void setRealm(org.apache.catalina.Realm)>(r3);
        r6 = virtualinvoke r3.<org.apache.catalina.realm.JNDIRealm: javax.management.ObjectName getObjectName()>();
        if r6 == null goto label0;

        $r8 = virtualinvoke r6.<javax.management.ObjectName: java.lang.String toString()>();
        return $r8;

     label0:
        return null;
    }

    public java.lang.String createMemoryRealm(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, $r8;
        org.apache.catalina.realm.MemoryRealm $r2, r3;
        javax.management.ObjectName r4, r6, $r7;
        org.apache.catalina.core.ContainerBase r5;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.catalina.realm.MemoryRealm;
        specialinvoke $r2.<org.apache.catalina.realm.MemoryRealm: void <init>()>();
        r3 = $r2;
        $r7 = new javax.management.ObjectName;
        specialinvoke $r7.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r4 = $r7;
        r5 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r4);
        virtualinvoke r5.<org.apache.catalina.core.ContainerBase: void setRealm(org.apache.catalina.Realm)>(r3);
        r6 = virtualinvoke r3.<org.apache.catalina.realm.MemoryRealm: javax.management.ObjectName getObjectName()>();
        if r6 == null goto label0;

        $r8 = virtualinvoke r6.<javax.management.ObjectName: java.lang.String toString()>();
        return $r8;

     label0:
        return null;
    }

    public java.lang.String createRemoteAddrValve(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, $r9;
        org.apache.catalina.valves.RemoteAddrValve $r2, r3;
        javax.management.ObjectName r4, r6, $r7;
        org.apache.catalina.core.ContainerBase r5;
        org.apache.catalina.Pipeline $r8;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.catalina.valves.RemoteAddrValve;
        specialinvoke $r2.<org.apache.catalina.valves.RemoteAddrValve: void <init>()>();
        r3 = $r2;
        $r7 = new javax.management.ObjectName;
        specialinvoke $r7.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r4 = $r7;
        r5 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r4);
        $r8 = virtualinvoke r5.<org.apache.catalina.core.ContainerBase: org.apache.catalina.Pipeline getPipeline()>();
        interfaceinvoke $r8.<org.apache.catalina.Pipeline: void addValve(org.apache.catalina.Valve)>(r3);
        r6 = virtualinvoke r3.<org.apache.catalina.valves.RemoteAddrValve: javax.management.ObjectName getObjectName()>();
        $r9 = virtualinvoke r6.<javax.management.ObjectName: java.lang.String toString()>();
        return $r9;
    }

    public java.lang.String createRemoteHostValve(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, $r9;
        org.apache.catalina.valves.RemoteHostValve $r2, r3;
        javax.management.ObjectName r4, r6, $r7;
        org.apache.catalina.core.ContainerBase r5;
        org.apache.catalina.Pipeline $r8;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.catalina.valves.RemoteHostValve;
        specialinvoke $r2.<org.apache.catalina.valves.RemoteHostValve: void <init>()>();
        r3 = $r2;
        $r7 = new javax.management.ObjectName;
        specialinvoke $r7.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r4 = $r7;
        r5 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r4);
        $r8 = virtualinvoke r5.<org.apache.catalina.core.ContainerBase: org.apache.catalina.Pipeline getPipeline()>();
        interfaceinvoke $r8.<org.apache.catalina.Pipeline: void addValve(org.apache.catalina.Valve)>(r3);
        r6 = virtualinvoke r3.<org.apache.catalina.valves.RemoteHostValve: javax.management.ObjectName getObjectName()>();
        $r9 = virtualinvoke r6.<javax.management.ObjectName: java.lang.String toString()>();
        return $r9;
    }

    public java.lang.String createSingleSignOn(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, $r9;
        org.apache.catalina.authenticator.SingleSignOn $r2, r3;
        javax.management.ObjectName r4, r6, $r7;
        org.apache.catalina.core.ContainerBase r5;
        org.apache.catalina.Pipeline $r8;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.catalina.authenticator.SingleSignOn;
        specialinvoke $r2.<org.apache.catalina.authenticator.SingleSignOn: void <init>()>();
        r3 = $r2;
        $r7 = new javax.management.ObjectName;
        specialinvoke $r7.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r4 = $r7;
        r5 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r4);
        $r8 = virtualinvoke r5.<org.apache.catalina.core.ContainerBase: org.apache.catalina.Pipeline getPipeline()>();
        interfaceinvoke $r8.<org.apache.catalina.Pipeline: void addValve(org.apache.catalina.Valve)>(r3);
        r6 = virtualinvoke r3.<org.apache.catalina.authenticator.SingleSignOn: javax.management.ObjectName getObjectName()>();
        $r9 = virtualinvoke r6.<javax.management.ObjectName: java.lang.String toString()>();
        return $r9;
    }

    public java.lang.String createStandardContext(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, r3, $r4;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = virtualinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>(r1, r2, r3, 0, 0, 0, 0);
        return $r4;
    }

    public java.lang.String createStandardContext(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, r3, r9, r10, r11, r13, $r18, $r19, $r21, $r23, $r34, $r36, $r49, $r51, $r55, $r59;
        boolean z0, z1, z2, z3, $z4, $z5;
        org.apache.catalina.core.StandardContext $r4, r5;
        org.apache.catalina.startup.ContextConfig r6, $r14;
        javax.management.ObjectName r7, r8, $r15, $r16, $r58;
        java.io.File r12, $r31, $r32;
        java.lang.StringBuilder $r17, $r20, $r22, $r33, $r35, $r48, $r50;
        javax.management.MBeanServer $r24, $r25, $r29, $r39, $r43;
        java.lang.Object[] $r26, $r40, $r44;
        java.lang.String[] $r27, $r41, $r45;
        java.lang.Object $r30;
        java.net.URI $r37;
        java.net.URL $r38;
        org.apache.juli.logging.Log $r47;
        org.apache.catalina.Service r52;
        org.apache.catalina.Container $r53, $r56;
        org.apache.catalina.Engine r54;
        org.apache.catalina.Host r57;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        z2 := @parameter5: boolean;
        z3 := @parameter6: boolean;
        $r4 = new org.apache.catalina.core.StandardContext;
        specialinvoke $r4.<org.apache.catalina.core.StandardContext: void <init>()>();
        r5 = $r4;
        r13 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.String getPathStr(java.lang.String)>(r2);
        virtualinvoke r5.<org.apache.catalina.core.StandardContext: void setPath(java.lang.String)>(r13);
        virtualinvoke r5.<org.apache.catalina.core.StandardContext: void setDocBase(java.lang.String)>(r3);
        virtualinvoke r5.<org.apache.catalina.core.StandardContext: void setXmlValidation(boolean)>(z0);
        virtualinvoke r5.<org.apache.catalina.core.StandardContext: void setXmlNamespaceAware(boolean)>(z1);
        virtualinvoke r5.<org.apache.catalina.core.StandardContext: void setTldValidation(boolean)>(z2);
        virtualinvoke r5.<org.apache.catalina.core.StandardContext: void setTldNamespaceAware(boolean)>(z3);
        $r14 = new org.apache.catalina.startup.ContextConfig;
        specialinvoke $r14.<org.apache.catalina.startup.ContextConfig: void <init>()>();
        r6 = $r14;
        virtualinvoke r5.<org.apache.catalina.core.StandardContext: void addLifecycleListener(org.apache.catalina.LifecycleListener)>(r6);
        $r15 = new javax.management.ObjectName;
        specialinvoke $r15.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r7 = $r15;
        $r16 = new javax.management.ObjectName;
        $r17 = new java.lang.StringBuilder;
        $r18 = virtualinvoke r7.<javax.management.ObjectName: java.lang.String getDomain()>();
        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r18);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>($r19);
        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Deployer,host=");
        $r21 = virtualinvoke r7.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("host");
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<javax.management.ObjectName: void <init>(java.lang.String)>($r23);
        r8 = $r16;
        $r24 = <org.apache.catalina.mbeans.MBeanFactory: javax.management.MBeanServer mserver>;
        $z4 = interfaceinvoke $r24.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r8);
        if $z4 == 0 goto label1;

        r9 = virtualinvoke r5.<org.apache.catalina.core.StandardContext: java.lang.String getName()>();
        $r25 = <org.apache.catalina.mbeans.MBeanFactory: javax.management.MBeanServer mserver>;
        $r26 = newarray (java.lang.Object)[1];
        $r26[0] = r9;
        $r27 = newarray (java.lang.String)[1];
        $r27[0] = "java.lang.String";
        interfaceinvoke $r25.<javax.management.MBeanServer: java.lang.Object invoke(javax.management.ObjectName,java.lang.String,java.lang.Object[],java.lang.String[])>(r8, "addServiced", $r26, $r27);
        $r29 = <org.apache.catalina.mbeans.MBeanFactory: javax.management.MBeanServer mserver>;
        $r30 = interfaceinvoke $r29.<javax.management.MBeanServer: java.lang.Object getAttribute(javax.management.ObjectName,java.lang.String)>(r8, "configBaseName");
        r10 = (java.lang.String) $r30;
        r11 = virtualinvoke r5.<org.apache.catalina.core.StandardContext: java.lang.String getBaseName()>();
        $r31 = new java.io.File;
        $r32 = new java.io.File;
        specialinvoke $r32.<java.io.File: void <init>(java.lang.String)>(r10);
        $r33 = new java.lang.StringBuilder;
        $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r11);
        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>($r34);
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r31.<java.io.File: void <init>(java.io.File,java.lang.String)>($r32, $r36);
        r12 = $r31;
        $z5 = virtualinvoke r12.<java.io.File: boolean isFile()>();
        if $z5 == 0 goto label0;

        $r37 = virtualinvoke r12.<java.io.File: java.net.URI toURI()>();
        $r38 = virtualinvoke $r37.<java.net.URI: java.net.URL toURL()>();
        virtualinvoke r5.<org.apache.catalina.core.StandardContext: void setConfigFile(java.net.URL)>($r38);

     label0:
        $r39 = <org.apache.catalina.mbeans.MBeanFactory: javax.management.MBeanServer mserver>;
        $r40 = newarray (java.lang.Object)[1];
        $r40[0] = r5;
        $r41 = newarray (java.lang.String)[1];
        $r41[0] = "org.apache.catalina.Context";
        interfaceinvoke $r39.<javax.management.MBeanServer: java.lang.Object invoke(javax.management.ObjectName,java.lang.String,java.lang.Object[],java.lang.String[])>(r8, "manageApp", $r40, $r41);
        $r43 = <org.apache.catalina.mbeans.MBeanFactory: javax.management.MBeanServer mserver>;
        $r44 = newarray (java.lang.Object)[1];
        $r44[0] = r9;
        $r45 = newarray (java.lang.String)[1];
        $r45[0] = "java.lang.String";
        interfaceinvoke $r43.<javax.management.MBeanServer: java.lang.Object invoke(javax.management.ObjectName,java.lang.String,java.lang.Object[],java.lang.String[])>(r8, "removeServiced", $r44, $r45);
        goto label2;

     label1:
        $r47 = <org.apache.catalina.mbeans.MBeanFactory: org.apache.juli.logging.Log log>;
        $r48 = new java.lang.StringBuilder;
        specialinvoke $r48.<java.lang.StringBuilder: void <init>(java.lang.String)>("Deployer not found for ");
        $r49 = virtualinvoke r7.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("host");
        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r47.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r51);
        r52 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.Service getService(javax.management.ObjectName)>(r7);
        $r53 = interfaceinvoke r52.<org.apache.catalina.Service: org.apache.catalina.Container getContainer()>();
        r54 = (org.apache.catalina.Engine) $r53;
        $r55 = virtualinvoke r7.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("host");
        $r56 = interfaceinvoke r54.<org.apache.catalina.Engine: org.apache.catalina.Container findChild(java.lang.String)>($r55);
        r57 = (org.apache.catalina.Host) $r56;
        interfaceinvoke r57.<org.apache.catalina.Host: void addChild(org.apache.catalina.Container)>(r5);

     label2:
        $r58 = virtualinvoke r5.<org.apache.catalina.core.StandardContext: javax.management.ObjectName getObjectName()>();
        $r59 = virtualinvoke $r58.<javax.management.ObjectName: java.lang.String toString()>();
        return $r59;
    }

    public java.lang.String createStandardHost(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, r3, $r14;
        boolean z0, z1, z2, z3;
        org.apache.catalina.core.StandardHost $r4, r5;
        org.apache.catalina.startup.HostConfig r6, $r10;
        javax.management.ObjectName r7, $r11, $r13;
        org.apache.catalina.Service r8;
        org.apache.catalina.Engine r9;
        org.apache.catalina.Container $r12;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        z2 := @parameter5: boolean;
        z3 := @parameter6: boolean;
        $r4 = new org.apache.catalina.core.StandardHost;
        specialinvoke $r4.<org.apache.catalina.core.StandardHost: void <init>()>();
        r5 = $r4;
        virtualinvoke r5.<org.apache.catalina.core.StandardHost: void setName(java.lang.String)>(r2);
        virtualinvoke r5.<org.apache.catalina.core.StandardHost: void setAppBase(java.lang.String)>(r3);
        virtualinvoke r5.<org.apache.catalina.core.StandardHost: void setAutoDeploy(boolean)>(z0);
        virtualinvoke r5.<org.apache.catalina.core.StandardHost: void setDeployOnStartup(boolean)>(z1);
        virtualinvoke r5.<org.apache.catalina.core.StandardHost: void setDeployXML(boolean)>(z2);
        virtualinvoke r5.<org.apache.catalina.core.StandardHost: void setUnpackWARs(boolean)>(z3);
        $r10 = new org.apache.catalina.startup.HostConfig;
        specialinvoke $r10.<org.apache.catalina.startup.HostConfig: void <init>()>();
        r6 = $r10;
        virtualinvoke r5.<org.apache.catalina.core.StandardHost: void addLifecycleListener(org.apache.catalina.LifecycleListener)>(r6);
        $r11 = new javax.management.ObjectName;
        specialinvoke $r11.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r7 = $r11;
        r8 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.Service getService(javax.management.ObjectName)>(r7);
        $r12 = interfaceinvoke r8.<org.apache.catalina.Service: org.apache.catalina.Container getContainer()>();
        r9 = (org.apache.catalina.Engine) $r12;
        interfaceinvoke r9.<org.apache.catalina.Engine: void addChild(org.apache.catalina.Container)>(r5);
        $r13 = virtualinvoke r5.<org.apache.catalina.core.StandardHost: javax.management.ObjectName getObjectName()>();
        $r14 = virtualinvoke $r13.<javax.management.ObjectName: java.lang.String toString()>();
        return $r14;
    }

    public java.lang.String createStandardServiceEngine(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, r3, $r13;
        org.apache.catalina.core.StandardEngine r4, $r8;
        org.apache.catalina.core.StandardService r5, $r9;
        java.lang.Object $r6, $r10;
        boolean $z0;
        java.lang.Exception $r7;
        org.apache.catalina.Server $r11;
        javax.management.ObjectName $r12;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r6 = r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.Object container>;
        $z0 = $r6 instanceof org.apache.catalina.Server;
        if $z0 != 0 goto label0;

        $r7 = new java.lang.Exception;
        specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>("Container not Server");
        throw $r7;

     label0:
        $r8 = new org.apache.catalina.core.StandardEngine;
        specialinvoke $r8.<org.apache.catalina.core.StandardEngine: void <init>()>();
        r4 = $r8;
        virtualinvoke r4.<org.apache.catalina.core.StandardEngine: void setDomain(java.lang.String)>(r1);
        virtualinvoke r4.<org.apache.catalina.core.StandardEngine: void setName(java.lang.String)>(r1);
        virtualinvoke r4.<org.apache.catalina.core.StandardEngine: void setDefaultHost(java.lang.String)>(r2);
        virtualinvoke r4.<org.apache.catalina.core.StandardEngine: void setBaseDir(java.lang.String)>(r3);
        $r9 = new org.apache.catalina.core.StandardService;
        specialinvoke $r9.<org.apache.catalina.core.StandardService: void <init>()>();
        r5 = $r9;
        interfaceinvoke r5.<org.apache.catalina.Service: void setContainer(org.apache.catalina.Container)>(r4);
        interfaceinvoke r5.<org.apache.catalina.Service: void setName(java.lang.String)>(r1);
        $r10 = r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.Object container>;
        $r11 = (org.apache.catalina.Server) $r10;
        interfaceinvoke $r11.<org.apache.catalina.Server: void addService(org.apache.catalina.Service)>(r5);
        $r12 = virtualinvoke r4.<org.apache.catalina.core.StandardEngine: javax.management.ObjectName getObjectName()>();
        $r13 = virtualinvoke $r12.<javax.management.ObjectName: java.lang.String toString()>();
        return $r13;
    }

    public java.lang.String createStandardManager(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, $r8;
        org.apache.catalina.session.StandardManager $r2, r3;
        javax.management.ObjectName r4, r6, $r7;
        org.apache.catalina.core.ContainerBase r5;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.catalina.session.StandardManager;
        specialinvoke $r2.<org.apache.catalina.session.StandardManager: void <init>()>();
        r3 = $r2;
        $r7 = new javax.management.ObjectName;
        specialinvoke $r7.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r4 = $r7;
        r5 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r4);
        if r5 == null goto label0;

        virtualinvoke r5.<org.apache.catalina.core.ContainerBase: void setManager(org.apache.catalina.Manager)>(r3);

     label0:
        r6 = virtualinvoke r3.<org.apache.catalina.session.StandardManager: javax.management.ObjectName getObjectName()>();
        if r6 == null goto label1;

        $r8 = virtualinvoke r6.<javax.management.ObjectName: java.lang.String toString()>();
        return $r8;

     label1:
        return null;
    }

    public java.lang.String createUserDatabaseRealm(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, $r9;
        org.apache.catalina.realm.UserDatabaseRealm $r3, r4;
        javax.management.ObjectName r5, r7, $r8;
        org.apache.catalina.core.ContainerBase r6;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.apache.catalina.realm.UserDatabaseRealm;
        specialinvoke $r3.<org.apache.catalina.realm.UserDatabaseRealm: void <init>()>();
        r4 = $r3;
        virtualinvoke r4.<org.apache.catalina.realm.UserDatabaseRealm: void setResourceName(java.lang.String)>(r2);
        $r8 = new javax.management.ObjectName;
        specialinvoke $r8.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r5 = $r8;
        r6 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r5);
        virtualinvoke r6.<org.apache.catalina.core.ContainerBase: void setRealm(org.apache.catalina.Realm)>(r4);
        r7 = virtualinvoke r4.<org.apache.catalina.realm.UserDatabaseRealm: javax.management.ObjectName getObjectName()>();
        if r7 == null goto label0;

        $r9 = virtualinvoke r7.<javax.management.ObjectName: java.lang.String toString()>();
        return $r9;

     label0:
        return null;
    }

    public java.lang.String createValve(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r2, $r13;
        javax.management.ObjectName $r3, r4, $r12;
        org.apache.catalina.core.ContainerBase r5;
        org.apache.catalina.Valve r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.Class $r8;
        java.lang.Object $r9;
        org.apache.catalina.Pipeline $r10;
        boolean $z0;
        org.apache.catalina.util.LifecycleMBeanBase $r11;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new javax.management.ObjectName;
        specialinvoke $r3.<javax.management.ObjectName: void <init>(java.lang.String)>(r2);
        r4 = $r3;
        r5 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r4);
        if r5 != null goto label0;

        $r7 = new java.lang.IllegalArgumentException;
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r7;

     label0:
        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Object newInstance()>();
        r6 = (org.apache.catalina.Valve) $r9;
        $r10 = interfaceinvoke r5.<org.apache.catalina.Container: org.apache.catalina.Pipeline getPipeline()>();
        interfaceinvoke $r10.<org.apache.catalina.Pipeline: void addValve(org.apache.catalina.Valve)>(r6);
        $z0 = r6 instanceof org.apache.catalina.util.LifecycleMBeanBase;
        if $z0 == 0 goto label1;

        $r11 = (org.apache.catalina.util.LifecycleMBeanBase) r6;
        $r12 = virtualinvoke $r11.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.ObjectName getObjectName()>();
        $r13 = virtualinvoke $r12.<javax.management.ObjectName: java.lang.String toString()>();
        return $r13;

     label1:
        return null;
    }

    public java.lang.String createWebappLoader(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, $r8, $r9;
        org.apache.catalina.loader.WebappLoader $r2, r3;
        javax.management.ObjectName r4, r6, $r7;
        org.apache.catalina.core.ContainerBase r5;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.catalina.loader.WebappLoader;
        specialinvoke $r2.<org.apache.catalina.loader.WebappLoader: void <init>()>();
        r3 = $r2;
        $r7 = new javax.management.ObjectName;
        specialinvoke $r7.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r4 = $r7;
        r5 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromParent(javax.management.ObjectName)>(r4);
        if r5 == null goto label0;

        virtualinvoke r5.<org.apache.catalina.core.ContainerBase: void setLoader(org.apache.catalina.Loader)>(r3);

     label0:
        $r8 = virtualinvoke r4.<javax.management.ObjectName: java.lang.String getDomain()>();
        r6 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Loader)>($r8, r3);
        $r9 = virtualinvoke r6.<javax.management.ObjectName: java.lang.String toString()>();
        return $r9;
    }

    public void removeConnector(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r5, r6, r8, r10;
        javax.management.ObjectName $r2, r3;
        org.apache.catalina.Service r4;
        org.apache.catalina.connector.Connector[] r7;
        int i0, $i1, $i2;
        java.lang.Object r9;
        org.apache.catalina.connector.Connector $r11, $r14, $r16, $r17, $r18, $r19;
        java.net.InetAddress $r12;
        java.lang.StringBuilder $r13, $r15;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.management.ObjectName;
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        r4 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.Service getService(javax.management.ObjectName)>(r3);
        r5 = virtualinvoke r3.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("port");
        r6 = virtualinvoke r3.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("address");
        if r6 == null goto label0;

        r6 = staticinvoke <javax.management.ObjectName: java.lang.String unquote(java.lang.String)>(r6);

     label0:
        r7 = interfaceinvoke r4.<org.apache.catalina.Service: org.apache.catalina.connector.Connector[] findConnectors()>();
        i0 = 0;
        goto label5;

     label1:
        r8 = null;
        $r11 = r7[i0];
        r9 = virtualinvoke $r11.<org.apache.catalina.connector.Connector: java.lang.Object getProperty(java.lang.String)>("address");
        if r9 == null goto label2;

        $r12 = (java.net.InetAddress) r9;
        r8 = virtualinvoke $r12.<java.net.InetAddress: java.lang.String getHostAddress()>();

     label2:
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = r7[i0];
        $i1 = virtualinvoke $r14.<org.apache.catalina.connector.Connector: int getPort()>();
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        r10 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        if r6 != null goto label3;

        if r8 != null goto label4;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r10);
        if $z0 == 0 goto label4;

        $r16 = r7[i0];
        interfaceinvoke r4.<org.apache.catalina.Service: void removeConnector(org.apache.catalina.connector.Connector)>($r16);
        $r17 = r7[i0];
        virtualinvoke $r17.<org.apache.catalina.connector.Connector: void destroy()>();
        goto label6;

     label3:
        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r10);
        if $z2 == 0 goto label4;

        $r18 = r7[i0];
        interfaceinvoke r4.<org.apache.catalina.Service: void removeConnector(org.apache.catalina.connector.Connector)>($r18);
        $r19 = r7[i0];
        virtualinvoke $r19.<org.apache.catalina.connector.Connector: void destroy()>();
        goto label6;

     label4:
        i0 = i0 + 1;

     label5:
        $i2 = lengthof r7;
        if i0 < $i2 goto label1;

     label6:
        return;
    }

    public void removeContext(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r4, r7, r8, r9, r11, r17, $r20, $r23, $r40, $r47, $r50;
        javax.management.ObjectName $r2, r3, r10, $r18;
        org.apache.catalina.core.StandardService r5;
        org.apache.catalina.Engine r6;
        int i0;
        org.apache.catalina.Host r12;
        org.apache.catalina.Context r13;
        java.lang.Exception r14, $r44;
        org.apache.catalina.Service $r15;
        org.apache.catalina.Container $r16, $r41, $r42;
        java.lang.StringBuilder $r19, $r21, $r22, $r38, $r39, $r46, $r48, $r49;
        javax.management.MBeanServer $r24, $r25, $r29, $r33;
        boolean $z0, $z1;
        java.lang.Object[] $r26, $r30, $r34;
        java.lang.String[] $r27, $r31, $r35;
        org.apache.juli.logging.Log $r37, $r45;
        org.apache.catalina.core.StandardContext $r43;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.management.ObjectName;
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        r4 = virtualinvoke r3.<javax.management.ObjectName: java.lang.String getDomain()>();
        $r15 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.Service getService(javax.management.ObjectName)>(r3);
        r5 = (org.apache.catalina.core.StandardService) $r15;
        $r16 = virtualinvoke r5.<org.apache.catalina.core.StandardService: org.apache.catalina.Container getContainer()>();
        r6 = (org.apache.catalina.Engine) $r16;
        r7 = virtualinvoke r3.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("name");
        r17 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(2);
        i0 = virtualinvoke r17.<java.lang.String: int indexOf(int)>(47);
        r8 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        r9 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>(i0);
        $r18 = new javax.management.ObjectName;
        $r19 = new java.lang.StringBuilder;
        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r20);
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=Deployer,host=");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r18.<javax.management.ObjectName: void <init>(java.lang.String)>($r23);
        r10 = $r18;
        r11 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.String getPathStr(java.lang.String)>(r9);
        $r24 = <org.apache.catalina.mbeans.MBeanFactory: javax.management.MBeanServer mserver>;
        $z0 = interfaceinvoke $r24.<javax.management.MBeanServer: boolean isRegistered(javax.management.ObjectName)>(r10);
        if $z0 == 0 goto label0;

        $r25 = <org.apache.catalina.mbeans.MBeanFactory: javax.management.MBeanServer mserver>;
        $r26 = newarray (java.lang.Object)[1];
        $r26[0] = r11;
        $r27 = newarray (java.lang.String)[1];
        $r27[0] = "java.lang.String";
        interfaceinvoke $r25.<javax.management.MBeanServer: java.lang.Object invoke(javax.management.ObjectName,java.lang.String,java.lang.Object[],java.lang.String[])>(r10, "addServiced", $r26, $r27);
        $r29 = <org.apache.catalina.mbeans.MBeanFactory: javax.management.MBeanServer mserver>;
        $r30 = newarray (java.lang.Object)[1];
        $r30[0] = r11;
        $r31 = newarray (java.lang.String)[1];
        $r31[0] = "java.lang.String";
        interfaceinvoke $r29.<javax.management.MBeanServer: java.lang.Object invoke(javax.management.ObjectName,java.lang.String,java.lang.Object[],java.lang.String[])>(r10, "unmanageApp", $r30, $r31);
        $r33 = <org.apache.catalina.mbeans.MBeanFactory: javax.management.MBeanServer mserver>;
        $r34 = newarray (java.lang.Object)[1];
        $r34[0] = r11;
        $r35 = newarray (java.lang.String)[1];
        $r35[0] = "java.lang.String";
        interfaceinvoke $r33.<javax.management.MBeanServer: java.lang.Object invoke(javax.management.ObjectName,java.lang.String,java.lang.Object[],java.lang.String[])>(r10, "removeServiced", $r34, $r35);
        goto label4;

     label0:
        $r37 = <org.apache.catalina.mbeans.MBeanFactory: org.apache.juli.logging.Log log>;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("Deployer not found for ");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r37.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r40);
        $r41 = interfaceinvoke r6.<org.apache.catalina.Engine: org.apache.catalina.Container findChild(java.lang.String)>(r8);
        r12 = (org.apache.catalina.Host) $r41;
        $r42 = interfaceinvoke r12.<org.apache.catalina.Host: org.apache.catalina.Container findChild(java.lang.String)>(r11);
        r13 = (org.apache.catalina.Context) $r42;
        interfaceinvoke r12.<org.apache.catalina.Host: void removeChild(org.apache.catalina.Container)>(r13);
        $z1 = r13 instanceof org.apache.catalina.core.StandardContext;
        if $z1 == 0 goto label4;

     label1:
        $r43 = (org.apache.catalina.core.StandardContext) r13;
        virtualinvoke $r43.<org.apache.catalina.core.StandardContext: void destroy()>();

     label2:
        goto label4;

     label3:
        $r44 := @caughtexception;
        r14 = $r44;
        $r45 = <org.apache.catalina.mbeans.MBeanFactory: org.apache.juli.logging.Log log>;
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error during context [");
        $r47 = interfaceinvoke r13.<org.apache.catalina.Context: java.lang.String getName()>();
        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] destroy ");
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r45.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r50, r14);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void removeHost(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1, r4;
        javax.management.ObjectName $r2, r3;
        org.apache.catalina.Service r5;
        org.apache.catalina.Engine r6;
        org.apache.catalina.Host r7;
        org.apache.catalina.Container $r8, $r9;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.management.ObjectName;
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        r4 = virtualinvoke r3.<javax.management.ObjectName: java.lang.String getKeyProperty(java.lang.String)>("host");
        r5 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.Service getService(javax.management.ObjectName)>(r3);
        $r8 = interfaceinvoke r5.<org.apache.catalina.Service: org.apache.catalina.Container getContainer()>();
        r6 = (org.apache.catalina.Engine) $r8;
        $r9 = interfaceinvoke r6.<org.apache.catalina.Engine: org.apache.catalina.Container findChild(java.lang.String)>(r4);
        r7 = (org.apache.catalina.Host) $r9;
        if r7 == null goto label0;

        interfaceinvoke r6.<org.apache.catalina.Engine: void removeChild(org.apache.catalina.Container)>(r7);

     label0:
        return;
    }

    public void removeLoader(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1;
        javax.management.ObjectName $r2, r3;
        org.apache.catalina.core.ContainerBase r4;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.management.ObjectName;
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        r4 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromChild(javax.management.ObjectName)>(r3);
        virtualinvoke r4.<org.apache.catalina.core.ContainerBase: void setLoader(org.apache.catalina.Loader)>(null);
        return;
    }

    public void removeManager(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1;
        javax.management.ObjectName $r2, r3;
        org.apache.catalina.core.ContainerBase r4;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.management.ObjectName;
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        r4 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromChild(javax.management.ObjectName)>(r3);
        virtualinvoke r4.<org.apache.catalina.core.ContainerBase: void setManager(org.apache.catalina.Manager)>(null);
        return;
    }

    public void removeRealm(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1;
        javax.management.ObjectName $r2, r3;
        org.apache.catalina.core.ContainerBase r4;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.management.ObjectName;
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        r4 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromChild(javax.management.ObjectName)>(r3);
        virtualinvoke r4.<org.apache.catalina.core.ContainerBase: void setRealm(org.apache.catalina.Realm)>(null);
        return;
    }

    public void removeService(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1;
        javax.management.ObjectName r2, $r6;
        org.apache.catalina.Service r3;
        java.lang.Object $r4, $r7;
        boolean $z0;
        java.lang.Exception $r5;
        org.apache.catalina.Server $r8;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.Object container>;
        $z0 = $r4 instanceof org.apache.catalina.Server;
        if $z0 != 0 goto label0;

        $r5 = new java.lang.Exception;
        specialinvoke $r5.<java.lang.Exception: void <init>()>();
        throw $r5;

     label0:
        $r6 = new javax.management.ObjectName;
        specialinvoke $r6.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r2 = $r6;
        r3 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.Service getService(javax.management.ObjectName)>(r2);
        $r7 = r0.<org.apache.catalina.mbeans.MBeanFactory: java.lang.Object container>;
        $r8 = (org.apache.catalina.Server) $r7;
        interfaceinvoke $r8.<org.apache.catalina.Server: void removeService(org.apache.catalina.Service)>(r3);
        return;
    }

    public void removeValve(java.lang.String) throws java.lang.Exception
    {
        org.apache.catalina.mbeans.MBeanFactory r0;
        java.lang.String r1;
        javax.management.ObjectName $r2, r3, r6;
        org.apache.catalina.core.ContainerBase r4;
        org.apache.catalina.Valve[] r5;
        int i0, $i1;
        org.apache.catalina.Pipeline $r7, $r10;
        org.apache.catalina.Valve $r8, $r11;
        org.apache.catalina.valves.ValveBase $r9;
        boolean $z0;

        r0 := @this: org.apache.catalina.mbeans.MBeanFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.management.ObjectName;
        specialinvoke $r2.<javax.management.ObjectName: void <init>(java.lang.String)>(r1);
        r3 = $r2;
        r4 = specialinvoke r0.<org.apache.catalina.mbeans.MBeanFactory: org.apache.catalina.core.ContainerBase getParentContainerFromChild(javax.management.ObjectName)>(r3);
        $r7 = virtualinvoke r4.<org.apache.catalina.core.ContainerBase: org.apache.catalina.Pipeline getPipeline()>();
        r5 = interfaceinvoke $r7.<org.apache.catalina.Pipeline: org.apache.catalina.Valve[] getValves()>();
        i0 = 0;
        goto label2;

     label0:
        $r8 = r5[i0];
        $r9 = (org.apache.catalina.valves.ValveBase) $r8;
        r6 = virtualinvoke $r9.<org.apache.catalina.valves.ValveBase: javax.management.ObjectName getObjectName()>();
        $z0 = virtualinvoke r6.<javax.management.ObjectName: boolean equals(java.lang.Object)>(r3);
        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r4.<org.apache.catalina.core.ContainerBase: org.apache.catalina.Pipeline getPipeline()>();
        $r11 = r5[i0];
        interfaceinvoke $r10.<org.apache.catalina.Pipeline: void removeValve(org.apache.catalina.Valve)>($r11);

     label1:
        i0 = i0 + 1;

     label2:
        $i1 = lengthof r5;
        if i0 < $i1 goto label0;

        return;
    }
}
