public final class sun.security.krb5.internal.crypto.ArcFourHmacEType extends sun.security.krb5.internal.crypto.EType
{

    public void <init>()
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        specialinvoke r0.<sun.security.krb5.internal.crypto.EType: void <init>()>();
        return;
    }

    public int eType()
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        return 23;
    }

    public int minimumPadSize()
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        return 1;
    }

    public int confounderSize()
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        return 8;
    }

    public int checksumType()
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        return -138;
    }

    public int checksumSize()
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;
        int $i0;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        $i0 = staticinvoke <sun.security.krb5.internal.crypto.ArcFourHmac: int getChecksumLength()>();
        return $i0;
    }

    public int blockSize()
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        return 1;
    }

    public int keyType()
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        return 4;
    }

    public int keySize()
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        return 16;
    }

    public byte[] encrypt(byte[], byte[], int) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;
        byte[] r1, r2, r3, $r4;
        int i0, $i1;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        i0 := @parameter2: int;
        $i1 = virtualinvoke r0.<sun.security.krb5.internal.crypto.ArcFourHmacEType: int blockSize()>();
        r3 = newarray (byte)[$i1];
        $r4 = virtualinvoke r0.<sun.security.krb5.internal.crypto.ArcFourHmacEType: byte[] encrypt(byte[],byte[],byte[],int)>(r1, r2, r3, i0);
        return $r4;
    }

    public byte[] encrypt(byte[], byte[], byte[], int) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;
        byte[] r1, r2, r3, $r6;
        int i0, $i1;
        java.security.GeneralSecurityException r4, $r7;
        sun.security.krb5.KrbCryptoException r5, $r8;
        java.lang.String $r9;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        r3 := @parameter2: byte[];
        i0 := @parameter3: int;

     label0:
        $i1 = lengthof r1;
        $r6 = staticinvoke <sun.security.krb5.internal.crypto.ArcFourHmac: byte[] encrypt(byte[],int,byte[],byte[],int,int)>(r2, i0, r3, r1, 0, $i1);

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;
        r4 = $r7;
        $r8 = new sun.security.krb5.KrbCryptoException;
        $r9 = virtualinvoke r4.<java.security.GeneralSecurityException: java.lang.String getMessage()>();
        specialinvoke $r8.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r9);
        r5 = $r8;
        virtualinvoke r5.<sun.security.krb5.KrbCryptoException: java.lang.Throwable initCause(java.lang.Throwable)>(r4);
        throw r5;

        catch java.security.GeneralSecurityException from label0 to label1 with label2;
    }

    public byte[] decrypt(byte[], byte[], int) throws sun.security.krb5.internal.KrbApErrException, sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;
        byte[] r1, r2, r3, $r4;
        int i0, $i1;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        i0 := @parameter2: int;
        $i1 = virtualinvoke r0.<sun.security.krb5.internal.crypto.ArcFourHmacEType: int blockSize()>();
        r3 = newarray (byte)[$i1];
        $r4 = virtualinvoke r0.<sun.security.krb5.internal.crypto.ArcFourHmacEType: byte[] decrypt(byte[],byte[],byte[],int)>(r1, r2, r3, i0);
        return $r4;
    }

    public byte[] decrypt(byte[], byte[], byte[], int) throws sun.security.krb5.internal.KrbApErrException, sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;
        byte[] r1, r2, r3, $r6;
        int i0, $i1;
        java.security.GeneralSecurityException r4, $r7;
        sun.security.krb5.KrbCryptoException r5, $r8;
        java.lang.String $r9;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        r3 := @parameter2: byte[];
        i0 := @parameter3: int;

     label0:
        $i1 = lengthof r1;
        $r6 = staticinvoke <sun.security.krb5.internal.crypto.ArcFourHmac: byte[] decrypt(byte[],int,byte[],byte[],int,int)>(r2, i0, r3, r1, 0, $i1);

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;
        r4 = $r7;
        $r8 = new sun.security.krb5.KrbCryptoException;
        $r9 = virtualinvoke r4.<java.security.GeneralSecurityException: java.lang.String getMessage()>();
        specialinvoke $r8.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r9);
        r5 = $r8;
        virtualinvoke r5.<sun.security.krb5.KrbCryptoException: java.lang.Throwable initCause(java.lang.Throwable)>(r4);
        throw r5;

        catch java.security.GeneralSecurityException from label0 to label1 with label2;
    }

    public byte[] decryptedData(byte[])
    {
        sun.security.krb5.internal.crypto.ArcFourHmacEType r0;
        byte[] r1;

        r0 := @this: sun.security.krb5.internal.crypto.ArcFourHmacEType;
        r1 := @parameter0: byte[];
        return r1;
    }
}
