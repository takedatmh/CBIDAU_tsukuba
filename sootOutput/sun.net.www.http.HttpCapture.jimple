public class sun.net.www.http.HttpCapture extends java.lang.Object
{
    private java.io.File file;
    private boolean incoming;
    private java.io.BufferedWriter out;
    private static boolean initialized;
    private static volatile java.util.ArrayList patterns;
    private static volatile java.util.ArrayList capFiles;

    private static synchronized void init()
    {
        java.lang.String r0, r11, r12, $r17, $r18, $r21, $r22;
        java.io.FileReader $r1;
        java.io.BufferedReader r2, $r9;
        java.io.FileNotFoundException r3, $r10;
        java.lang.String[] r4;
        java.lang.Throwable r5, $r29;
        java.io.IOException r6, $r23, r24, $r25, r26, $r27, r28, $r30;
        sun.net.www.http.HttpCapture$1 $r7;
        java.lang.Object $r8;
        boolean $z0, $z1;
        int $i0;
        java.util.ArrayList $r13, $r14, $r15, $r16, $r20;
        java.util.regex.Pattern $r19;

        <sun.net.www.http.HttpCapture: boolean initialized> = 1;
        $r7 = new sun.net.www.http.HttpCapture$1;
        specialinvoke $r7.<sun.net.www.http.HttpCapture$1: void <init>()>();
        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r7);
        r0 = (java.lang.String) $r8;
        if r0 == null goto label21;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();
        if $z0 != 0 goto label21;

     label0:
        $r9 = new java.io.BufferedReader;
        $r1 = new java.io.FileReader;
        specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>(r0);
        specialinvoke $r9.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);
        r2 = $r9;

     label1:
        goto label3;

     label2:
        $r10 := @caughtexception;
        r3 = $r10;
        return;

     label3:
        r11 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label4:
        if r11 == null goto label7;

        r12 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>();
        $z1 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z1 != 0 goto label6;

        r4 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");
        $i0 = lengthof r4;
        if $i0 != 2 goto label6;

        $r13 = <sun.net.www.http.HttpCapture: java.util.ArrayList patterns>;
        if $r13 != null goto label5;

        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        <sun.net.www.http.HttpCapture: java.util.ArrayList patterns> = $r14;
        $r15 = new java.util.ArrayList;
        specialinvoke $r15.<java.util.ArrayList: void <init>()>();
        <sun.net.www.http.HttpCapture: java.util.ArrayList capFiles> = $r15;

     label5:
        $r16 = <sun.net.www.http.HttpCapture: java.util.ArrayList patterns>;
        $r17 = r4[0];
        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();
        $r19 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r18);
        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);
        $r20 = <sun.net.www.http.HttpCapture: java.util.ArrayList capFiles>;
        $r21 = r4[1];
        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String trim()>();
        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label6:
        r11 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();
        goto label4;

     label7:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label8:
        goto label21;

     label9:
        $r23 := @caughtexception;
        r24 = $r23;
        goto label21;

     label10:
        $r25 := @caughtexception;

     label11:
        r26 = $r25;

     label12:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label13:
        goto label21;

     label14:
        $r27 := @caughtexception;
        r28 = $r27;
        goto label21;

     label15:
        $r29 := @caughtexception;

     label16:
        r5 = $r29;

     label17:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label18:
        goto label20;

     label19:
        $r30 := @caughtexception;
        r6 = $r30;

     label20:
        throw r5;

     label21:
        return;

        catch java.io.FileNotFoundException from label0 to label1 with label2;
        catch java.io.IOException from label7 to label8 with label9;
        catch java.io.IOException from label3 to label7 with label10;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label3 to label7 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private static synchronized boolean isInitialized()
    {
        boolean $z0;

        $z0 = <sun.net.www.http.HttpCapture: boolean initialized>;
        return $z0;
    }

    private void <init>(java.io.File, java.net.URL)
    {
        sun.net.www.http.HttpCapture r0;
        java.io.File r1, $r6;
        java.net.URL r2;
        java.io.FileWriter $r3;
        java.io.IOException r4, $r13;
        java.io.BufferedWriter $r5, $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.String $r12, $r15;
        java.lang.Class $r14;
        sun.util.logging.PlatformLogger $r16;

        r0 := @this: sun.net.www.http.HttpCapture;
        r1 := @parameter0: java.io.File;
        r2 := @parameter1: java.net.URL;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.net.www.http.HttpCapture: java.io.File file> = null;
        r0.<sun.net.www.http.HttpCapture: boolean incoming> = 1;
        r0.<sun.net.www.http.HttpCapture: java.io.BufferedWriter out> = null;
        r0.<sun.net.www.http.HttpCapture: java.io.File file> = r1;

     label0:
        $r5 = new java.io.BufferedWriter;
        $r3 = new java.io.FileWriter;
        $r6 = r0.<sun.net.www.http.HttpCapture: java.io.File file>;
        specialinvoke $r3.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r6, 1);
        specialinvoke $r5.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r3);
        r0.<sun.net.www.http.HttpCapture: java.io.BufferedWriter out> = $r5;
        $r7 = r0.<sun.net.www.http.HttpCapture: java.io.BufferedWriter out>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URL: ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r12);

     label1:
        goto label3;

     label2:
        $r13 := @caughtexception;
        r4 = $r13;
        $r14 = class "sun/net/www/http/HttpCapture";
        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();
        $r16 = staticinvoke <sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>($r15);
        virtualinvoke $r16.<sun.util.logging.PlatformLogger: void severe(java.lang.String,java.lang.Throwable)>(null, r4);

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public synchronized void sent(int) throws java.io.IOException
    {
        sun.net.www.http.HttpCapture r0;
        int i0;
        boolean $z0;
        java.io.BufferedWriter $r1, $r2, $r3;

        r0 := @this: sun.net.www.http.HttpCapture;
        i0 := @parameter0: int;
        $z0 = r0.<sun.net.www.http.HttpCapture: boolean incoming>;
        if $z0 == 0 goto label0;

        $r1 = r0.<sun.net.www.http.HttpCapture: java.io.BufferedWriter out>;
        virtualinvoke $r1.<java.io.BufferedWriter: void write(java.lang.String)>("\n------>\n");
        r0.<sun.net.www.http.HttpCapture: boolean incoming> = 0;
        $r2 = r0.<sun.net.www.http.HttpCapture: java.io.BufferedWriter out>;
        virtualinvoke $r2.<java.io.BufferedWriter: void flush()>();

     label0:
        $r3 = r0.<sun.net.www.http.HttpCapture: java.io.BufferedWriter out>;
        virtualinvoke $r3.<java.io.BufferedWriter: void write(int)>(i0);
        return;
    }

    public synchronized void received(int) throws java.io.IOException
    {
        sun.net.www.http.HttpCapture r0;
        int i0;
        boolean $z0;
        java.io.BufferedWriter $r1, $r2, $r3;

        r0 := @this: sun.net.www.http.HttpCapture;
        i0 := @parameter0: int;
        $z0 = r0.<sun.net.www.http.HttpCapture: boolean incoming>;
        if $z0 != 0 goto label0;

        $r1 = r0.<sun.net.www.http.HttpCapture: java.io.BufferedWriter out>;
        virtualinvoke $r1.<java.io.BufferedWriter: void write(java.lang.String)>("\n<------\n");
        r0.<sun.net.www.http.HttpCapture: boolean incoming> = 1;
        $r2 = r0.<sun.net.www.http.HttpCapture: java.io.BufferedWriter out>;
        virtualinvoke $r2.<java.io.BufferedWriter: void flush()>();

     label0:
        $r3 = r0.<sun.net.www.http.HttpCapture: java.io.BufferedWriter out>;
        virtualinvoke $r3.<java.io.BufferedWriter: void write(int)>(i0);
        return;
    }

    public synchronized void flush() throws java.io.IOException
    {
        sun.net.www.http.HttpCapture r0;
        java.io.BufferedWriter $r1;

        r0 := @this: sun.net.www.http.HttpCapture;
        $r1 = r0.<sun.net.www.http.HttpCapture: java.io.BufferedWriter out>;
        virtualinvoke $r1.<java.io.BufferedWriter: void flush()>();
        return;
    }

    public static sun.net.www.http.HttpCapture getCapture(java.net.URL)
    {
        java.net.URL r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String r1, r4, r6, $r16;
        int i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, $r8, $r9, $r10, $r13;
        java.util.regex.Pattern r3;
        java.util.Random r5, $r15;
        java.io.File r7, $r17, $r18;
        java.lang.Object $r11, $r14;
        java.util.regex.Matcher $r12;
        sun.net.www.http.HttpCapture $r19;

        r0 := @parameter0: java.net.URL;
        $z0 = staticinvoke <sun.net.www.http.HttpCapture: boolean isInitialized()>();
        if $z0 != 0 goto label0;

        staticinvoke <sun.net.www.http.HttpCapture: void init()>();

     label0:
        $r8 = <sun.net.www.http.HttpCapture: java.util.ArrayList patterns>;
        if $r8 == null goto label1;

        $r9 = <sun.net.www.http.HttpCapture: java.util.ArrayList patterns>;
        $z1 = virtualinvoke $r9.<java.util.ArrayList: boolean isEmpty()>();
        if $z1 == 0 goto label2;

     label1:
        return null;

     label2:
        r1 = virtualinvoke r0.<java.net.URL: java.lang.String toString()>();
        i0 = 0;

     label3:
        $r2 = <sun.net.www.http.HttpCapture: java.util.ArrayList patterns>;
        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();
        if i0 >= $i1 goto label8;

        $r10 = <sun.net.www.http.HttpCapture: java.util.ArrayList patterns>;
        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        r3 = (java.util.regex.Pattern) $r11;
        $r12 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z2 = virtualinvoke $r12.<java.util.regex.Matcher: boolean find()>();
        if $z2 == 0 goto label7;

        $r13 = <sun.net.www.http.HttpCapture: java.util.ArrayList capFiles>;
        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        r4 = (java.lang.String) $r14;
        $i2 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>("%d");
        if $i2 < 0 goto label5;

        $r15 = new java.util.Random;
        specialinvoke $r15.<java.util.Random: void <init>()>();
        r5 = $r15;

     label4:
        $i3 = virtualinvoke r5.<java.util.Random: int nextInt()>();
        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);
        r6 = virtualinvoke r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%d", $r16);
        $r17 = new java.io.File;
        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>(r6);
        r7 = $r17;
        $z3 = virtualinvoke r7.<java.io.File: boolean exists()>();
        if $z3 != 0 goto label4;

        goto label6;

     label5:
        $r18 = new java.io.File;
        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>(r4);
        r7 = $r18;

     label6:
        $r19 = new sun.net.www.http.HttpCapture;
        specialinvoke $r19.<sun.net.www.http.HttpCapture: void <init>(java.io.File,java.net.URL)>(r7, r0);
        return $r19;

     label7:
        i0 = i0 + 1;
        goto label3;

     label8:
        return null;
    }

    static void <clinit>()
    {
        <sun.net.www.http.HttpCapture: boolean initialized> = 0;
        <sun.net.www.http.HttpCapture: java.util.ArrayList patterns> = null;
        <sun.net.www.http.HttpCapture: java.util.ArrayList capFiles> = null;
        return;
    }
}
