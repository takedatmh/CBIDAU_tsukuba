final class java.text.RuleBasedBreakIterator$SafeCharIterator extends java.lang.Object implements java.text.CharacterIterator, java.lang.Cloneable
{
    private java.text.CharacterIterator base;
    private int rangeStart;
    private int rangeLimit;
    private int currentIndex;

    void <init>(java.text.CharacterIterator)
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0;
        java.text.CharacterIterator r1;
        int $i0, $i1, $i2;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        r1 := @parameter0: java.text.CharacterIterator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: java.text.CharacterIterator base> = r1;
        $i0 = interfaceinvoke r1.<java.text.CharacterIterator: int getBeginIndex()>();
        r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeStart> = $i0;
        $i1 = interfaceinvoke r1.<java.text.CharacterIterator: int getEndIndex()>();
        r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeLimit> = $i1;
        $i2 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex> = $i2;
        return;
    }

    public char first()
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0;
        int $i0;
        char $c1;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        $i0 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeStart>;
        $c1 = virtualinvoke r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: char setIndex(int)>($i0);
        return $c1;
    }

    public char last()
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0;
        int $i0, $i1;
        char $c2;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        $i0 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeLimit>;
        $i1 = $i0 - 1;
        $c2 = virtualinvoke r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: char setIndex(int)>($i1);
        return $c2;
    }

    public char current()
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.text.CharacterIterator $r1;
        char $c5;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        $i0 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex>;
        $i1 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeStart>;
        if $i0 < $i1 goto label0;

        $i2 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex>;
        $i3 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeLimit>;
        if $i2 < $i3 goto label1;

     label0:
        return 65535;

     label1:
        $r1 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: java.text.CharacterIterator base>;
        $i4 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex>;
        $c5 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>($i4);
        return $c5;
    }

    public char next()
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.text.CharacterIterator $r2;
        char $c6;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        $i0 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex>;
        $i1 = $i0 + 1;
        r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex> = $i1;
        $i2 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex>;
        $i3 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeLimit>;
        if $i2 < $i3 goto label0;

        $i4 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeLimit>;
        r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex> = $i4;
        return 65535;

     label0:
        $r2 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: java.text.CharacterIterator base>;
        $i5 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex>;
        $c6 = interfaceinvoke $r2.<java.text.CharacterIterator: char setIndex(int)>($i5);
        return $c6;
    }

    public char previous()
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.text.CharacterIterator $r2;
        char $c6;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        $i0 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex>;
        $i1 = $i0 - 1;
        r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex> = $i1;
        $i2 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex>;
        $i3 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeStart>;
        if $i2 >= $i3 goto label0;

        $i4 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeStart>;
        r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex> = $i4;
        return 65535;

     label0:
        $r2 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: java.text.CharacterIterator base>;
        $i5 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex>;
        $c6 = interfaceinvoke $r2.<java.text.CharacterIterator: char setIndex(int)>($i5);
        return $c6;
    }

    public char setIndex(int)
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        char $c3;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        i0 := @parameter0: int;
        $i1 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeStart>;
        if i0 < $i1 goto label0;

        $i2 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeLimit>;
        if i0 <= $i2 goto label1;

     label0:
        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid position");
        throw $r1;

     label1:
        r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex> = i0;
        $c3 = virtualinvoke r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: char current()>();
        return $c3;
    }

    public int getBeginIndex()
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0;
        int $i0;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        $i0 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeStart>;
        return $i0;
    }

    public int getEndIndex()
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0;
        int $i0;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        $i0 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int rangeLimit>;
        return $i0;
    }

    public int getIndex()
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0;
        int $i0;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        $i0 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: int currentIndex>;
        return $i0;
    }

    public java.lang.Object clone()
    {
        java.text.RuleBasedBreakIterator$SafeCharIterator r0, r4;
        null_type n0;
        java.lang.CloneNotSupportedException r1, $r5;
        java.lang.StringBuilder $r2, $r7, $r8;
        java.lang.Object $r3, $r11;
        java.lang.Error $r6;
        java.lang.String $r9;
        java.text.CharacterIterator $r10, r12;

        r0 := @this: java.text.RuleBasedBreakIterator$SafeCharIterator;
        n0 = null;

     label0:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        r4 = (java.text.RuleBasedBreakIterator$SafeCharIterator) $r3;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r1 = $r5;
        $r6 = new java.lang.Error;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clone not supported: ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>($r9);
        throw $r6;

     label3:
        $r10 = r0.<java.text.RuleBasedBreakIterator$SafeCharIterator: java.text.CharacterIterator base>;
        $r11 = interfaceinvoke $r10.<java.text.CharacterIterator: java.lang.Object clone()>();
        r12 = (java.text.CharacterIterator) $r11;
        r4.<java.text.RuleBasedBreakIterator$SafeCharIterator: java.text.CharacterIterator base> = r12;
        return r4;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }
}
