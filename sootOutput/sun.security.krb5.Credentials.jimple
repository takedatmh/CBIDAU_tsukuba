public class sun.security.krb5.Credentials extends java.lang.Object
{
    sun.security.krb5.internal.Ticket ticket;
    sun.security.krb5.PrincipalName client;
    sun.security.krb5.PrincipalName server;
    sun.security.krb5.EncryptionKey key;
    sun.security.krb5.internal.TicketFlags flags;
    sun.security.krb5.internal.KerberosTime authTime;
    sun.security.krb5.internal.KerberosTime startTime;
    sun.security.krb5.internal.KerberosTime endTime;
    sun.security.krb5.internal.KerberosTime renewTill;
    sun.security.krb5.internal.HostAddresses cAddr;
    sun.security.krb5.EncryptionKey serviceKey;
    sun.security.krb5.internal.AuthorizationData authzData;
    private static boolean DEBUG;
    private static sun.security.krb5.internal.ccache.CredentialsCache cache;
    static boolean alreadyLoaded;
    private static boolean alreadyTried;

    private static native sun.security.krb5.Credentials acquireDefaultNativeCreds(int[]);

    public void <init>(sun.security.krb5.internal.Ticket, sun.security.krb5.PrincipalName, sun.security.krb5.PrincipalName, sun.security.krb5.EncryptionKey, sun.security.krb5.internal.TicketFlags, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.HostAddresses, sun.security.krb5.internal.AuthorizationData)
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.Ticket r1;
        sun.security.krb5.PrincipalName r2, r3;
        sun.security.krb5.EncryptionKey r4;
        sun.security.krb5.internal.TicketFlags r5;
        sun.security.krb5.internal.KerberosTime r6, r7, r8, r9;
        sun.security.krb5.internal.HostAddresses r10;
        sun.security.krb5.internal.AuthorizationData r11;

        r0 := @this: sun.security.krb5.Credentials;
        r1 := @parameter0: sun.security.krb5.internal.Ticket;
        r2 := @parameter1: sun.security.krb5.PrincipalName;
        r3 := @parameter2: sun.security.krb5.PrincipalName;
        r4 := @parameter3: sun.security.krb5.EncryptionKey;
        r5 := @parameter4: sun.security.krb5.internal.TicketFlags;
        r6 := @parameter5: sun.security.krb5.internal.KerberosTime;
        r7 := @parameter6: sun.security.krb5.internal.KerberosTime;
        r8 := @parameter7: sun.security.krb5.internal.KerberosTime;
        r9 := @parameter8: sun.security.krb5.internal.KerberosTime;
        r10 := @parameter9: sun.security.krb5.internal.HostAddresses;
        r11 := @parameter10: sun.security.krb5.internal.AuthorizationData;
        specialinvoke r0.<sun.security.krb5.Credentials: void <init>(sun.security.krb5.internal.Ticket,sun.security.krb5.PrincipalName,sun.security.krb5.PrincipalName,sun.security.krb5.EncryptionKey,sun.security.krb5.internal.TicketFlags,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.HostAddresses)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);
        r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.AuthorizationData authzData> = r11;
        return;
    }

    public void <init>(sun.security.krb5.internal.Ticket, sun.security.krb5.PrincipalName, sun.security.krb5.PrincipalName, sun.security.krb5.EncryptionKey, sun.security.krb5.internal.TicketFlags, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.HostAddresses)
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.Ticket r1;
        sun.security.krb5.PrincipalName r2, r3;
        sun.security.krb5.EncryptionKey r4;
        sun.security.krb5.internal.TicketFlags r5;
        sun.security.krb5.internal.KerberosTime r6, r7, r8, r9;
        sun.security.krb5.internal.HostAddresses r10;

        r0 := @this: sun.security.krb5.Credentials;
        r1 := @parameter0: sun.security.krb5.internal.Ticket;
        r2 := @parameter1: sun.security.krb5.PrincipalName;
        r3 := @parameter2: sun.security.krb5.PrincipalName;
        r4 := @parameter3: sun.security.krb5.EncryptionKey;
        r5 := @parameter4: sun.security.krb5.internal.TicketFlags;
        r6 := @parameter5: sun.security.krb5.internal.KerberosTime;
        r7 := @parameter6: sun.security.krb5.internal.KerberosTime;
        r8 := @parameter7: sun.security.krb5.internal.KerberosTime;
        r9 := @parameter8: sun.security.krb5.internal.KerberosTime;
        r10 := @parameter9: sun.security.krb5.internal.HostAddresses;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.Ticket ticket> = r1;
        r0.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName client> = r2;
        r0.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName server> = r3;
        r0.<sun.security.krb5.Credentials: sun.security.krb5.EncryptionKey key> = r4;
        r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags> = r5;
        r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime authTime> = r6;
        r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime startTime> = r7;
        r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime endTime> = r8;
        r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime renewTill> = r9;
        r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.HostAddresses cAddr> = r10;
        return;
    }

    public void <init>(byte[], java.lang.String, java.lang.String, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) throws sun.security.krb5.KrbException, java.io.IOException
    {
        sun.security.krb5.Credentials r0;
        byte[] r1, r4;
        java.lang.String r2, r3;
        int i0;
        boolean[] r5;
        java.util.Date r6, r7, r8, r9;
        java.net.InetAddress[] r10;
        sun.security.krb5.internal.Ticket $r12;
        sun.security.krb5.PrincipalName $r13, $r14;
        sun.security.krb5.EncryptionKey $r15;
        sun.security.krb5.internal.TicketFlags $r16;
        sun.security.krb5.internal.KerberosTime $r17, $r18, $r19, $r20;

        r0 := @this: sun.security.krb5.Credentials;
        r1 := @parameter0: byte[];
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: byte[];
        i0 := @parameter4: int;
        r5 := @parameter5: boolean[];
        r6 := @parameter6: java.util.Date;
        r7 := @parameter7: java.util.Date;
        r8 := @parameter8: java.util.Date;
        r9 := @parameter9: java.util.Date;
        r10 := @parameter10: java.net.InetAddress[];
        $r12 = new sun.security.krb5.internal.Ticket;
        specialinvoke $r12.<sun.security.krb5.internal.Ticket: void <init>(byte[])>(r1);
        $r13 = new sun.security.krb5.PrincipalName;
        specialinvoke $r13.<sun.security.krb5.PrincipalName: void <init>(java.lang.String,int)>(r2, 1);
        $r14 = new sun.security.krb5.PrincipalName;
        specialinvoke $r14.<sun.security.krb5.PrincipalName: void <init>(java.lang.String,int)>(r3, 2);
        $r15 = new sun.security.krb5.EncryptionKey;
        specialinvoke $r15.<sun.security.krb5.EncryptionKey: void <init>(int,byte[])>(i0, r4);
        if r5 != null goto label0;

        $r16 = null;
        goto label1;

     label0:
        $r16 = new sun.security.krb5.internal.TicketFlags;
        specialinvoke $r16.<sun.security.krb5.internal.TicketFlags: void <init>(boolean[])>(r5);

     label1:
        if r6 != null goto label2;

        $r17 = null;
        goto label3;

     label2:
        $r17 = new sun.security.krb5.internal.KerberosTime;
        specialinvoke $r17.<sun.security.krb5.internal.KerberosTime: void <init>(java.util.Date)>(r6);

     label3:
        if r7 != null goto label4;

        $r18 = null;
        goto label5;

     label4:
        $r18 = new sun.security.krb5.internal.KerberosTime;
        specialinvoke $r18.<sun.security.krb5.internal.KerberosTime: void <init>(java.util.Date)>(r7);

     label5:
        if r8 != null goto label6;

        $r19 = null;
        goto label7;

     label6:
        $r19 = new sun.security.krb5.internal.KerberosTime;
        specialinvoke $r19.<sun.security.krb5.internal.KerberosTime: void <init>(java.util.Date)>(r8);

     label7:
        if r9 != null goto label8;

        $r20 = null;
        goto label9;

     label8:
        $r20 = new sun.security.krb5.internal.KerberosTime;
        specialinvoke $r20.<sun.security.krb5.internal.KerberosTime: void <init>(java.util.Date)>(r9);

     label9:
        specialinvoke r0.<sun.security.krb5.Credentials: void <init>(sun.security.krb5.internal.Ticket,sun.security.krb5.PrincipalName,sun.security.krb5.PrincipalName,sun.security.krb5.EncryptionKey,sun.security.krb5.internal.TicketFlags,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.HostAddresses)>($r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, null);
        return;
    }

    public final sun.security.krb5.PrincipalName getClient()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.PrincipalName $r1;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName client>;
        return $r1;
    }

    public final sun.security.krb5.PrincipalName getServer()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.PrincipalName $r1;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName server>;
        return $r1;
    }

    public final sun.security.krb5.EncryptionKey getSessionKey()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.EncryptionKey $r1;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.EncryptionKey key>;
        return $r1;
    }

    public final java.util.Date getAuthTime()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.KerberosTime $r1, $r2;
        java.util.Date $r3;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime authTime>;
        if $r1 == null goto label0;

        $r2 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime authTime>;
        $r3 = virtualinvoke $r2.<sun.security.krb5.internal.KerberosTime: java.util.Date toDate()>();
        return $r3;

     label0:
        return null;
    }

    public final java.util.Date getStartTime()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.KerberosTime $r1, $r2;
        java.util.Date $r3;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime startTime>;
        if $r1 == null goto label0;

        $r2 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime startTime>;
        $r3 = virtualinvoke $r2.<sun.security.krb5.internal.KerberosTime: java.util.Date toDate()>();
        return $r3;

     label0:
        return null;
    }

    public final java.util.Date getEndTime()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.KerberosTime $r1, $r2;
        java.util.Date $r3;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime endTime>;
        if $r1 == null goto label0;

        $r2 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime endTime>;
        $r3 = virtualinvoke $r2.<sun.security.krb5.internal.KerberosTime: java.util.Date toDate()>();
        return $r3;

     label0:
        return null;
    }

    public final java.util.Date getRenewTill()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.KerberosTime $r1, $r2;
        java.util.Date $r3;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime renewTill>;
        if $r1 == null goto label0;

        $r2 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime renewTill>;
        $r3 = virtualinvoke $r2.<sun.security.krb5.internal.KerberosTime: java.util.Date toDate()>();
        return $r3;

     label0:
        return null;
    }

    public final boolean[] getFlags()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.TicketFlags $r1, $r2;
        boolean[] $r3;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        if $r1 != null goto label0;

        return null;

     label0:
        $r2 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $r3 = virtualinvoke $r2.<sun.security.krb5.internal.TicketFlags: boolean[] toBooleanArray()>();
        return $r3;
    }

    public final java.net.InetAddress[] getClientAddresses()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.HostAddresses $r1, $r2;
        java.net.InetAddress[] $r3;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.HostAddresses cAddr>;
        if $r1 != null goto label0;

        return null;

     label0:
        $r2 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.HostAddresses cAddr>;
        $r3 = virtualinvoke $r2.<sun.security.krb5.internal.HostAddresses: java.net.InetAddress[] getInetAddresses()>();
        return $r3;
    }

    public final byte[] getEncoded()
    {
        sun.security.krb5.Credentials r0;
        byte[] r1;
        sun.security.krb5.Asn1Exception r2, $r4;
        sun.security.krb5.internal.Ticket $r3;
        boolean $z0, $z1;
        java.io.PrintStream $r5, $r8;
        java.io.IOException $r6, r7;

        r0 := @this: sun.security.krb5.Credentials;
        r1 = null;

     label0:
        $r3 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.Ticket ticket>;
        r1 = virtualinvoke $r3.<sun.security.krb5.internal.Ticket: byte[] asn1Encode()>();

     label1:
        goto label5;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;
        $z0 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z0 == 0 goto label3;

        $r5 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.Object)>(r2);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;
        r7 = $r6;
        $z1 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z1 == 0 goto label5;

        $r8 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.Object)>(r7);

     label5:
        return r1;

        catch sun.security.krb5.Asn1Exception from label0 to label1 with label2;
        catch java.io.IOException from label0 to label1 with label4;
    }

    public boolean isForwardable()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.TicketFlags $r1;
        boolean $z0;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z0 = virtualinvoke $r1.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(1);
        return $z0;
    }

    public boolean isRenewable()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.TicketFlags $r1;
        boolean $z0;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z0 = virtualinvoke $r1.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(8);
        return $z0;
    }

    public sun.security.krb5.internal.Ticket getTicket()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.Ticket $r1;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.Ticket ticket>;
        return $r1;
    }

    public sun.security.krb5.internal.TicketFlags getTicketFlags()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.TicketFlags $r1;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        return $r1;
    }

    public sun.security.krb5.internal.AuthorizationData getAuthzData()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.AuthorizationData $r1;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.AuthorizationData authzData>;
        return $r1;
    }

    public boolean checkDelegate()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.TicketFlags $r1;
        boolean $z0;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z0 = virtualinvoke $r1.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(13);
        return $z0;
    }

    public void resetDelegate()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.TicketFlags $r1;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        virtualinvoke $r1.<sun.security.krb5.internal.TicketFlags: void set(int,boolean)>(13, 0);
        return;
    }

    public sun.security.krb5.Credentials renew() throws sun.security.krb5.KrbException, java.io.IOException
    {
        sun.security.krb5.Credentials r0, $r6;
        sun.security.krb5.internal.KDCOptions $r1, r2;
        sun.security.krb5.KrbTgsReq $r3;
        sun.security.krb5.PrincipalName $r4;
        sun.security.krb5.internal.HostAddresses $r5;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = new sun.security.krb5.internal.KDCOptions;
        specialinvoke $r1.<sun.security.krb5.internal.KDCOptions: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<sun.security.krb5.internal.KDCOptions: void set(int,boolean)>(30, 1);
        virtualinvoke r2.<sun.security.krb5.internal.KDCOptions: void set(int,boolean)>(8, 1);
        $r3 = new sun.security.krb5.KrbTgsReq;
        $r4 = r0.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName server>;
        $r5 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.HostAddresses cAddr>;
        specialinvoke $r3.<sun.security.krb5.KrbTgsReq: void <init>(sun.security.krb5.internal.KDCOptions,sun.security.krb5.Credentials,sun.security.krb5.PrincipalName,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,int[],sun.security.krb5.internal.HostAddresses,sun.security.krb5.internal.AuthorizationData,sun.security.krb5.internal.Ticket[],sun.security.krb5.EncryptionKey)>(r2, r0, $r4, null, null, null, null, $r5, null, null, null);
        $r6 = virtualinvoke $r3.<sun.security.krb5.KrbTgsReq: sun.security.krb5.Credentials sendAndGetCreds()>();
        return $r6;
    }

    public static sun.security.krb5.Credentials acquireTGTFromCache(sun.security.krb5.PrincipalName, java.lang.String) throws sun.security.krb5.KrbException, java.io.IOException
    {
        sun.security.krb5.PrincipalName r0, $r11, $r20;
        java.lang.String r1, r2, $r7, $r9, $r16, $r24, $r29, $r37;
        sun.security.krb5.Credentials r3, $r32;
        sun.security.action.GetPropertyAction $r4;
        java.lang.Object $r5;
        java.util.Locale $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.io.PrintStream $r10, $r12, $r17, $r25, $r33;
        java.lang.StringBuilder $r13, $r14, $r15, $r18, $r19, $r21, $r22, $r23, $r26, $r27, $r28, $r34, $r35, $r36;
        sun.security.krb5.internal.ccache.CredentialsCache r30;
        sun.security.krb5.internal.ccache.Credentials r31;
        int $i0, $i1;

        r0 := @parameter0: sun.security.krb5.PrincipalName;
        r1 := @parameter1: java.lang.String;
        if r1 != null goto label8;

        $r4 = new sun.security.action.GetPropertyAction;
        specialinvoke $r4.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>("os.name");
        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r4);
        r2 = (java.lang.String) $r5;
        $r6 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r6);
        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("WINDOWS");
        if $z0 != 0 goto label0;

        $r8 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r9 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r8);
        $z1 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("OS X");
        if $z1 == 0 goto label8;

     label0:
        r3 = staticinvoke <sun.security.krb5.Credentials: sun.security.krb5.Credentials acquireDefaultCreds()>();
        if r3 != null goto label2;

        $z2 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z2 == 0 goto label1;

        $r10 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(">>> Found no TGT\'s in LSA");

     label1:
        return null;

     label2:
        if r0 == null goto label6;

        $r11 = virtualinvoke r3.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName getClient()>();
        $z3 = virtualinvoke $r11.<sun.security.krb5.PrincipalName: boolean equals(sun.security.krb5.PrincipalName)>(r0);
        if $z3 == 0 goto label4;

        $z4 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z4 == 0 goto label3;

        $r12 = <java.lang.System: java.io.PrintStream out>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> Obtained TGT from LSA: ");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label3:
        return r3;

     label4:
        $z5 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z5 == 0 goto label5;

        $r17 = <java.lang.System: java.io.PrintStream out>;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> LSA contains TGT for ");
        $r20 = virtualinvoke r3.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName getClient()>();
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not ");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label5:
        return null;

     label6:
        $z6 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z6 == 0 goto label7;

        $r25 = <java.lang.System: java.io.PrintStream out>;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> Obtained TGT from LSA: ");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r29);

     label7:
        return r3;

     label8:
        r30 = staticinvoke <sun.security.krb5.internal.ccache.CredentialsCache: sun.security.krb5.internal.ccache.CredentialsCache getInstance(sun.security.krb5.PrincipalName,java.lang.String)>(r0, r1);
        if r30 != null goto label9;

        return null;

     label9:
        r31 = virtualinvoke r30.<sun.security.krb5.internal.ccache.CredentialsCache: sun.security.krb5.internal.ccache.Credentials getDefaultCreds()>();
        if r31 != null goto label10;

        return null;

     label10:
        $i0 = virtualinvoke r31.<sun.security.krb5.internal.ccache.Credentials: int getEType()>();
        $z7 = staticinvoke <sun.security.krb5.internal.crypto.EType: boolean isSupported(int)>($i0);
        if $z7 == 0 goto label11;

        $r32 = virtualinvoke r31.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.Credentials setKrbCreds()>();
        return $r32;

     label11:
        $z8 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z8 == 0 goto label12;

        $r33 = <java.lang.System: java.io.PrintStream out>;
        $r34 = new java.lang.StringBuilder;
        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> unsupported key type found the default TGT: ");
        $i1 = virtualinvoke r31.<sun.security.krb5.internal.ccache.Credentials: int getEType()>();
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r37);

     label12:
        return null;
    }

    public static synchronized sun.security.krb5.Credentials acquireDefaultCreds()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.ccache.Credentials r1;
        sun.security.krb5.internal.ccache.CredentialsCache $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.PrintStream $r6, $r7, $r14, $r15;
        int $i0, $i1;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        java.lang.Exception $r12, r13;
        int[] $r16;

        r0 = null;
        $r2 = <sun.security.krb5.Credentials: sun.security.krb5.internal.ccache.CredentialsCache cache>;
        if $r2 != null goto label0;

        $r3 = staticinvoke <sun.security.krb5.internal.ccache.CredentialsCache: sun.security.krb5.internal.ccache.CredentialsCache getInstance()>();
        <sun.security.krb5.Credentials: sun.security.krb5.internal.ccache.CredentialsCache cache> = $r3;

     label0:
        $r4 = <sun.security.krb5.Credentials: sun.security.krb5.internal.ccache.CredentialsCache cache>;
        if $r4 == null goto label3;

        $r5 = <sun.security.krb5.Credentials: sun.security.krb5.internal.ccache.CredentialsCache cache>;
        r1 = virtualinvoke $r5.<sun.security.krb5.internal.ccache.CredentialsCache: sun.security.krb5.internal.ccache.Credentials getDefaultCreds()>();
        if r1 == null goto label3;

        $z0 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z0 == 0 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(">>> KrbCreds found the default ticket granting ticket in credential cache.");

     label1:
        $i0 = virtualinvoke r1.<sun.security.krb5.internal.ccache.Credentials: int getEType()>();
        $z1 = staticinvoke <sun.security.krb5.internal.crypto.EType: boolean isSupported(int)>($i0);
        if $z1 == 0 goto label2;

        r0 = virtualinvoke r1.<sun.security.krb5.internal.ccache.Credentials: sun.security.krb5.Credentials setKrbCreds()>();
        goto label3;

     label2:
        $z2 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z2 == 0 goto label3;

        $r7 = <java.lang.System: java.io.PrintStream out>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> unsupported key type found the default TGT: ");
        $i1 = virtualinvoke r1.<sun.security.krb5.internal.ccache.Credentials: int getEType()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label3:
        if r0 != null goto label10;

        $z3 = <sun.security.krb5.Credentials: boolean alreadyTried>;
        if $z3 != 0 goto label8;

     label4:
        staticinvoke <sun.security.krb5.Credentials: void ensureLoaded()>();

     label5:
        goto label8;

     label6:
        $r12 := @caughtexception;
        r13 = $r12;
        $z4 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z4 == 0 goto label7;

        $r14 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Can not load credentials cache");
        virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();

     label7:
        <sun.security.krb5.Credentials: boolean alreadyTried> = 1;

     label8:
        $z5 = <sun.security.krb5.Credentials: boolean alreadyLoaded>;
        if $z5 == 0 goto label10;

        $z6 = <sun.security.krb5.Credentials: boolean DEBUG>;
        if $z6 == 0 goto label9;

        $r15 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(">> Acquire default native Credentials");

     label9:
        $r16 = staticinvoke <sun.security.krb5.internal.crypto.EType: int[] getDefaults(java.lang.String)>("default_tkt_enctypes");
        r0 = staticinvoke <sun.security.krb5.Credentials: sun.security.krb5.Credentials acquireDefaultNativeCreds(int[])>($r16);

     label10:
        return r0;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static sun.security.krb5.Credentials acquireServiceCreds(java.lang.String, sun.security.krb5.Credentials) throws sun.security.krb5.KrbException, java.io.IOException
    {
        java.lang.String r0;
        sun.security.krb5.Credentials r1, $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: sun.security.krb5.Credentials;
        $r2 = staticinvoke <sun.security.krb5.internal.CredentialsUtil: sun.security.krb5.Credentials acquireServiceCreds(java.lang.String,sun.security.krb5.Credentials)>(r0, r1);
        return $r2;
    }

    public sun.security.krb5.internal.ccache.CredentialsCache getCache()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.internal.ccache.CredentialsCache $r1;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = <sun.security.krb5.Credentials: sun.security.krb5.internal.ccache.CredentialsCache cache>;
        return $r1;
    }

    public sun.security.krb5.EncryptionKey getServiceKey()
    {
        sun.security.krb5.Credentials r0;
        sun.security.krb5.EncryptionKey $r1;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = r0.<sun.security.krb5.Credentials: sun.security.krb5.EncryptionKey serviceKey>;
        return $r1;
    }

    public static void printDebug(sun.security.krb5.Credentials)
    {
        sun.security.krb5.Credentials r0;
        java.io.PrintStream $r1, $r2, $r9, $r16, $r24, $r33, $r39, $r45;
        java.lang.StringBuilder $r3, $r4, $r7, $r10, $r11, $r14, $r17, $r18, $r22, $r25, $r26, $r30, $r34, $r35, $r37, $r40, $r41, $r43;
        sun.security.krb5.PrincipalName $r5, $r12, $r28;
        java.lang.String $r6, $r8, $r13, $r15, $r21, $r23, $r29, $r31, $r38, $r44;
        sun.security.krb5.internal.Ticket $r19, $r27;
        sun.security.krb5.Realm $r20;
        sun.security.krb5.internal.KerberosTime $r32, $r36, $r42;
        long $l0, $l1;

        r0 := @parameter0: sun.security.krb5.Credentials;
        $r1 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(">>> DEBUG: ----Credentials----");
        $r2 = <java.lang.System: java.io.PrintStream out>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tclient: ");
        $r5 = r0.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName client>;
        $r6 = virtualinvoke $r5.<sun.security.krb5.PrincipalName: java.lang.String toString()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r8);
        $r9 = <java.lang.System: java.io.PrintStream out>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tserver: ");
        $r12 = r0.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName server>;
        $r13 = virtualinvoke $r12.<sun.security.krb5.PrincipalName: java.lang.String toString()>();
        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r15);
        $r16 = <java.lang.System: java.io.PrintStream out>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tticket: realm: ");
        $r19 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.Ticket ticket>;
        $r20 = $r19.<sun.security.krb5.internal.Ticket: sun.security.krb5.Realm realm>;
        $r21 = virtualinvoke $r20.<sun.security.krb5.Realm: java.lang.String toString()>();
        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r23);
        $r24 = <java.lang.System: java.io.PrintStream out>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t        sname: ");
        $r27 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.Ticket ticket>;
        $r28 = $r27.<sun.security.krb5.internal.Ticket: sun.security.krb5.PrincipalName sname>;
        $r29 = virtualinvoke $r28.<sun.security.krb5.PrincipalName: java.lang.String toString()>();
        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r31);
        $r32 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime startTime>;
        if $r32 == null goto label0;

        $r33 = <java.lang.System: java.io.PrintStream out>;
        $r34 = new java.lang.StringBuilder;
        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tstartTime: ");
        $r36 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime startTime>;
        $l0 = virtualinvoke $r36.<sun.security.krb5.internal.KerberosTime: long getTime()>();
        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label0:
        $r39 = <java.lang.System: java.io.PrintStream out>;
        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tendTime: ");
        $r42 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime endTime>;
        $l1 = virtualinvoke $r42.<sun.security.krb5.internal.KerberosTime: long getTime()>();
        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r44);
        $r45 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>("        ----Credentials end----");
        return;
    }

    static void ensureLoaded()
    {
        sun.security.krb5.Credentials$1 $r0;

        $r0 = new sun.security.krb5.Credentials$1;
        specialinvoke $r0.<sun.security.krb5.Credentials$1: void <init>()>();
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        <sun.security.krb5.Credentials: boolean alreadyLoaded> = 1;
        return;
    }

    public java.lang.String toString()
    {
        sun.security.krb5.Credentials r0;
        java.lang.StringBuffer $r1, r2, $r3, $r6, $r10, $r14, $r17, $r20, $r23, $r26;
        sun.security.krb5.PrincipalName $r4, $r7;
        sun.security.krb5.internal.KerberosTime $r9, $r11, $r13, $r15, $r18, $r21;
        sun.security.krb5.internal.TicketFlags $r24;
        sun.security.krb5.EncryptionKey $r27;
        int $i0;
        java.lang.String $r29;

        r0 := @this: sun.security.krb5.Credentials;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("Credentials:");
        r2 = $r1;
        $r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nclient=");
        $r4 = r0.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName client>;
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);
        $r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nserver=");
        $r7 = r0.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName server>;
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);
        $r9 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime authTime>;
        if $r9 == null goto label0;

        $r10 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nauthTime=");
        $r11 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime authTime>;
        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

     label0:
        $r13 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime startTime>;
        if $r13 == null goto label1;

        $r14 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nstartTime=");
        $r15 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime startTime>;
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

     label1:
        $r17 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nendTime=");
        $r18 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime endTime>;
        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r18);
        $r20 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nrenewTill=");
        $r21 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.KerberosTime renewTill>;
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r21);
        $r23 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nflags: ");
        $r24 = r0.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r24);
        $r26 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nEType (int): ");
        $r27 = r0.<sun.security.krb5.Credentials: sun.security.krb5.EncryptionKey key>;
        $i0 = virtualinvoke $r27.<sun.security.krb5.EncryptionKey: int getEType()>();
        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r29 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r29;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        <sun.security.krb5.Credentials: boolean DEBUG> = $z0;
        <sun.security.krb5.Credentials: boolean alreadyLoaded> = 0;
        <sun.security.krb5.Credentials: boolean alreadyTried> = 0;
        return;
    }
}
