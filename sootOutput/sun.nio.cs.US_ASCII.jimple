public class sun.nio.cs.US_ASCII extends java.nio.charset.Charset implements sun.nio.cs.HistoricallyNamedCharset
{

    public void <init>()
    {
        sun.nio.cs.US_ASCII r0;
        java.lang.String[] $r1;

        r0 := @this: sun.nio.cs.US_ASCII;
        $r1 = <sun.nio.cs.StandardCharsets: java.lang.String[] aliases_US_ASCII>;
        specialinvoke r0.<java.nio.charset.Charset: void <init>(java.lang.String,java.lang.String[])>("US-ASCII", $r1);
        return;
    }

    public java.lang.String historicalName()
    {
        sun.nio.cs.US_ASCII r0;

        r0 := @this: sun.nio.cs.US_ASCII;
        return "ASCII";
    }

    public boolean contains(java.nio.charset.Charset)
    {
        sun.nio.cs.US_ASCII r0;
        java.nio.charset.Charset r1;
        boolean $z0;

        r0 := @this: sun.nio.cs.US_ASCII;
        r1 := @parameter0: java.nio.charset.Charset;
        $z0 = r1 instanceof sun.nio.cs.US_ASCII;
        return $z0;
    }

    public java.nio.charset.CharsetDecoder newDecoder()
    {
        sun.nio.cs.US_ASCII r0;
        sun.nio.cs.US_ASCII$Decoder $r1;

        r0 := @this: sun.nio.cs.US_ASCII;
        $r1 = new sun.nio.cs.US_ASCII$Decoder;
        specialinvoke $r1.<sun.nio.cs.US_ASCII$Decoder: void <init>(java.nio.charset.Charset,sun.nio.cs.US_ASCII$1)>(r0, null);
        return $r1;
    }

    public java.nio.charset.CharsetEncoder newEncoder()
    {
        sun.nio.cs.US_ASCII r0;
        sun.nio.cs.US_ASCII$Encoder $r1;

        r0 := @this: sun.nio.cs.US_ASCII;
        $r1 = new sun.nio.cs.US_ASCII$Encoder;
        specialinvoke $r1.<sun.nio.cs.US_ASCII$Encoder: void <init>(java.nio.charset.Charset,sun.nio.cs.US_ASCII$1)>(r0, null);
        return $r1;
    }
}
