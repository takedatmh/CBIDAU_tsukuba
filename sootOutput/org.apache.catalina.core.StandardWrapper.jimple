public class org.apache.catalina.core.StandardWrapper extends org.apache.catalina.core.ContainerBase implements javax.servlet.ServletConfig, org.apache.catalina.Wrapper, javax.management.NotificationEmitter
{
    private final org.apache.juli.logging.Log log;
    protected static final java.lang.String[] DEFAULT_SERVLET_METHODS;
    protected long available;
    protected javax.management.NotificationBroadcasterSupport broadcaster;
    protected java.util.concurrent.atomic.AtomicInteger countAllocated;
    protected org.apache.catalina.core.StandardWrapperFacade facade;
    protected static final java.lang.String info;
    protected volatile javax.servlet.Servlet instance;
    protected volatile boolean instanceInitialized;
    protected org.apache.catalina.util.InstanceSupport instanceSupport;
    protected int loadOnStartup;
    protected java.util.ArrayList mappings;
    protected java.util.HashMap parameters;
    protected java.util.HashMap references;
    protected java.lang.String runAs;
    protected long sequenceNumber;
    protected java.lang.String servletClass;
    protected volatile boolean singleThreadModel;
    protected volatile boolean unloading;
    protected int maxInstances;
    protected int nInstances;
    protected java.util.Stack instancePool;
    protected long unloadDelay;
    protected boolean isJspServlet;
    protected javax.management.ObjectName jspMonitorON;
    protected boolean swallowOutput;
    protected org.apache.catalina.core.StandardWrapperValve swValve;
    protected long loadTime;
    protected int classLoadTime;
    protected javax.servlet.MultipartConfigElement multipartConfigElement;
    protected boolean asyncSupported;
    protected boolean enabled;
    private boolean overridable;
    protected static java.lang.Class[] classType;
    protected static java.lang.Class[] classTypeUsedInService;
    private final java.util.concurrent.locks.ReentrantReadWriteLock parametersLock;
    private final java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock;
    private final java.util.concurrent.locks.ReentrantReadWriteLock referencesLock;
    protected javax.management.MBeanNotificationInfo[] notificationInfo;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.lang.Class[] $r1, $r2;

        $r0 = newarray (java.lang.String)[3];
        $r0[0] = "GET";
        $r0[1] = "HEAD";
        $r0[2] = "POST";
        <org.apache.catalina.core.StandardWrapper: java.lang.String[] DEFAULT_SERVLET_METHODS> = $r0;
        $r1 = newarray (java.lang.Class)[1];
        $r1[0] = class "javax/servlet/ServletConfig";
        <org.apache.catalina.core.StandardWrapper: java.lang.Class[] classType> = $r1;
        $r2 = newarray (java.lang.Class)[2];
        $r2[0] = class "javax/servlet/ServletRequest";
        $r2[1] = class "javax/servlet/ServletResponse";
        <org.apache.catalina.core.StandardWrapper: java.lang.Class[] classTypeUsedInService> = $r2;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.juli.logging.Log $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        org.apache.catalina.core.StandardWrapperFacade $r3;
        org.apache.catalina.util.InstanceSupport $r4;
        java.util.ArrayList $r5;
        java.util.HashMap $r6, $r7;
        java.util.concurrent.locks.ReentrantReadWriteLock $r8, $r9, $r10;
        org.apache.catalina.core.StandardWrapperValve $r11, $r13;
        org.apache.catalina.Pipeline $r12;
        javax.management.NotificationBroadcasterSupport $r14;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        specialinvoke r0.<org.apache.catalina.core.ContainerBase: void <init>()>();
        $r1 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/core/StandardWrapper");
        r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log> = $r1;
        r0.<org.apache.catalina.core.StandardWrapper: long available> = 0L;
        r0.<org.apache.catalina.core.StandardWrapper: javax.management.NotificationBroadcasterSupport broadcaster> = null;
        $r2 = new java.util.concurrent.atomic.AtomicInteger;
        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);
        r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated> = $r2;
        $r3 = new org.apache.catalina.core.StandardWrapperFacade;
        specialinvoke $r3.<org.apache.catalina.core.StandardWrapperFacade: void <init>(org.apache.catalina.core.StandardWrapper)>(r0);
        r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperFacade facade> = $r3;
        r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance> = null;
        r0.<org.apache.catalina.core.StandardWrapper: boolean instanceInitialized> = 0;
        $r4 = new org.apache.catalina.util.InstanceSupport;
        specialinvoke $r4.<org.apache.catalina.util.InstanceSupport: void <init>(org.apache.catalina.Wrapper)>(r0);
        r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport> = $r4;
        r0.<org.apache.catalina.core.StandardWrapper: int loadOnStartup> = -1;
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.catalina.core.StandardWrapper: java.util.ArrayList mappings> = $r5;
        $r6 = new java.util.HashMap;
        specialinvoke $r6.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap parameters> = $r6;
        $r7 = new java.util.HashMap;
        specialinvoke $r7.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap references> = $r7;
        r0.<org.apache.catalina.core.StandardWrapper: java.lang.String runAs> = null;
        r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber> = 0L;
        r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass> = null;
        r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel> = 0;
        r0.<org.apache.catalina.core.StandardWrapper: boolean unloading> = 0;
        r0.<org.apache.catalina.core.StandardWrapper: int maxInstances> = 20;
        r0.<org.apache.catalina.core.StandardWrapper: int nInstances> = 0;
        r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool> = null;
        r0.<org.apache.catalina.core.StandardWrapper: long unloadDelay> = 2000L;
        r0.<org.apache.catalina.core.StandardWrapper: boolean swallowOutput> = 0;
        r0.<org.apache.catalina.core.StandardWrapper: long loadTime> = 0L;
        r0.<org.apache.catalina.core.StandardWrapper: int classLoadTime> = 0;
        r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.MultipartConfigElement multipartConfigElement> = null;
        r0.<org.apache.catalina.core.StandardWrapper: boolean asyncSupported> = 0;
        r0.<org.apache.catalina.core.StandardWrapper: boolean enabled> = 1;
        r0.<org.apache.catalina.core.StandardWrapper: boolean overridable> = 0;
        $r8 = new java.util.concurrent.locks.ReentrantReadWriteLock;
        specialinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();
        r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock> = $r8;
        $r9 = new java.util.concurrent.locks.ReentrantReadWriteLock;
        specialinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();
        r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock> = $r9;
        $r10 = new java.util.concurrent.locks.ReentrantReadWriteLock;
        specialinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();
        r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock> = $r10;
        $r11 = new org.apache.catalina.core.StandardWrapperValve;
        specialinvoke $r11.<org.apache.catalina.core.StandardWrapperValve: void <init>()>();
        r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve> = $r11;
        $r12 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Pipeline pipeline>;
        $r13 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        interfaceinvoke $r12.<org.apache.catalina.Pipeline: void setBasic(org.apache.catalina.Valve)>($r13);
        $r14 = new javax.management.NotificationBroadcasterSupport;
        specialinvoke $r14.<javax.management.NotificationBroadcasterSupport: void <init>()>();
        r0.<org.apache.catalina.core.StandardWrapper: javax.management.NotificationBroadcasterSupport broadcaster> = $r14;
        return;
    }

    public boolean isOverridable()
    {
        org.apache.catalina.core.StandardWrapper r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $z0 = r0.<org.apache.catalina.core.StandardWrapper: boolean overridable>;
        return $z0;
    }

    public void setOverridable(boolean)
    {
        org.apache.catalina.core.StandardWrapper r0;
        boolean z0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.core.StandardWrapper: boolean overridable> = z0;
        return;
    }

    public long getAvailable()
    {
        org.apache.catalina.core.StandardWrapper r0;
        long $l0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $l0 = r0.<org.apache.catalina.core.StandardWrapper: long available>;
        return $l0;
    }

    public void setAvailable(long)
    {
        org.apache.catalina.core.StandardWrapper r0;
        long l0, l1, $l2, $l4;
        byte $b3;
        java.beans.PropertyChangeSupport $r1;
        java.lang.Long $r2, $r3;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        l0 := @parameter0: long;
        l1 = r0.<org.apache.catalina.core.StandardWrapper: long available>;
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $b3 = l0 cmp $l2;
        if $b3 <= 0 goto label0;

        r0.<org.apache.catalina.core.StandardWrapper: long available> = l0;
        goto label1;

     label0:
        r0.<org.apache.catalina.core.StandardWrapper: long available> = 0L;

     label1:
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: java.beans.PropertyChangeSupport support>;
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);
        $l4 = r0.<org.apache.catalina.core.StandardWrapper: long available>;
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);
        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("available", $r2, $r3);
        return;
    }

    public int getCountAllocated()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated>;
        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();
        return $i0;
    }

    public java.lang.String getInfo()
    {
        org.apache.catalina.core.StandardWrapper r0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        return "org.apache.catalina.core.StandardWrapper/1.0";
    }

    public org.apache.catalina.util.InstanceSupport getInstanceSupport()
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.util.InstanceSupport $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        return $r1;
    }

    public int getLoadOnStartup()
    {
        org.apache.catalina.core.StandardWrapper r0;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $z0 = r0.<org.apache.catalina.core.StandardWrapper: boolean isJspServlet>;
        if $z0 == 0 goto label0;

        $i0 = r0.<org.apache.catalina.core.StandardWrapper: int loadOnStartup>;
        if $i0 >= 0 goto label0;

        return 2147483647;

     label0:
        $i1 = r0.<org.apache.catalina.core.StandardWrapper: int loadOnStartup>;
        return $i1;
    }

    public void setLoadOnStartup(int)
    {
        org.apache.catalina.core.StandardWrapper r0;
        int i0, i1, $i2;
        java.beans.PropertyChangeSupport $r1;
        java.lang.Integer $r2, $r3;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        i0 := @parameter0: int;
        i1 = r0.<org.apache.catalina.core.StandardWrapper: int loadOnStartup>;
        r0.<org.apache.catalina.core.StandardWrapper: int loadOnStartup> = i0;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: java.beans.PropertyChangeSupport support>;
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $i2 = r0.<org.apache.catalina.core.StandardWrapper: int loadOnStartup>;
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("loadOnStartup", $r2, $r3);
        return;
    }

    public void setLoadOnStartupString(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1;
        java.lang.NumberFormatException r2, $r3;
        int $i0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;

     label0:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void setLoadOnStartup(int)>($i0);

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        r2 = $r3;
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void setLoadOnStartup(int)>(0);

     label3:
        return;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public java.lang.String getLoadOnStartupString()
    {
        org.apache.catalina.core.StandardWrapper r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $i0 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: int getLoadOnStartup()>();
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);
        return $r1;
    }

    public int getMaxInstances()
    {
        org.apache.catalina.core.StandardWrapper r0;
        int $i0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $i0 = r0.<org.apache.catalina.core.StandardWrapper: int maxInstances>;
        return $i0;
    }

    public void setMaxInstances(int)
    {
        org.apache.catalina.core.StandardWrapper r0;
        int i0, i1, $i2;
        java.beans.PropertyChangeSupport $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        i0 := @parameter0: int;
        i1 = r0.<org.apache.catalina.core.StandardWrapper: int maxInstances>;
        r0.<org.apache.catalina.core.StandardWrapper: int maxInstances> = i0;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: java.beans.PropertyChangeSupport support>;
        $i2 = r0.<org.apache.catalina.core.StandardWrapper: int maxInstances>;
        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,int,int)>("maxInstances", i1, $i2);
        return;
    }

    public void setParent(org.apache.catalina.Container)
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.Container r1;
        org.apache.tomcat.util.res.StringManager $r2;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;
        org.apache.catalina.core.StandardContext $r5, $r6;
        long $l0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: org.apache.catalina.Container;
        if r1 == null goto label0;

        $z0 = r1 instanceof org.apache.catalina.Context;
        if $z0 != 0 goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardWrapper.notContext");
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        $z1 = r1 instanceof org.apache.catalina.core.StandardContext;
        if $z1 == 0 goto label1;

        $r5 = (org.apache.catalina.core.StandardContext) r1;
        $z2 = virtualinvoke $r5.<org.apache.catalina.core.StandardContext: boolean getSwallowOutput()>();
        r0.<org.apache.catalina.core.StandardWrapper: boolean swallowOutput> = $z2;
        $r6 = (org.apache.catalina.core.StandardContext) r1;
        $l0 = virtualinvoke $r6.<org.apache.catalina.core.StandardContext: long getUnloadDelay()>();
        r0.<org.apache.catalina.core.StandardWrapper: long unloadDelay> = $l0;

     label1:
        specialinvoke r0.<org.apache.catalina.core.ContainerBase: void setParent(org.apache.catalina.Container)>(r1);
        return;
    }

    public java.lang.String getRunAs()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String runAs>;
        return $r1;
    }

    public void setRunAs(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1, r2, $r4;
        java.beans.PropertyChangeSupport $r3;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;
        r2 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String runAs>;
        r0.<org.apache.catalina.core.StandardWrapper: java.lang.String runAs> = r1;
        $r3 = r0.<org.apache.catalina.core.StandardWrapper: java.beans.PropertyChangeSupport support>;
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String runAs>;
        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("runAs", r2, $r4);
        return;
    }

    public java.lang.String getServletClass()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass>;
        return $r1;
    }

    public void setServletClass(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1, r2, $r4, $r5;
        java.beans.PropertyChangeSupport $r3;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;
        r2 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass>;
        r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass> = r1;
        $r3 = r0.<org.apache.catalina.core.StandardWrapper: java.beans.PropertyChangeSupport support>;
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass>;
        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("servletClass", r2, $r4);
        $r5 = "org.apache.jasper.servlet.JspServlet";
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z0 == 0 goto label0;

        r0.<org.apache.catalina.core.StandardWrapper: boolean isJspServlet> = 1;

     label0:
        return;
    }

    public void setServletName(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void setName(java.lang.String)>(r1);
        return;
    }

    public java.lang.Boolean isSingleThreadModel()
    {
        org.apache.catalina.core.StandardWrapper r0;
        boolean $z0, $z1;
        javax.servlet.Servlet $r1;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $z0 = r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel>;
        if $z0 != 0 goto label0;

        $r1 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        if $r1 == null goto label1;

     label0:
        $z1 = r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel>;
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);
        return $r2;

     label1:
        return null;
    }

    public boolean isUnavailable()
    {
        org.apache.catalina.core.StandardWrapper r0;
        boolean $z0;
        long $l0, $l2, $l3;
        byte $b1, $b4;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $z0 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: boolean isEnabled()>();
        if $z0 != 0 goto label0;

        return 1;

     label0:
        $l0 = r0.<org.apache.catalina.core.StandardWrapper: long available>;
        $b1 = $l0 cmp 0L;
        if $b1 != 0 goto label1;

        return 0;

     label1:
        $l2 = r0.<org.apache.catalina.core.StandardWrapper: long available>;
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $b4 = $l2 cmp $l3;
        if $b4 > 0 goto label2;

        r0.<org.apache.catalina.core.StandardWrapper: long available> = 0L;
        return 0;

     label2:
        return 1;
    }

    public java.lang.String[] getServletMethods() throws javax.servlet.ServletException
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.Class r1, $r7;
        java.util.HashSet r2, $r9;
        java.lang.reflect.Method[] r3;
        int i0, $i1, $i2;
        java.lang.reflect.Method r4;
        javax.servlet.Servlet $r5, $r6;
        boolean $z0, $z3, $z6, $z8, $z10;
        java.lang.String[] $r8, r14, $r16;
        java.lang.String $r10, $r11, $r12, $r13;
        java.lang.Object[] $r15;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r5 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet loadServlet()>();
        r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance> = $r5;
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        r1 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();
        $r7 = class "javax/servlet/http/HttpServlet";
        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);
        if $z0 != 0 goto label0;

        $r8 = <org.apache.catalina.core.StandardWrapper: java.lang.String[] DEFAULT_SERVLET_METHODS>;
        return $r8;

     label0:
        $r9 = new java.util.HashSet;
        specialinvoke $r9.<java.util.HashSet: void <init>()>();
        r2 = $r9;
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("TRACE");
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("OPTIONS");
        r3 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)>(r1);
        i0 = 0;
        goto label6;

     label1:
        r4 = r3[i0];
        $r10 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("doGet");
        if $z3 == 0 goto label2;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("GET");
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("HEAD");
        goto label5;

     label2:
        $r11 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("doPost");
        if $z6 == 0 goto label3;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("POST");
        goto label5;

     label3:
        $r12 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
        $z8 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("doPut");
        if $z8 == 0 goto label4;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("PUT");
        goto label5;

     label4:
        $r13 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();
        $z10 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("doDelete");
        if $z10 == 0 goto label5;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>("DELETE");

     label5:
        i0 = i0 + 1;

     label6:
        if r3 == null goto label7;

        $i1 = lengthof r3;
        if i0 < $i1 goto label1;

     label7:
        $i2 = virtualinvoke r2.<java.util.HashSet: int size()>();
        r14 = newarray (java.lang.String)[$i2];
        $r15 = virtualinvoke r2.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>(r14);
        $r16 = (java.lang.String[]) $r15;
        return $r16;
    }

    public javax.servlet.Servlet getServlet()
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.servlet.Servlet $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        return $r1;
    }

    public void setServlet(javax.servlet.Servlet)
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.servlet.Servlet r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: javax.servlet.Servlet;
        r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance> = r1;
        return;
    }

    public void setServletSecurityAnnotationScanRequired(boolean)
    {
        org.apache.catalina.core.StandardWrapper r0;
        boolean z0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        z0 := @parameter0: boolean;
        return;
    }

    public void backgroundProcess()
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.LifecycleState $r1;
        boolean $z0, $z1;
        javax.servlet.Servlet $r2, $r3, $r4;
        org.apache.tomcat.PeriodicEventListener $r5;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        specialinvoke r0.<org.apache.catalina.core.ContainerBase: void backgroundProcess()>();
        $r1 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.LifecycleState getState()>();
        $z0 = virtualinvoke $r1.<org.apache.catalina.LifecycleState: boolean isAvailable()>();
        if $z0 != 0 goto label0;

        return;

     label0:
        $r2 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet getServlet()>();
        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet getServlet()>();
        $z1 = $r3 instanceof org.apache.tomcat.PeriodicEventListener;
        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet getServlet()>();
        $r5 = (org.apache.tomcat.PeriodicEventListener) $r4;
        interfaceinvoke $r5.<org.apache.tomcat.PeriodicEventListener: void periodicEvent()>();

     label1:
        return;
    }

    public static java.lang.Throwable getRootCause(javax.servlet.ServletException)
    {
        javax.servlet.ServletException r0;
        java.lang.Throwable r1, r2;
        null_type n0;
        int i0;

        r0 := @parameter0: javax.servlet.ServletException;
        r1 = r0;
        n0 = null;
        i0 = 0;

     label0:
        i0 = i0 + 1;
        r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.Throwable getCause()>();
        if r2 == null goto label1;

        r1 = r2;

     label1:
        if r2 == null goto label2;

        if i0 < 20 goto label0;

     label2:
        return r1;
    }

    public void addChild(org.apache.catalina.Container)
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.Container r1;
        java.lang.IllegalStateException $r2;
        org.apache.tomcat.util.res.StringManager $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: org.apache.catalina.Container;
        $r2 = new java.lang.IllegalStateException;
        $r3 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardWrapper.notChild");
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);
        throw $r2;
    }

    public void addInitParameter(java.lang.String, java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1, r2;
        java.lang.Throwable r3, $r8;
        java.util.concurrent.locks.ReentrantReadWriteLock $r4, $r9, $r11;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r5, $r10, $r12;
        java.util.HashMap $r6;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;

     label0:
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r5 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap parameters>;
        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        goto label2;

     label1:
        $r8 := @caughtexception;
        r3 = $r8;
        $r9 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r10 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        throw r3;

     label2:
        $r11 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r12 = virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void fireContainerEvent(java.lang.String,java.lang.Object)>("addInitParameter", r1);
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public void addInstanceListener(org.apache.catalina.InstanceListener)
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.InstanceListener r1;
        org.apache.catalina.util.InstanceSupport $r2;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: org.apache.catalina.InstanceListener;
        $r2 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        virtualinvoke $r2.<org.apache.catalina.util.InstanceSupport: void addInstanceListener(org.apache.catalina.InstanceListener)>(r1);
        return;
    }

    public void addMapping(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r6;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r7, $r9;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r4, $r8, $r10;
        java.util.ArrayList $r5;
        org.apache.catalina.Container $r11;
        org.apache.catalina.LifecycleState $r12, $r13;
        boolean $z1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;

     label0:
        $r3 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock>;
        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();
        $r5 = r0.<org.apache.catalina.core.StandardWrapper: java.util.ArrayList mappings>;
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);
        goto label2;

     label1:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock>;
        $r8 = virtualinvoke $r7.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        throw r2;

     label2:
        $r9 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock>;
        $r10 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        $r11 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container parent>;
        $r12 = interfaceinvoke $r11.<org.apache.catalina.Container: org.apache.catalina.LifecycleState getState()>();
        $r13 = <org.apache.catalina.LifecycleState: org.apache.catalina.LifecycleState STARTED>;
        $z1 = virtualinvoke $r12.<org.apache.catalina.LifecycleState: boolean equals(java.lang.Object)>($r13);
        if $z1 == 0 goto label3;

        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void fireContainerEvent(java.lang.String,java.lang.Object)>("addMapping", r1);

     label3:
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public void addSecurityReference(java.lang.String, java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1, r2;
        java.lang.Throwable r3, $r8;
        java.util.concurrent.locks.ReentrantReadWriteLock $r4, $r9, $r11;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r5, $r10, $r12;
        java.util.HashMap $r6;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;

     label0:
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r5 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap references>;
        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        goto label2;

     label1:
        $r8 := @caughtexception;
        r3 = $r8;
        $r9 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r10 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        throw r3;

     label2:
        $r11 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r12 = virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void fireContainerEvent(java.lang.String,java.lang.Object)>("addSecurityReference", r1);
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public javax.servlet.Servlet allocate() throws javax.servlet.ServletException
    {
        org.apache.catalina.core.StandardWrapper r0, r2;
        org.apache.tomcat.util.res.StringManager $r1, $r19, $r45;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        javax.servlet.ServletException r3, $r4, $r15, $r18, $r40, r41, $r44;
        java.lang.Object[] $r5;
        java.lang.String $r6, $r7, $r20, $r46;
        javax.servlet.Servlet $r8, $r10, $r13, $r21, $r26, $r33, $r37, $r56;
        org.apache.juli.logging.Log $r11, $r12, $r30, $r31, $r51, $r52;
        java.util.concurrent.atomic.AtomicInteger $r14, $r32, $r50, $r53;
        java.lang.Throwable $r16, r17, $r22, $r29, $r42, r43, $r57;
        java.util.Stack $r23, r24, $r25, $r34, r35, $r36, $r47, $r54;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.InterruptedException $r48, r49;
        java.lang.Object $r55;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $z1 = r0.<org.apache.catalina.core.StandardWrapper: boolean unloading>;
        if $z1 == 0 goto label0;

        $r4 = new javax.servlet.ServletException;
        $r1 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r6 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r5[0] = $r6;
        $r7 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.unloading", $r5);
        specialinvoke $r4.<javax.servlet.ServletException: void <init>(java.lang.String)>($r7);
        throw $r4;

     label0:
        z0 = 0;
        $z2 = r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel>;
        if $z2 != 0 goto label23;

        $r8 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        if $r8 == null goto label1;

        $z3 = r0.<org.apache.catalina.core.StandardWrapper: boolean instanceInitialized>;
        if $z3 != 0 goto label14;

     label1:
        r2 = r0;
        entermonitor r0;

     label2:
        $r10 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        if $r10 != null goto label8;

     label3:
        $r11 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r11.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label4;

        $r12 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Allocating non-STM instance");

     label4:
        $r13 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet loadServlet()>();
        r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance> = $r13;
        z0 = 1;
        $z5 = r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel>;
        if $z5 != 0 goto label8;

        $r14 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated>;
        virtualinvoke $r14.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;
        r3 = $r15;
        throw r3;

     label7:
        $r16 := @caughtexception;
        r17 = $r16;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r17);
        $r18 = new javax.servlet.ServletException;
        $r19 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardWrapper.allocate");
        specialinvoke $r18.<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>($r20, r17);
        throw $r18;

     label8:
        $z6 = r0.<org.apache.catalina.core.StandardWrapper: boolean instanceInitialized>;
        if $z6 != 0 goto label9;

        $r21 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        specialinvoke r0.<org.apache.catalina.core.StandardWrapper: void initServlet(javax.servlet.Servlet)>($r21);

     label9:
        exitmonitor r2;

     label10:
        goto label14;

     label11:
        $r22 := @caughtexception;

     label12:
        exitmonitor r2;

     label13:
        throw $r22;

     label14:
        $z7 = r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel>;
        if $z7 == 0 goto label20;

        if z0 == 0 goto label23;

        $r23 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        r24 = $r23;
        entermonitor $r23;

     label15:
        $r25 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        $r26 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        virtualinvoke $r25.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r26);
        $i1 = r0.<org.apache.catalina.core.StandardWrapper: int nInstances>;
        $i2 = $i1 + 1;
        r0.<org.apache.catalina.core.StandardWrapper: int nInstances> = $i2;
        exitmonitor r24;

     label16:
        goto label23;

     label17:
        $r29 := @caughtexception;

     label18:
        exitmonitor r24;

     label19:
        throw $r29;

     label20:
        $r30 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        $z8 = interfaceinvoke $r30.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z8 == 0 goto label21;

        $r31 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        interfaceinvoke $r31.<org.apache.juli.logging.Log: void trace(java.lang.Object)>("  Returning non-STM instance");

     label21:
        if z0 != 0 goto label22;

        $r32 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated>;
        virtualinvoke $r32.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label22:
        $r33 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        return $r33;

     label23:
        $r34 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        r35 = $r34;
        entermonitor $r34;

     label24:
        goto label33;

     label25:
        $i4 = r0.<org.apache.catalina.core.StandardWrapper: int nInstances>;
        $i5 = r0.<org.apache.catalina.core.StandardWrapper: int maxInstances>;
        if $i4 >= $i5 goto label30;

     label26:
        $r36 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        $r37 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet loadServlet()>();
        virtualinvoke $r36.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r37);
        $i6 = r0.<org.apache.catalina.core.StandardWrapper: int nInstances>;
        $i7 = $i6 + 1;
        r0.<org.apache.catalina.core.StandardWrapper: int nInstances> = $i7;

     label27:
        goto label33;

     label28:
        $r40 := @caughtexception;
        r41 = $r40;
        throw r41;

     label29:
        $r42 := @caughtexception;
        r43 = $r42;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r43);
        $r44 = new javax.servlet.ServletException;
        $r45 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r46 = virtualinvoke $r45.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardWrapper.allocate");
        specialinvoke $r44.<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>($r46, r43);
        throw $r44;

     label30:
        $r47 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        virtualinvoke $r47.<java.lang.Object: void wait()>();

     label31:
        goto label33;

     label32:
        $r48 := @caughtexception;
        r49 = $r48;

     label33:
        $r50 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated>;
        $i8 = virtualinvoke $r50.<java.util.concurrent.atomic.AtomicInteger: int get()>();
        $i9 = r0.<org.apache.catalina.core.StandardWrapper: int nInstances>;
        if $i8 >= $i9 goto label25;

        $r51 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        $z9 = interfaceinvoke $r51.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z9 == 0 goto label34;

        $r52 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        interfaceinvoke $r52.<org.apache.juli.logging.Log: void trace(java.lang.Object)>("  Returning allocated STM instance");

     label34:
        $r53 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated>;
        virtualinvoke $r53.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
        $r54 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        $r55 = virtualinvoke $r54.<java.util.Stack: java.lang.Object pop()>();
        $r56 = (javax.servlet.Servlet) $r55;
        exitmonitor r35;

     label35:
        return $r56;

     label36:
        $r57 := @caughtexception;

     label37:
        exitmonitor r35;

     label38:
        throw $r57;

        catch javax.servlet.ServletException from label3 to label5 with label6;
        catch java.lang.Throwable from label3 to label5 with label7;
        catch java.lang.Throwable from label2 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch javax.servlet.ServletException from label26 to label27 with label28;
        catch java.lang.Throwable from label26 to label27 with label29;
        catch java.lang.InterruptedException from label30 to label31 with label32;
        catch java.lang.Throwable from label24 to label35 with label36;
        catch java.lang.Throwable from label37 to label38 with label36;
    }

    public void deallocate(javax.servlet.Servlet) throws javax.servlet.ServletException
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.servlet.Servlet r1;
        java.util.Stack r2, $r4, $r6, $r8;
        boolean $z0;
        java.util.concurrent.atomic.AtomicInteger $r3, $r5;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: javax.servlet.Servlet;
        $z0 = r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel>;
        if $z0 != 0 goto label0;

        $r3 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated>;
        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();
        return;

     label0:
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        r2 = $r4;
        entermonitor $r4;

     label1:
        $r5 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated>;
        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);
        $r8 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        virtualinvoke $r8.<java.lang.Object: void notify()>();
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String findInitParameter(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1, r2;
        java.lang.Throwable r3, $r10;
        java.util.concurrent.locks.ReentrantReadWriteLock $r4, $r8, $r11;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r5, $r9, $r12;
        java.util.HashMap $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;

     label0:
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r5 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>();
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap parameters>;
        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (java.lang.String) $r7;

     label1:
        $r8 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r9 = virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        return r2;

     label2:
        $r10 := @caughtexception;
        r3 = $r10;
        $r11 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r12 = virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String[] findInitParameters()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String[] r1, r2;
        java.lang.Throwable r3, $r12;
        java.util.concurrent.locks.ReentrantReadWriteLock $r4, $r10, $r13;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r5, $r11, $r14;
        java.util.HashMap $r6, $r7;
        int $i0;
        java.util.Set $r8;
        java.lang.Object[] $r9;

        r0 := @this: org.apache.catalina.core.StandardWrapper;

     label0:
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r5 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>();
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap parameters>;
        $i0 = virtualinvoke $r6.<java.util.HashMap: int size()>();
        r1 = newarray (java.lang.String)[$i0];
        $r7 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap parameters>;
        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Set keySet()>();
        $r9 = interfaceinvoke $r8.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r1);
        r2 = (java.lang.String[]) $r9;

     label1:
        $r10 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r11 = virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        return r2;

     label2:
        $r12 := @caughtexception;
        r3 = $r12;
        $r13 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r14 = virtualinvoke $r13.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r14.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String[] findMappings()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String[] r1, $r7;
        java.lang.Throwable r2, $r11;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r9, $r12;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r4, $r10, $r13;
        java.util.ArrayList $r5, $r6;
        int $i0;
        java.lang.Object[] $r8;

        r0 := @this: org.apache.catalina.core.StandardWrapper;

     label0:
        $r3 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock>;
        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>();
        $r5 = r0.<org.apache.catalina.core.StandardWrapper: java.util.ArrayList mappings>;
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: java.util.ArrayList mappings>;
        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();
        $r7 = newarray (java.lang.String)[$i0];
        $r8 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);
        r1 = (java.lang.String[]) $r8;

     label1:
        $r9 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock>;
        $r10 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        return r1;

     label2:
        $r11 := @caughtexception;
        r2 = $r11;
        $r12 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock>;
        $r13 = virtualinvoke $r12.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r13.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String findSecurityReference(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1, r2;
        java.lang.Throwable r3, $r10;
        java.util.concurrent.locks.ReentrantReadWriteLock $r4, $r8, $r11;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r5, $r9, $r12;
        java.util.HashMap $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;

     label0:
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r5 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>();
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap references>;
        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (java.lang.String) $r7;

     label1:
        $r8 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r9 = virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        return r2;

     label2:
        $r10 := @caughtexception;
        r3 = $r10;
        $r11 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r12 = virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String[] findSecurityReferences()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String[] r1, r2;
        java.lang.Throwable r3, $r12;
        java.util.concurrent.locks.ReentrantReadWriteLock $r4, $r10, $r13;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r5, $r11, $r14;
        java.util.HashMap $r6, $r7;
        int $i0;
        java.util.Set $r8;
        java.lang.Object[] $r9;

        r0 := @this: org.apache.catalina.core.StandardWrapper;

     label0:
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r5 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>();
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap references>;
        $i0 = virtualinvoke $r6.<java.util.HashMap: int size()>();
        r1 = newarray (java.lang.String)[$i0];
        $r7 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap references>;
        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Set keySet()>();
        $r9 = interfaceinvoke $r8.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r1);
        r2 = (java.lang.String[]) $r9;

     label1:
        $r10 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r11 = virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        return r2;

     label2:
        $r12 := @caughtexception;
        r3 = $r12;
        $r13 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r14 = virtualinvoke $r13.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r14.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public org.apache.catalina.Wrapper findMappingObject()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.Object $r1;
        org.apache.catalina.Wrapper $r2;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.Object getMappingObject()>();
        $r2 = (org.apache.catalina.Wrapper) $r1;
        return $r2;
    }

    public synchronized void load() throws javax.servlet.ServletException
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.StringBuilder r1, $r5, $r20, $r22;
        java.lang.Exception r2, $r18;
        javax.servlet.Servlet $r3, $r4, $r16, $r21;
        boolean $z0, $z1;
        org.apache.catalina.Container $r6;
        java.lang.String $r7, $r9, $r11, $r14, $r23;
        javax.management.ObjectName $r13, $r17;
        org.apache.tomcat.util.modeler.Registry $r15;
        org.apache.juli.logging.Log $r19;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r3 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet loadServlet()>();
        r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance> = $r3;
        $z0 = r0.<org.apache.catalina.core.StandardWrapper: boolean instanceInitialized>;
        if $z0 != 0 goto label0;

        $r4 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        specialinvoke r0.<org.apache.catalina.core.StandardWrapper: void initServlet(javax.servlet.Servlet)>($r4);

     label0:
        $z1 = r0.<org.apache.catalina.core.StandardWrapper: boolean isJspServlet>;
        if $z1 == 0 goto label4;

        $r5 = new java.lang.StringBuilder;
        $r6 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r7 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String getDomain(org.apache.catalina.Container)>($r6);
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);
        r1 = $r5;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=JspMonitor,name=");
        $r9 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = specialinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getWebModuleKeyProperties()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label1:
        $r13 = new javax.management.ObjectName;
        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r13.<javax.management.ObjectName: void <init>(java.lang.String)>($r14);
        r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName jspMonitorON> = $r13;
        $r15 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        $r16 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        $r17 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName jspMonitorON>;
        virtualinvoke $r15.<org.apache.tomcat.util.modeler.Registry: void registerComponent(java.lang.Object,javax.management.ObjectName,java.lang.String)>($r16, $r17, null);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;
        r2 = $r18;
        $r19 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error registering JSP monitoring with jmx ");
        $r21 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r19.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r23);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public synchronized javax.servlet.Servlet loadServlet() throws javax.servlet.ServletException
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.tomcat.util.res.StringManager $r1, $r16, $r26, $r35, $r40;
        java.io.PrintStream r2;
        long l0, $l1, $l2, $l4, $l5;
        org.apache.tomcat.InstanceManager r3;
        javax.servlet.Servlet r4, $r12, $r13;
        java.lang.ClassCastException r5, $r24;
        java.lang.Throwable r6, $r30, r31, r32, $r55;
        java.lang.String r7, $r10, $r11, $r14, $r18, $r19, $r22, $r28, $r29, $r37, $r38, $r42, $r43, $r49, r58;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        javax.servlet.ServletException $r8, $r15, $r25, $r39;
        java.lang.Object[] $r9, $r17, $r27, $r36, $r41;
        org.apache.catalina.Container $r20, $r50;
        org.apache.catalina.core.StandardContext $r21;
        java.lang.Object $r23;
        org.apache.juli.logging.Log $r33, $r34;
        javax.servlet.MultipartConfigElement $r44, $r48;
        java.lang.Class $r45;
        java.lang.annotation.Annotation $r46;
        javax.servlet.annotation.MultipartConfig r47;
        org.apache.catalina.Context $r51;
        org.apache.catalina.ContainerServlet $r52;
        int $i3, $i6, $i7;
        java.util.Stack $r53, $r54;
        javax.servlet.ServletContext $r56, $r57, $r59, $r60;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $z0 = r0.<org.apache.catalina.core.StandardWrapper: boolean unloading>;
        if $z0 == 0 goto label0;

        $r8 = new javax.servlet.ServletException;
        $r1 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = newarray (java.lang.Object)[1];
        $r10 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r9[0] = $r10;
        $r11 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.unloading", $r9);
        specialinvoke $r8.<javax.servlet.ServletException: void <init>(java.lang.String)>($r11);
        throw $r8;

     label0:
        $z1 = r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel>;
        if $z1 != 0 goto label1;

        $r12 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        if $r12 == null goto label1;

        $r13 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        return $r13;

     label1:
        r2 = <java.lang.System: java.io.PrintStream out>;
        $z2 = r0.<org.apache.catalina.core.StandardWrapper: boolean swallowOutput>;
        if $z2 == 0 goto label2;

        staticinvoke <org.apache.tomcat.util.log.SystemLogHandler: void startCapture()>();

     label2:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r14 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass>;
        if $r14 != null goto label3;

        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void unavailable(javax.servlet.UnavailableException)>(null);
        $r15 = new javax.servlet.ServletException;
        $r16 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r17 = newarray (java.lang.Object)[1];
        $r18 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r17[0] = $r18;
        $r19 = virtualinvoke $r16.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.notClass", $r17);
        specialinvoke $r15.<javax.servlet.ServletException: void <init>(java.lang.String)>($r19);
        throw $r15;

     label3:
        $r20 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r21 = (org.apache.catalina.core.StandardContext) $r20;
        r3 = virtualinvoke $r21.<org.apache.catalina.core.StandardContext: org.apache.tomcat.InstanceManager getInstanceManager()>();

     label4:
        $r22 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass>;
        $r23 = interfaceinvoke r3.<org.apache.tomcat.InstanceManager: java.lang.Object newInstance(java.lang.String)>($r22);
        r4 = (javax.servlet.Servlet) $r23;

     label5:
        goto label9;

     label6:
        $r24 := @caughtexception;
        r5 = $r24;
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void unavailable(javax.servlet.UnavailableException)>(null);
        $r25 = new javax.servlet.ServletException;
        $r26 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r27 = newarray (java.lang.Object)[1];
        $r28 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass>;
        $r27[0] = $r28;
        $r29 = virtualinvoke $r26.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.notServlet", $r27);
        specialinvoke $r25.<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>($r29, r5);
        throw $r25;

     label7:
        $r30 := @caughtexception;
        r31 = $r30;
        r32 = staticinvoke <org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>(r31);
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r32);
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void unavailable(javax.servlet.UnavailableException)>(null);
        $r33 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r33.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label8;

        $r34 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        $r35 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r36 = newarray (java.lang.Object)[1];
        $r37 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass>;
        $r36[0] = $r37;
        $r38 = virtualinvoke $r35.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.instantiate", $r36);
        interfaceinvoke $r34.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r38, r32);

     label8:
        $r39 = new javax.servlet.ServletException;
        $r40 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r41 = newarray (java.lang.Object)[1];
        $r42 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass>;
        $r41[0] = $r42;
        $r43 = virtualinvoke $r40.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.instantiate", $r41);
        specialinvoke $r39.<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>($r43, r32);
        throw $r39;

     label9:
        $r44 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.MultipartConfigElement multipartConfigElement>;
        if $r44 != null goto label10;

        $r45 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r46 = virtualinvoke $r45.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "javax/servlet/annotation/MultipartConfig");
        r47 = (javax.servlet.annotation.MultipartConfig) $r46;
        if r47 == null goto label10;

        $r48 = new javax.servlet.MultipartConfigElement;
        specialinvoke $r48.<javax.servlet.MultipartConfigElement: void <init>(javax.servlet.annotation.MultipartConfig)>(r47);
        r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.MultipartConfigElement multipartConfigElement> = $r48;

     label10:
        $z4 = r4 instanceof org.apache.catalina.ContainerServlet;
        if $z4 == 0 goto label12;

        $r49 = r0.<org.apache.catalina.core.StandardWrapper: java.lang.String servletClass>;
        $z5 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: boolean isContainerProvidedServlet(java.lang.String)>($r49);
        if $z5 != 0 goto label11;

        $r50 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r51 = (org.apache.catalina.Context) $r50;
        $z6 = interfaceinvoke $r51.<org.apache.catalina.Context: boolean getPrivileged()>();
        if $z6 == 0 goto label12;

     label11:
        $r52 = (org.apache.catalina.ContainerServlet) r4;
        interfaceinvoke $r52.<org.apache.catalina.ContainerServlet: void setWrapper(org.apache.catalina.Wrapper)>(r0);

     label12:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l2 = $l1 - l0;
        $i3 = (int) $l2;
        r0.<org.apache.catalina.core.StandardWrapper: int classLoadTime> = $i3;
        $z7 = r4 instanceof javax.servlet.SingleThreadModel;
        if $z7 == 0 goto label14;

        $r53 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        if $r53 != null goto label13;

        $r54 = new java.util.Stack;
        specialinvoke $r54.<java.util.Stack: void <init>()>();
        r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool> = $r54;

     label13:
        r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel> = 1;

     label14:
        specialinvoke r0.<org.apache.catalina.core.StandardWrapper: void initServlet(javax.servlet.Servlet)>(r4);
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void fireContainerEvent(java.lang.String,java.lang.Object)>("load", r0);
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l5 = $l4 - l0;
        r0.<org.apache.catalina.core.StandardWrapper: long loadTime> = $l5;
        goto label18;

     label15:
        $r55 := @caughtexception;
        r6 = $r55;
        $z8 = r0.<org.apache.catalina.core.StandardWrapper: boolean swallowOutput>;
        if $z8 == 0 goto label17;

        r7 = staticinvoke <org.apache.tomcat.util.log.SystemLogHandler: java.lang.String stopCapture()>();
        if r7 == null goto label17;

        $i6 = virtualinvoke r7.<java.lang.String: int length()>();
        if $i6 <= 0 goto label17;

        $r56 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        if $r56 == null goto label16;

        $r57 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        interfaceinvoke $r57.<javax.servlet.ServletContext: void log(java.lang.String)>(r7);
        goto label17;

     label16:
        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>(r7);

     label17:
        throw r6;

     label18:
        $z9 = r0.<org.apache.catalina.core.StandardWrapper: boolean swallowOutput>;
        if $z9 == 0 goto label20;

        r58 = staticinvoke <org.apache.tomcat.util.log.SystemLogHandler: java.lang.String stopCapture()>();
        if r58 == null goto label20;

        $i7 = virtualinvoke r58.<java.lang.String: int length()>();
        if $i7 <= 0 goto label20;

        $r59 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        if $r59 == null goto label19;

        $r60 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        interfaceinvoke $r60.<javax.servlet.ServletContext: void log(java.lang.String)>(r58);
        goto label20;

     label19:
        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>(r58);

     label20:
        return r4;

        catch java.lang.ClassCastException from label4 to label5 with label6;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label2 to label15 with label15;
    }

    public void servletSecurityAnnotationScan() throws javax.servlet.ServletException
    {
        org.apache.catalina.core.StandardWrapper r0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        return;
    }

    private synchronized void initServlet(javax.servlet.Servlet) throws javax.servlet.ServletException
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.servlet.Servlet r1;
        boolean z0, $z1, $z2, $z3;
        java.lang.Object[] r2, $r5, $r23;
        java.lang.Throwable r3, $r8, $r17, r18;
        org.apache.catalina.util.InstanceSupport $r4, $r10, $r13, $r16, $r20;
        org.apache.catalina.core.StandardWrapperFacade $r6, $r9;
        java.lang.Class[] $r7;
        javax.servlet.UnavailableException $r11, r12;
        javax.servlet.ServletException $r14, r15, $r21;
        javax.servlet.ServletContext $r19;
        org.apache.tomcat.util.res.StringManager $r22;
        java.lang.String $r24, $r25;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: javax.servlet.Servlet;
        $z1 = r0.<org.apache.catalina.core.StandardWrapper: boolean instanceInitialized>;
        if $z1 == 0 goto label0;

        $z2 = r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel>;
        if $z2 != 0 goto label0;

        return;

     label0:
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        virtualinvoke $r4.<org.apache.catalina.util.InstanceSupport: void fireInstanceEvent(java.lang.String,javax.servlet.Servlet)>("beforeInit", r1);
        $z3 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z3 == 0 goto label5;

        z0 = 0;

     label1:
        $r5 = newarray (java.lang.Object)[1];
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperFacade facade>;
        $r5[0] = $r6;
        r2 = $r5;
        $r7 = <org.apache.catalina.core.StandardWrapper: java.lang.Class[] classType>;
        staticinvoke <org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[])>("init", r1, $r7, r2);
        z0 = 1;
        goto label4;

     label2:
        $r8 := @caughtexception;
        r3 = $r8;
        if z0 != 0 goto label3;

        staticinvoke <org.apache.catalina.security.SecurityUtil: void remove(java.lang.Object)>(r1);

     label3:
        throw r3;

     label4:
        if z0 != 0 goto label6;

        staticinvoke <org.apache.catalina.security.SecurityUtil: void remove(java.lang.Object)>(r1);
        goto label6;

     label5:
        $r9 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperFacade facade>;
        interfaceinvoke r1.<javax.servlet.Servlet: void init(javax.servlet.ServletConfig)>($r9);

     label6:
        r0.<org.apache.catalina.core.StandardWrapper: boolean instanceInitialized> = 1;
        $r10 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        virtualinvoke $r10.<org.apache.catalina.util.InstanceSupport: void fireInstanceEvent(java.lang.String,javax.servlet.Servlet)>("afterInit", r1);

     label7:
        goto label11;

     label8:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        virtualinvoke $r13.<org.apache.catalina.util.InstanceSupport: void fireInstanceEvent(java.lang.String,javax.servlet.Servlet,java.lang.Throwable)>("afterInit", r1, r12);
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void unavailable(javax.servlet.UnavailableException)>(r12);
        throw r12;

     label9:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        virtualinvoke $r16.<org.apache.catalina.util.InstanceSupport: void fireInstanceEvent(java.lang.String,javax.servlet.Servlet,java.lang.Throwable)>("afterInit", r1, r15);
        throw r15;

     label10:
        $r17 := @caughtexception;
        r18 = $r17;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r18);
        $r19 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        interfaceinvoke $r19.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>("StandardWrapper.Throwable", r18);
        $r20 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        virtualinvoke $r20.<org.apache.catalina.util.InstanceSupport: void fireInstanceEvent(java.lang.String,javax.servlet.Servlet,java.lang.Throwable)>("afterInit", r1, r18);
        $r21 = new javax.servlet.ServletException;
        $r22 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r23 = newarray (java.lang.Object)[1];
        $r24 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r23[0] = $r24;
        $r25 = virtualinvoke $r22.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.initException", $r23);
        specialinvoke $r21.<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>($r25, r18);
        throw $r21;

     label11:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch javax.servlet.UnavailableException from label0 to label7 with label8;
        catch javax.servlet.ServletException from label0 to label7 with label9;
        catch java.lang.Throwable from label0 to label7 with label10;
    }

    public void removeInitParameter(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r7;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r8, $r10;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r4, $r9, $r11;
        java.util.HashMap $r5;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;

     label0:
        $r3 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();
        $r5 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap parameters>;
        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        goto label2;

     label1:
        $r7 := @caughtexception;
        r2 = $r7;
        $r8 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r9 = virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        throw r2;

     label2:
        $r10 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r11 = virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void fireContainerEvent(java.lang.String,java.lang.Object)>("removeInitParameter", r1);
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public void removeInstanceListener(org.apache.catalina.InstanceListener)
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.InstanceListener r1;
        org.apache.catalina.util.InstanceSupport $r2;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: org.apache.catalina.InstanceListener;
        $r2 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        virtualinvoke $r2.<org.apache.catalina.util.InstanceSupport: void removeInstanceListener(org.apache.catalina.InstanceListener)>(r1);
        return;
    }

    public void removeMapping(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r6;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r7, $r9;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r4, $r8, $r10;
        java.util.ArrayList $r5;
        org.apache.catalina.Container $r11;
        org.apache.catalina.LifecycleState $r12, $r13;
        boolean $z1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;

     label0:
        $r3 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock>;
        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();
        $r5 = r0.<org.apache.catalina.core.StandardWrapper: java.util.ArrayList mappings>;
        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);
        goto label2;

     label1:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock>;
        $r8 = virtualinvoke $r7.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        throw r2;

     label2:
        $r9 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock mappingsLock>;
        $r10 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        $r11 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container parent>;
        $r12 = interfaceinvoke $r11.<org.apache.catalina.Container: org.apache.catalina.LifecycleState getState()>();
        $r13 = <org.apache.catalina.LifecycleState: org.apache.catalina.LifecycleState STARTED>;
        $z1 = virtualinvoke $r12.<org.apache.catalina.LifecycleState: boolean equals(java.lang.Object)>($r13);
        if $z1 == 0 goto label3;

        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void fireContainerEvent(java.lang.String,java.lang.Object)>("removeMapping", r1);

     label3:
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public void removeSecurityReference(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r7;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r8, $r10;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r4, $r9, $r11;
        java.util.HashMap $r5;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;

     label0:
        $r3 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();
        $r5 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap references>;
        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        goto label2;

     label1:
        $r7 := @caughtexception;
        r2 = $r7;
        $r8 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r9 = virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        throw r2;

     label2:
        $r10 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock referencesLock>;
        $r11 = virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();
        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void fireContainerEvent(java.lang.String,java.lang.Object)>("removeSecurityReference", r1);
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public java.lang.String toString()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.StringBuilder $r1, r2;
        org.apache.catalina.Container $r3, $r4;
        java.lang.String $r5, $r9, $r12;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r3 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        if $r3 == null goto label0;

        $r4 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label0:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StandardWrapper[");
        $r9 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r12;
    }

    public void unavailable(javax.servlet.UnavailableException)
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.servlet.UnavailableException r1;
        org.apache.tomcat.util.res.StringManager $r2;
        int i0;
        javax.servlet.ServletContext $r3;
        java.lang.Object[] $r4;
        java.lang.String $r5, $r6;
        boolean $z0;
        long $l1, $l2, $l3, $l4;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: javax.servlet.UnavailableException;
        $r3 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        $r2 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = newarray (java.lang.Object)[1];
        $r5 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r4[0] = $r5;
        $r6 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.unavailable", $r4);
        interfaceinvoke $r3.<javax.servlet.ServletContext: void log(java.lang.String)>($r6);
        if r1 != null goto label0;

        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void setAvailable(long)>(9223372036854775807L);
        goto label3;

     label0:
        $z0 = virtualinvoke r1.<javax.servlet.UnavailableException: boolean isPermanent()>();
        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void setAvailable(long)>(9223372036854775807L);
        goto label3;

     label1:
        i0 = virtualinvoke r1.<javax.servlet.UnavailableException: int getUnavailableSeconds()>();
        if i0 > 0 goto label2;

        i0 = 60;

     label2:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l2 = (long) i0;
        $l3 = $l2 * 1000L;
        $l4 = $l1 + $l3;
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void setAvailable(long)>($l4);

     label3:
        return;
    }

    public synchronized void unload() throws javax.servlet.ServletException
    {
        org.apache.catalina.core.StandardWrapper r0;
        int i0, $i2, $i4, $i5, $i6, $i7;
        long l1, $l3;
        java.lang.InterruptedException r1, $r12;
        java.lang.Throwable r2, $r18, r19, $r25, r26, r27, $r35, $r42, r43, $r58, r59, $r75, r76, $r83, r84, r85;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        javax.servlet.Servlet $r3, $r16, $r17, $r20, $r21, $r22, $r24, $r29, $r41, $r57, r74;
        java.util.concurrent.atomic.AtomicInteger $r4, $r8, $r13;
        org.apache.juli.logging.Log $r5, $r44, $r60;
        org.apache.tomcat.util.res.StringManager $r6, $r31, $r45, $r61, $r87;
        java.lang.Object[] $r7, $r32, $r46, $r62, $r88;
        java.lang.String $r9, $r10, $r11, $r33, $r34, $r47, $r48, r49, $r63, $r64, r65, $r89, $r90;
        java.io.PrintStream r14;
        org.apache.catalina.util.InstanceSupport $r15, $r23, $r28;
        javax.servlet.ServletException $r30, $r86;
        org.apache.catalina.Container $r36, $r38, $r52, $r54, $r77, $r79;
        org.apache.catalina.Context $r37, $r39, $r53, $r55, $r78;
        org.apache.tomcat.InstanceManager $r40, $r56, $r81;
        javax.servlet.ServletContext $r50, $r51, $r66, $r67;
        javax.management.ObjectName $r68, $r70;
        org.apache.tomcat.util.modeler.Registry $r69;
        java.util.Stack $r71, $r72, $r82;
        java.lang.Object $r73;
        org.apache.catalina.core.StandardContext $r80;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $z0 = r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel>;
        if $z0 != 0 goto label0;

        $r3 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        if $r3 != null goto label0;

        return;

     label0:
        r0.<org.apache.catalina.core.StandardWrapper: boolean unloading> = 1;
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated>;
        $i2 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int get()>();
        if $i2 <= 0 goto label7;

        i0 = 0;
        $l3 = r0.<org.apache.catalina.core.StandardWrapper: long unloadDelay>;
        l1 = $l3 / 20L;
        goto label6;

     label1:
        $i4 = i0 % 10;
        if $i4 != 0 goto label2;

        $r5 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        $r6 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r7 = newarray (java.lang.Object)[2];
        $r8 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated>;
        $r9 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: java.lang.String toString()>();
        $r7[0] = $r9;
        $r10 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r7[1] = $r10;
        $r11 = virtualinvoke $r6.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.waiting", $r7);
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r11);

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(l1);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;
        r1 = $r12;

     label5:
        i0 = i0 + 1;

     label6:
        if i0 >= 21 goto label7;

        $r13 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.atomic.AtomicInteger countAllocated>;
        $i5 = virtualinvoke $r13.<java.util.concurrent.atomic.AtomicInteger: int get()>();
        if $i5 > 0 goto label1;

     label7:
        $z1 = r0.<org.apache.catalina.core.StandardWrapper: boolean instanceInitialized>;
        if $z1 == 0 goto label29;

        r14 = <java.lang.System: java.io.PrintStream out>;
        $z2 = r0.<org.apache.catalina.core.StandardWrapper: boolean swallowOutput>;
        if $z2 == 0 goto label8;

        staticinvoke <org.apache.tomcat.util.log.SystemLogHandler: void startCapture()>();

     label8:
        $r15 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        $r16 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        virtualinvoke $r15.<org.apache.catalina.util.InstanceSupport: void fireInstanceEvent(java.lang.String,javax.servlet.Servlet)>("beforeDestroy", $r16);
        $z3 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z3 == 0 goto label12;

     label9:
        $r17 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        staticinvoke <org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Servlet)>("destroy", $r17);
        goto label11;

     label10:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        staticinvoke <org.apache.catalina.security.SecurityUtil: void remove(java.lang.Object)>($r20);
        throw r19;

     label11:
        $r21 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        staticinvoke <org.apache.catalina.security.SecurityUtil: void remove(java.lang.Object)>($r21);
        goto label13;

     label12:
        $r22 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        interfaceinvoke $r22.<javax.servlet.Servlet: void destroy()>();

     label13:
        $r23 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        $r24 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        virtualinvoke $r23.<org.apache.catalina.util.InstanceSupport: void fireInstanceEvent(java.lang.String,javax.servlet.Servlet)>("afterDestroy", $r24);

     label14:
        goto label23;

     label15:
        $r25 := @caughtexception;
        r26 = $r25;
        r27 = staticinvoke <org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>(r26);
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r27);
        $r28 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.util.InstanceSupport instanceSupport>;
        $r29 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        virtualinvoke $r28.<org.apache.catalina.util.InstanceSupport: void fireInstanceEvent(java.lang.String,javax.servlet.Servlet,java.lang.Throwable)>("afterDestroy", $r29, r27);
        r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance> = null;
        r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool> = null;
        r0.<org.apache.catalina.core.StandardWrapper: int nInstances> = 0;
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void fireContainerEvent(java.lang.String,java.lang.Object)>("unload", r0);
        r0.<org.apache.catalina.core.StandardWrapper: boolean unloading> = 0;
        $r30 = new javax.servlet.ServletException;
        $r31 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r32 = newarray (java.lang.Object)[1];
        $r33 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r32[0] = $r33;
        $r34 = virtualinvoke $r31.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.destroyException", $r32);
        specialinvoke $r30.<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>($r34, r27);
        throw $r30;

     label16:
        $r35 := @caughtexception;
        r2 = $r35;
        $r36 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r37 = (org.apache.catalina.Context) $r36;
        $z4 = interfaceinvoke $r37.<org.apache.catalina.Context: boolean getIgnoreAnnotations()>();
        if $z4 != 0 goto label20;

     label17:
        $r38 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r39 = (org.apache.catalina.Context) $r38;
        $r40 = interfaceinvoke $r39.<org.apache.catalina.Context: org.apache.tomcat.InstanceManager getInstanceManager()>();
        $r41 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        interfaceinvoke $r40.<org.apache.tomcat.InstanceManager: void destroyInstance(java.lang.Object)>($r41);

     label18:
        goto label20;

     label19:
        $r42 := @caughtexception;
        r43 = $r42;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r43);
        $r44 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        $r45 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r46 = newarray (java.lang.Object)[1];
        $r47 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r46[0] = $r47;
        $r48 = virtualinvoke $r45.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.destroyInstance", $r46);
        interfaceinvoke $r44.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r48, r43);

     label20:
        $z5 = r0.<org.apache.catalina.core.StandardWrapper: boolean swallowOutput>;
        if $z5 == 0 goto label22;

        r49 = staticinvoke <org.apache.tomcat.util.log.SystemLogHandler: java.lang.String stopCapture()>();
        if r49 == null goto label22;

        $i6 = virtualinvoke r49.<java.lang.String: int length()>();
        if $i6 <= 0 goto label22;

        $r50 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        if $r50 == null goto label21;

        $r51 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        interfaceinvoke $r51.<javax.servlet.ServletContext: void log(java.lang.String)>(r49);
        goto label22;

     label21:
        virtualinvoke r14.<java.io.PrintStream: void println(java.lang.String)>(r49);

     label22:
        throw r2;

     label23:
        $r52 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r53 = (org.apache.catalina.Context) $r52;
        $z6 = interfaceinvoke $r53.<org.apache.catalina.Context: boolean getIgnoreAnnotations()>();
        if $z6 != 0 goto label27;

     label24:
        $r54 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r55 = (org.apache.catalina.Context) $r54;
        $r56 = interfaceinvoke $r55.<org.apache.catalina.Context: org.apache.tomcat.InstanceManager getInstanceManager()>();
        $r57 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance>;
        interfaceinvoke $r56.<org.apache.tomcat.InstanceManager: void destroyInstance(java.lang.Object)>($r57);

     label25:
        goto label27;

     label26:
        $r58 := @caughtexception;
        r59 = $r58;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r59);
        $r60 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.juli.logging.Log log>;
        $r61 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r62 = newarray (java.lang.Object)[1];
        $r63 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r62[0] = $r63;
        $r64 = virtualinvoke $r61.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.destroyInstance", $r62);
        interfaceinvoke $r60.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r64, r59);

     label27:
        $z7 = r0.<org.apache.catalina.core.StandardWrapper: boolean swallowOutput>;
        if $z7 == 0 goto label29;

        r65 = staticinvoke <org.apache.tomcat.util.log.SystemLogHandler: java.lang.String stopCapture()>();
        if r65 == null goto label29;

        $i7 = virtualinvoke r65.<java.lang.String: int length()>();
        if $i7 <= 0 goto label29;

        $r66 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        if $r66 == null goto label28;

        $r67 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        interfaceinvoke $r67.<javax.servlet.ServletContext: void log(java.lang.String)>(r65);
        goto label29;

     label28:
        virtualinvoke r14.<java.io.PrintStream: void println(java.lang.String)>(r65);

     label29:
        r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.Servlet instance> = null;
        r0.<org.apache.catalina.core.StandardWrapper: boolean instanceInitialized> = 0;
        $z8 = r0.<org.apache.catalina.core.StandardWrapper: boolean isJspServlet>;
        if $z8 == 0 goto label30;

        $r68 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName jspMonitorON>;
        if $r68 == null goto label30;

        $r69 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        $r70 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName jspMonitorON>;
        virtualinvoke $r69.<org.apache.tomcat.util.modeler.Registry: void unregisterComponent(javax.management.ObjectName)>($r70);

     label30:
        $z9 = r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel>;
        if $z9 == 0 goto label42;

        $r71 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        if $r71 == null goto label42;

     label31:
        goto label38;

     label32:
        $r72 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        $r73 = virtualinvoke $r72.<java.util.Stack: java.lang.Object pop()>();
        r74 = (javax.servlet.Servlet) $r73;
        $z10 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z10 == 0 goto label36;

     label33:
        staticinvoke <org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Servlet)>("destroy", r74);
        goto label35;

     label34:
        $r75 := @caughtexception;
        r76 = $r75;
        staticinvoke <org.apache.catalina.security.SecurityUtil: void remove(java.lang.Object)>(r74);
        throw r76;

     label35:
        staticinvoke <org.apache.catalina.security.SecurityUtil: void remove(java.lang.Object)>(r74);
        goto label37;

     label36:
        interfaceinvoke r74.<javax.servlet.Servlet: void destroy()>();

     label37:
        $r77 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r78 = (org.apache.catalina.Context) $r77;
        $z11 = interfaceinvoke $r78.<org.apache.catalina.Context: boolean getIgnoreAnnotations()>();
        if $z11 != 0 goto label38;

        $r79 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r80 = (org.apache.catalina.core.StandardContext) $r79;
        $r81 = virtualinvoke $r80.<org.apache.catalina.core.StandardContext: org.apache.tomcat.InstanceManager getInstanceManager()>();
        interfaceinvoke $r81.<org.apache.tomcat.InstanceManager: void destroyInstance(java.lang.Object)>(r74);

     label38:
        $r82 = r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool>;
        $z12 = virtualinvoke $r82.<java.util.Stack: boolean isEmpty()>();
        if $z12 == 0 goto label32;

     label39:
        goto label41;

     label40:
        $r83 := @caughtexception;
        r84 = $r83;
        r85 = staticinvoke <org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>(r84);
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r85);
        r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool> = null;
        r0.<org.apache.catalina.core.StandardWrapper: int nInstances> = 0;
        r0.<org.apache.catalina.core.StandardWrapper: boolean unloading> = 0;
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void fireContainerEvent(java.lang.String,java.lang.Object)>("unload", r0);
        $r86 = new javax.servlet.ServletException;
        $r87 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r88 = newarray (java.lang.Object)[1];
        $r89 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r88[0] = $r89;
        $r90 = virtualinvoke $r87.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.destroyException", $r88);
        specialinvoke $r86.<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>($r90, r85);
        throw $r86;

     label41:
        r0.<org.apache.catalina.core.StandardWrapper: java.util.Stack instancePool> = null;
        r0.<org.apache.catalina.core.StandardWrapper: int nInstances> = 0;

     label42:
        r0.<org.apache.catalina.core.StandardWrapper: boolean singleThreadModel> = 0;
        r0.<org.apache.catalina.core.StandardWrapper: boolean unloading> = 0;
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void fireContainerEvent(java.lang.String,java.lang.Object)>("unload", r0);
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label9 to label10 with label10;
        catch java.lang.Throwable from label8 to label14 with label15;
        catch java.lang.Throwable from label8 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label33 to label34 with label34;
        catch java.lang.Throwable from label31 to label39 with label40;
    }

    public java.lang.String getInitParameter(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String findInitParameter(java.lang.String)>(r1);
        return $r2;
    }

    public java.util.Enumeration getInitParameterNames()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.util.Enumeration r1;
        java.lang.Throwable r2, $r9;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r7, $r10;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r4, $r8, $r11;
        java.util.HashMap $r5;
        java.util.Set $r6;

        r0 := @this: org.apache.catalina.core.StandardWrapper;

     label0:
        $r3 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>();
        $r5 = r0.<org.apache.catalina.core.StandardWrapper: java.util.HashMap parameters>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();
        r1 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r6);

     label1:
        $r7 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r8 = virtualinvoke $r7.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        return r1;

     label2:
        $r9 := @caughtexception;
        r2 = $r9;
        $r10 = r0.<org.apache.catalina.core.StandardWrapper: java.util.concurrent.locks.ReentrantReadWriteLock parametersLock>;
        $r11 = virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();
        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public javax.servlet.ServletContext getServletContext()
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.Container $r1, $r2, $r3;
        boolean $z0;
        org.apache.catalina.Context $r4;
        javax.servlet.ServletContext $r5;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container parent>;
        if $r1 != null goto label0;

        return null;

     label0:
        $r2 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container parent>;
        $z0 = $r2 instanceof org.apache.catalina.Context;
        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container parent>;
        $r4 = (org.apache.catalina.Context) $r3;
        $r5 = interfaceinvoke $r4.<org.apache.catalina.Context: javax.servlet.ServletContext getServletContext()>();
        return $r5;
    }

    public java.lang.String getServletName()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        return $r1;
    }

    public long getProcessingTime()
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.core.StandardWrapperValve $r1;
        long $l0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        $l0 = virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: long getProcessingTime()>();
        return $l0;
    }

    public void setProcessingTime(long)
    {
        org.apache.catalina.core.StandardWrapper r0;
        long l0;
        org.apache.catalina.core.StandardWrapperValve $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        l0 := @parameter0: long;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: void setProcessingTime(long)>(l0);
        return;
    }

    public long getMaxTime()
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.core.StandardWrapperValve $r1;
        long $l0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        $l0 = virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: long getMaxTime()>();
        return $l0;
    }

    public void setMaxTime(long)
    {
        org.apache.catalina.core.StandardWrapper r0;
        long l0;
        org.apache.catalina.core.StandardWrapperValve $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        l0 := @parameter0: long;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: void setMaxTime(long)>(l0);
        return;
    }

    public long getMinTime()
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.core.StandardWrapperValve $r1;
        long $l0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        $l0 = virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: long getMinTime()>();
        return $l0;
    }

    public void setMinTime(long)
    {
        org.apache.catalina.core.StandardWrapper r0;
        long l0;
        org.apache.catalina.core.StandardWrapperValve $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        l0 := @parameter0: long;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: void setMinTime(long)>(l0);
        return;
    }

    public int getRequestCount()
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.core.StandardWrapperValve $r1;
        int $i0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        $i0 = virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: int getRequestCount()>();
        return $i0;
    }

    public void setRequestCount(int)
    {
        org.apache.catalina.core.StandardWrapper r0;
        int i0;
        org.apache.catalina.core.StandardWrapperValve $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: void setRequestCount(int)>(i0);
        return;
    }

    public int getErrorCount()
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.core.StandardWrapperValve $r1;
        int $i0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        $i0 = virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: int getErrorCount()>();
        return $i0;
    }

    public void setErrorCount(int)
    {
        org.apache.catalina.core.StandardWrapper r0;
        int i0;
        org.apache.catalina.core.StandardWrapperValve $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: void setErrorCount(int)>(i0);
        return;
    }

    public void incrementErrorCount()
    {
        org.apache.catalina.core.StandardWrapper r0;
        org.apache.catalina.core.StandardWrapperValve $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.core.StandardWrapperValve swValve>;
        virtualinvoke $r1.<org.apache.catalina.core.StandardWrapperValve: void incrementErrorCount()>();
        return;
    }

    public long getLoadTime()
    {
        org.apache.catalina.core.StandardWrapper r0;
        long $l0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $l0 = r0.<org.apache.catalina.core.StandardWrapper: long loadTime>;
        return $l0;
    }

    public void setLoadTime(long)
    {
        org.apache.catalina.core.StandardWrapper r0;
        long l0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        l0 := @parameter0: long;
        r0.<org.apache.catalina.core.StandardWrapper: long loadTime> = l0;
        return;
    }

    public int getClassLoadTime()
    {
        org.apache.catalina.core.StandardWrapper r0;
        int $i0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $i0 = r0.<org.apache.catalina.core.StandardWrapper: int classLoadTime>;
        return $i0;
    }

    public javax.servlet.MultipartConfigElement getMultipartConfigElement()
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.servlet.MultipartConfigElement $r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.MultipartConfigElement multipartConfigElement>;
        return $r1;
    }

    public void setMultipartConfigElement(javax.servlet.MultipartConfigElement)
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.servlet.MultipartConfigElement r1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: javax.servlet.MultipartConfigElement;
        r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.MultipartConfigElement multipartConfigElement> = r1;
        return;
    }

    public boolean isAsyncSupported()
    {
        org.apache.catalina.core.StandardWrapper r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $z0 = r0.<org.apache.catalina.core.StandardWrapper: boolean asyncSupported>;
        return $z0;
    }

    public void setAsyncSupported(boolean)
    {
        org.apache.catalina.core.StandardWrapper r0;
        boolean z0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.core.StandardWrapper: boolean asyncSupported> = z0;
        return;
    }

    public boolean isEnabled()
    {
        org.apache.catalina.core.StandardWrapper r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $z0 = r0.<org.apache.catalina.core.StandardWrapper: boolean enabled>;
        return $z0;
    }

    public void setEnabled(boolean)
    {
        org.apache.catalina.core.StandardWrapper r0;
        boolean z0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.core.StandardWrapper: boolean enabled> = z0;
        return;
    }

    protected boolean isContainerProvidedServlet(java.lang.String)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.String r1;
        java.lang.Class r2, $r3, $r5;
        boolean $z0, $z1;
        java.lang.ClassLoader $r4;
        java.lang.Throwable $r6, r7;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("org.apache.catalina.");
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        r2 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);
        $r5 = class "org/apache/catalina/ContainerServlet";
        $z1 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

     label1:
        return $z1;

     label2:
        $r6 := @caughtexception;
        r7 = $r6;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r7);
        return 0;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    protected java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.Class r1, $r5;
        java.lang.reflect.Method[] r2, r3, r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: java.lang.Class;
        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "javax/servlet/http/HttpServlet");
        if $z0 == 0 goto label0;

        return null;

     label0:
        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();
        r2 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)>($r5);
        r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
        $i0 = lengthof r3;
        if $i0 != 0 goto label1;

        return r2;

     label1:
        if r2 == null goto label2;

        $i1 = lengthof r2;
        if $i1 <= 0 goto label2;

        $i2 = lengthof r2;
        $i3 = lengthof r3;
        $i4 = $i2 + $i3;
        r4 = newarray (java.lang.reflect.Method)[$i4];
        $i5 = lengthof r2;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, $i5);
        $i6 = lengthof r2;
        $i7 = lengthof r3;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, $i6, $i7);
        r3 = r4;

     label2:
        return r3;
    }

    protected synchronized void startInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.core.StandardWrapper r0;
        long $l0, $l1, $l2, $l3;
        javax.management.Notification r2, $r4, $r8, r11;
        javax.management.ObjectName $r3, $r5, $r7, $r9;
        javax.management.NotificationBroadcasterSupport $r6, $r12;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r3 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName getObjectName()>();
        if $r3 == null goto label0;

        $r4 = new javax.management.Notification;
        $r5 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName getObjectName()>();
        $l0 = r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber>;
        $l1 = $l0 + 1L;
        r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber> = $l1;
        specialinvoke $r4.<javax.management.Notification: void <init>(java.lang.String,java.lang.Object,long)>("j2ee.state.starting", $r5, $l0);
        r2 = $r4;
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.NotificationBroadcasterSupport broadcaster>;
        virtualinvoke $r6.<javax.management.NotificationBroadcasterSupport: void sendNotification(javax.management.Notification)>(r2);

     label0:
        specialinvoke r0.<org.apache.catalina.core.ContainerBase: void startInternal()>();
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void setAvailable(long)>(0L);
        $r7 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName getObjectName()>();
        if $r7 == null goto label1;

        $r8 = new javax.management.Notification;
        $r9 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName getObjectName()>();
        $l2 = r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber>;
        $l3 = $l2 + 1L;
        r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber> = $l3;
        specialinvoke $r8.<javax.management.Notification: void <init>(java.lang.String,java.lang.Object,long)>("j2ee.state.running", $r9, $l2);
        r11 = $r8;
        $r12 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.NotificationBroadcasterSupport broadcaster>;
        virtualinvoke $r12.<javax.management.NotificationBroadcasterSupport: void sendNotification(javax.management.Notification)>(r11);

     label1:
        return;
    }

    protected synchronized void stopInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.core.StandardWrapper r0;
        long $l0, $l1, $l2, $l3, $l4, $l5;
        javax.management.Notification r2, $r4, $r15, r18, $r20, r23;
        javax.management.ObjectName $r3, $r5, $r14, $r16, $r21;
        javax.management.NotificationBroadcasterSupport $r6, $r19, $r24;
        javax.servlet.ServletException $r7, r8;
        javax.servlet.ServletContext $r9;
        org.apache.tomcat.util.res.StringManager $r10;
        java.lang.Object[] $r11;
        java.lang.String $r12, $r13;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void setAvailable(long)>(9223372036854775807L);
        $r3 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName getObjectName()>();
        if $r3 == null goto label0;

        $r4 = new javax.management.Notification;
        $r5 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName getObjectName()>();
        $l0 = r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber>;
        $l1 = $l0 + 1L;
        r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber> = $l1;
        specialinvoke $r4.<javax.management.Notification: void <init>(java.lang.String,java.lang.Object,long)>("j2ee.state.stopping", $r5, $l0);
        r2 = $r4;
        $r6 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.NotificationBroadcasterSupport broadcaster>;
        virtualinvoke $r6.<javax.management.NotificationBroadcasterSupport: void sendNotification(javax.management.Notification)>(r2);

     label0:
        virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: void unload()>();

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.servlet.ServletContext getServletContext()>();
        $r10 = <org.apache.catalina.core.StandardWrapper: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[1];
        $r12 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $r11[0] = $r12;
        $r13 = virtualinvoke $r10.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardWrapper.unloadException", $r11);
        interfaceinvoke $r9.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>($r13, r8);

     label3:
        specialinvoke r0.<org.apache.catalina.core.ContainerBase: void stopInternal()>();
        $r14 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName getObjectName()>();
        if $r14 == null goto label4;

        $r15 = new javax.management.Notification;
        $r16 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName getObjectName()>();
        $l2 = r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber>;
        $l3 = $l2 + 1L;
        r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber> = $l3;
        specialinvoke $r15.<javax.management.Notification: void <init>(java.lang.String,java.lang.Object,long)>("j2ee.state.stopped", $r16, $l2);
        r18 = $r15;
        $r19 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.NotificationBroadcasterSupport broadcaster>;
        virtualinvoke $r19.<javax.management.NotificationBroadcasterSupport: void sendNotification(javax.management.Notification)>(r18);

     label4:
        $r20 = new javax.management.Notification;
        $r21 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: javax.management.ObjectName getObjectName()>();
        $l4 = r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber>;
        $l5 = $l4 + 1L;
        r0.<org.apache.catalina.core.StandardWrapper: long sequenceNumber> = $l5;
        specialinvoke $r20.<javax.management.Notification: void <init>(java.lang.String,java.lang.Object,long)>("j2ee.object.deleted", $r21, $l4);
        r23 = $r20;
        $r24 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.NotificationBroadcasterSupport broadcaster>;
        virtualinvoke $r24.<javax.management.NotificationBroadcasterSupport: void sendNotification(javax.management.Notification)>(r23);
        return;

        catch javax.servlet.ServletException from label0 to label1 with label2;
    }

    protected java.lang.String getObjectNameKeyProperties()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String r3, $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("j2eeType=Servlet,name=");
        r2 = $r1;
        r3 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getName()>();
        $z0 = staticinvoke <org.apache.tomcat.util.modeler.Util: boolean objectNameValueNeedsQuote(java.lang.String)>(r3);
        if $z0 == 0 goto label0;

        r3 = staticinvoke <javax.management.ObjectName: java.lang.String quote(java.lang.String)>(r3);

     label0:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r5 = specialinvoke r0.<org.apache.catalina.core.StandardWrapper: java.lang.String getWebModuleKeyProperties()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    private java.lang.String getWebModuleKeyProperties()
    {
        org.apache.catalina.core.StandardWrapper r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String r3, r4, $r18, $r22, $r24;
        org.apache.catalina.core.StandardContext r5;
        org.apache.catalina.Container $r6, $r7, $r10, $r14, $r15;
        org.apache.catalina.Context $r11;
        boolean $z0, $z1;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(",WebModule=//");
        r2 = $r1;
        $r6 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r7 = interfaceinvoke $r6.<org.apache.catalina.Container: org.apache.catalina.Container getParent()>();
        r3 = interfaceinvoke $r7.<org.apache.catalina.Container: java.lang.String getName()>();
        if r3 != null goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DEFAULT");
        goto label1;

     label0:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label1:
        $r10 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        $r11 = (org.apache.catalina.Context) $r10;
        r4 = interfaceinvoke $r11.<org.apache.catalina.Context: java.lang.String getName()>();
        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z0 != 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        r5 = null;
        $r14 = r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container parent>;
        $z1 = $r14 instanceof org.apache.catalina.core.StandardContext;
        if $z1 == 0 goto label3;

        $r15 = virtualinvoke r0.<org.apache.catalina.core.StandardWrapper: org.apache.catalina.Container getParent()>();
        r5 = (org.apache.catalina.core.StandardContext) $r15;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",J2EEApplication=");
        if r5 != null goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("none");
        goto label5;

     label4:
        $r18 = virtualinvoke r5.<org.apache.catalina.core.StandardContext: java.lang.String getJ2EEApplication()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",J2EEServer=");
        if r5 != null goto label6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("none");
        goto label7;

     label6:
        $r22 = virtualinvoke r5.<org.apache.catalina.core.StandardContext: java.lang.String getJ2EEServer()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label7:
        $r24 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r24;
    }

    public boolean isStateManageable()
    {
        org.apache.catalina.core.StandardWrapper r0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        return 0;
    }

    public void removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) throws javax.management.ListenerNotFoundException
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.management.NotificationListener r1;
        javax.management.NotificationFilter r2;
        java.lang.Object r3;
        javax.management.NotificationBroadcasterSupport $r4;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: javax.management.NotificationListener;
        r2 := @parameter1: javax.management.NotificationFilter;
        r3 := @parameter2: java.lang.Object;
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.NotificationBroadcasterSupport broadcaster>;
        virtualinvoke $r4.<javax.management.NotificationBroadcasterSupport: void removeNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)>(r1, r2, r3);
        return;
    }

    public javax.management.MBeanNotificationInfo[] getNotificationInfo()
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.management.MBeanNotificationInfo $r1, $r7, $r11, $r15, $r19, $r23;
        javax.management.MBeanNotificationInfo[] $r2, $r3, $r27;
        java.lang.String[] $r4, $r8, $r12, $r16, $r20, $r24;
        java.lang.Class $r5, $r9, $r13, $r17, $r21, $r25;
        java.lang.String $r6, $r10, $r14, $r18, $r22, $r26;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        $r2 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.MBeanNotificationInfo[] notificationInfo>;
        if $r2 != null goto label0;

        $r3 = newarray (javax.management.MBeanNotificationInfo)[6];
        $r1 = new javax.management.MBeanNotificationInfo;
        $r4 = newarray (java.lang.String)[1];
        $r4[0] = "j2ee.object.created";
        $r5 = class "javax/management/Notification";
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r1.<javax.management.MBeanNotificationInfo: void <init>(java.lang.String[],java.lang.String,java.lang.String)>($r4, $r6, "servlet is created");
        $r3[0] = $r1;
        $r7 = new javax.management.MBeanNotificationInfo;
        $r8 = newarray (java.lang.String)[1];
        $r8[0] = "j2ee.state.starting";
        $r9 = class "javax/management/Notification";
        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r7.<javax.management.MBeanNotificationInfo: void <init>(java.lang.String[],java.lang.String,java.lang.String)>($r8, $r10, "servlet is starting");
        $r3[1] = $r7;
        $r11 = new javax.management.MBeanNotificationInfo;
        $r12 = newarray (java.lang.String)[1];
        $r12[0] = "j2ee.state.running";
        $r13 = class "javax/management/Notification";
        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r11.<javax.management.MBeanNotificationInfo: void <init>(java.lang.String[],java.lang.String,java.lang.String)>($r12, $r14, "servlet is running");
        $r3[2] = $r11;
        $r15 = new javax.management.MBeanNotificationInfo;
        $r16 = newarray (java.lang.String)[1];
        $r16[0] = "j2ee.state.stopped";
        $r17 = class "javax/management/Notification";
        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r15.<javax.management.MBeanNotificationInfo: void <init>(java.lang.String[],java.lang.String,java.lang.String)>($r16, $r18, "servlet start to stopped");
        $r3[3] = $r15;
        $r19 = new javax.management.MBeanNotificationInfo;
        $r20 = newarray (java.lang.String)[1];
        $r20[0] = "j2ee.object.stopped";
        $r21 = class "javax/management/Notification";
        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r19.<javax.management.MBeanNotificationInfo: void <init>(java.lang.String[],java.lang.String,java.lang.String)>($r20, $r22, "servlet is stopped");
        $r3[4] = $r19;
        $r23 = new javax.management.MBeanNotificationInfo;
        $r24 = newarray (java.lang.String)[1];
        $r24[0] = "j2ee.object.deleted";
        $r25 = class "javax/management/Notification";
        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r23.<javax.management.MBeanNotificationInfo: void <init>(java.lang.String[],java.lang.String,java.lang.String)>($r24, $r26, "servlet is deleted");
        $r3[5] = $r23;
        r0.<org.apache.catalina.core.StandardWrapper: javax.management.MBeanNotificationInfo[] notificationInfo> = $r3;

     label0:
        $r27 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.MBeanNotificationInfo[] notificationInfo>;
        return $r27;
    }

    public void addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.management.NotificationListener r1;
        javax.management.NotificationFilter r2;
        java.lang.Object r3;
        javax.management.NotificationBroadcasterSupport $r4;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: javax.management.NotificationListener;
        r2 := @parameter1: javax.management.NotificationFilter;
        r3 := @parameter2: java.lang.Object;
        $r4 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.NotificationBroadcasterSupport broadcaster>;
        virtualinvoke $r4.<javax.management.NotificationBroadcasterSupport: void addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)>(r1, r2, r3);
        return;
    }

    public void removeNotificationListener(javax.management.NotificationListener) throws javax.management.ListenerNotFoundException
    {
        org.apache.catalina.core.StandardWrapper r0;
        javax.management.NotificationListener r1;
        javax.management.NotificationBroadcasterSupport $r2;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        r1 := @parameter0: javax.management.NotificationListener;
        $r2 = r0.<org.apache.catalina.core.StandardWrapper: javax.management.NotificationBroadcasterSupport broadcaster>;
        virtualinvoke $r2.<javax.management.NotificationBroadcasterSupport: void removeNotificationListener(javax.management.NotificationListener)>(r1);
        return;
    }

    public boolean isEventProvider()
    {
        org.apache.catalina.core.StandardWrapper r0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        return 0;
    }

    public boolean isStatisticsProvider()
    {
        org.apache.catalina.core.StandardWrapper r0;

        r0 := @this: org.apache.catalina.core.StandardWrapper;
        return 0;
    }
}
