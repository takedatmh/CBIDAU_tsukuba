public abstract class java.security.MessageDigest extends java.security.MessageDigestSpi
{
    private java.lang.String algorithm;
    private static final int INITIAL;
    private static final int IN_PROGRESS;
    private int state;
    private java.security.Provider provider;

    protected void <init>(java.lang.String)
    {
        java.security.MessageDigest r0;
        java.lang.String r1;

        r0 := @this: java.security.MessageDigest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.security.MessageDigestSpi: void <init>()>();
        r0.<java.security.MessageDigest: int state> = 0;
        r0.<java.security.MessageDigest: java.lang.String algorithm> = r1;
        return;
    }

    public static java.security.MessageDigest getInstance(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0, $r3, $r22;
        java.lang.Object[] r1;
        java.security.MessageDigest r2;
        java.lang.Object $r4, $r5, $r6, $r10, $r13;
        boolean $z0;
        java.security.Provider $r7, $r14;
        java.security.MessageDigest$Delegate $r9, r12;
        java.security.MessageDigestSpi $r11;
        java.security.NoSuchProviderException $r16, r17;
        java.security.NoSuchAlgorithmException $r18;
        java.lang.StringBuilder $r19, $r20, $r21;

        r0 := @parameter0: java.lang.String;

     label0:
        $r3 = (java.lang.String) null;
        r1 = staticinvoke <java.security.Security: java.lang.Object[] getImpl(java.lang.String,java.lang.String,java.lang.String)>(r0, "MessageDigest", $r3);
        $r4 = r1[0];
        $z0 = $r4 instanceof java.security.MessageDigest;
        if $z0 == 0 goto label2;

        $r5 = r1[0];
        r2 = (java.security.MessageDigest) $r5;
        $r6 = r1[1];
        $r7 = (java.security.Provider) $r6;
        r2.<java.security.MessageDigest: java.security.Provider provider> = $r7;

     label1:
        return r2;

     label2:
        $r9 = new java.security.MessageDigest$Delegate;
        $r10 = r1[0];
        $r11 = (java.security.MessageDigestSpi) $r10;
        specialinvoke $r9.<java.security.MessageDigest$Delegate: void <init>(java.security.MessageDigestSpi,java.lang.String)>($r11, r0);
        r12 = $r9;
        $r13 = r1[1];
        $r14 = (java.security.Provider) $r13;
        r12.<java.security.MessageDigest: java.security.Provider provider> = $r14;

     label3:
        return r12;

     label4:
        $r16 := @caughtexception;
        r17 = $r16;
        $r18 = new java.security.NoSuchAlgorithmException;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r18.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r22);
        throw $r18;

        catch java.security.NoSuchProviderException from label0 to label1 with label4;
        catch java.security.NoSuchProviderException from label2 to label3 with label4;
    }

    public static java.security.MessageDigest getInstance(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException
    {
        java.lang.String r0, r1;
        java.lang.Object[] r2;
        java.security.MessageDigest r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object $r5, $r6, $r7, $r10, $r13;
        boolean $z0;
        java.security.Provider $r8, $r14;
        java.security.MessageDigest$Delegate $r9, r12;
        java.security.MessageDigestSpi $r11;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("missing provider");
        throw $r4;

     label1:
        r2 = staticinvoke <java.security.Security: java.lang.Object[] getImpl(java.lang.String,java.lang.String,java.lang.String)>(r0, "MessageDigest", r1);
        $r5 = r2[0];
        $z0 = $r5 instanceof java.security.MessageDigest;
        if $z0 == 0 goto label2;

        $r6 = r2[0];
        r3 = (java.security.MessageDigest) $r6;
        $r7 = r2[1];
        $r8 = (java.security.Provider) $r7;
        r3.<java.security.MessageDigest: java.security.Provider provider> = $r8;
        return r3;

     label2:
        $r9 = new java.security.MessageDigest$Delegate;
        $r10 = r2[0];
        $r11 = (java.security.MessageDigestSpi) $r10;
        specialinvoke $r9.<java.security.MessageDigest$Delegate: void <init>(java.security.MessageDigestSpi,java.lang.String)>($r11, r0);
        r12 = $r9;
        $r13 = r2[1];
        $r14 = (java.security.Provider) $r13;
        r12.<java.security.MessageDigest: java.security.Provider provider> = $r14;
        return r12;
    }

    public static java.security.MessageDigest getInstance(java.lang.String, java.security.Provider) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.security.Provider r1, $r8, $r14;
        java.lang.Object[] r2;
        java.security.MessageDigest r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object $r5, $r6, $r7, $r10, $r13;
        boolean $z0;
        java.security.MessageDigest$Delegate $r9, r12;
        java.security.MessageDigestSpi $r11;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.security.Provider;
        if r1 != null goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("missing provider");
        throw $r4;

     label0:
        r2 = staticinvoke <java.security.Security: java.lang.Object[] getImpl(java.lang.String,java.lang.String,java.security.Provider)>(r0, "MessageDigest", r1);
        $r5 = r2[0];
        $z0 = $r5 instanceof java.security.MessageDigest;
        if $z0 == 0 goto label1;

        $r6 = r2[0];
        r3 = (java.security.MessageDigest) $r6;
        $r7 = r2[1];
        $r8 = (java.security.Provider) $r7;
        r3.<java.security.MessageDigest: java.security.Provider provider> = $r8;
        return r3;

     label1:
        $r9 = new java.security.MessageDigest$Delegate;
        $r10 = r2[0];
        $r11 = (java.security.MessageDigestSpi) $r10;
        specialinvoke $r9.<java.security.MessageDigest$Delegate: void <init>(java.security.MessageDigestSpi,java.lang.String)>($r11, r0);
        r12 = $r9;
        $r13 = r2[1];
        $r14 = (java.security.Provider) $r13;
        r12.<java.security.MessageDigest: java.security.Provider provider> = $r14;
        return r12;
    }

    public final java.security.Provider getProvider()
    {
        java.security.MessageDigest r0;
        java.security.Provider $r1;

        r0 := @this: java.security.MessageDigest;
        $r1 = r0.<java.security.MessageDigest: java.security.Provider provider>;
        return $r1;
    }

    public void update(byte)
    {
        java.security.MessageDigest r0;
        byte b0;

        r0 := @this: java.security.MessageDigest;
        b0 := @parameter0: byte;
        virtualinvoke r0.<java.security.MessageDigest: void engineUpdate(byte)>(b0);
        r0.<java.security.MessageDigest: int state> = 1;
        return;
    }

    public void update(byte[], int, int)
    {
        java.security.MessageDigest r0;
        byte[] r1;
        int i0, i1, $i2, $i3;
        java.lang.IllegalArgumentException $r2, $r3;

        r0 := @this: java.security.MessageDigest;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No input buffer given");
        throw $r2;

     label0:
        $i2 = lengthof r1;
        $i3 = $i2 - i0;
        if $i3 >= i1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input buffer too short");
        throw $r3;

     label1:
        virtualinvoke r0.<java.security.MessageDigest: void engineUpdate(byte[],int,int)>(r1, i0, i1);
        r0.<java.security.MessageDigest: int state> = 1;
        return;
    }

    public void update(byte[])
    {
        java.security.MessageDigest r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.security.MessageDigest;
        r1 := @parameter0: byte[];
        $i0 = lengthof r1;
        virtualinvoke r0.<java.security.MessageDigest: void engineUpdate(byte[],int,int)>(r1, 0, $i0);
        r0.<java.security.MessageDigest: int state> = 1;
        return;
    }

    public final void update(java.nio.ByteBuffer)
    {
        java.security.MessageDigest r0;
        java.nio.ByteBuffer r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.security.MessageDigest;
        r1 := @parameter0: java.nio.ByteBuffer;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        virtualinvoke r0.<java.security.MessageDigest: void engineUpdate(java.nio.ByteBuffer)>(r1);
        r0.<java.security.MessageDigest: int state> = 1;
        return;
    }

    public byte[] digest()
    {
        java.security.MessageDigest r0;
        byte[] r1;

        r0 := @this: java.security.MessageDigest;
        r1 = virtualinvoke r0.<java.security.MessageDigest: byte[] engineDigest()>();
        r0.<java.security.MessageDigest: int state> = 0;
        return r1;
    }

    public int digest(byte[], int, int) throws java.security.DigestException
    {
        java.security.MessageDigest r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.IllegalArgumentException $r2, $r3;

        r0 := @this: java.security.MessageDigest;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No output buffer given");
        throw $r2;

     label0:
        $i3 = lengthof r1;
        $i4 = $i3 - i0;
        if $i4 >= i1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output buffer too small for specified offset and length");
        throw $r3;

     label1:
        i2 = virtualinvoke r0.<java.security.MessageDigest: int engineDigest(byte[],int,int)>(r1, i0, i1);
        r0.<java.security.MessageDigest: int state> = 0;
        return i2;
    }

    public byte[] digest(byte[])
    {
        java.security.MessageDigest r0;
        byte[] r1, $r2;

        r0 := @this: java.security.MessageDigest;
        r1 := @parameter0: byte[];
        virtualinvoke r0.<java.security.MessageDigest: void update(byte[])>(r1);
        $r2 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>();
        return $r2;
    }

    public java.lang.String toString()
    {
        java.security.MessageDigest r0;
        java.io.ByteArrayOutputStream $r1, r2;
        java.io.PrintStream r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r11, $r12;
        java.lang.String $r6, $r10, $r13, $r14;
        java.security.Provider $r9;
        int $i0;

        r0 := @this: java.security.MessageDigest;
        $r1 = new java.io.ByteArrayOutputStream;
        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();
        r2 = $r1;
        $r4 = new java.io.PrintStream;
        specialinvoke $r4.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r2);
        r3 = $r4;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = r0.<java.security.MessageDigest: java.lang.String algorithm>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Message Digest from ");
        $r9 = r0.<java.security.MessageDigest: java.security.Provider provider>;
        $r10 = virtualinvoke $r9.<java.security.Provider: java.lang.String getName()>();
        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>($r13);
        $i0 = r0.<java.security.MessageDigest: int state>;
        lookupswitch($i0)
        {
            case 0: goto label0;
            case 1: goto label1;
            default: goto label2;
        };

     label0:
        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>("<initialized>");
        goto label2;

     label1:
        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>("<in progress>");

     label2:
        virtualinvoke r3.<java.io.PrintStream: void println()>();
        $r14 = virtualinvoke r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>();
        return $r14;
    }

    public static boolean isEqual(byte[], byte[])
    {
        byte[] r0, r1;
        byte b0, $b5, $b6, $b7;
        int i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @parameter0: byte[];
        r1 := @parameter1: byte[];
        $i2 = lengthof r0;
        $i3 = lengthof r1;
        if $i2 == $i3 goto label0;

        return 0;

     label0:
        b0 = 0;
        i1 = 0;

     label1:
        $i4 = lengthof r0;
        if i1 >= $i4 goto label2;

        $b5 = r0[i1];
        $b6 = r1[i1];
        $b7 = $b5 ^ $b6;
        b0 = b0 | $b7;
        i1 = i1 + 1;
        goto label1;

     label2:
        if b0 != 0 goto label3;

        $z0 = 1;
        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public void reset()
    {
        java.security.MessageDigest r0;

        r0 := @this: java.security.MessageDigest;
        virtualinvoke r0.<java.security.MessageDigest: void engineReset()>();
        r0.<java.security.MessageDigest: int state> = 0;
        return;
    }

    public final java.lang.String getAlgorithm()
    {
        java.security.MessageDigest r0;
        java.lang.String $r1;

        r0 := @this: java.security.MessageDigest;
        $r1 = r0.<java.security.MessageDigest: java.lang.String algorithm>;
        return $r1;
    }

    public final int getDigestLength()
    {
        java.security.MessageDigest r0, r1;
        int i0, $i1;
        byte[] r2;
        java.lang.Object $r3;
        java.lang.CloneNotSupportedException $r4, r5;

        r0 := @this: java.security.MessageDigest;
        i0 = virtualinvoke r0.<java.security.MessageDigest: int engineGetDigestLength()>();
        if i0 != 0 goto label3;

     label0:
        $r3 = virtualinvoke r0.<java.security.MessageDigest: java.lang.Object clone()>();
        r1 = (java.security.MessageDigest) $r3;
        r2 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>();
        $i1 = lengthof r2;

     label1:
        return $i1;

     label2:
        $r4 := @caughtexception;
        r5 = $r4;
        return i0;

     label3:
        return i0;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.security.MessageDigest r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.CloneNotSupportedException $r2;

        r0 := @this: java.security.MessageDigest;
        $z0 = r0 instanceof java.lang.Cloneable;
        if $z0 == 0 goto label0;

        $r1 = specialinvoke r0.<java.security.MessageDigestSpi: java.lang.Object clone()>();
        return $r1;

     label0:
        $r2 = new java.lang.CloneNotSupportedException;
        specialinvoke $r2.<java.lang.CloneNotSupportedException: void <init>()>();
        throw $r2;
    }

    static java.lang.String access$000(java.security.MessageDigest)
    {
        java.security.MessageDigest r0;
        java.lang.String $r1;

        r0 := @parameter0: java.security.MessageDigest;
        $r1 = r0.<java.security.MessageDigest: java.lang.String algorithm>;
        return $r1;
    }

    static java.security.Provider access$102(java.security.MessageDigest, java.security.Provider)
    {
        java.security.MessageDigest r0;
        java.security.Provider r1;

        r0 := @parameter0: java.security.MessageDigest;
        r1 := @parameter1: java.security.Provider;
        r0.<java.security.MessageDigest: java.security.Provider provider> = r1;
        return r1;
    }

    static java.security.Provider access$100(java.security.MessageDigest)
    {
        java.security.MessageDigest r0;
        java.security.Provider $r1;

        r0 := @parameter0: java.security.MessageDigest;
        $r1 = r0.<java.security.MessageDigest: java.security.Provider provider>;
        return $r1;
    }

    static int access$202(java.security.MessageDigest, int)
    {
        java.security.MessageDigest r0;
        int i0;

        r0 := @parameter0: java.security.MessageDigest;
        i0 := @parameter1: int;
        r0.<java.security.MessageDigest: int state> = i0;
        return i0;
    }

    static int access$200(java.security.MessageDigest)
    {
        java.security.MessageDigest r0;
        int $i0;

        r0 := @parameter0: java.security.MessageDigest;
        $i0 = r0.<java.security.MessageDigest: int state>;
        return $i0;
    }
}
