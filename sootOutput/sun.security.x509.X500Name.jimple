public class sun.security.x509.X500Name extends java.lang.Object implements sun.security.x509.GeneralNameInterface, java.security.Principal
{
    private java.lang.String dn;
    private java.lang.String rfc1779Dn;
    private java.lang.String rfc2253Dn;
    private java.lang.String canonicalDn;
    private sun.security.x509.RDN[] names;
    private javax.security.auth.x500.X500Principal x500Principal;
    private byte[] encoded;
    private volatile java.util.List rdnList;
    private volatile java.util.List allAvaList;
    private static final java.util.Map internedOIDs;
    private static final int[] commonName_data;
    private static final int[] SURNAME_DATA;
    private static final int[] SERIALNUMBER_DATA;
    private static final int[] countryName_data;
    private static final int[] localityName_data;
    private static final int[] stateName_data;
    private static final int[] streetAddress_data;
    private static final int[] orgName_data;
    private static final int[] orgUnitName_data;
    private static final int[] title_data;
    private static final int[] GIVENNAME_DATA;
    private static final int[] INITIALS_DATA;
    private static final int[] GENERATIONQUALIFIER_DATA;
    private static final int[] DNQUALIFIER_DATA;
    private static final int[] ipAddress_data;
    private static final int[] DOMAIN_COMPONENT_DATA;
    private static final int[] userid_data;
    public static final sun.security.util.ObjectIdentifier commonName_oid;
    public static final sun.security.util.ObjectIdentifier countryName_oid;
    public static final sun.security.util.ObjectIdentifier localityName_oid;
    public static final sun.security.util.ObjectIdentifier orgName_oid;
    public static final sun.security.util.ObjectIdentifier orgUnitName_oid;
    public static final sun.security.util.ObjectIdentifier stateName_oid;
    public static final sun.security.util.ObjectIdentifier streetAddress_oid;
    public static final sun.security.util.ObjectIdentifier title_oid;
    public static final sun.security.util.ObjectIdentifier DNQUALIFIER_OID;
    public static final sun.security.util.ObjectIdentifier SURNAME_OID;
    public static final sun.security.util.ObjectIdentifier GIVENNAME_OID;
    public static final sun.security.util.ObjectIdentifier INITIALS_OID;
    public static final sun.security.util.ObjectIdentifier GENERATIONQUALIFIER_OID;
    public static final sun.security.util.ObjectIdentifier ipAddress_oid;
    public static final sun.security.util.ObjectIdentifier DOMAIN_COMPONENT_OID;
    public static final sun.security.util.ObjectIdentifier userid_oid;
    public static final sun.security.util.ObjectIdentifier SERIALNUMBER_OID;
    private static final java.lang.reflect.Constructor principalConstructor;
    private static final java.lang.reflect.Field principalField;

    public void <init>(java.lang.String) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.lang.String;
        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
        specialinvoke r0.<sun.security.x509.X500Name: void <init>(java.lang.String,java.util.Map)>(r1, $r2);
        return;
    }

    public void <init>(java.lang.String, java.util.Map) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        java.lang.String r1;
        java.util.Map r2;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Map;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        specialinvoke r0.<sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>(r1, r2);
        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        java.lang.String r1, r2, $r9;
        java.lang.NullPointerException $r3;
        boolean $z0, $z1;
        java.util.Map $r4;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Name must not be null");
        throw $r3;

     label0:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RFC2253");
        if $z0 == 0 goto label1;

        specialinvoke r0.<sun.security.x509.X500Name: void parseRFC2253DN(java.lang.String)>(r1);
        goto label3;

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DEFAULT");
        if $z1 == 0 goto label2;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
        specialinvoke r0.<sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>(r1, $r4);
        goto label3;

     label2:
        $r5 = new java.io.IOException;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported format ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r9);
        throw $r5;

     label3:
        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        java.lang.String r1, r2, r3, r4;
        sun.security.x509.RDN $r5, $r10, $r15, $r17, $r23, $r25, $r31, $r33;
        sun.security.util.DerValue $r6, $r21, $r29, $r37;
        sun.security.x509.RDN[] $r7, $r8, $r9, $r14, $r16, $r22, $r24, $r30, $r32;
        sun.security.x509.AVA[] $r11, $r18, $r26, $r34;
        sun.security.x509.AVA $r12, $r19, $r27, $r35;
        sun.security.util.ObjectIdentifier $r13, $r20, $r28, $r36;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r7 = newarray (sun.security.x509.RDN)[4];
        r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names> = $r7;
        $r8 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r5 = new sun.security.x509.RDN;
        specialinvoke $r5.<sun.security.x509.RDN: void <init>(int)>(1);
        $r8[3] = $r5;
        $r9 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r10 = $r9[3];
        $r11 = $r10.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $r12 = new sun.security.x509.AVA;
        $r13 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier commonName_oid>;
        $r6 = new sun.security.util.DerValue;
        specialinvoke $r6.<sun.security.util.DerValue: void <init>(java.lang.String)>(r1);
        specialinvoke $r12.<sun.security.x509.AVA: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>($r13, $r6);
        $r11[0] = $r12;
        $r14 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r15 = new sun.security.x509.RDN;
        specialinvoke $r15.<sun.security.x509.RDN: void <init>(int)>(1);
        $r14[2] = $r15;
        $r16 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r17 = $r16[2];
        $r18 = $r17.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $r19 = new sun.security.x509.AVA;
        $r20 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier orgUnitName_oid>;
        $r21 = new sun.security.util.DerValue;
        specialinvoke $r21.<sun.security.util.DerValue: void <init>(java.lang.String)>(r2);
        specialinvoke $r19.<sun.security.x509.AVA: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>($r20, $r21);
        $r18[0] = $r19;
        $r22 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r23 = new sun.security.x509.RDN;
        specialinvoke $r23.<sun.security.x509.RDN: void <init>(int)>(1);
        $r22[1] = $r23;
        $r24 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r25 = $r24[1];
        $r26 = $r25.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $r27 = new sun.security.x509.AVA;
        $r28 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier orgName_oid>;
        $r29 = new sun.security.util.DerValue;
        specialinvoke $r29.<sun.security.util.DerValue: void <init>(java.lang.String)>(r3);
        specialinvoke $r27.<sun.security.x509.AVA: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>($r28, $r29);
        $r26[0] = $r27;
        $r30 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r31 = new sun.security.x509.RDN;
        specialinvoke $r31.<sun.security.x509.RDN: void <init>(int)>(1);
        $r30[0] = $r31;
        $r32 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r33 = $r32[0];
        $r34 = $r33.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $r35 = new sun.security.x509.AVA;
        $r36 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier countryName_oid>;
        $r37 = new sun.security.util.DerValue;
        specialinvoke $r37.<sun.security.util.DerValue: void <init>(java.lang.String)>(r4);
        specialinvoke $r35.<sun.security.x509.AVA: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>($r36, $r37);
        $r34[0] = $r35;
        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        java.lang.String r1, r2, r3, r4, r5, r6;
        sun.security.x509.RDN $r7, $r12, $r17, $r19, $r25, $r27, $r33, $r35, $r41, $r43, $r49, $r51;
        sun.security.util.DerValue $r8, $r23, $r31, $r39, $r47, $r55;
        sun.security.x509.RDN[] $r9, $r10, $r11, $r16, $r18, $r24, $r26, $r32, $r34, $r40, $r42, $r48, $r50;
        sun.security.x509.AVA[] $r13, $r20, $r28, $r36, $r44, $r52;
        sun.security.x509.AVA $r14, $r21, $r29, $r37, $r45, $r53;
        sun.security.util.ObjectIdentifier $r15, $r22, $r30, $r38, $r46, $r54;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        r6 := @parameter5: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r9 = newarray (sun.security.x509.RDN)[6];
        r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names> = $r9;
        $r10 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r7 = new sun.security.x509.RDN;
        specialinvoke $r7.<sun.security.x509.RDN: void <init>(int)>(1);
        $r10[5] = $r7;
        $r11 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r12 = $r11[5];
        $r13 = $r12.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $r14 = new sun.security.x509.AVA;
        $r15 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier commonName_oid>;
        $r8 = new sun.security.util.DerValue;
        specialinvoke $r8.<sun.security.util.DerValue: void <init>(java.lang.String)>(r1);
        specialinvoke $r14.<sun.security.x509.AVA: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>($r15, $r8);
        $r13[0] = $r14;
        $r16 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r17 = new sun.security.x509.RDN;
        specialinvoke $r17.<sun.security.x509.RDN: void <init>(int)>(1);
        $r16[4] = $r17;
        $r18 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r19 = $r18[4];
        $r20 = $r19.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $r21 = new sun.security.x509.AVA;
        $r22 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier orgUnitName_oid>;
        $r23 = new sun.security.util.DerValue;
        specialinvoke $r23.<sun.security.util.DerValue: void <init>(java.lang.String)>(r2);
        specialinvoke $r21.<sun.security.x509.AVA: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>($r22, $r23);
        $r20[0] = $r21;
        $r24 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r25 = new sun.security.x509.RDN;
        specialinvoke $r25.<sun.security.x509.RDN: void <init>(int)>(1);
        $r24[3] = $r25;
        $r26 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r27 = $r26[3];
        $r28 = $r27.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $r29 = new sun.security.x509.AVA;
        $r30 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier orgName_oid>;
        $r31 = new sun.security.util.DerValue;
        specialinvoke $r31.<sun.security.util.DerValue: void <init>(java.lang.String)>(r3);
        specialinvoke $r29.<sun.security.x509.AVA: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>($r30, $r31);
        $r28[0] = $r29;
        $r32 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r33 = new sun.security.x509.RDN;
        specialinvoke $r33.<sun.security.x509.RDN: void <init>(int)>(1);
        $r32[2] = $r33;
        $r34 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r35 = $r34[2];
        $r36 = $r35.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $r37 = new sun.security.x509.AVA;
        $r38 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier localityName_oid>;
        $r39 = new sun.security.util.DerValue;
        specialinvoke $r39.<sun.security.util.DerValue: void <init>(java.lang.String)>(r4);
        specialinvoke $r37.<sun.security.x509.AVA: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>($r38, $r39);
        $r36[0] = $r37;
        $r40 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r41 = new sun.security.x509.RDN;
        specialinvoke $r41.<sun.security.x509.RDN: void <init>(int)>(1);
        $r40[1] = $r41;
        $r42 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r43 = $r42[1];
        $r44 = $r43.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $r45 = new sun.security.x509.AVA;
        $r46 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier stateName_oid>;
        $r47 = new sun.security.util.DerValue;
        specialinvoke $r47.<sun.security.util.DerValue: void <init>(java.lang.String)>(r5);
        specialinvoke $r45.<sun.security.x509.AVA: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>($r46, $r47);
        $r44[0] = $r45;
        $r48 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r49 = new sun.security.x509.RDN;
        specialinvoke $r49.<sun.security.x509.RDN: void <init>(int)>(1);
        $r48[0] = $r49;
        $r50 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r51 = $r50[0];
        $r52 = $r51.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $r53 = new sun.security.x509.AVA;
        $r54 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier countryName_oid>;
        $r55 = new sun.security.util.DerValue;
        specialinvoke $r55.<sun.security.util.DerValue: void <init>(java.lang.String)>(r6);
        specialinvoke $r53.<sun.security.x509.AVA: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>($r54, $r55);
        $r52[0] = $r53;
        return;
    }

    public void <init>(sun.security.x509.RDN[]) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.x509.RDN[] r1, $r2, $r4, $r5, $r6;
        int i0, $i1;
        java.lang.Object $r3;
        sun.security.x509.RDN $r7;
        java.io.IOException $r8;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.x509.RDN[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r2 = newarray (sun.security.x509.RDN)[0];
        r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names> = $r2;
        goto label3;

     label0:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (sun.security.x509.RDN[]) $r3;
        r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names> = $r4;
        i0 = 0;

     label1:
        $r5 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r5;
        if i0 >= $i1 goto label3;

        $r6 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r7 = $r6[i0];
        if $r7 != null goto label2;

        $r8 = new java.io.IOException;
        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Cannot create an X500Name");
        throw $r8;

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        return;
    }

    public void <init>(sun.security.util.DerValue) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.DerValue r1;
        sun.security.util.DerInputStream $r2;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.util.DerValue;
        $r2 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream toDerInputStream()>();
        specialinvoke r0.<sun.security.x509.X500Name: void <init>(sun.security.util.DerInputStream)>($r2);
        return;
    }

    public void <init>(sun.security.util.DerInputStream) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.DerInputStream r1;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.util.DerInputStream;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        specialinvoke r0.<sun.security.x509.X500Name: void parseDER(sun.security.util.DerInputStream)>(r1);
        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        byte[] r1;
        sun.security.util.DerInputStream r2, $r3;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new sun.security.util.DerInputStream;
        specialinvoke $r3.<sun.security.util.DerInputStream: void <init>(byte[])>(r1);
        r2 = $r3;
        specialinvoke r0.<sun.security.x509.X500Name: void parseDER(sun.security.util.DerInputStream)>(r2);
        return;
    }

    public java.util.List rdns()
    {
        sun.security.x509.X500Name r0;
        java.util.List r1, $r3;
        sun.security.x509.RDN[] $r2;

        r0 := @this: sun.security.x509.X500Name;
        r1 = r0.<sun.security.x509.X500Name: java.util.List rdnList>;
        if r1 != null goto label0;

        $r2 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);
        r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);
        r0.<sun.security.x509.X500Name: java.util.List rdnList> = r1;

     label0:
        return r1;
    }

    public int size()
    {
        sun.security.x509.X500Name r0;
        sun.security.x509.RDN[] $r1;
        int $i0;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i0 = lengthof $r1;
        return $i0;
    }

    public java.util.List allAvas()
    {
        sun.security.x509.X500Name r0;
        java.util.List r1, $r6;
        int i0, $i1;
        java.util.ArrayList $r2;
        sun.security.x509.RDN[] $r3, $r4;
        sun.security.x509.RDN $r5;

        r0 := @this: sun.security.x509.X500Name;
        r1 = r0.<sun.security.x509.X500Name: java.util.List allAvaList>;
        if r1 != null goto label1;

        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r1 = $r2;
        i0 = 0;

     label0:
        $r3 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r3;
        if i0 >= $i1 goto label1;

        $r4 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r5 = $r4[i0];
        $r6 = virtualinvoke $r5.<sun.security.x509.RDN: java.util.List avas()>();
        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r6);
        i0 = i0 + 1;
        goto label0;

     label1:
        return r1;
    }

    public int avaSize()
    {
        sun.security.x509.X500Name r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = virtualinvoke r0.<sun.security.x509.X500Name: java.util.List allAvas()>();
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        return $i0;
    }

    public boolean isEmpty()
    {
        sun.security.x509.X500Name r0;
        int i0, i1, $i2;
        sun.security.x509.RDN[] $r1, $r2;
        sun.security.x509.RDN $r3;
        sun.security.x509.AVA[] $r4;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        i0 = lengthof $r1;
        if i0 != 0 goto label0;

        return 1;

     label0:
        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r3 = $r2[i1];
        $r4 = $r3.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $i2 = lengthof $r4;
        if $i2 == 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        return 1;
    }

    public int hashCode()
    {
        sun.security.x509.X500Name r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = virtualinvoke r0.<sun.security.x509.X500Name: java.lang.String getRFC2253CanonicalName()>();
        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.x509.X500Name r0, r2;
        java.lang.Object r1;
        int i0, i1, $i2, $i3, $i4;
        sun.security.x509.RDN r3, r4;
        boolean $z0, $z1, $z2;
        java.lang.String $r5, $r6, $r7, $r8, r15, r16;
        sun.security.x509.RDN[] $r9, $r10, $r11, $r12;
        sun.security.x509.AVA[] $r13, $r14;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.security.x509.X500Name;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (sun.security.x509.X500Name) r1;
        $r5 = r0.<sun.security.x509.X500Name: java.lang.String canonicalDn>;
        if $r5 == null goto label2;

        $r6 = r2.<sun.security.x509.X500Name: java.lang.String canonicalDn>;
        if $r6 == null goto label2;

        $r7 = r0.<sun.security.x509.X500Name: java.lang.String canonicalDn>;
        $r8 = r2.<sun.security.x509.X500Name: java.lang.String canonicalDn>;
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        return $z1;

     label2:
        $r9 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        i0 = lengthof $r9;
        $r10 = r2.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i2 = lengthof $r10;
        if i0 == $i2 goto label3;

        return 0;

     label3:
        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        $r11 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        r3 = $r11[i1];
        $r12 = r2.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        r4 = $r12[i1];
        $r13 = r3.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $i3 = lengthof $r13;
        $r14 = r4.<sun.security.x509.RDN: sun.security.x509.AVA[] assertion>;
        $i4 = lengthof $r14;
        if $i3 == $i4 goto label5;

        return 0;

     label5:
        i1 = i1 + 1;
        goto label4;

     label6:
        r15 = virtualinvoke r0.<sun.security.x509.X500Name: java.lang.String getRFC2253CanonicalName()>();
        r16 = virtualinvoke r2.<sun.security.x509.X500Name: java.lang.String getRFC2253CanonicalName()>();
        $z2 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>(r16);
        return $z2;
    }

    private java.lang.String getString(sun.security.util.DerValue) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.DerValue r1;
        java.lang.String r2, $r7;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.io.IOException $r4;
        byte $b0;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.util.DerValue;
        if r1 != null goto label0;

        return null;

     label0:
        r2 = virtualinvoke r1.<sun.security.util.DerValue: java.lang.String getAsString()>();
        if r2 != null goto label1;

        $r4 = new java.io.IOException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a DER string encoding, ");
        $b0 = r1.<sun.security.util.DerValue: byte tag>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r7);
        throw $r4;

     label1:
        return r2;
    }

    public int getType()
    {
        sun.security.x509.X500Name r0;

        r0 := @this: sun.security.x509.X500Name;
        return 4;
    }

    public java.lang.String getCountry() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier countryName_oid>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getOrganization() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier orgName_oid>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getOrganizationalUnit() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier orgUnitName_oid>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getCommonName() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier commonName_oid>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getLocality() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier localityName_oid>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getState() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier stateName_oid>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getDomain() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier DOMAIN_COMPONENT_OID>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getDNQualifier() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier DNQUALIFIER_OID>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getSurname() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier SURNAME_OID>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getGivenName() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier GIVENNAME_OID>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getInitials() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier INITIALS_OID>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getGeneration() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier GENERATIONQUALIFIER_OID>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String getIP() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier $r1;
        sun.security.util.DerValue r2;
        java.lang.String $r3;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier ipAddress_oid>;
        r2 = specialinvoke r0.<sun.security.x509.X500Name: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>($r1);
        $r3 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String getString(sun.security.util.DerValue)>(r2);
        return $r3;
    }

    public java.lang.String toString()
    {
        sun.security.x509.X500Name r0;
        java.lang.String $r1, $r2;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = r0.<sun.security.x509.X500Name: java.lang.String dn>;
        if $r1 != null goto label0;

        specialinvoke r0.<sun.security.x509.X500Name: void generateDN()>();

     label0:
        $r2 = r0.<sun.security.x509.X500Name: java.lang.String dn>;
        return $r2;
    }

    public java.lang.String getRFC1779Name()
    {
        sun.security.x509.X500Name r0;
        java.util.Map $r1;
        java.lang.String $r2;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
        $r2 = virtualinvoke r0.<sun.security.x509.X500Name: java.lang.String getRFC1779Name(java.util.Map)>($r1);
        return $r2;
    }

    public java.lang.String getRFC1779Name(java.util.Map) throws java.lang.IllegalArgumentException
    {
        sun.security.x509.X500Name r0;
        java.util.Map r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r4, $r5, $r6;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.util.Map;
        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();
        if $z0 == 0 goto label1;

        $r2 = r0.<sun.security.x509.X500Name: java.lang.String rfc1779Dn>;
        if $r2 == null goto label0;

        $r3 = r0.<sun.security.x509.X500Name: java.lang.String rfc1779Dn>;
        return $r3;

     label0:
        $r4 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String generateRFC1779DN(java.util.Map)>(r1);
        r0.<sun.security.x509.X500Name: java.lang.String rfc1779Dn> = $r4;
        $r5 = r0.<sun.security.x509.X500Name: java.lang.String rfc1779Dn>;
        return $r5;

     label1:
        $r6 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String generateRFC1779DN(java.util.Map)>(r1);
        return $r6;
    }

    public java.lang.String getRFC2253Name()
    {
        sun.security.x509.X500Name r0;
        java.util.Map $r1;
        java.lang.String $r2;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
        $r2 = virtualinvoke r0.<sun.security.x509.X500Name: java.lang.String getRFC2253Name(java.util.Map)>($r1);
        return $r2;
    }

    public java.lang.String getRFC2253Name(java.util.Map)
    {
        sun.security.x509.X500Name r0;
        java.util.Map r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r4, $r5, $r6;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.util.Map;
        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();
        if $z0 == 0 goto label1;

        $r2 = r0.<sun.security.x509.X500Name: java.lang.String rfc2253Dn>;
        if $r2 == null goto label0;

        $r3 = r0.<sun.security.x509.X500Name: java.lang.String rfc2253Dn>;
        return $r3;

     label0:
        $r4 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String generateRFC2253DN(java.util.Map)>(r1);
        r0.<sun.security.x509.X500Name: java.lang.String rfc2253Dn> = $r4;
        $r5 = r0.<sun.security.x509.X500Name: java.lang.String rfc2253Dn>;
        return $r5;

     label1:
        $r6 = specialinvoke r0.<sun.security.x509.X500Name: java.lang.String generateRFC2253DN(java.util.Map)>(r1);
        return $r6;
    }

    private java.lang.String generateRFC2253DN(java.util.Map)
    {
        sun.security.x509.X500Name r0;
        java.util.Map r1;
        java.lang.StringBuilder r2, $r4;
        int i0, $i1, $i2, $i3, $i4;
        sun.security.x509.RDN[] $r3, $r5, $r6, $r8;
        sun.security.x509.RDN $r9;
        java.lang.String $r10, $r12;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.util.Map;
        $r3 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r3;
        if $i1 != 0 goto label0;

        return "";

     label0:
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(48);
        r2 = $r4;
        $r5 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i2 = lengthof $r5;
        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label3;

        $r6 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i3 = lengthof $r6;
        $i4 = $i3 - 1;
        if i0 >= $i4 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $r8 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r9 = $r8[i0];
        $r10 = virtualinvoke $r9.<sun.security.x509.RDN: java.lang.String toRFC2253String(java.util.Map)>(r1);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        i0 = i0 + -1;
        goto label1;

     label3:
        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r12;
    }

    public java.lang.String getRFC2253CanonicalName()
    {
        sun.security.x509.X500Name r0;
        java.lang.StringBuilder r1, $r6;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r3, $r5, $r12, $r14, $r15;
        sun.security.x509.RDN[] $r4, $r7, $r8, $r10;
        sun.security.x509.RDN $r11;

        r0 := @this: sun.security.x509.X500Name;
        $r2 = r0.<sun.security.x509.X500Name: java.lang.String canonicalDn>;
        if $r2 == null goto label0;

        $r3 = r0.<sun.security.x509.X500Name: java.lang.String canonicalDn>;
        return $r3;

     label0:
        $r4 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r4;
        if $i1 != 0 goto label1;

        r0.<sun.security.x509.X500Name: java.lang.String canonicalDn> = "";
        $r5 = r0.<sun.security.x509.X500Name: java.lang.String canonicalDn>;
        return $r5;

     label1:
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>(48);
        r1 = $r6;
        $r7 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i2 = lengthof $r7;
        i0 = $i2 - 1;

     label2:
        if i0 < 0 goto label4;

        $r8 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i3 = lengthof $r8;
        $i4 = $i3 - 1;
        if i0 >= $i4 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label3:
        $r10 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r11 = $r10[i0];
        $r12 = virtualinvoke $r11.<sun.security.x509.RDN: java.lang.String toRFC2253String(boolean)>(1);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        i0 = i0 + -1;
        goto label2;

     label4:
        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<sun.security.x509.X500Name: java.lang.String canonicalDn> = $r14;
        $r15 = r0.<sun.security.x509.X500Name: java.lang.String canonicalDn>;
        return $r15;
    }

    public java.lang.String getName()
    {
        sun.security.x509.X500Name r0;
        java.lang.String $r1;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = virtualinvoke r0.<sun.security.x509.X500Name: java.lang.String toString()>();
        return $r1;
    }

    private sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier r1;
        int i0, $i1;
        sun.security.util.DerValue r2;
        sun.security.x509.RDN[] $r3, $r4, $r5;
        sun.security.x509.RDN $r6;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.util.ObjectIdentifier;
        $r3 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        if $r3 == null goto label2;

        i0 = 0;

     label0:
        $r4 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r4;
        if i0 >= $i1 goto label2;

        $r5 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r6 = $r5[i0];
        r2 = virtualinvoke $r6.<sun.security.x509.RDN: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>(r1);
        if r2 == null goto label1;

        return r2;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return null;
    }

    public sun.security.util.DerValue findMostSpecificAttribute(sun.security.util.ObjectIdentifier)
    {
        sun.security.x509.X500Name r0;
        sun.security.util.ObjectIdentifier r1;
        int i0, $i1;
        sun.security.util.DerValue r2;
        sun.security.x509.RDN[] $r3, $r4, $r5;
        sun.security.x509.RDN $r6;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.util.ObjectIdentifier;
        $r3 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        if $r3 == null goto label2;

        $r4 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r4;
        i0 = $i1 - 1;

     label0:
        if i0 < 0 goto label2;

        $r5 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r6 = $r5[i0];
        r2 = virtualinvoke $r6.<sun.security.x509.RDN: sun.security.util.DerValue findAttribute(sun.security.util.ObjectIdentifier)>(r1);
        if r2 == null goto label1;

        return r2;

     label1:
        i0 = i0 + -1;
        goto label0;

     label2:
        return null;
    }

    private void parseDER(sun.security.util.DerInputStream) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.DerInputStream r1, $r9;
        null_type n0;
        byte[] r2, r8;
        java.io.IOException r3, $r6;
        sun.security.util.DerValue r4, $r7, $r14;
        sun.security.util.DerValue[] r5;
        sun.security.x509.RDN[] $r10, $r11, $r12;
        int $i0, i1, $i2;
        sun.security.x509.RDN $r13;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.util.DerInputStream;
        n0 = null;
        r2 = virtualinvoke r1.<sun.security.util.DerInputStream: byte[] toByteArray()>();

     label0:
        r5 = virtualinvoke r1.<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSequence(int)>(5);

     label1:
        goto label4;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;
        if r2 != null goto label3;

        r5 = null;
        goto label4;

     label3:
        $r7 = new sun.security.util.DerValue;
        specialinvoke $r7.<sun.security.util.DerValue: void <init>(byte,byte[])>(48, r2);
        r4 = $r7;
        r8 = virtualinvoke r4.<sun.security.util.DerValue: byte[] toByteArray()>();
        $r9 = new sun.security.util.DerInputStream;
        specialinvoke $r9.<sun.security.util.DerInputStream: void <init>(byte[])>(r8);
        r5 = virtualinvoke $r9.<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSequence(int)>(5);

     label4:
        if r5 != null goto label5;

        $r10 = newarray (sun.security.x509.RDN)[0];
        r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names> = $r10;
        goto label7;

     label5:
        $i0 = lengthof r5;
        $r11 = newarray (sun.security.x509.RDN)[$i0];
        r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names> = $r11;
        i1 = 0;

     label6:
        $i2 = lengthof r5;
        if i1 >= $i2 goto label7;

        $r12 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r13 = new sun.security.x509.RDN;
        $r14 = r5[i1];
        specialinvoke $r13.<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>($r14);
        $r12[i1] = $r13;
        i1 = i1 + 1;
        goto label6;

     label7:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void emit(sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.DerOutputStream r1;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.util.DerOutputStream;
        virtualinvoke r0.<sun.security.x509.X500Name: void encode(sun.security.util.DerOutputStream)>(r1);
        return;
    }

    public void encode(sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.DerOutputStream r1, $r2, r3;
        int i0, $i1;
        sun.security.x509.RDN[] $r4, $r5;
        sun.security.x509.RDN $r6;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.util.DerOutputStream;
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        i0 = 0;

     label0:
        $r4 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r4;
        if i0 >= $i1 goto label1;

        $r5 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r6 = $r5[i0];
        virtualinvoke $r6.<sun.security.x509.RDN: void encode(sun.security.util.DerOutputStream)>(r3);
        i0 = i0 + 1;
        goto label0;

     label1:
        virtualinvoke r1.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r3);
        return;
    }

    public byte[] getEncodedInternal() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        sun.security.util.DerOutputStream r1, r2, $r4, $r5;
        int i0, $i1;
        byte[] $r3, $r9, $r10;
        sun.security.x509.RDN[] $r6, $r7;
        sun.security.x509.RDN $r8;

        r0 := @this: sun.security.x509.X500Name;
        $r3 = r0.<sun.security.x509.X500Name: byte[] encoded>;
        if $r3 != null goto label2;

        $r4 = new sun.security.util.DerOutputStream;
        specialinvoke $r4.<sun.security.util.DerOutputStream: void <init>()>();
        r1 = $r4;
        $r5 = new sun.security.util.DerOutputStream;
        specialinvoke $r5.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r5;
        i0 = 0;

     label0:
        $r6 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r6;
        if i0 >= $i1 goto label1;

        $r7 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r8 = $r7[i0];
        virtualinvoke $r8.<sun.security.x509.RDN: void encode(sun.security.util.DerOutputStream)>(r2);
        i0 = i0 + 1;
        goto label0;

     label1:
        virtualinvoke r1.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r2);
        $r9 = virtualinvoke r1.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        r0.<sun.security.x509.X500Name: byte[] encoded> = $r9;

     label2:
        $r10 = r0.<sun.security.x509.X500Name: byte[] encoded>;
        return $r10;
    }

    public byte[] getEncoded() throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        byte[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = virtualinvoke r0.<sun.security.x509.X500Name: byte[] getEncodedInternal()>();
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (byte[]) $r2;
        return $r3;
    }

    private void parseDN(java.lang.String, java.util.Map) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        java.lang.String r1, r4, r5, r10;
        java.util.Map r2;
        java.util.ArrayList r3, $r8;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8;
        sun.security.x509.RDN r6, $r9, $r11, r12;
        sun.security.x509.RDN[] $r7, $r13, $r15;
        boolean $z0;
        java.lang.Object[] $r14;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Map;
        if r1 == null goto label0;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i6 != 0 goto label1;

     label0:
        $r7 = newarray (sun.security.x509.RDN)[0];
        r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names> = $r7;
        return;

     label1:
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r3 = $r8;
        i0 = 0;
        i1 = 0;
        r4 = r1;
        i2 = 0;
        i3 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(44);
        i4 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(59);

     label2:
        if i3 >= 0 goto label3;

        if i4 < 0 goto label8;

     label3:
        if i4 >= 0 goto label4;

        i5 = i3;
        goto label6;

     label4:
        if i3 >= 0 goto label5;

        i5 = i4;
        goto label6;

     label5:
        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i4);

     label6:
        $i7 = staticinvoke <sun.security.x509.X500Name: int countQuotes(java.lang.String,int,int)>(r4, i2, i5);
        i1 = i1 + $i7;
        if i5 < 0 goto label7;

        if i1 == 1 goto label7;

        $z0 = staticinvoke <sun.security.x509.X500Name: boolean escaped(int,int,java.lang.String)>(i5, i2, r4);
        if $z0 != 0 goto label7;

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(i0, i5);
        $r9 = new sun.security.x509.RDN;
        specialinvoke $r9.<sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>(r5, r2);
        r6 = $r9;
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);
        i0 = i5 + 1;
        i1 = 0;

     label7:
        i2 = i5 + 1;
        i3 = virtualinvoke r4.<java.lang.String: int indexOf(int,int)>(44, i2);
        i4 = virtualinvoke r4.<java.lang.String: int indexOf(int,int)>(59, i2);
        goto label2;

     label8:
        r10 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(i0);
        $r11 = new sun.security.x509.RDN;
        specialinvoke $r11.<sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>(r10, r2);
        r12 = $r11;
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r12);
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r3);
        $i8 = interfaceinvoke r3.<java.util.List: int size()>();
        $r13 = newarray (sun.security.x509.RDN)[$i8];
        $r14 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13);
        $r15 = (sun.security.x509.RDN[]) $r14;
        r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names> = $r15;
        return;
    }

    private void parseRFC2253DN(java.lang.String) throws java.io.IOException
    {
        sun.security.x509.X500Name r0;
        java.lang.String r1, r3, r8;
        java.util.ArrayList r2, $r6;
        int i0, i1, i2, $i3, $i4;
        sun.security.x509.RDN r4, $r7, $r9, r10;
        sun.security.x509.RDN[] $r5, $r11, $r13;
        boolean $z0;
        java.lang.Object[] $r12;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.lang.String;
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i3 != 0 goto label0;

        $r5 = newarray (sun.security.x509.RDN)[0];
        r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names> = $r5;
        return;

     label0:
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r2 = $r6;
        i0 = 0;
        i1 = 0;
        i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(44);

     label1:
        if i2 < 0 goto label3;

        if i2 <= 0 goto label2;

        $z0 = staticinvoke <sun.security.x509.X500Name: boolean escaped(int,int,java.lang.String)>(i2, i1, r1);
        if $z0 != 0 goto label2;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i2);
        $r7 = new sun.security.x509.RDN;
        specialinvoke $r7.<sun.security.x509.RDN: void <init>(java.lang.String,java.lang.String)>(r3, "RFC2253");
        r4 = $r7;
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);
        i0 = i2 + 1;

     label2:
        i1 = i2 + 1;
        i2 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(44, i1);
        goto label1;

     label3:
        r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);
        $r9 = new sun.security.x509.RDN;
        specialinvoke $r9.<sun.security.x509.RDN: void <init>(java.lang.String,java.lang.String)>(r8, "RFC2253");
        r10 = $r9;
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r10);
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r2);
        $i4 = interfaceinvoke r2.<java.util.List: int size()>();
        $r11 = newarray (sun.security.x509.RDN)[$i4];
        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11);
        $r13 = (sun.security.x509.RDN[]) $r12;
        r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names> = $r13;
        return;
    }

    static int countQuotes(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, $i6;
        char $c4, $c5, $c7;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = 0;
        i3 = i0;

     label0:
        if i3 >= i1 goto label4;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);
        if $c4 != 34 goto label1;

        if i3 == i0 goto label2;

     label1:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);
        if $c5 != 34 goto label3;

        $i6 = i3 - 1;
        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);
        if $c7 == 92 goto label3;

     label2:
        i2 = i2 + 1;

     label3:
        i3 = i3 + 1;
        goto label0;

     label4:
        return i2;
    }

    private static boolean escaped(int, int, java.lang.String)
    {
        int i0, i1, i2, $i3, $i5, $i7, $i9, $i11, i13, $i15;
        java.lang.String r0;
        char $c4, $c6, $c8, $c10, $c12, $c14;
        boolean $z0;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r0 := @parameter2: java.lang.String;
        if i0 != 1 goto label0;

        $i3 = i0 - 1;
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);
        if $c4 != 92 goto label0;

        return 1;

     label0:
        if i0 <= 1 goto label1;

        $i5 = i0 - 1;
        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);
        if $c6 != 92 goto label1;

        $i7 = i0 - 2;
        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);
        if $c8 == 92 goto label1;

        return 1;

     label1:
        if i0 <= 1 goto label7;

        $i9 = i0 - 1;
        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i9);
        if $c10 != 92 goto label7;

        $i11 = i0 - 2;
        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i11);
        if $c12 != 92 goto label7;

        i2 = 0;
        i13 = i0 + -1;

     label2:
        if i13 < i1 goto label4;

        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);
        if $c14 != 92 goto label3;

        i2 = i2 + 1;

     label3:
        i13 = i13 + -1;
        goto label2;

     label4:
        $i15 = i2 % 2;
        if $i15 == 0 goto label5;

        $z0 = 1;
        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;

     label7:
        return 0;
    }

    private void generateDN()
    {
        sun.security.x509.X500Name r0;
        java.lang.StringBuilder r1, $r6;
        int i0, $i1, $i2, $i3, $i4;
        sun.security.x509.RDN[] $r2, $r3, $r7, $r8, $r9, $r11;
        sun.security.x509.RDN $r4, $r12;
        java.lang.String $r5, $r13, $r15;

        r0 := @this: sun.security.x509.X500Name;
        $r2 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r2;
        if $i1 != 1 goto label0;

        $r3 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r4 = $r3[0];
        $r5 = virtualinvoke $r4.<sun.security.x509.RDN: java.lang.String toString()>();
        r0.<sun.security.x509.X500Name: java.lang.String dn> = $r5;
        return;

     label0:
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>(48);
        r1 = $r6;
        $r7 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        if $r7 == null goto label3;

        $r8 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i2 = lengthof $r8;
        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label3;

        $r9 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i3 = lengthof $r9;
        $i4 = $i3 - 1;
        if i0 == $i4 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r11 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r12 = $r11[i0];
        $r13 = virtualinvoke $r12.<sun.security.x509.RDN: java.lang.String toString()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        i0 = i0 + -1;
        goto label1;

     label3:
        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<sun.security.x509.X500Name: java.lang.String dn> = $r15;
        return;
    }

    private java.lang.String generateRFC1779DN(java.util.Map)
    {
        sun.security.x509.X500Name r0;
        java.util.Map r1;
        java.lang.StringBuilder r2, $r7;
        int i0, $i1, $i2, $i3, $i4;
        sun.security.x509.RDN[] $r3, $r4, $r8, $r9, $r10, $r12;
        sun.security.x509.RDN $r5, $r13;
        java.lang.String $r6, $r14, $r16;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: java.util.Map;
        $r3 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r3;
        if $i1 != 1 goto label0;

        $r4 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r5 = $r4[0];
        $r6 = virtualinvoke $r5.<sun.security.x509.RDN: java.lang.String toRFC1779String(java.util.Map)>(r1);
        return $r6;

     label0:
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(48);
        r2 = $r7;
        $r8 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        if $r8 == null goto label3;

        $r9 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i2 = lengthof $r9;
        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label3;

        $r10 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i3 = lengthof $r10;
        $i4 = $i3 - 1;
        if i0 == $i4 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r12 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r13 = $r12[i0];
        $r14 = virtualinvoke $r13.<sun.security.x509.RDN: java.lang.String toRFC1779String(java.util.Map)>(r1);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        i0 = i0 + -1;
        goto label1;

     label3:
        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r16;
    }

    static sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)
    {
        sun.security.util.ObjectIdentifier r0, r2;
        java.util.Map $r1, $r4;
        java.lang.Object $r3;

        r0 := @parameter0: sun.security.util.ObjectIdentifier;
        $r1 = <sun.security.x509.X500Name: java.util.Map internedOIDs>;
        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (sun.security.util.ObjectIdentifier) $r3;
        if r2 == null goto label0;

        return r2;

     label0:
        $r4 = <sun.security.x509.X500Name: java.util.Map internedOIDs>;
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r0);
        return r0;
    }

    public int constrains(sun.security.x509.GeneralNameInterface) throws java.lang.UnsupportedOperationException
    {
        sun.security.x509.X500Name r0, r2;
        sun.security.x509.GeneralNameInterface r1;
        byte b0;
        int $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        sun.security.x509.RDN[] $r3, $r4;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.x509.GeneralNameInterface;
        if r1 != null goto label0;

        b0 = -1;
        goto label7;

     label0:
        $i1 = interfaceinvoke r1.<sun.security.x509.GeneralNameInterface: int getType()>();
        if $i1 == 4 goto label1;

        b0 = -1;
        goto label7;

     label1:
        r2 = (sun.security.x509.X500Name) r1;
        $z0 = virtualinvoke r2.<sun.security.x509.X500Name: boolean equals(java.lang.Object)>(r0);
        if $z0 == 0 goto label2;

        b0 = 0;
        goto label7;

     label2:
        $r3 = r2.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i2 = lengthof $r3;
        if $i2 != 0 goto label3;

        b0 = 2;
        goto label7;

     label3:
        $r4 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i3 = lengthof $r4;
        if $i3 != 0 goto label4;

        b0 = 1;
        goto label7;

     label4:
        $z1 = specialinvoke r2.<sun.security.x509.X500Name: boolean isWithinSubtree(sun.security.x509.X500Name)>(r0);
        if $z1 == 0 goto label5;

        b0 = 1;
        goto label7;

     label5:
        $z2 = specialinvoke r0.<sun.security.x509.X500Name: boolean isWithinSubtree(sun.security.x509.X500Name)>(r2);
        if $z2 == 0 goto label6;

        b0 = 2;
        goto label7;

     label6:
        b0 = 3;

     label7:
        return b0;
    }

    private boolean isWithinSubtree(sun.security.x509.X500Name)
    {
        sun.security.x509.X500Name r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        sun.security.x509.RDN[] $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        sun.security.x509.RDN $r8, $r10;
        boolean $z0;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.x509.X500Name;
        if r0 != r1 goto label0;

        return 1;

     label0:
        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i1 = lengthof $r2;
        if $i1 != 0 goto label2;

        return 1;

     label2:
        $r3 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i2 = lengthof $r3;
        if $i2 != 0 goto label3;

        return 0;

     label3:
        $r4 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i3 = lengthof $r4;
        $r5 = r1.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i4 = lengthof $r5;
        if $i3 >= $i4 goto label4;

        return 0;

     label4:
        i0 = 0;

     label5:
        $r6 = r1.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i5 = lengthof $r6;
        if i0 >= $i5 goto label7;

        $r7 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r8 = $r7[i0];
        $r9 = r1.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r10 = $r9[i0];
        $z0 = virtualinvoke $r8.<sun.security.x509.RDN: boolean equals(java.lang.Object)>($r10);
        if $z0 != 0 goto label6;

        return 0;

     label6:
        i0 = i0 + 1;
        goto label5;

     label7:
        return 1;
    }

    public int subtreeDepth() throws java.lang.UnsupportedOperationException
    {
        sun.security.x509.X500Name r0;
        sun.security.x509.RDN[] $r1;
        int $i0;

        r0 := @this: sun.security.x509.X500Name;
        $r1 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $i0 = lengthof $r1;
        return $i0;
    }

    public sun.security.x509.X500Name commonAncestor(sun.security.x509.X500Name)
    {
        sun.security.x509.X500Name r0, r1, $r12, r13;
        int i0, i1, i2, i3, i4, $i5;
        sun.security.x509.RDN[] r2, $r4, $r5, $r6, $r8, $r10;
        java.io.IOException r3, $r14;
        sun.security.x509.RDN $r7, $r9, $r11;
        boolean $z0;
        null_type n0;

        r0 := @this: sun.security.x509.X500Name;
        r1 := @parameter0: sun.security.x509.X500Name;
        if r1 != null goto label0;

        return null;

     label0:
        $r4 = r1.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        i0 = lengthof $r4;
        $r5 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        i1 = lengthof $r5;
        if i1 == 0 goto label1;

        if i0 != 0 goto label2;

     label1:
        return null;

     label2:
        if i1 >= i0 goto label3;

        $i5 = i1;
        goto label4;

     label3:
        $i5 = i0;

     label4:
        i2 = $i5;
        i3 = 0;

     label5:
        if i3 >= i2 goto label7;

        $r6 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r7 = $r6[i3];
        $r8 = r1.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r9 = $r8[i3];
        $z0 = virtualinvoke $r7.<sun.security.x509.RDN: boolean equals(java.lang.Object)>($r9);
        if $z0 != 0 goto label6;

        if i3 != 0 goto label7;

        return null;

     label6:
        i3 = i3 + 1;
        goto label5;

     label7:
        r2 = newarray (sun.security.x509.RDN)[i3];
        i4 = 0;

     label8:
        if i4 >= i3 goto label9;

        $r10 = r0.<sun.security.x509.X500Name: sun.security.x509.RDN[] names>;
        $r11 = $r10[i4];
        r2[i4] = $r11;
        i4 = i4 + 1;
        goto label8;

     label9:
        n0 = null;

     label10:
        $r12 = new sun.security.x509.X500Name;
        specialinvoke $r12.<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>(r2);
        r13 = $r12;

     label11:
        goto label13;

     label12:
        $r14 := @caughtexception;
        r3 = $r14;
        return null;

     label13:
        return r13;

        catch java.io.IOException from label10 to label11 with label12;
    }

    public javax.security.auth.x500.X500Principal asX500Principal()
    {
        sun.security.x509.X500Name r0;
        java.lang.Object[] r1, $r3;
        javax.security.auth.x500.X500Principal $r2, $r6, $r10;
        java.lang.reflect.Constructor $r4;
        java.lang.Object $r5;
        java.lang.Exception $r7, r8;
        java.lang.RuntimeException $r9;

        r0 := @this: sun.security.x509.X500Name;
        $r2 = r0.<sun.security.x509.X500Name: javax.security.auth.x500.X500Principal x500Principal>;
        if $r2 != null goto label3;

     label0:
        $r3 = newarray (java.lang.Object)[1];
        $r3[0] = r0;
        r1 = $r3;
        $r4 = <sun.security.x509.X500Name: java.lang.reflect.Constructor principalConstructor>;
        $r5 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r1);
        $r6 = (javax.security.auth.x500.X500Principal) $r5;
        r0.<sun.security.x509.X500Name: javax.security.auth.x500.X500Principal x500Principal> = $r6;

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = new java.lang.RuntimeException;
        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected exception", r8);
        throw $r9;

     label3:
        $r10 = r0.<sun.security.x509.X500Name: javax.security.auth.x500.X500Principal x500Principal>;
        return $r10;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public static sun.security.x509.X500Name asX500Name(javax.security.auth.x500.X500Principal)
    {
        javax.security.auth.x500.X500Principal r0;
        java.lang.reflect.Field $r1;
        sun.security.x509.X500Name r2;
        java.lang.Object $r3;
        java.lang.Exception $r5, r6;
        java.lang.RuntimeException $r7;

        r0 := @parameter0: javax.security.auth.x500.X500Principal;

     label0:
        $r1 = <sun.security.x509.X500Name: java.lang.reflect.Field principalField>;
        $r3 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (sun.security.x509.X500Name) $r3;
        r2.<sun.security.x509.X500Name: javax.security.auth.x500.X500Principal x500Principal> = r0;

     label1:
        return r2;

     label2:
        $r5 := @caughtexception;
        r6 = $r5;
        $r7 = new java.lang.RuntimeException;
        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected exception", r6);
        throw $r7;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        sun.security.x509.X500Name$1 r1, $r71;
        java.lang.Object[] r2;
        int[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68;
        sun.security.util.ObjectIdentifier $r21, $r22, $r24, $r25, $r27, $r28, $r30, $r31, $r33, $r34, $r36, $r37, $r39, $r40, $r42, $r43, $r45, $r46, $r48, $r49, $r51, $r52, $r54, $r55, $r57, $r58, $r60, $r61, $r63, $r64, $r66, $r67, $r69, $r70;
        java.lang.Object $r72, $r73, $r75;
        java.lang.reflect.Constructor $r74;
        java.lang.reflect.Field $r76;
        java.lang.Exception $r77, r78;
        java.lang.InternalError $r79, $r81;
        java.lang.Throwable $r80;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <sun.security.x509.X500Name: java.util.Map internedOIDs> = $r0;
        $r3 = newarray (int)[4];
        $r3[0] = 2;
        $r3[1] = 5;
        $r3[2] = 4;
        $r3[3] = 3;
        <sun.security.x509.X500Name: int[] commonName_data> = $r3;
        $r4 = newarray (int)[4];
        $r4[0] = 2;
        $r4[1] = 5;
        $r4[2] = 4;
        $r4[3] = 4;
        <sun.security.x509.X500Name: int[] SURNAME_DATA> = $r4;
        $r5 = newarray (int)[4];
        $r5[0] = 2;
        $r5[1] = 5;
        $r5[2] = 4;
        $r5[3] = 5;
        <sun.security.x509.X500Name: int[] SERIALNUMBER_DATA> = $r5;
        $r6 = newarray (int)[4];
        $r6[0] = 2;
        $r6[1] = 5;
        $r6[2] = 4;
        $r6[3] = 6;
        <sun.security.x509.X500Name: int[] countryName_data> = $r6;
        $r7 = newarray (int)[4];
        $r7[0] = 2;
        $r7[1] = 5;
        $r7[2] = 4;
        $r7[3] = 7;
        <sun.security.x509.X500Name: int[] localityName_data> = $r7;
        $r8 = newarray (int)[4];
        $r8[0] = 2;
        $r8[1] = 5;
        $r8[2] = 4;
        $r8[3] = 8;
        <sun.security.x509.X500Name: int[] stateName_data> = $r8;
        $r9 = newarray (int)[4];
        $r9[0] = 2;
        $r9[1] = 5;
        $r9[2] = 4;
        $r9[3] = 9;
        <sun.security.x509.X500Name: int[] streetAddress_data> = $r9;
        $r10 = newarray (int)[4];
        $r10[0] = 2;
        $r10[1] = 5;
        $r10[2] = 4;
        $r10[3] = 10;
        <sun.security.x509.X500Name: int[] orgName_data> = $r10;
        $r11 = newarray (int)[4];
        $r11[0] = 2;
        $r11[1] = 5;
        $r11[2] = 4;
        $r11[3] = 11;
        <sun.security.x509.X500Name: int[] orgUnitName_data> = $r11;
        $r12 = newarray (int)[4];
        $r12[0] = 2;
        $r12[1] = 5;
        $r12[2] = 4;
        $r12[3] = 12;
        <sun.security.x509.X500Name: int[] title_data> = $r12;
        $r13 = newarray (int)[4];
        $r13[0] = 2;
        $r13[1] = 5;
        $r13[2] = 4;
        $r13[3] = 42;
        <sun.security.x509.X500Name: int[] GIVENNAME_DATA> = $r13;
        $r14 = newarray (int)[4];
        $r14[0] = 2;
        $r14[1] = 5;
        $r14[2] = 4;
        $r14[3] = 43;
        <sun.security.x509.X500Name: int[] INITIALS_DATA> = $r14;
        $r15 = newarray (int)[4];
        $r15[0] = 2;
        $r15[1] = 5;
        $r15[2] = 4;
        $r15[3] = 44;
        <sun.security.x509.X500Name: int[] GENERATIONQUALIFIER_DATA> = $r15;
        $r16 = newarray (int)[4];
        $r16[0] = 2;
        $r16[1] = 5;
        $r16[2] = 4;
        $r16[3] = 46;
        <sun.security.x509.X500Name: int[] DNQUALIFIER_DATA> = $r16;
        $r17 = newarray (int)[11];
        $r17[0] = 1;
        $r17[1] = 3;
        $r17[2] = 6;
        $r17[3] = 1;
        $r17[4] = 4;
        $r17[5] = 1;
        $r17[6] = 42;
        $r17[7] = 2;
        $r17[8] = 11;
        $r17[9] = 2;
        $r17[10] = 1;
        <sun.security.x509.X500Name: int[] ipAddress_data> = $r17;
        $r18 = newarray (int)[7];
        $r18[0] = 0;
        $r18[1] = 9;
        $r18[2] = 2342;
        $r18[3] = 19200300;
        $r18[4] = 100;
        $r18[5] = 1;
        $r18[6] = 25;
        <sun.security.x509.X500Name: int[] DOMAIN_COMPONENT_DATA> = $r18;
        $r19 = newarray (int)[7];
        $r19[0] = 0;
        $r19[1] = 9;
        $r19[2] = 2342;
        $r19[3] = 19200300;
        $r19[4] = 100;
        $r19[5] = 1;
        $r19[6] = 1;
        <sun.security.x509.X500Name: int[] userid_data> = $r19;
        $r20 = <sun.security.x509.X500Name: int[] commonName_data>;
        $r21 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r20);
        $r22 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r21);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier commonName_oid> = $r22;
        $r23 = <sun.security.x509.X500Name: int[] SERIALNUMBER_DATA>;
        $r24 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r23);
        $r25 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r24);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier SERIALNUMBER_OID> = $r25;
        $r26 = <sun.security.x509.X500Name: int[] countryName_data>;
        $r27 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r26);
        $r28 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r27);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier countryName_oid> = $r28;
        $r29 = <sun.security.x509.X500Name: int[] localityName_data>;
        $r30 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r29);
        $r31 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r30);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier localityName_oid> = $r31;
        $r32 = <sun.security.x509.X500Name: int[] orgName_data>;
        $r33 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r32);
        $r34 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r33);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier orgName_oid> = $r34;
        $r35 = <sun.security.x509.X500Name: int[] orgUnitName_data>;
        $r36 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r35);
        $r37 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r36);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier orgUnitName_oid> = $r37;
        $r38 = <sun.security.x509.X500Name: int[] stateName_data>;
        $r39 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r38);
        $r40 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r39);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier stateName_oid> = $r40;
        $r41 = <sun.security.x509.X500Name: int[] streetAddress_data>;
        $r42 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r41);
        $r43 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r42);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier streetAddress_oid> = $r43;
        $r44 = <sun.security.x509.X500Name: int[] title_data>;
        $r45 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r44);
        $r46 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r45);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier title_oid> = $r46;
        $r47 = <sun.security.x509.X500Name: int[] DNQUALIFIER_DATA>;
        $r48 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r47);
        $r49 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r48);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier DNQUALIFIER_OID> = $r49;
        $r50 = <sun.security.x509.X500Name: int[] SURNAME_DATA>;
        $r51 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r50);
        $r52 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r51);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier SURNAME_OID> = $r52;
        $r53 = <sun.security.x509.X500Name: int[] GIVENNAME_DATA>;
        $r54 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r53);
        $r55 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r54);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier GIVENNAME_OID> = $r55;
        $r56 = <sun.security.x509.X500Name: int[] INITIALS_DATA>;
        $r57 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r56);
        $r58 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r57);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier INITIALS_OID> = $r58;
        $r59 = <sun.security.x509.X500Name: int[] GENERATIONQUALIFIER_DATA>;
        $r60 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r59);
        $r61 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r60);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier GENERATIONQUALIFIER_OID> = $r61;
        $r62 = <sun.security.x509.X500Name: int[] ipAddress_data>;
        $r63 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r62);
        $r64 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r63);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier ipAddress_oid> = $r64;
        $r65 = <sun.security.x509.X500Name: int[] DOMAIN_COMPONENT_DATA>;
        $r66 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r65);
        $r67 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r66);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier DOMAIN_COMPONENT_OID> = $r67;
        $r68 = <sun.security.x509.X500Name: int[] userid_data>;
        $r69 = staticinvoke <sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>($r68);
        $r70 = staticinvoke <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>($r69);
        <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier userid_oid> = $r70;
        $r71 = new sun.security.x509.X500Name$1;
        specialinvoke $r71.<sun.security.x509.X500Name$1: void <init>()>();
        r1 = $r71;

     label0:
        $r72 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>(r1);
        r2 = (java.lang.Object[]) $r72;
        $r73 = r2[0];
        $r74 = (java.lang.reflect.Constructor) $r73;
        <sun.security.x509.X500Name: java.lang.reflect.Constructor principalConstructor> = $r74;
        $r75 = r2[1];
        $r76 = (java.lang.reflect.Field) $r75;
        <sun.security.x509.X500Name: java.lang.reflect.Field principalField> = $r76;

     label1:
        goto label3;

     label2:
        $r77 := @caughtexception;
        r78 = $r77;
        $r79 = new java.lang.InternalError;
        specialinvoke $r79.<java.lang.InternalError: void <init>(java.lang.String)>("Could not obtain X500Principal access");
        $r80 = virtualinvoke $r79.<java.lang.InternalError: java.lang.Throwable initCause(java.lang.Throwable)>(r78);
        $r81 = (java.lang.InternalError) $r80;
        throw $r81;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }
}
