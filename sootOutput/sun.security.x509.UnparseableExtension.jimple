class sun.security.x509.UnparseableExtension extends sun.security.x509.Extension
{
    private java.lang.String name;
    private java.lang.Throwable why;

    public void <init>(sun.security.x509.Extension, java.lang.Throwable)
    {
        sun.security.x509.UnparseableExtension r0;
        sun.security.x509.Extension r1;
        java.lang.Throwable r2;
        java.lang.Class r3;
        java.lang.reflect.Field r4;
        sun.security.util.ObjectIdentifier $r5;
        java.lang.StringBuilder $r6, $r10, $r11;
        java.lang.Object $r7;
        java.lang.String $r8, $r9, $r12;
        java.lang.Exception $r13, r14;

        r0 := @this: sun.security.x509.UnparseableExtension;
        r1 := @parameter0: sun.security.x509.Extension;
        r2 := @parameter1: java.lang.Throwable;
        specialinvoke r0.<sun.security.x509.Extension: void <init>(sun.security.x509.Extension)>(r1);
        r0.<sun.security.x509.UnparseableExtension: java.lang.String name> = "";

     label0:
        $r5 = virtualinvoke r1.<sun.security.x509.Extension: sun.security.util.ObjectIdentifier getExtensionId()>();
        r3 = staticinvoke <sun.security.x509.OIDMap: java.lang.Class getClass(sun.security.util.ObjectIdentifier)>($r5);
        if r3 == null goto label1;

        r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("NAME");
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
        $r8 = (java.lang.String) $r7;
        $r9 = (java.lang.String) $r8;
        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<sun.security.x509.UnparseableExtension: java.lang.String name> = $r12;

     label1:
        goto label3;

     label2:
        $r13 := @caughtexception;
        r14 = $r13;

     label3:
        r0.<sun.security.x509.UnparseableExtension: java.lang.Throwable why> = r2;
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public java.lang.String toString()
    {
        sun.security.x509.UnparseableExtension r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r14;
        java.lang.String $r2, $r5, $r13, $r15;
        java.lang.Throwable $r8;
        sun.misc.HexDumpEncoder $r11;
        byte[] $r12;

        r0 := @this: sun.security.x509.UnparseableExtension;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = specialinvoke r0.<sun.security.x509.Extension: java.lang.String toString()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unparseable ");
        $r5 = r0.<sun.security.x509.UnparseableExtension: java.lang.String name>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extension due to\n");
        $r8 = r0.<sun.security.x509.UnparseableExtension: java.lang.Throwable why>;
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");
        $r11 = new sun.misc.HexDumpEncoder;
        specialinvoke $r11.<sun.misc.HexDumpEncoder: void <init>()>();
        $r12 = virtualinvoke r0.<sun.security.x509.UnparseableExtension: byte[] getExtensionValue()>();
        $r13 = virtualinvoke $r11.<sun.misc.HexDumpEncoder: java.lang.String encodeBuffer(byte[])>($r12);
        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r15;
    }
}
