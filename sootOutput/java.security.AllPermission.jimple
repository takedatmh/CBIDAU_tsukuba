public final class java.security.AllPermission extends java.security.Permission
{
    private static final long serialVersionUID;

    public void <init>()
    {
        java.security.AllPermission r0;

        r0 := @this: java.security.AllPermission;
        specialinvoke r0.<java.security.Permission: void <init>(java.lang.String)>("<all permissions>");
        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.security.AllPermission r0;
        java.lang.String r1, r2;

        r0 := @this: java.security.AllPermission;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.security.AllPermission: void <init>()>();
        return;
    }

    public boolean implies(java.security.Permission)
    {
        java.security.AllPermission r0;
        java.security.Permission r1;

        r0 := @this: java.security.AllPermission;
        r1 := @parameter0: java.security.Permission;
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        java.security.AllPermission r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: java.security.AllPermission;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.security.AllPermission;
        return $z0;
    }

    public int hashCode()
    {
        java.security.AllPermission r0;

        r0 := @this: java.security.AllPermission;
        return 1;
    }

    public java.lang.String getActions()
    {
        java.security.AllPermission r0;

        r0 := @this: java.security.AllPermission;
        return "<all actions>";
    }

    public java.security.PermissionCollection newPermissionCollection()
    {
        java.security.AllPermission r0;
        java.security.AllPermissionCollection $r1;

        r0 := @this: java.security.AllPermission;
        $r1 = new java.security.AllPermissionCollection;
        specialinvoke $r1.<java.security.AllPermissionCollection: void <init>()>();
        return $r1;
    }
}
