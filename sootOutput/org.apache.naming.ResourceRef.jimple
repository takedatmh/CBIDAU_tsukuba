public class org.apache.naming.ResourceRef extends org.apache.naming.AbstractRef
{
    private static final long serialVersionUID;
    public static final java.lang.String DEFAULT_FACTORY;
    public static final java.lang.String DESCRIPTION;
    public static final java.lang.String SCOPE;
    public static final java.lang.String AUTH;
    public static final java.lang.String SINGLETON;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.apache.naming.ResourceRef r0;
        java.lang.String r1, r2, r3, r4;
        boolean z0;

        r0 := @this: org.apache.naming.ResourceRef;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        z0 := @parameter4: boolean;
        specialinvoke r0.<org.apache.naming.ResourceRef: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, r3, r4, z0, null, null);
        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String)
    {
        org.apache.naming.ResourceRef r0;
        java.lang.String r1, r2, r3, r4, r5, r6, $r14;
        boolean z0;
        null_type n0;
        javax.naming.StringRefAddr $r7, r8, $r9, r10, $r11, r12, $r13, r15;

        r0 := @this: org.apache.naming.ResourceRef;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        z0 := @parameter4: boolean;
        r5 := @parameter5: java.lang.String;
        r6 := @parameter6: java.lang.String;
        specialinvoke r0.<org.apache.naming.AbstractRef: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r5, r6);
        n0 = null;
        if r2 == null goto label0;

        $r7 = new javax.naming.StringRefAddr;
        specialinvoke $r7.<javax.naming.StringRefAddr: void <init>(java.lang.String,java.lang.String)>("description", r2);
        r8 = $r7;
        virtualinvoke r0.<org.apache.naming.ResourceRef: void add(javax.naming.RefAddr)>(r8);

     label0:
        if r3 == null goto label1;

        $r9 = new javax.naming.StringRefAddr;
        specialinvoke $r9.<javax.naming.StringRefAddr: void <init>(java.lang.String,java.lang.String)>("scope", r3);
        r10 = $r9;
        virtualinvoke r0.<org.apache.naming.ResourceRef: void add(javax.naming.RefAddr)>(r10);

     label1:
        if r4 == null goto label2;

        $r11 = new javax.naming.StringRefAddr;
        specialinvoke $r11.<javax.naming.StringRefAddr: void <init>(java.lang.String,java.lang.String)>("auth", r4);
        r12 = $r11;
        virtualinvoke r0.<org.apache.naming.ResourceRef: void add(javax.naming.RefAddr)>(r12);

     label2:
        $r13 = new javax.naming.StringRefAddr;
        $r14 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0);
        specialinvoke $r13.<javax.naming.StringRefAddr: void <init>(java.lang.String,java.lang.String)>("singleton", $r14);
        r15 = $r13;
        virtualinvoke r0.<org.apache.naming.ResourceRef: void add(javax.naming.RefAddr)>(r15);
        return;
    }

    protected java.lang.String getDefaultFactoryClassName()
    {
        org.apache.naming.ResourceRef r0;

        r0 := @this: org.apache.naming.ResourceRef;
        return "org.apache.naming.factory.ResourceFactory";
    }
}
