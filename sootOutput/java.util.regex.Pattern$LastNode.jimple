class java.util.regex.Pattern$LastNode extends java.util.regex.Pattern$Node
{

    void <init>()
    {
        java.util.regex.Pattern$LastNode r0;

        r0 := @this: java.util.regex.Pattern$LastNode;
        specialinvoke r0.<java.util.regex.Pattern$Node: void <init>()>();
        return;
    }

    boolean match(java.util.regex.Matcher, int, java.lang.CharSequence)
    {
        java.util.regex.Pattern$LastNode r0;
        java.util.regex.Matcher r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.CharSequence r2;
        int[] $r3, $r4;

        r0 := @this: java.util.regex.Pattern$LastNode;
        r1 := @parameter0: java.util.regex.Matcher;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.CharSequence;
        $i1 = r1.<java.util.regex.Matcher: int acceptMode>;
        if $i1 != 1 goto label0;

        $i2 = r1.<java.util.regex.Matcher: int 'to'>;
        if i0 == $i2 goto label0;

        return 0;

     label0:
        r1.<java.util.regex.Matcher: int last> = i0;
        $r3 = r1.<java.util.regex.Matcher: int[] groups>;
        $i3 = r1.<java.util.regex.Matcher: int first>;
        $r3[0] = $i3;
        $r4 = r1.<java.util.regex.Matcher: int[] groups>;
        $i4 = r1.<java.util.regex.Matcher: int last>;
        $r4[1] = $i4;
        return 1;
    }
}
