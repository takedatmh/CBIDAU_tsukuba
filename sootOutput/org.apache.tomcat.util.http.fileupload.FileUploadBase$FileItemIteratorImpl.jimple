class org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl extends java.lang.Object implements org.apache.tomcat.util.http.fileupload.FileItemIterator
{
    private final org.apache.tomcat.util.http.fileupload.MultipartStream multi;
    private final org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier notifier;
    private final byte[] boundary;
    private org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem;
    private java.lang.String currentFieldName;
    private boolean skipPreamble;
    private boolean itemValid;
    private boolean eof;
    final org.apache.tomcat.util.http.fileupload.FileUploadBase this$0;

    void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase, org.apache.tomcat.util.http.fileupload.RequestContext) throws org.apache.tomcat.util.http.fileupload.FileUploadException, java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl r0;
        org.apache.tomcat.util.http.fileupload.FileUploadBase r1;
        org.apache.tomcat.util.http.fileupload.RequestContext r2;
        java.lang.String r3, r5, $r9, $r12, $r18, $r32;
        long l0, $l1, $l4, $l6, $l7, $l8;
        java.io.InputStream r4, $r20;
        java.lang.IllegalArgumentException r6, $r29;
        java.lang.NullPointerException $r7;
        java.util.Locale $r8;
        boolean $z0;
        org.apache.tomcat.util.http.fileupload.FileUploadBase$InvalidContentTypeException $r10, $r30;
        java.lang.Object[] $r11, $r15, $r31;
        org.apache.tomcat.util.http.fileupload.UploadContext $r13;
        byte $b2, $b3, $b5;
        org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException $r14;
        java.lang.Long $r16, $r17;
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$1 $r19;
        byte[] $r21, $r22, $r27;
        org.apache.tomcat.util.http.fileupload.FileUploadException $r23;
        org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier $r24, $r28;
        org.apache.tomcat.util.http.fileupload.ProgressListener $r25;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r26, $r33;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl;
        r1 := @parameter0: org.apache.tomcat.util.http.fileupload.FileUploadBase;
        r2 := @parameter1: org.apache.tomcat.util.http.fileupload.RequestContext;
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r2 != null goto label0;

        $r7 = new java.lang.NullPointerException;
        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("ctx parameter");
        throw $r7;

     label0:
        r3 = interfaceinvoke r2.<org.apache.tomcat.util.http.fileupload.RequestContext: java.lang.String getContentType()>();
        if r3 == null goto label1;

        $r8 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r9 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);
        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/");
        if $z0 != 0 goto label2;

     label1:
        $r10 = new org.apache.tomcat.util.http.fileupload.FileUploadBase$InvalidContentTypeException;
        $r11 = newarray (java.lang.Object)[3];
        $r11[0] = "multipart/form-data";
        $r11[1] = "multipart/mixed";
        $r11[2] = r3;
        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("the request doesn\'t contain a %s or %s stream, content type header is %s", $r11);
        specialinvoke $r10.<org.apache.tomcat.util.http.fileupload.FileUploadBase$InvalidContentTypeException: void <init>(java.lang.String)>($r12);
        throw $r10;

     label2:
        $r13 = (org.apache.tomcat.util.http.fileupload.UploadContext) r2;
        l0 = interfaceinvoke $r13.<org.apache.tomcat.util.http.fileupload.UploadContext: long contentLength()>();
        $l1 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: long access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase)>(r1);
        $b2 = $l1 cmp 0L;
        if $b2 < 0 goto label4;

        $b3 = l0 cmp -1L;
        if $b3 == 0 goto label3;

        $l4 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: long access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase)>(r1);
        $b5 = l0 cmp $l4;
        if $b5 <= 0 goto label3;

        $r14 = new org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException;
        $r15 = newarray (java.lang.Object)[2];
        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);
        $r15[0] = $r16;
        $l6 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: long access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase)>(r1);
        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);
        $r15[1] = $r17;
        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("the request was rejected because its size (%s) exceeds the configured maximum (%s)", $r15);
        $l7 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: long access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase)>(r1);
        specialinvoke $r14.<org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException: void <init>(java.lang.String,long,long)>($r18, l0, $l7);
        throw $r14;

     label3:
        $r19 = new org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$1;
        $r20 = interfaceinvoke r2.<org.apache.tomcat.util.http.fileupload.RequestContext: java.io.InputStream getInputStream()>();
        $l8 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: long access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase)>(r1);
        specialinvoke $r19.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$1: void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl,java.io.InputStream,long)>(r0, $r20, $l8);
        r4 = $r19;
        goto label5;

     label4:
        r4 = interfaceinvoke r2.<org.apache.tomcat.util.http.fileupload.RequestContext: java.io.InputStream getInputStream()>();

     label5:
        r5 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: java.lang.String access$2(org.apache.tomcat.util.http.fileupload.FileUploadBase)>(r1);
        if r5 != null goto label6;

        r5 = interfaceinvoke r2.<org.apache.tomcat.util.http.fileupload.RequestContext: java.lang.String getCharacterEncoding()>();

     label6:
        $r21 = virtualinvoke r1.<org.apache.tomcat.util.http.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>(r3);
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary> = $r21;
        $r22 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>;
        if $r22 != null goto label7;

        staticinvoke <org.apache.tomcat.util.http.fileupload.IOUtils: void closeQuietly(java.io.Closeable)>(r4);
        $r23 = new org.apache.tomcat.util.http.fileupload.FileUploadException;
        specialinvoke $r23.<org.apache.tomcat.util.http.fileupload.FileUploadException: void <init>(java.lang.String)>("the request was rejected because no multipart boundary was found");
        throw $r23;

     label7:
        $r24 = new org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier;
        $r25 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUploadBase: org.apache.tomcat.util.http.fileupload.ProgressListener access$3(org.apache.tomcat.util.http.fileupload.FileUploadBase)>(r1);
        specialinvoke $r24.<org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier: void <init>(org.apache.tomcat.util.http.fileupload.ProgressListener,long)>($r25, l0);
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier notifier> = $r24;

     label8:
        $r26 = new org.apache.tomcat.util.http.fileupload.MultipartStream;
        $r27 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>;
        $r28 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier notifier>;
        specialinvoke $r26.<org.apache.tomcat.util.http.fileupload.MultipartStream: void <init>(java.io.InputStream,byte[],org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier)>(r4, $r27, $r28);
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream multi> = $r26;

     label9:
        goto label11;

     label10:
        $r29 := @caughtexception;
        r6 = $r29;
        staticinvoke <org.apache.tomcat.util.http.fileupload.IOUtils: void closeQuietly(java.io.Closeable)>(r4);
        $r30 = new org.apache.tomcat.util.http.fileupload.FileUploadBase$InvalidContentTypeException;
        $r31 = newarray (java.lang.Object)[1];
        $r31[0] = "Content-type";
        $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The boundary specified in the %s header is too long", $r31);
        specialinvoke $r30.<org.apache.tomcat.util.http.fileupload.FileUploadBase$InvalidContentTypeException: void <init>(java.lang.String,java.lang.Throwable)>($r32, r6);
        throw $r30;

     label11:
        $r33 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream multi>;
        virtualinvoke $r33.<org.apache.tomcat.util.http.fileupload.MultipartStream: void setHeaderEncoding(java.lang.String)>(r5);
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean skipPreamble> = 1;
        specialinvoke r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean findNextItem()>();
        return;

        catch java.lang.IllegalArgumentException from label8 to label9 with label10;
    }

    private boolean findNextItem() throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl r0;
        boolean z0, $z1, $z2, $z3, $z4;
        org.apache.tomcat.util.http.fileupload.FileItemHeaders r1;
        java.lang.String r2, r3, $r13, $r18, $r19, $r22, r26, $r29, r33, $r35, $r36;
        byte[] r4, $r15;
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl $r9, $r10, $r28, $r30, $r34, $r37;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r11, $r12, $r14, $r17, $r24, $r39;
        org.apache.tomcat.util.http.fileupload.FileUploadBase $r16, $r20, $r23, $r25, $r32;
        java.util.Locale $r21;
        long $l0, $l1;
        org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier $r31, $r38;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl;
        $z1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean eof>;
        if $z1 == 0 goto label0;

        return 0;

     label0:
        $r9 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem>;
        if $r9 == null goto label1;

        $r10 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem>;
        virtualinvoke $r10.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void close()>();
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem> = null;

     label1:
        $z2 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean skipPreamble>;
        if $z2 == 0 goto label2;

        $r11 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream multi>;
        z0 = virtualinvoke $r11.<org.apache.tomcat.util.http.fileupload.MultipartStream: boolean skipPreamble()>();
        goto label3;

     label2:
        $r12 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream multi>;
        z0 = virtualinvoke $r12.<org.apache.tomcat.util.http.fileupload.MultipartStream: boolean readBoundary()>();

     label3:
        if z0 != 0 goto label5;

        $r13 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: java.lang.String currentFieldName>;
        if $r13 != null goto label4;

        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean eof> = 1;
        return 0;

     label4:
        $r14 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream multi>;
        $r15 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: byte[] boundary>;
        virtualinvoke $r14.<org.apache.tomcat.util.http.fileupload.MultipartStream: void setBoundary(byte[])>($r15);
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: java.lang.String currentFieldName> = null;
        goto label1;

     label5:
        $r16 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase this$0>;
        $r17 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream multi>;
        $r18 = virtualinvoke $r17.<org.apache.tomcat.util.http.fileupload.MultipartStream: java.lang.String readHeaders()>();
        r1 = virtualinvoke $r16.<org.apache.tomcat.util.http.fileupload.FileUploadBase: org.apache.tomcat.util.http.fileupload.FileItemHeaders getParsedHeaders(java.lang.String)>($r18);
        $r19 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: java.lang.String currentFieldName>;
        if $r19 != null goto label9;

        $r20 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase this$0>;
        r2 = virtualinvoke $r20.<org.apache.tomcat.util.http.fileupload.FileUploadBase: java.lang.String getFieldName(org.apache.tomcat.util.http.fileupload.FileItemHeaders)>(r1);
        if r2 == null goto label10;

        r3 = interfaceinvoke r1.<org.apache.tomcat.util.http.fileupload.FileItemHeaders: java.lang.String getHeader(java.lang.String)>("Content-type");
        if r3 == null goto label6;

        $r21 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r22 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r21);
        $z3 = virtualinvoke $r22.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/mixed");
        if $z3 == 0 goto label6;

        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: java.lang.String currentFieldName> = r2;
        $r23 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase this$0>;
        r4 = virtualinvoke $r23.<org.apache.tomcat.util.http.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>(r3);
        $r24 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream multi>;
        virtualinvoke $r24.<org.apache.tomcat.util.http.fileupload.MultipartStream: void setBoundary(byte[])>(r4);
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean skipPreamble> = 1;
        goto label1;

     label6:
        $r25 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase this$0>;
        r26 = virtualinvoke $r25.<org.apache.tomcat.util.http.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.tomcat.util.http.fileupload.FileItemHeaders)>(r1);
        $r28 = new org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $r29 = interfaceinvoke r1.<org.apache.tomcat.util.http.fileupload.FileItemHeaders: java.lang.String getHeader(java.lang.String)>("Content-type");
        if r26 != null goto label7;

        $z4 = 1;
        goto label8;

     label7:
        $z4 = 0;

     label8:
        $l0 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: long getContentLength(org.apache.tomcat.util.http.fileupload.FileItemHeaders)>(r1);
        specialinvoke $r28.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean,long)>(r0, r26, r2, $r29, $z4, $l0);
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem> = $r28;
        $r30 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem>;
        virtualinvoke $r30.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void setHeaders(org.apache.tomcat.util.http.fileupload.FileItemHeaders)>(r1);
        $r31 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier notifier>;
        virtualinvoke $r31.<org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier: void noteItem()>();
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean itemValid> = 1;
        return 1;

     label9:
        $r32 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase this$0>;
        r33 = virtualinvoke $r32.<org.apache.tomcat.util.http.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.tomcat.util.http.fileupload.FileItemHeaders)>(r1);
        if r33 == null goto label10;

        $r34 = new org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;
        $r35 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: java.lang.String currentFieldName>;
        $r36 = interfaceinvoke r1.<org.apache.tomcat.util.http.fileupload.FileItemHeaders: java.lang.String getHeader(java.lang.String)>("Content-type");
        $l1 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: long getContentLength(org.apache.tomcat.util.http.fileupload.FileItemHeaders)>(r1);
        specialinvoke $r34.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl,java.lang.String,java.lang.String,java.lang.String,boolean,long)>(r0, r33, $r35, $r36, 0, $l1);
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem> = $r34;
        $r37 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem>;
        virtualinvoke $r37.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: void setHeaders(org.apache.tomcat.util.http.fileupload.FileItemHeaders)>(r1);
        $r38 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier notifier>;
        virtualinvoke $r38.<org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier: void noteItem()>();
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean itemValid> = 1;
        return 1;

     label10:
        $r39 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream multi>;
        virtualinvoke $r39.<org.apache.tomcat.util.http.fileupload.MultipartStream: int discardBodyData()>();
        goto label1;
    }

    private long getContentLength(org.apache.tomcat.util.http.fileupload.FileItemHeaders)
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl r0;
        org.apache.tomcat.util.http.fileupload.FileItemHeaders r1;
        java.lang.Exception r2, $r4;
        java.lang.String $r3;
        long $l0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl;
        r1 := @parameter0: org.apache.tomcat.util.http.fileupload.FileItemHeaders;

     label0:
        $r3 = interfaceinvoke r1.<org.apache.tomcat.util.http.fileupload.FileItemHeaders: java.lang.String getHeader(java.lang.String)>("Content-length");
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

     label1:
        return $l0;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;
        return -1L;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public boolean hasNext() throws org.apache.tomcat.util.http.fileupload.FileUploadException, java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl r0;
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileUploadIOException r1, $r2;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r3;
        org.apache.tomcat.util.http.fileupload.FileUploadException $r4;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl;
        $z0 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean eof>;
        if $z0 == 0 goto label0;

        return 0;

     label0:
        $z1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean itemValid>;
        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z2 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean findNextItem()>();

     label2:
        return $z2;

     label3:
        $r2 := @caughtexception;
        r1 = $r2;
        $r3 = virtualinvoke r1.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileUploadIOException: java.lang.Throwable getCause()>();
        $r4 = (org.apache.tomcat.util.http.fileupload.FileUploadException) $r3;
        throw $r4;

        catch org.apache.tomcat.util.http.fileupload.FileUploadBase$FileUploadIOException from label1 to label2 with label3;
    }

    public org.apache.tomcat.util.http.fileupload.FileItemStream next() throws org.apache.tomcat.util.http.fileupload.FileUploadException, java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl r0;
        boolean $z0, $z1, $z2;
        java.util.NoSuchElementException $r1;
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl $r2;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl;
        $z0 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean eof>;
        if $z0 != 0 goto label0;

        $z1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean itemValid>;
        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean hasNext()>();
        if $z2 != 0 goto label1;

     label0:
        $r1 = new java.util.NoSuchElementException;
        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();
        throw $r1;

     label1:
        r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: boolean itemValid> = 0;
        $r2 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl currentItem>;
        return $r2;
    }

    static org.apache.tomcat.util.http.fileupload.MultipartStream access$0(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl)
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl r0;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r1;

        r0 := @parameter0: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.MultipartStream multi>;
        return $r1;
    }

    static org.apache.tomcat.util.http.fileupload.FileUploadBase access$1(org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl)
    {
        org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl r0;
        org.apache.tomcat.util.http.fileupload.FileUploadBase $r1;

        r0 := @parameter0: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.tomcat.util.http.fileupload.FileUploadBase this$0>;
        return $r1;
    }
}
