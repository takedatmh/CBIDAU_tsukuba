class java.lang.ProcessEnvironment$StringEntry extends java.lang.Object implements java.util.Map$Entry
{
    private final java.util.Map$Entry e;

    public void <init>(java.util.Map$Entry)
    {
        java.lang.ProcessEnvironment$StringEntry r0;
        java.util.Map$Entry r1;

        r0 := @this: java.lang.ProcessEnvironment$StringEntry;
        r1 := @parameter0: java.util.Map$Entry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.ProcessEnvironment$StringEntry: java.util.Map$Entry e> = r1;
        return;
    }

    public java.lang.String getKey()
    {
        java.lang.ProcessEnvironment$StringEntry r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2;
        java.lang.ProcessEnvironment$Variable $r3;
        java.lang.String $r4;

        r0 := @this: java.lang.ProcessEnvironment$StringEntry;
        $r1 = r0.<java.lang.ProcessEnvironment$StringEntry: java.util.Map$Entry e>;
        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r3 = (java.lang.ProcessEnvironment$Variable) $r2;
        $r4 = virtualinvoke $r3.<java.lang.ProcessEnvironment$Variable: java.lang.String toString()>();
        return $r4;
    }

    public java.lang.String getValue()
    {
        java.lang.ProcessEnvironment$StringEntry r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2;
        java.lang.ProcessEnvironment$Value $r3;
        java.lang.String $r4;

        r0 := @this: java.lang.ProcessEnvironment$StringEntry;
        $r1 = r0.<java.lang.ProcessEnvironment$StringEntry: java.util.Map$Entry e>;
        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r3 = (java.lang.ProcessEnvironment$Value) $r2;
        $r4 = virtualinvoke $r3.<java.lang.ProcessEnvironment$Value: java.lang.String toString()>();
        return $r4;
    }

    public java.lang.String setValue(java.lang.String)
    {
        java.lang.ProcessEnvironment$StringEntry r0;
        java.lang.String r1, $r6;
        java.util.Map$Entry $r2;
        java.lang.ProcessEnvironment$Value $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: java.lang.ProcessEnvironment$StringEntry;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<java.lang.ProcessEnvironment$StringEntry: java.util.Map$Entry e>;
        $r3 = staticinvoke <java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(java.lang.String)>(r1);
        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r3);
        $r5 = (java.lang.ProcessEnvironment$Value) $r4;
        $r6 = virtualinvoke $r5.<java.lang.ProcessEnvironment$Value: java.lang.String toString()>();
        return $r6;
    }

    public java.lang.String toString()
    {
        java.lang.ProcessEnvironment$StringEntry r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r0 := @this: java.lang.ProcessEnvironment$StringEntry;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke r0.<java.lang.ProcessEnvironment$StringEntry: java.lang.String getKey()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r5 = virtualinvoke r0.<java.lang.ProcessEnvironment$StringEntry: java.lang.String getValue()>();
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.ProcessEnvironment$StringEntry r0, $r3;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry $r2, $r4;

        r0 := @this: java.lang.ProcessEnvironment$StringEntry;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.lang.ProcessEnvironment$StringEntry;
        if $z0 == 0 goto label0;

        $r2 = r0.<java.lang.ProcessEnvironment$StringEntry: java.util.Map$Entry e>;
        $r3 = (java.lang.ProcessEnvironment$StringEntry) r1;
        $r4 = $r3.<java.lang.ProcessEnvironment$StringEntry: java.util.Map$Entry e>;
        $z1 = interfaceinvoke $r2.<java.util.Map$Entry: boolean equals(java.lang.Object)>($r4);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public int hashCode()
    {
        java.lang.ProcessEnvironment$StringEntry r0;
        java.util.Map$Entry $r1;
        int $i0;

        r0 := @this: java.lang.ProcessEnvironment$StringEntry;
        $r1 = r0.<java.lang.ProcessEnvironment$StringEntry: java.util.Map$Entry e>;
        $i0 = interfaceinvoke $r1.<java.util.Map$Entry: int hashCode()>();
        return $i0;
    }

    public volatile java.lang.Object setValue(java.lang.Object)
    {
        java.lang.ProcessEnvironment$StringEntry r0;
        java.lang.Object r1;
        java.lang.String $r2, $r3;

        r0 := @this: java.lang.ProcessEnvironment$StringEntry;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.lang.String) r1;
        $r3 = virtualinvoke r0.<java.lang.ProcessEnvironment$StringEntry: java.lang.String setValue(java.lang.String)>($r2);
        return $r3;
    }

    public volatile java.lang.Object getValue()
    {
        java.lang.ProcessEnvironment$StringEntry r0;
        java.lang.String $r1;

        r0 := @this: java.lang.ProcessEnvironment$StringEntry;
        $r1 = virtualinvoke r0.<java.lang.ProcessEnvironment$StringEntry: java.lang.String getValue()>();
        return $r1;
    }

    public volatile java.lang.Object getKey()
    {
        java.lang.ProcessEnvironment$StringEntry r0;
        java.lang.String $r1;

        r0 := @this: java.lang.ProcessEnvironment$StringEntry;
        $r1 = virtualinvoke r0.<java.lang.ProcessEnvironment$StringEntry: java.lang.String getKey()>();
        return $r1;
    }

    static java.util.Map$Entry access$600(java.lang.ProcessEnvironment$StringEntry)
    {
        java.lang.ProcessEnvironment$StringEntry r0;
        java.util.Map$Entry $r1;

        r0 := @parameter0: java.lang.ProcessEnvironment$StringEntry;
        $r1 = r0.<java.lang.ProcessEnvironment$StringEntry: java.util.Map$Entry e>;
        return $r1;
    }
}
