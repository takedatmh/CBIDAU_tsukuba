class sun.misc.URLClassPath$FileLoader extends sun.misc.URLClassPath$Loader
{
    private java.io.File dir;

    void <init>(java.net.URL) throws java.io.IOException
    {
        sun.misc.URLClassPath$FileLoader r0;
        java.net.URL r1;
        java.lang.String r2, $r3, $r4, $r6, r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        char $c0;
        java.io.File $r8, $r9;

        r0 := @this: sun.misc.URLClassPath$FileLoader;
        r1 := @parameter0: java.net.URL;
        specialinvoke r0.<sun.misc.URLClassPath$Loader: void <init>(java.net.URL)>(r1);
        $r3 = "file";
        $r4 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z0 != 0 goto label0;

        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("url");
        throw $r5;

     label0:
        $r6 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();
        $c0 = <java.io.File: char separatorChar>;
        r2 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(char,char)>(47, $c0);
        r7 = staticinvoke <sun.net.www.ParseUtil: java.lang.String decode(java.lang.String)>(r2);
        $r8 = new java.io.File;
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r7);
        $r9 = virtualinvoke $r8.<java.io.File: java.io.File getCanonicalFile()>();
        r0.<sun.misc.URLClassPath$FileLoader: java.io.File dir> = $r9;
        return;
    }

    java.net.URL findResource(java.lang.String, boolean)
    {
        sun.misc.URLClassPath$FileLoader r0;
        java.lang.String r1;
        boolean z0;
        sun.misc.Resource r2;
        java.net.URL $r3;

        r0 := @this: sun.misc.URLClassPath$FileLoader;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        r2 = virtualinvoke r0.<sun.misc.URLClassPath$FileLoader: sun.misc.Resource getResource(java.lang.String,boolean)>(r1, z0);
        if r2 == null goto label0;

        $r3 = virtualinvoke r2.<sun.misc.Resource: java.net.URL getURL()>();
        return $r3;

     label0:
        return null;
    }

    sun.misc.Resource getResource(java.lang.String, boolean)
    {
        sun.misc.URLClassPath$FileLoader r0;
        java.lang.String r1, $r9, $r10, $r11, $r14, $r15, $r17, $r20;
        boolean z0, $z1, $z2, $z3;
        java.net.URL $r2, r3, r4, $r6, $r7, $r8;
        char $c0, $c2;
        java.io.File r5, $r12, $r13, $r16, $r18, $r19;
        null_type $n0, $n1;
        int $i1;
        sun.misc.URLClassPath$FileLoader$1 $r21;
        java.lang.Exception $r22, r23;

        r0 := @this: sun.misc.URLClassPath$FileLoader;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;

     label0:
        $r2 = new java.net.URL;
        $r6 = virtualinvoke r0.<sun.misc.URLClassPath$FileLoader: java.net.URL getBaseURL()>();
        specialinvoke $r2.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r6, ".");
        r3 = $r2;
        $r7 = new java.net.URL;
        $r8 = virtualinvoke r0.<sun.misc.URLClassPath$FileLoader: java.net.URL getBaseURL()>();
        $r9 = staticinvoke <sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>(r1, 0);
        specialinvoke $r7.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r8, $r9);
        r4 = $r7;
        $r10 = virtualinvoke r4.<java.net.URL: java.lang.String getFile()>();
        $r11 = virtualinvoke r3.<java.net.URL: java.lang.String getFile()>();
        $z1 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>($r11);
        if $z1 != 0 goto label2;

        $n0 = null;

     label1:
        return $n0;

     label2:
        if z0 == 0 goto label3;

        staticinvoke <sun.misc.URLClassPath: void check(java.net.URL)>(r4);

     label3:
        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("..");
        if $i1 == -1 goto label5;

        $r12 = new java.io.File;
        $r13 = r0.<sun.misc.URLClassPath$FileLoader: java.io.File dir>;
        $c0 = <java.io.File: char separatorChar>;
        $r14 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(47, $c0);
        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, $r14);
        r5 = virtualinvoke $r12.<java.io.File: java.io.File getCanonicalFile()>();
        $r15 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();
        $r16 = r0.<sun.misc.URLClassPath$FileLoader: java.io.File dir>;
        $r17 = virtualinvoke $r16.<java.io.File: java.lang.String getPath()>();
        $z2 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>($r17);
        if $z2 != 0 goto label6;

        $n1 = null;

     label4:
        return $n1;

     label5:
        $r18 = new java.io.File;
        $r19 = r0.<sun.misc.URLClassPath$FileLoader: java.io.File dir>;
        $c2 = <java.io.File: char separatorChar>;
        $r20 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(47, $c2);
        specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, $r20);
        r5 = $r18;

     label6:
        $z3 = virtualinvoke r5.<java.io.File: boolean exists()>();
        if $z3 == 0 goto label8;

        $r21 = new sun.misc.URLClassPath$FileLoader$1;
        specialinvoke $r21.<sun.misc.URLClassPath$FileLoader$1: void <init>(sun.misc.URLClassPath$FileLoader,java.lang.String,java.net.URL,java.io.File)>(r0, r1, r4, r5);

     label7:
        return $r21;

     label8:
        goto label10;

     label9:
        $r22 := @caughtexception;
        r23 = $r22;
        return null;

     label10:
        return null;

        catch java.lang.Exception from label0 to label1 with label9;
        catch java.lang.Exception from label2 to label4 with label9;
        catch java.lang.Exception from label5 to label7 with label9;
    }
}
