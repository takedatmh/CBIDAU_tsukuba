public final class org.apache.tomcat.util.collections.ConcurrentCache extends java.lang.Object
{
    private final int size;
    private final java.util.Map eden;
    private final java.util.Map longterm;

    public void <init>(int)
    {
        org.apache.tomcat.util.collections.ConcurrentCache r0;
        int i0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.util.WeakHashMap $r2;

        r0 := @this: org.apache.tomcat.util.collections.ConcurrentCache;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.collections.ConcurrentCache: int size> = i0;
        $r1 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(i0);
        r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map eden> = $r1;
        $r2 = new java.util.WeakHashMap;
        specialinvoke $r2.<java.util.WeakHashMap: void <init>(int)>(i0);
        r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map longterm> = $r2;
        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.tomcat.util.collections.ConcurrentCache r0;
        java.lang.Object r1, r2;
        java.util.Map r3, $r4, $r5, $r6, $r8;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.tomcat.util.collections.ConcurrentCache;
        r1 := @parameter0: java.lang.Object;
        $r4 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map eden>;
        r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        if r2 != null goto label6;

        $r5 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map longterm>;
        r3 = $r5;
        entermonitor $r5;

     label0:
        $r6 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map longterm>;
        r2 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        exitmonitor r3;

     label1:
        goto label5;

     label2:
        $r7 := @caughtexception;

     label3:
        exitmonitor r3;

     label4:
        throw $r7;

     label5:
        if r2 == null goto label6;

        $r8 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map eden>;
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label6:
        return r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void put(java.lang.Object, java.lang.Object)
    {
        org.apache.tomcat.util.collections.ConcurrentCache r0;
        java.lang.Object r1, r2;
        java.util.Map r3, $r4, $r5, $r6, $r7, $r9, $r10;
        int $i0, $i1;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.tomcat.util.collections.ConcurrentCache;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r4 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map eden>;
        $i0 = interfaceinvoke $r4.<java.util.Map: int size()>();
        $i1 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: int size>;
        if $i0 < $i1 goto label6;

        $r5 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map longterm>;
        r3 = $r5;
        entermonitor $r5;

     label0:
        $r6 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map longterm>;
        $r7 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map eden>;
        interfaceinvoke $r6.<java.util.Map: void putAll(java.util.Map)>($r7);
        exitmonitor r3;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r3;

     label4:
        throw $r8;

     label5:
        $r9 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map eden>;
        interfaceinvoke $r9.<java.util.Map: void clear()>();

     label6:
        $r10 = r0.<org.apache.tomcat.util.collections.ConcurrentCache: java.util.Map eden>;
        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
}
