class java.util.RegularEnumSet$EnumSetIterator extends java.lang.Object implements java.util.Iterator
{
    long unseen;
    long lastReturned;
    final java.util.RegularEnumSet this$0;

    void <init>(java.util.RegularEnumSet)
    {
        java.util.RegularEnumSet$EnumSetIterator r0;
        java.util.RegularEnumSet r1;
        long $l0;

        r0 := @this: java.util.RegularEnumSet$EnumSetIterator;
        r1 := @parameter0: java.util.RegularEnumSet;
        r0.<java.util.RegularEnumSet$EnumSetIterator: java.util.RegularEnumSet this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.RegularEnumSet$EnumSetIterator: long lastReturned> = 0L;
        $l0 = staticinvoke <java.util.RegularEnumSet: long access$000(java.util.RegularEnumSet)>(r1);
        r0.<java.util.RegularEnumSet$EnumSetIterator: long unseen> = $l0;
        return;
    }

    public boolean hasNext()
    {
        java.util.RegularEnumSet$EnumSetIterator r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: java.util.RegularEnumSet$EnumSetIterator;
        $l0 = r0.<java.util.RegularEnumSet$EnumSetIterator: long unseen>;
        $b1 = $l0 cmp 0L;
        if $b1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.Enum next()
    {
        java.util.RegularEnumSet$EnumSetIterator r0;
        long $l0, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        byte $b1;
        java.util.NoSuchElementException $r1;
        java.util.RegularEnumSet $r3;
        java.lang.Enum[] $r4;
        int $i10;
        java.lang.Enum $r5;

        r0 := @this: java.util.RegularEnumSet$EnumSetIterator;
        $l0 = r0.<java.util.RegularEnumSet$EnumSetIterator: long unseen>;
        $b1 = $l0 cmp 0L;
        if $b1 != 0 goto label0;

        $r1 = new java.util.NoSuchElementException;
        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();
        throw $r1;

     label0:
        $l2 = r0.<java.util.RegularEnumSet$EnumSetIterator: long unseen>;
        $l3 = r0.<java.util.RegularEnumSet$EnumSetIterator: long unseen>;
        $l4 = neg $l3;
        $l5 = $l2 & $l4;
        r0.<java.util.RegularEnumSet$EnumSetIterator: long lastReturned> = $l5;
        $l6 = r0.<java.util.RegularEnumSet$EnumSetIterator: long unseen>;
        $l7 = r0.<java.util.RegularEnumSet$EnumSetIterator: long lastReturned>;
        $l8 = $l6 - $l7;
        r0.<java.util.RegularEnumSet$EnumSetIterator: long unseen> = $l8;
        $r3 = r0.<java.util.RegularEnumSet$EnumSetIterator: java.util.RegularEnumSet this$0>;
        $r4 = $r3.<java.util.RegularEnumSet: java.lang.Enum[] universe>;
        $l9 = r0.<java.util.RegularEnumSet$EnumSetIterator: long lastReturned>;
        $i10 = staticinvoke <java.lang.Long: int numberOfTrailingZeros(long)>($l9);
        $r5 = $r4[$i10];
        return $r5;
    }

    public void remove()
    {
        java.util.RegularEnumSet$EnumSetIterator r0;
        long $l0, $l2, $l3;
        byte $b1;
        java.lang.IllegalStateException $r1;
        java.util.RegularEnumSet $r2;

        r0 := @this: java.util.RegularEnumSet$EnumSetIterator;
        $l0 = r0.<java.util.RegularEnumSet$EnumSetIterator: long lastReturned>;
        $b1 = $l0 cmp 0L;
        if $b1 != 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();
        throw $r1;

     label0:
        $r2 = r0.<java.util.RegularEnumSet$EnumSetIterator: java.util.RegularEnumSet this$0>;
        $l2 = r0.<java.util.RegularEnumSet$EnumSetIterator: long lastReturned>;
        $l3 = $l2 ^ -1L;
        staticinvoke <java.util.RegularEnumSet: long access$074(java.util.RegularEnumSet,long)>($r2, $l3);
        r0.<java.util.RegularEnumSet$EnumSetIterator: long lastReturned> = 0L;
        return;
    }

    public volatile java.lang.Object next()
    {
        java.util.RegularEnumSet$EnumSetIterator r0;
        java.lang.Enum $r1;

        r0 := @this: java.util.RegularEnumSet$EnumSetIterator;
        $r1 = virtualinvoke r0.<java.util.RegularEnumSet$EnumSetIterator: java.lang.Enum next()>();
        return $r1;
    }
}
