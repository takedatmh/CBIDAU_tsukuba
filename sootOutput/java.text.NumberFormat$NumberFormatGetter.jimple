class java.text.NumberFormat$NumberFormatGetter extends java.lang.Object implements sun.util.LocaleServiceProviderPool$LocalizedObjectGetter
{
    private static final java.text.NumberFormat$NumberFormatGetter INSTANCE;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        java.text.NumberFormat$NumberFormatGetter r0;

        r0 := @this: java.text.NumberFormat$NumberFormatGetter;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public transient java.text.NumberFormat getObject(java.text.spi.NumberFormatProvider, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.text.NumberFormat$NumberFormatGetter r0;
        java.text.spi.NumberFormatProvider r1;
        java.util.Locale r2;
        java.lang.String r3;
        java.lang.Object[] r4;
        boolean $z0, $z1;
        int i0, $i1;
        java.lang.AssertionError $r5, $r12;
        java.lang.Object $r6;
        java.lang.Integer $r7;
        java.text.NumberFormat $r8, $r9, $r10, $r11;

        r0 := @this: java.text.NumberFormat$NumberFormatGetter;
        r1 := @parameter0: java.text.spi.NumberFormatProvider;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $z0 = <java.text.NumberFormat$NumberFormatGetter: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $i1 = lengthof r4;
        if $i1 == 1 goto label0;

        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        throw $r5;

     label0:
        $r6 = r4[0];
        $r7 = (java.lang.Integer) $r6;
        i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label5;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r8 = virtualinvoke r1.<java.text.spi.NumberFormatProvider: java.text.NumberFormat getNumberInstance(java.util.Locale)>(r2);
        return $r8;

     label2:
        $r9 = virtualinvoke r1.<java.text.spi.NumberFormatProvider: java.text.NumberFormat getPercentInstance(java.util.Locale)>(r2);
        return $r9;

     label3:
        $r10 = virtualinvoke r1.<java.text.spi.NumberFormatProvider: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>(r2);
        return $r10;

     label4:
        $r11 = virtualinvoke r1.<java.text.spi.NumberFormatProvider: java.text.NumberFormat getIntegerInstance(java.util.Locale)>(r2);
        return $r11;

     label5:
        $z1 = <java.text.NumberFormat$NumberFormatGetter: boolean $assertionsDisabled>;
        if $z1 != 0 goto label6;

        $r12 = new java.lang.AssertionError;
        specialinvoke $r12.<java.lang.AssertionError: void <init>(int)>(i0);
        throw $r12;

     label6:
        return null;
    }

    public volatile java.lang.Object getObject(java.lang.Object, java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.text.NumberFormat$NumberFormatGetter r0;
        java.lang.Object r1;
        java.util.Locale r2;
        java.lang.String r3;
        java.lang.Object[] r4;
        java.text.spi.NumberFormatProvider $r5;
        java.text.NumberFormat $r6;

        r0 := @this: java.text.NumberFormat$NumberFormatGetter;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object[];
        $r5 = (java.text.spi.NumberFormatProvider) r1;
        $r6 = virtualinvoke r0.<java.text.NumberFormat$NumberFormatGetter: java.text.NumberFormat getObject(java.text.spi.NumberFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>($r5, r2, r3, r4);
        return $r6;
    }

    static java.text.NumberFormat$NumberFormatGetter access$000()
    {
        java.text.NumberFormat$NumberFormatGetter $r0;

        $r0 = <java.text.NumberFormat$NumberFormatGetter: java.text.NumberFormat$NumberFormatGetter INSTANCE>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.text.NumberFormat$NumberFormatGetter $r1;

        $r0 = class "java/text/NumberFormat";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.text.NumberFormat$NumberFormatGetter: boolean $assertionsDisabled> = $z1;
        $r1 = new java.text.NumberFormat$NumberFormatGetter;
        specialinvoke $r1.<java.text.NumberFormat$NumberFormatGetter: void <init>()>();
        <java.text.NumberFormat$NumberFormatGetter: java.text.NumberFormat$NumberFormatGetter INSTANCE> = $r1;
        return;
    }
}
