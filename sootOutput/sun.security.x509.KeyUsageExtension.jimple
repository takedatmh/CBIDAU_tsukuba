public class sun.security.x509.KeyUsageExtension extends sun.security.x509.Extension implements sun.security.x509.CertAttrSet
{
    public static final java.lang.String IDENT;
    public static final java.lang.String NAME;
    public static final java.lang.String DIGITAL_SIGNATURE;
    public static final java.lang.String NON_REPUDIATION;
    public static final java.lang.String KEY_ENCIPHERMENT;
    public static final java.lang.String DATA_ENCIPHERMENT;
    public static final java.lang.String KEY_AGREEMENT;
    public static final java.lang.String KEY_CERTSIGN;
    public static final java.lang.String CRL_SIGN;
    public static final java.lang.String ENCIPHER_ONLY;
    public static final java.lang.String DECIPHER_ONLY;
    private boolean[] bitString;

    private void encodeThis() throws java.io.IOException
    {
        sun.security.x509.KeyUsageExtension r0;
        sun.security.util.DerOutputStream $r1, r2;
        sun.security.util.BitArray $r3;
        boolean[] $r4;
        byte[] $r5;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        $r1 = new sun.security.util.DerOutputStream;
        specialinvoke $r1.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r1;
        $r3 = new sun.security.util.BitArray;
        $r4 = r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString>;
        specialinvoke $r3.<sun.security.util.BitArray: void <init>(boolean[])>($r4);
        virtualinvoke r2.<sun.security.util.DerOutputStream: void putTruncatedUnalignedBitString(sun.security.util.BitArray)>($r3);
        $r5 = virtualinvoke r2.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        r0.<sun.security.x509.KeyUsageExtension: byte[] extensionValue> = $r5;
        return;
    }

    private boolean isSet(int)
    {
        sun.security.x509.KeyUsageExtension r0;
        int i0, $i1;
        boolean[] $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        i0 := @parameter0: int;
        $r1 = r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString>;
        $i1 = lengthof $r1;
        if i0 >= $i1 goto label0;

        $r2 = r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString>;
        $z0 = $r2[i0];
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    private void set(int, boolean)
    {
        sun.security.x509.KeyUsageExtension r0;
        int i0, $i1, $i2, $i3;
        boolean z0;
        boolean[] r1, $r2, $r3, $r4, $r5;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        $r2 = r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString>;
        $i1 = lengthof $r2;
        if i0 < $i1 goto label0;

        $i2 = i0 + 1;
        r1 = newarray (boolean)[$i2];
        $r3 = r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString>;
        $r4 = r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString>;
        $i3 = lengthof $r4;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i3);
        r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString> = r1;

     label0:
        $r5 = r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString>;
        $r5[i0] = z0;
        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        sun.security.x509.KeyUsageExtension r0;
        byte[] r1;
        sun.security.util.BitArray $r2;
        int $i0, $i1;
        boolean[] $r3;
        sun.security.util.ObjectIdentifier $r4;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        r1 := @parameter0: byte[];
        specialinvoke r0.<sun.security.x509.Extension: void <init>()>();
        $r2 = new sun.security.util.BitArray;
        $i0 = lengthof r1;
        $i1 = $i0 * 8;
        specialinvoke $r2.<sun.security.util.BitArray: void <init>(int,byte[])>($i1, r1);
        $r3 = virtualinvoke $r2.<sun.security.util.BitArray: boolean[] toBooleanArray()>();
        r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString> = $r3;
        $r4 = <sun.security.x509.PKIXExtensions: sun.security.util.ObjectIdentifier KeyUsage_Id>;
        r0.<sun.security.x509.KeyUsageExtension: sun.security.util.ObjectIdentifier extensionId> = $r4;
        r0.<sun.security.x509.KeyUsageExtension: boolean critical> = 1;
        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void encodeThis()>();
        return;
    }

    public void <init>(boolean[]) throws java.io.IOException
    {
        sun.security.x509.KeyUsageExtension r0;
        boolean[] r1;
        sun.security.util.ObjectIdentifier $r2;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        r1 := @parameter0: boolean[];
        specialinvoke r0.<sun.security.x509.Extension: void <init>()>();
        r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString> = r1;
        $r2 = <sun.security.x509.PKIXExtensions: sun.security.util.ObjectIdentifier KeyUsage_Id>;
        r0.<sun.security.x509.KeyUsageExtension: sun.security.util.ObjectIdentifier extensionId> = $r2;
        r0.<sun.security.x509.KeyUsageExtension: boolean critical> = 1;
        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void encodeThis()>();
        return;
    }

    public void <init>(sun.security.util.BitArray) throws java.io.IOException
    {
        sun.security.x509.KeyUsageExtension r0;
        sun.security.util.BitArray r1;
        boolean[] $r2;
        sun.security.util.ObjectIdentifier $r3;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        r1 := @parameter0: sun.security.util.BitArray;
        specialinvoke r0.<sun.security.x509.Extension: void <init>()>();
        $r2 = virtualinvoke r1.<sun.security.util.BitArray: boolean[] toBooleanArray()>();
        r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString> = $r2;
        $r3 = <sun.security.x509.PKIXExtensions: sun.security.util.ObjectIdentifier KeyUsage_Id>;
        r0.<sun.security.x509.KeyUsageExtension: sun.security.util.ObjectIdentifier extensionId> = $r3;
        r0.<sun.security.x509.KeyUsageExtension: boolean critical> = 1;
        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void encodeThis()>();
        return;
    }

    public void <init>(java.lang.Boolean, java.lang.Object) throws java.io.IOException
    {
        sun.security.x509.KeyUsageExtension r0;
        java.lang.Boolean r1;
        java.lang.Object r2;
        sun.security.util.ObjectIdentifier $r3;
        byte[] r4, $r6, $r8, $r10;
        sun.security.util.DerValue r5, $r7, $r9;
        boolean $z0;
        byte $b0;
        sun.security.util.BitArray $r11;
        boolean[] $r12;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        r1 := @parameter0: java.lang.Boolean;
        r2 := @parameter1: java.lang.Object;
        specialinvoke r0.<sun.security.x509.Extension: void <init>()>();
        $r3 = <sun.security.x509.PKIXExtensions: sun.security.util.ObjectIdentifier KeyUsage_Id>;
        r0.<sun.security.x509.KeyUsageExtension: sun.security.util.ObjectIdentifier extensionId> = $r3;
        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();
        r0.<sun.security.x509.KeyUsageExtension: boolean critical> = $z0;
        $r6 = (byte[]) r2;
        r4 = (byte[]) $r6;
        $b0 = r4[0];
        if $b0 != 4 goto label0;

        $r7 = new sun.security.util.DerValue;
        specialinvoke $r7.<sun.security.util.DerValue: void <init>(byte[])>(r4);
        $r8 = virtualinvoke $r7.<sun.security.util.DerValue: byte[] getOctetString()>();
        r0.<sun.security.x509.KeyUsageExtension: byte[] extensionValue> = $r8;
        goto label1;

     label0:
        r0.<sun.security.x509.KeyUsageExtension: byte[] extensionValue> = r4;

     label1:
        $r9 = new sun.security.util.DerValue;
        $r10 = r0.<sun.security.x509.KeyUsageExtension: byte[] extensionValue>;
        specialinvoke $r9.<sun.security.util.DerValue: void <init>(byte[])>($r10);
        r5 = $r9;
        $r11 = virtualinvoke r5.<sun.security.util.DerValue: sun.security.util.BitArray getUnalignedBitString()>();
        $r12 = virtualinvoke $r11.<sun.security.util.BitArray: boolean[] toBooleanArray()>();
        r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString> = $r12;
        return;
    }

    public void <init>()
    {
        sun.security.x509.KeyUsageExtension r0;
        sun.security.util.ObjectIdentifier $r1;
        boolean[] $r2;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        specialinvoke r0.<sun.security.x509.Extension: void <init>()>();
        $r1 = <sun.security.x509.PKIXExtensions: sun.security.util.ObjectIdentifier KeyUsage_Id>;
        r0.<sun.security.x509.KeyUsageExtension: sun.security.util.ObjectIdentifier extensionId> = $r1;
        r0.<sun.security.x509.KeyUsageExtension: boolean critical> = 1;
        $r2 = newarray (boolean)[0];
        r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString> = $r2;
        return;
    }

    public void set(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        sun.security.x509.KeyUsageExtension r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.io.IOException $r3, $r5;
        java.lang.Boolean $r4;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $z1 = r2 instanceof java.lang.Boolean;
        if $z1 != 0 goto label0;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Attribute must be of type Boolean.");
        throw $r3;

     label0:
        $r4 = (java.lang.Boolean) r2;
        z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("digital_signature");
        if $z2 == 0 goto label1;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(0, z0);
        goto label10;

     label1:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("non_repudiation");
        if $z3 == 0 goto label2;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(1, z0);
        goto label10;

     label2:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("key_encipherment");
        if $z4 == 0 goto label3;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(2, z0);
        goto label10;

     label3:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("data_encipherment");
        if $z5 == 0 goto label4;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(3, z0);
        goto label10;

     label4:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("key_agreement");
        if $z6 == 0 goto label5;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(4, z0);
        goto label10;

     label5:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("key_certsign");
        if $z7 == 0 goto label6;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(5, z0);
        goto label10;

     label6:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("crl_sign");
        if $z8 == 0 goto label7;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(6, z0);
        goto label10;

     label7:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("encipher_only");
        if $z9 == 0 goto label8;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(7, z0);
        goto label10;

     label8:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("decipher_only");
        if $z10 == 0 goto label9;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(8, z0);
        goto label10;

     label9:
        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Attribute name not recognized by CertAttrSet:KeyUsage.");
        throw $r5;

     label10:
        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void encodeThis()>();
        return;
    }

    public java.lang.Object get(java.lang.String) throws java.io.IOException
    {
        sun.security.x509.KeyUsageExtension r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        java.lang.Boolean $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.io.IOException $r11;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("digital_signature");
        if $z0 == 0 goto label0;

        $z1 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(0);
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);
        return $r2;

     label0:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("non_repudiation");
        if $z2 == 0 goto label1;

        $z3 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(1);
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);
        return $r3;

     label1:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("key_encipherment");
        if $z4 == 0 goto label2;

        $z5 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(2);
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);
        return $r4;

     label2:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("data_encipherment");
        if $z6 == 0 goto label3;

        $z7 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(3);
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);
        return $r5;

     label3:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("key_agreement");
        if $z8 == 0 goto label4;

        $z9 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(4);
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9);
        return $r6;

     label4:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("key_certsign");
        if $z10 == 0 goto label5;

        $z11 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(5);
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);
        return $r7;

     label5:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("crl_sign");
        if $z12 == 0 goto label6;

        $z13 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(6);
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13);
        return $r8;

     label6:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("encipher_only");
        if $z14 == 0 goto label7;

        $z15 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(7);
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15);
        return $r9;

     label7:
        $z16 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("decipher_only");
        if $z16 == 0 goto label8;

        $z17 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(8);
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17);
        return $r10;

     label8:
        $r11 = new java.io.IOException;
        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Attribute name not recognized by CertAttrSet:KeyUsage.");
        throw $r11;
    }

    public void delete(java.lang.String) throws java.io.IOException
    {
        sun.security.x509.KeyUsageExtension r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.io.IOException $r2;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("digital_signature");
        if $z0 == 0 goto label0;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(0, 0);
        goto label9;

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("non_repudiation");
        if $z1 == 0 goto label1;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(1, 0);
        goto label9;

     label1:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("key_encipherment");
        if $z2 == 0 goto label2;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(2, 0);
        goto label9;

     label2:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("data_encipherment");
        if $z3 == 0 goto label3;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(3, 0);
        goto label9;

     label3:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("key_agreement");
        if $z4 == 0 goto label4;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(4, 0);
        goto label9;

     label4:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("key_certsign");
        if $z5 == 0 goto label5;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(5, 0);
        goto label9;

     label5:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("crl_sign");
        if $z6 == 0 goto label6;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(6, 0);
        goto label9;

     label6:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("encipher_only");
        if $z7 == 0 goto label7;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(7, 0);
        goto label9;

     label7:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("decipher_only");
        if $z8 == 0 goto label8;

        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void set(int,boolean)>(8, 0);
        goto label9;

     label8:
        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Attribute name not recognized by CertAttrSet:KeyUsage.");
        throw $r2;

     label9:
        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void encodeThis()>();
        return;
    }

    public java.lang.String toString()
    {
        sun.security.x509.KeyUsageExtension r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r3, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r3 = specialinvoke r0.<sun.security.x509.Extension: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeyUsage [\n");
        $z0 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(0);
        if $z0 == 0 goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  DigitalSignature\n");

     label0:
        $z1 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(1);
        if $z1 == 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Non_repudiation\n");

     label1:
        $z2 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(2);
        if $z2 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Key_Encipherment\n");

     label2:
        $z3 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(3);
        if $z3 == 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Data_Encipherment\n");

     label3:
        $z4 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(4);
        if $z4 == 0 goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Key_Agreement\n");

     label4:
        $z5 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(5);
        if $z5 == 0 goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Key_CertSign\n");

     label5:
        $z6 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(6);
        if $z6 == 0 goto label6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Crl_Sign\n");

     label6:
        $z7 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(7);
        if $z7 == 0 goto label7;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Encipher_Only\n");

     label7:
        $z8 = specialinvoke r0.<sun.security.x509.KeyUsageExtension: boolean isSet(int)>(8);
        if $z8 == 0 goto label8;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Decipher_Only\n");

     label8:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");
        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r16;
    }

    public void encode(java.io.OutputStream) throws java.io.IOException
    {
        sun.security.x509.KeyUsageExtension r0;
        java.io.OutputStream r1;
        sun.security.util.DerOutputStream $r2, r3;
        byte[] $r4, $r6;
        sun.security.util.ObjectIdentifier $r5;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        r1 := @parameter0: java.io.OutputStream;
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        $r4 = r0.<sun.security.x509.KeyUsageExtension: byte[] extensionValue>;
        if $r4 != null goto label0;

        $r5 = <sun.security.x509.PKIXExtensions: sun.security.util.ObjectIdentifier KeyUsage_Id>;
        r0.<sun.security.x509.KeyUsageExtension: sun.security.util.ObjectIdentifier extensionId> = $r5;
        r0.<sun.security.x509.KeyUsageExtension: boolean critical> = 1;
        specialinvoke r0.<sun.security.x509.KeyUsageExtension: void encodeThis()>();

     label0:
        specialinvoke r0.<sun.security.x509.Extension: void encode(sun.security.util.DerOutputStream)>(r3);
        $r6 = virtualinvoke r3.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r6);
        return;
    }

    public java.util.Enumeration getElements()
    {
        sun.security.x509.KeyUsageExtension r0;
        sun.security.x509.AttributeNameEnumeration $r1, r2;
        java.util.Enumeration $r3;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        $r1 = new sun.security.x509.AttributeNameEnumeration;
        specialinvoke $r1.<sun.security.x509.AttributeNameEnumeration: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("digital_signature");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("non_repudiation");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("key_encipherment");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("data_encipherment");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("key_agreement");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("key_certsign");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("crl_sign");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("encipher_only");
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("decipher_only");
        $r3 = virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: java.util.Enumeration elements()>();
        return $r3;
    }

    public boolean[] getBits()
    {
        sun.security.x509.KeyUsageExtension r0;
        boolean[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        $r1 = r0.<sun.security.x509.KeyUsageExtension: boolean[] bitString>;
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (boolean[]) $r2;
        return $r3;
    }

    public java.lang.String getName()
    {
        sun.security.x509.KeyUsageExtension r0;

        r0 := @this: sun.security.x509.KeyUsageExtension;
        return "KeyUsage";
    }
}
