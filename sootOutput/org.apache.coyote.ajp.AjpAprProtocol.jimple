public class org.apache.coyote.ajp.AjpAprProtocol extends org.apache.coyote.ajp.AbstractAjpProtocol
{
    private static final org.apache.juli.logging.Log log;
    private org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler cHandler;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/coyote/ajp/AjpAprProtocol");
        <org.apache.coyote.ajp.AjpAprProtocol: org.apache.juli.logging.Log log> = $r0;
        return;
    }

    protected org.apache.juli.logging.Log getLog()
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;
        org.apache.juli.logging.Log $r1;

        r0 := @this: org.apache.coyote.ajp.AjpAprProtocol;
        $r1 = <org.apache.coyote.ajp.AjpAprProtocol: org.apache.juli.logging.Log log>;
        return $r1;
    }

    protected org.apache.tomcat.util.net.AbstractEndpoint$Handler getHandler()
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;
        org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler $r1;

        r0 := @this: org.apache.coyote.ajp.AjpAprProtocol;
        $r1 = r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler cHandler>;
        return $r1;
    }

    public boolean isAprRequired()
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;

        r0 := @this: org.apache.coyote.ajp.AjpAprProtocol;
        return 1;
    }

    public void <init>()
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;
        org.apache.tomcat.util.net.AprEndpoint $r1, $r4, $r7;
        org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler $r2, $r5;
        org.apache.tomcat.util.net.AbstractEndpoint $r3, $r6;

        r0 := @this: org.apache.coyote.ajp.AjpAprProtocol;
        specialinvoke r0.<org.apache.coyote.ajp.AbstractAjpProtocol: void <init>()>();
        $r1 = new org.apache.tomcat.util.net.AprEndpoint;
        specialinvoke $r1.<org.apache.tomcat.util.net.AprEndpoint: void <init>()>();
        r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint> = $r1;
        $r2 = new org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler;
        specialinvoke $r2.<org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler: void <init>(org.apache.coyote.ajp.AjpAprProtocol)>(r0);
        r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler cHandler> = $r2;
        $r3 = r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r4 = (org.apache.tomcat.util.net.AprEndpoint) $r3;
        $r5 = r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler cHandler>;
        virtualinvoke $r4.<org.apache.tomcat.util.net.AprEndpoint: void setHandler(org.apache.tomcat.util.net.AprEndpoint$Handler)>($r5);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpAprProtocol: void setSoLinger(int)>(-1);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpAprProtocol: void setSoTimeout(int)>(-1);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpAprProtocol: void setTcpNoDelay(boolean)>(1);
        $r6 = r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r7 = (org.apache.tomcat.util.net.AprEndpoint) $r6;
        virtualinvoke $r7.<org.apache.tomcat.util.net.AprEndpoint: void setUseSendfile(boolean)>(0);
        return;
    }

    public int getPollTime()
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.AprEndpoint $r2;
        int $i0;

        r0 := @this: org.apache.coyote.ajp.AjpAprProtocol;
        $r1 = r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.AprEndpoint) $r1;
        $i0 = virtualinvoke $r2.<org.apache.tomcat.util.net.AprEndpoint: int getPollTime()>();
        return $i0;
    }

    public void setPollTime(int)
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        org.apache.tomcat.util.net.AprEndpoint $r2;

        r0 := @this: org.apache.coyote.ajp.AjpAprProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = (org.apache.tomcat.util.net.AprEndpoint) $r1;
        virtualinvoke $r2.<org.apache.tomcat.util.net.AprEndpoint: void setPollTime(int)>(i0);
        return;
    }

    public void setPollerSize(int)
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.ajp.AjpAprProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setMaxConnections(int)>(i0);
        return;
    }

    public int getPollerSize()
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.ajp.AjpAprProtocol;
        $r1 = r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getMaxConnections()>();
        return $i0;
    }

    protected java.lang.String getNamePrefix()
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;

        r0 := @this: org.apache.coyote.ajp.AjpAprProtocol;
        return "ajp-apr";
    }

    static org.apache.juli.logging.Log access$0()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = <org.apache.coyote.ajp.AjpAprProtocol: org.apache.juli.logging.Log log>;
        return $r0;
    }

    static org.apache.tomcat.util.net.AbstractEndpoint access$1(org.apache.coyote.ajp.AjpAprProtocol)
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @parameter0: org.apache.coyote.ajp.AjpAprProtocol;
        $r1 = r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        return $r1;
    }

    static org.apache.coyote.Adapter access$2(org.apache.coyote.ajp.AjpAprProtocol)
    {
        org.apache.coyote.ajp.AjpAprProtocol r0;
        org.apache.coyote.Adapter $r1;

        r0 := @parameter0: org.apache.coyote.ajp.AjpAprProtocol;
        $r1 = r0.<org.apache.coyote.ajp.AjpAprProtocol: org.apache.coyote.Adapter adapter>;
        return $r1;
    }
}
