class java.util.Arrays$ArrayList extends java.util.AbstractList implements java.util.RandomAccess, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.Object[] a;

    void <init>(java.lang.Object[])
    {
        java.util.Arrays$ArrayList r0;
        java.lang.Object[] r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.util.Arrays$ArrayList;
        r1 := @parameter0: java.lang.Object[];
        specialinvoke r0.<java.util.AbstractList: void <init>()>();
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        r0.<java.util.Arrays$ArrayList: java.lang.Object[] a> = r1;
        return;
    }

    public int size()
    {
        java.util.Arrays$ArrayList r0;
        java.lang.Object[] $r1;
        int $i0;

        r0 := @this: java.util.Arrays$ArrayList;
        $r1 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        $i0 = lengthof $r1;
        return $i0;
    }

    public java.lang.Object[] toArray()
    {
        java.util.Arrays$ArrayList r0;
        java.lang.Object[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.util.Arrays$ArrayList;
        $r1 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (java.lang.Object[]) $r2;
        return $r3;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.Arrays$ArrayList r0;
        java.lang.Object[] r1, $r2, $r4, $r5;
        int i0, $i1, $i2;
        java.lang.Class $r3;

        r0 := @this: java.util.Arrays$ArrayList;
        r1 := @parameter0: java.lang.Object[];
        i0 = virtualinvoke r0.<java.util.Arrays$ArrayList: int size()>();
        $i1 = lengthof r1;
        if $i1 >= i0 goto label0;

        $r2 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>($r2, i0, $r3);
        return $r4;

     label0:
        $r5 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r1, 0, i0);
        $i2 = lengthof r1;
        if $i2 <= i0 goto label1;

        r1[i0] = null;

     label1:
        return r1;
    }

    public java.lang.Object get(int)
    {
        java.util.Arrays$ArrayList r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.Arrays$ArrayList;
        i0 := @parameter0: int;
        $r1 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        $r2 = $r1[i0];
        return $r2;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.util.Arrays$ArrayList r0;
        int i0;
        java.lang.Object r1, r2;
        java.lang.Object[] $r3, $r4;

        r0 := @this: java.util.Arrays$ArrayList;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        $r3 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        r2 = $r3[i0];
        $r4 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        $r4[i0] = r1;
        return r2;
    }

    public int indexOf(java.lang.Object)
    {
        java.util.Arrays$ArrayList r0;
        java.lang.Object r1, $r4, $r7;
        int i0, $i1, i2, $i3;
        java.lang.Object[] $r2, $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: java.util.Arrays$ArrayList;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label3;

        i0 = 0;

     label0:
        $r2 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        $i1 = lengthof $r2;
        if i0 >= $i1 goto label2;

        $r3 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        $r4 = $r3[i0];
        if $r4 != null goto label1;

        return i0;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        goto label6;

     label3:
        i2 = 0;

     label4:
        $r5 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        $i3 = lengthof $r5;
        if i2 >= $i3 goto label6;

        $r6 = r0.<java.util.Arrays$ArrayList: java.lang.Object[] a>;
        $r7 = $r6[i2];
        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r7);
        if $z0 == 0 goto label5;

        return i2;

     label5:
        i2 = i2 + 1;
        goto label4;

     label6:
        return -1;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Arrays$ArrayList r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;

        r0 := @this: java.util.Arrays$ArrayList;
        r1 := @parameter0: java.lang.Object;
        $i0 = virtualinvoke r0.<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>(r1);
        if $i0 == -1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }
}
