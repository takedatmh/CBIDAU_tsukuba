class java.math.SignedMutableBigInteger extends java.math.MutableBigInteger
{
    int sign;

    void <init>()
    {
        java.math.SignedMutableBigInteger r0;

        r0 := @this: java.math.SignedMutableBigInteger;
        specialinvoke r0.<java.math.MutableBigInteger: void <init>()>();
        r0.<java.math.SignedMutableBigInteger: int sign> = 1;
        return;
    }

    void <init>(int)
    {
        java.math.SignedMutableBigInteger r0;
        int i0;

        r0 := @this: java.math.SignedMutableBigInteger;
        i0 := @parameter0: int;
        specialinvoke r0.<java.math.MutableBigInteger: void <init>(int)>(i0);
        r0.<java.math.SignedMutableBigInteger: int sign> = 1;
        return;
    }

    void <init>(java.math.MutableBigInteger)
    {
        java.math.SignedMutableBigInteger r0;
        java.math.MutableBigInteger r1;

        r0 := @this: java.math.SignedMutableBigInteger;
        r1 := @parameter0: java.math.MutableBigInteger;
        specialinvoke r0.<java.math.MutableBigInteger: void <init>(java.math.MutableBigInteger)>(r1);
        r0.<java.math.SignedMutableBigInteger: int sign> = 1;
        return;
    }

    void signedAdd(java.math.SignedMutableBigInteger)
    {
        java.math.SignedMutableBigInteger r0, r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: java.math.SignedMutableBigInteger;
        r1 := @parameter0: java.math.SignedMutableBigInteger;
        $i0 = r0.<java.math.SignedMutableBigInteger: int sign>;
        $i1 = r1.<java.math.SignedMutableBigInteger: int sign>;
        if $i0 != $i1 goto label0;

        virtualinvoke r0.<java.math.SignedMutableBigInteger: void add(java.math.MutableBigInteger)>(r1);
        goto label1;

     label0:
        $i2 = r0.<java.math.SignedMutableBigInteger: int sign>;
        $i3 = virtualinvoke r0.<java.math.SignedMutableBigInteger: int subtract(java.math.MutableBigInteger)>(r1);
        $i4 = $i2 * $i3;
        r0.<java.math.SignedMutableBigInteger: int sign> = $i4;

     label1:
        return;
    }

    void signedAdd(java.math.MutableBigInteger)
    {
        java.math.SignedMutableBigInteger r0;
        java.math.MutableBigInteger r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.math.SignedMutableBigInteger;
        r1 := @parameter0: java.math.MutableBigInteger;
        $i0 = r0.<java.math.SignedMutableBigInteger: int sign>;
        if $i0 != 1 goto label0;

        virtualinvoke r0.<java.math.SignedMutableBigInteger: void add(java.math.MutableBigInteger)>(r1);
        goto label1;

     label0:
        $i1 = r0.<java.math.SignedMutableBigInteger: int sign>;
        $i2 = virtualinvoke r0.<java.math.SignedMutableBigInteger: int subtract(java.math.MutableBigInteger)>(r1);
        $i3 = $i1 * $i2;
        r0.<java.math.SignedMutableBigInteger: int sign> = $i3;

     label1:
        return;
    }

    void signedSubtract(java.math.SignedMutableBigInteger)
    {
        java.math.SignedMutableBigInteger r0, r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: java.math.SignedMutableBigInteger;
        r1 := @parameter0: java.math.SignedMutableBigInteger;
        $i0 = r0.<java.math.SignedMutableBigInteger: int sign>;
        $i1 = r1.<java.math.SignedMutableBigInteger: int sign>;
        if $i0 != $i1 goto label0;

        $i2 = r0.<java.math.SignedMutableBigInteger: int sign>;
        $i3 = virtualinvoke r0.<java.math.SignedMutableBigInteger: int subtract(java.math.MutableBigInteger)>(r1);
        $i4 = $i2 * $i3;
        r0.<java.math.SignedMutableBigInteger: int sign> = $i4;
        goto label1;

     label0:
        virtualinvoke r0.<java.math.SignedMutableBigInteger: void add(java.math.MutableBigInteger)>(r1);

     label1:
        return;
    }

    void signedSubtract(java.math.MutableBigInteger)
    {
        java.math.SignedMutableBigInteger r0;
        java.math.MutableBigInteger r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: java.math.SignedMutableBigInteger;
        r1 := @parameter0: java.math.MutableBigInteger;
        $i0 = r0.<java.math.SignedMutableBigInteger: int sign>;
        if $i0 != 1 goto label0;

        $i1 = r0.<java.math.SignedMutableBigInteger: int sign>;
        $i2 = virtualinvoke r0.<java.math.SignedMutableBigInteger: int subtract(java.math.MutableBigInteger)>(r1);
        $i3 = $i1 * $i2;
        r0.<java.math.SignedMutableBigInteger: int sign> = $i3;
        goto label1;

     label0:
        virtualinvoke r0.<java.math.SignedMutableBigInteger: void add(java.math.MutableBigInteger)>(r1);

     label1:
        $i4 = r0.<java.math.SignedMutableBigInteger: int intLen>;
        if $i4 != 0 goto label2;

        r0.<java.math.SignedMutableBigInteger: int sign> = 1;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        java.math.SignedMutableBigInteger r0;
        int $i0;
        java.math.BigInteger $r1;
        java.lang.String $r2;

        r0 := @this: java.math.SignedMutableBigInteger;
        $i0 = r0.<java.math.SignedMutableBigInteger: int sign>;
        $r1 = virtualinvoke r0.<java.math.SignedMutableBigInteger: java.math.BigInteger toBigInteger(int)>($i0);
        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.lang.String toString()>();
        return $r2;
    }
}
