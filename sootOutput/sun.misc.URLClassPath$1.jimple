class sun.misc.URLClassPath$1 extends java.lang.Object implements java.util.Enumeration
{
    private int index;
    private java.net.URL url;
    final java.lang.String val$name;
    final boolean val$check;
    final sun.misc.URLClassPath this$0;

    void <init>(sun.misc.URLClassPath, java.lang.String, boolean)
    {
        sun.misc.URLClassPath$1 r0;
        sun.misc.URLClassPath r1;
        java.lang.String r2;
        boolean z0;

        r0 := @this: sun.misc.URLClassPath$1;
        r1 := @parameter0: sun.misc.URLClassPath;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        r0.<sun.misc.URLClassPath$1: sun.misc.URLClassPath this$0> = r1;
        r0.<sun.misc.URLClassPath$1: java.lang.String val$name> = r2;
        r0.<sun.misc.URLClassPath$1: boolean val$check> = z0;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.misc.URLClassPath$1: int index> = 0;
        r0.<sun.misc.URLClassPath$1: java.net.URL url> = null;
        return;
    }

    private boolean next()
    {
        sun.misc.URLClassPath$1 r0;
        int $i0, $i1;
        sun.misc.URLClassPath$Loader r2, $r5;
        java.net.URL $r3, $r7, $r8;
        sun.misc.URLClassPath $r4;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: sun.misc.URLClassPath$1;
        $r3 = r0.<sun.misc.URLClassPath$1: java.net.URL url>;
        if $r3 == null goto label0;

        return 1;

     label0:
        $r4 = r0.<sun.misc.URLClassPath$1: sun.misc.URLClassPath this$0>;
        $i0 = r0.<sun.misc.URLClassPath$1: int index>;
        $i1 = $i0 + 1;
        r0.<sun.misc.URLClassPath$1: int index> = $i1;
        $r5 = staticinvoke <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader access$000(sun.misc.URLClassPath,int)>($r4, $i0);
        r2 = $r5;
        if $r5 == null goto label1;

        $r6 = r0.<sun.misc.URLClassPath$1: java.lang.String val$name>;
        $z0 = r0.<sun.misc.URLClassPath$1: boolean val$check>;
        $r7 = virtualinvoke r2.<sun.misc.URLClassPath$Loader: java.net.URL findResource(java.lang.String,boolean)>($r6, $z0);
        r0.<sun.misc.URLClassPath$1: java.net.URL url> = $r7;
        $r8 = r0.<sun.misc.URLClassPath$1: java.net.URL url>;
        if $r8 == null goto label0;

        return 1;

     label1:
        return 0;
    }

    public boolean hasMoreElements()
    {
        sun.misc.URLClassPath$1 r0;
        boolean $z0;

        r0 := @this: sun.misc.URLClassPath$1;
        $z0 = specialinvoke r0.<sun.misc.URLClassPath$1: boolean next()>();
        return $z0;
    }

    public java.net.URL nextElement()
    {
        sun.misc.URLClassPath$1 r0;
        java.net.URL r1;
        boolean $z0;
        java.util.NoSuchElementException $r2;

        r0 := @this: sun.misc.URLClassPath$1;
        $z0 = specialinvoke r0.<sun.misc.URLClassPath$1: boolean next()>();
        if $z0 != 0 goto label0;

        $r2 = new java.util.NoSuchElementException;
        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();
        throw $r2;

     label0:
        r1 = r0.<sun.misc.URLClassPath$1: java.net.URL url>;
        r0.<sun.misc.URLClassPath$1: java.net.URL url> = null;
        return r1;
    }

    public volatile java.lang.Object nextElement()
    {
        sun.misc.URLClassPath$1 r0;
        java.net.URL $r1;

        r0 := @this: sun.misc.URLClassPath$1;
        $r1 = virtualinvoke r0.<sun.misc.URLClassPath$1: java.net.URL nextElement()>();
        return $r1;
    }
}
