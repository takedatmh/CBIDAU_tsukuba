class java.util.logging.LogManager$4 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.String val$handlersPropertyName;
    final java.util.logging.Logger val$logger;
    final java.util.logging.LogManager this$0;

    void <init>(java.util.logging.LogManager, java.lang.String, java.util.logging.Logger)
    {
        java.util.logging.LogManager$4 r0;
        java.util.logging.LogManager r1;
        java.lang.String r2;
        java.util.logging.Logger r3;

        r0 := @this: java.util.logging.LogManager$4;
        r1 := @parameter0: java.util.logging.LogManager;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.util.logging.Logger;
        r0.<java.util.logging.LogManager$4: java.util.logging.LogManager this$0> = r1;
        r0.<java.util.logging.LogManager$4: java.lang.String val$handlersPropertyName> = r2;
        r0.<java.util.logging.LogManager$4: java.util.logging.Logger val$logger> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Object run()
    {
        java.util.logging.LogManager$4 r0;
        java.lang.String[] r1;
        int i0, $i1;
        java.lang.String r2, r5, $r8, $r15, $r20, $r29, $r34;
        java.lang.Class r3;
        java.util.logging.Handler r4;
        java.util.logging.Level r6;
        java.util.logging.LogManager $r7, $r11;
        java.lang.ClassLoader $r9;
        java.lang.Object $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r17, $r18, $r19, $r25, $r26, $r27, $r28, $r31, $r32, $r33;
        java.io.PrintStream $r16, $r24, $r30;
        java.util.logging.Logger $r21;
        java.lang.Exception $r22, r23;

        r0 := @this: java.util.logging.LogManager$4;
        $r7 = r0.<java.util.logging.LogManager$4: java.util.logging.LogManager this$0>;
        $r8 = r0.<java.util.logging.LogManager$4: java.lang.String val$handlersPropertyName>;
        r1 = staticinvoke <java.util.logging.LogManager: java.lang.String[] access$1200(java.util.logging.LogManager,java.lang.String)>($r7, $r8);
        i0 = 0;

     label0:
        $i1 = lengthof r1;
        if i0 >= $i1 goto label7;

        r2 = r1[i0];

     label1:
        $r9 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();
        r3 = virtualinvoke $r9.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r2);
        $r10 = virtualinvoke r3.<java.lang.Class: java.lang.Object newInstance()>();
        r4 = (java.util.logging.Handler) $r10;
        $r11 = r0.<java.util.logging.LogManager$4: java.util.logging.LogManager this$0>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".level");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        r5 = virtualinvoke $r11.<java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)>($r15);
        if r5 == null goto label3;

        r6 = staticinvoke <java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>(r5);
        if r6 == null goto label2;

        virtualinvoke r4.<java.util.logging.Handler: void setLevel(java.util.logging.Level)>(r6);
        goto label3;

     label2:
        $r16 = <java.lang.System: java.io.PrintStream err>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t set level for ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label3:
        $r21 = r0.<java.util.logging.LogManager$4: java.util.logging.Logger val$logger>;
        virtualinvoke $r21.<java.util.logging.Logger: void addHandler(java.util.logging.Handler)>(r4);

     label4:
        goto label6;

     label5:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = <java.lang.System: java.io.PrintStream err>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load log handler \"");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
        $r30 = <java.lang.System: java.io.PrintStream err>;
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r34);
        virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();

     label6:
        i0 = i0 + 1;
        goto label0;

     label7:
        return null;

        catch java.lang.Exception from label1 to label4 with label5;
    }
}
