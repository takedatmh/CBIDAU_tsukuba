class sun.security.krb5.KrbServiceLocator extends java.lang.Object
{
    private static final java.lang.String SRV_RR;
    private static final java.lang.String[] SRV_RR_ATTR;
    private static final java.lang.String SRV_TXT;
    private static final java.lang.String[] SRV_TXT_ATTR;
    private static final java.util.Random random;

    private void <init>()
    {
        sun.security.krb5.KrbServiceLocator r0;

        r0 := @this: sun.security.krb5.KrbServiceLocator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static java.lang.String[] getKerberosService(java.lang.String)
    {
        java.lang.String r0, r2, $r16;
        java.lang.StringBuilder $r1, $r9, $r10;
        java.lang.String[] r3, r7, $r13, r18;
        javax.naming.Context r4;
        javax.naming.directory.Attributes r5;
        javax.naming.directory.Attribute r6, $r14;
        int i0, i1, i2, i3;
        boolean z0, $z1;
        java.lang.Exception r8, $r17;
        java.util.Hashtable $r11;
        null_type $n0;
        javax.naming.directory.DirContext $r12;
        java.lang.Object $r15;
        javax.naming.NamingException $r19, r20;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dns:///_kerberos.");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        r3 = null;

     label0:
        $r11 = new java.util.Hashtable;
        specialinvoke $r11.<java.util.Hashtable: void <init>(int)>(0);
        r4 = staticinvoke <javax.naming.spi.NamingManager: javax.naming.Context getURLContext(java.lang.String,java.util.Hashtable)>("dns", $r11);
        $z1 = r4 instanceof javax.naming.directory.DirContext;
        if $z1 != 0 goto label2;

        $n0 = null;

     label1:
        return $n0;

     label2:
        $r12 = (javax.naming.directory.DirContext) r4;
        $r13 = <sun.security.krb5.KrbServiceLocator: java.lang.String[] SRV_TXT_ATTR>;
        r5 = interfaceinvoke $r12.<javax.naming.directory.DirContext: javax.naming.directory.Attributes getAttributes(java.lang.String,java.lang.String[])>(r2, $r13);
        if r5 == null goto label10;

        $r14 = interfaceinvoke r5.<javax.naming.directory.Attributes: javax.naming.directory.Attribute get(java.lang.String)>("TXT");
        r6 = $r14;
        if $r14 == null goto label10;

        i0 = interfaceinvoke r6.<javax.naming.directory.Attribute: int size()>();
        z0 = 0;
        r7 = newarray (java.lang.String)[i0];
        i1 = 0;
        i2 = 0;

     label3:
        if i1 >= i0 goto label8;

     label4:
        $r15 = interfaceinvoke r6.<javax.naming.directory.Attribute: java.lang.Object get(int)>(i1);
        $r16 = (java.lang.String) $r15;
        r7[i2] = $r16;
        i2 = i2 + 1;

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;
        r8 = $r17;

     label7:
        i1 = i1 + 1;
        goto label3;

     label8:
        i3 = i2;
        if i3 >= i0 goto label9;

        r18 = newarray (java.lang.String)[i3];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r18, 0, i3);
        r3 = r18;
        goto label10;

     label9:
        r3 = r7;

     label10:
        goto label12;

     label11:
        $r19 := @caughtexception;
        r20 = $r19;

     label12:
        return r3;

        catch java.lang.Exception from label4 to label5 with label6;
        catch javax.naming.NamingException from label0 to label1 with label11;
        catch javax.naming.NamingException from label2 to label10 with label11;
    }

    static java.lang.String[] getKerberosService(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r3, $r20;
        java.lang.StringBuilder $r2, $r10, $r11, $r12, $r13;
        java.lang.String[] r4, $r16;
        javax.naming.Context r5;
        javax.naming.directory.Attributes r6;
        javax.naming.directory.Attribute r7, $r17;
        int i0, i1, i2, i3;
        boolean z0, $z1;
        sun.security.krb5.KrbServiceLocator$SrvRecord[] r8, r22;
        java.lang.Exception r9, $r21;
        java.util.Hashtable $r14;
        null_type $n0;
        javax.naming.directory.DirContext $r15;
        sun.security.krb5.KrbServiceLocator$SrvRecord $r18;
        java.lang.Object $r19;
        javax.naming.NamingException $r23, r24;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dns:///_kerberos.");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        r4 = null;

     label0:
        $r14 = new java.util.Hashtable;
        specialinvoke $r14.<java.util.Hashtable: void <init>(int)>(0);
        r5 = staticinvoke <javax.naming.spi.NamingManager: javax.naming.Context getURLContext(java.lang.String,java.util.Hashtable)>("dns", $r14);
        $z1 = r5 instanceof javax.naming.directory.DirContext;
        if $z1 != 0 goto label2;

        $n0 = null;

     label1:
        return $n0;

     label2:
        $r15 = (javax.naming.directory.DirContext) r5;
        $r16 = <sun.security.krb5.KrbServiceLocator: java.lang.String[] SRV_RR_ATTR>;
        r6 = interfaceinvoke $r15.<javax.naming.directory.DirContext: javax.naming.directory.Attributes getAttributes(java.lang.String,java.lang.String[])>(r3, $r16);
        if r6 == null goto label11;

        $r17 = interfaceinvoke r6.<javax.naming.directory.Attributes: javax.naming.directory.Attribute get(java.lang.String)>("SRV");
        r7 = $r17;
        if $r17 == null goto label11;

        i0 = interfaceinvoke r7.<javax.naming.directory.Attribute: int size()>();
        z0 = 0;
        r8 = newarray (sun.security.krb5.KrbServiceLocator$SrvRecord)[i0];
        i1 = 0;
        i2 = 0;

     label3:
        if i1 >= i0 goto label8;

     label4:
        $r18 = new sun.security.krb5.KrbServiceLocator$SrvRecord;
        $r19 = interfaceinvoke r7.<javax.naming.directory.Attribute: java.lang.Object get(int)>(i1);
        $r20 = (java.lang.String) $r19;
        specialinvoke $r18.<sun.security.krb5.KrbServiceLocator$SrvRecord: void <init>(java.lang.String)>($r20);
        r8[i2] = $r18;
        i2 = i2 + 1;

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;
        r9 = $r21;

     label7:
        i1 = i1 + 1;
        goto label3;

     label8:
        i3 = i2;
        if i3 >= i0 goto label9;

        r22 = newarray (sun.security.krb5.KrbServiceLocator$SrvRecord)[i3];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r22, 0, i3);
        r8 = r22;

     label9:
        if i3 <= 1 goto label10;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r8);

     label10:
        r4 = staticinvoke <sun.security.krb5.KrbServiceLocator: java.lang.String[] extractHostports(sun.security.krb5.KrbServiceLocator$SrvRecord[])>(r8);

     label11:
        goto label13;

     label12:
        $r23 := @caughtexception;
        r24 = $r23;

     label13:
        return r4;

        catch java.lang.Exception from label4 to label5 with label6;
        catch javax.naming.NamingException from label0 to label1 with label12;
        catch javax.naming.NamingException from label2 to label11 with label12;
    }

    private static java.lang.String[] extractHostports(sun.security.krb5.KrbServiceLocator$SrvRecord[])
    {
        sun.security.krb5.KrbServiceLocator$SrvRecord[] r0;
        java.lang.String[] r1;
        boolean z0, z1, z2;
        int i0, i1, i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, i13, $i14;
        sun.security.krb5.KrbServiceLocator$SrvRecord $r2, $r3;
        java.lang.String $r4;

        r0 := @parameter0: sun.security.krb5.KrbServiceLocator$SrvRecord[];
        r1 = null;
        z0 = 0;
        z1 = 0;
        z2 = 0;
        i0 = 0;
        i1 = 0;

     label0:
        $i3 = lengthof r0;
        if i1 >= $i3 goto label6;

        if r1 != null goto label1;

        $i4 = lengthof r0;
        r1 = newarray (java.lang.String)[$i4];

     label1:
        i5 = i1;

     label2:
        $i6 = lengthof r0;
        $i7 = $i6 - 1;
        if i1 >= $i7 goto label3;

        $r2 = r0[i1];
        $i8 = $r2.<sun.security.krb5.KrbServiceLocator$SrvRecord: int priority>;
        $i9 = i1 + 1;
        $r3 = r0[$i9];
        $i10 = $r3.<sun.security.krb5.KrbServiceLocator$SrvRecord: int priority>;
        if $i8 != $i10 goto label3;

        i1 = i1 + 1;
        goto label2;

     label3:
        i11 = i1;
        $i12 = i11 - i5;
        i13 = $i12 + 1;
        i2 = 0;

     label4:
        if i2 >= i13 goto label5;

        $i14 = i0;
        i0 = i0 + 1;
        $r4 = staticinvoke <sun.security.krb5.KrbServiceLocator: java.lang.String selectHostport(sun.security.krb5.KrbServiceLocator$SrvRecord[],int,int)>(r0, i5, i11);
        r1[$i14] = $r4;
        i2 = i2 + 1;
        goto label4;

     label5:
        i1 = i1 + 1;
        goto label0;

     label6:
        return r1;
    }

    private static java.lang.String selectHostport(sun.security.krb5.KrbServiceLocator$SrvRecord[], int, int)
    {
        sun.security.krb5.KrbServiceLocator$SrvRecord[] r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        sun.security.krb5.KrbServiceLocator$SrvRecord $r1, $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.String $r2, r6;
        java.util.Random $r7;

        r0 := @parameter0: sun.security.krb5.KrbServiceLocator$SrvRecord[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if i0 != i1 goto label0;

        $r1 = r0[i0];
        $r2 = $r1.<sun.security.krb5.KrbServiceLocator$SrvRecord: java.lang.String hostport>;
        return $r2;

     label0:
        i2 = 0;
        i3 = i0;

     label1:
        if i3 > i1 goto label3;

        $r3 = r0[i3];
        if $r3 == null goto label2;

        $r4 = r0[i3];
        $i6 = $r4.<sun.security.krb5.KrbServiceLocator$SrvRecord: int weight>;
        i2 = i2 + $i6;
        $r5 = r0[i3];
        $r5.<sun.security.krb5.KrbServiceLocator$SrvRecord: int sum> = i2;

     label2:
        i3 = i3 + 1;
        goto label1;

     label3:
        r6 = null;
        if i2 != 0 goto label4;

        $i7 = 0;
        goto label5;

     label4:
        $r7 = <sun.security.krb5.KrbServiceLocator: java.util.Random random>;
        $i8 = i2 + 1;
        $i7 = virtualinvoke $r7.<java.util.Random: int nextInt(int)>($i8);

     label5:
        i4 = $i7;
        i5 = i0;

     label6:
        if i5 > i1 goto label8;

        $r8 = r0[i5];
        if $r8 == null goto label7;

        $r9 = r0[i5];
        $i9 = $r9.<sun.security.krb5.KrbServiceLocator$SrvRecord: int sum>;
        if $i9 < i4 goto label7;

        $r10 = r0[i5];
        r6 = $r10.<sun.security.krb5.KrbServiceLocator$SrvRecord: java.lang.String hostport>;
        r0[i5] = null;
        goto label8;

     label7:
        i5 = i5 + 1;
        goto label6;

     label8:
        return r6;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;
        java.util.Random $r2;

        $r0 = newarray (java.lang.String)[1];
        $r0[0] = "SRV";
        <sun.security.krb5.KrbServiceLocator: java.lang.String[] SRV_RR_ATTR> = $r0;
        $r1 = newarray (java.lang.String)[1];
        $r1[0] = "TXT";
        <sun.security.krb5.KrbServiceLocator: java.lang.String[] SRV_TXT_ATTR> = $r1;
        $r2 = new java.util.Random;
        specialinvoke $r2.<java.util.Random: void <init>()>();
        <sun.security.krb5.KrbServiceLocator: java.util.Random random> = $r2;
        return;
    }
}
