public class java.security.spec.ECParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
{
    private final java.security.spec.EllipticCurve curve;
    private final java.security.spec.ECPoint g;
    private final java.math.BigInteger n;
    private final int h;

    public void <init>(java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger, int)
    {
        java.security.spec.ECParameterSpec r0;
        java.security.spec.EllipticCurve r1;
        java.security.spec.ECPoint r2;
        java.math.BigInteger r3;
        int i0, $i1;
        java.lang.NullPointerException $r4, $r5, $r6;
        java.lang.IllegalArgumentException $r7, $r8;

        r0 := @this: java.security.spec.ECParameterSpec;
        r1 := @parameter0: java.security.spec.EllipticCurve;
        r2 := @parameter1: java.security.spec.ECPoint;
        r3 := @parameter2: java.math.BigInteger;
        i0 := @parameter3: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("curve is null");
        throw $r4;

     label0:
        if r2 != null goto label1;

        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("g is null");
        throw $r5;

     label1:
        if r3 != null goto label2;

        $r6 = new java.lang.NullPointerException;
        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("n is null");
        throw $r6;

     label2:
        $i1 = virtualinvoke r3.<java.math.BigInteger: int signum()>();
        if $i1 == 1 goto label3;

        $r7 = new java.lang.IllegalArgumentException;
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("n is not positive");
        throw $r7;

     label3:
        if i0 > 0 goto label4;

        $r8 = new java.lang.IllegalArgumentException;
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("h is not positive");
        throw $r8;

     label4:
        r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve curve> = r1;
        r0.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint g> = r2;
        r0.<java.security.spec.ECParameterSpec: java.math.BigInteger n> = r3;
        r0.<java.security.spec.ECParameterSpec: int h> = i0;
        return;
    }

    public java.security.spec.EllipticCurve getCurve()
    {
        java.security.spec.ECParameterSpec r0;
        java.security.spec.EllipticCurve $r1;

        r0 := @this: java.security.spec.ECParameterSpec;
        $r1 = r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve curve>;
        return $r1;
    }

    public java.security.spec.ECPoint getGenerator()
    {
        java.security.spec.ECParameterSpec r0;
        java.security.spec.ECPoint $r1;

        r0 := @this: java.security.spec.ECParameterSpec;
        $r1 = r0.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint g>;
        return $r1;
    }

    public java.math.BigInteger getOrder()
    {
        java.security.spec.ECParameterSpec r0;
        java.math.BigInteger $r1;

        r0 := @this: java.security.spec.ECParameterSpec;
        $r1 = r0.<java.security.spec.ECParameterSpec: java.math.BigInteger n>;
        return $r1;
    }

    public int getCofactor()
    {
        java.security.spec.ECParameterSpec r0;
        int $i0;

        r0 := @this: java.security.spec.ECParameterSpec;
        $i0 = r0.<java.security.spec.ECParameterSpec: int h>;
        return $i0;
    }
}
