public class sun.util.calendar.Gregorian extends sun.util.calendar.BaseCalendar
{

    void <init>()
    {
        sun.util.calendar.Gregorian r0;

        r0 := @this: sun.util.calendar.Gregorian;
        specialinvoke r0.<sun.util.calendar.BaseCalendar: void <init>()>();
        return;
    }

    public java.lang.String getName()
    {
        sun.util.calendar.Gregorian r0;

        r0 := @this: sun.util.calendar.Gregorian;
        return "gregorian";
    }

    public sun.util.calendar.Gregorian$Date getCalendarDate()
    {
        sun.util.calendar.Gregorian r0;
        long $l0;
        sun.util.calendar.Gregorian$Date $r1, $r2;

        r0 := @this: sun.util.calendar.Gregorian;
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r1 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate()>();
        $r2 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>($l0, $r1);
        return $r2;
    }

    public sun.util.calendar.Gregorian$Date getCalendarDate(long)
    {
        sun.util.calendar.Gregorian r0;
        long l0;
        sun.util.calendar.Gregorian$Date $r1, $r2;

        r0 := @this: sun.util.calendar.Gregorian;
        l0 := @parameter0: long;
        $r1 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate()>();
        $r2 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>(l0, $r1);
        return $r2;
    }

    public sun.util.calendar.Gregorian$Date getCalendarDate(long, sun.util.calendar.CalendarDate)
    {
        sun.util.calendar.Gregorian r0;
        long l0;
        sun.util.calendar.CalendarDate r1, $r2;
        sun.util.calendar.Gregorian$Date $r3;

        r0 := @this: sun.util.calendar.Gregorian;
        l0 := @parameter0: long;
        r1 := @parameter1: sun.util.calendar.CalendarDate;
        $r2 = specialinvoke r0.<sun.util.calendar.BaseCalendar: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>(l0, r1);
        $r3 = (sun.util.calendar.Gregorian$Date) $r2;
        return $r3;
    }

    public sun.util.calendar.Gregorian$Date getCalendarDate(long, java.util.TimeZone)
    {
        sun.util.calendar.Gregorian r0;
        long l0;
        java.util.TimeZone r1;
        sun.util.calendar.Gregorian$Date $r2, $r3;

        r0 := @this: sun.util.calendar.Gregorian;
        l0 := @parameter0: long;
        r1 := @parameter1: java.util.TimeZone;
        $r2 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>(r1);
        $r3 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>(l0, $r2);
        return $r3;
    }

    public sun.util.calendar.Gregorian$Date newCalendarDate()
    {
        sun.util.calendar.Gregorian r0;
        sun.util.calendar.Gregorian$Date $r1;

        r0 := @this: sun.util.calendar.Gregorian;
        $r1 = new sun.util.calendar.Gregorian$Date;
        specialinvoke $r1.<sun.util.calendar.Gregorian$Date: void <init>()>();
        return $r1;
    }

    public sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)
    {
        sun.util.calendar.Gregorian r0;
        java.util.TimeZone r1;
        sun.util.calendar.Gregorian$Date $r2;

        r0 := @this: sun.util.calendar.Gregorian;
        r1 := @parameter0: java.util.TimeZone;
        $r2 = new sun.util.calendar.Gregorian$Date;
        specialinvoke $r2.<sun.util.calendar.Gregorian$Date: void <init>(java.util.TimeZone)>(r1);
        return $r2;
    }

    public volatile sun.util.calendar.CalendarDate getCalendarDate(long, sun.util.calendar.CalendarDate)
    {
        sun.util.calendar.Gregorian r0;
        long l0;
        sun.util.calendar.CalendarDate r1;
        sun.util.calendar.Gregorian$Date $r2;

        r0 := @this: sun.util.calendar.Gregorian;
        l0 := @parameter0: long;
        r1 := @parameter1: sun.util.calendar.CalendarDate;
        $r2 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>(l0, r1);
        return $r2;
    }

    public volatile sun.util.calendar.CalendarDate getCalendarDate(long, java.util.TimeZone)
    {
        sun.util.calendar.Gregorian r0;
        long l0;
        java.util.TimeZone r1;
        sun.util.calendar.Gregorian$Date $r2;

        r0 := @this: sun.util.calendar.Gregorian;
        l0 := @parameter0: long;
        r1 := @parameter1: java.util.TimeZone;
        $r2 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,java.util.TimeZone)>(l0, r1);
        return $r2;
    }

    public volatile sun.util.calendar.CalendarDate getCalendarDate(long)
    {
        sun.util.calendar.Gregorian r0;
        long l0;
        sun.util.calendar.Gregorian$Date $r1;

        r0 := @this: sun.util.calendar.Gregorian;
        l0 := @parameter0: long;
        $r1 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long)>(l0);
        return $r1;
    }

    public volatile sun.util.calendar.CalendarDate getCalendarDate()
    {
        sun.util.calendar.Gregorian r0;
        sun.util.calendar.Gregorian$Date $r1;

        r0 := @this: sun.util.calendar.Gregorian;
        $r1 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate()>();
        return $r1;
    }

    public volatile sun.util.calendar.CalendarDate newCalendarDate(java.util.TimeZone)
    {
        sun.util.calendar.Gregorian r0;
        java.util.TimeZone r1;
        sun.util.calendar.Gregorian$Date $r2;

        r0 := @this: sun.util.calendar.Gregorian;
        r1 := @parameter0: java.util.TimeZone;
        $r2 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>(r1);
        return $r2;
    }

    public volatile sun.util.calendar.CalendarDate newCalendarDate()
    {
        sun.util.calendar.Gregorian r0;
        sun.util.calendar.Gregorian$Date $r1;

        r0 := @this: sun.util.calendar.Gregorian;
        $r1 = virtualinvoke r0.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate()>();
        return $r1;
    }
}
