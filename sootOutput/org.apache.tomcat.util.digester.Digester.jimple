public class org.apache.tomcat.util.digester.Digester extends org.xml.sax.ext.DefaultHandler2
{
    protected static org.apache.tomcat.util.IntrospectionUtils$PropertySource propertySource;
    protected org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source;
    protected java.lang.StringBuilder bodyText;
    protected org.apache.tomcat.util.digester.ArrayStack bodyTexts;
    protected org.apache.tomcat.util.digester.ArrayStack matches;
    protected java.lang.ClassLoader classLoader;
    protected boolean configured;
    protected org.xml.sax.EntityResolver entityResolver;
    protected java.util.HashMap entityValidator;
    protected org.xml.sax.ErrorHandler errorHandler;
    protected javax.xml.parsers.SAXParserFactory factory;
    protected org.xml.sax.Locator locator;
    protected java.lang.String match;
    protected boolean namespaceAware;
    protected java.util.HashMap namespaces;
    protected org.apache.tomcat.util.digester.ArrayStack params;
    protected javax.xml.parsers.SAXParser parser;
    protected java.lang.String publicId;
    protected org.xml.sax.XMLReader reader;
    protected java.lang.Object root;
    protected org.apache.tomcat.util.digester.Rules rules;
    protected org.apache.tomcat.util.digester.ArrayStack stack;
    protected boolean useContextClassLoader;
    protected boolean validating;
    protected boolean rulesValidation;
    protected java.util.Map fakeAttributes;
    protected org.apache.juli.logging.Log log;
    protected org.apache.juli.logging.Log saxLog;
    private java.util.HashMap stacksByName;

    static void <clinit>()
    {
        java.lang.String r0, $r17;
        java.lang.Class $r1, r3;
        java.lang.ClassLoader[] r2, $r4;
        int i0, $i1;
        java.lang.ClassLoader $r5, $r7, $r8;
        java.lang.Thread $r6;
        java.lang.Object $r9;
        org.apache.tomcat.util.IntrospectionUtils$PropertySource $r10;
        java.lang.Throwable $r11, r12;
        org.apache.juli.logging.Log $r13;
        java.lang.StringBuilder $r14, $r15, $r16;

        <org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource propertySource> = null;
        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.tomcat.util.digester.PROPERTY_SOURCE");
        if r0 == null goto label4;

        $r4 = newarray (java.lang.ClassLoader)[2];
        $r1 = class "org/apache/tomcat/util/digester/Digester";
        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        $r4[0] = $r5;
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        $r4[1] = $r7;
        r2 = $r4;
        i0 = 0;
        goto label3;

     label0:
        $r8 = r2[i0];
        r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r0, 1, $r8);
        $r9 = virtualinvoke r3.<java.lang.Class: java.lang.Object newInstance()>();
        $r10 = (org.apache.tomcat.util.IntrospectionUtils$PropertySource) $r9;
        <org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource propertySource> = $r10;

     label1:
        goto label4;

     label2:
        $r11 := @caughtexception;
        r12 = $r11;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r12);
        $r13 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.String)>("org.apache.tomcat.util.digester.Digester");
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to load property source[");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r17, r12);
        i0 = i0 + 1;

     label3:
        $i1 = lengthof r2;
        if i0 < $i1 goto label0;

     label4:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void <init>()
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.tomcat.util.digester.Digester$SystemPropertySource $r1;
        org.apache.tomcat.util.IntrospectionUtils$PropertySource[] $r2, $r14, $r16;
        java.lang.StringBuilder $r3;
        org.apache.tomcat.util.digester.ArrayStack $r4, $r5, $r8, $r9;
        java.util.HashMap $r6, $r7, $r12;
        org.apache.juli.logging.Log $r10, $r11;
        org.apache.tomcat.util.IntrospectionUtils$PropertySource $r13, $r15, $r17;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        specialinvoke r0.<org.xml.sax.ext.DefaultHandler2: void <init>()>();
        $r2 = newarray (org.apache.tomcat.util.IntrospectionUtils$PropertySource)[1];
        $r1 = new org.apache.tomcat.util.digester.Digester$SystemPropertySource;
        specialinvoke $r1.<org.apache.tomcat.util.digester.Digester$SystemPropertySource: void <init>(org.apache.tomcat.util.digester.Digester,org.apache.tomcat.util.digester.Digester$SystemPropertySource)>(r0, null);
        $r2[0] = $r1;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source> = $r2;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText> = $r3;
        $r4 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r4.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack bodyTexts> = $r4;
        $r5 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r5.<org.apache.tomcat.util.digester.ArrayStack: void <init>(int)>(10);
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack matches> = $r5;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.ClassLoader classLoader> = null;
        r0.<org.apache.tomcat.util.digester.Digester: boolean configured> = 0;
        $r6 = new java.util.HashMap;
        specialinvoke $r6.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap entityValidator> = $r6;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler> = null;
        r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory> = null;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Locator locator> = null;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match> = "";
        r0.<org.apache.tomcat.util.digester.Digester: boolean namespaceAware> = 0;
        $r7 = new java.util.HashMap;
        specialinvoke $r7.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap namespaces> = $r7;
        $r8 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r8.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack params> = $r8;
        r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser parser> = null;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String publicId> = null;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader> = null;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root> = null;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules rules> = null;
        $r9 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r9.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack stack> = $r9;
        r0.<org.apache.tomcat.util.digester.Digester: boolean useContextClassLoader> = 0;
        r0.<org.apache.tomcat.util.digester.Digester: boolean validating> = 0;
        r0.<org.apache.tomcat.util.digester.Digester: boolean rulesValidation> = 0;
        r0.<org.apache.tomcat.util.digester.Digester: java.util.Map fakeAttributes> = null;
        $r10 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.String)>("org.apache.tomcat.util.digester.Digester");
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log> = $r10;
        $r11 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.String)>("org.apache.tomcat.util.digester.Digester.sax");
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog> = $r11;
        $r12 = new java.util.HashMap;
        specialinvoke $r12.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap stacksByName> = $r12;
        $r13 = <org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource propertySource>;
        if $r13 == null goto label0;

        $r14 = newarray (org.apache.tomcat.util.IntrospectionUtils$PropertySource)[2];
        $r15 = <org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource propertySource>;
        $r14[0] = $r15;
        $r16 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source>;
        $r17 = $r16[0];
        $r14[1] = $r17;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source> = $r14;

     label0:
        return;
    }

    public void <init>(javax.xml.parsers.SAXParser)
    {
        org.apache.tomcat.util.digester.Digester r0;
        javax.xml.parsers.SAXParser r1;
        org.apache.tomcat.util.digester.Digester$SystemPropertySource $r2;
        org.apache.tomcat.util.IntrospectionUtils$PropertySource[] $r3, $r15, $r17;
        java.lang.StringBuilder $r4;
        org.apache.tomcat.util.digester.ArrayStack $r5, $r6, $r9, $r10;
        java.util.HashMap $r7, $r8, $r13;
        org.apache.juli.logging.Log $r11, $r12;
        org.apache.tomcat.util.IntrospectionUtils$PropertySource $r14, $r16, $r18;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: javax.xml.parsers.SAXParser;
        specialinvoke r0.<org.xml.sax.ext.DefaultHandler2: void <init>()>();
        $r3 = newarray (org.apache.tomcat.util.IntrospectionUtils$PropertySource)[1];
        $r2 = new org.apache.tomcat.util.digester.Digester$SystemPropertySource;
        specialinvoke $r2.<org.apache.tomcat.util.digester.Digester$SystemPropertySource: void <init>(org.apache.tomcat.util.digester.Digester,org.apache.tomcat.util.digester.Digester$SystemPropertySource)>(r0, null);
        $r3[0] = $r2;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source> = $r3;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText> = $r4;
        $r5 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r5.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack bodyTexts> = $r5;
        $r6 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r6.<org.apache.tomcat.util.digester.ArrayStack: void <init>(int)>(10);
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack matches> = $r6;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.ClassLoader classLoader> = null;
        r0.<org.apache.tomcat.util.digester.Digester: boolean configured> = 0;
        $r7 = new java.util.HashMap;
        specialinvoke $r7.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap entityValidator> = $r7;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler> = null;
        r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory> = null;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Locator locator> = null;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match> = "";
        r0.<org.apache.tomcat.util.digester.Digester: boolean namespaceAware> = 0;
        $r8 = new java.util.HashMap;
        specialinvoke $r8.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap namespaces> = $r8;
        $r9 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r9.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack params> = $r9;
        r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser parser> = null;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String publicId> = null;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader> = null;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root> = null;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules rules> = null;
        $r10 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r10.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack stack> = $r10;
        r0.<org.apache.tomcat.util.digester.Digester: boolean useContextClassLoader> = 0;
        r0.<org.apache.tomcat.util.digester.Digester: boolean validating> = 0;
        r0.<org.apache.tomcat.util.digester.Digester: boolean rulesValidation> = 0;
        r0.<org.apache.tomcat.util.digester.Digester: java.util.Map fakeAttributes> = null;
        $r11 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.String)>("org.apache.tomcat.util.digester.Digester");
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log> = $r11;
        $r12 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.String)>("org.apache.tomcat.util.digester.Digester.sax");
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog> = $r12;
        $r13 = new java.util.HashMap;
        specialinvoke $r13.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap stacksByName> = $r13;
        r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser parser> = r1;
        $r14 = <org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource propertySource>;
        if $r14 == null goto label0;

        $r15 = newarray (org.apache.tomcat.util.IntrospectionUtils$PropertySource)[2];
        $r16 = <org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource propertySource>;
        $r15[0] = $r16;
        $r17 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source>;
        $r18 = $r17[0];
        $r15[1] = $r18;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source> = $r15;

     label0:
        return;
    }

    public void <init>(org.xml.sax.XMLReader)
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.XMLReader r1;
        org.apache.tomcat.util.digester.Digester$SystemPropertySource $r2;
        org.apache.tomcat.util.IntrospectionUtils$PropertySource[] $r3, $r15, $r17;
        java.lang.StringBuilder $r4;
        org.apache.tomcat.util.digester.ArrayStack $r5, $r6, $r9, $r10;
        java.util.HashMap $r7, $r8, $r13;
        org.apache.juli.logging.Log $r11, $r12;
        org.apache.tomcat.util.IntrospectionUtils$PropertySource $r14, $r16, $r18;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.xml.sax.XMLReader;
        specialinvoke r0.<org.xml.sax.ext.DefaultHandler2: void <init>()>();
        $r3 = newarray (org.apache.tomcat.util.IntrospectionUtils$PropertySource)[1];
        $r2 = new org.apache.tomcat.util.digester.Digester$SystemPropertySource;
        specialinvoke $r2.<org.apache.tomcat.util.digester.Digester$SystemPropertySource: void <init>(org.apache.tomcat.util.digester.Digester,org.apache.tomcat.util.digester.Digester$SystemPropertySource)>(r0, null);
        $r3[0] = $r2;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source> = $r3;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText> = $r4;
        $r5 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r5.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack bodyTexts> = $r5;
        $r6 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r6.<org.apache.tomcat.util.digester.ArrayStack: void <init>(int)>(10);
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack matches> = $r6;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.ClassLoader classLoader> = null;
        r0.<org.apache.tomcat.util.digester.Digester: boolean configured> = 0;
        $r7 = new java.util.HashMap;
        specialinvoke $r7.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap entityValidator> = $r7;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler> = null;
        r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory> = null;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Locator locator> = null;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match> = "";
        r0.<org.apache.tomcat.util.digester.Digester: boolean namespaceAware> = 0;
        $r8 = new java.util.HashMap;
        specialinvoke $r8.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap namespaces> = $r8;
        $r9 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r9.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack params> = $r9;
        r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser parser> = null;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String publicId> = null;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader> = null;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root> = null;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules rules> = null;
        $r10 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r10.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack stack> = $r10;
        r0.<org.apache.tomcat.util.digester.Digester: boolean useContextClassLoader> = 0;
        r0.<org.apache.tomcat.util.digester.Digester: boolean validating> = 0;
        r0.<org.apache.tomcat.util.digester.Digester: boolean rulesValidation> = 0;
        r0.<org.apache.tomcat.util.digester.Digester: java.util.Map fakeAttributes> = null;
        $r11 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.String)>("org.apache.tomcat.util.digester.Digester");
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log> = $r11;
        $r12 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.String)>("org.apache.tomcat.util.digester.Digester.sax");
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog> = $r12;
        $r13 = new java.util.HashMap;
        specialinvoke $r13.<java.util.HashMap: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap stacksByName> = $r13;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader> = r1;
        $r14 = <org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource propertySource>;
        if $r14 == null goto label0;

        $r15 = newarray (org.apache.tomcat.util.IntrospectionUtils$PropertySource)[2];
        $r16 = <org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource propertySource>;
        $r15[0] = $r16;
        $r17 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source>;
        $r18 = $r17[0];
        $r15[1] = $r18;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source> = $r15;

     label0:
        return;
    }

    public java.lang.String findNamespaceURI(java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, $r7;
        org.apache.tomcat.util.digester.ArrayStack r2;
        java.util.EmptyStackException r3, $r8;
        java.util.HashMap $r4;
        java.lang.Object $r5, $r6;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap namespaces>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.tomcat.util.digester.ArrayStack) $r5;
        if r2 != null goto label0;

        return null;

     label0:
        $r6 = virtualinvoke r2.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object peek()>();
        $r7 = (java.lang.String) $r6;

     label1:
        return $r7;

     label2:
        $r8 := @caughtexception;
        r3 = $r8;
        return null;

        catch java.util.EmptyStackException from label0 to label1 with label2;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.ClassLoader r1, $r2, $r3, $r6;
        boolean $z0;
        java.lang.Thread $r4;
        java.lang.Class $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.ClassLoader classLoader>;
        if $r2 == null goto label0;

        $r3 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.ClassLoader classLoader>;
        return $r3;

     label0:
        $z0 = r0.<org.apache.tomcat.util.digester.Digester: boolean useContextClassLoader>;
        if $z0 == 0 goto label1;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r1 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        if r1 == null goto label1;

        return r1;

     label1:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        return $r6;
    }

    public void setClassLoader(java.lang.ClassLoader)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.ClassLoader;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.ClassLoader classLoader> = r1;
        return;
    }

    public int getCount()
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.tomcat.util.digester.ArrayStack $r1;
        int $i0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack stack>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.digester.ArrayStack: int size()>();
        return $i0;
    }

    public java.lang.String getCurrentElementName()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(47);
        if i0 < 0 goto label0;

        $i1 = i0 + 1;
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label0:
        return r1;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.ErrorHandler $r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler>;
        return $r1;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.ErrorHandler r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.xml.sax.ErrorHandler;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler> = r1;
        return;
    }

    public javax.xml.parsers.SAXParserFactory getFactory() throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException, javax.xml.parsers.ParserConfigurationException
    {
        org.apache.tomcat.util.digester.Digester r0;
        javax.xml.parsers.SAXParserFactory $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory>;
        if $r2 != null goto label1;

        $r1 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();
        r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory> = $r1;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory>;
        $z0 = r0.<org.apache.tomcat.util.digester.Digester: boolean namespaceAware>;
        virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>($z0);
        $z1 = r0.<org.apache.tomcat.util.digester.Digester: boolean namespaceAware>;
        if $z1 == 0 goto label0;

        $r4 = r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory>;
        virtualinvoke $r4.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespace-prefixes", 1);

     label0:
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory>;
        $z2 = r0.<org.apache.tomcat.util.digester.Digester: boolean validating>;
        virtualinvoke $r5.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>($z2);
        $z3 = r0.<org.apache.tomcat.util.digester.Digester: boolean validating>;
        if $z3 == 0 goto label1;

        $r6 = r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory>;
        virtualinvoke $r6.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/validation", 1);
        $r7 = r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory>;
        virtualinvoke $r7.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema", 1);

     label1:
        $r8 = r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory factory>;
        return $r8;
    }

    public boolean getFeature(java.lang.String) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        javax.xml.parsers.SAXParserFactory $r2;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory getFactory()>();
        $z0 = virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: boolean getFeature(java.lang.String)>(r1);
        return $z0;
    }

    public void setFeature(java.lang.String, boolean) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        boolean z0;
        javax.xml.parsers.SAXParserFactory $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory getFactory()>();
        virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>(r1, z0);
        return;
    }

    public org.apache.juli.logging.Log getLogger()
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.juli.logging.Log $r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        return $r1;
    }

    public void setLogger(org.apache.juli.logging.Log)
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.juli.logging.Log r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.apache.juli.logging.Log;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log> = r1;
        return;
    }

    public org.apache.juli.logging.Log getSAXLogger()
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.juli.logging.Log $r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        return $r1;
    }

    public void setSAXLogger(org.apache.juli.logging.Log)
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.juli.logging.Log r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.apache.juli.logging.Log;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog> = r1;
        return;
    }

    public java.lang.String getMatch()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        return $r1;
    }

    public boolean getNamespaceAware()
    {
        org.apache.tomcat.util.digester.Digester r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $z0 = r0.<org.apache.tomcat.util.digester.Digester: boolean namespaceAware>;
        return $z0;
    }

    public void setNamespaceAware(boolean)
    {
        org.apache.tomcat.util.digester.Digester r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        z0 := @parameter0: boolean;
        r0.<org.apache.tomcat.util.digester.Digester: boolean namespaceAware> = z0;
        return;
    }

    public void setPublicId(java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String publicId> = r1;
        return;
    }

    public java.lang.String getPublicId()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String publicId>;
        return $r1;
    }

    public java.lang.String getRuleNamespaceURI()
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.tomcat.util.digester.Rules $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules getRules()>();
        $r2 = interfaceinvoke $r1.<org.apache.tomcat.util.digester.Rules: java.lang.String getNamespaceURI()>();
        return $r2;
    }

    public void setRuleNamespaceURI(java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        org.apache.tomcat.util.digester.Rules $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules getRules()>();
        interfaceinvoke $r2.<org.apache.tomcat.util.digester.Rules: void setNamespaceURI(java.lang.String)>(r1);
        return;
    }

    public javax.xml.parsers.SAXParser getParser()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.Exception r1, $r6;
        javax.xml.parsers.SAXParser $r2, $r3, $r5, $r8;
        javax.xml.parsers.SAXParserFactory $r4;
        org.apache.juli.logging.Log $r7;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser parser>;
        if $r2 == null goto label0;

        $r3 = r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser parser>;
        return $r3;

     label0:
        $r4 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParserFactory getFactory()>();
        $r5 = virtualinvoke $r4.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();
        r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser parser> = $r5;

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r1 = $r6;
        $r7 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Digester.getParser: ", r1);
        return null;

     label3:
        $r8 = r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser parser>;
        return $r8;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        javax.xml.parsers.SAXParser $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser getParser()>();
        $r3 = virtualinvoke $r2.<javax.xml.parsers.SAXParser: java.lang.Object getProperty(java.lang.String)>(r1);
        return $r3;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        java.lang.Object r2;
        javax.xml.parsers.SAXParser $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser getParser()>();
        virtualinvoke $r3.<javax.xml.parsers.SAXParser: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);
        return;
    }

    public org.apache.tomcat.util.digester.Rules getRules()
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.tomcat.util.digester.RulesBase $r1;
        org.apache.tomcat.util.digester.Rules $r2, $r3, $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules rules>;
        if $r2 != null goto label0;

        $r1 = new org.apache.tomcat.util.digester.RulesBase;
        specialinvoke $r1.<org.apache.tomcat.util.digester.RulesBase: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules rules> = $r1;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules rules>;
        interfaceinvoke $r3.<org.apache.tomcat.util.digester.Rules: void setDigester(org.apache.tomcat.util.digester.Digester)>(r0);

     label0:
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules rules>;
        return $r4;
    }

    public void setRules(org.apache.tomcat.util.digester.Rules)
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.tomcat.util.digester.Rules r1, $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.apache.tomcat.util.digester.Rules;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules rules> = r1;
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules rules>;
        interfaceinvoke $r2.<org.apache.tomcat.util.digester.Rules: void setDigester(org.apache.tomcat.util.digester.Digester)>(r0);
        return;
    }

    public boolean getUseContextClassLoader()
    {
        org.apache.tomcat.util.digester.Digester r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $z0 = r0.<org.apache.tomcat.util.digester.Digester: boolean useContextClassLoader>;
        return $z0;
    }

    public void setUseContextClassLoader(boolean)
    {
        org.apache.tomcat.util.digester.Digester r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        z0 := @parameter0: boolean;
        r0.<org.apache.tomcat.util.digester.Digester: boolean useContextClassLoader> = z0;
        return;
    }

    public boolean getValidating()
    {
        org.apache.tomcat.util.digester.Digester r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $z0 = r0.<org.apache.tomcat.util.digester.Digester: boolean validating>;
        return $z0;
    }

    public void setValidating(boolean)
    {
        org.apache.tomcat.util.digester.Digester r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        z0 := @parameter0: boolean;
        r0.<org.apache.tomcat.util.digester.Digester: boolean validating> = z0;
        return;
    }

    public boolean getRulesValidation()
    {
        org.apache.tomcat.util.digester.Digester r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $z0 = r0.<org.apache.tomcat.util.digester.Digester: boolean rulesValidation>;
        return $z0;
    }

    public void setRulesValidation(boolean)
    {
        org.apache.tomcat.util.digester.Digester r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        z0 := @parameter0: boolean;
        r0.<org.apache.tomcat.util.digester.Digester: boolean rulesValidation> = z0;
        return;
    }

    public java.util.Map getFakeAttributes()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.util.Map $r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: java.util.Map fakeAttributes>;
        return $r1;
    }

    public boolean isFakeAttribute(java.lang.Object, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.Object r1, $r7, $r9;
        java.lang.String r2;
        java.util.List r3;
        java.util.Map $r4, $r5, $r8;
        java.lang.Class $r6;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.String;
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: java.util.Map fakeAttributes>;
        if $r4 != null goto label0;

        return 0;

     label0:
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: java.util.Map fakeAttributes>;
        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);
        r3 = (java.util.List) $r7;
        if r3 != null goto label1;

        $r8 = r0.<org.apache.tomcat.util.digester.Digester: java.util.Map fakeAttributes>;
        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(class "java/lang/Object");
        r3 = (java.util.List) $r9;

     label1:
        if r3 != null goto label2;

        return 0;

     label2:
        $z0 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r2);
        return $z0;
    }

    public void setFakeAttributes(java.util.Map)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.util.Map r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.util.Map;
        r0.<org.apache.tomcat.util.digester.Digester: java.util.Map fakeAttributes> = r1;
        return;
    }

    public org.xml.sax.XMLReader getXMLReader() throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.XMLReader $r1, $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r12;
        javax.xml.parsers.SAXParser $r2;
        org.xml.sax.EntityResolver $r6, $r9;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader>;
        if $r1 != null goto label0;

        $r2 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: javax.xml.parsers.SAXParser getParser()>();
        $r3 = virtualinvoke $r2.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader> = $r3;

     label0:
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader>;
        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>(r0);
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader>;
        interfaceinvoke $r5.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r0);
        $r6 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.EntityResolver entityResolver>;
        if $r6 != null goto label1;

        $r7 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader>;
        interfaceinvoke $r7.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>(r0);
        goto label2;

     label1:
        $r8 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader>;
        $r9 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.EntityResolver entityResolver>;
        interfaceinvoke $r8.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>($r9);

     label2:
        $r10 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader>;
        interfaceinvoke $r10.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", r0);
        $r11 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader>;
        interfaceinvoke $r11.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>(r0);
        $r12 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader reader>;
        return $r12;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        char[] r1;
        int i0, i1;
        java.lang.StringBuilder $r2, $r6, $r7, $r9;
        org.apache.juli.logging.Log $r3, $r4;
        boolean $z0;
        java.lang.String $r5, $r8;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("characters(");
        $r5 = new java.lang.String;
        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);
        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r8);

     label0:
        $r9 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText>;
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i0, i1);
        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.util.Iterator r1;
        org.apache.tomcat.util.digester.Rule r2;
        java.lang.Exception r3, $r15;
        org.apache.juli.logging.Log $r4, $r5, $r10, $r16, $r20;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        org.apache.tomcat.util.digester.Rules $r12;
        java.util.List $r13;
        java.lang.Object $r14;
        org.xml.sax.SAXException $r17;
        java.lang.Error $r18, r19;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r4.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: int getCount()>();
        if $i0 <= 1 goto label0;

        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("endDocument():  ");
        $i1 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: int getCount()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elements left");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r9);
        goto label2;

     label0:
        $r10 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("endDocument()");
        goto label2;

     label1:
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object pop()>();

     label2:
        $i2 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: int getCount()>();
        if $i2 > 1 goto label1;

        $r12 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules getRules()>();
        $r13 = interfaceinvoke $r12.<org.apache.tomcat.util.digester.Rules: java.util.List rules()>();
        r1 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();
        goto label8;

     label3:
        $r14 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.apache.tomcat.util.digester.Rule) $r14;

     label4:
        virtualinvoke r2.<org.apache.tomcat.util.digester.Rule: void finish()>();

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;
        r3 = $r15;
        $r16 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r16.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Finish event threw exception", r3);
        $r17 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.SAXException createSAXException(java.lang.Exception)>(r3);
        throw $r17;

     label7:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r20.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Finish event threw error", r19);
        throw r19;

     label8:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label3;

        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void clear()>();
        return;

        catch java.lang.Exception from label4 to label5 with label6;
        catch java.lang.Error from label4 to label5 with label7;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3, r5, r7, $r18, $r21, $r24, $r30, $r40, $r50, $r53, $r56, $r59, $r68, $r76, $r77, $r78;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r22, $r23, $r26, $r27, $r28, $r29, $r31, $r32, $r35, $r38, $r39, $r49, $r51, $r52, $r55, $r57, $r58, $r62, $r66, $r67;
        java.util.List r6;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, i7, $i8, i9;
        org.apache.tomcat.util.digester.Rule r8, r64;
        org.apache.juli.logging.Log $r9, $r10, $r11, $r19, $r25, $r37, $r43, $r47, $r48, $r54, $r65, $r71, $r75;
        org.apache.tomcat.util.digester.ArrayStack $r33, $r60;
        java.lang.Object $r34, $r36, $r61, $r63;
        java.lang.Exception $r41, r42, $r69, r70;
        org.xml.sax.SAXException $r44, $r72;
        java.lang.Error $r45, r46, $r73, r74;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r9 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        z0 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if z0 == 0 goto label1;

        $r10 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z1 = interfaceinvoke $r10.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label0;

        $r11 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("endElement(");
        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r18);

     label0:
        $r19 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("  match=\'");
        $r21 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r19.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r24);
        $r25 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("  bodyText=\'");
        $r27 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText>;
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r30);

     label1:
        $r31 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText>;
        $r32 = specialinvoke r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder updateBodyText(java.lang.StringBuilder)>($r31);
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText> = $r32;
        r5 = r2;
        if r5 == null goto label2;

        $i1 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i1 >= 1 goto label3;

     label2:
        r5 = r3;

     label3:
        $r33 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack matches>;
        $r34 = virtualinvoke $r33.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object pop()>();
        r6 = (java.util.List) $r34;
        if r6 == null goto label11;

        $i2 = interfaceinvoke r6.<java.util.List: int size()>();
        if $i2 <= 0 goto label11;

        $r35 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText>;
        r7 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        i0 = 0;
        goto label10;

     label4:
        $r36 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i0);
        r8 = (org.apache.tomcat.util.digester.Rule) $r36;
        if z0 == 0 goto label5;

        $r37 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Fire body() for ");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r37.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r40);

     label5:
        virtualinvoke r8.<org.apache.tomcat.util.digester.Rule: void body(java.lang.String,java.lang.String,java.lang.String)>(r1, r5, r7);

     label6:
        goto label9;

     label7:
        $r41 := @caughtexception;
        r42 = $r41;
        $r43 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r43.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Body event threw exception", r42);
        $r44 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.SAXException createSAXException(java.lang.Exception)>(r42);
        throw $r44;

     label8:
        $r45 := @caughtexception;
        r46 = $r45;
        $r47 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r47.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Body event threw error", r46);
        throw r46;

     label9:
        i0 = i0 + 1;

     label10:
        $i3 = interfaceinvoke r6.<java.util.List: int size()>();
        if i0 < $i3 goto label4;

        goto label13;

     label11:
        if z0 == 0 goto label12;

        $r48 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r49 = new java.lang.StringBuilder;
        specialinvoke $r49.<java.lang.StringBuilder: void <init>(java.lang.String)>("  No rules found matching \'");
        $r50 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r48.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r53);

     label12:
        $z2 = r0.<org.apache.tomcat.util.digester.Digester: boolean rulesValidation>;
        if $z2 == 0 goto label13;

        $r54 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r55 = new java.lang.StringBuilder;
        specialinvoke $r55.<java.lang.StringBuilder: void <init>(java.lang.String)>("  No rules found matching \'");
        $r56 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r54.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r59);

     label13:
        $r60 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack bodyTexts>;
        $r61 = virtualinvoke $r60.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object pop()>();
        $r62 = (java.lang.StringBuilder) $r61;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText> = $r62;
        if r6 == null goto label22;

        i4 = 0;
        goto label21;

     label14:
        $i5 = interfaceinvoke r6.<java.util.List: int size()>();
        $i6 = $i5 - i4;
        i7 = $i6 - 1;

     label15:
        $r63 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i7);
        r64 = (org.apache.tomcat.util.digester.Rule) $r63;
        if z0 == 0 goto label16;

        $r65 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r66 = new java.lang.StringBuilder;
        specialinvoke $r66.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Fire end() for ");
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r64);
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r65.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r68);

     label16:
        virtualinvoke r64.<org.apache.tomcat.util.digester.Rule: void end(java.lang.String,java.lang.String)>(r1, r5);

     label17:
        goto label20;

     label18:
        $r69 := @caughtexception;
        r70 = $r69;
        $r71 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r71.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("End event threw exception", r70);
        $r72 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.SAXException createSAXException(java.lang.Exception)>(r70);
        throw $r72;

     label19:
        $r73 := @caughtexception;
        r74 = $r73;
        $r75 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r75.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("End event threw error", r74);
        throw r74;

     label20:
        i4 = i4 + 1;

     label21:
        $i8 = interfaceinvoke r6.<java.util.List: int size()>();
        if i4 < $i8 goto label14;

     label22:
        $r76 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        i9 = virtualinvoke $r76.<java.lang.String: int lastIndexOf(int)>(47);
        if i9 < 0 goto label23;

        $r77 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        $r78 = virtualinvoke $r77.<java.lang.String: java.lang.String substring(int,int)>(0, i9);
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match> = $r78;
        goto label24;

     label23:
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match> = "";

     label24:
        return;

        catch java.lang.Exception from label4 to label6 with label7;
        catch java.lang.Error from label4 to label6 with label8;
        catch java.lang.Exception from label15 to label17 with label18;
        catch java.lang.Error from label15 to label17 with label19;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r2, $r7, $r8;
        org.apache.tomcat.util.digester.ArrayStack r3;
        java.util.EmptyStackException r4, $r15;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0, $z1;
        java.util.HashMap $r10, $r13;
        java.lang.Object $r11;
        org.xml.sax.SAXException $r16;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("endPrefixMapping(");
        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r9);

     label0:
        $r10 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap namespaces>;
        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (org.apache.tomcat.util.digester.ArrayStack) $r11;
        if r3 != null goto label1;

        return;

     label1:
        virtualinvoke r3.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object pop()>();
        $z1 = virtualinvoke r3.<org.apache.tomcat.util.digester.ArrayStack: boolean empty()>();
        if $z1 == 0 goto label4;

        $r13 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap namespaces>;
        virtualinvoke $r13.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;
        r4 = $r15;
        $r16 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.SAXException createSAXException(java.lang.String)>("endPrefixMapping popped too many times");
        throw $r16;

     label4:
        return;

        catch java.util.EmptyStackException from label1 to label2 with label3;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        char[] r1;
        int i0, i1;
        java.lang.StringBuilder $r2, $r6, $r7;
        org.apache.juli.logging.Log $r3, $r4;
        boolean $z0;
        java.lang.String $r5, $r8;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("ignorableWhitespace(");
        $r5 = new java.lang.String;
        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);
        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r8);

     label0:
        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, $r10;
        java.lang.StringBuilder $r3, $r6, $r7, $r8, $r9;
        org.apache.juli.logging.Log $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r4.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("processingInstruction(\'");
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\',\'");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r10);

     label0:
        return;
    }

    public org.xml.sax.Locator getDocumentLocator()
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.Locator $r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Locator locator>;
        return $r1;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.Locator r1;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.juli.logging.Log $r3, $r4;
        boolean $z0;
        java.lang.String $r7;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.xml.sax.Locator;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("setDocumentLocator(");
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r7);

     label0:
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Locator locator> = r1;
        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.juli.logging.Log $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("skippedEntity(");
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r7);

     label0:
        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.juli.logging.Log $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r1.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        interfaceinvoke $r2.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("startDocument()");

     label0:
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void configure()>();
        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3, r6, $r19, $r26, $r27, $r30, $r33, $r36, $r38, $r45, $r55, $r58;
        org.xml.sax.Attributes r4, r20;
        boolean z0, $z1;
        java.lang.StringBuilder $r5, r7, $r13, $r14, $r15, $r16, $r17, $r18, $r22, $r24, $r25, $r32, $r34, $r35, $r43, $r44, $r54, $r56, $r57;
        java.util.List r8;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.tomcat.util.digester.Rule r9;
        org.apache.juli.logging.Log $r10, $r11, $r12, $r31, $r42, $r48, $r52, $r53;
        org.apache.tomcat.util.digester.ArrayStack $r21, $r39;
        org.apache.tomcat.util.digester.Rules $r37;
        java.lang.Object $r41;
        java.lang.Exception $r46, r47;
        org.xml.sax.SAXException $r49;
        java.lang.Error $r50, r51;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: org.xml.sax.Attributes;
        $r10 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        z0 = interfaceinvoke $r10.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        $r11 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z1 = interfaceinvoke $r11.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label0;

        $r12 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("startElement(");
        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r19);

     label0:
        r20 = specialinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Attributes updateAttributes(org.xml.sax.Attributes)>(r4);
        $r21 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack bodyTexts>;
        $r22 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText>;
        virtualinvoke $r21.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object push(java.lang.Object)>($r22);
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.StringBuilder bodyText> = $r24;
        r6 = r2;
        if r6 == null goto label1;

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();
        if $i1 >= 1 goto label2;

     label1:
        r6 = r3;

     label2:
        $r25 = new java.lang.StringBuilder;
        $r26 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>($r26);
        r7 = $r25;
        $r27 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        $i2 = virtualinvoke $r27.<java.lang.String: int length()>();
        if $i2 <= 0 goto label3;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label3:
        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r30 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match> = $r30;
        if z0 == 0 goto label4;

        $r31 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("  New match=\'");
        $r33 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r31.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r36);

     label4:
        $r37 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules getRules()>();
        $r38 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        r8 = interfaceinvoke $r37.<org.apache.tomcat.util.digester.Rules: java.util.List match(java.lang.String,java.lang.String)>(r1, $r38);
        $r39 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack matches>;
        virtualinvoke $r39.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object push(java.lang.Object)>(r8);
        if r8 == null goto label12;

        $i3 = interfaceinvoke r8.<java.util.List: int size()>();
        if $i3 <= 0 goto label12;

        i0 = 0;
        goto label11;

     label5:
        $r41 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i0);
        r9 = (org.apache.tomcat.util.digester.Rule) $r41;
        if z0 == 0 goto label6;

        $r42 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r43 = new java.lang.StringBuilder;
        specialinvoke $r43.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Fire begin() for ");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r42.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r45);

     label6:
        virtualinvoke r9.<org.apache.tomcat.util.digester.Rule: void begin(java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r6, r20);

     label7:
        goto label10;

     label8:
        $r46 := @caughtexception;
        r47 = $r46;
        $r48 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r48.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Begin event threw exception", r47);
        $r49 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.SAXException createSAXException(java.lang.Exception)>(r47);
        throw $r49;

     label9:
        $r50 := @caughtexception;
        r51 = $r50;
        $r52 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r52.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Begin event threw error", r51);
        throw r51;

     label10:
        i0 = i0 + 1;

     label11:
        $i4 = interfaceinvoke r8.<java.util.List: int size()>();
        if i0 < $i4 goto label5;

        goto label13;

     label12:
        if z0 == 0 goto label13;

        $r53 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r54 = new java.lang.StringBuilder;
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("  No rules found matching \'");
        $r55 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match>;
        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r53.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r58);

     label13:
        return;

        catch java.lang.Exception from label5 to label7 with label8;
        catch java.lang.Error from label5 to label7 with label9;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, $r11;
        java.lang.StringBuilder $r3, $r7, $r8, $r9, $r10;
        org.apache.tomcat.util.digester.ArrayStack r4, $r14;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0;
        java.util.HashMap $r12, $r15;
        java.lang.Object $r13;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("startPrefixMapping(");
        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r11);

     label0:
        $r12 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap namespaces>;
        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r4 = (org.apache.tomcat.util.digester.ArrayStack) $r13;
        if r4 != null goto label1;

        $r14 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r14.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r4 = $r14;
        $r15 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap namespaces>;
        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label1:
        virtualinvoke r4.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object push(java.lang.Object)>(r2);
        return;
    }

    public void notationDecl(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3, $r13;
        java.lang.StringBuilder $r4, $r7, $r8, $r9, $r10, $r11, $r12;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("notationDecl(");
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r13);

     label0:
        return;
    }

    public void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3, r4, $r16;
        java.lang.StringBuilder $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        org.apache.juli.logging.Log $r6, $r7;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        $r6 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r6.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r7 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("unparsedEntityDecl(");
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r16);

     label0:
        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.EntityResolver r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.xml.sax.EntityResolver;
        r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.EntityResolver entityResolver> = r1;
        return;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.EntityResolver $r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.EntityResolver entityResolver>;
        return $r1;
    }

    public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3, r4, r6, $r16, $r24, $r30, $r43, $r49;
        java.lang.StringBuilder $r5, $r10, $r11, $r12, $r13, $r14, $r15, $r21, $r22, $r23, $r27, $r28, $r29, $r38, $r39, $r40, $r41, $r42, $r46, $r47, $r48;
        java.net.URI r7, $r31, $r32, $r33;
        org.apache.juli.logging.Log $r8, $r9, $r19, $r20, $r25, $r26, $r36, $r37, $r44, $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.HashMap $r17;
        java.lang.Object $r18;
        java.net.URISyntaxException $r34, r35;
        org.xml.sax.InputSource $r50;
        java.lang.Exception $r51, r52;
        org.xml.sax.SAXException $r53;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        $r8 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $z0 = interfaceinvoke $r8.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r9 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("resolveEntity(\'");
        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r16);

     label0:
        r6 = null;
        if r2 == null goto label1;

        $r17 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap entityValidator>;
        $r18 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);
        r6 = (java.lang.String) $r18;

     label1:
        if r6 != null goto label8;

        if r4 != null goto label3;

        $r19 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r19.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label2;

        $r20 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>(" Cannot resolve entity: \'");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r20.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r24);

     label2:
        return null;

     label3:
        $r25 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r25.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label4;

        $r26 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(" Trying to resolve using system ID \'");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r26.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r30);

     label4:
        r6 = r4;
        if r3 == null goto label8;

     label5:
        $r31 = new java.net.URI;
        specialinvoke $r31.<java.net.URI: void <init>(java.lang.String)>(r4);
        r7 = $r31;
        $z3 = virtualinvoke r7.<java.net.URI: boolean isAbsolute()>();
        if $z3 != 0 goto label8;

        $r32 = new java.net.URI;
        specialinvoke $r32.<java.net.URI: void <init>(java.lang.String)>(r3);
        $r33 = virtualinvoke $r32.<java.net.URI: java.net.URI resolve(java.net.URI)>(r7);
        r6 = virtualinvoke $r33.<java.net.URI: java.lang.String toString()>();

     label6:
        goto label8;

     label7:
        $r34 := @caughtexception;
        r35 = $r34;
        $r36 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r36.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label8;

        $r37 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid URI \'");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' or \'");
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r37.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r43);

     label8:
        $r44 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r44.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label9;

        $r45 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>(" Resolving to alternate DTD \'");
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r45.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r49);

     label9:
        $r50 = new org.xml.sax.InputSource;
        specialinvoke $r50.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r6);

     label10:
        return $r50;

     label11:
        $r51 := @caughtexception;
        r52 = $r51;
        $r53 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.SAXException createSAXException(java.lang.Exception)>(r52);
        throw $r53;

        catch java.net.URISyntaxException from label5 to label6 with label7;
        catch java.lang.Exception from label9 to label10 with label11;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void setPublicId(java.lang.String)>(r2);
        return;
    }

    public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.SAXParseException r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r9;
        org.apache.juli.logging.Log $r3;
        int $i0, $i1;
        java.lang.String $r8, $r10;
        org.xml.sax.ErrorHandler $r11, $r12;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.xml.sax.SAXParseException;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Parse Error at line ");
        $i0 = virtualinvoke r1.<org.xml.sax.SAXParseException: int getLineNumber()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" column ");
        $i1 = virtualinvoke r1.<org.xml.sax.SAXParseException: int getColumnNumber()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r8 = virtualinvoke r1.<org.xml.sax.SAXParseException: java.lang.String getMessage()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r10, r1);
        $r11 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler>;
        if $r11 == null goto label0;

        $r12 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler>;
        interfaceinvoke $r12.<org.xml.sax.ErrorHandler: void error(org.xml.sax.SAXParseException)>(r1);

     label0:
        return;
    }

    public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.SAXParseException r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r9;
        org.apache.juli.logging.Log $r3;
        int $i0, $i1;
        java.lang.String $r8, $r10;
        org.xml.sax.ErrorHandler $r11, $r12;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.xml.sax.SAXParseException;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Parse Fatal Error at line ");
        $i0 = virtualinvoke r1.<org.xml.sax.SAXParseException: int getLineNumber()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" column ");
        $i1 = virtualinvoke r1.<org.xml.sax.SAXParseException: int getColumnNumber()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r8 = virtualinvoke r1.<org.xml.sax.SAXParseException: java.lang.String getMessage()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r10, r1);
        $r11 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler>;
        if $r11 == null goto label0;

        $r12 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler>;
        interfaceinvoke $r12.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r1);

     label0:
        return;
    }

    public void warning(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.SAXParseException r1;
        java.lang.StringBuilder $r2, $r5, $r6, $r7, $r8, $r10;
        org.xml.sax.ErrorHandler $r3, $r12;
        org.apache.juli.logging.Log $r4;
        int $i0, $i1;
        java.lang.String $r9, $r11;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.xml.sax.SAXParseException;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler>;
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Parse Warning Error at line ");
        $i0 = virtualinvoke r1.<org.xml.sax.SAXParseException: int getLineNumber()>();
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" column ");
        $i1 = virtualinvoke r1.<org.xml.sax.SAXParseException: int getColumnNumber()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r9 = virtualinvoke r1.<org.xml.sax.SAXParseException: java.lang.String getMessage()>();
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r11, r1);
        $r12 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.ErrorHandler errorHandler>;
        interfaceinvoke $r12.<org.xml.sax.ErrorHandler: void warning(org.xml.sax.SAXParseException)>(r1);

     label0:
        return;
    }

    public java.lang.Object parse(java.io.File) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.io.File r1;
        java.io.FileInputStream $r2;
        org.xml.sax.InputSource r3, $r4;
        java.lang.StringBuilder $r5, $r7;
        java.lang.String $r6, $r8;
        org.xml.sax.XMLReader $r9;
        java.lang.Object $r10;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.io.File;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void configure()>();
        $r4 = new org.xml.sax.InputSource;
        $r2 = new java.io.FileInputStream;
        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r1);
        specialinvoke $r4.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r2);
        r3 = $r4;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("file://");
        $r6 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r8);
        $r9 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader getXMLReader()>();
        interfaceinvoke $r9.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r3);
        $r10 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root>;
        return $r10;
    }

    public java.lang.Object parse(org.xml.sax.InputSource) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.InputSource r1;
        org.xml.sax.XMLReader $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.xml.sax.InputSource;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void configure()>();
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader getXMLReader()>();
        interfaceinvoke $r2.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r1);
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root>;
        return $r3;
    }

    public java.lang.Object parse(java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.io.InputStream r1;
        org.xml.sax.InputSource r2, $r3;
        org.xml.sax.XMLReader $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.io.InputStream;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void configure()>();
        $r3 = new org.xml.sax.InputSource;
        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r1);
        r2 = $r3;
        $r4 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader getXMLReader()>();
        interfaceinvoke $r4.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r2);
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root>;
        return $r5;
    }

    public java.lang.Object parse(java.io.Reader) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.io.Reader r1;
        org.xml.sax.InputSource r2, $r3;
        org.xml.sax.XMLReader $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.io.Reader;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void configure()>();
        $r3 = new org.xml.sax.InputSource;
        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r1);
        r2 = $r3;
        $r4 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader getXMLReader()>();
        interfaceinvoke $r4.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r2);
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root>;
        return $r5;
    }

    public java.lang.Object parse(java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        org.xml.sax.InputSource r2, $r3;
        org.xml.sax.XMLReader $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void configure()>();
        $r3 = new org.xml.sax.InputSource;
        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r1);
        r2 = $r3;
        $r4 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.XMLReader getXMLReader()>();
        interfaceinvoke $r4.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r2);
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root>;
        return $r5;
    }

    public void register(java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, $r10;
        java.lang.StringBuilder $r3, $r6, $r7, $r8, $r9;
        org.apache.juli.logging.Log $r4, $r5;
        boolean $z0;
        java.util.HashMap $r11;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r4.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("register(\'");
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r10);

     label0:
        $r11 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap entityValidator>;
        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return;
    }

    public void addRule(java.lang.String, org.apache.tomcat.util.digester.Rule)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        org.apache.tomcat.util.digester.Rule r2;
        org.apache.tomcat.util.digester.Rules $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.apache.tomcat.util.digester.Rule;
        virtualinvoke r2.<org.apache.tomcat.util.digester.Rule: void setDigester(org.apache.tomcat.util.digester.Digester)>(r0);
        $r3 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.Rules getRules()>();
        interfaceinvoke $r3.<org.apache.tomcat.util.digester.Rules: void add(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, r2);
        return;
    }

    public void addRuleSet(org.apache.tomcat.util.digester.RuleSet)
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.tomcat.util.digester.RuleSet r1;
        java.lang.String r2, r3, $r9;
        org.apache.juli.logging.Log $r4, $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.apache.tomcat.util.digester.RuleSet;
        r2 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: java.lang.String getRuleNamespaceURI()>();
        r3 = interfaceinvoke r1.<org.apache.tomcat.util.digester.RuleSet: java.lang.String getNamespaceURI()>();
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r4.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label1;

        if r3 != null goto label0;

        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("addRuleSet() with no namespace URI");
        goto label1;

     label0:
        $r6 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("addRuleSet() with namespace URI ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r9);

     label1:
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void setRuleNamespaceURI(java.lang.String)>(r3);
        interfaceinvoke r1.<org.apache.tomcat.util.digester.RuleSet: void addRuleInstances(org.apache.tomcat.util.digester.Digester)>(r0);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void setRuleNamespaceURI(java.lang.String)>(r2);
        return;
    }

    public void addCallMethod(java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        org.apache.tomcat.util.digester.CallMethodRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.apache.tomcat.util.digester.CallMethodRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.CallMethodRule: void <init>(java.lang.String)>(r2);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addCallMethod(java.lang.String, java.lang.String, int)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        int i0;
        org.apache.tomcat.util.digester.CallMethodRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        $r3 = new org.apache.tomcat.util.digester.CallMethodRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.CallMethodRule: void <init>(java.lang.String,int)>(r2, i0);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addCallMethod(java.lang.String, java.lang.String, int, java.lang.String[])
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        int i0;
        java.lang.String[] r3;
        org.apache.tomcat.util.digester.CallMethodRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        r3 := @parameter3: java.lang.String[];
        $r4 = new org.apache.tomcat.util.digester.CallMethodRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.CallMethodRule: void <init>(java.lang.String,int,java.lang.String[])>(r2, i0, r3);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addCallMethod(java.lang.String, java.lang.String, int, java.lang.Class[])
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        int i0;
        java.lang.Class[] r3;
        org.apache.tomcat.util.digester.CallMethodRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        r3 := @parameter3: java.lang.Class[];
        $r4 = new org.apache.tomcat.util.digester.CallMethodRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.CallMethodRule: void <init>(java.lang.String,int,java.lang.Class[])>(r2, i0, r3);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addCallParam(java.lang.String, int)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        int i0;
        org.apache.tomcat.util.digester.CallParamRule $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = new org.apache.tomcat.util.digester.CallParamRule;
        specialinvoke $r2.<org.apache.tomcat.util.digester.CallParamRule: void <init>(int)>(i0);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r2);
        return;
    }

    public void addCallParam(java.lang.String, int, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        int i0;
        org.apache.tomcat.util.digester.CallParamRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String;
        $r3 = new org.apache.tomcat.util.digester.CallParamRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.CallParamRule: void <init>(int,java.lang.String)>(i0, r2);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addCallParam(java.lang.String, int, boolean)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        org.apache.tomcat.util.digester.CallParamRule $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r2 = new org.apache.tomcat.util.digester.CallParamRule;
        specialinvoke $r2.<org.apache.tomcat.util.digester.CallParamRule: void <init>(int,boolean)>(i0, z0);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r2);
        return;
    }

    public void addCallParam(java.lang.String, int, int)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        int i0, i1;
        org.apache.tomcat.util.digester.CallParamRule $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = new org.apache.tomcat.util.digester.CallParamRule;
        specialinvoke $r2.<org.apache.tomcat.util.digester.CallParamRule: void <init>(int,int)>(i0, i1);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r2);
        return;
    }

    public void addCallParamPath(java.lang.String, int)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        int i0;
        org.apache.tomcat.util.digester.PathCallParamRule $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = new org.apache.tomcat.util.digester.PathCallParamRule;
        specialinvoke $r2.<org.apache.tomcat.util.digester.PathCallParamRule: void <init>(int)>(i0);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r2);
        return;
    }

    public void addObjectParam(java.lang.String, int, java.lang.Object)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        int i0;
        java.lang.Object r2;
        org.apache.tomcat.util.digester.ObjectParamRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.Object;
        $r3 = new org.apache.tomcat.util.digester.ObjectParamRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.ObjectParamRule: void <init>(int,java.lang.Object)>(i0, r2);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addFactoryCreate(java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addFactoryCreate(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);
        return;
    }

    public void addFactoryCreate(java.lang.String, java.lang.Class)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        java.lang.Class r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Class;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addFactoryCreate(java.lang.String,java.lang.Class,boolean)>(r1, r2, 0);
        return;
    }

    public void addFactoryCreate(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addFactoryCreate(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 0);
        return;
    }

    public void addFactoryCreate(java.lang.String, java.lang.Class, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r3;
        java.lang.Class r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Class;
        r3 := @parameter2: java.lang.String;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addFactoryCreate(java.lang.String,java.lang.Class,java.lang.String,boolean)>(r1, r2, r3, 0);
        return;
    }

    public void addFactoryCreate(java.lang.String, org.apache.tomcat.util.digester.ObjectCreationFactory)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        org.apache.tomcat.util.digester.ObjectCreationFactory r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.apache.tomcat.util.digester.ObjectCreationFactory;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addFactoryCreate(java.lang.String,org.apache.tomcat.util.digester.ObjectCreationFactory,boolean)>(r1, r2, 0);
        return;
    }

    public void addFactoryCreate(java.lang.String, java.lang.String, boolean)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        boolean z0;
        org.apache.tomcat.util.digester.FactoryCreateRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $r3 = new org.apache.tomcat.util.digester.FactoryCreateRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.FactoryCreateRule: void <init>(java.lang.String,boolean)>(r2, z0);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addFactoryCreate(java.lang.String, java.lang.Class, boolean)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        java.lang.Class r2;
        boolean z0;
        org.apache.tomcat.util.digester.FactoryCreateRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Class;
        z0 := @parameter2: boolean;
        $r3 = new org.apache.tomcat.util.digester.FactoryCreateRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.FactoryCreateRule: void <init>(java.lang.Class,boolean)>(r2, z0);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addFactoryCreate(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3;
        boolean z0;
        org.apache.tomcat.util.digester.FactoryCreateRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        $r4 = new org.apache.tomcat.util.digester.FactoryCreateRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.FactoryCreateRule: void <init>(java.lang.String,java.lang.String,boolean)>(r2, r3, z0);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addFactoryCreate(java.lang.String, java.lang.Class, java.lang.String, boolean)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r3;
        java.lang.Class r2;
        boolean z0;
        org.apache.tomcat.util.digester.FactoryCreateRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Class;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        $r4 = new org.apache.tomcat.util.digester.FactoryCreateRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.FactoryCreateRule: void <init>(java.lang.Class,java.lang.String,boolean)>(r2, r3, z0);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addFactoryCreate(java.lang.String, org.apache.tomcat.util.digester.ObjectCreationFactory, boolean)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        org.apache.tomcat.util.digester.ObjectCreationFactory r2;
        boolean z0;
        org.apache.tomcat.util.digester.FactoryCreateRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.apache.tomcat.util.digester.ObjectCreationFactory;
        z0 := @parameter2: boolean;
        interfaceinvoke r2.<org.apache.tomcat.util.digester.ObjectCreationFactory: void setDigester(org.apache.tomcat.util.digester.Digester)>(r0);
        $r3 = new org.apache.tomcat.util.digester.FactoryCreateRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.FactoryCreateRule: void <init>(org.apache.tomcat.util.digester.ObjectCreationFactory,boolean)>(r2, z0);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addObjectCreate(java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        org.apache.tomcat.util.digester.ObjectCreateRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.apache.tomcat.util.digester.ObjectCreateRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.ObjectCreateRule: void <init>(java.lang.String)>(r2);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addObjectCreate(java.lang.String, java.lang.Class)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        java.lang.Class r2;
        org.apache.tomcat.util.digester.ObjectCreateRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Class;
        $r3 = new org.apache.tomcat.util.digester.ObjectCreateRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.ObjectCreateRule: void <init>(java.lang.Class)>(r2);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addObjectCreate(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3;
        org.apache.tomcat.util.digester.ObjectCreateRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = new org.apache.tomcat.util.digester.ObjectCreateRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.ObjectCreateRule: void <init>(java.lang.String,java.lang.String)>(r2, r3);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addObjectCreate(java.lang.String, java.lang.String, java.lang.Class)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        java.lang.Class r3;
        org.apache.tomcat.util.digester.ObjectCreateRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Class;
        $r4 = new org.apache.tomcat.util.digester.ObjectCreateRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.ObjectCreateRule: void <init>(java.lang.String,java.lang.Class)>(r2, r3);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addSetNext(java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        org.apache.tomcat.util.digester.SetNextRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.apache.tomcat.util.digester.SetNextRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.SetNextRule: void <init>(java.lang.String)>(r2);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addSetNext(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3;
        org.apache.tomcat.util.digester.SetNextRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = new org.apache.tomcat.util.digester.SetNextRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.SetNextRule: void <init>(java.lang.String,java.lang.String)>(r2, r3);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addSetRoot(java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        org.apache.tomcat.util.digester.SetRootRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.apache.tomcat.util.digester.SetRootRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.SetRootRule: void <init>(java.lang.String)>(r2);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addSetRoot(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3;
        org.apache.tomcat.util.digester.SetRootRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = new org.apache.tomcat.util.digester.SetRootRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.SetRootRule: void <init>(java.lang.String,java.lang.String)>(r2, r3);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addSetProperties(java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        org.apache.tomcat.util.digester.SetPropertiesRule $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.tomcat.util.digester.SetPropertiesRule;
        specialinvoke $r2.<org.apache.tomcat.util.digester.SetPropertiesRule: void <init>()>();
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r2);
        return;
    }

    public void addSetProperties(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3;
        org.apache.tomcat.util.digester.SetPropertiesRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = new org.apache.tomcat.util.digester.SetPropertiesRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.SetPropertiesRule: void <init>(java.lang.String,java.lang.String)>(r2, r3);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addSetProperties(java.lang.String, java.lang.String[], java.lang.String[])
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        java.lang.String[] r2, r3;
        org.apache.tomcat.util.digester.SetPropertiesRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String[];
        r3 := @parameter2: java.lang.String[];
        $r4 = new org.apache.tomcat.util.digester.SetPropertiesRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.SetPropertiesRule: void <init>(java.lang.String[],java.lang.String[])>(r2, r3);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addSetProperty(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3;
        org.apache.tomcat.util.digester.SetPropertyRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = new org.apache.tomcat.util.digester.SetPropertyRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.SetPropertyRule: void <init>(java.lang.String,java.lang.String)>(r2, r3);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void addSetTop(java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2;
        org.apache.tomcat.util.digester.SetTopRule $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.apache.tomcat.util.digester.SetTopRule;
        specialinvoke $r3.<org.apache.tomcat.util.digester.SetTopRule: void <init>(java.lang.String)>(r2);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r3);
        return;
    }

    public void addSetTop(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r2, r3;
        org.apache.tomcat.util.digester.SetTopRule $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = new org.apache.tomcat.util.digester.SetTopRule;
        specialinvoke $r4.<org.apache.tomcat.util.digester.SetTopRule: void <init>(java.lang.String,java.lang.String)>(r2, r3);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)>(r1, $r4);
        return;
    }

    public void clear()
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.apache.tomcat.util.digester.ArrayStack $r1, $r2, $r3;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String match> = "";
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack bodyTexts>;
        virtualinvoke $r1.<org.apache.tomcat.util.digester.ArrayStack: void clear()>();
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack params>;
        virtualinvoke $r2.<org.apache.tomcat.util.digester.ArrayStack: void clear()>();
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.String publicId> = null;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack stack>;
        virtualinvoke $r3.<org.apache.tomcat.util.digester.ArrayStack: void clear()>();
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log> = null;
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog> = null;
        r0.<org.apache.tomcat.util.digester.Digester: boolean configured> = 0;
        return;
    }

    public void reset()
    {
        org.apache.tomcat.util.digester.Digester r0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root> = null;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void setErrorHandler(org.xml.sax.ErrorHandler)>(null);
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void clear()>();
        return;
    }

    public java.lang.Object peek()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.util.EmptyStackException r1, $r4;
        org.apache.tomcat.util.digester.ArrayStack $r2;
        java.lang.Object $r3;
        org.apache.juli.logging.Log $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;

     label0:
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack stack>;
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object peek()>();

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void warn(java.lang.Object)>("Empty stack (returning null)");
        return null;

        catch java.util.EmptyStackException from label0 to label1 with label2;
    }

    public java.lang.Object peek(int)
    {
        org.apache.tomcat.util.digester.Digester r0;
        int i0;
        java.util.EmptyStackException r1, $r4;
        org.apache.tomcat.util.digester.ArrayStack $r2;
        java.lang.Object $r3;
        org.apache.juli.logging.Log $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        i0 := @parameter0: int;

     label0:
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack stack>;
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object peek(int)>(i0);

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void warn(java.lang.Object)>("Empty stack (returning null)");
        return null;

        catch java.util.EmptyStackException from label0 to label1 with label2;
    }

    public java.lang.Object pop()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.util.EmptyStackException r1, $r4;
        org.apache.tomcat.util.digester.ArrayStack $r2;
        java.lang.Object $r3;
        org.apache.juli.logging.Log $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;

     label0:
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack stack>;
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object pop()>();

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void warn(java.lang.Object)>("Empty stack (returning null)");
        return null;

        catch java.util.EmptyStackException from label0 to label1 with label2;
    }

    public void push(java.lang.Object)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.Object r1;
        org.apache.tomcat.util.digester.ArrayStack $r2, $r3;
        int $i0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack stack>;
        $i0 = virtualinvoke $r2.<org.apache.tomcat.util.digester.ArrayStack: int size()>();
        if $i0 != 0 goto label0;

        r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root> = r1;

     label0:
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack stack>;
        virtualinvoke $r3.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object push(java.lang.Object)>(r1);
        return;
    }

    public void push(java.lang.String, java.lang.Object)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        java.lang.Object r2, $r5;
        org.apache.tomcat.util.digester.ArrayStack r3, $r6;
        java.util.HashMap $r4, $r7;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap stacksByName>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (org.apache.tomcat.util.digester.ArrayStack) $r5;
        if r3 != null goto label0;

        $r6 = new org.apache.tomcat.util.digester.ArrayStack;
        specialinvoke $r6.<org.apache.tomcat.util.digester.ArrayStack: void <init>()>();
        r3 = $r6;
        $r7 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap stacksByName>;
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label0:
        virtualinvoke r3.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object push(java.lang.Object)>(r2);
        return;
    }

    public java.lang.Object pop(java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, $r10;
        null_type n0;
        org.apache.tomcat.util.digester.ArrayStack r2;
        java.util.HashMap $r3;
        java.lang.Object $r4, r12;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.util.EmptyStackException $r11;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        n0 = null;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap stacksByName>;
        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.tomcat.util.digester.ArrayStack) $r4;
        if r2 != null goto label1;

        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Stack \'");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is empty");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r10);

     label0:
        $r11 = new java.util.EmptyStackException;
        specialinvoke $r11.<java.util.EmptyStackException: void <init>()>();
        throw $r11;

     label1:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object pop()>();
        return r12;
    }

    public java.lang.Object peek(java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, $r10;
        null_type n0;
        org.apache.tomcat.util.digester.ArrayStack r2;
        java.util.HashMap $r3;
        java.lang.Object $r4, r12;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.util.EmptyStackException $r11;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        n0 = null;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap stacksByName>;
        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.tomcat.util.digester.ArrayStack) $r4;
        if r2 != null goto label1;

        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Stack \'");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is empty");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r10);

     label0:
        $r11 = new java.util.EmptyStackException;
        specialinvoke $r11.<java.util.EmptyStackException: void <init>()>();
        throw $r11;

     label1:
        r12 = virtualinvoke r2.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object peek()>();
        return r12;
    }

    public boolean isEmpty(java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        boolean z0;
        org.apache.tomcat.util.digester.ArrayStack r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        z0 = 1;
        $r3 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap stacksByName>;
        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.tomcat.util.digester.ArrayStack) $r4;
        if r2 == null goto label0;

        z0 = virtualinvoke r2.<org.apache.tomcat.util.digester.ArrayStack: boolean isEmpty()>();

     label0:
        return z0;
    }

    public java.lang.Object getRoot()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: java.lang.Object root>;
        return $r1;
    }

    protected void configure()
    {
        org.apache.tomcat.util.digester.Digester r0;
        boolean $z0;
        org.apache.juli.logging.Log $r1, $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $z0 = r0.<org.apache.tomcat.util.digester.Digester: boolean configured>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.String)>("org.apache.tomcat.util.digester.Digester");
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log> = $r1;
        $r2 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.String)>("org.apache.tomcat.util.digester.Digester.sax");
        r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log saxLog> = $r2;
        virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: void initialize()>();
        r0.<org.apache.tomcat.util.digester.Digester: boolean configured> = 1;
        return;
    }

    protected void initialize()
    {
        org.apache.tomcat.util.digester.Digester r0;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        return;
    }

    java.util.Map getRegistrations()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        $r1 = r0.<org.apache.tomcat.util.digester.Digester: java.util.HashMap entityValidator>;
        return $r1;
    }

    public java.lang.Object peekParams()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.util.EmptyStackException r1, $r4;
        org.apache.tomcat.util.digester.ArrayStack $r2;
        java.lang.Object $r3;
        org.apache.juli.logging.Log $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;

     label0:
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack params>;
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object peek()>();

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void warn(java.lang.Object)>("Empty stack (returning null)");
        return null;

        catch java.util.EmptyStackException from label0 to label1 with label2;
    }

    public java.lang.Object peekParams(int)
    {
        org.apache.tomcat.util.digester.Digester r0;
        int i0;
        java.util.EmptyStackException r1, $r4;
        org.apache.tomcat.util.digester.ArrayStack $r2;
        java.lang.Object $r3;
        org.apache.juli.logging.Log $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        i0 := @parameter0: int;

     label0:
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack params>;
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object peek(int)>(i0);

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void warn(java.lang.Object)>("Empty stack (returning null)");
        return null;

        catch java.util.EmptyStackException from label0 to label1 with label2;
    }

    public java.lang.Object popParams()
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.util.EmptyStackException r1, $r6;
        org.apache.juli.logging.Log $r2, $r3, $r7;
        boolean $z0;
        org.apache.tomcat.util.digester.ArrayStack $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;

     label0:
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r3.<org.apache.juli.logging.Log: void trace(java.lang.Object)>("Popping params");

     label1:
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack params>;
        $r5 = virtualinvoke $r4.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object pop()>();

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r1 = $r6;
        $r7 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void warn(java.lang.Object)>("Empty stack (returning null)");
        return null;

        catch java.util.EmptyStackException from label0 to label2 with label3;
    }

    public void pushParams(java.lang.Object)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.Object r1;
        org.apache.juli.logging.Log $r2, $r3;
        boolean $z0;
        org.apache.tomcat.util.digester.ArrayStack $r4;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label0;

        $r3 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r3.<org.apache.juli.logging.Log: void trace(java.lang.Object)>("Pushing params");

     label0:
        $r4 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.digester.ArrayStack params>;
        virtualinvoke $r4.<org.apache.tomcat.util.digester.ArrayStack: java.lang.Object push(java.lang.Object)>(r1);
        return;
    }

    public org.xml.sax.SAXException createSAXException(java.lang.String, java.lang.Exception)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1, r15;
        java.lang.Exception r2;
        java.lang.Throwable r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.ThreadDeath $r4;
        java.lang.VirtualMachineError $r5;
        org.xml.sax.Locator $r6, $r8, $r11, $r17, $r19;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r13, $r14;
        int $i0, $i1;
        org.xml.sax.SAXParseException $r16, $r18;
        org.apache.juli.logging.Log $r20;
        org.xml.sax.SAXException $r21, $r22;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Exception;
        if r2 == null goto label2;

        $z0 = r2 instanceof java.lang.reflect.InvocationTargetException;
        if $z0 == 0 goto label2;

        r3 = virtualinvoke r2.<java.lang.Exception: java.lang.Throwable getCause()>();
        $z1 = r3 instanceof java.lang.ThreadDeath;
        if $z1 == 0 goto label0;

        $r4 = (java.lang.ThreadDeath) r3;
        throw $r4;

     label0:
        $z2 = r3 instanceof java.lang.VirtualMachineError;
        if $z2 == 0 goto label1;

        $r5 = (java.lang.VirtualMachineError) r3;
        throw $r5;

     label1:
        $z3 = r3 instanceof java.lang.Exception;
        if $z3 == 0 goto label2;

        r2 = (java.lang.Exception) r3;

     label2:
        $r6 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Locator locator>;
        if $r6 == null goto label4;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error at (");
        $r8 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Locator locator>;
        $i0 = interfaceinvoke $r8.<org.xml.sax.Locator: int getLineNumber()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r11 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Locator locator>;
        $i1 = interfaceinvoke $r11.<org.xml.sax.Locator: int getColumnNumber()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") : ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        if r2 == null goto label3;

        $r16 = new org.xml.sax.SAXParseException;
        $r17 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Locator locator>;
        specialinvoke $r16.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>(r15, $r17, r2);
        return $r16;

     label3:
        $r18 = new org.xml.sax.SAXParseException;
        $r19 = r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.Locator locator>;
        specialinvoke $r18.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>(r15, $r19);
        return $r18;

     label4:
        $r20 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        interfaceinvoke $r20.<org.apache.juli.logging.Log: void error(java.lang.Object)>("No Locator!");
        if r2 == null goto label5;

        $r21 = new org.xml.sax.SAXException;
        specialinvoke $r21.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>(r1, r2);
        return $r21;

     label5:
        $r22 = new org.xml.sax.SAXException;
        specialinvoke $r22.<org.xml.sax.SAXException: void <init>(java.lang.String)>(r1);
        return $r22;
    }

    public org.xml.sax.SAXException createSAXException(java.lang.Exception)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.Exception r1;
        java.lang.Throwable r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.ThreadDeath $r3;
        java.lang.VirtualMachineError $r4;
        java.lang.String $r5;
        org.xml.sax.SAXException $r6;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.Exception;
        $z0 = r1 instanceof java.lang.reflect.InvocationTargetException;
        if $z0 == 0 goto label2;

        r2 = virtualinvoke r1.<java.lang.Exception: java.lang.Throwable getCause()>();
        $z1 = r2 instanceof java.lang.ThreadDeath;
        if $z1 == 0 goto label0;

        $r3 = (java.lang.ThreadDeath) r2;
        throw $r3;

     label0:
        $z2 = r2 instanceof java.lang.VirtualMachineError;
        if $z2 == 0 goto label1;

        $r4 = (java.lang.VirtualMachineError) r2;
        throw $r4;

     label1:
        $z3 = r2 instanceof java.lang.Exception;
        if $z3 == 0 goto label2;

        r1 = (java.lang.Exception) r2;

     label2:
        $r5 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();
        $r6 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.SAXException createSAXException(java.lang.String,java.lang.Exception)>($r5, r1);
        return $r6;
    }

    public org.xml.sax.SAXException createSAXException(java.lang.String)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.String r1;
        org.xml.sax.SAXException $r2;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.digester.Digester: org.xml.sax.SAXException createSAXException(java.lang.String,java.lang.Exception)>(r1, null);
        return $r2;
    }

    private org.xml.sax.Attributes updateAttributes(org.xml.sax.Attributes)
    {
        org.apache.tomcat.util.digester.Digester r0;
        org.xml.sax.Attributes r1;
        org.xml.sax.helpers.AttributesImpl r2, $r5;
        int i0, i1, $i2;
        java.lang.String r3, r4, $r11, $r16;
        org.apache.tomcat.util.IntrospectionUtils$PropertySource[] $r6;
        java.lang.Exception $r7, r8;
        org.apache.juli.logging.Log $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: org.xml.sax.Attributes;
        $i2 = interfaceinvoke r1.<org.xml.sax.Attributes: int getLength()>();
        if $i2 != 0 goto label0;

        return r1;

     label0:
        $r5 = new org.xml.sax.helpers.AttributesImpl;
        specialinvoke $r5.<org.xml.sax.helpers.AttributesImpl: void <init>(org.xml.sax.Attributes)>(r1);
        r2 = $r5;
        i0 = virtualinvoke r2.<org.xml.sax.helpers.AttributesImpl: int getLength()>();
        i1 = 0;
        goto label6;

     label1:
        r3 = virtualinvoke r2.<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(int)>(i1);

     label2:
        $r6 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source>;
        r4 = staticinvoke <org.apache.tomcat.util.IntrospectionUtils: java.lang.String replaceProperties(java.lang.String,java.util.Hashtable,org.apache.tomcat.util.IntrospectionUtils$PropertySource[])>(r3, null, $r6);
        if r3 == r4 goto label5;

        virtualinvoke r2.<org.xml.sax.helpers.AttributesImpl: void setValue(int,java.lang.String)>(i1, r4);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.juli.logging.Log log>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Attribute [");
        $r11 = virtualinvoke r2.<org.xml.sax.helpers.AttributesImpl: java.lang.String getLocalName(int)>(i1);
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] failed to update and remains [");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r16, r8);

     label5:
        i1 = i1 + 1;

     label6:
        if i1 < i0 goto label1;

        return r2;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private java.lang.StringBuilder updateBodyText(java.lang.StringBuilder)
    {
        org.apache.tomcat.util.digester.Digester r0;
        java.lang.StringBuilder r1, $r7;
        java.lang.String r2, r3;
        java.lang.Exception r4, $r6;
        org.apache.tomcat.util.IntrospectionUtils$PropertySource[] $r5;

        r0 := @this: org.apache.tomcat.util.digester.Digester;
        r1 := @parameter0: java.lang.StringBuilder;
        r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $r5 = r0.<org.apache.tomcat.util.digester.Digester: org.apache.tomcat.util.IntrospectionUtils$PropertySource[] source>;
        r3 = staticinvoke <org.apache.tomcat.util.IntrospectionUtils: java.lang.String replaceProperties(java.lang.String,java.util.Hashtable,org.apache.tomcat.util.IntrospectionUtils$PropertySource[])>(r2, null, $r5);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r4 = $r6;
        return r1;

     label3:
        if r3 != r2 goto label4;

        return r1;

     label4:
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);
        return $r7;

        catch java.lang.Exception from label0 to label1 with label2;
    }
}
