public class org.apache.tomcat.util.modeler.BaseAttributeFilter extends java.lang.Object implements javax.management.NotificationFilter
{
    private static final long serialVersionUID;
    private java.util.HashSet names;

    public void <init>(java.lang.String)
    {
        org.apache.tomcat.util.modeler.BaseAttributeFilter r0;
        java.lang.String r1;
        java.util.HashSet $r2;

        r0 := @this: org.apache.tomcat.util.modeler.BaseAttributeFilter;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.HashSet;
        specialinvoke $r2.<java.util.HashSet: void <init>()>();
        r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names> = $r2;
        if r1 == null goto label0;

        virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: void addAttribute(java.lang.String)>(r1);

     label0:
        return;
    }

    public void addAttribute(java.lang.String)
    {
        org.apache.tomcat.util.modeler.BaseAttributeFilter r0;
        java.lang.String r1;
        java.util.HashSet r2, $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.tomcat.util.modeler.BaseAttributeFilter;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        r2 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>(r1);
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r5 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void clear()
    {
        org.apache.tomcat.util.modeler.BaseAttributeFilter r0;
        java.util.HashSet r1, $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.tomcat.util.modeler.BaseAttributeFilter;
        $r2 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        r1 = $r2;
        entermonitor $r2;

     label0:
        $r3 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        virtualinvoke $r3.<java.util.HashSet: void clear()>();
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r4 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.String[] getNames()
    {
        org.apache.tomcat.util.modeler.BaseAttributeFilter r0;
        java.util.HashSet r1, $r2, $r3, $r4;
        int $i0;
        java.lang.String[] $r5, $r7;
        java.lang.Object[] $r6;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.tomcat.util.modeler.BaseAttributeFilter;
        $r2 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        r1 = $r2;
        entermonitor $r2;

     label0:
        $r3 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        $r4 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        $i0 = virtualinvoke $r4.<java.util.HashSet: int size()>();
        $r5 = newarray (java.lang.String)[$i0];
        $r6 = virtualinvoke $r3.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>($r5);
        $r7 = (java.lang.String[]) $r6;
        exitmonitor r1;

     label1:
        return $r7;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r8;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean isNotificationEnabled(javax.management.Notification)
    {
        org.apache.tomcat.util.modeler.BaseAttributeFilter r0;
        javax.management.Notification r1;
        javax.management.AttributeChangeNotification r2;
        java.util.HashSet r3, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        java.lang.String $r4, $r5, $r9;
        int $i0;
        java.lang.Throwable $r10;

        r0 := @this: org.apache.tomcat.util.modeler.BaseAttributeFilter;
        r1 := @parameter0: javax.management.Notification;
        if r1 != null goto label0;

        return 0;

     label0:
        $z0 = r1 instanceof javax.management.AttributeChangeNotification;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (javax.management.AttributeChangeNotification) r1;
        $r4 = "jmx.attribute.change";
        $r5 = virtualinvoke r2.<javax.management.AttributeChangeNotification: java.lang.String getType()>();
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r6 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        r3 = $r6;
        entermonitor $r6;

     label3:
        $r7 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        $i0 = virtualinvoke $r7.<java.util.HashSet: int size()>();
        if $i0 >= 1 goto label5;

        exitmonitor r3;

     label4:
        return 1;

     label5:
        $r8 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        $r9 = virtualinvoke r2.<javax.management.AttributeChangeNotification: java.lang.String getAttributeName()>();
        $z2 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);
        exitmonitor r3;

     label6:
        return $z2;

     label7:
        $r10 := @caughtexception;

     label8:
        exitmonitor r3;

     label9:
        throw $r10;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void removeAttribute(java.lang.String)
    {
        org.apache.tomcat.util.modeler.BaseAttributeFilter r0;
        java.lang.String r1;
        java.util.HashSet r2, $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.tomcat.util.modeler.BaseAttributeFilter;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        r2 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.tomcat.util.modeler.BaseAttributeFilter: java.util.HashSet names>;
        virtualinvoke $r4.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r5 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
}
