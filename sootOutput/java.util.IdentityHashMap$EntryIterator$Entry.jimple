class java.util.IdentityHashMap$EntryIterator$Entry extends java.lang.Object implements java.util.Map$Entry
{
    private int index;
    final java.util.IdentityHashMap$EntryIterator this$1;

    private void <init>(java.util.IdentityHashMap$EntryIterator, int)
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        java.util.IdentityHashMap$EntryIterator r1;
        int i0;

        r0 := @this: java.util.IdentityHashMap$EntryIterator$Entry;
        r1 := @parameter0: java.util.IdentityHashMap$EntryIterator;
        i0 := @parameter1: int;
        r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index> = i0;
        return;
    }

    public java.lang.Object getKey()
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        java.util.IdentityHashMap$EntryIterator $r1;
        java.lang.Object[] $r2;
        int $i0;
        java.lang.Object $r3, $r4;

        r0 := @this: java.util.IdentityHashMap$EntryIterator$Entry;
        specialinvoke r0.<java.util.IdentityHashMap$EntryIterator$Entry: void checkIndexForEntryUse()>();
        $r1 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r2 = $r1.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i0 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $r3 = $r2[$i0];
        $r4 = staticinvoke <java.util.IdentityHashMap: java.lang.Object access$600(java.lang.Object)>($r3);
        return $r4;
    }

    public java.lang.Object getValue()
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        java.util.IdentityHashMap$EntryIterator $r1;
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: java.util.IdentityHashMap$EntryIterator$Entry;
        specialinvoke r0.<java.util.IdentityHashMap$EntryIterator$Entry: void checkIndexForEntryUse()>();
        $r1 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r2 = $r1.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i0 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $i1 = $i0 + 1;
        $r3 = $r2[$i1];
        return $r3;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        java.lang.Object r1, r2, $r16;
        java.util.IdentityHashMap$EntryIterator $r3, $r5, $r7, $r9, $r12, $r14;
        java.lang.Object[] $r4, $r6, $r8, $r11, $r15;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.IdentityHashMap $r10, $r13;

        r0 := @this: java.util.IdentityHashMap$EntryIterator$Entry;
        r1 := @parameter0: java.lang.Object;
        specialinvoke r0.<java.util.IdentityHashMap$EntryIterator$Entry: void checkIndexForEntryUse()>();
        $r3 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r4 = $r3.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i0 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $i1 = $i0 + 1;
        r2 = $r4[$i1];
        $r5 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r6 = $r5.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i2 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $i3 = $i2 + 1;
        $r6[$i3] = r1;
        $r7 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r8 = $r7.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $r9 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r10 = $r9.<java.util.IdentityHashMap$EntryIterator: java.util.IdentityHashMap this$0>;
        $r11 = staticinvoke <java.util.IdentityHashMap: java.lang.Object[] access$100(java.util.IdentityHashMap)>($r10);
        if $r8 == $r11 goto label0;

        $r12 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r13 = $r12.<java.util.IdentityHashMap$EntryIterator: java.util.IdentityHashMap this$0>;
        $r14 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r15 = $r14.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i4 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $r16 = $r15[$i4];
        virtualinvoke $r13.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r1);

     label0:
        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        java.lang.Object r1, $r3, $r6, $r7, $r8, $r11;
        java.util.Map$Entry r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        java.util.IdentityHashMap$EntryIterator $r4, $r9;
        java.lang.Object[] $r5, $r10;

        r0 := @this: java.util.IdentityHashMap$EntryIterator$Entry;
        r1 := @parameter0: java.lang.Object;
        $i0 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        if $i0 >= 0 goto label0;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
        return $z0;

     label0:
        $z1 = r1 instanceof java.util.Map$Entry;
        if $z1 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.Map$Entry) r1;
        $r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r4 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r5 = $r4.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i1 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $r6 = $r5[$i1];
        $r7 = staticinvoke <java.util.IdentityHashMap: java.lang.Object access$600(java.lang.Object)>($r6);
        if $r3 != $r7 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r9 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r10 = $r9.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i2 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $i3 = $i2 + 1;
        $r11 = $r10[$i3];
        if $r8 != $r11 goto label2;

        $z2 = 1;
        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public int hashCode()
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        java.util.IdentityHashMap$EntryIterator $r1, $r2, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object[] $r3, $r7;
        java.lang.Object $r4, $r5, $r8;

        r0 := @this: java.util.IdentityHashMap$EntryIterator$Entry;
        $r1 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $i0 = $r1.<java.util.IdentityHashMap$EntryIterator: int lastReturnedIndex>;
        if $i0 >= 0 goto label0;

        $i1 = specialinvoke r0.<java.lang.Object: int hashCode()>();
        return $i1;

     label0:
        $r2 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r3 = $r2.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i2 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $r4 = $r3[$i2];
        $r5 = staticinvoke <java.util.IdentityHashMap: java.lang.Object access$600(java.lang.Object)>($r4);
        $i3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r5);
        $r6 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r7 = $r6.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i4 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $i5 = $i4 + 1;
        $r8 = $r7[$i5];
        $i6 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r8);
        $i7 = $i3 ^ $i6;
        return $i7;
    }

    public java.lang.String toString()
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r13;
        java.lang.StringBuilder $r2, $r7, $r8, $r12;
        java.util.IdentityHashMap$EntryIterator $r3, $r9;
        java.lang.Object[] $r4, $r10;
        java.lang.Object $r5, $r6, $r11;

        r0 := @this: java.util.IdentityHashMap$EntryIterator$Entry;
        $i0 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        if $i0 >= 0 goto label0;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();
        return $r1;

     label0:
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r4 = $r3.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i1 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $r5 = $r4[$i1];
        $r6 = staticinvoke <java.util.IdentityHashMap: java.lang.Object access$600(java.lang.Object)>($r5);
        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r9 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: java.util.IdentityHashMap$EntryIterator this$1>;
        $r10 = $r9.<java.util.IdentityHashMap$EntryIterator: java.lang.Object[] traversalTable>;
        $i2 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        $i3 = $i2 + 1;
        $r11 = $r10[$i3];
        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r13;
    }

    private void checkIndexForEntryUse()
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: java.util.IdentityHashMap$EntryIterator$Entry;
        $i0 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        if $i0 >= 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Entry was removed");
        throw $r1;

     label0:
        return;
    }

    void <init>(java.util.IdentityHashMap$EntryIterator, int, java.util.IdentityHashMap$1)
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        java.util.IdentityHashMap$EntryIterator r1;
        int i0;
        java.util.IdentityHashMap$1 r2;

        r0 := @this: java.util.IdentityHashMap$EntryIterator$Entry;
        r1 := @parameter0: java.util.IdentityHashMap$EntryIterator;
        i0 := @parameter1: int;
        r2 := @parameter2: java.util.IdentityHashMap$1;
        specialinvoke r0.<java.util.IdentityHashMap$EntryIterator$Entry: void <init>(java.util.IdentityHashMap$EntryIterator,int)>(r1, i0);
        return;
    }

    static int access$800(java.util.IdentityHashMap$EntryIterator$Entry)
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        int $i0;

        r0 := @parameter0: java.util.IdentityHashMap$EntryIterator$Entry;
        $i0 = r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index>;
        return $i0;
    }

    static int access$802(java.util.IdentityHashMap$EntryIterator$Entry, int)
    {
        java.util.IdentityHashMap$EntryIterator$Entry r0;
        int i0;

        r0 := @parameter0: java.util.IdentityHashMap$EntryIterator$Entry;
        i0 := @parameter1: int;
        r0.<java.util.IdentityHashMap$EntryIterator$Entry: int index> = i0;
        return i0;
    }
}
