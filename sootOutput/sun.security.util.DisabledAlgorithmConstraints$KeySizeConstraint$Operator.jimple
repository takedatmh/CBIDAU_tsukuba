final enum class sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator extends java.lang.Enum
{
    public static final enum sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator EQ;
    public static final enum sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator NE;
    public static final enum sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator LT;
    public static final enum sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator LE;
    public static final enum sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator GT;
    public static final enum sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator GE;
    private static final sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator[] $VALUES;

    public static sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator[] values()
    {
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator[]) $r1;
        return $r2;
    }

    public static sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "sun/security/util/DisabledAlgorithmConstraints$KeySizeConstraint$Operator", r0);
        $r2 = (sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator r0;
        java.lang.String r1;
        int i0;

        r0 := @this: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator of(java.lang.String)
    {
        java.lang.String r0, r1, $r12;
        byte b0;
        java.lang.StringBuilder $r2, $r10, $r11;
        int $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @parameter0: java.lang.String;
        r1 = r0;
        b0 = -1;
        $i1 = virtualinvoke r1.<java.lang.String: int hashCode()>();
        lookupswitch($i1)
        {
            case 60: goto label2;
            case 62: goto label4;
            case 1084: goto label1;
            case 1921: goto label3;
            case 1952: goto label0;
            case 1983: goto label5;
            default: goto label6;
        };

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("==");
        if $z0 == 0 goto label6;

        b0 = 0;
        goto label6;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("!=");
        if $z1 == 0 goto label6;

        b0 = 1;
        goto label6;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("<");
        if $z2 == 0 goto label6;

        b0 = 2;
        goto label6;

     label3:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("<=");
        if $z3 == 0 goto label6;

        b0 = 3;
        goto label6;

     label4:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(">");
        if $z4 == 0 goto label6;

        b0 = 4;
        goto label6;

     label5:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(">=");
        if $z5 == 0 goto label6;

        b0 = 5;

     label6:
        tableswitch(b0)
        {
            case 0: goto label7;
            case 1: goto label8;
            case 2: goto label9;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label12;
            default: goto label13;
        };

     label7:
        $r3 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator EQ>;
        return $r3;

     label8:
        $r4 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator NE>;
        return $r4;

     label9:
        $r5 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator LT>;
        return $r5;

     label10:
        $r6 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator LE>;
        return $r6;

     label11:
        $r7 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator GT>;
        return $r7;

     label12:
        $r8 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator GE>;
        return $r8;

     label13:
        $r9 = new java.lang.IllegalArgumentException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a legal Operator");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);
        throw $r9;
    }

    static void <clinit>()
    {
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator[] $r6;

        $r0 = new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator;
        specialinvoke $r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: void <init>(java.lang.String,int)>("EQ", 0);
        <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator EQ> = $r0;
        $r1 = new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator;
        specialinvoke $r1.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: void <init>(java.lang.String,int)>("NE", 1);
        <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator NE> = $r1;
        $r2 = new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator;
        specialinvoke $r2.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: void <init>(java.lang.String,int)>("LT", 2);
        <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator LT> = $r2;
        $r3 = new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator;
        specialinvoke $r3.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: void <init>(java.lang.String,int)>("LE", 3);
        <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator LE> = $r3;
        $r4 = new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator;
        specialinvoke $r4.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: void <init>(java.lang.String,int)>("GT", 4);
        <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator GT> = $r4;
        $r5 = new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator;
        specialinvoke $r5.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: void <init>(java.lang.String,int)>("GE", 5);
        <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator GE> = $r5;
        $r6 = newarray (sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator)[6];
        $r7 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator EQ>;
        $r6[0] = $r7;
        $r8 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator NE>;
        $r6[1] = $r8;
        $r9 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator LT>;
        $r6[2] = $r9;
        $r10 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator LE>;
        $r6[3] = $r10;
        $r11 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator GT>;
        $r6[4] = $r11;
        $r12 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator GE>;
        $r6[5] = $r12;
        <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator[] $VALUES> = $r6;
        return;
    }
}
