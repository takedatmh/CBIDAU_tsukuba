public class sun.text.normalizer.UnicodeSetIterator extends java.lang.Object
{
    public static int IS_STRING;
    public int codepoint;
    public int codepointEnd;
    public java.lang.String string;
    private sun.text.normalizer.UnicodeSet set;
    private int endRange;
    private int range;
    protected int endElement;
    protected int nextElement;
    private java.util.Iterator stringIterator;

    public void <init>(sun.text.normalizer.UnicodeSet)
    {
        sun.text.normalizer.UnicodeSetIterator r0;
        sun.text.normalizer.UnicodeSet r1;

        r0 := @this: sun.text.normalizer.UnicodeSetIterator;
        r1 := @parameter0: sun.text.normalizer.UnicodeSet;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.text.normalizer.UnicodeSetIterator: int endRange> = 0;
        r0.<sun.text.normalizer.UnicodeSetIterator: int range> = 0;
        r0.<sun.text.normalizer.UnicodeSetIterator: java.util.Iterator stringIterator> = null;
        virtualinvoke r0.<sun.text.normalizer.UnicodeSetIterator: void reset(sun.text.normalizer.UnicodeSet)>(r1);
        return;
    }

    public boolean nextRange()
    {
        sun.text.normalizer.UnicodeSetIterator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.util.Iterator $r2, $r3, $r6;
        java.lang.Object $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: sun.text.normalizer.UnicodeSetIterator;
        $i0 = r0.<sun.text.normalizer.UnicodeSetIterator: int nextElement>;
        $i1 = r0.<sun.text.normalizer.UnicodeSetIterator: int endElement>;
        if $i0 > $i1 goto label0;

        $i2 = r0.<sun.text.normalizer.UnicodeSetIterator: int endElement>;
        r0.<sun.text.normalizer.UnicodeSetIterator: int codepointEnd> = $i2;
        $i3 = r0.<sun.text.normalizer.UnicodeSetIterator: int nextElement>;
        r0.<sun.text.normalizer.UnicodeSetIterator: int codepoint> = $i3;
        $i4 = r0.<sun.text.normalizer.UnicodeSetIterator: int endElement>;
        $i5 = $i4 + 1;
        r0.<sun.text.normalizer.UnicodeSetIterator: int nextElement> = $i5;
        return 1;

     label0:
        $i6 = r0.<sun.text.normalizer.UnicodeSetIterator: int range>;
        $i7 = r0.<sun.text.normalizer.UnicodeSetIterator: int endRange>;
        if $i6 >= $i7 goto label1;

        $i8 = r0.<sun.text.normalizer.UnicodeSetIterator: int range>;
        $i9 = $i8 + 1;
        r0.<sun.text.normalizer.UnicodeSetIterator: int range> = $i9;
        virtualinvoke r0.<sun.text.normalizer.UnicodeSetIterator: void loadRange(int)>($i9);
        $i10 = r0.<sun.text.normalizer.UnicodeSetIterator: int endElement>;
        r0.<sun.text.normalizer.UnicodeSetIterator: int codepointEnd> = $i10;
        $i11 = r0.<sun.text.normalizer.UnicodeSetIterator: int nextElement>;
        r0.<sun.text.normalizer.UnicodeSetIterator: int codepoint> = $i11;
        $i12 = r0.<sun.text.normalizer.UnicodeSetIterator: int endElement>;
        $i13 = $i12 + 1;
        r0.<sun.text.normalizer.UnicodeSetIterator: int nextElement> = $i13;
        return 1;

     label1:
        $r2 = r0.<sun.text.normalizer.UnicodeSetIterator: java.util.Iterator stringIterator>;
        if $r2 != null goto label2;

        return 0;

     label2:
        $i14 = <sun.text.normalizer.UnicodeSetIterator: int IS_STRING>;
        r0.<sun.text.normalizer.UnicodeSetIterator: int codepoint> = $i14;
        $r3 = r0.<sun.text.normalizer.UnicodeSetIterator: java.util.Iterator stringIterator>;
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();
        $r5 = (java.lang.String) $r4;
        r0.<sun.text.normalizer.UnicodeSetIterator: java.lang.String string> = $r5;
        $r6 = r0.<sun.text.normalizer.UnicodeSetIterator: java.util.Iterator stringIterator>;
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label3;

        r0.<sun.text.normalizer.UnicodeSetIterator: java.util.Iterator stringIterator> = null;

     label3:
        return 1;
    }

    public void reset(sun.text.normalizer.UnicodeSet)
    {
        sun.text.normalizer.UnicodeSetIterator r0;
        sun.text.normalizer.UnicodeSet r1;

        r0 := @this: sun.text.normalizer.UnicodeSetIterator;
        r1 := @parameter0: sun.text.normalizer.UnicodeSet;
        r0.<sun.text.normalizer.UnicodeSetIterator: sun.text.normalizer.UnicodeSet set> = r1;
        virtualinvoke r0.<sun.text.normalizer.UnicodeSetIterator: void reset()>();
        return;
    }

    public void reset()
    {
        sun.text.normalizer.UnicodeSetIterator r0;
        sun.text.normalizer.UnicodeSet $r1, $r2, $r4;
        int $i0, $i1, $i2, $i3;
        java.util.TreeSet $r3, $r5;
        java.util.Iterator $r6, $r7;
        boolean $z0;

        r0 := @this: sun.text.normalizer.UnicodeSetIterator;
        $r1 = r0.<sun.text.normalizer.UnicodeSetIterator: sun.text.normalizer.UnicodeSet set>;
        $i0 = virtualinvoke $r1.<sun.text.normalizer.UnicodeSet: int getRangeCount()>();
        $i1 = $i0 - 1;
        r0.<sun.text.normalizer.UnicodeSetIterator: int endRange> = $i1;
        r0.<sun.text.normalizer.UnicodeSetIterator: int range> = 0;
        r0.<sun.text.normalizer.UnicodeSetIterator: int endElement> = -1;
        r0.<sun.text.normalizer.UnicodeSetIterator: int nextElement> = 0;
        $i2 = r0.<sun.text.normalizer.UnicodeSetIterator: int endRange>;
        if $i2 < 0 goto label0;

        $i3 = r0.<sun.text.normalizer.UnicodeSetIterator: int range>;
        virtualinvoke r0.<sun.text.normalizer.UnicodeSetIterator: void loadRange(int)>($i3);

     label0:
        r0.<sun.text.normalizer.UnicodeSetIterator: java.util.Iterator stringIterator> = null;
        $r2 = r0.<sun.text.normalizer.UnicodeSetIterator: sun.text.normalizer.UnicodeSet set>;
        $r3 = $r2.<sun.text.normalizer.UnicodeSet: java.util.TreeSet strings>;
        if $r3 == null goto label1;

        $r4 = r0.<sun.text.normalizer.UnicodeSetIterator: sun.text.normalizer.UnicodeSet set>;
        $r5 = $r4.<sun.text.normalizer.UnicodeSet: java.util.TreeSet strings>;
        $r6 = virtualinvoke $r5.<java.util.TreeSet: java.util.Iterator iterator()>();
        r0.<sun.text.normalizer.UnicodeSetIterator: java.util.Iterator stringIterator> = $r6;
        $r7 = r0.<sun.text.normalizer.UnicodeSetIterator: java.util.Iterator stringIterator>;
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label1;

        r0.<sun.text.normalizer.UnicodeSetIterator: java.util.Iterator stringIterator> = null;

     label1:
        return;
    }

    protected void loadRange(int)
    {
        sun.text.normalizer.UnicodeSetIterator r0;
        int i0, $i1, $i2;
        sun.text.normalizer.UnicodeSet $r1, $r2;

        r0 := @this: sun.text.normalizer.UnicodeSetIterator;
        i0 := @parameter0: int;
        $r1 = r0.<sun.text.normalizer.UnicodeSetIterator: sun.text.normalizer.UnicodeSet set>;
        $i1 = virtualinvoke $r1.<sun.text.normalizer.UnicodeSet: int getRangeStart(int)>(i0);
        r0.<sun.text.normalizer.UnicodeSetIterator: int nextElement> = $i1;
        $r2 = r0.<sun.text.normalizer.UnicodeSetIterator: sun.text.normalizer.UnicodeSet set>;
        $i2 = virtualinvoke $r2.<sun.text.normalizer.UnicodeSet: int getRangeEnd(int)>(i0);
        r0.<sun.text.normalizer.UnicodeSetIterator: int endElement> = $i2;
        return;
    }

    static void <clinit>()
    {
        <sun.text.normalizer.UnicodeSetIterator: int IS_STRING> = -1;
        return;
    }
}
