class sun.security.krb5.internal.TCPClient extends sun.security.krb5.internal.NetClient
{
    private java.net.Socket tcpSocket;
    private java.io.BufferedOutputStream out;
    private java.io.BufferedInputStream in;

    void <init>(java.lang.String, int, int) throws java.io.IOException
    {
        sun.security.krb5.internal.TCPClient r0;
        java.lang.String r1;
        int i0, i1;
        java.net.Socket $r2, $r3, $r6, $r9, $r11;
        java.net.InetSocketAddress $r4;
        java.io.BufferedOutputStream $r5;
        java.io.OutputStream $r7;
        java.io.BufferedInputStream $r8;
        java.io.InputStream $r10;

        r0 := @this: sun.security.krb5.internal.TCPClient;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<sun.security.krb5.internal.NetClient: void <init>()>();
        $r2 = new java.net.Socket;
        specialinvoke $r2.<java.net.Socket: void <init>()>();
        r0.<sun.security.krb5.internal.TCPClient: java.net.Socket tcpSocket> = $r2;
        $r3 = r0.<sun.security.krb5.internal.TCPClient: java.net.Socket tcpSocket>;
        $r4 = new java.net.InetSocketAddress;
        specialinvoke $r4.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r1, i0);
        virtualinvoke $r3.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r4, i1);
        $r5 = new java.io.BufferedOutputStream;
        $r6 = r0.<sun.security.krb5.internal.TCPClient: java.net.Socket tcpSocket>;
        $r7 = virtualinvoke $r6.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        specialinvoke $r5.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r7);
        r0.<sun.security.krb5.internal.TCPClient: java.io.BufferedOutputStream out> = $r5;
        $r8 = new java.io.BufferedInputStream;
        $r9 = r0.<sun.security.krb5.internal.TCPClient: java.net.Socket tcpSocket>;
        $r10 = virtualinvoke $r9.<java.net.Socket: java.io.InputStream getInputStream()>();
        specialinvoke $r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r10);
        r0.<sun.security.krb5.internal.TCPClient: java.io.BufferedInputStream in> = $r8;
        $r11 = r0.<sun.security.krb5.internal.TCPClient: java.net.Socket tcpSocket>;
        virtualinvoke $r11.<java.net.Socket: void setSoTimeout(int)>(i1);
        return;
    }

    public void send(byte[]) throws java.io.IOException
    {
        sun.security.krb5.internal.TCPClient r0;
        byte[] r1, r2;
        int $i0;
        java.io.BufferedOutputStream $r3, $r4, $r5;

        r0 := @this: sun.security.krb5.internal.TCPClient;
        r1 := @parameter0: byte[];
        r2 = newarray (byte)[4];
        $i0 = lengthof r1;
        staticinvoke <sun.security.krb5.internal.TCPClient: void intToNetworkByteOrder(int,byte[],int,int)>($i0, r2, 0, 4);
        $r3 = r0.<sun.security.krb5.internal.TCPClient: java.io.BufferedOutputStream out>;
        virtualinvoke $r3.<java.io.BufferedOutputStream: void write(byte[])>(r2);
        $r4 = r0.<sun.security.krb5.internal.TCPClient: java.io.BufferedOutputStream out>;
        virtualinvoke $r4.<java.io.BufferedOutputStream: void write(byte[])>(r1);
        $r5 = r0.<sun.security.krb5.internal.TCPClient: java.io.BufferedOutputStream out>;
        virtualinvoke $r5.<java.io.BufferedOutputStream: void flush()>();
        return;
    }

    public byte[] receive() throws java.io.IOException
    {
        sun.security.krb5.internal.TCPClient r0;
        byte[] r1, $r16;
        int i0, i1;
        java.io.IOException r2, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream $r3, $r4, $r10, $r18;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.String $r9, $r14, $r25;
        java.io.BufferedInputStream $r15;

        r0 := @this: sun.security.krb5.internal.TCPClient;
        r1 = newarray (byte)[4];
        i0 = specialinvoke r0.<sun.security.krb5.internal.TCPClient: int readFully(byte[],int)>(r1, 4);
        if i0 == 4 goto label1;

        $z0 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        if $z0 == 0 goto label0;

        $r3 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(">>>DEBUG: TCPClient could not read length field");

     label0:
        return null;

     label1:
        i1 = staticinvoke <sun.security.krb5.internal.TCPClient: int networkByteOrderToInt(byte[],int,int)>(r1, 0, 4);
        $z1 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        if $z1 == 0 goto label2;

        $r4 = <java.lang.System: java.io.PrintStream out>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>DEBUG: TCPClient reading ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label2:
        if i1 > 0 goto label4;

        $z2 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        if $z2 == 0 goto label3;

        $r10 = <java.lang.System: java.io.PrintStream out>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>DEBUG: TCPClient zero or negative length field: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label3:
        return null;

     label4:
        $r15 = r0.<sun.security.krb5.internal.TCPClient: java.io.BufferedInputStream in>;
        $r16 = staticinvoke <sun.misc.IOUtils: byte[] readFully(java.io.InputStream,int,boolean)>($r15, i1, 1);

     label5:
        return $r16;

     label6:
        $r17 := @caughtexception;
        r2 = $r17;
        $z3 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        if $z3 == 0 goto label7;

        $r18 = <java.lang.System: java.io.PrintStream out>;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>DEBUG: TCPClient could not read complete packet (");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label7:
        return null;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public void close() throws java.io.IOException
    {
        sun.security.krb5.internal.TCPClient r0;
        java.net.Socket $r1;

        r0 := @this: sun.security.krb5.internal.TCPClient;
        $r1 = r0.<sun.security.krb5.internal.TCPClient: java.net.Socket tcpSocket>;
        virtualinvoke $r1.<java.net.Socket: void close()>();
        return;
    }

    private int readFully(byte[], int) throws java.io.IOException
    {
        sun.security.krb5.internal.TCPClient r0;
        byte[] r1;
        int i0, i1, i2, $i3;
        java.io.BufferedInputStream $r2;

        r0 := @this: sun.security.krb5.internal.TCPClient;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 = 0;

     label0:
        if i0 <= 0 goto label4;

        $r2 = r0.<sun.security.krb5.internal.TCPClient: java.io.BufferedInputStream in>;
        i2 = virtualinvoke $r2.<java.io.BufferedInputStream: int read(byte[],int,int)>(r1, i1, i0);
        if i2 != -1 goto label3;

        if i1 != 0 goto label1;

        $i3 = -1;
        goto label2;

     label1:
        $i3 = i1;

     label2:
        return $i3;

     label3:
        i1 = i1 + i2;
        i0 = i0 - i2;
        goto label0;

     label4:
        return i1;
    }

    private static int networkByteOrderToInt(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.IllegalArgumentException $r1;
        byte $b6;
        short $s7;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if i1 <= 4 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot handle more than 4 bytes");
        throw $r1;

     label0:
        i2 = 0;
        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        i4 = i2 << 8;
        $i5 = i0 + i3;
        $b6 = r0[$i5];
        $s7 = $b6 & 255;
        i2 = i4 | $s7;
        i3 = i3 + 1;
        goto label1;

     label2:
        return i2;
    }

    private static void intToNetworkByteOrder(int, byte[], int, int)
    {
        int i0, i1, i2, i3, $i4, $i5;
        byte[] r0;
        java.lang.IllegalArgumentException $r1;
        byte $b6;

        i0 := @parameter0: int;
        r0 := @parameter1: byte[];
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        if i2 <= 4 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot handle more than 4 bytes");
        throw $r1;

     label0:
        i3 = i2 - 1;

     label1:
        if i3 < 0 goto label2;

        $i4 = i1 + i3;
        $i5 = i0 & 255;
        $b6 = (byte) $i5;
        r0[$i4] = $b6;
        i0 = i0 >>> 8;
        i3 = i3 + -1;
        goto label1;

     label2:
        return;
    }
}
