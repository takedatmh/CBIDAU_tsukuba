class java.lang.ProcessEnvironment$StringEntrySet extends java.util.AbstractSet
{
    private final java.util.Set s;

    public void <init>(java.util.Set)
    {
        java.lang.ProcessEnvironment$StringEntrySet r0;
        java.util.Set r1;

        r0 := @this: java.lang.ProcessEnvironment$StringEntrySet;
        r1 := @parameter0: java.util.Set;
        specialinvoke r0.<java.util.AbstractSet: void <init>()>();
        r0.<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set s> = r1;
        return;
    }

    public int size()
    {
        java.lang.ProcessEnvironment$StringEntrySet r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: java.lang.ProcessEnvironment$StringEntrySet;
        $r1 = r0.<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set s>;
        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();
        return $i0;
    }

    public boolean isEmpty()
    {
        java.lang.ProcessEnvironment$StringEntrySet r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: java.lang.ProcessEnvironment$StringEntrySet;
        $r1 = r0.<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set s>;
        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();
        return $z0;
    }

    public void clear()
    {
        java.lang.ProcessEnvironment$StringEntrySet r0;
        java.util.Set $r1;

        r0 := @this: java.lang.ProcessEnvironment$StringEntrySet;
        $r1 = r0.<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set s>;
        interfaceinvoke $r1.<java.util.Set: void clear()>();
        return;
    }

    public java.util.Iterator iterator()
    {
        java.lang.ProcessEnvironment$StringEntrySet r0;
        java.lang.ProcessEnvironment$StringEntrySet$1 $r1;

        r0 := @this: java.lang.ProcessEnvironment$StringEntrySet;
        $r1 = new java.lang.ProcessEnvironment$StringEntrySet$1;
        specialinvoke $r1.<java.lang.ProcessEnvironment$StringEntrySet$1: void <init>(java.lang.ProcessEnvironment$StringEntrySet)>(r0);
        return $r1;
    }

    private static java.util.Map$Entry vvEntry(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        java.lang.ProcessEnvironment$StringEntry $r1;
        java.util.Map$Entry $r2;
        java.lang.ProcessEnvironment$StringEntrySet$2 $r3;

        r0 := @parameter0: java.lang.Object;
        $z0 = r0 instanceof java.lang.ProcessEnvironment$StringEntry;
        if $z0 == 0 goto label0;

        $r1 = (java.lang.ProcessEnvironment$StringEntry) r0;
        $r2 = staticinvoke <java.lang.ProcessEnvironment$StringEntry: java.util.Map$Entry access$600(java.lang.ProcessEnvironment$StringEntry)>($r1);
        return $r2;

     label0:
        $r3 = new java.lang.ProcessEnvironment$StringEntrySet$2;
        specialinvoke $r3.<java.lang.ProcessEnvironment$StringEntrySet$2: void <init>(java.lang.Object)>(r0);
        return $r3;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.ProcessEnvironment$StringEntrySet r0;
        java.lang.Object r1;
        java.util.Set $r2;
        java.util.Map$Entry $r3;
        boolean $z0;

        r0 := @this: java.lang.ProcessEnvironment$StringEntrySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set s>;
        $r3 = staticinvoke <java.lang.ProcessEnvironment$StringEntrySet: java.util.Map$Entry vvEntry(java.lang.Object)>(r1);
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);
        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.ProcessEnvironment$StringEntrySet r0;
        java.lang.Object r1;
        java.util.Set $r2;
        java.util.Map$Entry $r3;
        boolean $z0;

        r0 := @this: java.lang.ProcessEnvironment$StringEntrySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set s>;
        $r3 = staticinvoke <java.lang.ProcessEnvironment$StringEntrySet: java.util.Map$Entry vvEntry(java.lang.Object)>(r1);
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r3);
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.ProcessEnvironment$StringEntrySet r0, $r3;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.util.Set $r2, $r4;

        r0 := @this: java.lang.ProcessEnvironment$StringEntrySet;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.lang.ProcessEnvironment$StringEntrySet;
        if $z0 == 0 goto label0;

        $r2 = r0.<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set s>;
        $r3 = (java.lang.ProcessEnvironment$StringEntrySet) r1;
        $r4 = $r3.<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set s>;
        $z1 = interfaceinvoke $r2.<java.util.Set: boolean equals(java.lang.Object)>($r4);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public int hashCode()
    {
        java.lang.ProcessEnvironment$StringEntrySet r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: java.lang.ProcessEnvironment$StringEntrySet;
        $r1 = r0.<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set s>;
        $i0 = interfaceinvoke $r1.<java.util.Set: int hashCode()>();
        return $i0;
    }

    static java.util.Set access$500(java.lang.ProcessEnvironment$StringEntrySet)
    {
        java.lang.ProcessEnvironment$StringEntrySet r0;
        java.util.Set $r1;

        r0 := @parameter0: java.lang.ProcessEnvironment$StringEntrySet;
        $r1 = r0.<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set s>;
        return $r1;
    }
}
