public class java.security.cert.CollectionCertStoreParameters extends java.lang.Object implements java.security.cert.CertStoreParameters
{
    private java.util.Collection coll;

    public void <init>(java.util.Collection)
    {
        java.security.cert.CollectionCertStoreParameters r0;
        java.util.Collection r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.security.cert.CollectionCertStoreParameters;
        r1 := @parameter0: java.util.Collection;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        r0.<java.security.cert.CollectionCertStoreParameters: java.util.Collection coll> = r1;
        return;
    }

    public void <init>()
    {
        java.security.cert.CollectionCertStoreParameters r0;
        java.util.Set $r1;

        r0 := @this: java.security.cert.CollectionCertStoreParameters;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = <java.util.Collections: java.util.Set EMPTY_SET>;
        r0.<java.security.cert.CollectionCertStoreParameters: java.util.Collection coll> = $r1;
        return;
    }

    public java.util.Collection getCollection()
    {
        java.security.cert.CollectionCertStoreParameters r0;
        java.util.Collection $r1;

        r0 := @this: java.security.cert.CollectionCertStoreParameters;
        $r1 = r0.<java.security.cert.CollectionCertStoreParameters: java.util.Collection coll>;
        return $r1;
    }

    public java.lang.Object clone()
    {
        java.security.cert.CollectionCertStoreParameters r0;
        java.lang.CloneNotSupportedException r1, $r3;
        java.lang.Object $r2;
        java.lang.InternalError $r4;
        java.lang.String $r5;

        r0 := @this: java.security.cert.CollectionCertStoreParameters;

     label0:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        $r4 = new java.lang.InternalError;
        $r5 = virtualinvoke r1.<java.lang.CloneNotSupportedException: java.lang.String toString()>();
        specialinvoke $r4.<java.lang.InternalError: void <init>(java.lang.String)>($r5);
        throw $r4;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public java.lang.String toString()
    {
        java.security.cert.CollectionCertStoreParameters r0;
        java.lang.StringBuffer $r1, r2;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        java.util.Collection $r6;
        java.lang.String $r9, $r12;

        r0 := @this: java.security.cert.CollectionCertStoreParameters;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CollectionCertStoreParameters: [\n");
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  collection: ");
        $r6 = r0.<java.security.cert.CollectionCertStoreParameters: java.util.Collection coll>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r12 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r12;
    }
}
