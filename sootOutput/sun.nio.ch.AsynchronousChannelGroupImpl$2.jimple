class sun.nio.ch.AsynchronousChannelGroupImpl$2 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.Runnable val$task;
    final sun.nio.ch.AsynchronousChannelGroupImpl this$0;

    void <init>(sun.nio.ch.AsynchronousChannelGroupImpl, java.lang.Runnable)
    {
        sun.nio.ch.AsynchronousChannelGroupImpl$2 r0;
        sun.nio.ch.AsynchronousChannelGroupImpl r1;
        java.lang.Runnable r2;

        r0 := @this: sun.nio.ch.AsynchronousChannelGroupImpl$2;
        r1 := @parameter0: sun.nio.ch.AsynchronousChannelGroupImpl;
        r2 := @parameter1: java.lang.Runnable;
        r0.<sun.nio.ch.AsynchronousChannelGroupImpl$2: sun.nio.ch.AsynchronousChannelGroupImpl this$0> = r1;
        r0.<sun.nio.ch.AsynchronousChannelGroupImpl$2: java.lang.Runnable val$task> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run()
    {
        sun.nio.ch.AsynchronousChannelGroupImpl$2 r0;
        java.util.concurrent.ThreadFactory $r1;
        java.lang.Runnable $r2;
        java.lang.Thread $r3;

        r0 := @this: sun.nio.ch.AsynchronousChannelGroupImpl$2;
        $r1 = staticinvoke <sun.nio.ch.ThreadPool: java.util.concurrent.ThreadFactory defaultThreadFactory()>();
        $r2 = r0.<sun.nio.ch.AsynchronousChannelGroupImpl$2: java.lang.Runnable val$task>;
        $r3 = interfaceinvoke $r1.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>($r2);
        virtualinvoke $r3.<java.lang.Thread: void start()>();
        return null;
    }

    public volatile java.lang.Object run()
    {
        sun.nio.ch.AsynchronousChannelGroupImpl$2 r0;
        java.lang.Void $r1;

        r0 := @this: sun.nio.ch.AsynchronousChannelGroupImpl$2;
        $r1 = virtualinvoke r0.<sun.nio.ch.AsynchronousChannelGroupImpl$2: java.lang.Void run()>();
        return $r1;
    }
}
