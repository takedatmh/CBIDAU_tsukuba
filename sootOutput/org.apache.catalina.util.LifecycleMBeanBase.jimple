public abstract class org.apache.catalina.util.LifecycleMBeanBase extends org.apache.catalina.util.LifecycleBase implements javax.management.MBeanRegistration
{
    private static org.apache.juli.logging.Log log;
    private static org.apache.tomcat.util.res.StringManager sm;
    private java.lang.String domain;
    private javax.management.ObjectName oname;
    protected javax.management.MBeanServer mserver;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        org.apache.tomcat.util.res.StringManager $r1;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/util/LifecycleMBeanBase");
        <org.apache.catalina.util.LifecycleMBeanBase: org.apache.juli.logging.Log log> = $r0;
        $r1 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.catalina.util");
        <org.apache.catalina.util.LifecycleMBeanBase: org.apache.tomcat.util.res.StringManager sm> = $r1;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        specialinvoke r0.<org.apache.catalina.util.LifecycleBase: void <init>()>();
        r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String domain> = null;
        r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.ObjectName oname> = null;
        r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.MBeanServer mserver> = null;
        return;
    }

    protected void initInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;
        javax.management.ObjectName $r1, $r5;
        org.apache.tomcat.util.modeler.Registry $r2;
        javax.management.MBeanServer $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        $r1 = r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.ObjectName oname>;
        if $r1 != null goto label0;

        $r2 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.modeler.Registry: javax.management.MBeanServer getMBeanServer()>();
        r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.MBeanServer mserver> = $r3;
        $r4 = virtualinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String getObjectNameKeyProperties()>();
        $r5 = virtualinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.ObjectName register(java.lang.Object,java.lang.String)>(r0, $r4);
        r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.ObjectName oname> = $r5;

     label0:
        return;
    }

    protected void destroyInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;
        javax.management.ObjectName $r1;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        $r1 = r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.ObjectName oname>;
        virtualinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: void unregister(javax.management.ObjectName)>($r1);
        return;
    }

    public final void setDomain(java.lang.String)
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String domain> = r1;
        return;
    }

    public final java.lang.String getDomain()
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        $r1 = r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String domain>;
        if $r1 != null goto label0;

        $r2 = virtualinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String getDomainInternal()>();
        r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String domain> = $r2;

     label0:
        $r3 = r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String domain>;
        if $r3 != null goto label1;

        r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String domain> = "Catalina";

     label1:
        $r4 = r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String domain>;
        return $r4;
    }

    protected abstract java.lang.String getDomainInternal();

    public final javax.management.ObjectName getObjectName()
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;
        javax.management.ObjectName $r1;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        $r1 = r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.ObjectName oname>;
        return $r1;
    }

    protected abstract java.lang.String getObjectNameKeyProperties();

    protected final javax.management.ObjectName register(java.lang.Object, java.lang.String)
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;
        java.lang.Object r1;
        java.lang.String r2, $r7, $r11, $r17, $r23;
        java.lang.StringBuilder $r3, r4;
        javax.management.ObjectName r5, $r10;
        javax.management.MalformedObjectNameException r6, $r13;
        org.apache.tomcat.util.modeler.Registry $r12;
        org.apache.juli.logging.Log $r14, $r20;
        org.apache.tomcat.util.res.StringManager $r15, $r21;
        java.lang.Object[] $r16, $r22;
        java.lang.Exception $r18, r19;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.String;
        $r3 = new java.lang.StringBuilder;
        $r7 = virtualinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String getDomain()>();
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);
        r4 = $r3;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        r5 = null;

     label0:
        $r10 = new javax.management.ObjectName;
        $r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<javax.management.ObjectName: void <init>(java.lang.String)>($r11);
        r5 = $r10;
        $r12 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        virtualinvoke $r12.<org.apache.tomcat.util.modeler.Registry: void registerComponent(java.lang.Object,javax.management.ObjectName,java.lang.String)>(r1, r5, null);

     label1:
        goto label4;

     label2:
        $r13 := @caughtexception;
        r6 = $r13;
        $r14 = <org.apache.catalina.util.LifecycleMBeanBase: org.apache.juli.logging.Log log>;
        $r15 = <org.apache.catalina.util.LifecycleMBeanBase: org.apache.tomcat.util.res.StringManager sm>;
        $r16 = newarray (java.lang.Object)[2];
        $r16[0] = r1;
        $r16[1] = r4;
        $r17 = virtualinvoke $r15.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("lifecycleMBeanBase.registerFail", $r16);
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r17, r6);
        goto label4;

     label3:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = <org.apache.catalina.util.LifecycleMBeanBase: org.apache.juli.logging.Log log>;
        $r21 = <org.apache.catalina.util.LifecycleMBeanBase: org.apache.tomcat.util.res.StringManager sm>;
        $r22 = newarray (java.lang.Object)[2];
        $r22[0] = r1;
        $r22[1] = r4;
        $r23 = virtualinvoke $r21.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("lifecycleMBeanBase.registerFail", $r22);
        interfaceinvoke $r20.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r23, r19);

     label4:
        return r5;

        catch javax.management.MalformedObjectNameException from label0 to label1 with label2;
        catch java.lang.Exception from label0 to label1 with label3;
    }

    protected final void unregister(javax.management.ObjectName)
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;
        javax.management.ObjectName r1;
        org.apache.tomcat.util.res.StringManager $r2, $r11, $r17;
        javax.management.MBeanRegistrationException r3, $r9;
        javax.management.MBeanServer $r4, $r8;
        org.apache.juli.logging.Log $r5, $r10, $r16;
        java.lang.Object[] $r6, $r12, $r18;
        java.lang.String $r7, $r13, $r19;
        javax.management.InstanceNotFoundException $r14, r15;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        r1 := @parameter0: javax.management.ObjectName;
        if r1 != null goto label0;

        return;

     label0:
        $r4 = r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.MBeanServer mserver>;
        if $r4 != null goto label1;

        $r5 = <org.apache.catalina.util.LifecycleMBeanBase: org.apache.juli.logging.Log log>;
        $r2 = <org.apache.catalina.util.LifecycleMBeanBase: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = newarray (java.lang.Object)[1];
        $r6[0] = r1;
        $r7 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("lifecycleMBeanBase.unregisterNoServer", $r6);
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r7);
        return;

     label1:
        $r8 = r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.MBeanServer mserver>;
        interfaceinvoke $r8.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(r1);

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;
        r3 = $r9;
        $r10 = <org.apache.catalina.util.LifecycleMBeanBase: org.apache.juli.logging.Log log>;
        $r11 = <org.apache.catalina.util.LifecycleMBeanBase: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = newarray (java.lang.Object)[1];
        $r12[0] = r1;
        $r13 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("lifecycleMBeanBase.unregisterFail", $r12);
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r13, r3);
        goto label5;

     label4:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = <org.apache.catalina.util.LifecycleMBeanBase: org.apache.juli.logging.Log log>;
        $r17 = <org.apache.catalina.util.LifecycleMBeanBase: org.apache.tomcat.util.res.StringManager sm>;
        $r18 = newarray (java.lang.Object)[1];
        $r18[0] = r1;
        $r19 = virtualinvoke $r17.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("lifecycleMBeanBase.unregisterFail", $r18);
        interfaceinvoke $r16.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r19, r15);

     label5:
        return;

        catch javax.management.MBeanRegistrationException from label1 to label2 with label3;
        catch javax.management.InstanceNotFoundException from label1 to label2 with label4;
    }

    public final void postDeregister()
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        return;
    }

    public final void postRegister(java.lang.Boolean)
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;
        java.lang.Boolean r1;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        r1 := @parameter0: java.lang.Boolean;
        return;
    }

    public final void preDeregister() throws java.lang.Exception
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        return;
    }

    public final javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName) throws java.lang.Exception
    {
        org.apache.catalina.util.LifecycleMBeanBase r0;
        javax.management.MBeanServer r1;
        javax.management.ObjectName r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.util.LifecycleMBeanBase;
        r1 := @parameter0: javax.management.MBeanServer;
        r2 := @parameter1: javax.management.ObjectName;
        r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.MBeanServer mserver> = r1;
        r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.ObjectName oname> = r2;
        $r3 = virtualinvoke r2.<javax.management.ObjectName: java.lang.String getDomain()>();
        r0.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String domain> = $r3;
        $r4 = r0.<org.apache.catalina.util.LifecycleMBeanBase: javax.management.ObjectName oname>;
        return $r4;
    }
}
