public class javax.security.auth.kerberos.KerberosKey extends java.lang.Object implements javax.crypto.SecretKey, javax.security.auth.Destroyable
{
    private static final long serialVersionUID;
    private javax.security.auth.kerberos.KerberosPrincipal principal;
    private int versionNum;
    private javax.security.auth.kerberos.KeyImpl key;
    private transient boolean destroyed;

    public void <init>(javax.security.auth.kerberos.KerberosPrincipal, byte[], int, int)
    {
        javax.security.auth.kerberos.KerberosKey r0;
        javax.security.auth.kerberos.KerberosPrincipal r1;
        byte[] r2;
        int i0, i1;
        javax.security.auth.kerberos.KeyImpl $r3;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        r1 := @parameter0: javax.security.auth.kerberos.KerberosPrincipal;
        r2 := @parameter1: byte[];
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed> = 0;
        r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal principal> = r1;
        r0.<javax.security.auth.kerberos.KerberosKey: int versionNum> = i1;
        $r3 = new javax.security.auth.kerberos.KeyImpl;
        specialinvoke $r3.<javax.security.auth.kerberos.KeyImpl: void <init>(byte[],int)>(r2, i0);
        r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KeyImpl key> = $r3;
        return;
    }

    public void <init>(javax.security.auth.kerberos.KerberosPrincipal, char[], java.lang.String)
    {
        javax.security.auth.kerberos.KerberosKey r0;
        javax.security.auth.kerberos.KerberosPrincipal r1;
        char[] r2;
        java.lang.String r3;
        javax.security.auth.kerberos.KeyImpl $r4;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        r1 := @parameter0: javax.security.auth.kerberos.KerberosPrincipal;
        r2 := @parameter1: char[];
        r3 := @parameter2: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed> = 0;
        r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal principal> = r1;
        $r4 = new javax.security.auth.kerberos.KeyImpl;
        specialinvoke $r4.<javax.security.auth.kerberos.KeyImpl: void <init>(javax.security.auth.kerberos.KerberosPrincipal,char[],java.lang.String)>(r1, r2, r3);
        r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KeyImpl key> = $r4;
        return;
    }

    public final javax.security.auth.kerberos.KerberosPrincipal getPrincipal()
    {
        javax.security.auth.kerberos.KerberosKey r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        javax.security.auth.kerberos.KerberosPrincipal $r2;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        $z0 = r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed>;
        if $z0 == 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This key is no longer valid");
        throw $r1;

     label0:
        $r2 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal principal>;
        return $r2;
    }

    public final int getVersionNumber()
    {
        javax.security.auth.kerberos.KerberosKey r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        int $i0;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        $z0 = r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed>;
        if $z0 == 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This key is no longer valid");
        throw $r1;

     label0:
        $i0 = r0.<javax.security.auth.kerberos.KerberosKey: int versionNum>;
        return $i0;
    }

    public final int getKeyType()
    {
        javax.security.auth.kerberos.KerberosKey r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        javax.security.auth.kerberos.KeyImpl $r2;
        int $i0;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        $z0 = r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed>;
        if $z0 == 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This key is no longer valid");
        throw $r1;

     label0:
        $r2 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KeyImpl key>;
        $i0 = virtualinvoke $r2.<javax.security.auth.kerberos.KeyImpl: int getKeyType()>();
        return $i0;
    }

    public final java.lang.String getAlgorithm()
    {
        javax.security.auth.kerberos.KerberosKey r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        javax.security.auth.kerberos.KeyImpl $r2;
        java.lang.String $r3;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        $z0 = r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed>;
        if $z0 == 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This key is no longer valid");
        throw $r1;

     label0:
        $r2 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KeyImpl key>;
        $r3 = virtualinvoke $r2.<javax.security.auth.kerberos.KeyImpl: java.lang.String getAlgorithm()>();
        return $r3;
    }

    public final java.lang.String getFormat()
    {
        javax.security.auth.kerberos.KerberosKey r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        javax.security.auth.kerberos.KeyImpl $r2;
        java.lang.String $r3;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        $z0 = r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed>;
        if $z0 == 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This key is no longer valid");
        throw $r1;

     label0:
        $r2 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KeyImpl key>;
        $r3 = virtualinvoke $r2.<javax.security.auth.kerberos.KeyImpl: java.lang.String getFormat()>();
        return $r3;
    }

    public final byte[] getEncoded()
    {
        javax.security.auth.kerberos.KerberosKey r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        javax.security.auth.kerberos.KeyImpl $r2;
        byte[] $r3;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        $z0 = r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed>;
        if $z0 == 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This key is no longer valid");
        throw $r1;

     label0:
        $r2 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KeyImpl key>;
        $r3 = virtualinvoke $r2.<javax.security.auth.kerberos.KeyImpl: byte[] getEncoded()>();
        return $r3;
    }

    public void destroy() throws javax.security.auth.DestroyFailedException
    {
        javax.security.auth.kerberos.KerberosKey r0;
        boolean $z0;
        javax.security.auth.kerberos.KeyImpl $r1;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        $z0 = r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed>;
        if $z0 != 0 goto label0;

        $r1 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KeyImpl key>;
        virtualinvoke $r1.<javax.security.auth.kerberos.KeyImpl: void destroy()>();
        r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal principal> = null;
        r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed> = 1;

     label0:
        return;
    }

    public boolean isDestroyed()
    {
        javax.security.auth.kerberos.KerberosKey r0;
        boolean $z0;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        $z0 = r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed>;
        return $z0;
    }

    public java.lang.String toString()
    {
        javax.security.auth.kerberos.KerberosKey r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r7, $r8, $r11;
        javax.security.auth.kerberos.KerberosPrincipal $r3;
        java.lang.String $r4, $r10, $r12;
        int $i0;
        javax.security.auth.kerberos.KeyImpl $r9;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        $z0 = r0.<javax.security.auth.kerberos.KerberosKey: boolean destroyed>;
        if $z0 == 0 goto label0;

        return "Destroyed Principal";

     label0:
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Kerberos Principal ");
        $r3 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal principal>;
        $r4 = virtualinvoke $r3.<javax.security.auth.kerberos.KerberosPrincipal: java.lang.String toString()>();
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key Version ");
        $i0 = r0.<javax.security.auth.kerberos.KerberosKey: int versionNum>;
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key ");
        $r9 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KeyImpl key>;
        $r10 = virtualinvoke $r9.<javax.security.auth.kerberos.KeyImpl: java.lang.String toString()>();
        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r12;
    }

    public int hashCode()
    {
        javax.security.auth.kerberos.KerberosKey r0;
        byte b0;
        boolean $z0;
        int $i1, $i2, i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11;
        byte[] $r1;
        javax.security.auth.kerberos.KerberosPrincipal $r2, $r3;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        b0 = 17;
        $z0 = virtualinvoke r0.<javax.security.auth.kerberos.KerberosKey: boolean isDestroyed()>();
        if $z0 == 0 goto label0;

        return b0;

     label0:
        $i1 = 37 * b0;
        $r1 = virtualinvoke r0.<javax.security.auth.kerberos.KerberosKey: byte[] getEncoded()>();
        $i2 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r1);
        i3 = $i1 + $i2;
        $i4 = 37 * i3;
        $i5 = virtualinvoke r0.<javax.security.auth.kerberos.KerberosKey: int getKeyType()>();
        i6 = $i4 + $i5;
        $r2 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal principal>;
        if $r2 == null goto label1;

        $i7 = 37 * i6;
        $r3 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal principal>;
        $i8 = virtualinvoke $r3.<javax.security.auth.kerberos.KerberosPrincipal: int hashCode()>();
        i6 = $i7 + $i8;

     label1:
        $i9 = i6 * 37;
        $i10 = r0.<javax.security.auth.kerberos.KerberosKey: int versionNum>;
        $i11 = $i9 + $i10;
        return $i11;
    }

    public boolean equals(java.lang.Object)
    {
        javax.security.auth.kerberos.KerberosKey r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3;
        byte[] $r3, $r4;
        javax.security.auth.kerberos.KerberosPrincipal $r5, $r6, $r7, $r8;

        r0 := @this: javax.security.auth.kerberos.KerberosKey;
        r1 := @parameter0: java.lang.Object;
        if r1 != r0 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof javax.security.auth.kerberos.KerberosKey;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (javax.security.auth.kerberos.KerberosKey) r1;
        $z1 = virtualinvoke r0.<javax.security.auth.kerberos.KerberosKey: boolean isDestroyed()>();
        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r2.<javax.security.auth.kerberos.KerberosKey: boolean isDestroyed()>();
        if $z2 == 0 goto label3;

     label2:
        return 0;

     label3:
        $i0 = r0.<javax.security.auth.kerberos.KerberosKey: int versionNum>;
        $i1 = virtualinvoke r2.<javax.security.auth.kerberos.KerberosKey: int getVersionNumber()>();
        if $i0 != $i1 goto label4;

        $i2 = virtualinvoke r0.<javax.security.auth.kerberos.KerberosKey: int getKeyType()>();
        $i3 = virtualinvoke r2.<javax.security.auth.kerberos.KerberosKey: int getKeyType()>();
        if $i2 != $i3 goto label4;

        $r3 = virtualinvoke r0.<javax.security.auth.kerberos.KerberosKey: byte[] getEncoded()>();
        $r4 = virtualinvoke r2.<javax.security.auth.kerberos.KerberosKey: byte[] getEncoded()>();
        $z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r3, $r4);
        if $z3 != 0 goto label5;

     label4:
        return 0;

     label5:
        $r5 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal principal>;
        if $r5 != null goto label6;

        $r6 = virtualinvoke r2.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal getPrincipal()>();
        if $r6 == null goto label7;

        return 0;

     label6:
        $r7 = r0.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal principal>;
        $r8 = virtualinvoke r2.<javax.security.auth.kerberos.KerberosKey: javax.security.auth.kerberos.KerberosPrincipal getPrincipal()>();
        $z4 = virtualinvoke $r7.<javax.security.auth.kerberos.KerberosPrincipal: boolean equals(java.lang.Object)>($r8);
        if $z4 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }
}
