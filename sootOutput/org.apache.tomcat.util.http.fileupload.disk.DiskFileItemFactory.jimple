public class org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory extends java.lang.Object implements org.apache.tomcat.util.http.fileupload.FileItemFactory
{
    public static final int DEFAULT_SIZE_THRESHOLD;
    private java.io.File repository;
    private int sizeThreshold;
    private java.lang.String defaultCharset;

    public void <init>()
    {
        org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory r0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
        specialinvoke r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: void <init>(int,java.io.File)>(10240, null);
        return;
    }

    public void <init>(int, java.io.File)
    {
        org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory r0;
        int i0;
        java.io.File r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
        i0 := @parameter0: int;
        r1 := @parameter1: java.io.File;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: int sizeThreshold> = 10240;
        r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: java.lang.String defaultCharset> = "ISO-8859-1";
        r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: int sizeThreshold> = i0;
        r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: java.io.File repository> = r1;
        return;
    }

    public java.io.File getRepository()
    {
        org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory r0;
        java.io.File $r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: java.io.File repository>;
        return $r1;
    }

    public void setRepository(java.io.File)
    {
        org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory r0;
        java.io.File r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
        r1 := @parameter0: java.io.File;
        r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: java.io.File repository> = r1;
        return;
    }

    public int getSizeThreshold()
    {
        org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory r0;
        int $i0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
        $i0 = r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: int sizeThreshold>;
        return $i0;
    }

    public void setSizeThreshold(int)
    {
        org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory r0;
        int i0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
        i0 := @parameter0: int;
        r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: int sizeThreshold> = i0;
        return;
    }

    public org.apache.tomcat.util.http.fileupload.FileItem createItem(java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory r0;
        java.lang.String r1, r2, r3, $r7;
        boolean z0;
        org.apache.tomcat.util.http.fileupload.disk.DiskFileItem $r4, r5;
        int $i0;
        java.io.File $r6;

        r0 := @this: org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        r3 := @parameter3: java.lang.String;
        $r4 = new org.apache.tomcat.util.http.fileupload.disk.DiskFileItem;
        $i0 = r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: int sizeThreshold>;
        $r6 = r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: java.io.File repository>;
        specialinvoke $r4.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItem: void <init>(java.lang.String,java.lang.String,boolean,java.lang.String,int,java.io.File)>(r1, r2, z0, r3, $i0, $r6);
        r5 = $r4;
        $r7 = r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: java.lang.String defaultCharset>;
        virtualinvoke r5.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItem: void setDefaultCharset(java.lang.String)>($r7);
        return r5;
    }

    public java.lang.String getDefaultCharset()
    {
        org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: java.lang.String defaultCharset>;
        return $r1;
    }

    public void setDefaultCharset(java.lang.String)
    {
        org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory r0;
        java.lang.String r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory: java.lang.String defaultCharset> = r1;
        return;
    }
}
