class java.util.JapaneseImperialCalendar extends java.util.Calendar
{
    public static final int BEFORE_MEIJI;
    public static final int MEIJI;
    public static final int TAISHO;
    public static final int SHOWA;
    public static final int HEISEI;
    private static final int EPOCH_OFFSET;
    private static final int EPOCH_YEAR;
    private static final int ONE_SECOND;
    private static final int ONE_MINUTE;
    private static final int ONE_HOUR;
    private static final long ONE_DAY;
    private static final long ONE_WEEK;
    private static final sun.util.calendar.LocalGregorianCalendar jcal;
    private static final sun.util.calendar.Gregorian gcal;
    private static final sun.util.calendar.Era BEFORE_MEIJI_ERA;
    private static final sun.util.calendar.Era[] eras;
    private static final long[] sinceFixedDates;
    static final int[] MIN_VALUES;
    static final int[] LEAST_MAX_VALUES;
    static final int[] MAX_VALUES;
    private static final long serialVersionUID;
    private transient sun.util.calendar.LocalGregorianCalendar$Date jdate;
    private transient int[] zoneOffsets;
    private transient int[] originalFields;
    private transient long cachedFixedDate;
    static final boolean $assertionsDisabled;

    public void <init>(java.util.TimeZone, java.util.Locale)
    {
        java.util.JapaneseImperialCalendar r0;
        java.util.TimeZone r1;
        java.util.Locale r2;
        sun.util.calendar.LocalGregorianCalendar $r3;
        sun.util.calendar.LocalGregorianCalendar$Date $r4;
        long $l0;

        r0 := @this: java.util.JapaneseImperialCalendar;
        r1 := @parameter0: java.util.TimeZone;
        r2 := @parameter1: java.util.Locale;
        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>(r1, r2);
        r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate> = -9223372036854775808L;
        $r3 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r4 = virtualinvoke $r3.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date newCalendarDate(java.util.TimeZone)>(r1);
        r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate> = $r4;
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void setTimeInMillis(long)>($l0);
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.JapaneseImperialCalendar r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: java.util.JapaneseImperialCalendar;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.util.JapaneseImperialCalendar;
        if $z0 == 0 goto label0;

        $z1 = specialinvoke r0.<java.util.Calendar: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public int hashCode()
    {
        java.util.JapaneseImperialCalendar r0;
        int $i0, $i1, $i2;
        sun.util.calendar.LocalGregorianCalendar$Date $r1;

        r0 := @this: java.util.JapaneseImperialCalendar;
        $i0 = specialinvoke r0.<java.util.Calendar: int hashCode()>();
        $r1 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i1 = virtualinvoke $r1.<sun.util.calendar.LocalGregorianCalendar$Date: int hashCode()>();
        $i2 = $i0 ^ $i1;
        return $i2;
    }

    public void add(int, int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1, i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, $i22, $i23, $i24, $i27, $i31, $i35, $i39, $i45, $i46, $i52, $i53, $i54, i55;
        sun.util.calendar.LocalGregorianCalendar$Date r1, $r3, $r6, r8;
        long l2, l3, l5, l21, $l25, $l26, $l28, l29, l30, $l32, l33, l34, $l36, l37, l38, $l40, l41, l44, $l47, $l48, $l49, $l50, $l51, $l56, $l57, $l58, $l60, $l61, $l62;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object $r4, $r7;
        sun.util.calendar.Era[] $r10, $r11;
        byte $b42, $b43, $b59;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i1 != 0 goto label0;

        return;

     label0:
        if i0 < 0 goto label1;

        if i0 < 15 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r2;

     label2:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void complete()>();
        if i0 != 1 goto label3;

        $r3 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $r4 = virtualinvoke $r3.<sun.util.calendar.LocalGregorianCalendar$Date: java.lang.Object clone()>();
        r1 = (sun.util.calendar.LocalGregorianCalendar$Date) $r4;
        virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date addYear(int)>(i1);
        specialinvoke r0.<java.util.JapaneseImperialCalendar: void pinDayOfMonth(sun.util.calendar.LocalGregorianCalendar$Date)>(r1);
        $i6 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r1);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(0, $i6);
        $i7 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(1, $i7);
        $i8 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        $i9 = $i8 - 1;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(2, $i9);
        $i10 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i10);
        goto label19;

     label3:
        if i0 != 2 goto label4;

        $r6 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $r7 = virtualinvoke $r6.<sun.util.calendar.LocalGregorianCalendar$Date: java.lang.Object clone()>();
        r8 = (sun.util.calendar.LocalGregorianCalendar$Date) $r7;
        virtualinvoke r8.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate addMonth(int)>(i1);
        specialinvoke r0.<java.util.JapaneseImperialCalendar: void pinDayOfMonth(sun.util.calendar.LocalGregorianCalendar$Date)>(r8);
        $i11 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r8);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(0, $i11);
        $i12 = virtualinvoke r8.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(1, $i12);
        $i13 = virtualinvoke r8.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        $i14 = $i13 - 1;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(2, $i14);
        $i15 = virtualinvoke r8.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i15);
        goto label19;

     label4:
        if i0 != 0 goto label7;

        $i16 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(0);
        i17 = $i16 + i1;
        if i17 >= 0 goto label5;

        i17 = 0;
        goto label6;

     label5:
        $r10 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i18 = lengthof $r10;
        $i19 = $i18 - 1;
        if i17 <= $i19 goto label6;

        $r11 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i20 = lengthof $r11;
        i17 = $i20 - 1;

     label6:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(0, i17);
        goto label19;

     label7:
        l21 = (long) i1;
        l2 = 0L;
        tableswitch(i0)
        {
            case 3: goto label12;
            case 4: goto label12;
            case 5: goto label13;
            case 6: goto label13;
            case 7: goto label13;
            case 8: goto label12;
            case 9: goto label14;
            case 10: goto label8;
            case 11: goto label8;
            case 12: goto label9;
            case 13: goto label10;
            case 14: goto label11;
            default: goto label15;
        };

     label8:
        l21 = l21 * 3600000L;
        goto label15;

     label9:
        l21 = l21 * 60000L;
        goto label15;

     label10:
        l21 = l21 * 1000L;
        goto label15;

     label11:
        goto label15;

     label12:
        l21 = l21 * 7L;
        goto label15;

     label13:
        goto label15;

     label14:
        $i22 = i1 / 2;
        l21 = (long) $i22;
        $i23 = i1 % 2;
        $i24 = 12 * $i23;
        l2 = (long) $i24;

     label15:
        if i0 < 10 goto label16;

        $l25 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $l26 = $l25 + l21;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void setTimeInMillis(long)>($l26);
        return;

     label16:
        l3 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $i27 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(11);
        $l28 = (long) $i27;
        l29 = l2 + $l28;
        l30 = l29 * 60L;
        $i31 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(12);
        $l32 = (long) $i31;
        l33 = l30 + $l32;
        l34 = l33 * 60L;
        $i35 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(13);
        $l36 = (long) $i35;
        l37 = l34 + $l36;
        l38 = l37 * 1000L;
        $i39 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(14);
        $l40 = (long) $i39;
        l41 = l38 + $l40;
        $b42 = l41 cmp 86400000L;
        if $b42 < 0 goto label17;

        l3 = l3 + 1L;
        l41 = l41 - 86400000L;
        goto label18;

     label17:
        $b43 = l41 cmp 0L;
        if $b43 >= 0 goto label18;

        l3 = l3 - 1L;
        l41 = l41 + 86400000L;

     label18:
        l44 = l3 + l21;
        $i45 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(15);
        $i46 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(16);
        i4 = $i45 + $i46;
        $l47 = l44 - 719163L;
        $l48 = $l47 * 86400000L;
        $l49 = $l48 + l41;
        $l50 = (long) i4;
        $l51 = $l49 - $l50;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void setTimeInMillis(long)>($l51);
        $i52 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(15);
        $i53 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(16);
        $i54 = $i52 + $i53;
        i55 = i4 - $i54;
        if i55 == 0 goto label19;

        $l56 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $l57 = (long) i55;
        $l58 = $l56 + $l57;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void setTimeInMillis(long)>($l58);
        l5 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $b59 = l5 cmp l44;
        if $b59 == 0 goto label19;

        $l60 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $l61 = (long) i55;
        $l62 = $l60 - $l61;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void setTimeInMillis(long)>($l62);

     label19:
        return;
    }

    public void roll(int, boolean)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0;
        boolean z0;
        byte $b2;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        if z0 == 0 goto label0;

        $b2 = 1;
        goto label1;

     label0:
        $b2 = -1;

     label1:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void roll(int,int)>(i0, $b2);
        return;
    }

    public void roll(int, int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i12, $i14, $i15, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i31, i32, $i33, $i35, i36, $i37, i38, $i39, $i40, $i41, $i42, $i43, $i44, $i48, $i49, $i50, $i51, $i52, $i53, $i55, i56, $i57, i58, $i59, $i60, $i61, $i62, $i63, $i64, $i68, $i69, $i70, $i71, $i72, $i73, $i74, i75, i76, $i77, i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, i97, $i98, $i99, i100, $i101, i102, i103, $i104, i105, $i106, $i107, $i109, $i110, $i113, $i114, $i117, $i118, $i119, $i122, $i124, $i125, $i128, $i129, $i130, $i131, $i134, $i135, $i136, i137, $i138, $i141, $i142, $i143, $i144, $i145, $i146, i147, i150, $i151, $i155, $i158, $i159, i160, $i161, $i162, $i163, $i174, $i175, $i176, $i181, $i182, $i183, i184, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, i197, $i199, $i204, $i205, $i206, $i207, $i208, $i209, $i210, i211, $i212, i213, $i214, i215, $i217, $i224, $i225, $i226, $i227, $i228, $i229, i230, i231, i232, $i233, i234, $i235, i238, i239, i240, $i242, i243, $i244, $i245, i246, $i247, $i252, $i253, $i254;
        sun.util.calendar.LocalGregorianCalendar$Date r1, r2, r3, $r8, $r15, $r16, r19, r22, r32, r35, $r43, $r45, $r51, $r52, $r53, $r54, $r55, $r56, $r63, $r65, $r68, $r70, r71, $r72, $r73, $r75, $r77, $r79, $r80, r81, $r83, r84, $r86, r88, $r89, $r91, $r92, r93;
        long l11, $l13, $l16, $l17, $l18, $l26, $l34, $l45, $l46, $l54, $l65, $l66, l108, $l111, l112, $l115, $l120, l121, l123, $l126, l127, $l132, l133, $l139, $l140, l148, l149, $l152, $l153, $l154, l156, $l157, $l164, $l165, $l166, $l168, $l169, $l171, $l172, $l173, $l177, l178, $l179, $l180, $l185, $l186, $l198, $l200, l201, $l202, $l203, l216, l218, $l219, l220, $l222, l236, l237, $l241, $l248, $l249, $l250, l251;
        java.lang.IllegalArgumentException $r4;
        sun.util.calendar.LocalGregorianCalendar $r6, $r14, $r17, $r20, $r26, $r29, $r30, $r33, $r39, $r42, $r58, $r60, $r66, $r74, $r76, $r78, $r87, $r90;
        java.util.TimeZone $r7, $r18, $r21, $r31, $r34, $r59;
        sun.util.calendar.Era $r9, $r47, $r50, $r62, $r64, $r67, $r69;
        boolean $z0, $z1, $z6, z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.AssertionError $r12, $r82, $r85;
        byte $b47, $b67, $b116, $b167, $b170, $b221, $b223;
        sun.util.calendar.CalendarDate r44;
        sun.util.calendar.Era[] $r46, $r48, $r49;
        sun.util.calendar.Gregorian $r57, $r61;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i1 != 0 goto label0;

        return;

     label0:
        if i0 < 0 goto label1;

        if i0 < 15 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r4;

     label2:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void complete()>();
        i2 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(i0);
        i3 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMaximum(int)>(i0);
        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label30;
            case 4: goto label41;
            case 5: goto label48;
            case 6: goto label52;
            case 7: goto label56;
            case 8: goto label61;
            case 9: goto label3;
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label3;
            case 13: goto label3;
            case 14: goto label3;
            default: goto label65;
        };

     label3:
        goto label65;

     label4:
        i4 = i3 + 1;
        i5 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(i0);
        $i12 = i5 + i1;
        i6 = $i12 % i4;
        if i6 >= 0 goto label5;

        i6 = i6 + i4;

     label5:
        $l13 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $i14 = i6 - i5;
        $i15 = 3600000 * $i14;
        $l16 = (long) $i15;
        $l17 = $l13 + $l16;
        r0.<java.util.JapaneseImperialCalendar: long time> = $l17;
        $r6 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l18 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $r7 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r1 = virtualinvoke $r6.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>($l18, $r7);
        $i19 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(5);
        $i20 = virtualinvoke r1.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        if $i19 == $i20 goto label8;

        $r8 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $r9 = virtualinvoke $r8.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        virtualinvoke r1.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setEra(sun.util.calendar.Era)>($r9);
        $i21 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(1);
        $i22 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(2);
        $i23 = $i22 + 1;
        $i24 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(5);
        virtualinvoke r1.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i21, $i23, $i24);
        if i0 != 10 goto label7;

        $z0 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z0 != 0 goto label6;

        $i25 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(9);
        if $i25 == 1 goto label6;

        $r12 = new java.lang.AssertionError;
        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();
        throw $r12;

     label6:
        virtualinvoke r1.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate addHours(int)>(12);

     label7:
        $r14 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l26 = virtualinvoke $r14.<sun.util.calendar.LocalGregorianCalendar: long getTime(sun.util.calendar.CalendarDate)>(r1);
        r0.<java.util.JapaneseImperialCalendar: long time> = $l26;

     label8:
        i7 = virtualinvoke r1.<sun.util.calendar.CalendarDate: int getHours()>();
        $i27 = i7 % i4;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(i0, $i27);
        if i0 != 10 goto label9;

        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(11, i7);
        goto label10;

     label9:
        $i28 = i7 / 12;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(9, $i28);
        $i29 = i7 % 12;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(10, $i29);

     label10:
        i8 = virtualinvoke r1.<sun.util.calendar.CalendarDate: int getZoneOffset()>();
        i9 = virtualinvoke r1.<sun.util.calendar.CalendarDate: int getDaylightSaving()>();
        $i30 = i8 - i9;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(15, $i30);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(16, i9);
        return;

     label11:
        i2 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getActualMinimum(int)>(i0);
        i3 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>(i0);
        goto label65;

     label12:
        $r15 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i31 = virtualinvoke $r15.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z1 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i31);
        if $z1 != 0 goto label23;

        $r16 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i32 = virtualinvoke $r16.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i33 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMaximum(int)>(1);
        if i32 != $i33 goto label16;

        $r17 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l34 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $r18 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r19 = virtualinvoke $r17.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>($l34, $r18);
        $r20 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r21 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r22 = virtualinvoke $r20.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(9223372036854775807L, $r21);
        $i35 = virtualinvoke r22.<sun.util.calendar.CalendarDate: int getMonth()>();
        i36 = $i35 - 1;
        $i37 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(i0);
        i38 = staticinvoke <java.util.JapaneseImperialCalendar: int getRolledValue(int,int,int,int)>($i37, i1, i2, i36);
        if i38 != i36 goto label15;

        virtualinvoke r19.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate addYear(int)>(-400);
        $i39 = i38 + 1;
        virtualinvoke r19.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setMonth(int)>($i39);
        $i40 = virtualinvoke r19.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        $i41 = virtualinvoke r22.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        if $i40 <= $i41 goto label13;

        $i42 = virtualinvoke r22.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        virtualinvoke r19.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i42);
        $r26 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r26.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r19);

     label13:
        $i43 = virtualinvoke r19.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        $i44 = virtualinvoke r22.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        if $i43 != $i44 goto label14;

        $l45 = virtualinvoke r19.<sun.util.calendar.CalendarDate: long getTimeOfDay()>();
        $l46 = virtualinvoke r22.<sun.util.calendar.CalendarDate: long getTimeOfDay()>();
        $b47 = $l45 cmp $l46;
        if $b47 <= 0 goto label14;

        $i48 = i38 + 1;
        virtualinvoke r19.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setMonth(int)>($i48);
        $i49 = virtualinvoke r22.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        $i50 = $i49 - 1;
        virtualinvoke r19.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i50);
        $r29 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r29.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r19);
        $i51 = virtualinvoke r19.<sun.util.calendar.CalendarDate: int getMonth()>();
        i38 = $i51 - 1;

     label14:
        $i52 = virtualinvoke r19.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i52);

     label15:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(2, i38);
        goto label22;

     label16:
        $i53 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(1);
        if i32 != $i53 goto label20;

        $r30 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l54 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $r31 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r32 = virtualinvoke $r30.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>($l54, $r31);
        $r33 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r34 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r35 = virtualinvoke $r33.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r34);
        $i55 = virtualinvoke r35.<sun.util.calendar.CalendarDate: int getMonth()>();
        i56 = $i55 - 1;
        $i57 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(i0);
        i58 = staticinvoke <java.util.JapaneseImperialCalendar: int getRolledValue(int,int,int,int)>($i57, i1, i56, i3);
        if i58 != i56 goto label19;

        virtualinvoke r32.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate addYear(int)>(400);
        $i59 = i58 + 1;
        virtualinvoke r32.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setMonth(int)>($i59);
        $i60 = virtualinvoke r32.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        $i61 = virtualinvoke r35.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        if $i60 >= $i61 goto label17;

        $i62 = virtualinvoke r35.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        virtualinvoke r32.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i62);
        $r39 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r39.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r32);

     label17:
        $i63 = virtualinvoke r32.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        $i64 = virtualinvoke r35.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        if $i63 != $i64 goto label18;

        $l65 = virtualinvoke r32.<sun.util.calendar.CalendarDate: long getTimeOfDay()>();
        $l66 = virtualinvoke r35.<sun.util.calendar.CalendarDate: long getTimeOfDay()>();
        $b67 = $l65 cmp $l66;
        if $b67 >= 0 goto label18;

        $i68 = i58 + 1;
        virtualinvoke r32.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setMonth(int)>($i68);
        $i69 = virtualinvoke r35.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        $i70 = $i69 + 1;
        virtualinvoke r32.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i70);
        $r42 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r42.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r32);
        $i71 = virtualinvoke r32.<sun.util.calendar.CalendarDate: int getMonth()>();
        i58 = $i71 - 1;

     label18:
        $i72 = virtualinvoke r32.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i72);

     label19:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(2, i58);
        goto label22;

     label20:
        $i73 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(2);
        $i74 = $i73 + i1;
        i75 = $i74 % 12;
        if i75 >= 0 goto label21;

        i75 = i75 + 12;

     label21:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(2, i75);
        i76 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int monthLength(int)>(i75);
        $i77 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(5);
        if $i77 <= i76 goto label22;

        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, i76);

     label22:
        goto label29;

     label23:
        $r43 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i78 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>($r43);
        r44 = null;
        $r45 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i79 = virtualinvoke $r45.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i79 != 1 goto label24;

        $r46 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r47 = $r46[i78];
        r44 = virtualinvoke $r47.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $i80 = virtualinvoke r44.<sun.util.calendar.CalendarDate: int getMonth()>();
        i2 = $i80 - 1;
        goto label25;

     label24:
        $r48 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i81 = lengthof $r48;
        $i82 = $i81 - 1;
        if i78 >= $i82 goto label25;

        $r49 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i83 = i78 + 1;
        $r50 = $r49[$i83];
        r44 = virtualinvoke $r50.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $i84 = virtualinvoke r44.<sun.util.calendar.CalendarDate: int getYear()>();
        $r51 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i85 = virtualinvoke $r51.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        if $i84 != $i85 goto label25;

        $i86 = virtualinvoke r44.<sun.util.calendar.CalendarDate: int getMonth()>();
        i3 = $i86 - 1;
        $i87 = virtualinvoke r44.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        if $i87 != 1 goto label25;

        i3 = i3 + -1;

     label25:
        if i2 != i3 goto label26;

        return;

     label26:
        $i88 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(i0);
        i89 = staticinvoke <java.util.JapaneseImperialCalendar: int getRolledValue(int,int,int,int)>($i88, i1, i2, i3);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(2, i89);
        if i89 != i2 goto label28;

        $i90 = virtualinvoke r44.<sun.util.calendar.CalendarDate: int getMonth()>();
        if $i90 != 1 goto label27;

        $i91 = virtualinvoke r44.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        if $i91 == 1 goto label29;

     label27:
        $r52 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i92 = virtualinvoke $r52.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        $i93 = virtualinvoke r44.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        if $i92 >= $i93 goto label29;

        $i94 = virtualinvoke r44.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i94);
        goto label29;

     label28:
        if i89 != i3 goto label29;

        $i95 = virtualinvoke r44.<sun.util.calendar.CalendarDate: int getMonth()>();
        $i96 = $i95 - 1;
        if $i96 != i89 goto label29;

        i97 = virtualinvoke r44.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        $r53 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i98 = virtualinvoke $r53.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        if $i98 < i97 goto label29;

        $i99 = i97 - 1;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i99);

     label29:
        return;

     label30:
        $r54 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i100 = virtualinvoke $r54.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        i3 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>(3);
        $i101 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(7);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(7, $i101);
        i102 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(3);
        i103 = i102 + i1;
        $r55 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i104 = virtualinvoke $r55.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z6 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i104);
        if $z6 != 0 goto label36;

        $r56 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i105 = virtualinvoke $r56.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i106 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMaximum(int)>(1);
        if i105 != $i106 goto label31;

        i3 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>(3);
        goto label32;

     label31:
        $i107 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(1);
        if i105 != $i107 goto label32;

        i2 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getActualMinimum(int)>(3);
        i3 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>(3);
        if i103 <= i2 goto label32;

        if i103 >= i3 goto label32;

        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(3, i103);
        return;

     label32:
        if i103 <= i2 goto label33;

        if i103 >= i3 goto label33;

        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(3, i103);
        return;

     label33:
        l108 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $i109 = i102 - i2;
        $i110 = 7 * $i109;
        $l111 = (long) $i110;
        l112 = l108 - $l111;
        $i113 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(1);
        if i105 == $i113 goto label34;

        $r57 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $i114 = virtualinvoke $r57.<sun.util.calendar.Gregorian: int getYearFromFixedDate(long)>(l112);
        if $i114 == i100 goto label35;

        i2 = i2 + 1;
        goto label35;

     label34:
        $r58 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r59 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r2 = virtualinvoke $r58.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r59);
        $r60 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l115 = virtualinvoke $r60.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r2);
        $b116 = l112 cmp $l115;
        if $b116 >= 0 goto label35;

        i2 = i2 + 1;

     label35:
        $i117 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(3);
        $i118 = i3 - $i117;
        $i119 = 7 * $i118;
        $l120 = (long) $i119;
        l121 = l108 + $l120;
        $r61 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $i122 = virtualinvoke $r61.<sun.util.calendar.Gregorian: int getYearFromFixedDate(long)>(l121);
        if $i122 == i100 goto label65;

        i3 = i3 + -1;
        goto label65;

     label36:
        l123 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $i124 = i102 - i2;
        $i125 = 7 * $i124;
        $l126 = (long) $i125;
        l127 = l123 - $l126;
        r3 = staticinvoke <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>(l127);
        $r62 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        $r63 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $r64 = virtualinvoke $r63.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        if $r62 != $r64 goto label37;

        $i128 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $r65 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i129 = virtualinvoke $r65.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i128 == $i129 goto label38;

     label37:
        i2 = i2 + 1;

     label38:
        $i130 = i3 - i102;
        $i131 = 7 * $i130;
        $l132 = (long) $i131;
        l133 = l123 + $l132;
        $r66 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r66.<sun.util.calendar.LocalGregorianCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>(r3, l133);
        $r67 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        $r68 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $r69 = virtualinvoke $r68.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        if $r67 != $r69 goto label39;

        $i134 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $r70 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i135 = virtualinvoke $r70.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i134 == $i135 goto label40;

     label39:
        i3 = i3 + -1;

     label40:
        $i136 = staticinvoke <java.util.JapaneseImperialCalendar: int getRolledValue(int,int,int,int)>(i102, i1, i2, i3);
        i137 = $i136 - 1;
        $i138 = i137 * 7;
        $l139 = (long) $i138;
        $l140 = l127 + $l139;
        r71 = staticinvoke <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>($l140);
        $i141 = virtualinvoke r71.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        $i142 = $i141 - 1;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(2, $i142);
        $i143 = virtualinvoke r71.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i143);
        return;

     label41:
        $r72 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i144 = virtualinvoke $r72.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        z7 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i144);
        $i145 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(7);
        $i146 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        i147 = $i145 - $i146;
        if i147 >= 0 goto label42;

        i147 = i147 + 7;

     label42:
        l148 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        if z7 == 0 goto label43;

        $r73 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        l149 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getFixedDateMonth1(sun.util.calendar.LocalGregorianCalendar$Date,long)>($r73, l148);
        i150 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int actualMonthLength()>();
        goto label44;

     label43:
        $i151 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(5);
        $l152 = (long) $i151;
        $l153 = l148 - $l152;
        l149 = $l153 + 1L;
        $r74 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r75 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i150 = virtualinvoke $r74.<sun.util.calendar.LocalGregorianCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>($r75);

     label44:
        $r76 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l154 = l149 + 6L;
        $i155 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        l156 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l154, $i155);
        $l157 = l156 - l149;
        $i158 = (int) $l157;
        $i159 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();
        if $i158 < $i159 goto label45;

        l156 = l156 - 7L;

     label45:
        i160 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>(i0);
        $i161 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(i0);
        $i162 = staticinvoke <java.util.JapaneseImperialCalendar: int getRolledValue(int,int,int,int)>($i161, i1, 1, i160);
        i10 = $i162 - 1;
        $i163 = i10 * 7;
        $l164 = (long) $i163;
        $l165 = l156 + $l164;
        $l166 = (long) i147;
        l11 = $l165 + $l166;
        $b167 = l11 cmp l149;
        if $b167 >= 0 goto label46;

        l11 = l149;
        goto label47;

     label46:
        $l168 = (long) i150;
        $l169 = l149 + $l168;
        $b170 = l11 cmp $l169;
        if $b170 < 0 goto label47;

        $l171 = (long) i150;
        $l172 = l149 + $l171;
        l11 = $l172 - 1L;

     label47:
        $l173 = l11 - l149;
        $i174 = (int) $l173;
        $i175 = $i174 + 1;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i175);
        return;

     label48:
        $r77 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i176 = virtualinvoke $r77.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z8 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i176);
        if $z8 != 0 goto label49;

        $r78 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r79 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i3 = virtualinvoke $r78.<sun.util.calendar.LocalGregorianCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>($r79);
        goto label65;

     label49:
        $r80 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $l177 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        l178 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getFixedDateMonth1(sun.util.calendar.LocalGregorianCalendar$Date,long)>($r80, $l177);
        $l179 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $l180 = $l179 - l178;
        $i181 = (int) $l180;
        $i182 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int actualMonthLength()>();
        $i183 = $i182 - 1;
        i184 = staticinvoke <java.util.JapaneseImperialCalendar: int getRolledValue(int,int,int,int)>($i181, i1, 0, $i183);
        $l185 = (long) i184;
        $l186 = l178 + $l185;
        r81 = staticinvoke <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>($l186);
        $z9 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z9 != 0 goto label51;

        $i187 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r81);
        $i188 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int internalGetEra()>();
        if $i187 != $i188 goto label50;

        $i189 = virtualinvoke r81.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i190 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(1);
        if $i189 != $i190 goto label50;

        $i191 = virtualinvoke r81.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        $i192 = $i191 - 1;
        $i193 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(2);
        if $i192 == $i193 goto label51;

     label50:
        $r82 = new java.lang.AssertionError;
        specialinvoke $r82.<java.lang.AssertionError: void <init>()>();
        throw $r82;

     label51:
        $i194 = virtualinvoke r81.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i194);
        return;

     label52:
        i3 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>(i0);
        $r83 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i195 = virtualinvoke $r83.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z10 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i195);
        if $z10 != 0 goto label53;

        goto label65;

     label53:
        $i196 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(6);
        i197 = staticinvoke <java.util.JapaneseImperialCalendar: int getRolledValue(int,int,int,int)>($i196, i1, i2, i3);
        $l198 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $i199 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(6);
        $l200 = (long) $i199;
        l201 = $l198 - $l200;
        $l202 = (long) i197;
        $l203 = l201 + $l202;
        r84 = staticinvoke <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>($l203);
        $z11 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z11 != 0 goto label55;

        $i204 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r84);
        $i205 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int internalGetEra()>();
        if $i204 != $i205 goto label54;

        $i206 = virtualinvoke r84.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i207 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(1);
        if $i206 == $i207 goto label55;

     label54:
        $r85 = new java.lang.AssertionError;
        specialinvoke $r85.<java.lang.AssertionError: void <init>()>();
        throw $r85;

     label55:
        $i208 = virtualinvoke r84.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        $i209 = $i208 - 1;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(2, $i209);
        $i210 = virtualinvoke r84.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i210);
        return;

     label56:
        $r86 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i211 = virtualinvoke $r86.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z12 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>(i211);
        if $z12 != 0 goto label57;

        $i212 = i211 - 1;
        $z13 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i212);
        if $z13 != 0 goto label57;

        i213 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(3);
        if i213 <= 1 goto label57;

        if i213 >= 52 goto label57;

        $i214 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(3);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(3, $i214);
        i3 = 7;
        goto label65;

     label57:
        i215 = i1 % 7;
        if i215 != 0 goto label58;

        return;

     label58:
        l216 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $r87 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $i217 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        l218 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>(l216, $i217);
        $l219 = (long) i215;
        l220 = l216 + $l219;
        $b221 = l220 cmp l218;
        if $b221 >= 0 goto label59;

        l220 = l220 + 7L;
        goto label60;

     label59:
        $l222 = l218 + 7L;
        $b223 = l220 cmp $l222;
        if $b223 < 0 goto label60;

        l220 = l220 - 7L;

     label60:
        r88 = staticinvoke <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>(l220);
        $i224 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r88);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(0, $i224);
        $i225 = virtualinvoke r88.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i226 = virtualinvoke r88.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        $i227 = $i226 - 1;
        $i228 = virtualinvoke r88.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int,int)>($i225, $i227, $i228);
        return;

     label61:
        i2 = 1;
        $r89 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i229 = virtualinvoke $r89.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z14 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i229);
        if $z14 != 0 goto label63;

        i230 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(5);
        $r90 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r91 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i231 = virtualinvoke $r90.<sun.util.calendar.LocalGregorianCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>($r91);
        i232 = i231 % 7;
        i3 = i231 / 7;
        $i233 = i230 - 1;
        i234 = $i233 % 7;
        if i234 >= i232 goto label62;

        i3 = i3 + 1;

     label62:
        $i235 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(7);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(7, $i235);
        goto label65;

     label63:
        l236 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $r92 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        l237 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getFixedDateMonth1(sun.util.calendar.LocalGregorianCalendar$Date,long)>($r92, l236);
        i238 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int actualMonthLength()>();
        i239 = i238 % 7;
        i240 = i238 / 7;
        $l241 = l236 - l237;
        $i242 = (int) $l241;
        i243 = $i242 % 7;
        if i243 >= i239 goto label64;

        i240 = i240 + 1;

     label64:
        $i244 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(i0);
        $i245 = staticinvoke <java.util.JapaneseImperialCalendar: int getRolledValue(int,int,int,int)>($i244, i1, i2, i240);
        i246 = $i245 - 1;
        $i247 = i246 * 7;
        $l248 = (long) $i247;
        $l249 = l237 + $l248;
        $l250 = (long) i243;
        l251 = $l249 + $l250;
        r93 = staticinvoke <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>(l251);
        $i252 = virtualinvoke r93.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(5, $i252);
        return;

     label65:
        $i253 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(i0);
        $i254 = staticinvoke <java.util.JapaneseImperialCalendar: int getRolledValue(int,int,int,int)>($i253, i1, i2, i3);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void set(int,int)>(i0, $i254);
        return;
    }

    public java.lang.String getDisplayName(int, int, java.util.Locale)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.util.Locale r1;
        java.util.ResourceBundle r2;
        java.lang.String r3, r4, $r9;
        java.lang.String[] r5;
        sun.util.calendar.Era r6;
        boolean $z0;
        sun.util.calendar.Era[] $r7, $r8;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.util.Locale;
        $z0 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean checkDisplayNameParams(int,int,int,int,java.util.Locale,int)>(i0, i1, 1, 2, r1, 647);
        if $z0 != 0 goto label0;

        return null;

     label0:
        if i0 != 1 goto label2;

        if i1 == 1 goto label1;

        $i3 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int get(int)>(1);
        if $i3 != 1 goto label1;

        $i4 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int get(int)>(0);
        if $i4 != 0 goto label2;

     label1:
        return null;

     label2:
        r2 = staticinvoke <sun.util.resources.LocaleData: java.util.ResourceBundle getDateFormatData(java.util.Locale)>(r1);
        r3 = null;
        r4 = specialinvoke r0.<java.util.JapaneseImperialCalendar: java.lang.String getKey(int,int)>(i0, i1);
        if r4 == null goto label8;

        r5 = virtualinvoke r2.<java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)>(r4);
        if i0 != 1 goto label3;

        $i5 = lengthof r5;
        if $i5 <= 0 goto label8;

        r3 = r5[0];
        goto label8;

     label3:
        i2 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int get(int)>(i0);
        if i0 != 0 goto label6;

        $i6 = lengthof r5;
        if i2 < $i6 goto label6;

        $r7 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i7 = lengthof $r7;
        if i2 >= $i7 goto label6;

        $r8 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        r6 = $r8[i2];
        if i1 != 1 goto label4;

        $r9 = virtualinvoke r6.<sun.util.calendar.Era: java.lang.String getAbbreviation()>();
        goto label5;

     label4:
        $r9 = virtualinvoke r6.<sun.util.calendar.Era: java.lang.String getName()>();

     label5:
        r3 = $r9;
        goto label8;

     label6:
        if i0 != 7 goto label7;

        i2 = i2 + -1;

     label7:
        r3 = r5[i2];

     label8:
        return r3;
    }

    public java.util.Map getDisplayNames(int, int, java.util.Locale)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1;
        java.util.Locale r1;
        java.util.Map r2, r3, $r4;
        boolean $z0;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.util.Locale;
        $z0 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean checkDisplayNameParams(int,int,int,int,java.util.Locale,int)>(i0, i1, 0, 2, r1, 647);
        if $z0 != 0 goto label0;

        return null;

     label0:
        if i1 != 0 goto label4;

        r2 = specialinvoke r0.<java.util.JapaneseImperialCalendar: java.util.Map getDisplayNamesImpl(int,int,java.util.Locale)>(i0, 1, r1);
        if i0 != 9 goto label1;

        return r2;

     label1:
        r3 = specialinvoke r0.<java.util.JapaneseImperialCalendar: java.util.Map getDisplayNamesImpl(int,int,java.util.Locale)>(i0, 2, r1);
        if r2 != null goto label2;

        return r3;

     label2:
        if r3 == null goto label3;

        interfaceinvoke r2.<java.util.Map: void putAll(java.util.Map)>(r3);

     label3:
        return r2;

     label4:
        $r4 = specialinvoke r0.<java.util.JapaneseImperialCalendar: java.util.Map getDisplayNamesImpl(int,int,java.util.Locale)>(i0, i1, r1);
        return $r4;
    }

    private java.util.Map getDisplayNamesImpl(int, int, java.util.Locale)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1, i3, $i4, $i6, $i7, $i8, $i9, i10, $i11, $i12;
        java.util.Locale r1;
        java.util.ResourceBundle r2;
        java.lang.String r3, r7, $r9, $r12, $r18;
        java.util.HashMap r4, $r8, $r21;
        java.lang.String[] r5;
        byte b2, $b5;
        sun.util.calendar.Era r6;
        java.lang.Integer $r10, $r13, $r19;
        sun.util.calendar.Era[] $r15, $r16, $r17;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.util.Locale;
        r2 = staticinvoke <sun.util.resources.LocaleData: java.util.ResourceBundle getDateFormatData(java.util.Locale)>(r1);
        r3 = specialinvoke r0.<java.util.JapaneseImperialCalendar: java.lang.String getKey(int,int)>(i0, i1);
        $r8 = new java.util.HashMap;
        specialinvoke $r8.<java.util.HashMap: void <init>()>();
        r4 = $r8;
        if r3 == null goto label8;

        r5 = virtualinvoke r2.<java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)>(r3);
        if i0 != 1 goto label0;

        $i4 = lengthof r5;
        if $i4 <= 0 goto label8;

        $r9 = r5[0];
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);
        goto label8;

     label0:
        if i0 != 7 goto label1;

        $b5 = 1;
        goto label2;

     label1:
        $b5 = 0;

     label2:
        b2 = $b5;
        i3 = 0;

     label3:
        $i6 = lengthof r5;
        if i3 >= $i6 goto label4;

        $r12 = r5[i3];
        $i7 = b2 + i3;
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);
        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);
        i3 = i3 + 1;
        goto label3;

     label4:
        if i0 != 0 goto label8;

        $i8 = lengthof r5;
        $r15 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i9 = lengthof $r15;
        if $i8 >= $i9 goto label8;

        i10 = lengthof r5;

     label5:
        $r16 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i11 = lengthof $r16;
        if i10 >= $i11 goto label8;

        $r17 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        r6 = $r17[i10];
        if i1 != 1 goto label6;

        $r18 = virtualinvoke r6.<sun.util.calendar.Era: java.lang.String getAbbreviation()>();
        goto label7;

     label6:
        $r18 = virtualinvoke r6.<sun.util.calendar.Era: java.lang.String getName()>();

     label7:
        r7 = $r18;
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);
        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r19);
        i10 = i10 + 1;
        goto label5;

     label8:
        $i12 = interfaceinvoke r4.<java.util.Map: int size()>();
        if $i12 <= 0 goto label9;

        $r21 = r4;
        goto label10;

     label9:
        $r21 = null;

     label10:
        return $r21;
    }

    private java.lang.String getKey(int, int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1, $i2;
        java.lang.Class $r1;
        java.lang.String r2, $r11, $r14, $r17;
        java.lang.StringBuilder r3, $r4, $r8;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = class "java/util/JapaneseImperialCalendar";
        r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r3 = $r4;
        tableswitch(i0)
        {
            case 0: goto label0;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label10;
            case 4: goto label10;
            case 5: goto label10;
            case 6: goto label10;
            case 7: goto label6;
            case 8: goto label10;
            case 9: goto label9;
            default: goto label10;
        };

     label0:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        if i1 != 1 goto label1;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".short");

     label1:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".Eras");
        goto label10;

     label2:
        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".FirstYear");
        goto label10;

     label3:
        if i1 != 1 goto label4;

        $r11 = "MonthAbbreviations";
        goto label5;

     label4:
        $r11 = "MonthNames";

     label5:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        goto label10;

     label6:
        if i1 != 1 goto label7;

        $r14 = "DayAbbreviations";
        goto label8;

     label7:
        $r14 = "DayNames";

     label8:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        goto label10;

     label9:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AmPmMarkers");

     label10:
        $i2 = virtualinvoke r3.<java.lang.StringBuilder: int length()>();
        if $i2 <= 0 goto label11;

        $r17 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label12;

     label11:
        $r17 = null;

     label12:
        return $r17;
    }

    public int getMinimum(int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        $r1 = <java.util.JapaneseImperialCalendar: int[] MIN_VALUES>;
        $i1 = $r1[i0];
        return $i1;
    }

    public int getMaximum(int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, $i1, $i2, $i3, $i4;
        sun.util.calendar.LocalGregorianCalendar$Date r1;
        sun.util.calendar.LocalGregorianCalendar $r2;
        java.util.TimeZone $r3;
        int[] $r4, $r5;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        lookupswitch(i0)
        {
            case 1: goto label0;
            default: goto label1;
        };

     label0:
        $r2 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r3 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r1 = virtualinvoke $r2.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(9223372036854775807L, $r3);
        $r4 = <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES>;
        $i1 = $r4[1];
        $i2 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);
        return $i3;

     label1:
        $r5 = <java.util.JapaneseImperialCalendar: int[] MAX_VALUES>;
        $i4 = $r5[i0];
        return $i4;
    }

    public int getGreatestMinimum(int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        if i0 != 1 goto label0;

        $i1 = 1;
        goto label1;

     label0:
        $r1 = <java.util.JapaneseImperialCalendar: int[] MIN_VALUES>;
        $i1 = $r1[i0];

     label1:
        return $i1;
    }

    public int getLeastMaximum(int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, $i1, $i2, $i3, $i4;
        int[] $r1, $r2;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        lookupswitch(i0)
        {
            case 1: goto label0;
            default: goto label1;
        };

     label0:
        $r1 = <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES>;
        $i1 = $r1[1];
        $i2 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMaximum(int)>(1);
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);
        return $i3;

     label1:
        $r2 = <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES>;
        $i4 = $r2[i0];
        return $i4;
    }

    public int getActualMinimum(int)
    {
        java.util.JapaneseImperialCalendar r0, r1;
        int i0, i1, i2, i4, i6, $i8, $i10, $i17, $i19, $i20, $i21, $i22, $i24, $i25;
        sun.util.calendar.LocalGregorianCalendar$Date r2, r3, r16, r24, r27;
        long l3, l5, l7, $l9, $l11, $l12, $l14, $l15, l18, l23, $l26, $l29, $l30;
        boolean $z0, $z2, $z3, $z4;
        sun.util.calendar.LocalGregorianCalendar $r4, $r9, $r12, $r14, $r18, $r22, $r25, $r29, $r33, $r34, $r35;
        java.util.TimeZone $r5, $r8, $r10, $r15, $r21, $r23, $r26;
        sun.util.calendar.Era[] $r6, $r19;
        sun.util.calendar.Era $r7, $r20, $r30;
        java.lang.AssertionError $r13;
        byte $b13, $b16, $b27, $b28, $b31;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        $z0 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(14, i0);
        if $z0 != 0 goto label0;

        $i8 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(i0);
        return $i8;

     label0:
        i1 = 0;
        r1 = specialinvoke r0.<java.util.JapaneseImperialCalendar: java.util.JapaneseImperialCalendar getNormalizedCalendar()>();
        $r4 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l9 = virtualinvoke r1.<java.util.JapaneseImperialCalendar: long getTimeInMillis()>();
        $r5 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r2 = virtualinvoke $r4.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>($l9, $r5);
        i2 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r2);
        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label7;
            case 3: goto label9;
            default: goto label11;
        };

     label1:
        if i2 <= 0 goto label4;

        i1 = 1;
        $r6 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r7 = $r6[i2];
        $r8 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        l3 = virtualinvoke $r7.<sun.util.calendar.Era: long getSince(java.util.TimeZone)>($r8);
        $r9 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r10 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r3 = virtualinvoke $r9.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(l3, $r10);
        $i10 = virtualinvoke r3.<sun.util.calendar.CalendarDate: int getYear()>();
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setYear(int)>($i10);
        $r12 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r12.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r2);
        $z2 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: boolean isLeapYear()>();
        $z4 = virtualinvoke r3.<sun.util.calendar.CalendarDate: boolean isLeapYear()>();
        if $z3 == $z4 goto label2;

        $r13 = new java.lang.AssertionError;
        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();
        throw $r13;

     label2:
        $l11 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getYearOffsetInMillis(sun.util.calendar.CalendarDate)>(r2);
        $l12 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getYearOffsetInMillis(sun.util.calendar.CalendarDate)>(r3);
        $b13 = $l11 cmp $l12;
        if $b13 >= 0 goto label3;

        i1 = i1 + 1;

     label3:
        goto label11;

     label4:
        i1 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(i0);
        $r14 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r15 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r16 = virtualinvoke $r14.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r15);
        i4 = virtualinvoke r16.<sun.util.calendar.CalendarDate: int getYear()>();
        if i4 <= 400 goto label5;

        i4 = i4 + -400;

     label5:
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setYear(int)>(i4);
        $r18 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r18.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r2);
        $l14 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getYearOffsetInMillis(sun.util.calendar.CalendarDate)>(r2);
        $l15 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getYearOffsetInMillis(sun.util.calendar.CalendarDate)>(r16);
        $b16 = $l14 cmp $l15;
        if $b16 >= 0 goto label6;

        i1 = i1 + 1;

     label6:
        goto label11;

     label7:
        if i2 <= 1 goto label11;

        $i17 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i17 != 1 goto label11;

        $r19 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r20 = $r19[i2];
        $r21 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        l18 = virtualinvoke $r20.<sun.util.calendar.Era: long getSince(java.util.TimeZone)>($r21);
        $r22 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r23 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r24 = virtualinvoke $r22.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(l18, $r23);
        $i19 = virtualinvoke r24.<sun.util.calendar.CalendarDate: int getMonth()>();
        i1 = $i19 - 1;
        $i20 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        $i21 = virtualinvoke r24.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        if $i20 >= $i21 goto label8;

        i1 = i1 + 1;

     label8:
        goto label11;

     label9:
        i1 = 1;
        $r25 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r26 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r27 = virtualinvoke $r25.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r26);
        virtualinvoke r27.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate addYear(int)>(400);
        $r29 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r29.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r27);
        $r30 = virtualinvoke r27.<sun.util.calendar.CalendarDate: sun.util.calendar.Era getEra()>();
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setEra(sun.util.calendar.Era)>($r30);
        $i22 = virtualinvoke r27.<sun.util.calendar.CalendarDate: int getYear()>();
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setYear(int)>($i22);
        $r33 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r33.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r2);
        $r34 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l23 = virtualinvoke $r34.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r27);
        $r35 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l5 = virtualinvoke $r35.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r2);
        i6 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>(l23, l5);
        $i24 = i6 - 1;
        $i25 = 7 * $i24;
        $l26 = (long) $i25;
        l7 = l5 - $l26;
        $b27 = l7 cmp l23;
        if $b27 < 0 goto label10;

        $b28 = l7 cmp l23;
        if $b28 != 0 goto label11;

        $l29 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: long getTimeOfDay()>();
        $l30 = virtualinvoke r27.<sun.util.calendar.CalendarDate: long getTimeOfDay()>();
        $b31 = $l29 cmp $l30;
        if $b31 >= 0 goto label11;

     label10:
        i1 = i1 + 1;

     label11:
        return i1;
    }

    public int getActualMaximum(int)
    {
        java.util.JapaneseImperialCalendar r0, r1;
        int i0, i3, i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i19, $i20, $i21, $i22, $i23, i24, $i25, $i26, $i29, $i35, $i36, $i40, $i41, $i42, $i44, $i45, $i46, $i49, $i50, $i51, $i52, $i56, $i58, $i59, i60, $i61, i62, $i63, $i64, i65, i66, $i67, $i68, $i69, $i70, i71, i72, $i73, i74, i75, $i76, $i77, i78, $i80, i84, i85, i86, i87, i88, $i89, i91, $i92, $i93, $i94, $i95;
        sun.util.calendar.LocalGregorianCalendar$Date r2, r3, r11, r27, r33, r43, r50, r68, r85, r89;
        byte b2, $b17, $b30, $b100;
        long l4, l5, l6, l7, l8, $l18, l27, l28, $l31, $l32, $l33, $l34, l37, l38, $l39, $l43, l47, l48, l53, l54, $l55, $l57, l79, $l81, $l82, l83, $l90, $l96, $l97, $l98, $l99;
        boolean $z0, $z1, $z2, $z3, $z5, $z8;
        sun.util.calendar.Era[] $r4, $r15, $r86, $r92;
        java.lang.AssertionError $r5, $r16;
        long[] $r6, $r17;
        java.lang.Object $r7, $r65, $r78;
        sun.util.calendar.LocalGregorianCalendar $r8, $r9, $r14, $r25, $r30, $r31, $r34, $r38, $r39, $r40, $r41, $r46, $r48, $r52, $r56, $r57, $r58, $r59, $r66, $r77, $r80, $r82, $r83, $r87, $r91, $r97;
        java.util.TimeZone $r10, $r19, $r26, $r32, $r42, $r49, $r61, $r67, $r72, $r84, $r88, $r94, $r95;
        sun.util.calendar.Era $r12, $r13, $r28, $r29, $r44, $r45, $r47, $r53, $r69, $r70, $r93;
        sun.util.calendar.Gregorian $r18, $r22, $r24, $r60, $r64, $r71, $r75, $r76;
        sun.util.calendar.Gregorian$Date r20, r62, r73;
        sun.util.calendar.CalendarDate $r36;
        sun.util.calendar.BaseCalendar$Date r79;
        java.lang.ArrayIndexOutOfBoundsException $r98;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        $i10 = 1 << i0;
        $i11 = 130689 & $i10;
        if $i11 == 0 goto label0;

        $i12 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMaximum(int)>(i0);
        return $i12;

     label0:
        r1 = specialinvoke r0.<java.util.JapaneseImperialCalendar: java.util.JapaneseImperialCalendar getNormalizedCalendar()>();
        r2 = r1.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        b2 = -1;
        tableswitch(i0)
        {
            case 1: goto label34;
            case 2: goto label1;
            case 3: goto label15;
            case 4: goto label25;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label38;
            case 8: goto label32;
            default: goto label38;
        };

     label1:
        i13 = 11;
        $i14 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z0 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i14);
        if $z0 == 0 goto label4;

        i3 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r2);
        $i15 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i15 == 1 goto label2;

        i3 = i3 + 1;
        $z1 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z1 != 0 goto label2;

        $r4 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i16 = lengthof $r4;
        if i3 < $i16 goto label2;

        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        throw $r5;

     label2:
        $r6 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;
        l4 = $r6[i3];
        l5 = r1.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $b17 = l5 cmp l4;
        if $b17 >= 0 goto label3;

        $r7 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: java.lang.Object clone()>();
        r3 = (sun.util.calendar.LocalGregorianCalendar$Date) $r7;
        $r8 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l18 = l4 - 1L;
        virtualinvoke $r8.<sun.util.calendar.LocalGregorianCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>(r3, $l18);
        $i19 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        i13 = $i19 - 1;

     label3:
        goto label39;

     label4:
        $r9 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r10 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r11 = virtualinvoke $r9.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(9223372036854775807L, $r10);
        $r12 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        $r13 = virtualinvoke r11.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        if $r12 != $r13 goto label5;

        $i20 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i21 = virtualinvoke r11.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i20 != $i21 goto label5;

        $i22 = virtualinvoke r11.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        i13 = $i22 - 1;

     label5:
        goto label39;

     label6:
        $r14 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        i13 = virtualinvoke $r14.<sun.util.calendar.LocalGregorianCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>(r2);
        goto label39;

     label7:
        $i23 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z2 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i23);
        if $z2 == 0 goto label11;

        i24 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r2);
        $i25 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i25 == 1 goto label8;

        i24 = i24 + 1;
        $z3 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z3 != 0 goto label8;

        $r15 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i26 = lengthof $r15;
        if i24 < $i26 goto label8;

        $r16 = new java.lang.AssertionError;
        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();
        throw $r16;

     label8:
        $r17 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;
        l27 = $r17[i24];
        l28 = r1.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $r18 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $r19 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;
        r20 = virtualinvoke $r18.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>($r19);
        $i29 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        virtualinvoke r20.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i29, 1, 1);
        $b30 = l28 cmp l27;
        if $b30 >= 0 goto label9;

        $r22 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $l31 = virtualinvoke $r22.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(r20);
        $l32 = l27 - $l31;
        i13 = (int) $l32;
        goto label10;

     label9:
        virtualinvoke r20.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate addYear(int)>(1);
        $r24 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $l33 = virtualinvoke $r24.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(r20);
        $l34 = $l33 - l27;
        i13 = (int) $l34;

     label10:
        goto label39;

     label11:
        $r25 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r26 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r27 = virtualinvoke $r25.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(9223372036854775807L, $r26);
        $r28 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        $r29 = virtualinvoke r27.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        if $r28 != $r29 goto label12;

        $i35 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i36 = virtualinvoke r27.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i35 != $i36 goto label12;

        $r30 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l37 = virtualinvoke $r30.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r27);
        l38 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar$Date,long)>(r27, l37);
        $l39 = l37 - l38;
        $i40 = (int) $l39;
        i13 = $i40 + 1;
        goto label14;

     label12:
        $i41 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i42 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(1);
        if $i41 != $i42 goto label13;

        $r31 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r32 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r33 = virtualinvoke $r31.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r32);
        $r34 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l6 = virtualinvoke $r34.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r33);
        virtualinvoke r33.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate addYear(int)>(1);
        $r36 = virtualinvoke r33.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setMonth(int)>(1);
        virtualinvoke $r36.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);
        $r38 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r38.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r33);
        $r39 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l7 = virtualinvoke $r39.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r33);
        $l43 = l7 - l6;
        i13 = (int) $l43;
        goto label14;

     label13:
        $r40 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        i13 = virtualinvoke $r40.<sun.util.calendar.LocalGregorianCalendar: int getYearLength(sun.util.calendar.CalendarDate)>(r2);

     label14:
        goto label39;

     label15:
        $i44 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z5 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i44);
        if $z5 != 0 goto label22;

        $r41 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r42 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r43 = virtualinvoke $r41.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(9223372036854775807L, $r42);
        $r44 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        $r45 = virtualinvoke r43.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        if $r44 != $r45 goto label16;

        $i45 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i46 = virtualinvoke r43.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i45 != $i46 goto label16;

        $r46 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l47 = virtualinvoke $r46.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r43);
        l48 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar$Date,long)>(r43, l47);
        i13 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>(l48, l47);
        goto label39;

     label16:
        $r47 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        if $r47 != null goto label18;

        $i49 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i50 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(1);
        if $i49 != $i50 goto label18;

        $r48 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r49 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r50 = virtualinvoke $r48.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r49);
        virtualinvoke r50.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate addYear(int)>(400);
        $r52 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r52.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r50);
        $r53 = virtualinvoke r50.<sun.util.calendar.CalendarDate: sun.util.calendar.Era getEra()>();
        virtualinvoke r43.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setEra(sun.util.calendar.Era)>($r53);
        $i51 = virtualinvoke r50.<sun.util.calendar.CalendarDate: int getYear()>();
        $i52 = $i51 + 1;
        virtualinvoke r43.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDate(int,int,int)>($i52, 1, 1);
        $r56 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r56.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r43);
        $r57 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l53 = virtualinvoke $r57.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r50);
        $r58 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l54 = virtualinvoke $r58.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r43);
        $r59 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l55 = l54 + 6L;
        $i56 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        l8 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l55, $i56);
        $l57 = l8 - l54;
        i9 = (int) $l57;
        $i58 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();
        if i9 < $i58 goto label17;

        l8 = l8 - 7L;

     label17:
        i13 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>(l53, l8);
        goto label39;

     label18:
        $r60 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $r61 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;
        r62 = virtualinvoke $r60.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>($r61);
        $i59 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        virtualinvoke r62.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i59, 1, 1);
        $r64 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        i60 = virtualinvoke $r64.<sun.util.calendar.Gregorian: int getDayOfWeek(sun.util.calendar.CalendarDate)>(r62);
        $i61 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        i62 = i60 - $i61;
        if i62 >= 0 goto label19;

        i62 = i62 + 7;

     label19:
        i13 = 52;
        $i63 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();
        $i64 = i62 + $i63;
        i65 = $i64 - 1;
        if i65 == 6 goto label20;

        $z8 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: boolean isLeapYear()>();
        if $z8 == 0 goto label21;

        if i65 == 5 goto label20;

        if i65 != 12 goto label21;

     label20:
        i13 = i13 + 1;

     label21:
        goto label39;

     label22:
        if r1 != r0 goto label23;

        $r65 = virtualinvoke r1.<java.util.JapaneseImperialCalendar: java.lang.Object clone()>();
        r1 = (java.util.JapaneseImperialCalendar) $r65;

     label23:
        i66 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>(6);
        virtualinvoke r1.<java.util.JapaneseImperialCalendar: void set(int,int)>(6, i66);
        i13 = virtualinvoke r1.<java.util.JapaneseImperialCalendar: int get(int)>(3);
        if i13 != 1 goto label24;

        if i66 <= 7 goto label24;

        virtualinvoke r1.<java.util.JapaneseImperialCalendar: void add(int,int)>(3, -1);
        i13 = virtualinvoke r1.<java.util.JapaneseImperialCalendar: int get(int)>(3);

     label24:
        goto label39;

     label25:
        $r66 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r67 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r68 = virtualinvoke $r66.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(9223372036854775807L, $r67);
        $r69 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        $r70 = virtualinvoke r68.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        if $r69 != $r70 goto label26;

        $i67 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i68 = virtualinvoke r68.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i67 == $i68 goto label30;

     label26:
        $r71 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $r72 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;
        r73 = virtualinvoke $r71.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>($r72);
        $i69 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $i70 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        virtualinvoke r73.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i69, $i70, 1);
        $r75 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        i71 = virtualinvoke $r75.<sun.util.calendar.Gregorian: int getDayOfWeek(sun.util.calendar.CalendarDate)>(r73);
        $r76 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        i72 = virtualinvoke $r76.<sun.util.calendar.Gregorian: int getMonthLength(sun.util.calendar.CalendarDate)>(r73);
        $i73 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        i74 = i71 - $i73;
        if i74 >= 0 goto label27;

        i74 = i74 + 7;

     label27:
        i75 = 7 - i74;
        i13 = 3;
        $i76 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();
        if i75 < $i76 goto label28;

        i13 = i13 + 1;

     label28:
        $i77 = i75 + 21;
        i78 = i72 - $i77;
        if i78 <= 0 goto label29;

        i13 = i13 + 1;
        if i78 <= 7 goto label29;

        i13 = i13 + 1;

     label29:
        goto label31;

     label30:
        $r77 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l79 = virtualinvoke $r77.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r68);
        $i80 = virtualinvoke r68.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        $l81 = (long) $i80;
        $l82 = l79 - $l81;
        l83 = $l82 + 1L;
        i13 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>(l83, l79);

     label31:
        goto label39;

     label32:
        i84 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfWeek()>();
        $r78 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: java.lang.Object clone()>();
        r79 = (sun.util.calendar.BaseCalendar$Date) $r78;
        $r80 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        i85 = virtualinvoke $r80.<sun.util.calendar.LocalGregorianCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>(r79);
        virtualinvoke r79.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);
        $r82 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r82.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r79);
        i86 = virtualinvoke r79.<sun.util.calendar.BaseCalendar$Date: int getDayOfWeek()>();
        i87 = i84 - i86;
        if i87 >= 0 goto label33;

        i87 = i87 + 7;

     label33:
        i88 = i85 - i87;
        $i89 = i88 + 6;
        i13 = $i89 / 7;
        goto label39;

     label34:
        $r83 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l90 = virtualinvoke r1.<java.util.JapaneseImperialCalendar: long getTimeInMillis()>();
        $r84 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r85 = virtualinvoke $r83.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>($l90, $r84);
        i91 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r2);
        $r86 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i92 = lengthof $r86;
        $i93 = $i92 - 1;
        if i91 != $i93 goto label35;

        $r87 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r88 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r89 = virtualinvoke $r87.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(9223372036854775807L, $r88);
        i13 = virtualinvoke r89.<sun.util.calendar.CalendarDate: int getYear()>();
        if i13 <= 400 goto label36;

        $i94 = i13 - 400;
        virtualinvoke r85.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setYear(int)>($i94);
        goto label36;

     label35:
        $r91 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r92 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i95 = i91 + 1;
        $r93 = $r92[$i95];
        $r94 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        $l96 = virtualinvoke $r93.<sun.util.calendar.Era: long getSince(java.util.TimeZone)>($r94);
        $l97 = $l96 - 1L;
        $r95 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r89 = virtualinvoke $r91.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>($l97, $r95);
        i13 = virtualinvoke r89.<sun.util.calendar.CalendarDate: int getYear()>();
        virtualinvoke r85.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setYear(int)>(i13);

     label36:
        $r97 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r97.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r85);
        $l98 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getYearOffsetInMillis(sun.util.calendar.CalendarDate)>(r85);
        $l99 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getYearOffsetInMillis(sun.util.calendar.CalendarDate)>(r89);
        $b100 = $l98 cmp $l99;
        if $b100 <= 0 goto label37;

        i13 = i13 + -1;

     label37:
        goto label39;

     label38:
        $r98 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r98.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r98;

     label39:
        return i13;
    }

    private final long getYearOffsetInMillis(sun.util.calendar.CalendarDate)
    {
        java.util.JapaneseImperialCalendar r0;
        sun.util.calendar.CalendarDate r1;
        sun.util.calendar.LocalGregorianCalendar $r2;
        long l0, $l1, $l2, $l3, $l4, $l6, $l7;
        int $i5;

        r0 := @this: java.util.JapaneseImperialCalendar;
        r1 := @parameter0: sun.util.calendar.CalendarDate;
        $r2 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l1 = virtualinvoke $r2.<sun.util.calendar.LocalGregorianCalendar: long getDayOfYear(sun.util.calendar.CalendarDate)>(r1);
        $l2 = $l1 - 1L;
        l0 = $l2 * 86400000L;
        $l3 = virtualinvoke r1.<sun.util.calendar.CalendarDate: long getTimeOfDay()>();
        $l4 = l0 + $l3;
        $i5 = virtualinvoke r1.<sun.util.calendar.CalendarDate: int getZoneOffset()>();
        $l6 = (long) $i5;
        $l7 = $l4 - $l6;
        return $l7;
    }

    public java.lang.Object clone()
    {
        java.util.JapaneseImperialCalendar r0, r1;
        java.lang.Object $r2, $r4;
        sun.util.calendar.LocalGregorianCalendar$Date $r3, $r5;

        r0 := @this: java.util.JapaneseImperialCalendar;
        $r2 = specialinvoke r0.<java.util.Calendar: java.lang.Object clone()>();
        r1 = (java.util.JapaneseImperialCalendar) $r2;
        $r3 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $r4 = virtualinvoke $r3.<sun.util.calendar.LocalGregorianCalendar$Date: java.lang.Object clone()>();
        $r5 = (sun.util.calendar.LocalGregorianCalendar$Date) $r4;
        r1.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate> = $r5;
        r1.<java.util.JapaneseImperialCalendar: int[] originalFields> = null;
        r1.<java.util.JapaneseImperialCalendar: int[] zoneOffsets> = null;
        return r1;
    }

    public java.util.TimeZone getTimeZone()
    {
        java.util.JapaneseImperialCalendar r0;
        java.util.TimeZone r1;
        sun.util.calendar.LocalGregorianCalendar$Date $r2;

        r0 := @this: java.util.JapaneseImperialCalendar;
        r1 = specialinvoke r0.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
        $r2 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        virtualinvoke $r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setZone(java.util.TimeZone)>(r1);
        return r1;
    }

    public void setTimeZone(java.util.TimeZone)
    {
        java.util.JapaneseImperialCalendar r0;
        java.util.TimeZone r1;
        sun.util.calendar.LocalGregorianCalendar$Date $r2;

        r0 := @this: java.util.JapaneseImperialCalendar;
        r1 := @parameter0: java.util.TimeZone;
        specialinvoke r0.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(r1);
        $r2 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        virtualinvoke $r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setZone(java.util.TimeZone)>(r1);
        return;
    }

    protected void computeFields()
    {
        java.util.JapaneseImperialCalendar r0;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i5, $i6;
        long $l3;
        byte $b4;
        java.lang.AssertionError $r1;

        r0 := @this: java.util.JapaneseImperialCalendar;
        z0 = 0;
        $z1 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isPartiallyNormalized()>();
        if $z1 == 0 goto label2;

        i1 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getSetStateFields()>();
        $i2 = i1 ^ -1;
        i0 = $i2 & 131071;
        if i0 != 0 goto label0;

        $l3 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $b4 = $l3 cmp -9223372036854775808L;
        if $b4 != 0 goto label1;

     label0:
        $i5 = i1 & 98304;
        $i6 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int computeFields(int,int)>(i0, $i5);
        i1 = i1 | $i6;
        $z2 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z2 != 0 goto label1;

        if i1 == 131071 goto label1;

        $r1 = new java.lang.AssertionError;
        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();
        throw $r1;

     label1:
        goto label3;

     label2:
        i1 = 131071;
        specialinvoke r0.<java.util.JapaneseImperialCalendar: int computeFields(int,int)>(i1, 0);

     label3:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void setFieldsComputed(int)>(i1);
        return;
    }

    private int computeFields(int, int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1, i2, i4, i5, i6, i7, i8, i9, i10, i11, i13, i14, i18, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i34, i35, $i46, $i47, $i48, $i49, $i50, $i51, $i52, i53, $i54, $i55, $i56, $i57, $i58, $i59, i60, $i61, $i63, $i64, $i66, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i88, i91, $i92, $i95, $i96, $i97, $i98, $i100, i103, $i104, $i107;
        java.util.TimeZone r1, $r30;
        long l3, l12, l15, l16, l17, $l19, $l20, $l28, $l29, $l30, l31, $l32, $l33, $l36, $l38, $l39, $l40, $l41, l42, $l43, $l62, $l65, $l67, $l68, $l69, $l70, $l71, $l72, l73, l86, $l87, l89, $l90, $l93, $l99, l101, $l102, $l105;
        sun.util.calendar.LocalGregorianCalendar$Date r2, r3, $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r33, $r34, $r35, $r46, $r53, $r55, r57, $r58;
        sun.util.calendar.CalendarDate r4, $r38, $r41, r48, $r49, $r61, r66;
        int[] $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r23, $r24, $r28;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z7, $z9;
        sun.util.calendar.ZoneInfo $r7;
        byte $b37, $b44, $b45, $b94, $b106;
        sun.util.calendar.LocalGregorianCalendar $r16, $r29, $r31, $r32, $r40, $r43, $r44, $r51, $r52, $r54, $r60, $r63, $r71, $r72, $r73;
        sun.util.calendar.Era[] $r36, $r45, $r64, $r67;
        sun.util.calendar.Era $r37, $r47, $r65, $r68;
        java.lang.Object $r56;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 = 0;
        r1 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        $r5 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        if $r5 != null goto label0;

        $r6 = newarray (int)[2];
        r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets> = $r6;

     label0:
        if i1 == 98304 goto label2;

        $z0 = r1 instanceof sun.util.calendar.ZoneInfo;
        if $z0 == 0 goto label1;

        $r7 = (sun.util.calendar.ZoneInfo) r1;
        $l19 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $r8 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        i2 = virtualinvoke $r7.<sun.util.calendar.ZoneInfo: int getOffsets(long,int[])>($l19, $r8);
        goto label2;

     label1:
        $l20 = r0.<java.util.JapaneseImperialCalendar: long time>;
        i2 = virtualinvoke r1.<java.util.TimeZone: int getOffset(long)>($l20);
        $r9 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i21 = virtualinvoke r1.<java.util.TimeZone: int getRawOffset()>();
        $r9[0] = $i21;
        $r10 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $r11 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i22 = $r11[0];
        $i23 = i2 - $i22;
        $r10[1] = $i23;

     label2:
        if i1 == 0 goto label5;

        $z1 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i1, 15);
        if $z1 == 0 goto label3;

        $r12 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i24 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(15);
        $r12[0] = $i24;

     label3:
        $z2 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i1, 16);
        if $z2 == 0 goto label4;

        $r13 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i25 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(16);
        $r13[1] = $i25;

     label4:
        $r14 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i26 = $r14[0];
        $r15 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i27 = $r15[1];
        i2 = $i26 + $i27;

     label5:
        $l28 = (long) i2;
        l3 = $l28 / 86400000L;
        i4 = i2 % 86400000;
        $l29 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $l30 = $l29 / 86400000L;
        l31 = l3 + $l30;
        $l32 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $l33 = $l32 % 86400000L;
        $i34 = (int) $l33;
        i35 = i4 + $i34;
        $l36 = (long) i35;
        $b37 = $l36 cmp 86400000L;
        if $b37 < 0 goto label6;

        $l38 = (long) i35;
        $l39 = $l38 - 86400000L;
        i35 = (int) $l39;
        l31 = l31 + 1L;
        goto label7;

     label6:
        if i35 >= 0 goto label7;

        $l40 = (long) i35;
        $l41 = $l40 + 86400000L;
        i35 = (int) $l41;
        l31 = l31 - 1L;
        goto label6;

     label7:
        l42 = l31 + 719163L;
        $l43 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $b44 = l42 cmp $l43;
        if $b44 != 0 goto label8;

        $b45 = l42 cmp 0L;
        if $b45 >= 0 goto label9;

     label8:
        $r16 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r17 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        virtualinvoke $r16.<sun.util.calendar.LocalGregorianCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>($r17, l42);
        r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate> = l42;

     label9:
        $r18 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i5 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>($r18);
        $r19 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i6 = virtualinvoke $r19.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(0, i5);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(1, i6);
        i7 = i0 | 3;
        $r20 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i46 = virtualinvoke $r20.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        i8 = $i46 - 1;
        $r21 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i9 = virtualinvoke $r21.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        $i47 = i0 & 164;
        if $i47 == 0 goto label10;

        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(2, i8);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(5, i9);
        $r22 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i48 = virtualinvoke $r22.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfWeek()>();
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(7, $i48);
        i7 = i7 | 164;

     label10:
        $i49 = i0 & 32256;
        if $i49 == 0 goto label13;

        if i35 == 0 goto label11;

        i10 = i35 / 3600000;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(11, i10);
        $i50 = i10 / 12;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(9, $i50);
        $i51 = i10 % 12;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(10, $i51);
        i11 = i35 % 3600000;
        $i52 = i11 / 60000;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(12, $i52);
        i53 = i11 % 60000;
        $i54 = i53 / 1000;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(13, $i54);
        $i55 = i53 % 1000;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(14, $i55);
        goto label12;

     label11:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(11, 0);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(9, 0);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(10, 0);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(12, 0);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(13, 0);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(14, 0);

     label12:
        i7 = i7 | 32256;

     label13:
        $i56 = i0 & 98304;
        if $i56 == 0 goto label14;

        $r23 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i57 = $r23[0];
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(15, $i57);
        $r24 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i58 = $r24[1];
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(16, $i58);
        i7 = i7 | 98304;

     label14:
        $i59 = i0 & 344;
        if $i59 == 0 goto label34;

        $r25 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i60 = virtualinvoke $r25.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $r26 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i61 = virtualinvoke $r26.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        z3 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i61);
        if z3 == 0 goto label15;

        $r27 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        l12 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar$Date,long)>($r27, l42);
        $l62 = l42 - l12;
        $i63 = (int) $l62;
        i13 = $i63 + 1;
        goto label17;

     label15:
        $r28 = <java.util.JapaneseImperialCalendar: int[] MIN_VALUES>;
        $i64 = $r28[1];
        if i60 != $i64 goto label16;

        $r29 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r30 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r2 = virtualinvoke $r29.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r30);
        $r31 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l12 = virtualinvoke $r31.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r2);
        $l65 = l42 - l12;
        $i66 = (int) $l65;
        i13 = $i66 + 1;
        goto label17;

     label16:
        $r32 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r33 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $l67 = virtualinvoke $r32.<sun.util.calendar.LocalGregorianCalendar: long getDayOfYear(sun.util.calendar.CalendarDate)>($r33);
        i13 = (int) $l67;
        $l68 = (long) i13;
        $l69 = l42 - $l68;
        l12 = $l69 + 1L;

     label17:
        if z3 == 0 goto label18;

        $r34 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $l70 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getFixedDateMonth1(sun.util.calendar.LocalGregorianCalendar$Date,long)>($r34, l42);
        goto label19;

     label18:
        $l71 = (long) i9;
        $l72 = l42 - $l71;
        $l70 = $l72 + 1L;

     label19:
        l73 = $l70;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(6, i13);
        $i74 = i9 - 1;
        $i75 = $i74 / 7;
        $i76 = $i75 + 1;
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(8, $i76);
        i14 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>(l12, l42);
        if i14 != 0 goto label27;

        l15 = l12 - 1L;
        r3 = staticinvoke <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>(l15);
        if z3 != 0 goto label20;

        $i77 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z4 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i77);
        if $z4 != 0 goto label20;

        l16 = l12 - 365L;
        $z5 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: boolean isLeapYear()>();
        if $z5 == 0 goto label26;

        l16 = l16 - 1L;
        goto label26;

     label20:
        if z3 == 0 goto label25;

        $r35 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i78 = virtualinvoke $r35.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i78 != 1 goto label24;

        if i5 <= 4 goto label22;

        $r36 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i79 = i5 - 1;
        $r37 = $r36[$i79];
        r4 = virtualinvoke $r37.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $i80 = virtualinvoke r4.<sun.util.calendar.CalendarDate: int getYear()>();
        if i60 != $i80 goto label21;

        $i81 = virtualinvoke r4.<sun.util.calendar.CalendarDate: int getMonth()>();
        $r38 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setMonth(int)>($i81);
        $i82 = virtualinvoke r4.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        virtualinvoke $r38.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i82);

     label21:
        goto label23;

     label22:
        $r40 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r41 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setMonth(int)>(1);
        virtualinvoke $r41.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);

     label23:
        $r43 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r43.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r3);
        $r44 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l16 = virtualinvoke $r44.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r3);
        goto label26;

     label24:
        l16 = l12 - 365L;
        $z7 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: boolean isLeapYear()>();
        if $z7 == 0 goto label26;

        l16 = l16 - 1L;
        goto label26;

     label25:
        $r45 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r46 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i83 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>($r46);
        $r47 = $r45[$i83];
        r48 = virtualinvoke $r47.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $i84 = virtualinvoke r48.<sun.util.calendar.CalendarDate: int getMonth()>();
        $r49 = virtualinvoke r3.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setMonth(int)>($i84);
        $i85 = virtualinvoke r48.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        virtualinvoke $r49.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i85);
        $r51 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r51.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r3);
        $r52 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l16 = virtualinvoke $r52.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r3);

     label26:
        i14 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>(l16, l15);
        goto label33;

     label27:
        if z3 != 0 goto label30;

        if i14 < 52 goto label33;

        l86 = l12 + 365L;
        $r53 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $z9 = virtualinvoke $r53.<sun.util.calendar.LocalGregorianCalendar$Date: boolean isLeapYear()>();
        if $z9 == 0 goto label28;

        l86 = l86 + 1L;

     label28:
        $r54 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l87 = l86 + 6L;
        $i88 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        l89 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l87, $i88);
        $l90 = l89 - l86;
        i91 = (int) $l90;
        $i92 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();
        if i91 < $i92 goto label29;

        $l93 = l89 - 7L;
        $b94 = l42 cmp $l93;
        if $b94 < 0 goto label29;

        i14 = 1;

     label29:
        goto label33;

     label30:
        $r55 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $r56 = virtualinvoke $r55.<sun.util.calendar.LocalGregorianCalendar$Date: java.lang.Object clone()>();
        r57 = (sun.util.calendar.LocalGregorianCalendar$Date) $r56;
        $r58 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $i95 = virtualinvoke $r58.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i95 != 1 goto label31;

        virtualinvoke r57.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date addYear(int)>(1);
        $r60 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r61 = virtualinvoke r57.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setMonth(int)>(1);
        virtualinvoke $r61.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);
        $r63 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l17 = virtualinvoke $r63.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r57);
        goto label32;

     label31:
        $i96 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r57);
        i18 = $i96 + 1;
        $r64 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r65 = $r64[i18];
        r66 = virtualinvoke $r65.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $r67 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r68 = $r67[i18];
        virtualinvoke r57.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setEra(sun.util.calendar.Era)>($r68);
        $i97 = virtualinvoke r66.<sun.util.calendar.CalendarDate: int getMonth()>();
        $i98 = virtualinvoke r66.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        virtualinvoke r57.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDate(int,int,int)>(1, $i97, $i98);
        $r71 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r71.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r57);
        $r72 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l17 = virtualinvoke $r72.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r57);

     label32:
        $r73 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l99 = l17 + 6L;
        $i100 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        l101 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l99, $i100);
        $l102 = l101 - l17;
        i103 = (int) $l102;
        $i104 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();
        if i103 < $i104 goto label33;

        $l105 = l101 - 7L;
        $b106 = l42 cmp $l105;
        if $b106 < 0 goto label33;

        i14 = 1;

     label33:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(3, i14);
        $i107 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>(l73, l42);
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void internalSet(int,int)>(4, $i107);
        i7 = i7 | 344;

     label34:
        return i7;
    }

    private final int getWeekNumber(long, long)
    {
        java.util.JapaneseImperialCalendar r0;
        long l0, l1, l2, $l5, $l7, $l9;
        sun.util.calendar.LocalGregorianCalendar $r1;
        int i3, i4, $i6, $i8, $i10, $i11, $i12, $i13;
        boolean $z0;
        java.lang.AssertionError $r2;

        r0 := @this: java.util.JapaneseImperialCalendar;
        l0 := @parameter0: long;
        l1 := @parameter1: long;
        $r1 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l5 = l0 + 6L;
        $i6 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        l2 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l5, $i6);
        $l7 = l2 - l0;
        i3 = (int) $l7;
        $z0 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        if i3 <= 7 goto label0;

        $r2 = new java.lang.AssertionError;
        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();
        throw $r2;

     label0:
        $i8 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();
        if i3 < $i8 goto label1;

        l2 = l2 - 7L;

     label1:
        $l9 = l1 - l2;
        i4 = (int) $l9;
        if i4 < 0 goto label2;

        $i10 = i4 / 7;
        $i11 = $i10 + 1;
        return $i11;

     label2:
        $i12 = staticinvoke <sun.util.calendar.CalendarUtils: int floorDivide(int,int)>(i4, 7);
        $i13 = $i12 + 1;
        return $i13;
    }

    protected void computeTime()
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1, i2, i6, i7, i8, i9, $i10, $i11, i12, $i13, i14, $i15, $i16, $i19, $i21, $i22, $i25, $i29, $i33, $i43, $i47, $i48, $i49, $i50, $i51, $i54, $i55, $i56, $i57, $i58, $i59;
        long l3, l4, l5, $l17, l18, $l20, $l23, l24, $l26, l27, l28, $l30, l31, l32, $l34, l35, l36, $l38, l39, $l40, $l41, $l44, $l45, $l52, l53;
        java.util.TimeZone r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int[] $r2, $r3, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r28;
        java.lang.IllegalArgumentException $r4, $r21;
        java.lang.String $r5, $r23, $r30;
        sun.util.calendar.Era[] $r7;
        byte $b37;
        sun.util.calendar.ZoneInfo $r10;
        java.lang.StringBuilder $r22, $r24, $r25, $r26, $r27, $r29;

        r0 := @this: java.util.JapaneseImperialCalendar;
        $z0 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isLenient()>();
        if $z0 != 0 goto label4;

        $r2 = r0.<java.util.JapaneseImperialCalendar: int[] originalFields>;
        if $r2 != null goto label0;

        $r3 = newarray (int)[17];
        r0.<java.util.JapaneseImperialCalendar: int[] originalFields> = $r3;

     label0:
        i0 = 0;

     label1:
        if i0 >= 17 goto label4;

        i1 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(i0);
        $z1 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isExternallySet(int)>(i0);
        if $z1 == 0 goto label3;

        $i10 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(i0);
        if i1 < $i10 goto label2;

        $i11 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMaximum(int)>(i0);
        if i1 <= $i11 goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;
        $r5 = staticinvoke <java.util.JapaneseImperialCalendar: java.lang.String getFieldName(int)>(i0);
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r4;

     label3:
        $r6 = r0.<java.util.JapaneseImperialCalendar: int[] originalFields>;
        $r6[i0] = i1;
        i0 = i0 + 1;
        goto label1;

     label4:
        i12 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int selectFields()>();
        $z2 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isSet(int)>(0);
        if $z2 == 0 goto label7;

        i2 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(0);
        $z3 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isSet(int)>(1);
        if $z3 == 0 goto label5;

        $i13 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(1);
        goto label6;

     label5:
        $i13 = 1;

     label6:
        i14 = $i13;
        goto label9;

     label7:
        $z4 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isSet(int)>(1);
        if $z4 == 0 goto label8;

        $r7 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i15 = lengthof $r7;
        i2 = $i15 - 1;
        i14 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(1);
        goto label9;

     label8:
        i2 = 3;
        i14 = 45;

     label9:
        l3 = 0L;
        $z5 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i12, 11);
        if $z5 == 0 goto label10;

        $i16 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(11);
        $l17 = (long) $i16;
        l18 = l3 + $l17;
        goto label11;

     label10:
        $i19 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(10);
        $l20 = (long) $i19;
        l18 = l3 + $l20;
        $z6 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i12, 9);
        if $z6 == 0 goto label11;

        $i21 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(9);
        $i22 = 12 * $i21;
        $l23 = (long) $i22;
        l18 = l18 + $l23;

     label11:
        l24 = l18 * 60L;
        $i25 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(12);
        $l26 = (long) $i25;
        l27 = l24 + $l26;
        l28 = l27 * 60L;
        $i29 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(13);
        $l30 = (long) $i29;
        l31 = l28 + $l30;
        l32 = l31 * 1000L;
        $i33 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(14);
        $l34 = (long) $i33;
        l35 = l32 + $l34;
        l4 = l35 / 86400000L;
        l36 = l35 % 86400000L;

     label12:
        $b37 = l36 cmp 0L;
        if $b37 >= 0 goto label13;

        l36 = l36 + 86400000L;
        l4 = l4 - 1L;
        goto label12;

     label13:
        $l38 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getFixedDate(int,int,int)>(i2, i14, i12);
        l39 = l4 + $l38;
        $l40 = l39 - 719163L;
        $l41 = $l40 * 86400000L;
        l5 = $l41 + l36;
        r1 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        $r8 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        if $r8 != null goto label14;

        $r9 = newarray (int)[2];
        r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets> = $r9;

     label14:
        i6 = i12 & 98304;
        if i6 == 98304 goto label16;

        $z7 = r1 instanceof sun.util.calendar.ZoneInfo;
        if $z7 == 0 goto label15;

        $r10 = (sun.util.calendar.ZoneInfo) r1;
        $r11 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        virtualinvoke $r10.<sun.util.calendar.ZoneInfo: int getOffsetsByWall(long,int[])>(l5, $r11);
        goto label16;

     label15:
        $i43 = virtualinvoke r1.<java.util.TimeZone: int getRawOffset()>();
        $l44 = (long) $i43;
        $l45 = l5 - $l44;
        $r12 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        virtualinvoke r1.<java.util.TimeZone: int getOffsets(long,int[])>($l45, $r12);

     label16:
        if i6 == 0 goto label18;

        $z8 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i6, 15);
        if $z8 == 0 goto label17;

        $r13 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i47 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(15);
        $r13[0] = $i47;

     label17:
        $z9 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i6, 16);
        if $z9 == 0 goto label18;

        $r14 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i48 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(16);
        $r14[1] = $i48;

     label18:
        $r15 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i49 = $r15[0];
        $r16 = r0.<java.util.JapaneseImperialCalendar: int[] zoneOffsets>;
        $i50 = $r16[1];
        $i51 = $i49 + $i50;
        $l52 = (long) $i51;
        l53 = l5 - $l52;
        r0.<java.util.JapaneseImperialCalendar: long time> = l53;
        $i54 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getSetStateFields()>();
        $i55 = i12 | $i54;
        i7 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int computeFields(int,int)>($i55, i6);
        $z10 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isLenient()>();
        if $z10 != 0 goto label22;

        i8 = 0;

     label19:
        if i8 >= 17 goto label22;

        $z11 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isExternallySet(int)>(i8);
        if $z11 != 0 goto label20;

        goto label21;

     label20:
        $r17 = r0.<java.util.JapaneseImperialCalendar: int[] originalFields>;
        $i56 = $r17[i8];
        $i57 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(i8);
        if $i56 == $i57 goto label21;

        i9 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(i8);
        $r18 = r0.<java.util.JapaneseImperialCalendar: int[] originalFields>;
        $r19 = r0.<java.util.JapaneseImperialCalendar: int[] fields>;
        $r20 = r0.<java.util.JapaneseImperialCalendar: int[] fields>;
        $i58 = lengthof $r20;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, $r19, 0, $i58);
        $r21 = new java.lang.IllegalArgumentException;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = staticinvoke <java.util.JapaneseImperialCalendar: java.lang.String getFieldName(int)>(i8);
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");
        $r28 = r0.<java.util.JapaneseImperialCalendar: int[] originalFields>;
        $i59 = $r28[i8];
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i59);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);
        throw $r21;

     label21:
        i8 = i8 + 1;
        goto label19;

     label22:
        virtualinvoke r0.<java.util.JapaneseImperialCalendar: void setFieldsNormalized(int)>(i7);
        return;
    }

    private long getFixedDate(int, int, int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1, i2, i3, i4, i5, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i21, $i23, $i27, $i28, $i29, $i30, i32, $i33, $i37, $i38, $i39, $i43, $i44, $i48, $i51, i54, $i55, $i57;
        int[] r1, $r5;
        long l6, l15, $l17, l18, $l19, $l20, $l22, $l24, $l26, $l31, $l34, $l35, $l36, $l40, $l41, $l42, $l45, l46, $l47, l49, $l50, $l52, $l56, $l58, $l59, $l60;
        boolean $z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        sun.util.calendar.Era[] $r2, $r13;
        sun.util.calendar.Era $r3, $r14;
        sun.util.calendar.CalendarDate r4;
        sun.util.calendar.LocalGregorianCalendar $r6, $r9, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        java.util.TimeZone $r7, $r10;
        sun.util.calendar.LocalGregorianCalendar$Date r8, r11;
        byte $b25, $b53;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 = 0;
        i4 = 1;
        $z0 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i2, 2);
        if $z0 == 0 goto label1;

        i3 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(2);
        if i3 <= 11 goto label0;

        $i9 = i3 / 12;
        i1 = i1 + $i9;
        i3 = i3 % 12;
        goto label2;

     label0:
        if i3 >= 0 goto label2;

        r1 = newarray (int)[1];
        $i10 = staticinvoke <sun.util.calendar.CalendarUtils: int floorDivide(int,int,int[])>(i3, 12, r1);
        i1 = i1 + $i10;
        i3 = r1[0];
        goto label2;

     label1:
        if i1 != 1 goto label2;

        if i0 == 0 goto label2;

        $r2 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r3 = $r2[i0];
        r4 = virtualinvoke $r3.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $i11 = virtualinvoke r4.<sun.util.calendar.CalendarDate: int getMonth()>();
        i3 = $i11 - 1;
        i4 = virtualinvoke r4.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();

     label2:
        $r5 = <java.util.JapaneseImperialCalendar: int[] MIN_VALUES>;
        $i12 = $r5[1];
        if i1 != $i12 goto label4;

        $r6 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r7 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r8 = virtualinvoke $r6.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r7);
        $i13 = virtualinvoke r8.<sun.util.calendar.CalendarDate: int getMonth()>();
        i5 = $i13 - 1;
        if i3 >= i5 goto label3;

        i3 = i5;

     label3:
        if i3 != i5 goto label4;

        i4 = virtualinvoke r8.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();

     label4:
        $r9 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r10 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;
        r11 = virtualinvoke $r9.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date newCalendarDate(java.util.TimeZone)>($r10);
        if i0 <= 0 goto label5;

        $r13 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r14 = $r13[i0];
        goto label6;

     label5:
        $r14 = null;

     label6:
        virtualinvoke r11.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setEra(sun.util.calendar.Era)>($r14);
        $i14 = i3 + 1;
        virtualinvoke r11.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDate(int,int,int)>(i1, $i14, i4);
        $r17 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r17.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r11);
        $r18 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        l15 = virtualinvoke $r18.<sun.util.calendar.LocalGregorianCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>(r11);
        $z2 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i2, 2);
        if $z2 == 0 goto label17;

        $z3 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i2, 5);
        if $z3 == 0 goto label7;

        $z4 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isSet(int)>(5);
        if $z4 == 0 goto label22;

        $i16 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(5);
        $l17 = (long) $i16;
        l18 = l15 + $l17;
        $l19 = (long) i4;
        l15 = l18 - $l19;
        goto label22;

     label7:
        $z5 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i2, 4);
        if $z5 == 0 goto label10;

        $r19 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l20 = l15 + 6L;
        $i21 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        l6 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l20, $i21);
        $l22 = l6 - l15;
        $i23 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();
        $l24 = (long) $i23;
        $b25 = $l22 cmp $l24;
        if $b25 < 0 goto label8;

        l6 = l6 - 7L;

     label8:
        $z6 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i2, 7);
        if $z6 == 0 goto label9;

        $r20 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l26 = l6 + 6L;
        $i27 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(7);
        l6 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l26, $i27);

     label9:
        $i28 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(4);
        $i29 = $i28 - 1;
        $i30 = 7 * $i29;
        $l31 = (long) $i30;
        l15 = l6 + $l31;
        goto label22;

     label10:
        $z7 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i2, 7);
        if $z7 == 0 goto label11;

        i32 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(7);
        goto label12;

     label11:
        i32 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();

     label12:
        $z8 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i2, 8);
        if $z8 == 0 goto label13;

        i7 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(8);
        goto label14;

     label13:
        i7 = 1;

     label14:
        if i7 < 0 goto label15;

        $r21 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $i33 = 7 * i7;
        $l34 = (long) $i33;
        $l35 = l15 + $l34;
        $l36 = $l35 - 1L;
        l15 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l36, i32);
        goto label16;

     label15:
        $i37 = specialinvoke r0.<java.util.JapaneseImperialCalendar: int monthLength(int,int)>(i3, i1);
        $i38 = i7 + 1;
        $i39 = 7 * $i38;
        i8 = $i37 + $i39;
        $r22 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l40 = (long) i8;
        $l41 = l15 + $l40;
        $l42 = $l41 - 1L;
        l15 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l42, i32);

     label16:
        goto label22;

     label17:
        $z9 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i2, 6);
        if $z9 == 0 goto label19;

        $i43 = virtualinvoke r11.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $z10 = specialinvoke r0.<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>($i43);
        if $z10 == 0 goto label18;

        l15 = specialinvoke r0.<java.util.JapaneseImperialCalendar: long getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar$Date,long)>(r11, l15);

     label18:
        $i44 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(6);
        $l45 = (long) $i44;
        l46 = l15 + $l45;
        l15 = l46 - 1L;
        goto label22;

     label19:
        $r23 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l47 = l15 + 6L;
        $i48 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        l49 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l47, $i48);
        $l50 = l49 - l15;
        $i51 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimalDaysInFirstWeek()>();
        $l52 = (long) $i51;
        $b53 = $l50 cmp $l52;
        if $b53 < 0 goto label20;

        l49 = l49 - 7L;

     label20:
        $z11 = staticinvoke <java.util.JapaneseImperialCalendar: boolean isFieldSet(int,int)>(i2, 7);
        if $z11 == 0 goto label21;

        i54 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(7);
        $i55 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getFirstDayOfWeek()>();
        if i54 == $i55 goto label21;

        $r24 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l56 = l49 + 6L;
        l49 = staticinvoke <sun.util.calendar.LocalGregorianCalendar: long getDayOfWeekDateOnOrBefore(long,int)>($l56, i54);

     label21:
        $i57 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(3);
        $l58 = (long) $i57;
        $l59 = $l58 - 1L;
        $l60 = 7L * $l59;
        l15 = l49 + $l60;

     label22:
        return l15;
    }

    private final long getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar$Date, long)
    {
        java.util.JapaneseImperialCalendar r0;
        sun.util.calendar.LocalGregorianCalendar$Date r1;
        long l0, l2, $l6;
        int i1, $i3, $i5;
        sun.util.calendar.CalendarDate r3;
        sun.util.calendar.Era $r4, $r6;
        sun.util.calendar.Era[] $r5;
        sun.util.calendar.Gregorian $r7, $r8, $r11, $r13;
        byte $b4;
        java.util.TimeZone $r9;
        sun.util.calendar.Gregorian$Date r10;

        r0 := @this: java.util.JapaneseImperialCalendar;
        r1 := @parameter0: sun.util.calendar.LocalGregorianCalendar$Date;
        l0 := @parameter1: long;
        virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        $r4 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        if $r4 == null goto label3;

        $i3 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i3 != 1 goto label3;

        i1 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r1);

     label0:
        if i1 <= 0 goto label3;

        $r5 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r6 = $r5[i1];
        r3 = virtualinvoke $r6.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $r7 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        l2 = virtualinvoke $r7.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(r3);
        $b4 = l2 cmp l0;
        if $b4 <= 0 goto label1;

        goto label2;

     label1:
        return l2;

     label2:
        i1 = i1 + -1;
        goto label0;

     label3:
        $r8 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $r9 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;
        r10 = virtualinvoke $r8.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>($r9);
        $i5 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        $r11 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        virtualinvoke r10.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i5, 1, 1);
        $r13 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $l6 = virtualinvoke $r13.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(r10);
        return $l6;
    }

    private final long getFixedDateMonth1(sun.util.calendar.LocalGregorianCalendar$Date, long)
    {
        java.util.JapaneseImperialCalendar r0;
        sun.util.calendar.LocalGregorianCalendar$Date r1;
        long l0, l2, $l5, $l6, $l7;
        int i1, $i4;
        long[] $r2;
        byte $b3;

        r0 := @this: java.util.JapaneseImperialCalendar;
        r1 := @parameter0: sun.util.calendar.LocalGregorianCalendar$Date;
        l0 := @parameter1: long;
        i1 = staticinvoke <java.util.JapaneseImperialCalendar: int getTransitionEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r1);
        if i1 == -1 goto label0;

        $r2 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;
        l2 = $r2[i1];
        $b3 = l2 cmp l0;
        if $b3 > 0 goto label0;

        return l2;

     label0:
        $i4 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        $l5 = (long) $i4;
        $l6 = l0 - $l5;
        $l7 = $l6 + 1L;
        return $l7;
    }

    private static final sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)
    {
        long l0;
        sun.util.calendar.LocalGregorianCalendar $r0, $r3;
        java.util.TimeZone $r1;
        sun.util.calendar.LocalGregorianCalendar$Date r2;

        l0 := @parameter0: long;
        $r0 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r1 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;
        r2 = virtualinvoke $r0.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date newCalendarDate(java.util.TimeZone)>($r1);
        $r3 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r3.<sun.util.calendar.LocalGregorianCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>(r2, l0);
        return r2;
    }

    private final int monthLength(int, int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1, $i2;
        boolean $z0;
        int[] $r1, $r2;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $z0 = staticinvoke <sun.util.calendar.CalendarUtils: boolean isGregorianLeapYear(int)>(i1);
        if $z0 == 0 goto label0;

        $r1 = <java.util.GregorianCalendar: int[] LEAP_MONTH_LENGTH>;
        $i2 = $r1[i0];
        goto label1;

     label0:
        $r2 = <java.util.GregorianCalendar: int[] MONTH_LENGTH>;
        $i2 = $r2[i0];

     label1:
        return $i2;
    }

    private final int monthLength(int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        sun.util.calendar.LocalGregorianCalendar$Date $r1, $r3;
        java.lang.AssertionError $r2;
        int[] $r4, $r5;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        $z0 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $r1 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $z1 = virtualinvoke $r1.<sun.util.calendar.LocalGregorianCalendar$Date: boolean isNormalized()>();
        if $z1 != 0 goto label0;

        $r2 = new java.lang.AssertionError;
        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        $z2 = virtualinvoke $r3.<sun.util.calendar.LocalGregorianCalendar$Date: boolean isLeapYear()>();
        if $z2 == 0 goto label1;

        $r4 = <java.util.GregorianCalendar: int[] LEAP_MONTH_LENGTH>;
        $i1 = $r4[i0];
        goto label2;

     label1:
        $r5 = <java.util.GregorianCalendar: int[] MONTH_LENGTH>;
        $i1 = $r5[i0];

     label2:
        return $i1;
    }

    private final int actualMonthLength()
    {
        java.util.JapaneseImperialCalendar r0;
        sun.util.calendar.LocalGregorianCalendar $r1;
        int i0, i1, $i5, $i6, $i7;
        long l2, $l3;
        sun.util.calendar.CalendarDate r2;
        sun.util.calendar.LocalGregorianCalendar$Date $r3, $r4;
        long[] $r5;
        sun.util.calendar.Era[] $r6;
        sun.util.calendar.Era $r7;
        byte $b4;

        r0 := @this: java.util.JapaneseImperialCalendar;
        $r1 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r3 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i0 = virtualinvoke $r1.<sun.util.calendar.LocalGregorianCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>($r3);
        $r4 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        i1 = staticinvoke <java.util.JapaneseImperialCalendar: int getTransitionEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>($r4);
        if i1 != -1 goto label1;

        $r5 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;
        l2 = $r5[i1];
        $r6 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r7 = $r6[i1];
        r2 = virtualinvoke $r7.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $l3 = r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate>;
        $b4 = l2 cmp $l3;
        if $b4 > 0 goto label0;

        $i5 = virtualinvoke r2.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        $i6 = $i5 - 1;
        i0 = i0 - $i6;
        goto label1;

     label0:
        $i7 = virtualinvoke r2.<sun.util.calendar.CalendarDate: int getDayOfMonth()>();
        i0 = $i7 - 1;

     label1:
        return i0;
    }

    private static final int getTransitionEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11;
        sun.util.calendar.CalendarDate r1, r7;
        sun.util.calendar.Era[] $r2, $r4, $r5;
        sun.util.calendar.Era $r3, $r6;

        r0 := @parameter0: sun.util.calendar.LocalGregorianCalendar$Date;
        i0 = staticinvoke <java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>(r0);
        $r2 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r3 = $r2[i0];
        r1 = virtualinvoke $r3.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $i1 = virtualinvoke r1.<sun.util.calendar.CalendarDate: int getYear()>();
        $i2 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        if $i1 != $i2 goto label0;

        $i3 = virtualinvoke r1.<sun.util.calendar.CalendarDate: int getMonth()>();
        $i4 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        if $i3 != $i4 goto label0;

        return i0;

     label0:
        $r4 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i5 = lengthof $r4;
        $i6 = $i5 - 1;
        if i0 >= $i6 goto label1;

        $r5 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        i7 = i0 + 1;
        $r6 = $r5[i7];
        r7 = virtualinvoke $r6.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $i8 = virtualinvoke r7.<sun.util.calendar.CalendarDate: int getYear()>();
        $i9 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();
        if $i8 != $i9 goto label1;

        $i10 = virtualinvoke r7.<sun.util.calendar.CalendarDate: int getMonth()>();
        $i11 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        if $i10 != $i11 goto label1;

        return i7;

     label1:
        return -1;
    }

    private final boolean isTransitionYear(int)
    {
        java.util.JapaneseImperialCalendar r0;
        int i0, i1, i2, $i3;
        sun.util.calendar.Era[] $r1, $r2;
        sun.util.calendar.Era $r3;
        sun.util.calendar.CalendarDate $r4;

        r0 := @this: java.util.JapaneseImperialCalendar;
        i0 := @parameter0: int;
        $r1 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i3 = lengthof $r1;
        i1 = $i3 - 1;

     label0:
        if i1 <= 0 goto label3;

        $r2 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r3 = $r2[i1];
        $r4 = virtualinvoke $r3.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        i2 = virtualinvoke $r4.<sun.util.calendar.CalendarDate: int getYear()>();
        if i0 != i2 goto label1;

        return 1;

     label1:
        if i0 <= i2 goto label2;

        goto label3;

     label2:
        i1 = i1 + -1;
        goto label0;

     label3:
        return 0;
    }

    private static final int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        sun.util.calendar.Era r1, $r4;
        int i0, $i1;
        sun.util.calendar.Era[] $r2, $r3;

        r0 := @parameter0: sun.util.calendar.LocalGregorianCalendar$Date;
        r1 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        $r2 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i1 = lengthof $r2;
        i0 = $i1 - 1;

     label0:
        if i0 <= 0 goto label2;

        $r3 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r4 = $r3[i0];
        if $r4 != r1 goto label1;

        return i0;

     label1:
        i0 = i0 + -1;
        goto label0;

     label2:
        return 0;
    }

    private final java.util.JapaneseImperialCalendar getNormalizedCalendar()
    {
        java.util.JapaneseImperialCalendar r0, r1;
        boolean $z0;
        java.lang.Object $r2;

        r0 := @this: java.util.JapaneseImperialCalendar;
        $z0 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isFullyNormalized()>();
        if $z0 == 0 goto label0;

        r1 = r0;
        goto label1;

     label0:
        $r2 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.lang.Object clone()>();
        r1 = (java.util.JapaneseImperialCalendar) $r2;
        virtualinvoke r1.<java.util.JapaneseImperialCalendar: void setLenient(boolean)>(1);
        virtualinvoke r1.<java.util.JapaneseImperialCalendar: void complete()>();

     label1:
        return r1;
    }

    private final void pinDayOfMonth(sun.util.calendar.LocalGregorianCalendar$Date)
    {
        java.util.JapaneseImperialCalendar r0;
        sun.util.calendar.LocalGregorianCalendar$Date r1, r2, r11;
        int i0, i1, i2, i4, $i5, $i7, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i17;
        long l3, $l6, $l12;
        sun.util.calendar.LocalGregorianCalendar $r4, $r5, $r8, $r9, $r12, $r17, $r18;
        java.util.TimeZone $r10, $r13;
        byte $b13;

        r0 := @this: java.util.JapaneseImperialCalendar;
        r1 := @parameter0: sun.util.calendar.LocalGregorianCalendar$Date;
        i0 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        i1 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        $i5 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int getMinimum(int)>(1);
        if i0 == $i5 goto label2;

        virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);
        $r4 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r4.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r1);
        $r5 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        i2 = virtualinvoke $r5.<sun.util.calendar.LocalGregorianCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>(r1);
        if i1 <= i2 goto label0;

        virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(i2);
        goto label1;

     label0:
        virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(i1);

     label1:
        $r8 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r8.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r1);
        goto label7;

     label2:
        $r9 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r10 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r11 = virtualinvoke $r9.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>(-9223372036854775808L, $r10);
        $r12 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $l6 = r0.<java.util.JapaneseImperialCalendar: long time>;
        $r13 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        r2 = virtualinvoke $r12.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>($l6, $r13);
        l3 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: long getTimeOfDay()>();
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date addYear(int)>(400);
        $i7 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setMonth(int)>($i7);
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);
        $r17 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        virtualinvoke $r17.<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>(r2);
        $r18 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        i4 = virtualinvoke $r18.<sun.util.calendar.LocalGregorianCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>(r2);
        if i1 <= i4 goto label3;

        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(i4);
        goto label5;

     label3:
        $i8 = virtualinvoke r11.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        if i1 >= $i8 goto label4;

        $i9 = virtualinvoke r11.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i9);
        goto label5;

     label4:
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(i1);

     label5:
        $i10 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        $i11 = virtualinvoke r11.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        if $i10 != $i11 goto label6;

        $l12 = virtualinvoke r11.<sun.util.calendar.LocalGregorianCalendar$Date: long getTimeOfDay()>();
        $b13 = l3 cmp $l12;
        if $b13 >= 0 goto label6;

        $i14 = i1 + 1;
        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i14, i4);
        virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i15);

     label6:
        $i16 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        $i17 = virtualinvoke r2.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDate(int,int,int)>(i0, $i16, $i17);

     label7:
        return;
    }

    private static final int getRolledValue(int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, i7;
        boolean $z0, $z1;
        java.lang.AssertionError $r0, $r1;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        $z0 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z0 != 0 goto label1;

        if i0 < i2 goto label0;

        if i0 <= i3 goto label1;

     label0:
        $r0 = new java.lang.AssertionError;
        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();
        throw $r0;

     label1:
        $i6 = i3 - i2;
        i4 = $i6 + 1;
        i7 = i1 % i4;
        i5 = i0 + i7;
        if i5 <= i3 goto label2;

        i5 = i5 - i4;
        goto label3;

     label2:
        if i5 >= i2 goto label3;

        i5 = i5 + i4;

     label3:
        $z1 = <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled>;
        if $z1 != 0 goto label5;

        if i5 < i2 goto label4;

        if i5 <= i3 goto label5;

     label4:
        $r1 = new java.lang.AssertionError;
        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();
        throw $r1;

     label5:
        return i5;
    }

    private final int internalGetEra()
    {
        java.util.JapaneseImperialCalendar r0;
        boolean $z0;
        int $i0, $i1;
        sun.util.calendar.Era[] $r1;

        r0 := @this: java.util.JapaneseImperialCalendar;
        $z0 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: boolean isSet(int)>(0);
        if $z0 == 0 goto label0;

        $i0 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: int internalGet(int)>(0);
        goto label1;

     label0:
        $r1 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i1 = lengthof $r1;
        $i0 = $i1 - 1;

     label1:
        return $i0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.JapaneseImperialCalendar r0;
        java.io.ObjectInputStream r1;
        sun.util.calendar.LocalGregorianCalendar $r2;
        sun.util.calendar.LocalGregorianCalendar$Date $r3, $r5;
        java.util.TimeZone $r4;

        r0 := @this: java.util.JapaneseImperialCalendar;
        r1 := @parameter0: java.io.ObjectInputStream;
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();
        $r3 = r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate>;
        if $r3 != null goto label0;

        $r2 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        $r4 = virtualinvoke r0.<java.util.JapaneseImperialCalendar: java.util.TimeZone getZone()>();
        $r5 = virtualinvoke $r2.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date newCalendarDate(java.util.TimeZone)>($r4);
        r0.<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date jdate> = $r5;
        r0.<java.util.JapaneseImperialCalendar: long cachedFixedDate> = -9223372036854775808L;

     label0:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        sun.util.calendar.Era[] r1, r2, $r15, $r21, $r25, $r27, $r32, $r34;
        int i0, i2, i3, i5, $i6, i8, $i10, $i11, $i12, i13, i14, i15, $i16, $i18, $i20, i21, $i22, $i26, $i28, $i29;
        byte b1;
        sun.util.calendar.Era r3, $r10, $r19, $r22, $r35;
        sun.util.calendar.CalendarDate r4, r5, $r20;
        long l4, $l7, $l9, l17, $l19, $l23, l24, $l25, $l27;
        sun.util.calendar.LocalGregorianCalendar$Date r6;
        boolean $z0, $z1;
        sun.util.calendar.CalendarSystem $r7;
        sun.util.calendar.LocalGregorianCalendar $r8, $r14;
        sun.util.calendar.Gregorian $r9, $r18, $r24, $r29, $r37, $r39;
        int[] $r11, $r12, $r13, $r26, $r28, $r40, $r41;
        long[] $r16, $r17, $r23, $r33;
        java.util.TimeZone $r30;
        sun.util.calendar.Gregorian$Date r31;

        $r0 = class "java/util/JapaneseImperialCalendar";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.util.JapaneseImperialCalendar: boolean $assertionsDisabled> = $z1;
        $r7 = staticinvoke <sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>("japanese");
        $r8 = (sun.util.calendar.LocalGregorianCalendar) $r7;
        <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal> = $r8;
        $r9 = staticinvoke <sun.util.calendar.CalendarSystem: sun.util.calendar.Gregorian getGregorianCalendar()>();
        <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal> = $r9;
        $r10 = new sun.util.calendar.Era;
        specialinvoke $r10.<sun.util.calendar.Era: void <init>(java.lang.String,java.lang.String,long,boolean)>("BeforeMeiji", "BM", -9223372036854775808L, 0);
        <java.util.JapaneseImperialCalendar: sun.util.calendar.Era BEFORE_MEIJI_ERA> = $r10;
        $r11 = newarray (int)[17];
        $r11[0] = 0;
        $r11[1] = -292275055;
        $r11[2] = 0;
        $r11[3] = 1;
        $r11[4] = 0;
        $r11[5] = 1;
        $r11[6] = 1;
        $r11[7] = 1;
        $r11[8] = 1;
        $r11[9] = 0;
        $r11[10] = 0;
        $r11[11] = 0;
        $r11[12] = 0;
        $r11[13] = 0;
        $r11[14] = 0;
        $r11[15] = -46800000;
        $r11[16] = 0;
        <java.util.JapaneseImperialCalendar: int[] MIN_VALUES> = $r11;
        $r12 = newarray (int)[17];
        $r12[0] = 0;
        $r12[1] = 0;
        $r12[2] = 0;
        $r12[3] = 0;
        $r12[4] = 4;
        $r12[5] = 28;
        $r12[6] = 0;
        $r12[7] = 7;
        $r12[8] = 4;
        $r12[9] = 1;
        $r12[10] = 11;
        $r12[11] = 23;
        $r12[12] = 59;
        $r12[13] = 59;
        $r12[14] = 999;
        $r12[15] = 50400000;
        $r12[16] = 1200000;
        <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES> = $r12;
        $r13 = newarray (int)[17];
        $r13[0] = 0;
        $r13[1] = 292278994;
        $r13[2] = 11;
        $r13[3] = 53;
        $r13[4] = 6;
        $r13[5] = 31;
        $r13[6] = 366;
        $r13[7] = 7;
        $r13[8] = 6;
        $r13[9] = 1;
        $r13[10] = 11;
        $r13[11] = 23;
        $r13[12] = 59;
        $r13[13] = 59;
        $r13[14] = 999;
        $r13[15] = 50400000;
        $r13[16] = 7200000;
        <java.util.JapaneseImperialCalendar: int[] MAX_VALUES> = $r13;
        $r14 = <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar jcal>;
        r1 = virtualinvoke $r14.<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.Era[] getEras()>();
        $i6 = lengthof r1;
        i0 = $i6 + 1;
        $r15 = newarray (sun.util.calendar.Era)[i0];
        <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras> = $r15;
        $r16 = newarray (long)[i0];
        <java.util.JapaneseImperialCalendar: long[] sinceFixedDates> = $r16;
        b1 = 0;
        $r17 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;
        $r18 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $r19 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era BEFORE_MEIJI_ERA>;
        $r20 = virtualinvoke $r19.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $l7 = virtualinvoke $r18.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>($r20);
        $r17[b1] = $l7;
        $r21 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        i8 = b1 + 1;
        $r22 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era BEFORE_MEIJI_ERA>;
        $r21[b1] = $r22;
        r2 = r1;
        i2 = lengthof r2;
        i3 = 0;

     label2:
        if i3 >= i2 goto label3;

        r3 = r2[i3];
        r4 = virtualinvoke r3.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $r23 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;
        $r24 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $l9 = virtualinvoke $r24.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(r4);
        $r23[i8] = $l9;
        $r25 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i10 = i8;
        i8 = i8 + 1;
        $r25[$i10] = r3;
        i3 = i3 + 1;
        goto label2;

     label3:
        $r26 = <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES>;
        $r27 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i11 = lengthof $r27;
        $i12 = $i11 - 1;
        $r28 = <java.util.JapaneseImperialCalendar: int[] MAX_VALUES>;
        $r28[0] = $i12;
        $r26[0] = $i12;
        i13 = 2147483647;
        i14 = 2147483647;
        $r29 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $r30 = <java.util.TimeZone: java.util.TimeZone NO_TIMEZONE>;
        r31 = virtualinvoke $r29.<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>($r30);
        i15 = 1;

     label4:
        $r32 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $i16 = lengthof $r32;
        if i15 >= $i16 goto label7;

        $r33 = <java.util.JapaneseImperialCalendar: long[] sinceFixedDates>;
        l17 = $r33[i15];
        $r34 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Era[] eras>;
        $r35 = $r34[i15];
        r5 = virtualinvoke $r35.<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>();
        $i18 = virtualinvoke r5.<sun.util.calendar.CalendarDate: int getYear()>();
        virtualinvoke r31.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i18, 1, 1);
        $r37 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        l4 = virtualinvoke $r37.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(r31);
        $l19 = l4 - l17;
        $i20 = (int) $l19;
        i21 = staticinvoke <java.lang.Math: int min(int,int)>($i20, i14);
        $i22 = virtualinvoke r5.<sun.util.calendar.CalendarDate: int getYear()>();
        virtualinvoke r31.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>($i22, 12, 31);
        $r39 = <java.util.JapaneseImperialCalendar: sun.util.calendar.Gregorian gcal>;
        $l23 = virtualinvoke $r39.<sun.util.calendar.Gregorian: long getFixedDate(sun.util.calendar.CalendarDate)>(r31);
        l24 = $l23 + 1L;
        $l25 = l17 - l24;
        $i26 = (int) $l25;
        i14 = staticinvoke <java.lang.Math: int min(int,int)>($i26, i21);
        $l27 = l17 - 1L;
        r6 = staticinvoke <java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>($l27);
        i5 = virtualinvoke r6.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $i28 = virtualinvoke r6.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        if $i28 != 1 goto label5;

        $i29 = virtualinvoke r6.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        if $i29 == 1 goto label6;

     label5:
        i5 = i5 + -1;

     label6:
        i13 = staticinvoke <java.lang.Math: int min(int,int)>(i5, i13);
        i15 = i15 + 1;
        goto label4;

     label7:
        $r40 = <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES>;
        $r40[1] = i13;
        $r41 = <java.util.JapaneseImperialCalendar: int[] LEAST_MAX_VALUES>;
        $r41[6] = i14;
        return;
    }
}
