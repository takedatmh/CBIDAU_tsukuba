public class java.util.Properties extends java.util.Hashtable
{
    private static final long serialVersionUID;
    protected java.util.Properties defaults;
    private static final char[] hexDigit;

    public void <init>()
    {
        java.util.Properties r0;

        r0 := @this: java.util.Properties;
        specialinvoke r0.<java.util.Properties: void <init>(java.util.Properties)>(null);
        return;
    }

    public void <init>(java.util.Properties)
    {
        java.util.Properties r0, r1;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.util.Properties;
        specialinvoke r0.<java.util.Hashtable: void <init>()>();
        r0.<java.util.Properties: java.util.Properties defaults> = r1;
        return;
    }

    public synchronized java.lang.Object setProperty(java.lang.String, java.lang.String)
    {
        java.util.Properties r0;
        java.lang.String r1, r2;
        java.lang.Object $r3;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return $r3;
    }

    public synchronized void load(java.io.Reader) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.Reader r1;
        java.util.Properties$LineReader $r2;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.Reader;
        $r2 = new java.util.Properties$LineReader;
        specialinvoke $r2.<java.util.Properties$LineReader: void <init>(java.util.Properties,java.io.Reader)>(r0, r1);
        specialinvoke r0.<java.util.Properties: void load0(java.util.Properties$LineReader)>($r2);
        return;
    }

    public synchronized void load(java.io.InputStream) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.InputStream r1;
        java.util.Properties$LineReader $r2;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.InputStream;
        $r2 = new java.util.Properties$LineReader;
        specialinvoke $r2.<java.util.Properties$LineReader: void <init>(java.util.Properties,java.io.InputStream)>(r0, r1);
        specialinvoke r0.<java.util.Properties: void load0(java.util.Properties$LineReader)>($r2);
        return;
    }

    private void load0(java.util.Properties$LineReader) throws java.io.IOException
    {
        java.util.Properties r0;
        java.util.Properties$LineReader r1;
        char[] r2, $r5, $r6, $r7, $r8;
        int i0, i1, i2, $i3, $i6;
        boolean z0, z1, z2, $z3;
        java.lang.String r3, r4;
        char c4, c5;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.util.Properties$LineReader;
        r2 = newarray (char)[1024];

     label0:
        $i3 = virtualinvoke r1.<java.util.Properties$LineReader: int readLine()>();
        i0 = $i3;
        if $i3 < 0 goto label14;

        z0 = 0;
        i1 = 0;
        i2 = i0;
        z1 = 0;
        z2 = 0;

     label1:
        if i1 >= i0 goto label10;

        $r5 = r1.<java.util.Properties$LineReader: char[] lineBuf>;
        c4 = $r5[i1];
        if c4 == 61 goto label2;

        if c4 != 58 goto label3;

     label2:
        if z2 != 0 goto label3;

        i2 = i1 + 1;
        z1 = 1;
        goto label10;

     label3:
        if c4 == 32 goto label4;

        if c4 == 9 goto label4;

        if c4 != 12 goto label5;

     label4:
        if z2 != 0 goto label5;

        i2 = i1 + 1;
        goto label10;

     label5:
        if c4 != 92 goto label8;

        if z2 != 0 goto label6;

        $z3 = 1;
        goto label7;

     label6:
        $z3 = 0;

     label7:
        z2 = $z3;
        goto label9;

     label8:
        z2 = 0;

     label9:
        i1 = i1 + 1;
        goto label1;

     label10:
        if i2 >= i0 goto label13;

        $r6 = r1.<java.util.Properties$LineReader: char[] lineBuf>;
        c5 = $r6[i2];
        if c5 == 32 goto label12;

        if c5 == 9 goto label12;

        if c5 == 12 goto label12;

        if z1 != 0 goto label13;

        if c5 == 61 goto label11;

        if c5 != 58 goto label13;

     label11:
        z1 = 1;

     label12:
        i2 = i2 + 1;
        goto label10;

     label13:
        $r7 = r1.<java.util.Properties$LineReader: char[] lineBuf>;
        r3 = specialinvoke r0.<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>($r7, 0, i1, r2);
        $r8 = r1.<java.util.Properties$LineReader: char[] lineBuf>;
        $i6 = i0 - i2;
        r4 = specialinvoke r0.<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>($r8, i2, $i6, r2);
        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);
        goto label0;

     label14:
        return;
    }

    private java.lang.String loadConvert(char[], int, int, char[])
    {
        java.util.Properties r0;
        char[] r1, r2, r3;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i10, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25;
        char c9, c11, c13, $c23;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: char[];
        $i7 = lengthof r2;
        if $i7 >= i1 goto label1;

        i2 = i1 * 2;
        if i2 >= 0 goto label0;

        i2 = 2147483647;

     label0:
        r2 = newarray (char)[i2];

     label1:
        r3 = r2;
        i3 = 0;
        i4 = i0 + i1;

     label2:
        if i0 >= i4 goto label16;

        $i8 = i0;
        i0 = i0 + 1;
        c9 = r1[$i8];
        if c9 != 92 goto label15;

        $i10 = i0;
        i0 = i0 + 1;
        c11 = r1[$i10];
        if c11 != 117 goto label10;

        i5 = 0;
        i6 = 0;

     label3:
        if i6 >= 4 goto label9;

        $i12 = i0;
        i0 = i0 + 1;
        c13 = r1[$i12];
        tableswitch(c13)
        {
            case 48: goto label4;
            case 49: goto label4;
            case 50: goto label4;
            case 51: goto label4;
            case 52: goto label4;
            case 53: goto label4;
            case 54: goto label4;
            case 55: goto label4;
            case 56: goto label4;
            case 57: goto label4;
            case 58: goto label7;
            case 59: goto label7;
            case 60: goto label7;
            case 61: goto label7;
            case 62: goto label7;
            case 63: goto label7;
            case 64: goto label7;
            case 65: goto label6;
            case 66: goto label6;
            case 67: goto label6;
            case 68: goto label6;
            case 69: goto label6;
            case 70: goto label6;
            case 71: goto label7;
            case 72: goto label7;
            case 73: goto label7;
            case 74: goto label7;
            case 75: goto label7;
            case 76: goto label7;
            case 77: goto label7;
            case 78: goto label7;
            case 79: goto label7;
            case 80: goto label7;
            case 81: goto label7;
            case 82: goto label7;
            case 83: goto label7;
            case 84: goto label7;
            case 85: goto label7;
            case 86: goto label7;
            case 87: goto label7;
            case 88: goto label7;
            case 89: goto label7;
            case 90: goto label7;
            case 91: goto label7;
            case 92: goto label7;
            case 93: goto label7;
            case 94: goto label7;
            case 95: goto label7;
            case 96: goto label7;
            case 97: goto label5;
            case 98: goto label5;
            case 99: goto label5;
            case 100: goto label5;
            case 101: goto label5;
            case 102: goto label5;
            default: goto label7;
        };

     label4:
        $i14 = i5 << 4;
        $i15 = $i14 + c13;
        i5 = $i15 - 48;
        goto label8;

     label5:
        $i16 = i5 << 4;
        $i17 = $i16 + 10;
        $i18 = $i17 + c13;
        i5 = $i18 - 97;
        goto label8;

     label6:
        $i19 = i5 << 4;
        $i20 = $i19 + 10;
        $i21 = $i20 + c13;
        i5 = $i21 - 65;
        goto label8;

     label7:
        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Malformed \\uxxxx encoding.");
        throw $r4;

     label8:
        i6 = i6 + 1;
        goto label3;

     label9:
        $i22 = i3;
        i3 = i3 + 1;
        $c23 = (char) i5;
        r3[$i22] = $c23;
        goto label2;

     label10:
        if c11 != 116 goto label11;

        c11 = 9;
        goto label14;

     label11:
        if c11 != 114 goto label12;

        c11 = 13;
        goto label14;

     label12:
        if c11 != 110 goto label13;

        c11 = 10;
        goto label14;

     label13:
        if c11 != 102 goto label14;

        c11 = 12;

     label14:
        $i24 = i3;
        i3 = i3 + 1;
        r3[$i24] = c11;
        goto label2;

     label15:
        $i25 = i3;
        i3 = i3 + 1;
        r3[$i25] = c9;
        goto label2;

     label16:
        $r5 = new java.lang.String;
        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r3, 0, i3);
        return $r5;
    }

    private java.lang.String saveConvert(java.lang.String, boolean, boolean)
    {
        java.util.Properties r0;
        java.lang.String r1, $r26;
        boolean z0, z1, $z2, $z3;
        int i0, i1, i2;
        java.lang.StringBuffer r2, $r3;
        char c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        z1 := @parameter2: boolean;
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        i1 = i0 * 2;
        if i1 >= 0 goto label0;

        i1 = 2147483647;

     label0:
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>(i1);
        r2 = $r3;
        i2 = 0;

     label1:
        if i2 >= i0 goto label18;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);
        if c3 <= 61 goto label3;

        if c3 >= 127 goto label3;

        if c3 != 92 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);
        goto label17;

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c3);
        goto label17;

     label3:
        lookupswitch(c3)
        {
            case 9: goto label7;
            case 10: goto label8;
            case 12: goto label10;
            case 13: goto label9;
            case 32: goto label4;
            case 33: goto label11;
            case 35: goto label11;
            case 58: goto label11;
            case 61: goto label11;
            default: goto label12;
        };

     label4:
        if i2 == 0 goto label5;

        if z0 == 0 goto label6;

     label5:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

     label6:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);
        goto label17;

     label7:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(116);
        goto label17;

     label8:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(110);
        goto label17;

     label9:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(114);
        goto label17;

     label10:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(102);
        goto label17;

     label11:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c3);
        goto label17;

     label12:
        if c3 < 32 goto label13;

        if c3 <= 126 goto label14;

     label13:
        $z2 = 1;
        goto label15;

     label14:
        $z2 = 0;

     label15:
        $z3 = $z2 & z1;
        if $z3 == 0 goto label16;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(117);
        $c4 = c3 >> 12;
        $c5 = $c4 & 15;
        $c6 = staticinvoke <java.util.Properties: char toHex(int)>($c5);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);
        $c7 = c3 >> 8;
        $c8 = $c7 & 15;
        $c9 = staticinvoke <java.util.Properties: char toHex(int)>($c8);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);
        $c10 = c3 >> 4;
        $c11 = $c10 & 15;
        $c12 = staticinvoke <java.util.Properties: char toHex(int)>($c11);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c12);
        $c13 = c3 & 15;
        $c14 = staticinvoke <java.util.Properties: char toHex(int)>($c13);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c14);
        goto label17;

     label16:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c3);

     label17:
        i2 = i2 + 1;
        goto label1;

     label18:
        $r26 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r26;
    }

    private static void writeComments(java.io.BufferedWriter, java.lang.String) throws java.io.IOException
    {
        java.io.BufferedWriter r0;
        java.lang.String r1, $r3, $r4, $r5;
        int i0, i1, i2, $i15, $i16, $i18, $i19, $i21;
        char[] r2;
        char c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c17, $c20, $c22;

        r0 := @parameter0: java.io.BufferedWriter;
        r1 := @parameter1: java.lang.String;
        virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>("#");
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        i1 = 0;
        i2 = 0;
        r2 = newarray (char)[6];
        r2[0] = 92;
        r2[1] = 117;

     label0:
        if i1 >= i0 goto label8;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        if c3 > 255 goto label1;

        if c3 == 10 goto label1;

        if c3 != 13 goto label7;

     label1:
        if i2 == i1 goto label2;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i1);
        virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>($r3);

     label2:
        if c3 <= 255 goto label3;

        $c4 = c3 >> 12;
        $c5 = $c4 & 15;
        $c6 = staticinvoke <java.util.Properties: char toHex(int)>($c5);
        r2[2] = $c6;
        $c7 = c3 >> 8;
        $c8 = $c7 & 15;
        $c9 = staticinvoke <java.util.Properties: char toHex(int)>($c8);
        r2[3] = $c9;
        $c10 = c3 >> 4;
        $c11 = $c10 & 15;
        $c12 = staticinvoke <java.util.Properties: char toHex(int)>($c11);
        r2[4] = $c12;
        $c13 = c3 & 15;
        $c14 = staticinvoke <java.util.Properties: char toHex(int)>($c13);
        r2[5] = $c14;
        $r4 = new java.lang.String;
        specialinvoke $r4.<java.lang.String: void <init>(char[])>(r2);
        virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>($r4);
        goto label6;

     label3:
        virtualinvoke r0.<java.io.BufferedWriter: void newLine()>();
        if c3 != 13 goto label4;

        $i15 = i0 - 1;
        if i1 == $i15 goto label4;

        $i16 = i1 + 1;
        $c17 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i16);
        if $c17 != 10 goto label4;

        i1 = i1 + 1;

     label4:
        $i18 = i0 - 1;
        if i1 == $i18 goto label5;

        $i19 = i1 + 1;
        $c20 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i19);
        if $c20 == 35 goto label6;

        $i21 = i1 + 1;
        $c22 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i21);
        if $c22 == 33 goto label6;

     label5:
        virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>("#");

     label6:
        i2 = i1 + 1;

     label7:
        i1 = i1 + 1;
        goto label0;

     label8:
        if i2 == i1 goto label9;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i1);
        virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>($r5);

     label9:
        virtualinvoke r0.<java.io.BufferedWriter: void newLine()>();
        return;
    }

    public void save(java.io.OutputStream, java.lang.String)
    {
        java.util.Properties r0;
        java.io.OutputStream r1;
        java.lang.String r2;
        java.io.IOException r3, $r4;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.OutputStream;
        r2 := @parameter1: java.lang.String;

     label0:
        virtualinvoke r0.<java.util.Properties: void store(java.io.OutputStream,java.lang.String)>(r1, r2);

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r3 = $r4;

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void store(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.Writer r1;
        java.lang.String r2;
        boolean $z0;
        java.io.BufferedWriter $r4;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.Writer;
        r2 := @parameter1: java.lang.String;
        $z0 = r1 instanceof java.io.BufferedWriter;
        if $z0 == 0 goto label0;

        $r4 = (java.io.BufferedWriter) r1;
        goto label1;

     label0:
        $r4 = new java.io.BufferedWriter;
        specialinvoke $r4.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r1);

     label1:
        specialinvoke r0.<java.util.Properties: void store0(java.io.BufferedWriter,java.lang.String,boolean)>($r4, r2, 0);
        return;
    }

    public void store(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.OutputStream r1;
        java.lang.String r2;
        java.io.BufferedWriter $r3;
        java.io.OutputStreamWriter $r4;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.OutputStream;
        r2 := @parameter1: java.lang.String;
        $r3 = new java.io.BufferedWriter;
        $r4 = new java.io.OutputStreamWriter;
        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, "8859_1");
        specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r4);
        specialinvoke r0.<java.util.Properties: void store0(java.io.BufferedWriter,java.lang.String,boolean)>($r3, r2, 1);
        return;
    }

    private void store0(java.io.BufferedWriter, java.lang.String, boolean) throws java.io.IOException
    {
        java.util.Properties r0, r3;
        java.io.BufferedWriter r1;
        java.lang.String r2, r5, r6, $r11, $r13, r17, r18, $r23;
        boolean z0, $z1;
        java.util.Enumeration r4;
        java.lang.Throwable r7, $r24;
        java.lang.StringBuilder $r8, $r9, $r12, $r19, $r20, $r21, $r22;
        java.util.Date $r10;
        java.lang.Object $r15, $r16;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.BufferedWriter;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        if r2 == null goto label0;

        staticinvoke <java.util.Properties: void writeComments(java.io.BufferedWriter,java.lang.String)>(r1, r2);

     label0:
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");
        $r10 = new java.util.Date;
        specialinvoke $r10.<java.util.Date: void <init>()>();
        $r11 = virtualinvoke $r10.<java.util.Date: java.lang.String toString()>();
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>($r13);
        virtualinvoke r1.<java.io.BufferedWriter: void newLine()>();
        r3 = r0;
        entermonitor r0;

     label1:
        r4 = virtualinvoke r0.<java.util.Properties: java.util.Enumeration keys()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z1 == 0 goto label3;

        $r15 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();
        r5 = (java.lang.String) $r15;
        $r16 = virtualinvoke r0.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r5);
        r6 = (java.lang.String) $r16;
        r17 = specialinvoke r0.<java.util.Properties: java.lang.String saveConvert(java.lang.String,boolean,boolean)>(r5, 1, z0);
        r18 = specialinvoke r0.<java.util.Properties: java.lang.String saveConvert(java.lang.String,boolean,boolean)>(r6, 0, z0);
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>($r23);
        virtualinvoke r1.<java.io.BufferedWriter: void newLine()>();
        goto label2;

     label3:
        exitmonitor r3;

     label4:
        goto label8;

     label5:
        $r24 := @caughtexception;

     label6:
        r7 = $r24;
        exitmonitor r3;

     label7:
        throw r7;

     label8:
        virtualinvoke r1.<java.io.BufferedWriter: void flush()>();
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public synchronized void loadFromXML(java.io.InputStream) throws java.io.IOException, java.util.InvalidPropertiesFormatException
    {
        java.util.Properties r0;
        java.io.InputStream r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.InputStream;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        staticinvoke <java.util.XMLUtils: void load(java.util.Properties,java.io.InputStream)>(r0, r1);
        virtualinvoke r1.<java.io.InputStream: void close()>();
        return;
    }

    public void storeToXML(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.OutputStream r1;
        java.lang.String r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.OutputStream;
        r2 := @parameter1: java.lang.String;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label0:
        virtualinvoke r0.<java.util.Properties: void storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)>(r1, r2, "UTF-8");
        return;
    }

    public void storeToXML(java.io.OutputStream, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.OutputStream r1;
        java.lang.String r2, r3;
        java.lang.NullPointerException $r4;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.OutputStream;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        if r1 != null goto label0;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();
        throw $r4;

     label0:
        staticinvoke <java.util.XMLUtils: void save(java.util.Properties,java.io.OutputStream,java.lang.String,java.lang.String)>(r0, r1, r2, r3);
        return;
    }

    public java.lang.String getProperty(java.lang.String)
    {
        java.util.Properties r0, $r5, $r6;
        java.lang.String r1, r3, $r4, $r7;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.lang.String;
        r2 = specialinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        $z0 = r2 instanceof java.lang.String;
        if $z0 == 0 goto label0;

        $r4 = (java.lang.String) r2;
        goto label1;

     label0:
        $r4 = null;

     label1:
        r3 = $r4;
        if r3 != null goto label2;

        $r5 = r0.<java.util.Properties: java.util.Properties defaults>;
        if $r5 == null goto label2;

        $r6 = r0.<java.util.Properties: java.util.Properties defaults>;
        $r7 = virtualinvoke $r6.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);
        goto label3;

     label2:
        $r7 = r3;

     label3:
        return $r7;
    }

    public java.lang.String getProperty(java.lang.String, java.lang.String)
    {
        java.util.Properties r0;
        java.lang.String r1, r2, r3, $r4;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);
        if r3 != null goto label0;

        $r4 = r2;
        goto label1;

     label0:
        $r4 = r3;

     label1:
        return $r4;
    }

    public java.util.Enumeration propertyNames()
    {
        java.util.Properties r0;
        java.util.Hashtable $r1, r2;
        java.util.Enumeration $r3;

        r0 := @this: java.util.Properties;
        $r1 = new java.util.Hashtable;
        specialinvoke $r1.<java.util.Hashtable: void <init>()>();
        r2 = $r1;
        specialinvoke r0.<java.util.Properties: void enumerate(java.util.Hashtable)>(r2);
        $r3 = virtualinvoke r2.<java.util.Hashtable: java.util.Enumeration keys()>();
        return $r3;
    }

    public java.util.Set stringPropertyNames()
    {
        java.util.Properties r0;
        java.util.Hashtable $r1, r2;
        java.util.Set $r3;

        r0 := @this: java.util.Properties;
        $r1 = new java.util.Hashtable;
        specialinvoke $r1.<java.util.Hashtable: void <init>()>();
        r2 = $r1;
        specialinvoke r0.<java.util.Properties: void enumerateStringProperties(java.util.Hashtable)>(r2);
        $r3 = virtualinvoke r2.<java.util.Hashtable: java.util.Set keySet()>();
        return $r3;
    }

    public void list(java.io.PrintStream)
    {
        java.util.Properties r0;
        java.io.PrintStream r1;
        java.util.Hashtable r2, $r6;
        java.util.Enumeration r3;
        java.lang.String r4, r5, $r10, $r17;
        boolean $z0;
        java.lang.Object $r7, $r8;
        int $i0;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.PrintStream;
        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("-- listing properties --");
        $r6 = new java.util.Hashtable;
        specialinvoke $r6.<java.util.Hashtable: void <init>()>();
        r2 = $r6;
        specialinvoke r0.<java.util.Properties: void enumerate(java.util.Hashtable)>(r2);
        r3 = virtualinvoke r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (java.lang.String) $r7;
        $r8 = virtualinvoke r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (java.lang.String) $r8;
        $i0 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i0 <= 40 goto label1;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, 37);
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");
        r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r17);
        goto label0;

     label2:
        return;
    }

    public void list(java.io.PrintWriter)
    {
        java.util.Properties r0;
        java.io.PrintWriter r1;
        java.util.Hashtable r2, $r6;
        java.util.Enumeration r3;
        java.lang.String r4, r5, $r10, $r17;
        boolean $z0;
        java.lang.Object $r7, $r8;
        int $i0;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.io.PrintWriter;
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-- listing properties --");
        $r6 = new java.util.Hashtable;
        specialinvoke $r6.<java.util.Hashtable: void <init>()>();
        r2 = $r6;
        specialinvoke r0.<java.util.Properties: void enumerate(java.util.Hashtable)>(r2);
        r3 = virtualinvoke r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (java.lang.String) $r7;
        $r8 = virtualinvoke r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (java.lang.String) $r8;
        $i0 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i0 <= 40 goto label1;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, 37);
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");
        r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);
        goto label0;

     label2:
        return;
    }

    private synchronized void enumerate(java.util.Hashtable)
    {
        java.util.Properties r0, $r4, $r5;
        java.util.Hashtable r1;
        java.util.Enumeration r2;
        java.lang.String r3;
        boolean $z0;
        java.lang.Object $r6, $r7;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.util.Hashtable;
        $r4 = r0.<java.util.Properties: java.util.Properties defaults>;
        if $r4 == null goto label0;

        $r5 = r0.<java.util.Properties: java.util.Properties defaults>;
        specialinvoke $r5.<java.util.Properties: void enumerate(java.util.Hashtable)>(r1);

     label0:
        r2 = virtualinvoke r0.<java.util.Properties: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();
        r3 = (java.lang.String) $r6;
        $r7 = virtualinvoke r0.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r3);
        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r7);
        goto label1;

     label2:
        return;
    }

    private synchronized void enumerateStringProperties(java.util.Hashtable)
    {
        java.util.Properties r0, $r5, $r6;
        java.util.Hashtable r1;
        java.util.Enumeration r2;
        java.lang.Object r3, r4;
        boolean $z0, $z1, $z2;
        java.lang.String $r7, $r8;

        r0 := @this: java.util.Properties;
        r1 := @parameter0: java.util.Hashtable;
        $r5 = r0.<java.util.Properties: java.util.Properties defaults>;
        if $r5 == null goto label0;

        $r6 = r0.<java.util.Properties: java.util.Properties defaults>;
        specialinvoke $r6.<java.util.Properties: void enumerateStringProperties(java.util.Hashtable)>(r1);

     label0:
        r2 = virtualinvoke r0.<java.util.Properties: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = virtualinvoke r0.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r3);
        $z1 = r3 instanceof java.lang.String;
        if $z1 == 0 goto label2;

        $z2 = r4 instanceof java.lang.String;
        if $z2 == 0 goto label2;

        $r7 = (java.lang.String) r3;
        $r8 = (java.lang.String) r4;
        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

     label2:
        goto label1;

     label3:
        return;
    }

    private static char toHex(int)
    {
        int i0, $i1;
        char[] $r0;
        char $c2;

        i0 := @parameter0: int;
        $r0 = <java.util.Properties: char[] hexDigit>;
        $i1 = i0 & 15;
        $c2 = $r0[$i1];
        return $c2;
    }

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];
        $r0[0] = 48;
        $r0[1] = 49;
        $r0[2] = 50;
        $r0[3] = 51;
        $r0[4] = 52;
        $r0[5] = 53;
        $r0[6] = 54;
        $r0[7] = 55;
        $r0[8] = 56;
        $r0[9] = 57;
        $r0[10] = 65;
        $r0[11] = 66;
        $r0[12] = 67;
        $r0[13] = 68;
        $r0[14] = 69;
        $r0[15] = 70;
        <java.util.Properties: char[] hexDigit> = $r0;
        return;
    }
}
