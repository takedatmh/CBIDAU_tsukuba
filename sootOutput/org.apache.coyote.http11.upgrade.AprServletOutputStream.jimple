public class org.apache.coyote.http11.upgrade.AprServletOutputStream extends org.apache.coyote.http11.upgrade.AbstractServletOutputStream
{
    private static final int SSL_OUTPUT_BUFFER_SIZE;
    private final org.apache.tomcat.util.net.AprEndpoint endpoint;
    private final org.apache.tomcat.util.net.SocketWrapper wrapper;
    private final long socket;
    private volatile boolean closed;
    private final java.nio.ByteBuffer sslOutputBuffer;

    public void <init>(org.apache.tomcat.util.net.SocketWrapper, int, org.apache.tomcat.util.net.AprEndpoint)
    {
        org.apache.coyote.http11.upgrade.AprServletOutputStream r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        int i0;
        org.apache.tomcat.util.net.AprEndpoint r2;
        java.lang.Object $r3;
        java.lang.Long $r4;
        long $l1;
        boolean $z0;
        java.nio.ByteBuffer $r5, $r6;

        r0 := @this: org.apache.coyote.http11.upgrade.AprServletOutputStream;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        i0 := @parameter1: int;
        r2 := @parameter2: org.apache.tomcat.util.net.AprEndpoint;
        specialinvoke r0.<org.apache.coyote.http11.upgrade.AbstractServletOutputStream: void <init>(int)>(i0);
        r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: boolean closed> = 0;
        r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.net.AprEndpoint endpoint> = r2;
        r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.net.SocketWrapper wrapper> = r1;
        $r3 = virtualinvoke r1.<org.apache.tomcat.util.net.SocketWrapper: java.lang.Object getSocket()>();
        $r4 = (java.lang.Long) $r3;
        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();
        r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: long socket> = $l1;
        $z0 = virtualinvoke r2.<org.apache.tomcat.util.net.AprEndpoint: boolean isSSLEnabled()>();
        if $z0 == 0 goto label0;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(8192);
        r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer> = $r5;
        $r6 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(8192);
        goto label1;

     label0:
        r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer> = null;

     label1:
        return;
    }

    protected int doWrite(boolean, byte[], int, int) throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AprServletOutputStream r0;
        boolean z0, $z1, $z2, $z3, $z4;
        byte[] r1;
        int i0, i1, i2, $i5, $i6, i11;
        org.apache.tomcat.util.res.StringManager $r2;
        java.util.concurrent.locks.Lock r3;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock r4;
        java.lang.Throwable r5, r6, $r14, $r17, r18, $r19;
        java.io.IOException $r7;
        java.lang.Object[] $r8;
        long $l3, $l4, $l7, $l9;
        java.lang.Long $r9;
        java.lang.String $r10;
        org.apache.tomcat.util.net.SocketWrapper $r11, $r12, $r13, $r15;
        org.apache.tomcat.util.net.AprEndpoint $r16;

        r0 := @this: org.apache.coyote.http11.upgrade.AprServletOutputStream;
        z0 := @parameter0: boolean;
        r1 := @parameter1: byte[];
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $z1 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: boolean closed>;
        if $z1 == 0 goto label0;

        $r7 = new java.io.IOException;
        $r2 = <org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = newarray (java.lang.Object)[1];
        $l3 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: long socket>;
        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
        $r8[0] = $r9;
        $r10 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("apr.closed", $r8);
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r10);
        throw $r7;

     label0:
        $r11 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        r3 = virtualinvoke $r11.<org.apache.tomcat.util.net.SocketWrapper: java.util.concurrent.locks.Lock getBlockingStatusReadLock()>();
        $r12 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        r4 = virtualinvoke $r12.<org.apache.tomcat.util.net.SocketWrapper: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock getBlockingStatusWriteLock()>();

     label1:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void lock()>();
        $r13 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        $z2 = virtualinvoke $r13.<org.apache.tomcat.util.net.SocketWrapper: boolean getBlockingStatus()>();
        if $z2 != z0 goto label4;

        i2 = specialinvoke r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: int doWriteInternal(byte[],int,int)>(r1, i0, i1);

     label2:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();
        return i2;

     label3:
        $r14 := @caughtexception;
        r5 = $r14;
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r5;

     label4:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();

     label5:
        virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();
        $r15 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        virtualinvoke $r15.<org.apache.tomcat.util.net.SocketWrapper: void setBlockingStatus(boolean)>(z0);
        if z0 == 0 goto label6;

        $l4 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: long socket>;
        $r16 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.net.AprEndpoint endpoint>;
        $i5 = virtualinvoke $r16.<org.apache.tomcat.util.net.AprEndpoint: int getSoTimeout()>();
        $i6 = $i5 * 1000;
        $l7 = (long) $i6;
        staticinvoke <org.apache.tomcat.jni.Socket: int timeoutSet(long,long)>($l4, $l7);
        goto label7;

     label6:
        $l9 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: long socket>;
        staticinvoke <org.apache.tomcat.jni.Socket: int timeoutSet(long,long)>($l9, 0L);

     label7:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void lock()>();
        virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();
        i11 = specialinvoke r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: int doWriteInternal(byte[],int,int)>(r1, i0, i1);

     label8:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();

     label9:
        $z3 = virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: boolean isHeldByCurrentThread()>();
        if $z3 == 0 goto label10;

        virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

     label10:
        return i11;

     label11:
        $r17 := @caughtexception;

     label12:
        r18 = $r17;
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r18;

     label13:
        $r19 := @caughtexception;
        r6 = $r19;
        $z4 = virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: boolean isHeldByCurrentThread()>();
        if $z4 == 0 goto label14;

        virtualinvoke r4.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

     label14:
        throw r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label7 to label8 with label11;
        catch java.lang.Throwable from label5 to label9 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
    }

    private int doWriteInternal(byte[], int, int) throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AprServletOutputStream r0;
        byte[] r1;
        int i0, i1, i2, i3, i4, $i5, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i18;
        org.apache.tomcat.util.net.AprEndpoint $r2, $r31;
        boolean $z0, $z1, $z2, $z3;
        java.nio.ByteBuffer $r3, $r4, $r6, $r8, $r10, $r12, $r13, $r14, $r15, $r16;
        long $l6, $l11, $l16, $l17;
        java.io.EOFException $r18, $r21;
        org.apache.tomcat.util.res.StringManager $r19, $r22, $r25;
        java.lang.String $r20, $r23, $r30;
        java.io.IOException $r24;
        java.lang.Object[] $r26;
        java.lang.Integer $r27;
        java.lang.Long $r28;
        org.apache.tomcat.util.net.SocketWrapper $r29;
        org.apache.tomcat.util.net.AprEndpoint$Poller $r32;

        r0 := @this: org.apache.coyote.http11.upgrade.AprServletOutputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = i0;
        i3 = i1;

     label0:
        $r2 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.net.AprEndpoint endpoint>;
        $z0 = virtualinvoke $r2.<org.apache.tomcat.util.net.AprEndpoint: boolean isSSLEnabled()>();
        if $z0 == 0 goto label4;

        $r3 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        $i5 = virtualinvoke $r3.<java.nio.ByteBuffer: int remaining()>();
        if $i5 != 0 goto label3;

        $r4 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer clear()>();
        if i3 >= 8192 goto label1;

        $r6 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r1, i2, i3);
        goto label2;

     label1:
        $r8 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r1, i2, 8192);

     label2:
        $r10 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

     label3:
        $l6 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: long socket>;
        $r12 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        $r13 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        $i7 = virtualinvoke $r13.<java.nio.ByteBuffer: int position()>();
        $r14 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        $i8 = virtualinvoke $r14.<java.nio.ByteBuffer: int limit()>();
        i4 = staticinvoke <org.apache.tomcat.jni.Socket: int sendb(long,java.nio.ByteBuffer,int,int)>($l6, $r12, $i7, $i8);
        if i4 <= 0 goto label5;

        $r15 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        $r16 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: java.nio.ByteBuffer sslOutputBuffer>;
        $i9 = virtualinvoke $r16.<java.nio.ByteBuffer: int position()>();
        $i10 = $i9 + i4;
        virtualinvoke $r15.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i10);
        goto label5;

     label4:
        $l11 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: long socket>;
        i4 = staticinvoke <org.apache.tomcat.jni.Socket: int send(long,byte[],int,int)>($l11, r1, i2, i3);

     label5:
        $i12 = neg i4;
        $z1 = staticinvoke <org.apache.tomcat.jni.Status: boolean APR_STATUS_IS_EAGAIN(int)>($i12);
        if $z1 == 0 goto label6;

        i4 = 0;
        goto label10;

     label6:
        $i13 = neg i4;
        if $i13 != 70014 goto label7;

        $r18 = new java.io.EOFException;
        $r19 = <org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("apr.clientAbort");
        specialinvoke $r18.<java.io.EOFException: void <init>(java.lang.String)>($r20);
        throw $r18;

     label7:
        $z2 = <org.apache.tomcat.jni.OS: boolean IS_WIN32>;
        if $z2 != 0 goto label8;

        $z3 = <org.apache.tomcat.jni.OS: boolean IS_WIN64>;
        if $z3 == 0 goto label9;

     label8:
        $i14 = neg i4;
        if $i14 != 730053 goto label9;

        $r21 = new java.io.EOFException;
        $r22 = <org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r23 = virtualinvoke $r22.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("apr.clientAbort");
        specialinvoke $r21.<java.io.EOFException: void <init>(java.lang.String)>($r23);
        throw $r21;

     label9:
        if i4 >= 0 goto label10;

        $r24 = new java.io.IOException;
        $r25 = <org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.res.StringManager sm>;
        $r26 = newarray (java.lang.Object)[3];
        $i15 = neg i4;
        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);
        $r26[0] = $r27;
        $l16 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: long socket>;
        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l16);
        $r26[1] = $r28;
        $r29 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.net.SocketWrapper wrapper>;
        $r26[2] = $r29;
        $r30 = virtualinvoke $r25.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("apr.write.error", $r26);
        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r30);
        throw $r24;

     label10:
        i2 = i2 + i4;
        i3 = i3 - i4;
        if i4 <= 0 goto label11;

        if i3 > 0 goto label0;

     label11:
        if i3 <= 0 goto label12;

        $r31 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: org.apache.tomcat.util.net.AprEndpoint endpoint>;
        $r32 = virtualinvoke $r31.<org.apache.tomcat.util.net.AprEndpoint: org.apache.tomcat.util.net.AprEndpoint$Poller getPoller()>();
        $l17 = r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: long socket>;
        virtualinvoke $r32.<org.apache.tomcat.util.net.AprEndpoint$Poller: void add(long,int,boolean,boolean)>($l17, -1, 0, 1);

     label12:
        $i18 = i1 - i3;
        return $i18;
    }

    protected void doFlush() throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AprServletOutputStream r0;

        r0 := @this: org.apache.coyote.http11.upgrade.AprServletOutputStream;
        return;
    }

    protected void doClose() throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.AprServletOutputStream r0;

        r0 := @this: org.apache.coyote.http11.upgrade.AprServletOutputStream;
        r0.<org.apache.coyote.http11.upgrade.AprServletOutputStream: boolean closed> = 1;
        return;
    }
}
