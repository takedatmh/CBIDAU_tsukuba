public final enum class java.lang.ProcessBuilder$Redirect$Type extends java.lang.Enum
{
    public static final enum java.lang.ProcessBuilder$Redirect$Type PIPE;
    public static final enum java.lang.ProcessBuilder$Redirect$Type INHERIT;
    public static final enum java.lang.ProcessBuilder$Redirect$Type READ;
    public static final enum java.lang.ProcessBuilder$Redirect$Type WRITE;
    public static final enum java.lang.ProcessBuilder$Redirect$Type APPEND;
    private static final java.lang.ProcessBuilder$Redirect$Type[] $VALUES;

    public static java.lang.ProcessBuilder$Redirect$Type[] values()
    {
        java.lang.ProcessBuilder$Redirect$Type[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (java.lang.ProcessBuilder$Redirect$Type[]) $r1;
        return $r2;
    }

    public static java.lang.ProcessBuilder$Redirect$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        java.lang.ProcessBuilder$Redirect$Type $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "java/lang/ProcessBuilder$Redirect$Type", r0);
        $r2 = (java.lang.ProcessBuilder$Redirect$Type) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        java.lang.ProcessBuilder$Redirect$Type r0;
        java.lang.String r1;
        int i0;

        r0 := @this: java.lang.ProcessBuilder$Redirect$Type;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        java.lang.ProcessBuilder$Redirect$Type $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        java.lang.ProcessBuilder$Redirect$Type[] $r5;

        $r0 = new java.lang.ProcessBuilder$Redirect$Type;
        specialinvoke $r0.<java.lang.ProcessBuilder$Redirect$Type: void <init>(java.lang.String,int)>("PIPE", 0);
        <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type PIPE> = $r0;
        $r1 = new java.lang.ProcessBuilder$Redirect$Type;
        specialinvoke $r1.<java.lang.ProcessBuilder$Redirect$Type: void <init>(java.lang.String,int)>("INHERIT", 1);
        <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type INHERIT> = $r1;
        $r2 = new java.lang.ProcessBuilder$Redirect$Type;
        specialinvoke $r2.<java.lang.ProcessBuilder$Redirect$Type: void <init>(java.lang.String,int)>("READ", 2);
        <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type READ> = $r2;
        $r3 = new java.lang.ProcessBuilder$Redirect$Type;
        specialinvoke $r3.<java.lang.ProcessBuilder$Redirect$Type: void <init>(java.lang.String,int)>("WRITE", 3);
        <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type WRITE> = $r3;
        $r4 = new java.lang.ProcessBuilder$Redirect$Type;
        specialinvoke $r4.<java.lang.ProcessBuilder$Redirect$Type: void <init>(java.lang.String,int)>("APPEND", 4);
        <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type APPEND> = $r4;
        $r5 = newarray (java.lang.ProcessBuilder$Redirect$Type)[5];
        $r6 = <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type PIPE>;
        $r5[0] = $r6;
        $r7 = <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type INHERIT>;
        $r5[1] = $r7;
        $r8 = <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type READ>;
        $r5[2] = $r8;
        $r9 = <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type WRITE>;
        $r5[3] = $r9;
        $r10 = <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type APPEND>;
        $r5[4] = $r10;
        <java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] $VALUES> = $r5;
        return;
    }
}
