class sun.nio.ch.SocketOptionRegistry$LazyInitialization extends java.lang.Object
{
    static final java.util.Map options;

    private void <init>()
    {
        sun.nio.ch.SocketOptionRegistry$LazyInitialization r0;

        r0 := @this: sun.nio.ch.SocketOptionRegistry$LazyInitialization;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static java.util.Map options()
    {
        java.util.HashMap $r0, r1;
        java.net.SocketOption $r2, $r8, $r13, $r18, $r23, $r28, $r33, $r38, $r43, $r48, $r53, $r58, $r63, $r68, $r73;
        java.net.ProtocolFamily $r3, $r9, $r14, $r19, $r24, $r29, $r34, $r74;
        sun.nio.ch.SocketOptionRegistry$RegistryKey $r4, $r7, $r12, $r17, $r22, $r27, $r32, $r37, $r42, $r47, $r52, $r57, $r62, $r67, $r72;
        sun.nio.ch.OptionKey $r5, $r10, $r15, $r20, $r25, $r30, $r35, $r40, $r45, $r50, $r55, $r60, $r65, $r70, $r75;
        java.net.StandardProtocolFamily $r39, $r44, $r49, $r54, $r59, $r64, $r69;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        r1 = $r0;
        $r4 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r2 = <java.net.StandardSocketOptions: java.net.SocketOption SO_BROADCAST>;
        $r3 = <sun.nio.ch.Net: java.net.ProtocolFamily UNSPEC>;
        specialinvoke $r4.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r2, $r3);
        $r5 = new sun.nio.ch.OptionKey;
        specialinvoke $r5.<sun.nio.ch.OptionKey: void <init>(int,int)>(65535, 32);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);
        $r7 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r8 = <java.net.StandardSocketOptions: java.net.SocketOption SO_KEEPALIVE>;
        $r9 = <sun.nio.ch.Net: java.net.ProtocolFamily UNSPEC>;
        specialinvoke $r7.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r8, $r9);
        $r10 = new sun.nio.ch.OptionKey;
        specialinvoke $r10.<sun.nio.ch.OptionKey: void <init>(int,int)>(65535, 8);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10);
        $r12 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r13 = <java.net.StandardSocketOptions: java.net.SocketOption SO_LINGER>;
        $r14 = <sun.nio.ch.Net: java.net.ProtocolFamily UNSPEC>;
        specialinvoke $r12.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r13, $r14);
        $r15 = new sun.nio.ch.OptionKey;
        specialinvoke $r15.<sun.nio.ch.OptionKey: void <init>(int,int)>(65535, 128);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r15);
        $r17 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r18 = <java.net.StandardSocketOptions: java.net.SocketOption SO_SNDBUF>;
        $r19 = <sun.nio.ch.Net: java.net.ProtocolFamily UNSPEC>;
        specialinvoke $r17.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r18, $r19);
        $r20 = new sun.nio.ch.OptionKey;
        specialinvoke $r20.<sun.nio.ch.OptionKey: void <init>(int,int)>(65535, 4097);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r20);
        $r22 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r23 = <java.net.StandardSocketOptions: java.net.SocketOption SO_RCVBUF>;
        $r24 = <sun.nio.ch.Net: java.net.ProtocolFamily UNSPEC>;
        specialinvoke $r22.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r23, $r24);
        $r25 = new sun.nio.ch.OptionKey;
        specialinvoke $r25.<sun.nio.ch.OptionKey: void <init>(int,int)>(65535, 4098);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r25);
        $r27 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r28 = <java.net.StandardSocketOptions: java.net.SocketOption SO_REUSEADDR>;
        $r29 = <sun.nio.ch.Net: java.net.ProtocolFamily UNSPEC>;
        specialinvoke $r27.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r28, $r29);
        $r30 = new sun.nio.ch.OptionKey;
        specialinvoke $r30.<sun.nio.ch.OptionKey: void <init>(int,int)>(65535, 4);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r30);
        $r32 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r33 = <java.net.StandardSocketOptions: java.net.SocketOption TCP_NODELAY>;
        $r34 = <sun.nio.ch.Net: java.net.ProtocolFamily UNSPEC>;
        specialinvoke $r32.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r33, $r34);
        $r35 = new sun.nio.ch.OptionKey;
        specialinvoke $r35.<sun.nio.ch.OptionKey: void <init>(int,int)>(6, 1);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r35);
        $r37 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r38 = <java.net.StandardSocketOptions: java.net.SocketOption IP_TOS>;
        $r39 = <java.net.StandardProtocolFamily: java.net.StandardProtocolFamily INET>;
        specialinvoke $r37.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r38, $r39);
        $r40 = new sun.nio.ch.OptionKey;
        specialinvoke $r40.<sun.nio.ch.OptionKey: void <init>(int,int)>(0, 3);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, $r40);
        $r42 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r43 = <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_IF>;
        $r44 = <java.net.StandardProtocolFamily: java.net.StandardProtocolFamily INET>;
        specialinvoke $r42.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r43, $r44);
        $r45 = new sun.nio.ch.OptionKey;
        specialinvoke $r45.<sun.nio.ch.OptionKey: void <init>(int,int)>(0, 9);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, $r45);
        $r47 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r48 = <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_TTL>;
        $r49 = <java.net.StandardProtocolFamily: java.net.StandardProtocolFamily INET>;
        specialinvoke $r47.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r48, $r49);
        $r50 = new sun.nio.ch.OptionKey;
        specialinvoke $r50.<sun.nio.ch.OptionKey: void <init>(int,int)>(0, 10);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, $r50);
        $r52 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r53 = <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_LOOP>;
        $r54 = <java.net.StandardProtocolFamily: java.net.StandardProtocolFamily INET>;
        specialinvoke $r52.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r53, $r54);
        $r55 = new sun.nio.ch.OptionKey;
        specialinvoke $r55.<sun.nio.ch.OptionKey: void <init>(int,int)>(0, 11);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, $r55);
        $r57 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r58 = <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_IF>;
        $r59 = <java.net.StandardProtocolFamily: java.net.StandardProtocolFamily INET6>;
        specialinvoke $r57.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r58, $r59);
        $r60 = new sun.nio.ch.OptionKey;
        specialinvoke $r60.<sun.nio.ch.OptionKey: void <init>(int,int)>(41, 9);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, $r60);
        $r62 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r63 = <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_TTL>;
        $r64 = <java.net.StandardProtocolFamily: java.net.StandardProtocolFamily INET6>;
        specialinvoke $r62.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r63, $r64);
        $r65 = new sun.nio.ch.OptionKey;
        specialinvoke $r65.<sun.nio.ch.OptionKey: void <init>(int,int)>(41, 10);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, $r65);
        $r67 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r68 = <java.net.StandardSocketOptions: java.net.SocketOption IP_MULTICAST_LOOP>;
        $r69 = <java.net.StandardProtocolFamily: java.net.StandardProtocolFamily INET6>;
        specialinvoke $r67.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r68, $r69);
        $r70 = new sun.nio.ch.OptionKey;
        specialinvoke $r70.<sun.nio.ch.OptionKey: void <init>(int,int)>(41, 11);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r67, $r70);
        $r72 = new sun.nio.ch.SocketOptionRegistry$RegistryKey;
        $r73 = <sun.nio.ch.ExtendedSocketOption: java.net.SocketOption SO_OOBINLINE>;
        $r74 = <sun.nio.ch.Net: java.net.ProtocolFamily UNSPEC>;
        specialinvoke $r72.<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>($r73, $r74);
        $r75 = new sun.nio.ch.OptionKey;
        specialinvoke $r75.<sun.nio.ch.OptionKey: void <init>(int,int)>(65535, 256);
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r72, $r75);
        return r1;
    }

    static void <clinit>()
    {
        java.util.Map $r0;

        $r0 = staticinvoke <sun.nio.ch.SocketOptionRegistry$LazyInitialization: java.util.Map options()>();
        <sun.nio.ch.SocketOptionRegistry$LazyInitialization: java.util.Map options> = $r0;
        return;
    }
}
