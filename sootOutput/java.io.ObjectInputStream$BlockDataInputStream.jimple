class java.io.ObjectInputStream$BlockDataInputStream extends java.io.InputStream implements java.io.DataInput
{
    private static final int MAX_BLOCK_SIZE;
    private static final int MAX_HEADER_SIZE;
    private static final int CHAR_BUF_SIZE;
    private static final int HEADER_BLOCKED;
    private final byte[] buf;
    private final byte[] hbuf;
    private final char[] cbuf;
    private boolean blkmode;
    private int pos;
    private int end;
    private int unread;
    private final java.io.ObjectInputStream$PeekInputStream in;
    private final java.io.DataInputStream din;
    final java.io.ObjectInputStream this$0;

    void <init>(java.io.ObjectInputStream, java.io.InputStream)
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        java.io.ObjectInputStream r1;
        java.io.InputStream r2;
        byte[] $r3, $r4;
        char[] $r5;
        java.io.ObjectInputStream$PeekInputStream $r6;
        java.io.DataInputStream $r7;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: java.io.ObjectInputStream;
        r2 := @parameter1: java.io.InputStream;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream this$0> = r1;
        specialinvoke r0.<java.io.InputStream: void <init>()>();
        $r3 = newarray (byte)[1024];
        r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf> = $r3;
        $r4 = newarray (byte)[5];
        r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] hbuf> = $r4;
        $r5 = newarray (char)[256];
        r0.<java.io.ObjectInputStream$BlockDataInputStream: char[] cbuf> = $r5;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode> = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = -1;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread> = 0;
        $r6 = new java.io.ObjectInputStream$PeekInputStream;
        specialinvoke $r6.<java.io.ObjectInputStream$PeekInputStream: void <init>(java.io.InputStream)>(r2);
        r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in> = $r6;
        $r7 = new java.io.DataInputStream;
        specialinvoke $r7.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r0);
        r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din> = $r7;
        return;
    }

    boolean setBlockDataMode(boolean) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        boolean z0, $z1, $z2, $z3, $z4;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        z0 := @parameter0: boolean;
        $z1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z1 != z0 goto label0;

        $z2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        return $z2;

     label0:
        if z0 == 0 goto label1;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread> = 0;
        goto label2;

     label1:
        $i0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i0 >= $i1 goto label2;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unread block data");
        throw $r1;

     label2:
        r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode> = z0;
        $z3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z3 != 0 goto label3;

        $z4 = 1;
        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    boolean getBlockDataMode()
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        boolean $z0;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        return $z0;
    }

    void skipBlockData() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        int $i0;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not in block data mode");
        throw $r1;

     label0:
        $i0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i0 < 0 goto label1;

        specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: void refill()>();
        goto label0;

     label1:
        return;
    }

    private int readBlockHeader(boolean) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        boolean z0, $z1;
        int i0, i1, i2, $i3;
        java.io.ObjectInputStream $r1, $r16;
        java.io.ObjectInputStream$PeekInputStream $r2, $r3, $r4, $r7, $r15;
        byte $b4, $b5, $b6, $b8, $b11;
        byte[] $r5, $r6, $r8, $r9;
        short $s7;
        java.io.StreamCorruptedException $r10, $r17, $r23;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14, $r20;
        java.lang.Object[] $r18;
        java.lang.Integer $r19;
        java.io.EOFException $r21, r22;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        z0 := @parameter0: boolean;
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream this$0>;
        $z1 = staticinvoke <java.io.ObjectInputStream: boolean access$500(java.io.ObjectInputStream)>($r1);
        if $z1 == 0 goto label0;

        return -1;

     label0:
        if z0 == 0 goto label1;

        $i3 = 2147483647;
        goto label2;

     label1:
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $i3 = virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: int available()>();

     label2:
        i0 = $i3;
        if i0 != 0 goto label4;

        $b4 = -2;

     label3:
        return $b4;

     label4:
        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        i1 = virtualinvoke $r3.<java.io.ObjectInputStream$PeekInputStream: int peek()>();
        tableswitch(i1)
        {
            case 119: goto label5;
            case 120: goto label14;
            case 121: goto label13;
            case 122: goto label9;
            default: goto label14;
        };

     label5:
        if i0 >= 2 goto label7;

        $b5 = -2;

     label6:
        return $b5;

     label7:
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] hbuf>;
        virtualinvoke $r4.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r5, 0, 2);
        $r6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] hbuf>;
        $b6 = $r6[1];
        $s7 = $b6 & 255;

     label8:
        return $s7;

     label9:
        if i0 >= 5 goto label11;

        $b8 = -2;

     label10:
        return $b8;

     label11:
        $r7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r8 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] hbuf>;
        virtualinvoke $r7.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r8, 0, 5);
        $r9 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] hbuf>;
        i2 = staticinvoke <java.io.Bits: int getInt(byte[],int)>($r9, 1);
        if i2 >= 0 goto label12;

        $r10 = new java.io.StreamCorruptedException;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal block data header length: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<java.io.StreamCorruptedException: void <init>(java.lang.String)>($r14);
        throw $r10;

     label12:
        return i2;

     label13:
        $r15 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        virtualinvoke $r15.<java.io.ObjectInputStream$PeekInputStream: int read()>();
        $r16 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream this$0>;
        staticinvoke <java.io.ObjectInputStream: void access$600(java.io.ObjectInputStream)>($r16);
        goto label18;

     label14:
        if i1 < 0 goto label16;

        if i1 < 112 goto label15;

        if i1 <= 126 goto label16;

     label15:
        $r17 = new java.io.StreamCorruptedException;
        $r18 = newarray (java.lang.Object)[1];
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r18[0] = $r19;
        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("invalid type code: %02X", $r18);
        specialinvoke $r17.<java.io.StreamCorruptedException: void <init>(java.lang.String)>($r20);
        throw $r17;

     label16:
        $b11 = -1;

     label17:
        return $b11;

     label18:
        goto label0;

     label19:
        $r21 := @caughtexception;
        r22 = $r21;
        $r23 = new java.io.StreamCorruptedException;
        specialinvoke $r23.<java.io.StreamCorruptedException: void <init>(java.lang.String)>("unexpected EOF while reading block data header");
        throw $r23;

        catch java.io.EOFException from label0 to label3 with label19;
        catch java.io.EOFException from label4 to label6 with label19;
        catch java.io.EOFException from label7 to label8 with label19;
        catch java.io.EOFException from label9 to label10 with label19;
        catch java.io.EOFException from label11 to label12 with label19;
        catch java.io.EOFException from label13 to label17 with label19;
        catch java.io.EOFException from label18 to label19 with label19;
    }

    private void refill() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8;
        java.io.ObjectInputStream$PeekInputStream $r1;
        byte[] $r2;
        java.io.StreamCorruptedException $r4;
        java.io.IOException $r5, r6;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;

     label0:
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread>;
        if $i1 <= 0 goto label3;

        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread>;
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 1024);
        i0 = virtualinvoke $r1.<java.io.ObjectInputStream$PeekInputStream: int read(byte[],int,int)>($r2, 0, $i3);
        if i0 < 0 goto label1;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = i0;
        $i4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread>;
        $i5 = $i4 - i0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread> = $i5;
        goto label2;

     label1:
        $r4 = new java.io.StreamCorruptedException;
        specialinvoke $r4.<java.io.StreamCorruptedException: void <init>(java.lang.String)>("unexpected EOF in middle of data block");
        throw $r4;

     label2:
        goto label5;

     label3:
        i6 = specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>(1);
        if i6 < 0 goto label4;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread> = i6;
        goto label5;

     label4:
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = -1;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread> = 0;

     label5:
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i8 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i7 == $i8 goto label0;

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;
        r6 = $r5;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = -1;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread> = 0;
        throw r6;

     label8:
        return;

        catch java.io.IOException from label0 to label6 with label7;
    }

    int currentBlockRemaining()
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.IllegalStateException $r1;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 == 0 goto label2;

        $i0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i0 < 0 goto label0;

        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i3 = $i1 - $i2;
        $i4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread>;
        $i5 = $i3 + $i4;
        goto label1;

     label0:
        $i5 = 0;

     label1:
        return $i5;

     label2:
        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();
        throw $r1;
    }

    int peek() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i6;
        byte[] $r1;
        byte $b4;
        short $s5;
        java.io.ObjectInputStream$PeekInputStream $r2;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 == 0 goto label3;

        $i0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i0 != $i1 goto label0;

        specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: void refill()>();

     label0:
        $i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i2 < 0 goto label1;

        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $b4 = $r1[$i3];
        $s5 = $b4 & 255;
        goto label2;

     label1:
        $s5 = -1;

     label2:
        return $s5;

     label3:
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $i6 = virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: int peek()>();
        return $i6;
    }

    byte peekByte() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int i0;
        java.io.EOFException $r1;
        byte $b1;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        i0 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: int peek()>();
        if i0 >= 0 goto label0;

        $r1 = new java.io.EOFException;
        specialinvoke $r1.<java.io.EOFException: void <init>()>();
        throw $r1;

     label0:
        $b1 = (byte) i0;
        return $b1;
    }

    public int read() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i7;
        boolean $z0;
        byte[] $r1;
        byte $b5;
        short $s6;
        java.io.ObjectInputStream$PeekInputStream $r3;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 == 0 goto label3;

        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i1 != $i2 goto label0;

        specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: void refill()>();

     label0:
        $i3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i3 < 0 goto label1;

        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i4 = $i0 + 1;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i4;
        $b5 = $r1[$i0];
        $s6 = $b5 & 255;
        goto label2;

     label1:
        $s6 = -1;

     label2:
        return $s6;

     label3:
        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $i7 = virtualinvoke $r3.<java.io.ObjectInputStream$PeekInputStream: int read()>();
        return $i7;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        byte[] r1;
        int i0, i1, $i2;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i2 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: int read(byte[],int,int,boolean)>(r1, i0, i1, 0);
        return $i2;
    }

    public long skip(long) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        long l0, l1, $l10, $l11, $l12, $l15, $l19, $l20;
        int i2, $i4, $i5, $i6, $i7, $i8, $i9, $i13, $i14, i16, $i17, i18;
        byte $b3;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r2;
        byte[] $r3;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        l0 := @parameter0: long;
        l1 = l0;

     label0:
        $b3 = l1 cmp 0L;
        if $b3 <= 0 goto label5;

        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 == 0 goto label3;

        $i4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i4 != $i5 goto label1;

        specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: void refill()>();

     label1:
        $i6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i6 >= 0 goto label2;

        goto label5;

     label2:
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i8 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i9 = $i7 - $i8;
        $l10 = (long) $i9;
        $l11 = staticinvoke <java.lang.Math: long min(long,long)>(l1, $l10);
        i2 = (int) $l11;
        $l12 = (long) i2;
        l1 = l1 - $l12;
        $i13 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i14 = $i13 + i2;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i14;
        goto label0;

     label3:
        $l15 = staticinvoke <java.lang.Math: long min(long,long)>(l1, 1024L);
        i16 = (int) $l15;
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i17 = virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: int read(byte[],int,int)>($r3, 0, i16);
        i18 = $i17;
        if $i17 >= 0 goto label4;

        goto label5;

     label4:
        $l19 = (long) i18;
        l1 = l1 - $l19;
        goto label0;

     label5:
        $l20 = l0 - l1;
        return $l20;
    }

    public int available() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r1, $r2;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 == 0 goto label10;

        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i1 != $i2 goto label5;

        $i3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread>;
        if $i3 != 0 goto label5;

     label0:
        $i4 = specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>(0);
        i0 = $i4;
        if $i4 != 0 goto label1;

        goto label0;

     label1:
        lookupswitch(i0)
        {
            case -2: goto label2;
            case -1: goto label3;
            default: goto label4;
        };

     label2:
        goto label5;

     label3:
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = -1;
        goto label5;

     label4:
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread> = i0;

     label5:
        $i5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread>;
        if $i5 <= 0 goto label6;

        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $i6 = virtualinvoke $r1.<java.io.ObjectInputStream$PeekInputStream: int available()>();
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread>;
        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i7);
        goto label7;

     label6:
        $i8 = 0;

     label7:
        i9 = $i8;
        $i10 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i10 < 0 goto label8;

        $i11 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i12 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i13 = $i11 - $i12;
        $i14 = $i13 + i9;
        goto label9;

     label8:
        $i14 = 0;

     label9:
        return $i14;

     label10:
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $i15 = virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: int available()>();
        return $i15;
    }

    public void close() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r1;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 == 0 goto label0;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = -1;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int unread> = 0;

     label0:
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        virtualinvoke $r1.<java.io.ObjectInputStream$PeekInputStream: void close()>();
        return;
    }

    int read(byte[], int, int, boolean) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        byte[] r1, $r2, $r5, $r6;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14;
        boolean z0, $z1;
        java.io.ObjectInputStream$PeekInputStream $r4, $r7;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        if i1 != 0 goto label0;

        return 0;

     label0:
        $z1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z1 == 0 goto label3;

        $i3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i3 != $i4 goto label1;

        specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: void refill()>();

     label1:
        $i5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        if $i5 >= 0 goto label2;

        return -1;

     label2:
        $i6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i8 = $i6 - $i7;
        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i8);
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i9 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i9, r1, i0, i2);
        $i10 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i11 = $i10 + i2;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i11;
        return i2;

     label3:
        if z0 == 0 goto label5;

        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i1, 1024);
        i13 = virtualinvoke $r4.<java.io.ObjectInputStream$PeekInputStream: int read(byte[],int,int)>($r5, 0, $i12);
        if i13 <= 0 goto label4;

        $r6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r1, i0, i13);

     label4:
        return i13;

     label5:
        $r7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $i14 = virtualinvoke $r7.<java.io.ObjectInputStream$PeekInputStream: int read(byte[],int,int)>(r1, i0, i1);
        return $i14;
    }

    public void readFully(byte[]) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: byte[];
        $i0 = lengthof r1;
        virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: void readFully(byte[],int,int,boolean)>(r1, 0, $i0, 0);
        return;
    }

    public void readFully(byte[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: void readFully(byte[],int,int,boolean)>(r1, i0, i1, 0);
        return;
    }

    public void readFully(byte[], int, int, boolean) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        byte[] r1;
        int i0, i1, i2;
        boolean z0;
        java.io.EOFException $r2;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;

     label0:
        if i1 <= 0 goto label2;

        i2 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: int read(byte[],int,int,boolean)>(r1, i0, i1, z0);
        if i2 >= 0 goto label1;

        $r2 = new java.io.EOFException;
        specialinvoke $r2.<java.io.EOFException: void <init>()>();
        throw $r2;

     label1:
        i0 = i0 + i2;
        i1 = i1 - i2;
        goto label0;

     label2:
        return;
    }

    public int skipBytes(int) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int i0, $i1;
        java.io.DataInputStream $r1;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        i0 := @parameter0: int;
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $i1 = virtualinvoke $r1.<java.io.DataInputStream: int skipBytes(int)>(i0);
        return $i1;
    }

    public boolean readBoolean() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int i0;
        java.io.EOFException $r1;
        boolean $z0;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        i0 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: int read()>();
        if i0 >= 0 goto label0;

        $r1 = new java.io.EOFException;
        specialinvoke $r1.<java.io.EOFException: void <init>()>();
        throw $r1;

     label0:
        if i0 == 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public byte readByte() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int i0;
        java.io.EOFException $r1;
        byte $b1;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        i0 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: int read()>();
        if i0 >= 0 goto label0;

        $r1 = new java.io.EOFException;
        specialinvoke $r1.<java.io.EOFException: void <init>()>();
        throw $r1;

     label0:
        $b1 = (byte) i0;
        return $b1;
    }

    public int readUnsignedByte() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int i0;
        java.io.EOFException $r1;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        i0 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: int read()>();
        if i0 >= 0 goto label0;

        $r1 = new java.io.EOFException;
        specialinvoke $r1.<java.io.EOFException: void <init>()>();
        throw $r1;

     label0:
        return i0;
    }

    public char readChar() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        char c0, $c4;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r1;
        byte[] $r2, $r4;
        int $i1, $i2, $i3, $i5, $i6, $i7;
        java.io.DataInputStream $r3;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label0;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        virtualinvoke $r1.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r2, 0, 2);
        goto label1;

     label0:
        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i3 = $i1 - $i2;
        if $i3 >= 2 goto label1;

        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $c4 = virtualinvoke $r3.<java.io.DataInputStream: char readChar()>();
        return $c4;

     label1:
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        c0 = staticinvoke <java.io.Bits: char getChar(byte[],int)>($r4, $i5);
        $i6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i7 = $i6 + 2;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i7;
        return c0;
    }

    public short readShort() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        short s0, $s4;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r1;
        byte[] $r2, $r4;
        int $i1, $i2, $i3, $i5, $i6, $i7;
        java.io.DataInputStream $r3;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label0;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        virtualinvoke $r1.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r2, 0, 2);
        goto label1;

     label0:
        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i3 = $i1 - $i2;
        if $i3 >= 2 goto label1;

        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $s4 = virtualinvoke $r3.<java.io.DataInputStream: short readShort()>();
        return $s4;

     label1:
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        s0 = staticinvoke <java.io.Bits: short getShort(byte[],int)>($r4, $i5);
        $i6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i7 = $i6 + 2;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i7;
        return s0;
    }

    public int readUnsignedShort() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r1;
        byte[] $r2, $r4;
        java.io.DataInputStream $r3;
        short $s6;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label0;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        virtualinvoke $r1.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r2, 0, 2);
        goto label1;

     label0:
        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i3 = $i1 - $i2;
        if $i3 >= 2 goto label1;

        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $i4 = virtualinvoke $r3.<java.io.DataInputStream: int readUnsignedShort()>();
        return $i4;

     label1:
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $s6 = staticinvoke <java.io.Bits: short getShort(byte[],int)>($r4, $i5);
        i0 = $s6 & 65535;
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i8 = $i7 + 2;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i8;
        return i0;
    }

    public int readInt() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r1;
        byte[] $r2, $r4;
        java.io.DataInputStream $r3;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label0;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        virtualinvoke $r1.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r2, 0, 4);
        goto label1;

     label0:
        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i3 = $i1 - $i2;
        if $i3 >= 4 goto label1;

        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $i4 = virtualinvoke $r3.<java.io.DataInputStream: int readInt()>();
        return $i4;

     label1:
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        i0 = staticinvoke <java.io.Bits: int getInt(byte[],int)>($r4, $i5);
        $i6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i7 = $i6 + 4;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i7;
        return i0;
    }

    public float readFloat() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        float f0, $f1;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r1;
        byte[] $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.io.DataInputStream $r3;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label0;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        virtualinvoke $r1.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r2, 0, 4);
        goto label1;

     label0:
        $i0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i2 = $i0 - $i1;
        if $i2 >= 4 goto label1;

        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $f1 = virtualinvoke $r3.<java.io.DataInputStream: float readFloat()>();
        return $f1;

     label1:
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        f0 = staticinvoke <java.io.Bits: float getFloat(byte[],int)>($r4, $i3);
        $i4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i5 = $i4 + 4;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i5;
        return f0;
    }

    public long readLong() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        long l0, $l4;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r1;
        byte[] $r2, $r4;
        int $i1, $i2, $i3, $i5, $i6, $i7;
        java.io.DataInputStream $r3;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label0;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        virtualinvoke $r1.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r2, 0, 8);
        goto label1;

     label0:
        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i3 = $i1 - $i2;
        if $i3 >= 8 goto label1;

        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $l4 = virtualinvoke $r3.<java.io.DataInputStream: long readLong()>();
        return $l4;

     label1:
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        l0 = staticinvoke <java.io.Bits: long getLong(byte[],int)>($r4, $i5);
        $i6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i7 = $i6 + 8;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i7;
        return l0;
    }

    public double readDouble() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        double d0, $d1;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r1;
        byte[] $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.io.DataInputStream $r3;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label0;

        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        virtualinvoke $r1.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r2, 0, 8);
        goto label1;

     label0:
        $i0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i2 = $i0 - $i1;
        if $i2 >= 8 goto label1;

        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $d1 = virtualinvoke $r3.<java.io.DataInputStream: double readDouble()>();
        return $d1;

     label1:
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        d0 = staticinvoke <java.io.Bits: double getDouble(byte[],int)>($r4, $i3);
        $i4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i5 = $i4 + 8;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i5;
        return d0;
    }

    public java.lang.String readUTF() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int $i0;
        long $l1;
        java.lang.String $r1;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $i0 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: int readUnsignedShort()>();
        $l1 = (long) $i0;
        $r1 = specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: java.lang.String readUTFBody(long)>($l1);
        return $r1;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        java.io.DataInputStream $r1;
        java.lang.String $r2;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $r1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $r2 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readLine()>();
        return $r2;
    }

    void readBooleans(boolean[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        boolean[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean $z0, $z1, $z2;
        java.io.ObjectInputStream$PeekInputStream $r2;
        byte[] $r3, $r5;
        java.io.DataInputStream $r4;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: boolean[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = i0 + i1;

     label0:
        if i0 >= i2 goto label4;

        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label1;

        $i6 = i2 - i0;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i6, 1024);
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r3, 0, i3);
        i4 = i0 + i3;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        goto label3;

     label1:
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i8 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i9 = $i7 - $i8;
        if $i9 >= 1 goto label2;

        $i10 = i0;
        i0 = i0 + 1;
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $z1 = virtualinvoke $r4.<java.io.DataInputStream: boolean readBoolean()>();
        r1[$i10] = $z1;
        goto label0;

     label2:
        $i11 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i12 = i0 + $i11;
        $i13 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i14 = $i12 - $i13;
        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i14);

     label3:
        if i0 >= i4 goto label0;

        $i15 = i0;
        i0 = i0 + 1;
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i16 = $i5 + 1;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i16;
        $z2 = staticinvoke <java.io.Bits: boolean getBoolean(byte[],int)>($r5, $i5);
        r1[$i15] = $z2;
        goto label3;

     label4:
        return;
    }

    void readChars(char[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        char[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r2;
        byte[] $r3, $r5;
        java.io.DataInputStream $r4;
        char $c11, $c19;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = i0 + i1;

     label0:
        if i0 >= i2 goto label4;

        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label1;

        $i5 = i2 - i0;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i5, 512);
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i6 = i3 << 1;
        virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r3, 0, $i6);
        i4 = i0 + i3;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        goto label3;

     label1:
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i8 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i9 = $i7 - $i8;
        if $i9 >= 2 goto label2;

        $i10 = i0;
        i0 = i0 + 1;
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $c11 = virtualinvoke $r4.<java.io.DataInputStream: char readChar()>();
        r1[$i10] = $c11;
        goto label0;

     label2:
        $i12 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i13 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i14 = $i12 - $i13;
        $i15 = $i14 >> 1;
        $i16 = i0 + $i15;
        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i16);

     label3:
        if i0 >= i4 goto label0;

        $i17 = i0;
        i0 = i0 + 1;
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i18 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $c19 = staticinvoke <java.io.Bits: char getChar(byte[],int)>($r5, $i18);
        r1[$i17] = $c19;
        $i20 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i21 = $i20 + 2;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i21;
        goto label3;

     label4:
        return;
    }

    void readShorts(short[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        short[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r2;
        byte[] $r3, $r5;
        java.io.DataInputStream $r4;
        short $s11, $s19;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: short[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = i0 + i1;

     label0:
        if i0 >= i2 goto label4;

        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label1;

        $i5 = i2 - i0;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i5, 512);
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i6 = i3 << 1;
        virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r3, 0, $i6);
        i4 = i0 + i3;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        goto label3;

     label1:
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i8 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i9 = $i7 - $i8;
        if $i9 >= 2 goto label2;

        $i10 = i0;
        i0 = i0 + 1;
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $s11 = virtualinvoke $r4.<java.io.DataInputStream: short readShort()>();
        r1[$i10] = $s11;
        goto label0;

     label2:
        $i12 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i13 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i14 = $i12 - $i13;
        $i15 = $i14 >> 1;
        $i16 = i0 + $i15;
        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i16);

     label3:
        if i0 >= i4 goto label0;

        $i17 = i0;
        i0 = i0 + 1;
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i18 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $s19 = staticinvoke <java.io.Bits: short getShort(byte[],int)>($r5, $i18);
        r1[$i17] = $s19;
        $i20 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i21 = $i20 + 2;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i21;
        goto label3;

     label4:
        return;
    }

    void readInts(int[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        int[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r2;
        byte[] $r3, $r5;
        java.io.DataInputStream $r4;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: int[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = i0 + i1;

     label0:
        if i0 >= i2 goto label4;

        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label1;

        $i5 = i2 - i0;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i5, 256);
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i6 = i3 << 2;
        virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r3, 0, $i6);
        i4 = i0 + i3;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        goto label3;

     label1:
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i8 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i9 = $i7 - $i8;
        if $i9 >= 4 goto label2;

        $i10 = i0;
        i0 = i0 + 1;
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $i11 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();
        r1[$i10] = $i11;
        goto label0;

     label2:
        $i12 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i13 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i14 = $i12 - $i13;
        $i15 = $i14 >> 2;
        $i16 = i0 + $i15;
        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i16);

     label3:
        if i0 >= i4 goto label0;

        $i17 = i0;
        i0 = i0 + 1;
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i18 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i19 = staticinvoke <java.io.Bits: int getInt(byte[],int)>($r5, $i18);
        r1[$i17] = $i19;
        $i20 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i21 = $i20 + 4;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i21;
        goto label3;

     label4:
        return;
    }

    void readFloats(float[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        float[] r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r2;
        byte[] $r3, $r5;
        java.io.DataInputStream $r4;
        float $f0;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: float[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = i0 + i1;

     label0:
        if i0 >= i2 goto label4;

        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label1;

        $i4 = i2 - i0;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i4, 256);
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i5 = i3 << 2;
        virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r3, 0, $i5);
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        goto label3;

     label1:
        $i6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i8 = $i6 - $i7;
        if $i8 >= 4 goto label2;

        $i9 = i0;
        i0 = i0 + 1;
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $f0 = virtualinvoke $r4.<java.io.DataInputStream: float readFloat()>();
        r1[$i9] = $f0;
        goto label0;

     label2:
        $i10 = i2 - i0;
        $i11 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i12 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i13 = $i11 - $i12;
        $i14 = $i13 >> 2;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i14);

     label3:
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i15 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        staticinvoke <java.io.ObjectInputStream: void access$700(byte[],int,float[],int,int)>($r5, $i15, r1, i0, i3);
        i0 = i0 + i3;
        $i16 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i17 = i3 << 2;
        $i18 = $i16 + $i17;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i18;
        goto label0;

     label4:
        return;
    }

    void readLongs(long[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        long[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r2;
        byte[] $r3, $r5;
        java.io.DataInputStream $r4;
        long $l11, $l19;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: long[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = i0 + i1;

     label0:
        if i0 >= i2 goto label4;

        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label1;

        $i5 = i2 - i0;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i5, 128);
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i6 = i3 << 3;
        virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r3, 0, $i6);
        i4 = i0 + i3;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        goto label3;

     label1:
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i8 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i9 = $i7 - $i8;
        if $i9 >= 8 goto label2;

        $i10 = i0;
        i0 = i0 + 1;
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $l11 = virtualinvoke $r4.<java.io.DataInputStream: long readLong()>();
        r1[$i10] = $l11;
        goto label0;

     label2:
        $i12 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i13 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i14 = $i12 - $i13;
        $i15 = $i14 >> 3;
        $i16 = i0 + $i15;
        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i16);

     label3:
        if i0 >= i4 goto label0;

        $i17 = i0;
        i0 = i0 + 1;
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i18 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $l19 = staticinvoke <java.io.Bits: long getLong(byte[],int)>($r5, $i18);
        r1[$i17] = $l19;
        $i20 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i21 = $i20 + 8;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i21;
        goto label3;

     label4:
        return;
    }

    void readDoubles(double[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        double[] r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean $z0;
        java.io.ObjectInputStream$PeekInputStream $r2;
        byte[] $r3, $r5;
        java.io.DataInputStream $r4;
        double $d0;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: double[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = i0 + i1;

     label0:
        if i0 >= i2 goto label4;

        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label1;

        $i4 = i2 - i0;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i4, 128);
        $r2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i5 = i3 << 3;
        virtualinvoke $r2.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r3, 0, $i5);
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        goto label3;

     label1:
        $i6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i7 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i8 = $i6 - $i7;
        if $i8 >= 8 goto label2;

        $i9 = i0;
        i0 = i0 + 1;
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.DataInputStream din>;
        $d0 = virtualinvoke $r4.<java.io.DataInputStream: double readDouble()>();
        r1[$i9] = $d0;
        goto label0;

     label2:
        $i10 = i2 - i0;
        $i11 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i12 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i13 = $i11 - $i12;
        $i14 = $i13 >> 3;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i14);

     label3:
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i15 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        staticinvoke <java.io.ObjectInputStream: void access$800(byte[],int,double[],int,int)>($r5, $i15, r1, i0, i3);
        i0 = i0 + i3;
        $i16 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i17 = i3 << 3;
        $i18 = $i16 + $i17;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i18;
        goto label0;

     label4:
        return;
    }

    java.lang.String readLongUTF() throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        $l0 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: long readLong()>();
        $r1 = specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: java.lang.String readUTFBody(long)>($l0);
        return $r1;
    }

    private java.lang.String readUTFBody(long) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        long l0, $l6, $l8, $l10, $l12;
        java.lang.StringBuilder $r1, r2;
        byte $b1, $b3, $b7;
        int i2, $i4, $i5, $i9, $i11, $i13, $i14, $i15;
        boolean $z0, $z1;
        byte[] $r3, $r4, $r6;
        java.io.ObjectInputStream$PeekInputStream $r5;
        java.lang.String $r7;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        l0 := @parameter0: long;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $z0 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z0 != 0 goto label0;

        $b1 = 0;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $b1;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = $b1;

     label0:
        $b3 = l0 cmp 0L;
        if $b3 <= 0 goto label6;

        $i4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        i2 = $i4 - $i5;
        if i2 >= 3 goto label1;

        $l6 = (long) i2;
        $b7 = $l6 cmp l0;
        if $b7 != 0 goto label2;

     label1:
        $l8 = specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: long readUTFSpan(java.lang.StringBuilder,long)>(r2, l0);
        l0 = l0 - $l8;
        goto label5;

     label2:
        $z1 = r0.<java.io.ObjectInputStream$BlockDataInputStream: boolean blkmode>;
        if $z1 == 0 goto label3;

        $i9 = specialinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: int readUTFChar(java.lang.StringBuilder,long)>(r2, l0);
        $l10 = (long) $i9;
        l0 = l0 - $l10;
        goto label5;

     label3:
        if i2 <= 0 goto label4;

        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i11 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $r4 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i11, $r4, 0, i2);

     label4:
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = 0;
        $l12 = staticinvoke <java.lang.Math: long min(long,long)>(1024L, l0);
        $i13 = (int) $l12;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int end> = $i13;
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: java.io.ObjectInputStream$PeekInputStream in>;
        $r6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i14 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i15 = $i14 - i2;
        virtualinvoke $r5.<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>($r6, i2, $i15);

     label5:
        goto label0;

     label6:
        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    private long readUTFSpan(java.lang.StringBuilder, long) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        java.lang.StringBuilder r1;
        long l0, $l12, $l53, $l59, $l65, $l71;
        int i1, i2, i3, i4, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i17, $i20, $i22, $i23, $i25, $i27, $i29, $i30, $i32, $i33, $i34, $i35, $i37, $i38, $i41, $i43, $i45, $i46, $i48, $i49, $i51, $i52, $i55, $i56, $i57, $i58, $i61, $i62, $i63, $i64, $i67, $i68, $i69, $i70;
        boolean z0;
        short s5, $s19, $s24, $s26, $s39, $s40, $s42;
        byte b6, b7, $b13, $b18, $b28, b36, $b44, $b47, $b54, $b60, $b66;
        java.lang.Throwable r2, $r20;
        byte[] $r3, $r6, $r10, $r11;
        char[] $r5, $r9, $r14, $r22;
        char $c21, $c31, $c50;
        java.io.UTFDataFormatException $r8, $r13, $r15, $r16, $r19, $r21;
        java.lang.ArrayIndexOutOfBoundsException $r17, r18;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: java.lang.StringBuilder;
        l0 := @parameter1: long;
        i1 = 0;
        i2 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i8 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int end>;
        $i9 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i10 = $i8 - $i9;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i10, 256);
        $i11 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $l12 = (long) i3;
        $b13 = l0 cmp $l12;
        if $b13 <= 0 goto label0;

        $i14 = i3 - 2;
        goto label1;

     label0:
        $i14 = (int) l0;

     label1:
        i4 = $i11 + $i14;
        z0 = 0;

     label2:
        $i15 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        if $i15 >= i4 goto label11;

        $r3 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i16 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i17 = $i16 + 1;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i17;
        $b18 = $r3[$i16];
        s5 = $b18 & 255;
        $s19 = s5 >> 4;
        tableswitch($s19)
        {
            case 0: goto label3;
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label9;
            case 9: goto label9;
            case 10: goto label9;
            case 11: goto label9;
            case 12: goto label4;
            case 13: goto label4;
            case 14: goto label6;
            default: goto label9;
        };

     label3:
        $r5 = r0.<java.io.ObjectInputStream$BlockDataInputStream: char[] cbuf>;
        $i20 = i1;
        i1 = i1 + 1;
        $c21 = (char) s5;
        $r5[$i20] = $c21;
        goto label10;

     label4:
        $r6 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i22 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i23 = $i22 + 1;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i23;
        b6 = $r6[$i22];
        $s24 = b6 & 192;
        if $s24 == 128 goto label5;

        $r8 = new java.io.UTFDataFormatException;
        specialinvoke $r8.<java.io.UTFDataFormatException: void <init>()>();
        throw $r8;

     label5:
        $r9 = r0.<java.io.ObjectInputStream$BlockDataInputStream: char[] cbuf>;
        $i25 = i1;
        i1 = i1 + 1;
        $s26 = s5 & 31;
        $i27 = $s26 << 6;
        $b28 = b6 & 63;
        $i29 = $b28 << 0;
        $i30 = $i27 | $i29;
        $c31 = (char) $i30;
        $r9[$i25] = $c31;
        goto label10;

     label6:
        $r10 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i32 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i33 = $i32 + 1;
        b7 = $r10[$i33];
        $r11 = r0.<java.io.ObjectInputStream$BlockDataInputStream: byte[] buf>;
        $i34 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i35 = $i34 + 0;
        b36 = $r11[$i35];
        $i37 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i38 = $i37 + 2;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i38;
        $s39 = b36 & 192;
        if $s39 != 128 goto label7;

        $s40 = b7 & 192;
        if $s40 == 128 goto label8;

     label7:
        $r13 = new java.io.UTFDataFormatException;
        specialinvoke $r13.<java.io.UTFDataFormatException: void <init>()>();
        throw $r13;

     label8:
        $r14 = r0.<java.io.ObjectInputStream$BlockDataInputStream: char[] cbuf>;
        $i41 = i1;
        i1 = i1 + 1;
        $s42 = s5 & 15;
        $i43 = $s42 << 12;
        $b44 = b36 & 63;
        $i45 = $b44 << 6;
        $i46 = $i43 | $i45;
        $b47 = b7 & 63;
        $i48 = $b47 << 0;
        $i49 = $i46 | $i48;
        $c50 = (char) $i49;
        $r14[$i41] = $c50;
        goto label10;

     label9:
        $r15 = new java.io.UTFDataFormatException;
        specialinvoke $r15.<java.io.UTFDataFormatException: void <init>()>();
        throw $r15;

     label10:
        goto label2;

     label11:
        if z0 != 0 goto label12;

        $i51 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i52 = $i51 - i2;
        $l53 = (long) $i52;
        $b54 = $l53 cmp l0;
        if $b54 <= 0 goto label22;

     label12:
        $i55 = (int) l0;
        $i56 = i2 + $i55;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i56;
        $r16 = new java.io.UTFDataFormatException;
        specialinvoke $r16.<java.io.UTFDataFormatException: void <init>()>();
        throw $r16;

     label13:
        $r17 := @caughtexception;

     label14:
        r18 = $r17;
        z0 = 1;

     label15:
        if z0 != 0 goto label16;

        $i57 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i58 = $i57 - i2;
        $l59 = (long) $i58;
        $b60 = $l59 cmp l0;
        if $b60 <= 0 goto label22;

     label16:
        $i61 = (int) l0;
        $i62 = i2 + $i61;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i62;
        $r19 = new java.io.UTFDataFormatException;
        specialinvoke $r19.<java.io.UTFDataFormatException: void <init>()>();
        throw $r19;

     label17:
        $r20 := @caughtexception;

     label18:
        r2 = $r20;

     label19:
        if z0 != 0 goto label20;

        $i63 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i64 = $i63 - i2;
        $l65 = (long) $i64;
        $b66 = $l65 cmp l0;
        if $b66 <= 0 goto label21;

     label20:
        $i67 = (int) l0;
        $i68 = i2 + $i67;
        r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos> = $i68;
        $r21 = new java.io.UTFDataFormatException;
        specialinvoke $r21.<java.io.UTFDataFormatException: void <init>()>();
        throw $r21;

     label21:
        throw r2;

     label22:
        $r22 = r0.<java.io.ObjectInputStream$BlockDataInputStream: char[] cbuf>;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r22, 0, i1);
        $i69 = r0.<java.io.ObjectInputStream$BlockDataInputStream: int pos>;
        $i70 = $i69 - i2;
        $l71 = (long) $i70;
        return $l71;

        catch java.lang.ArrayIndexOutOfBoundsException from label2 to label11 with label13;
        catch java.lang.Throwable from label2 to label11 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private int readUTFChar(java.lang.StringBuilder, long) throws java.io.IOException
    {
        java.io.ObjectInputStream$BlockDataInputStream r0;
        java.lang.StringBuilder r1;
        long l0;
        short s1, $s5, $s8, $s9, $s19, $s20, $s21;
        byte b2, b3, $b4, $b7, $b11, $b15, $b16, b18, $b23, $b26;
        char $c6, $c14, $c29;
        java.io.UTFDataFormatException $r3, $r4, $r6, $r7, $r9;
        int $i10, $i12, $i13, $i22, $i24, $i25, $i27, $i28;

        r0 := @this: java.io.ObjectInputStream$BlockDataInputStream;
        r1 := @parameter0: java.lang.StringBuilder;
        l0 := @parameter1: long;
        $b4 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: byte readByte()>();
        s1 = $b4 & 255;
        $s5 = s1 >> 4;
        tableswitch($s5)
        {
            case 0: goto label0;
            case 1: goto label0;
            case 2: goto label0;
            case 3: goto label0;
            case 4: goto label0;
            case 5: goto label0;
            case 6: goto label0;
            case 7: goto label0;
            case 8: goto label9;
            case 9: goto label9;
            case 10: goto label9;
            case 11: goto label9;
            case 12: goto label1;
            case 13: goto label1;
            case 14: goto label4;
            default: goto label9;
        };

     label0:
        $c6 = (char) s1;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);
        return 1;

     label1:
        $b7 = l0 cmp 2L;
        if $b7 >= 0 goto label2;

        $r3 = new java.io.UTFDataFormatException;
        specialinvoke $r3.<java.io.UTFDataFormatException: void <init>()>();
        throw $r3;

     label2:
        b2 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: byte readByte()>();
        $s8 = b2 & 192;
        if $s8 == 128 goto label3;

        $r4 = new java.io.UTFDataFormatException;
        specialinvoke $r4.<java.io.UTFDataFormatException: void <init>()>();
        throw $r4;

     label3:
        $s9 = s1 & 31;
        $i10 = $s9 << 6;
        $b11 = b2 & 63;
        $i12 = $b11 << 0;
        $i13 = $i10 | $i12;
        $c14 = (char) $i13;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c14);
        return 2;

     label4:
        $b15 = l0 cmp 3L;
        if $b15 >= 0 goto label6;

        $b16 = l0 cmp 2L;
        if $b16 != 0 goto label5;

        virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: byte readByte()>();

     label5:
        $r6 = new java.io.UTFDataFormatException;
        specialinvoke $r6.<java.io.UTFDataFormatException: void <init>()>();
        throw $r6;

     label6:
        b18 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: byte readByte()>();
        b3 = virtualinvoke r0.<java.io.ObjectInputStream$BlockDataInputStream: byte readByte()>();
        $s19 = b18 & 192;
        if $s19 != 128 goto label7;

        $s20 = b3 & 192;
        if $s20 == 128 goto label8;

     label7:
        $r7 = new java.io.UTFDataFormatException;
        specialinvoke $r7.<java.io.UTFDataFormatException: void <init>()>();
        throw $r7;

     label8:
        $s21 = s1 & 15;
        $i22 = $s21 << 12;
        $b23 = b18 & 63;
        $i24 = $b23 << 6;
        $i25 = $i22 | $i24;
        $b26 = b3 & 63;
        $i27 = $b26 << 0;
        $i28 = $i25 | $i27;
        $c29 = (char) $i28;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c29);
        return 3;

     label9:
        $r9 = new java.io.UTFDataFormatException;
        specialinvoke $r9.<java.io.UTFDataFormatException: void <init>()>();
        throw $r9;
    }
}
