class java.text.DictionaryBasedBreakIterator extends java.text.RuleBasedBreakIterator
{
    private java.text.BreakDictionary dictionary;
    private boolean[] categoryFlags;
    private int dictionaryCharCount;
    private int[] cachedBreakPositions;
    private int positionInCache;

    public void <init>(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.text.DictionaryBasedBreakIterator r0;
        java.lang.String r1, r2;
        byte[] r3;
        java.text.BreakDictionary $r4;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.text.RuleBasedBreakIterator: void <init>(java.lang.String)>(r1);
        r3 = specialinvoke r0.<java.text.RuleBasedBreakIterator: byte[] getAdditionalData()>();
        if r3 == null goto label0;

        specialinvoke r0.<java.text.DictionaryBasedBreakIterator: void prepareCategoryFlags(byte[])>(r3);
        specialinvoke r0.<java.text.RuleBasedBreakIterator: void setAdditionalData(byte[])>(null);

     label0:
        $r4 = new java.text.BreakDictionary;
        specialinvoke $r4.<java.text.BreakDictionary: void <init>(java.lang.String)>(r2);
        r0.<java.text.DictionaryBasedBreakIterator: java.text.BreakDictionary dictionary> = $r4;
        return;
    }

    private void prepareCategoryFlags(byte[])
    {
        java.text.DictionaryBasedBreakIterator r0;
        byte[] r1;
        int i0, $i1, $i2, $i3;
        boolean[] $r2, $r3;
        byte $b4;
        boolean $z0;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        r1 := @parameter0: byte[];
        $i1 = lengthof r1;
        $r2 = newarray (boolean)[$i1];
        r0.<java.text.DictionaryBasedBreakIterator: boolean[] categoryFlags> = $r2;
        i0 = 0;

     label0:
        $i2 = lengthof r1;
        if i0 >= $i2 goto label3;

        $r3 = r0.<java.text.DictionaryBasedBreakIterator: boolean[] categoryFlags>;
        $i3 = i0;
        $b4 = r1[i0];
        if $b4 != 1 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3[$i3] = $z0;
        i0 = i0 + 1;
        goto label0;

     label3:
        return;
    }

    public void setText(java.text.CharacterIterator)
    {
        java.text.DictionaryBasedBreakIterator r0;
        java.text.CharacterIterator r1;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        r1 := @parameter0: java.text.CharacterIterator;
        specialinvoke r0.<java.text.RuleBasedBreakIterator: void setText(java.text.CharacterIterator)>(r1);
        r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions> = null;
        r0.<java.text.DictionaryBasedBreakIterator: int dictionaryCharCount> = 0;
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = 0;
        return;
    }

    public int first()
    {
        java.text.DictionaryBasedBreakIterator r0;
        int $i0;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions> = null;
        r0.<java.text.DictionaryBasedBreakIterator: int dictionaryCharCount> = 0;
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = 0;
        $i0 = specialinvoke r0.<java.text.RuleBasedBreakIterator: int first()>();
        return $i0;
    }

    public int last()
    {
        java.text.DictionaryBasedBreakIterator r0;
        int $i0;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions> = null;
        r0.<java.text.DictionaryBasedBreakIterator: int dictionaryCharCount> = 0;
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = 0;
        $i0 = specialinvoke r0.<java.text.RuleBasedBreakIterator: int last()>();
        return $i0;
    }

    public int previous()
    {
        java.text.DictionaryBasedBreakIterator r0;
        java.text.CharacterIterator r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        int[] $r2, $r4, $r5, $r6, $r7;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        r1 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: java.text.CharacterIterator getText()>();
        $r2 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        if $r2 == null goto label0;

        $i1 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        if $i1 <= 0 goto label0;

        $i2 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i3 = $i2 - 1;
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = $i3;
        $r4 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i4 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i5 = $r4[$i4];
        interfaceinvoke r1.<java.text.CharacterIterator: char setIndex(int)>($i5);
        $r5 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i7 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i8 = $r5[$i7];
        return $i8;

     label0:
        r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions> = null;
        i0 = specialinvoke r0.<java.text.RuleBasedBreakIterator: int previous()>();
        $r6 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        if $r6 == null goto label1;

        $r7 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i9 = lengthof $r7;
        $i10 = $i9 - 2;
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = $i10;

     label1:
        return i0;
    }

    public int preceding(int)
    {
        java.text.DictionaryBasedBreakIterator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17;
        java.text.CharacterIterator r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r10;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        i0 := @parameter0: int;
        r1 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: java.text.CharacterIterator getText()>();
        staticinvoke <java.text.DictionaryBasedBreakIterator: void checkOffset(int,java.text.CharacterIterator)>(i0, r1);
        $r2 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        if $r2 == null goto label0;

        $r3 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i1 = $r3[0];
        if i0 <= $i1 goto label0;

        $r4 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $r5 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i2 = lengthof $r5;
        $i3 = $i2 - 1;
        $i4 = $r4[$i3];
        if i0 <= $i4 goto label1;

     label0:
        r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions> = null;
        $i5 = specialinvoke r0.<java.text.RuleBasedBreakIterator: int preceding(int)>(i0);
        return $i5;

     label1:
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = 0;

     label2:
        $i6 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $r6 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i7 = lengthof $r6;
        if $i6 >= $i7 goto label3;

        $r7 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i8 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i9 = $r7[$i8];
        if i0 <= $i9 goto label3;

        $i10 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i11 = $i10 + 1;
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = $i11;
        goto label2;

     label3:
        $i12 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i13 = $i12 - 1;
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = $i13;
        $r10 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i14 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i15 = $r10[$i14];
        interfaceinvoke r1.<java.text.CharacterIterator: char setIndex(int)>($i15);
        $i17 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        return $i17;
    }

    public int following(int)
    {
        java.text.DictionaryBasedBreakIterator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15;
        java.text.CharacterIterator r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r9;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        i0 := @parameter0: int;
        r1 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: java.text.CharacterIterator getText()>();
        staticinvoke <java.text.DictionaryBasedBreakIterator: void checkOffset(int,java.text.CharacterIterator)>(i0, r1);
        $r2 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        if $r2 == null goto label0;

        $r3 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i1 = $r3[0];
        if i0 < $i1 goto label0;

        $r4 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $r5 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i2 = lengthof $r5;
        $i3 = $i2 - 1;
        $i4 = $r4[$i3];
        if i0 < $i4 goto label1;

     label0:
        r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions> = null;
        $i5 = specialinvoke r0.<java.text.RuleBasedBreakIterator: int following(int)>(i0);
        return $i5;

     label1:
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = 0;

     label2:
        $i6 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $r6 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i7 = lengthof $r6;
        if $i6 >= $i7 goto label3;

        $r7 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i8 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i9 = $r7[$i8];
        if i0 < $i9 goto label3;

        $i10 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i11 = $i10 + 1;
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = $i11;
        goto label2;

     label3:
        $r9 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i12 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i13 = $r9[$i12];
        interfaceinvoke r1.<java.text.CharacterIterator: char setIndex(int)>($i13);
        $i15 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        return $i15;
    }

    protected int handleNext()
    {
        java.text.DictionaryBasedBreakIterator r0;
        java.text.CharacterIterator r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13;
        int[] $r2, $r3, $r4, $r6, $r7;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        r1 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: java.text.CharacterIterator getText()>();
        $r2 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        if $r2 == null goto label0;

        $i2 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $r3 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i3 = lengthof $r3;
        $i4 = $i3 - 1;
        if $i2 != $i4 goto label2;

     label0:
        i0 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        r0.<java.text.DictionaryBasedBreakIterator: int dictionaryCharCount> = 0;
        i1 = specialinvoke r0.<java.text.RuleBasedBreakIterator: int handleNext()>();
        $i5 = r0.<java.text.DictionaryBasedBreakIterator: int dictionaryCharCount>;
        if $i5 <= 1 goto label1;

        $i6 = i1 - i0;
        if $i6 <= 1 goto label1;

        specialinvoke r0.<java.text.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>(i0, i1);
        goto label2;

     label1:
        r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions> = null;
        return i1;

     label2:
        $r4 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        if $r4 == null goto label3;

        $i7 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i8 = $i7 + 1;
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = $i8;
        $r6 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i9 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i10 = $r6[$i9];
        interfaceinvoke r1.<java.text.CharacterIterator: char setIndex(int)>($i10);
        $r7 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i12 = r0.<java.text.DictionaryBasedBreakIterator: int positionInCache>;
        $i13 = $r7[$i12];
        return $i13;

     label3:
        return -9999;
    }

    protected int lookupCategory(int)
    {
        java.text.DictionaryBasedBreakIterator r0;
        int i0, i1, $i2, $i3;
        boolean[] $r1;
        boolean $z0;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        i0 := @parameter0: int;
        i1 = specialinvoke r0.<java.text.RuleBasedBreakIterator: int lookupCategory(int)>(i0);
        if i1 == -1 goto label0;

        $r1 = r0.<java.text.DictionaryBasedBreakIterator: boolean[] categoryFlags>;
        $z0 = $r1[i1];
        if $z0 == 0 goto label0;

        $i2 = r0.<java.text.DictionaryBasedBreakIterator: int dictionaryCharCount>;
        $i3 = $i2 + 1;
        r0.<java.text.DictionaryBasedBreakIterator: int dictionaryCharCount> = $i3;

     label0:
        return i1;
    }

    private void divideUpDictionaryRange(int, int)
    {
        java.text.DictionaryBasedBreakIterator r0;
        int i0, i1, i2, i3, i5, i7, i8, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i27, $i28, $i29, i30, $i31, $i32, $i33;
        java.text.CharacterIterator r1;
        java.util.Stack r2, r3, r5, $r8, $r9, $r18;
        java.util.Vector r4, $r10;
        short s4, $s9;
        null_type n0, n1;
        java.lang.Integer r6, $r12, $r15, $r22, $r23, $r24, $r26, $r30, $r34, $r36, $r42;
        boolean[] $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.text.BreakDictionary $r11, $r14;
        java.lang.Object $r17, $r19, $r21, $r28, $r29, r31, $r33, $r41;
        int[] $r38, $r39, $r40;

        r0 := @this: java.text.DictionaryBasedBreakIterator;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: java.text.CharacterIterator getText()>();
        interfaceinvoke r1.<java.text.CharacterIterator: char setIndex(int)>(i0);
        i2 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: int getCurrent()>();
        i3 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: int lookupCategory(int)>(i2);

     label0:
        if i3 == -1 goto label1;

        $r7 = r0.<java.text.DictionaryBasedBreakIterator: boolean[] categoryFlags>;
        $z0 = $r7[i3];
        if $z0 != 0 goto label2;

     label1:
        i7 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: int getNext()>();
        i3 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: int lookupCategory(int)>(i7);
        goto label0;

     label2:
        $r8 = new java.util.Stack;
        specialinvoke $r8.<java.util.Stack: void <init>()>();
        r2 = $r8;
        $r9 = new java.util.Stack;
        specialinvoke $r9.<java.util.Stack: void <init>()>();
        r3 = $r9;
        $r10 = new java.util.Vector;
        specialinvoke $r10.<java.util.Vector: void <init>()>();
        r4 = $r10;
        s4 = 0;
        i5 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        r5 = null;
        i8 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: int getCurrent()>();

     label3:
        $r11 = r0.<java.text.DictionaryBasedBreakIterator: java.text.BreakDictionary dictionary>;
        $s9 = virtualinvoke $r11.<java.text.BreakDictionary: short getNextState(int,int)>(s4, 0);
        if $s9 != -1 goto label4;

        $i10 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);
        virtualinvoke r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r12);

     label4:
        $r14 = r0.<java.text.DictionaryBasedBreakIterator: java.text.BreakDictionary dictionary>;
        s4 = virtualinvoke $r14.<java.text.BreakDictionary: short getNextStateFromCharacter(int,int)>(s4, i8);
        if s4 != -1 goto label5;

        $i11 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);
        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r15);
        goto label19;

     label5:
        if s4 == 0 goto label6;

        $i12 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        if $i12 < i1 goto label18;

     label6:
        $i13 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        if $i13 <= i5 goto label7;

        i5 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        $r17 = virtualinvoke r2.<java.util.Stack: java.lang.Object clone()>();
        $r18 = (java.util.Stack) $r17;
        r5 = (java.util.Stack) $r18;

     label7:
        n0 = null;

     label8:
        $z1 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>();
        if $z1 != 0 goto label9;

        $r19 = virtualinvoke r3.<java.util.Stack: java.lang.Object peek()>();
        $z2 = virtualinvoke r4.<java.util.Vector: boolean contains(java.lang.Object)>($r19);
        if $z2 == 0 goto label9;

        virtualinvoke r3.<java.util.Stack: java.lang.Object pop()>();
        goto label8;

     label9:
        $z3 = virtualinvoke r3.<java.util.Stack: boolean isEmpty()>();
        if $z3 == 0 goto label13;

        if r5 == null goto label10;

        r2 = r5;
        if i5 >= i1 goto label19;

        $i14 = i5 + 1;
        interfaceinvoke r1.<java.text.CharacterIterator: char setIndex(int)>($i14);
        goto label16;

     label10:
        $i16 = virtualinvoke r2.<java.util.Stack: int size()>();
        if $i16 == 0 goto label11;

        $r21 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>();
        $r22 = (java.lang.Integer) $r21;
        $r23 = (java.lang.Integer) $r22;
        $i17 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();
        $i18 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        if $i17 == $i18 goto label12;

     label11:
        $i19 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        if $i19 == i0 goto label12;

        $r24 = new java.lang.Integer;
        $i20 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        specialinvoke $r24.<java.lang.Integer: void <init>(int)>($i20);
        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r24);

     label12:
        virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: int getNext()>();
        $r26 = new java.lang.Integer;
        $i22 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        specialinvoke $r26.<java.lang.Integer: void <init>(int)>($i22);
        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r26);
        goto label16;

     label13:
        $r28 = virtualinvoke r3.<java.util.Stack: java.lang.Object pop()>();
        r6 = (java.lang.Integer) $r28;
        n1 = null;

     label14:
        $z4 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
        if $z4 != 0 goto label15;

        $i23 = virtualinvoke r6.<java.lang.Integer: int intValue()>();
        $r29 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>();
        $r30 = (java.lang.Integer) $r29;
        $i24 = virtualinvoke $r30.<java.lang.Integer: int intValue()>();
        if $i23 >= $i24 goto label15;

        r31 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();
        virtualinvoke r4.<java.util.Vector: void addElement(java.lang.Object)>(r31);
        goto label14;

     label15:
        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r6);
        $r33 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>();
        $r34 = (java.lang.Integer) $r33;
        $i25 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();
        interfaceinvoke r1.<java.text.CharacterIterator: char setIndex(int)>($i25);

     label16:
        i8 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: int getCurrent()>();
        $i27 = interfaceinvoke r1.<java.text.CharacterIterator: int getIndex()>();
        if $i27 < i1 goto label17;

        goto label19;

     label17:
        goto label3;

     label18:
        i8 = virtualinvoke r0.<java.text.DictionaryBasedBreakIterator: int getNext()>();
        goto label3;

     label19:
        $z5 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
        if $z5 != 0 goto label20;

        virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();

     label20:
        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r36);
        $i28 = virtualinvoke r2.<java.util.Stack: int size()>();
        $i29 = $i28 + 1;
        $r38 = newarray (int)[$i29];
        r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions> = $r38;
        $r39 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $r39[0] = i0;
        i30 = 0;

     label21:
        $i31 = virtualinvoke r2.<java.util.Stack: int size()>();
        if i30 >= $i31 goto label22;

        $r40 = r0.<java.text.DictionaryBasedBreakIterator: int[] cachedBreakPositions>;
        $i32 = i30 + 1;
        $r41 = virtualinvoke r2.<java.util.Stack: java.lang.Object elementAt(int)>(i30);
        $r42 = (java.lang.Integer) $r41;
        $i33 = virtualinvoke $r42.<java.lang.Integer: int intValue()>();
        $r40[$i32] = $i33;
        i30 = i30 + 1;
        goto label21;

     label22:
        r0.<java.text.DictionaryBasedBreakIterator: int positionInCache> = 0;
        return;
    }
}
