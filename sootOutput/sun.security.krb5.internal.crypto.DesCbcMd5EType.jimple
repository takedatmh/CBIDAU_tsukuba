public final class sun.security.krb5.internal.crypto.DesCbcMd5EType extends sun.security.krb5.internal.crypto.DesCbcEType
{

    public void <init>()
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        specialinvoke r0.<sun.security.krb5.internal.crypto.DesCbcEType: void <init>()>();
        return;
    }

    public int eType()
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        return 3;
    }

    public int minimumPadSize()
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        return 0;
    }

    public int confounderSize()
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        return 8;
    }

    public int checksumType()
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        return 7;
    }

    public int checksumSize()
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        return 16;
    }

    protected byte[] calculateChecksum(byte[], int) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;
        byte[] r1, $r11;
        int i0;
        null_type n0;
        java.lang.Exception r2, $r5, $r12, r13;
        java.lang.StringBuilder $r3, $r7, $r9;
        java.security.MessageDigest r4;
        sun.security.krb5.KrbCryptoException $r6, $r14;
        java.lang.String $r8, $r10, $r15;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        n0 = null;

     label0:
        r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        $r6 = new sun.security.krb5.KrbCryptoException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JCE provider may not be installed. ");
        $r8 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label3:
        virtualinvoke r4.<java.security.MessageDigest: void update(byte[])>(r1);
        $r11 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>();

     label4:
        return $r11;

     label5:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new sun.security.krb5.KrbCryptoException;
        $r15 = virtualinvoke r13.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r14.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r15);
        throw $r14;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public volatile byte[] decrypt(byte[], byte[], byte[], int) throws sun.security.krb5.internal.KrbApErrException, sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;
        byte[] r1, r2, r3, $r4;
        int i0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        r3 := @parameter2: byte[];
        i0 := @parameter3: int;
        $r4 = specialinvoke r0.<sun.security.krb5.internal.crypto.DesCbcEType: byte[] decrypt(byte[],byte[],byte[],int)>(r1, r2, r3, i0);
        return $r4;
    }

    public volatile byte[] decrypt(byte[], byte[], int) throws sun.security.krb5.internal.KrbApErrException, sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;
        byte[] r1, r2, $r3;
        int i0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        i0 := @parameter2: int;
        $r3 = specialinvoke r0.<sun.security.krb5.internal.crypto.DesCbcEType: byte[] decrypt(byte[],byte[],int)>(r1, r2, i0);
        return $r3;
    }

    public volatile byte[] encrypt(byte[], byte[], byte[], int) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;
        byte[] r1, r2, r3, $r4;
        int i0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        r3 := @parameter2: byte[];
        i0 := @parameter3: int;
        $r4 = specialinvoke r0.<sun.security.krb5.internal.crypto.DesCbcEType: byte[] encrypt(byte[],byte[],byte[],int)>(r1, r2, r3, i0);
        return $r4;
    }

    public volatile byte[] encrypt(byte[], byte[], int) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;
        byte[] r1, r2, $r3;
        int i0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        i0 := @parameter2: int;
        $r3 = specialinvoke r0.<sun.security.krb5.internal.crypto.DesCbcEType: byte[] encrypt(byte[],byte[],int)>(r1, r2, i0);
        return $r3;
    }

    public volatile int keySize()
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;
        int $i0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        $i0 = specialinvoke r0.<sun.security.krb5.internal.crypto.DesCbcEType: int keySize()>();
        return $i0;
    }

    public volatile int keyType()
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;
        int $i0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        $i0 = specialinvoke r0.<sun.security.krb5.internal.crypto.DesCbcEType: int keyType()>();
        return $i0;
    }

    public volatile int blockSize()
    {
        sun.security.krb5.internal.crypto.DesCbcMd5EType r0;
        int $i0;

        r0 := @this: sun.security.krb5.internal.crypto.DesCbcMd5EType;
        $i0 = specialinvoke r0.<sun.security.krb5.internal.crypto.DesCbcEType: int blockSize()>();
        return $i0;
    }
}
