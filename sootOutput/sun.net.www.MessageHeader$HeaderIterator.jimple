class sun.net.www.MessageHeader$HeaderIterator extends java.lang.Object implements java.util.Iterator
{
    int index;
    int next;
    java.lang.String key;
    boolean haveNext;
    java.lang.Object lock;
    final sun.net.www.MessageHeader this$0;

    public void <init>(sun.net.www.MessageHeader, java.lang.String, java.lang.Object)
    {
        sun.net.www.MessageHeader$HeaderIterator r0;
        sun.net.www.MessageHeader r1;
        java.lang.String r2;
        java.lang.Object r3;

        r0 := @this: sun.net.www.MessageHeader$HeaderIterator;
        r1 := @parameter0: sun.net.www.MessageHeader;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Object;
        r0.<sun.net.www.MessageHeader$HeaderIterator: sun.net.www.MessageHeader this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.net.www.MessageHeader$HeaderIterator: int index> = 0;
        r0.<sun.net.www.MessageHeader$HeaderIterator: int next> = -1;
        r0.<sun.net.www.MessageHeader$HeaderIterator: boolean haveNext> = 0;
        r0.<sun.net.www.MessageHeader$HeaderIterator: java.lang.String key> = r2;
        r0.<sun.net.www.MessageHeader$HeaderIterator: java.lang.Object lock> = r3;
        return;
    }

    public boolean hasNext()
    {
        sun.net.www.MessageHeader$HeaderIterator r0;
        java.lang.Object r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Throwable r2, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        sun.net.www.MessageHeader $r4, $r6;
        java.lang.String $r5, $r8;
        java.lang.String[] $r7;

        r0 := @this: sun.net.www.MessageHeader$HeaderIterator;
        $r3 = r0.<sun.net.www.MessageHeader$HeaderIterator: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $z0 = r0.<sun.net.www.MessageHeader$HeaderIterator: boolean haveNext>;
        if $z0 == 0 goto label2;

        $z1 = 1;
        exitmonitor r1;

     label1:
        return $z1;

     label2:
        $i1 = r0.<sun.net.www.MessageHeader$HeaderIterator: int index>;
        $r4 = r0.<sun.net.www.MessageHeader$HeaderIterator: sun.net.www.MessageHeader this$0>;
        $i2 = staticinvoke <sun.net.www.MessageHeader: int access$000(sun.net.www.MessageHeader)>($r4);
        if $i1 >= $i2 goto label5;

        $r5 = r0.<sun.net.www.MessageHeader$HeaderIterator: java.lang.String key>;
        $r6 = r0.<sun.net.www.MessageHeader$HeaderIterator: sun.net.www.MessageHeader this$0>;
        $r7 = staticinvoke <sun.net.www.MessageHeader: java.lang.String[] access$100(sun.net.www.MessageHeader)>($r6);
        $i3 = r0.<sun.net.www.MessageHeader$HeaderIterator: int index>;
        $r8 = $r7[$i3];
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);
        if $z2 == 0 goto label4;

        r0.<sun.net.www.MessageHeader$HeaderIterator: boolean haveNext> = 1;
        $i0 = r0.<sun.net.www.MessageHeader$HeaderIterator: int index>;
        $i4 = $i0 + 1;
        r0.<sun.net.www.MessageHeader$HeaderIterator: int index> = $i4;
        r0.<sun.net.www.MessageHeader$HeaderIterator: int next> = $i0;
        $z3 = 1;
        exitmonitor r1;

     label3:
        return $z3;

     label4:
        $i5 = r0.<sun.net.www.MessageHeader$HeaderIterator: int index>;
        $i6 = $i5 + 1;
        r0.<sun.net.www.MessageHeader$HeaderIterator: int index> = $i6;
        goto label2;

     label5:
        $z4 = 0;
        exitmonitor r1;

     label6:
        return $z4;

     label7:
        $r11 := @caughtexception;

     label8:
        r2 = $r11;
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.lang.String next()
    {
        sun.net.www.MessageHeader$HeaderIterator r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r9;
        boolean $z0, $z1;
        sun.net.www.MessageHeader $r4;
        java.lang.String[] $r5;
        int $i0;
        java.lang.String $r6, $r7;
        java.util.NoSuchElementException $r8;

        r0 := @this: sun.net.www.MessageHeader$HeaderIterator;
        $r3 = r0.<sun.net.www.MessageHeader$HeaderIterator: java.lang.Object lock>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $z0 = r0.<sun.net.www.MessageHeader$HeaderIterator: boolean haveNext>;
        if $z0 == 0 goto label2;

        r0.<sun.net.www.MessageHeader$HeaderIterator: boolean haveNext> = 0;
        $r4 = r0.<sun.net.www.MessageHeader$HeaderIterator: sun.net.www.MessageHeader this$0>;
        $r5 = staticinvoke <sun.net.www.MessageHeader: java.lang.String[] access$200(sun.net.www.MessageHeader)>($r4);
        $i0 = r0.<sun.net.www.MessageHeader$HeaderIterator: int next>;
        $r6 = $r5[$i0];
        exitmonitor r1;

     label1:
        return $r6;

     label2:
        $z1 = virtualinvoke r0.<sun.net.www.MessageHeader$HeaderIterator: boolean hasNext()>();
        if $z1 == 0 goto label4;

        $r7 = virtualinvoke r0.<sun.net.www.MessageHeader$HeaderIterator: java.lang.String next()>();
        exitmonitor r1;

     label3:
        return $r7;

     label4:
        $r8 = new java.util.NoSuchElementException;
        specialinvoke $r8.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No more elements");
        throw $r8;

     label5:
        $r9 := @caughtexception;
        r2 = $r9;
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public void remove()
    {
        sun.net.www.MessageHeader$HeaderIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: sun.net.www.MessageHeader$HeaderIterator;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("remove not allowed");
        throw $r1;
    }

    public volatile java.lang.Object next()
    {
        sun.net.www.MessageHeader$HeaderIterator r0;
        java.lang.String $r1;

        r0 := @this: sun.net.www.MessageHeader$HeaderIterator;
        $r1 = virtualinvoke r0.<sun.net.www.MessageHeader$HeaderIterator: java.lang.String next()>();
        return $r1;
    }
}
