public interface  org.apache.tomcat.InstanceManager extends java.lang.Object
{

    public abstract java.lang.Object newInstance(java.lang.Class) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, javax.naming.NamingException, java.lang.InstantiationException, java.lang.IllegalArgumentException, java.lang.NoSuchMethodException, java.lang.SecurityException;

    public abstract java.lang.Object newInstance(java.lang.String) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, javax.naming.NamingException, java.lang.InstantiationException, java.lang.ClassNotFoundException, java.lang.IllegalArgumentException, java.lang.NoSuchMethodException, java.lang.SecurityException;

    public abstract java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, javax.naming.NamingException, java.lang.InstantiationException, java.lang.ClassNotFoundException, java.lang.IllegalArgumentException, java.lang.NoSuchMethodException, java.lang.SecurityException;

    public abstract void newInstance(java.lang.Object) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, javax.naming.NamingException;

    public abstract void destroyInstance(java.lang.Object) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException;
}
