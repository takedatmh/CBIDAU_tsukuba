class sun.security.util.MemoryCache$HardCacheEntry extends java.lang.Object implements sun.security.util.MemoryCache$CacheEntry
{
    private java.lang.Object key;
    private java.lang.Object value;
    private long expirationTime;

    void <init>(java.lang.Object, java.lang.Object, long)
    {
        sun.security.util.MemoryCache$HardCacheEntry r0;
        java.lang.Object r1, r2;
        long l0;

        r0 := @this: sun.security.util.MemoryCache$HardCacheEntry;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        l0 := @parameter2: long;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.util.MemoryCache$HardCacheEntry: java.lang.Object key> = r1;
        r0.<sun.security.util.MemoryCache$HardCacheEntry: java.lang.Object value> = r2;
        r0.<sun.security.util.MemoryCache$HardCacheEntry: long expirationTime> = l0;
        return;
    }

    public java.lang.Object getKey()
    {
        sun.security.util.MemoryCache$HardCacheEntry r0;
        java.lang.Object $r1;

        r0 := @this: sun.security.util.MemoryCache$HardCacheEntry;
        $r1 = r0.<sun.security.util.MemoryCache$HardCacheEntry: java.lang.Object key>;
        return $r1;
    }

    public java.lang.Object getValue()
    {
        sun.security.util.MemoryCache$HardCacheEntry r0;
        java.lang.Object $r1;

        r0 := @this: sun.security.util.MemoryCache$HardCacheEntry;
        $r1 = r0.<sun.security.util.MemoryCache$HardCacheEntry: java.lang.Object value>;
        return $r1;
    }

    public boolean isValid(long)
    {
        sun.security.util.MemoryCache$HardCacheEntry r0;
        long l0, $l1;
        boolean z0, $z1;
        byte $b2;

        r0 := @this: sun.security.util.MemoryCache$HardCacheEntry;
        l0 := @parameter0: long;
        $l1 = r0.<sun.security.util.MemoryCache$HardCacheEntry: long expirationTime>;
        $b2 = l0 cmp $l1;
        if $b2 > 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;
        if z0 != 0 goto label2;

        virtualinvoke r0.<sun.security.util.MemoryCache$HardCacheEntry: void invalidate()>();

     label2:
        return z0;
    }

    public void invalidate()
    {
        sun.security.util.MemoryCache$HardCacheEntry r0;

        r0 := @this: sun.security.util.MemoryCache$HardCacheEntry;
        r0.<sun.security.util.MemoryCache$HardCacheEntry: java.lang.Object key> = null;
        r0.<sun.security.util.MemoryCache$HardCacheEntry: java.lang.Object value> = null;
        r0.<sun.security.util.MemoryCache$HardCacheEntry: long expirationTime> = -1L;
        return;
    }
}
