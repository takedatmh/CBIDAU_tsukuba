public final class org.apache.tomcat.util.http.mapper.Mapper$ContextList extends java.lang.Object
{
    public final org.apache.tomcat.util.http.mapper.Mapper$Context[] contexts;
    public final int nesting;

    public void <init>()
    {
        org.apache.tomcat.util.http.mapper.Mapper$ContextList r0;
        org.apache.tomcat.util.http.mapper.Mapper$Context[] $r1;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$ContextList;
        $r1 = newarray (org.apache.tomcat.util.http.mapper.Mapper$Context)[0];
        specialinvoke r0.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: void <init>(org.apache.tomcat.util.http.mapper.Mapper$Context[],int)>($r1, 0);
        return;
    }

    private void <init>(org.apache.tomcat.util.http.mapper.Mapper$Context[], int)
    {
        org.apache.tomcat.util.http.mapper.Mapper$ContextList r0;
        org.apache.tomcat.util.http.mapper.Mapper$Context[] r1;
        int i0;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$ContextList;
        r1 := @parameter0: org.apache.tomcat.util.http.mapper.Mapper$Context[];
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: org.apache.tomcat.util.http.mapper.Mapper$Context[] contexts> = r1;
        r0.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: int nesting> = i0;
        return;
    }

    public org.apache.tomcat.util.http.mapper.Mapper$ContextList addContext(org.apache.tomcat.util.http.mapper.Mapper$Context, int)
    {
        org.apache.tomcat.util.http.mapper.Mapper$ContextList r0, $r5;
        org.apache.tomcat.util.http.mapper.Mapper$Context r1;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.tomcat.util.http.mapper.Mapper$Context[] r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$ContextList;
        r1 := @parameter0: org.apache.tomcat.util.http.mapper.Mapper$Context;
        i0 := @parameter1: int;
        $r3 = r0.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: org.apache.tomcat.util.http.mapper.Mapper$Context[] contexts>;
        $i1 = lengthof $r3;
        $i2 = $i1 + 1;
        r2 = newarray (org.apache.tomcat.util.http.mapper.Mapper$Context)[$i2];
        $r4 = r0.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: org.apache.tomcat.util.http.mapper.Mapper$Context[] contexts>;
        $z0 = staticinvoke <org.apache.tomcat.util.http.mapper.Mapper: boolean access$0(org.apache.tomcat.util.http.mapper.Mapper$MapElement[],org.apache.tomcat.util.http.mapper.Mapper$MapElement[],org.apache.tomcat.util.http.mapper.Mapper$MapElement)>($r4, r2, r1);
        if $z0 == 0 goto label0;

        $r5 = new org.apache.tomcat.util.http.mapper.Mapper$ContextList;
        $i3 = r0.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: int nesting>;
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, i0);
        specialinvoke $r5.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: void <init>(org.apache.tomcat.util.http.mapper.Mapper$Context[],int)>(r2, $i4);
        return $r5;

     label0:
        return null;
    }

    public org.apache.tomcat.util.http.mapper.Mapper$ContextList removeContext(java.lang.String)
    {
        org.apache.tomcat.util.http.mapper.Mapper$ContextList r0, $r9;
        java.lang.String r1, $r8;
        org.apache.tomcat.util.http.mapper.Mapper$Context[] r2, r3, $r5, $r6;
        int i0, i1, i2, $i3, $i4, $i5;
        org.apache.tomcat.util.http.mapper.Mapper$Context r4;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$ContextList;
        r1 := @parameter0: java.lang.String;
        $r5 = r0.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: org.apache.tomcat.util.http.mapper.Mapper$Context[] contexts>;
        $i3 = lengthof $r5;
        $i4 = $i3 - 1;
        r2 = newarray (org.apache.tomcat.util.http.mapper.Mapper$Context)[$i4];
        $r6 = r0.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: org.apache.tomcat.util.http.mapper.Mapper$Context[] contexts>;
        $z0 = staticinvoke <org.apache.tomcat.util.http.mapper.Mapper: boolean access$1(org.apache.tomcat.util.http.mapper.Mapper$MapElement[],org.apache.tomcat.util.http.mapper.Mapper$MapElement[],java.lang.String)>($r6, r2, r1);
        if $z0 == 0 goto label2;

        i0 = 0;
        r3 = r2;
        i1 = lengthof r2;
        i2 = 0;
        goto label1;

     label0:
        r4 = r3[i2];
        $r8 = r4.<org.apache.tomcat.util.http.mapper.Mapper$Context: java.lang.String name>;
        $i5 = staticinvoke <org.apache.tomcat.util.http.mapper.Mapper: int access$2(java.lang.String)>($r8);
        i0 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i5);
        i2 = i2 + 1;

     label1:
        if i2 < i1 goto label0;

        $r9 = new org.apache.tomcat.util.http.mapper.Mapper$ContextList;
        specialinvoke $r9.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: void <init>(org.apache.tomcat.util.http.mapper.Mapper$Context[],int)>(r2, i0);
        return $r9;

     label2:
        return null;
    }
}
