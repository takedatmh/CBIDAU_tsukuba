public class sun.security.krb5.internal.HostAddress extends java.lang.Object implements java.lang.Cloneable
{
    int addrType;
    byte[] address;
    private static java.net.InetAddress localInetAddress;
    private static final boolean DEBUG;
    private volatile int hashCode;

    private void <init>(int)
    {
        sun.security.krb5.internal.HostAddress r0;
        int i0;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddress: byte[] address> = null;
        r0.<sun.security.krb5.internal.HostAddress: int hashCode> = 0;
        return;
    }

    public java.lang.Object clone()
    {
        sun.security.krb5.internal.HostAddress r0, $r1, r2;
        int $i0;
        byte[] $r3, $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        $r1 = new sun.security.krb5.internal.HostAddress;
        specialinvoke $r1.<sun.security.krb5.internal.HostAddress: void <init>(int)>(0);
        r2 = $r1;
        $i0 = r0.<sun.security.krb5.internal.HostAddress: int addrType>;
        r2.<sun.security.krb5.internal.HostAddress: int addrType> = $i0;
        $r3 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        if $r3 == null goto label0;

        $r4 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();
        $r6 = (byte[]) $r5;
        r2.<sun.security.krb5.internal.HostAddress: byte[] address> = $r6;

     label0:
        return r2;
    }

    public int hashCode()
    {
        sun.security.krb5.internal.HostAddress r0;
        byte b0, $b8;
        int i1, $i2, $i3, $i4, i5, $i6, $i7, $i9;
        byte[] $r1, $r2, $r3;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        $i2 = r0.<sun.security.krb5.internal.HostAddress: int hashCode>;
        if $i2 != 0 goto label2;

        b0 = 17;
        $i3 = 37 * b0;
        $i4 = r0.<sun.security.krb5.internal.HostAddress: int addrType>;
        i5 = $i3 + $i4;
        $r1 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        if $r1 == null goto label1;

        i1 = 0;

     label0:
        $r2 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $i6 = lengthof $r2;
        if i1 >= $i6 goto label1;

        $i7 = 37 * i5;
        $r3 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $b8 = $r3[i1];
        i5 = $i7 + $b8;
        i1 = i1 + 1;
        goto label0;

     label1:
        r0.<sun.security.krb5.internal.HostAddress: int hashCode> = i5;

     label2:
        $i9 = r0.<sun.security.krb5.internal.HostAddress: int hashCode>;
        return $i9;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.krb5.internal.HostAddress r0, r2;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        byte[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        byte $b6, $b7;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.security.krb5.internal.HostAddress;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (sun.security.krb5.internal.HostAddress) r1;
        $i1 = r0.<sun.security.krb5.internal.HostAddress: int addrType>;
        $i2 = r2.<sun.security.krb5.internal.HostAddress: int addrType>;
        if $i1 != $i2 goto label3;

        $r3 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        if $r3 == null goto label2;

        $r4 = r2.<sun.security.krb5.internal.HostAddress: byte[] address>;
        if $r4 == null goto label3;

     label2:
        $r5 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        if $r5 != null goto label4;

        $r6 = r2.<sun.security.krb5.internal.HostAddress: byte[] address>;
        if $r6 == null goto label4;

     label3:
        return 0;

     label4:
        $r7 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        if $r7 == null goto label8;

        $r8 = r2.<sun.security.krb5.internal.HostAddress: byte[] address>;
        if $r8 == null goto label8;

        $r9 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $i3 = lengthof $r9;
        $r10 = r2.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $i4 = lengthof $r10;
        if $i3 == $i4 goto label5;

        return 0;

     label5:
        i0 = 0;

     label6:
        $r11 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $i5 = lengthof $r11;
        if i0 >= $i5 goto label8;

        $r12 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $b6 = $r12[i0];
        $r13 = r2.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $b7 = $r13[i0];
        if $b6 == $b7 goto label7;

        return 0;

     label7:
        i0 = i0 + 1;
        goto label6;

     label8:
        return 1;
    }

    private static synchronized java.net.InetAddress getLocalInetAddress() throws java.net.UnknownHostException
    {
        java.net.InetAddress $r0, $r1, $r2, $r4;
        java.net.UnknownHostException $r3;

        $r0 = <sun.security.krb5.internal.HostAddress: java.net.InetAddress localInetAddress>;
        if $r0 != null goto label0;

        $r1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();
        <sun.security.krb5.internal.HostAddress: java.net.InetAddress localInetAddress> = $r1;

     label0:
        $r2 = <sun.security.krb5.internal.HostAddress: java.net.InetAddress localInetAddress>;
        if $r2 != null goto label1;

        $r3 = new java.net.UnknownHostException;
        specialinvoke $r3.<java.net.UnknownHostException: void <init>()>();
        throw $r3;

     label1:
        $r4 = <sun.security.krb5.internal.HostAddress: java.net.InetAddress localInetAddress>;
        return $r4;
    }

    public java.net.InetAddress getInetAddress() throws java.net.UnknownHostException
    {
        sun.security.krb5.internal.HostAddress r0;
        int $i0, $i1;
        byte[] $r1;
        java.net.InetAddress $r2;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        $i0 = r0.<sun.security.krb5.internal.HostAddress: int addrType>;
        if $i0 == 2 goto label0;

        $i1 = r0.<sun.security.krb5.internal.HostAddress: int addrType>;
        if $i1 != 24 goto label1;

     label0:
        $r1 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r1);
        return $r2;

     label1:
        return null;
    }

    private int getAddrType(java.net.InetAddress)
    {
        sun.security.krb5.internal.HostAddress r0;
        java.net.InetAddress r1;
        byte b0;
        boolean $z0, $z1;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        r1 := @parameter0: java.net.InetAddress;
        b0 = 0;
        $z0 = r1 instanceof java.net.Inet4Address;
        if $z0 == 0 goto label0;

        b0 = 2;
        goto label1;

     label0:
        $z1 = r1 instanceof java.net.Inet6Address;
        if $z1 == 0 goto label1;

        b0 = 24;

     label1:
        return b0;
    }

    public void <init>() throws java.net.UnknownHostException
    {
        sun.security.krb5.internal.HostAddress r0;
        java.net.InetAddress r1;
        int $i0;
        byte[] $r2;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddress: byte[] address> = null;
        r0.<sun.security.krb5.internal.HostAddress: int hashCode> = 0;
        r1 = staticinvoke <sun.security.krb5.internal.HostAddress: java.net.InetAddress getLocalInetAddress()>();
        $i0 = specialinvoke r0.<sun.security.krb5.internal.HostAddress: int getAddrType(java.net.InetAddress)>(r1);
        r0.<sun.security.krb5.internal.HostAddress: int addrType> = $i0;
        $r2 = virtualinvoke r1.<java.net.InetAddress: byte[] getAddress()>();
        r0.<sun.security.krb5.internal.HostAddress: byte[] address> = $r2;
        return;
    }

    public void <init>(int, byte[]) throws sun.security.krb5.internal.KrbApErrException, java.net.UnknownHostException
    {
        sun.security.krb5.internal.HostAddress r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        byte[] r1, $r9, $r13;
        sun.security.krb5.internal.KrbApErrException $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.Object $r8;
        boolean $z0;
        java.io.PrintStream $r10;
        java.lang.StringBuilder $r11, $r12, $r15;
        java.net.InetAddress $r14;
        java.lang.String $r16;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        i0 := @parameter0: int;
        r1 := @parameter1: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddress: byte[] address> = null;
        r0.<sun.security.krb5.internal.HostAddress: int hashCode> = 0;
        tableswitch(i0)
        {
            case 2: goto label0;
            case 3: goto label7;
            case 4: goto label7;
            case 5: goto label1;
            case 6: goto label3;
            case 7: goto label2;
            case 8: goto label7;
            case 9: goto label7;
            case 10: goto label7;
            case 11: goto label7;
            case 12: goto label5;
            case 13: goto label7;
            case 14: goto label7;
            case 15: goto label7;
            case 16: goto label4;
            case 17: goto label7;
            case 18: goto label7;
            case 19: goto label7;
            case 20: goto label7;
            case 21: goto label7;
            case 22: goto label7;
            case 23: goto label7;
            case 24: goto label6;
            default: goto label7;
        };

     label0:
        $i1 = lengthof r1;
        if $i1 == 4 goto label7;

        $r2 = new sun.security.krb5.internal.KrbApErrException;
        specialinvoke $r2.<sun.security.krb5.internal.KrbApErrException: void <init>(int,java.lang.String)>(0, "Invalid Internet address");
        throw $r2;

     label1:
        $i2 = lengthof r1;
        if $i2 == 2 goto label7;

        $r3 = new sun.security.krb5.internal.KrbApErrException;
        specialinvoke $r3.<sun.security.krb5.internal.KrbApErrException: void <init>(int,java.lang.String)>(0, "Invalid CHAOSnet address");
        throw $r3;

     label2:
        goto label7;

     label3:
        $i3 = lengthof r1;
        if $i3 == 6 goto label7;

        $r4 = new sun.security.krb5.internal.KrbApErrException;
        specialinvoke $r4.<sun.security.krb5.internal.KrbApErrException: void <init>(int,java.lang.String)>(0, "Invalid XNS address");
        throw $r4;

     label4:
        $i4 = lengthof r1;
        if $i4 == 3 goto label7;

        $r5 = new sun.security.krb5.internal.KrbApErrException;
        specialinvoke $r5.<sun.security.krb5.internal.KrbApErrException: void <init>(int,java.lang.String)>(0, "Invalid DDP address");
        throw $r5;

     label5:
        $i5 = lengthof r1;
        if $i5 == 2 goto label7;

        $r6 = new sun.security.krb5.internal.KrbApErrException;
        specialinvoke $r6.<sun.security.krb5.internal.KrbApErrException: void <init>(int,java.lang.String)>(0, "Invalid DECnet Phase IV address");
        throw $r6;

     label6:
        $i6 = lengthof r1;
        if $i6 == 16 goto label7;

        $r7 = new sun.security.krb5.internal.KrbApErrException;
        specialinvoke $r7.<sun.security.krb5.internal.KrbApErrException: void <init>(int,java.lang.String)>(0, "Invalid Internet IPv6 address");
        throw $r7;

     label7:
        r0.<sun.security.krb5.internal.HostAddress: int addrType> = i0;
        if r1 == null goto label8;

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();
        $r9 = (byte[]) $r8;
        r0.<sun.security.krb5.internal.HostAddress: byte[] address> = $r9;

     label8:
        $z0 = <sun.security.krb5.internal.HostAddress: boolean DEBUG>;
        if $z0 == 0 goto label10;

        $i7 = r0.<sun.security.krb5.internal.HostAddress: int addrType>;
        if $i7 == 2 goto label9;

        $i8 = r0.<sun.security.krb5.internal.HostAddress: int addrType>;
        if $i8 != 24 goto label10;

     label9:
        $r10 = <java.lang.System: java.io.PrintStream out>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host address is ");
        $r13 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $r14 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r13);
        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label10:
        return;
    }

    public void <init>(java.net.InetAddress)
    {
        sun.security.krb5.internal.HostAddress r0;
        java.net.InetAddress r1;
        int $i0;
        byte[] $r2;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        r1 := @parameter0: java.net.InetAddress;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddress: byte[] address> = null;
        r0.<sun.security.krb5.internal.HostAddress: int hashCode> = 0;
        $i0 = specialinvoke r0.<sun.security.krb5.internal.HostAddress: int getAddrType(java.net.InetAddress)>(r1);
        r0.<sun.security.krb5.internal.HostAddress: int addrType> = $i0;
        $r2 = virtualinvoke r1.<java.net.InetAddress: byte[] getAddress()>();
        r0.<sun.security.krb5.internal.HostAddress: byte[] address> = $r2;
        return;
    }

    public void <init>(sun.security.util.DerValue) throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.internal.HostAddress r0;
        sun.security.util.DerValue r1, r2, r8;
        sun.security.util.DerInputStream $r3, $r4, $r7, $r9, $r12;
        byte $b0, $b1, $b3, $b4;
        java.math.BigInteger $r5;
        int $i2, $i5;
        sun.security.krb5.Asn1Exception $r6, $r11, $r13;
        byte[] $r10;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddress: byte[] address> = null;
        r0.<sun.security.krb5.internal.HostAddress: int hashCode> = 0;
        $r3 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r2 = virtualinvoke $r3.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b0 = virtualinvoke r2.<sun.security.util.DerValue: byte getTag()>();
        $b1 = $b0 & 31;
        if $b1 != 0 goto label0;

        $r4 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r5 = virtualinvoke $r4.<sun.security.util.DerInputStream: java.math.BigInteger getBigInteger()>();
        $i2 = virtualinvoke $r5.<java.math.BigInteger: int intValue()>();
        r0.<sun.security.krb5.internal.HostAddress: int addrType> = $i2;
        goto label1;

     label0:
        $r6 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r6.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r6;

     label1:
        $r7 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r8 = virtualinvoke $r7.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b3 = virtualinvoke r8.<sun.security.util.DerValue: byte getTag()>();
        $b4 = $b3 & 31;
        if $b4 != 1 goto label2;

        $r9 = virtualinvoke r8.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r10 = virtualinvoke $r9.<sun.security.util.DerInputStream: byte[] getOctetString()>();
        r0.<sun.security.krb5.internal.HostAddress: byte[] address> = $r10;
        goto label3;

     label2:
        $r11 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r11.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r11;

     label3:
        $r12 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i5 = virtualinvoke $r12.<sun.security.util.DerInputStream: int available()>();
        if $i5 <= 0 goto label4;

        $r13 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r13.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r13;

     label4:
        return;
    }

    public byte[] asn1Encode() throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.internal.HostAddress r0;
        sun.security.util.DerOutputStream $r1, r2, r3, $r4, $r5, r6, $r8, r9;
        int $i0;
        byte $b1, $b2;
        byte[] $r7, $r10;

        r0 := @this: sun.security.krb5.internal.HostAddress;
        $r1 = new sun.security.util.DerOutputStream;
        specialinvoke $r1.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r1;
        $r4 = new sun.security.util.DerOutputStream;
        specialinvoke $r4.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r4;
        $i0 = r0.<sun.security.krb5.internal.HostAddress: int addrType>;
        virtualinvoke r3.<sun.security.util.DerOutputStream: void putInteger(int)>($i0);
        $b1 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 0);
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b1, r3);
        $r5 = new sun.security.util.DerOutputStream;
        specialinvoke $r5.<sun.security.util.DerOutputStream: void <init>()>();
        r6 = $r5;
        $r7 = r0.<sun.security.krb5.internal.HostAddress: byte[] address>;
        virtualinvoke r6.<sun.security.util.DerOutputStream: void putOctetString(byte[])>($r7);
        $b2 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 1);
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b2, r6);
        $r8 = new sun.security.util.DerOutputStream;
        specialinvoke $r8.<sun.security.util.DerOutputStream: void <init>()>();
        r9 = $r8;
        virtualinvoke r9.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r2);
        $r10 = virtualinvoke r9.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        return $r10;
    }

    public static sun.security.krb5.internal.HostAddress parse(sun.security.util.DerInputStream, byte, boolean) throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.util.DerInputStream r0, $r4;
        byte b0, $b2, $b3, $b4, $b5;
        boolean z0;
        sun.security.util.DerValue r1, r2;
        int $i1;
        sun.security.krb5.Asn1Exception $r3;
        sun.security.krb5.internal.HostAddress $r5;

        r0 := @parameter0: sun.security.util.DerInputStream;
        b0 := @parameter1: byte;
        z0 := @parameter2: boolean;
        if z0 == 0 goto label0;

        $i1 = virtualinvoke r0.<sun.security.util.DerInputStream: int peekByte()>();
        $b2 = (byte) $i1;
        $b3 = $b2 & 31;
        if $b3 == b0 goto label0;

        return null;

     label0:
        r1 = virtualinvoke r0.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b4 = virtualinvoke r1.<sun.security.util.DerValue: byte getTag()>();
        $b5 = $b4 & 31;
        if b0 == $b5 goto label1;

        $r3 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r3.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r3;

     label1:
        $r4 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r2 = virtualinvoke $r4.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r5 = new sun.security.krb5.internal.HostAddress;
        specialinvoke $r5.<sun.security.krb5.internal.HostAddress: void <init>(sun.security.util.DerValue)>(r2);
        return $r5;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        <sun.security.krb5.internal.HostAddress: boolean DEBUG> = $z0;
        return;
    }
}
