class sun.nio.ch.Util$SelectorWrapper$Closer extends java.lang.Object implements java.lang.Runnable
{
    private java.nio.channels.Selector sel;

    private void <init>(java.nio.channels.Selector)
    {
        sun.nio.ch.Util$SelectorWrapper$Closer r0;
        java.nio.channels.Selector r1;

        r0 := @this: sun.nio.ch.Util$SelectorWrapper$Closer;
        r1 := @parameter0: java.nio.channels.Selector;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.nio.ch.Util$SelectorWrapper$Closer: java.nio.channels.Selector sel> = r1;
        return;
    }

    public void run()
    {
        sun.nio.ch.Util$SelectorWrapper$Closer r0;
        java.lang.Throwable r1, $r3;
        java.nio.channels.Selector $r2;
        java.lang.Error $r4;

        r0 := @this: sun.nio.ch.Util$SelectorWrapper$Closer;

     label0:
        $r2 = r0.<sun.nio.ch.Util$SelectorWrapper$Closer: java.nio.channels.Selector sel>;
        virtualinvoke $r2.<java.nio.channels.Selector: void close()>();

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        $r4 = new java.lang.Error;
        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.Throwable)>(r1);
        throw $r4;

     label3:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    void <init>(java.nio.channels.Selector, sun.nio.ch.Util$1)
    {
        sun.nio.ch.Util$SelectorWrapper$Closer r0;
        java.nio.channels.Selector r1;
        sun.nio.ch.Util$1 r2;

        r0 := @this: sun.nio.ch.Util$SelectorWrapper$Closer;
        r1 := @parameter0: java.nio.channels.Selector;
        r2 := @parameter1: sun.nio.ch.Util$1;
        specialinvoke r0.<sun.nio.ch.Util$SelectorWrapper$Closer: void <init>(java.nio.channels.Selector)>(r1);
        return;
    }
}
