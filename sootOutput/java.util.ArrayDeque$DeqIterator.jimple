class java.util.ArrayDeque$DeqIterator extends java.lang.Object implements java.util.Iterator
{
    private int cursor;
    private int fence;
    private int lastRet;
    final java.util.ArrayDeque this$0;

    private void <init>(java.util.ArrayDeque)
    {
        java.util.ArrayDeque$DeqIterator r0;
        java.util.ArrayDeque r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: java.util.ArrayDeque$DeqIterator;
        r1 := @parameter0: java.util.ArrayDeque;
        r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;
        $i0 = staticinvoke <java.util.ArrayDeque: int access$200(java.util.ArrayDeque)>($r2);
        r0.<java.util.ArrayDeque$DeqIterator: int cursor> = $i0;
        $r3 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;
        $i1 = staticinvoke <java.util.ArrayDeque: int access$300(java.util.ArrayDeque)>($r3);
        r0.<java.util.ArrayDeque$DeqIterator: int fence> = $i1;
        r0.<java.util.ArrayDeque$DeqIterator: int lastRet> = -1;
        return;
    }

    public boolean hasNext()
    {
        java.util.ArrayDeque$DeqIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.util.ArrayDeque$DeqIterator;
        $i0 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;
        $i1 = r0.<java.util.ArrayDeque$DeqIterator: int fence>;
        if $i0 == $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.ArrayDeque$DeqIterator r0;
        java.lang.Object r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.util.NoSuchElementException $r2;
        java.util.ArrayDeque $r3, $r5, $r7;
        java.lang.Object[] $r4, $r8;
        java.util.ConcurrentModificationException $r6;

        r0 := @this: java.util.ArrayDeque$DeqIterator;
        $i0 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;
        $i1 = r0.<java.util.ArrayDeque$DeqIterator: int fence>;
        if $i0 != $i1 goto label0;

        $r2 = new java.util.NoSuchElementException;
        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;
        $r4 = staticinvoke <java.util.ArrayDeque: java.lang.Object[] access$400(java.util.ArrayDeque)>($r3);
        $i2 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;
        r1 = $r4[$i2];
        $r5 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;
        $i3 = staticinvoke <java.util.ArrayDeque: int access$300(java.util.ArrayDeque)>($r5);
        $i4 = r0.<java.util.ArrayDeque$DeqIterator: int fence>;
        if $i3 != $i4 goto label1;

        if r1 != null goto label2;

     label1:
        $r6 = new java.util.ConcurrentModificationException;
        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();
        throw $r6;

     label2:
        $i5 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;
        r0.<java.util.ArrayDeque$DeqIterator: int lastRet> = $i5;
        $i6 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;
        $i7 = $i6 + 1;
        $r7 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;
        $r8 = staticinvoke <java.util.ArrayDeque: java.lang.Object[] access$400(java.util.ArrayDeque)>($r7);
        $i8 = lengthof $r8;
        $i9 = $i8 - 1;
        $i10 = $i7 & $i9;
        r0.<java.util.ArrayDeque$DeqIterator: int cursor> = $i10;
        return r1;
    }

    public void remove()
    {
        java.util.ArrayDeque$DeqIterator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.IllegalStateException $r1;
        java.util.ArrayDeque $r2, $r3, $r5;
        boolean $z0;
        java.lang.Object[] $r4;

        r0 := @this: java.util.ArrayDeque$DeqIterator;
        $i0 = r0.<java.util.ArrayDeque$DeqIterator: int lastRet>;
        if $i0 >= 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();
        throw $r1;

     label0:
        $r2 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;
        $i1 = r0.<java.util.ArrayDeque$DeqIterator: int lastRet>;
        $z0 = staticinvoke <java.util.ArrayDeque: boolean access$500(java.util.ArrayDeque,int)>($r2, $i1);
        if $z0 == 0 goto label1;

        $i2 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;
        $i3 = $i2 - 1;
        $r3 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;
        $r4 = staticinvoke <java.util.ArrayDeque: java.lang.Object[] access$400(java.util.ArrayDeque)>($r3);
        $i4 = lengthof $r4;
        $i5 = $i4 - 1;
        $i6 = $i3 & $i5;
        r0.<java.util.ArrayDeque$DeqIterator: int cursor> = $i6;
        $r5 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;
        $i7 = staticinvoke <java.util.ArrayDeque: int access$300(java.util.ArrayDeque)>($r5);
        r0.<java.util.ArrayDeque$DeqIterator: int fence> = $i7;

     label1:
        r0.<java.util.ArrayDeque$DeqIterator: int lastRet> = -1;
        return;
    }

    void <init>(java.util.ArrayDeque, java.util.ArrayDeque$1)
    {
        java.util.ArrayDeque$DeqIterator r0;
        java.util.ArrayDeque r1;
        java.util.ArrayDeque$1 r2;

        r0 := @this: java.util.ArrayDeque$DeqIterator;
        r1 := @parameter0: java.util.ArrayDeque;
        r2 := @parameter1: java.util.ArrayDeque$1;
        specialinvoke r0.<java.util.ArrayDeque$DeqIterator: void <init>(java.util.ArrayDeque)>(r1);
        return;
    }
}
