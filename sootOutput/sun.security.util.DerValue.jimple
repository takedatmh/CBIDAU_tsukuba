public class sun.security.util.DerValue extends java.lang.Object
{
    public static final byte TAG_UNIVERSAL;
    public static final byte TAG_APPLICATION;
    public static final byte TAG_CONTEXT;
    public static final byte TAG_PRIVATE;
    public byte tag;
    protected sun.security.util.DerInputBuffer buffer;
    public final sun.security.util.DerInputStream data;
    private int length;
    public static final byte tag_Boolean;
    public static final byte tag_Integer;
    public static final byte tag_BitString;
    public static final byte tag_OctetString;
    public static final byte tag_Null;
    public static final byte tag_ObjectId;
    public static final byte tag_Enumerated;
    public static final byte tag_UTF8String;
    public static final byte tag_PrintableString;
    public static final byte tag_T61String;
    public static final byte tag_IA5String;
    public static final byte tag_UtcTime;
    public static final byte tag_GeneralizedTime;
    public static final byte tag_GeneralString;
    public static final byte tag_UniversalString;
    public static final byte tag_BMPString;
    public static final byte tag_Sequence;
    public static final byte tag_SequenceOf;
    public static final byte tag_Set;
    public static final byte tag_SetOf;

    public boolean isUniversal()
    {
        sun.security.util.DerValue r0;
        byte $b0;
        short $s1;
        boolean $z0;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        $s1 = $b0 & 192;
        if $s1 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isApplication()
    {
        sun.security.util.DerValue r0;
        byte $b0;
        short $s1;
        boolean $z0;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        $s1 = $b0 & 192;
        if $s1 != 64 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isContextSpecific()
    {
        sun.security.util.DerValue r0;
        byte $b0;
        short $s1;
        boolean $z0;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        $s1 = $b0 & 192;
        if $s1 != 128 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isContextSpecific(byte)
    {
        sun.security.util.DerValue r0;
        byte b0, $b1, $b2;
        boolean $z0, $z1;

        r0 := @this: sun.security.util.DerValue;
        b0 := @parameter0: byte;
        $z0 = virtualinvoke r0.<sun.security.util.DerValue: boolean isContextSpecific()>();
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $b2 = $b1 & 31;
        if $b2 != b0 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    boolean isPrivate()
    {
        sun.security.util.DerValue r0;
        byte $b0;
        short $s1;
        boolean $z0;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        $s1 = $b0 & 192;
        if $s1 != 192 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isConstructed()
    {
        sun.security.util.DerValue r0;
        byte $b0, $b1;
        boolean $z0;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        $b1 = $b0 & 32;
        if $b1 != 32 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isConstructed(byte)
    {
        sun.security.util.DerValue r0;
        byte b0, $b1, $b2;
        boolean $z0, $z1;

        r0 := @this: sun.security.util.DerValue;
        b0 := @parameter0: byte;
        $z0 = virtualinvoke r0.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $b2 = $b1 & 31;
        if $b2 != b0 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.String r1;
        boolean z0, $z1;
        int i0, $i1;
        char $c2;
        byte $b3;
        sun.security.util.DerInputStream $r4;

        r0 := @this: sun.security.util.DerValue;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        z0 = 1;
        i0 = 0;

     label0:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        if i0 >= $i1 goto label2;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
        $z1 = staticinvoke <sun.security.util.DerValue: boolean isPrintableStringChar(char)>($c2);
        if $z1 != 0 goto label1;

        z0 = 0;
        goto label2;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        if z0 == 0 goto label3;

        $b3 = 19;
        goto label4;

     label3:
        $b3 = 12;

     label4:
        $r4 = specialinvoke r0.<sun.security.util.DerValue: sun.security.util.DerInputStream init(byte,java.lang.String)>($b3, r1);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data> = $r4;
        return;
    }

    public void <init>(byte, java.lang.String) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        byte b0;
        java.lang.String r1;
        sun.security.util.DerInputStream $r2;

        r0 := @this: sun.security.util.DerValue;
        b0 := @parameter0: byte;
        r1 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = specialinvoke r0.<sun.security.util.DerValue: sun.security.util.DerInputStream init(byte,java.lang.String)>(b0, r1);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data> = $r2;
        return;
    }

    public void <init>(byte, byte[])
    {
        sun.security.util.DerValue r0;
        byte b0;
        byte[] r1, $r4;
        sun.security.util.DerInputBuffer $r2, $r6;
        java.lang.Object $r3;
        int $i1;
        sun.security.util.DerInputStream $r5, $r7;

        r0 := @this: sun.security.util.DerValue;
        b0 := @parameter0: byte;
        r1 := @parameter1: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.util.DerValue: byte tag> = b0;
        $r2 = new sun.security.util.DerInputBuffer;
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (byte[]) $r3;
        specialinvoke $r2.<sun.security.util.DerInputBuffer: void <init>(byte[])>($r4);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer> = $r2;
        $i1 = lengthof r1;
        r0.<sun.security.util.DerValue: int length> = $i1;
        $r5 = new sun.security.util.DerInputStream;
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        specialinvoke $r5.<sun.security.util.DerInputStream: void <init>(sun.security.util.DerInputBuffer)>($r6);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data> = $r5;
        $r7 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        virtualinvoke $r7.<sun.security.util.DerInputStream: void mark(int)>(2147483647);
        return;
    }

    void <init>(sun.security.util.DerInputBuffer) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        sun.security.util.DerInputBuffer r1, r2, $r8, r10, $r12, $r13, $r15, $r16, $r17, $r19;
        byte b0, b2, $b4, $b10, $b11;
        int i1, $i3, $i5, $i7, $i8, $i9, $i12, $i13, $i14, $i15, $i16, $i19, $i20;
        byte[] r3, $r9;
        java.io.DataInputStream r4, $r6;
        sun.security.util.DerIndefLenConverter r5, $r7;
        short $s6;
        java.io.IOException $r11;
        sun.security.util.DerInputStream $r14, $r18;
        long $l17, $l21;

        r0 := @this: sun.security.util.DerValue;
        r1 := @parameter0: sun.security.util.DerInputBuffer;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $i3 = virtualinvoke r1.<sun.security.util.DerInputBuffer: int read()>();
        $b4 = (byte) $i3;
        r0.<sun.security.util.DerValue: byte tag> = $b4;
        $i5 = virtualinvoke r1.<sun.security.util.DerInputBuffer: int read()>();
        b0 = (byte) $i5;
        $s6 = b0 & 255;
        $i7 = staticinvoke <sun.security.util.DerInputStream: int getLength(int,java.io.InputStream)>($s6, r1);
        r0.<sun.security.util.DerValue: int length> = $i7;
        $i8 = r0.<sun.security.util.DerValue: int length>;
        if $i8 != -1 goto label1;

        r2 = virtualinvoke r1.<sun.security.util.DerInputBuffer: sun.security.util.DerInputBuffer dup()>();
        i1 = virtualinvoke r2.<sun.security.util.DerInputBuffer: int available()>();
        b2 = 2;
        $i9 = i1 + b2;
        r3 = newarray (byte)[$i9];
        $b10 = r0.<sun.security.util.DerValue: byte tag>;
        r3[0] = $b10;
        r3[1] = b0;
        $r6 = new java.io.DataInputStream;
        specialinvoke $r6.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);
        r4 = $r6;
        virtualinvoke r4.<java.io.DataInputStream: void readFully(byte[],int,int)>(r3, b2, i1);
        virtualinvoke r4.<java.io.DataInputStream: void close()>();
        $r7 = new sun.security.util.DerIndefLenConverter;
        specialinvoke $r7.<sun.security.util.DerIndefLenConverter: void <init>()>();
        r5 = $r7;
        $r8 = new sun.security.util.DerInputBuffer;
        $r9 = virtualinvoke r5.<sun.security.util.DerIndefLenConverter: byte[] convert(byte[])>(r3);
        specialinvoke $r8.<sun.security.util.DerInputBuffer: void <init>(byte[])>($r9);
        r10 = $r8;
        $b11 = r0.<sun.security.util.DerValue: byte tag>;
        $i12 = virtualinvoke r10.<sun.security.util.DerInputBuffer: int read()>();
        if $b11 == $i12 goto label0;

        $r11 = new java.io.IOException;
        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Indefinite length encoding not supported");
        throw $r11;

     label0:
        $i13 = staticinvoke <sun.security.util.DerInputStream: int getLength(java.io.InputStream)>(r10);
        r0.<sun.security.util.DerValue: int length> = $i13;
        $r12 = virtualinvoke r10.<sun.security.util.DerInputBuffer: sun.security.util.DerInputBuffer dup()>();
        r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer> = $r12;
        $r13 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $i14 = r0.<sun.security.util.DerValue: int length>;
        virtualinvoke $r13.<sun.security.util.DerInputBuffer: void truncate(int)>($i14);
        $r14 = new sun.security.util.DerInputStream;
        $r15 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        specialinvoke $r14.<sun.security.util.DerInputStream: void <init>(sun.security.util.DerInputBuffer)>($r15);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data> = $r14;
        $i15 = r0.<sun.security.util.DerValue: int length>;
        $i16 = $i15 + b2;
        $l17 = (long) $i16;
        virtualinvoke r1.<sun.security.util.DerInputBuffer: long skip(long)>($l17);
        goto label2;

     label1:
        $r16 = virtualinvoke r1.<sun.security.util.DerInputBuffer: sun.security.util.DerInputBuffer dup()>();
        r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer> = $r16;
        $r17 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $i19 = r0.<sun.security.util.DerValue: int length>;
        virtualinvoke $r17.<sun.security.util.DerInputBuffer: void truncate(int)>($i19);
        $r18 = new sun.security.util.DerInputStream;
        $r19 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        specialinvoke $r18.<sun.security.util.DerInputStream: void <init>(sun.security.util.DerInputBuffer)>($r19);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data> = $r18;
        $i20 = r0.<sun.security.util.DerValue: int length>;
        $l21 = (long) $i20;
        virtualinvoke r1.<sun.security.util.DerInputBuffer: long skip(long)>($l21);

     label2:
        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        byte[] r1;
        java.io.ByteArrayInputStream $r2;
        sun.security.util.DerInputStream $r3;

        r0 := @this: sun.security.util.DerValue;
        r1 := @parameter0: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.io.ByteArrayInputStream;
        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);
        $r3 = specialinvoke r0.<sun.security.util.DerValue: sun.security.util.DerInputStream init(boolean,java.io.InputStream)>(1, $r2);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data> = $r3;
        return;
    }

    public void <init>(byte[], int, int) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        byte[] r1;
        int i0, i1;
        java.io.ByteArrayInputStream $r2;
        sun.security.util.DerInputStream $r3;

        r0 := @this: sun.security.util.DerValue;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.io.ByteArrayInputStream;
        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r1, i0, i1);
        $r3 = specialinvoke r0.<sun.security.util.DerValue: sun.security.util.DerInputStream init(boolean,java.io.InputStream)>(1, $r2);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data> = $r3;
        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.io.InputStream r1;
        sun.security.util.DerInputStream $r2;

        r0 := @this: sun.security.util.DerValue;
        r1 := @parameter0: java.io.InputStream;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = specialinvoke r0.<sun.security.util.DerValue: sun.security.util.DerInputStream init(boolean,java.io.InputStream)>(0, r1);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data> = $r2;
        return;
    }

    private sun.security.util.DerInputStream init(byte, java.lang.String) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        byte b0;
        java.lang.String r1, r4;
        null_type n0;
        byte[] r2;
        sun.security.util.DerInputStream r3, $r7;
        java.lang.IllegalArgumentException $r5;
        int $i1;
        sun.security.util.DerInputBuffer $r6, $r8;

        r0 := @this: sun.security.util.DerValue;
        b0 := @parameter0: byte;
        r1 := @parameter1: java.lang.String;
        n0 = null;
        r0.<sun.security.util.DerValue: byte tag> = b0;
        tableswitch(b0)
        {
            case 12: goto label3;
            case 13: goto label4;
            case 14: goto label4;
            case 15: goto label4;
            case 16: goto label4;
            case 17: goto label4;
            case 18: goto label4;
            case 19: goto label0;
            case 20: goto label1;
            case 21: goto label4;
            case 22: goto label0;
            case 23: goto label4;
            case 24: goto label4;
            case 25: goto label4;
            case 26: goto label4;
            case 27: goto label0;
            case 28: goto label4;
            case 29: goto label4;
            case 30: goto label2;
            default: goto label4;
        };

     label0:
        r4 = "ASCII";
        goto label5;

     label1:
        r4 = "ISO-8859-1";
        goto label5;

     label2:
        r4 = "UnicodeBigUnmarked";
        goto label5;

     label3:
        r4 = "UTF8";
        goto label5;

     label4:
        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported DER string type");
        throw $r5;

     label5:
        r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>(r4);
        $i1 = lengthof r2;
        r0.<sun.security.util.DerValue: int length> = $i1;
        $r6 = new sun.security.util.DerInputBuffer;
        specialinvoke $r6.<sun.security.util.DerInputBuffer: void <init>(byte[])>(r2);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer> = $r6;
        $r7 = new sun.security.util.DerInputStream;
        $r8 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        specialinvoke $r7.<sun.security.util.DerInputStream: void <init>(sun.security.util.DerInputBuffer)>($r8);
        r3 = $r7;
        virtualinvoke r3.<sun.security.util.DerInputStream: void mark(int)>(2147483647);
        return r3;
    }

    private sun.security.util.DerInputStream init(boolean, java.io.InputStream) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        boolean z0;
        java.io.InputStream r1;
        byte b0, b2, $b4, $b10, $b11;
        int i1, $i3, $i5, $i7, $i8, $i9, $i12, $i13, $i14, $i15, $i16;
        byte[] r2, $r8, r11;
        java.io.DataInputStream r3, $r5;
        sun.security.util.DerIndefLenConverter r4, $r6;
        short $s6;
        java.io.ByteArrayInputStream $r7;
        java.io.IOException $r9, $r10;
        sun.security.util.DerInputBuffer $r12, $r14;
        sun.security.util.DerInputStream $r13;

        r0 := @this: sun.security.util.DerValue;
        z0 := @parameter0: boolean;
        r1 := @parameter1: java.io.InputStream;
        $i3 = virtualinvoke r1.<java.io.InputStream: int read()>();
        $b4 = (byte) $i3;
        r0.<sun.security.util.DerValue: byte tag> = $b4;
        $i5 = virtualinvoke r1.<java.io.InputStream: int read()>();
        b0 = (byte) $i5;
        $s6 = b0 & 255;
        $i7 = staticinvoke <sun.security.util.DerInputStream: int getLength(int,java.io.InputStream)>($s6, r1);
        r0.<sun.security.util.DerValue: int length> = $i7;
        $i8 = r0.<sun.security.util.DerValue: int length>;
        if $i8 != -1 goto label1;

        i1 = virtualinvoke r1.<java.io.InputStream: int available()>();
        b2 = 2;
        $i9 = i1 + b2;
        r2 = newarray (byte)[$i9];
        $b10 = r0.<sun.security.util.DerValue: byte tag>;
        r2[0] = $b10;
        r2[1] = b0;
        $r5 = new java.io.DataInputStream;
        specialinvoke $r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);
        r3 = $r5;
        virtualinvoke r3.<java.io.DataInputStream: void readFully(byte[],int,int)>(r2, b2, i1);
        virtualinvoke r3.<java.io.DataInputStream: void close()>();
        $r6 = new sun.security.util.DerIndefLenConverter;
        specialinvoke $r6.<sun.security.util.DerIndefLenConverter: void <init>()>();
        r4 = $r6;
        $r7 = new java.io.ByteArrayInputStream;
        $r8 = virtualinvoke r4.<sun.security.util.DerIndefLenConverter: byte[] convert(byte[])>(r2);
        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r8);
        r1 = $r7;
        $b11 = r0.<sun.security.util.DerValue: byte tag>;
        $i12 = virtualinvoke r1.<java.io.InputStream: int read()>();
        if $b11 == $i12 goto label0;

        $r9 = new java.io.IOException;
        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("Indefinite length encoding not supported");
        throw $r9;

     label0:
        $i13 = staticinvoke <sun.security.util.DerInputStream: int getLength(java.io.InputStream)>(r1);
        r0.<sun.security.util.DerValue: int length> = $i13;

     label1:
        if z0 == 0 goto label2;

        $i14 = virtualinvoke r1.<java.io.InputStream: int available()>();
        $i15 = r0.<sun.security.util.DerValue: int length>;
        if $i14 == $i15 goto label2;

        $r10 = new java.io.IOException;
        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("extra data given to DerValue constructor");
        throw $r10;

     label2:
        $i16 = r0.<sun.security.util.DerValue: int length>;
        r11 = staticinvoke <sun.misc.IOUtils: byte[] readFully(java.io.InputStream,int,boolean)>(r1, $i16, 1);
        $r12 = new sun.security.util.DerInputBuffer;
        specialinvoke $r12.<sun.security.util.DerInputBuffer: void <init>(byte[])>(r11);
        r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer> = $r12;
        $r13 = new sun.security.util.DerInputStream;
        $r14 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        specialinvoke $r13.<sun.security.util.DerInputStream: void <init>(sun.security.util.DerInputBuffer)>($r14);
        return $r13;
    }

    public void encode(sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        sun.security.util.DerOutputStream r1;
        byte[] r2;
        sun.security.util.DerInputStream r3, $r5;
        java.lang.Throwable r4, $r9;
        byte $b0;
        int $i1, $i2, $i3, $i4, $i5;
        sun.security.util.DerInputBuffer $r6, $r7;
        java.io.IOException $r8;

        r0 := @this: sun.security.util.DerValue;
        r1 := @parameter0: sun.security.util.DerOutputStream;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        virtualinvoke r1.<sun.security.util.DerOutputStream: void write(int)>($b0);
        $i1 = r0.<sun.security.util.DerValue: int length>;
        virtualinvoke r1.<sun.security.util.DerOutputStream: void putLength(int)>($i1);
        $i2 = r0.<sun.security.util.DerValue: int length>;
        if $i2 <= 0 goto label6;

        $i3 = r0.<sun.security.util.DerValue: int length>;
        r2 = newarray (byte)[$i3];
        $r5 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        r3 = $r5;
        entermonitor $r5;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        virtualinvoke $r6.<sun.security.util.DerInputBuffer: void reset()>();
        $r7 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $i4 = virtualinvoke $r7.<sun.security.util.DerInputBuffer: int read(byte[])>(r2);
        $i5 = r0.<sun.security.util.DerValue: int length>;
        if $i4 == $i5 goto label1;

        $r8 = new java.io.IOException;
        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("short DER value read (encode)");
        throw $r8;

     label1:
        virtualinvoke r1.<sun.security.util.DerOutputStream: void write(byte[])>(r2);
        exitmonitor r3;

     label2:
        goto label6;

     label3:
        $r9 := @caughtexception;

     label4:
        r4 = $r9;
        exitmonitor r3;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final sun.security.util.DerInputStream getData()
    {
        sun.security.util.DerValue r0;
        sun.security.util.DerInputStream $r1;

        r0 := @this: sun.security.util.DerValue;
        $r1 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        return $r1;
    }

    public final byte getTag()
    {
        sun.security.util.DerValue r0;
        byte $b0;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        return $b0;
    }

    public boolean getBoolean() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r7, $r8, $r9;
        byte $b0, $b1;
        java.io.IOException $r2, $r6;
        java.lang.String $r5, $r10;
        int $i2, $i3, $i4;
        sun.security.util.DerInputBuffer $r11;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 1 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getBoolean, not a BOOLEAN ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $i2 = r0.<sun.security.util.DerValue: int length>;
        if $i2 == 1 goto label1;

        $r6 = new java.io.IOException;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getBoolean, invalid length ");
        $i3 = r0.<sun.security.util.DerValue: int length>;
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label1:
        $r11 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $i4 = virtualinvoke $r11.<sun.security.util.DerInputBuffer: int read()>();
        if $i4 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public sun.security.util.ObjectIdentifier getOID() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.ObjectIdentifier $r6;
        sun.security.util.DerInputBuffer $r7;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 6 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getOID, not an OID ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = new sun.security.util.ObjectIdentifier;
        $r7 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        specialinvoke $r6.<sun.security.util.ObjectIdentifier: void <init>(sun.security.util.DerInputBuffer)>($r7);
        return $r6;
    }

    private byte[] append(byte[], byte[])
    {
        sun.security.util.DerValue r0;
        byte[] r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: sun.security.util.DerValue;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        if r1 != null goto label0;

        return r2;

     label0:
        $i0 = lengthof r1;
        $i1 = lengthof r2;
        $i2 = $i0 + $i1;
        r3 = newarray (byte)[$i2];
        $i3 = lengthof r1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, $i3);
        $i4 = lengthof r1;
        $i5 = lengthof r2;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, $i4, $i5);
        return r3;
    }

    public byte[] getOctetString() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r5, $r6;
        byte[] r2, $r11;
        sun.security.util.DerInputStream r3, $r10;
        byte $b0, $b1;
        boolean $z0, $z1;
        java.io.IOException $r4, $r9;
        java.lang.String $r7;
        int $i2, $i3, $i4, $i5, $i6;
        sun.security.util.DerInputBuffer $r8;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 4 goto label0;

        $z0 = virtualinvoke r0.<sun.security.util.DerValue: boolean isConstructed(byte)>(4);
        if $z0 != 0 goto label0;

        $r4 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getOctetString, not an Octet String: ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r7);
        throw $r4;

     label0:
        $i2 = r0.<sun.security.util.DerValue: int length>;
        r2 = newarray (byte)[$i2];
        $i3 = r0.<sun.security.util.DerValue: int length>;
        if $i3 != 0 goto label1;

        return r2;

     label1:
        $r8 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $i4 = virtualinvoke $r8.<sun.security.util.DerInputBuffer: int read(byte[])>(r2);
        $i5 = r0.<sun.security.util.DerValue: int length>;
        if $i4 == $i5 goto label2;

        $r9 = new java.io.IOException;
        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("short read on DerValue buffer");
        throw $r9;

     label2:
        $z1 = virtualinvoke r0.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z1 == 0 goto label4;

        $r10 = new sun.security.util.DerInputStream;
        specialinvoke $r10.<sun.security.util.DerInputStream: void <init>(byte[])>(r2);
        r3 = $r10;
        r2 = null;

     label3:
        $i6 = virtualinvoke r3.<sun.security.util.DerInputStream: int available()>();
        if $i6 == 0 goto label4;

        $r11 = virtualinvoke r3.<sun.security.util.DerInputStream: byte[] getOctetString()>();
        r2 = specialinvoke r0.<sun.security.util.DerValue: byte[] append(byte[],byte[])>(r2, $r11);
        goto label3;

     label4:
        return r2;
    }

    public int getInteger() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.DerInputBuffer $r6;
        sun.security.util.DerInputStream $r7;
        int $i2, $i3;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 2 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getInteger, not an int ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r7 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i2 = virtualinvoke $r7.<sun.security.util.DerInputStream: int available()>();
        $i3 = virtualinvoke $r6.<sun.security.util.DerInputBuffer: int getInteger(int)>($i2);
        return $i3;
    }

    public java.math.BigInteger getBigInteger() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.DerInputBuffer $r6;
        sun.security.util.DerInputStream $r7;
        int $i2;
        java.math.BigInteger $r8;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 2 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getBigInteger, not an int ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r7 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i2 = virtualinvoke $r7.<sun.security.util.DerInputStream: int available()>();
        $r8 = virtualinvoke $r6.<sun.security.util.DerInputBuffer: java.math.BigInteger getBigInteger(int,boolean)>($i2, 0);
        return $r8;
    }

    public java.math.BigInteger getPositiveBigInteger() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.DerInputBuffer $r6;
        sun.security.util.DerInputStream $r7;
        int $i2;
        java.math.BigInteger $r8;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 2 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getBigInteger, not an int ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r7 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i2 = virtualinvoke $r7.<sun.security.util.DerInputStream: int available()>();
        $r8 = virtualinvoke $r6.<sun.security.util.DerInputBuffer: java.math.BigInteger getBigInteger(int,boolean)>($i2, 1);
        return $r8;
    }

    public int getEnumerated() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.DerInputBuffer $r6;
        sun.security.util.DerInputStream $r7;
        int $i2, $i3;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 10 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getEnumerated, incorrect tag: ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r7 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i2 = virtualinvoke $r7.<sun.security.util.DerInputStream: int available()>();
        $i3 = virtualinvoke $r6.<sun.security.util.DerInputBuffer: int getInteger(int)>($i2);
        return $i3;
    }

    public byte[] getBitString() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.DerInputBuffer $r6;
        byte[] $r7;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 3 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getBitString, not a bit string ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r7 = virtualinvoke $r6.<sun.security.util.DerInputBuffer: byte[] getBitString()>();
        return $r7;
    }

    public sun.security.util.BitArray getUnalignedBitString() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.DerInputBuffer $r6;
        sun.security.util.BitArray $r7;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 3 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getBitString, not a bit string ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r7 = virtualinvoke $r6.<sun.security.util.DerInputBuffer: sun.security.util.BitArray getUnalignedBitString()>();
        return $r7;
    }

    public java.lang.String getAsString() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 != 12 goto label0;

        $r1 = virtualinvoke r0.<sun.security.util.DerValue: java.lang.String getUTF8String()>();
        return $r1;

     label0:
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        if $b1 != 19 goto label1;

        $r2 = virtualinvoke r0.<sun.security.util.DerValue: java.lang.String getPrintableString()>();
        return $r2;

     label1:
        $b2 = r0.<sun.security.util.DerValue: byte tag>;
        if $b2 != 20 goto label2;

        $r3 = virtualinvoke r0.<sun.security.util.DerValue: java.lang.String getT61String()>();
        return $r3;

     label2:
        $b3 = r0.<sun.security.util.DerValue: byte tag>;
        if $b3 != 22 goto label3;

        $r4 = virtualinvoke r0.<sun.security.util.DerValue: java.lang.String getIA5String()>();
        return $r4;

     label3:
        $b4 = r0.<sun.security.util.DerValue: byte tag>;
        if $b4 != 30 goto label4;

        $r5 = virtualinvoke r0.<sun.security.util.DerValue: java.lang.String getBMPString()>();
        return $r5;

     label4:
        $b5 = r0.<sun.security.util.DerValue: byte tag>;
        if $b5 != 27 goto label5;

        $r6 = virtualinvoke r0.<sun.security.util.DerValue: java.lang.String getGeneralString()>();
        return $r6;

     label5:
        return null;
    }

    public byte[] getBitString(boolean) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        boolean z0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.DerInputBuffer $r6;
        byte[] $r7;

        r0 := @this: sun.security.util.DerValue;
        z0 := @parameter0: boolean;
        if z0 != 0 goto label0;

        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 3 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getBitString, not a bit string ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r7 = virtualinvoke $r6.<sun.security.util.DerInputBuffer: byte[] getBitString()>();
        return $r7;
    }

    public sun.security.util.BitArray getUnalignedBitString(boolean) throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        boolean z0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.DerInputBuffer $r6;
        sun.security.util.BitArray $r7;

        r0 := @this: sun.security.util.DerValue;
        z0 := @parameter0: boolean;
        if z0 != 0 goto label0;

        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 3 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getBitString, not a bit string ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r7 = virtualinvoke $r6.<sun.security.util.DerInputBuffer: sun.security.util.BitArray getUnalignedBitString()>();
        return $r7;
    }

    public byte[] getDataBytes() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        byte[] r1;
        sun.security.util.DerInputStream r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r7;
        int $i0;

        r0 := @this: sun.security.util.DerValue;
        $i0 = r0.<sun.security.util.DerValue: int length>;
        r1 = newarray (byte)[$i0];
        $r4 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        virtualinvoke $r5.<sun.security.util.DerInputStream: void reset()>();
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        virtualinvoke $r6.<sun.security.util.DerInputStream: void getBytes(byte[])>(r1);
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r7 := @caughtexception;

     label3:
        r3 = $r7;
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return r1;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.String getPrintableString() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5, $r6;
        byte[] $r7;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 19 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getPrintableString, not a string ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = new java.lang.String;
        $r7 = virtualinvoke r0.<sun.security.util.DerValue: byte[] getDataBytes()>();
        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, "ASCII");
        return $r6;
    }

    public java.lang.String getT61String() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5, $r6;
        byte[] $r7;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 20 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getT61String, not T61 ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = new java.lang.String;
        $r7 = virtualinvoke r0.<sun.security.util.DerValue: byte[] getDataBytes()>();
        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, "ISO-8859-1");
        return $r6;
    }

    public java.lang.String getIA5String() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5, $r6;
        byte[] $r7;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 22 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getIA5String, not IA5 ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = new java.lang.String;
        $r7 = virtualinvoke r0.<sun.security.util.DerValue: byte[] getDataBytes()>();
        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, "ASCII");
        return $r6;
    }

    public java.lang.String getBMPString() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5, $r6;
        byte[] $r7;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 30 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getBMPString, not BMP ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = new java.lang.String;
        $r7 = virtualinvoke r0.<sun.security.util.DerValue: byte[] getDataBytes()>();
        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, "UnicodeBigUnmarked");
        return $r6;
    }

    public java.lang.String getUTF8String() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5, $r6;
        byte[] $r7;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 12 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getUTF8String, not UTF-8 ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = new java.lang.String;
        $r7 = virtualinvoke r0.<sun.security.util.DerValue: byte[] getDataBytes()>();
        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, "UTF8");
        return $r6;
    }

    public java.lang.String getGeneralString() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5, $r6;
        byte[] $r7;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 27 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getGeneralString, not GeneralString ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = new java.lang.String;
        $r7 = virtualinvoke r0.<sun.security.util.DerValue: byte[] getDataBytes()>();
        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, "ASCII");
        return $r6;
    }

    public java.util.Date getUTCTime() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.DerInputBuffer $r6;
        sun.security.util.DerInputStream $r7;
        int $i2;
        java.util.Date $r8;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 23 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getUTCTime, not a UtcTime: ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r7 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i2 = virtualinvoke $r7.<sun.security.util.DerInputStream: int available()>();
        $r8 = virtualinvoke $r6.<sun.security.util.DerInputBuffer: java.util.Date getUTCTime(int)>($i2);
        return $r8;
    }

    public java.util.Date getGeneralizedTime() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        byte $b0, $b1;
        java.io.IOException $r2;
        java.lang.String $r5;
        sun.security.util.DerInputBuffer $r6;
        sun.security.util.DerInputStream $r7;
        int $i2;
        java.util.Date $r8;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 24 goto label0;

        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DerValue.getGeneralizedTime, not a GeneralizedTime: ");
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r7 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i2 = virtualinvoke $r7.<sun.security.util.DerInputStream: int available()>();
        $r8 = virtualinvoke $r6.<sun.security.util.DerInputBuffer: java.util.Date getGeneralizedTime(int)>($i2);
        return $r8;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.util.DerValue r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: sun.security.util.DerValue;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.security.util.DerValue;
        if $z0 == 0 goto label0;

        $r2 = (sun.security.util.DerValue) r1;
        $z1 = virtualinvoke r0.<sun.security.util.DerValue: boolean equals(sun.security.util.DerValue)>($r2);
        return $z1;

     label0:
        return 0;
    }

    public boolean equals(sun.security.util.DerValue)
    {
        sun.security.util.DerValue r0, r1;
        byte $b0, $b1;
        sun.security.util.DerInputStream $r2, $r3, $r4, $r5;
        int $i2, $i3;
        boolean $z0;

        r0 := @this: sun.security.util.DerValue;
        r1 := @parameter0: sun.security.util.DerValue;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        $b1 = r1.<sun.security.util.DerValue: byte tag>;
        if $b0 == $b1 goto label1;

        return 0;

     label1:
        $r2 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $r3 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        if $r2 != $r3 goto label2;

        return 1;

     label2:
        $r4 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r4);
        $r5 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r5);
        if $i2 <= $i3 goto label3;

        $z0 = staticinvoke <sun.security.util.DerValue: boolean doEquals(sun.security.util.DerValue,sun.security.util.DerValue)>(r0, r1);
        goto label4;

     label3:
        $z0 = staticinvoke <sun.security.util.DerValue: boolean doEquals(sun.security.util.DerValue,sun.security.util.DerValue)>(r1, r0);

     label4:
        return $z0;
    }

    private static boolean doEquals(sun.security.util.DerValue, sun.security.util.DerValue)
    {
        sun.security.util.DerValue r0, r1;
        sun.security.util.DerInputStream r2, r3, $r6, $r7, $r8, $r9;
        java.lang.Throwable r4, r5, $r12, $r13;
        sun.security.util.DerInputBuffer $r10, $r11;
        boolean $z0;

        r0 := @parameter0: sun.security.util.DerValue;
        r1 := @parameter1: sun.security.util.DerValue;
        $r6 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        r2 = $r6;
        entermonitor $r6;

     label0:
        $r7 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        r3 = $r7;
        entermonitor $r7;

     label1:
        $r8 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        virtualinvoke $r8.<sun.security.util.DerInputStream: void reset()>();
        $r9 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        virtualinvoke $r9.<sun.security.util.DerInputStream: void reset()>();
        $r10 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $r11 = r1.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        $z0 = virtualinvoke $r10.<sun.security.util.DerInputBuffer: boolean equals(sun.security.util.DerInputBuffer)>($r11);
        exitmonitor r3;

     label2:
        exitmonitor r2;

     label3:
        return $z0;

     label4:
        $r12 := @caughtexception;

     label5:
        r4 = $r12;
        exitmonitor r3;

     label6:
        throw r4;

     label7:
        $r13 := @caughtexception;
        r5 = $r13;
        exitmonitor r2;

     label8:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label0 to label3 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }

    public java.lang.String toString()
    {
        sun.security.util.DerValue r0;
        java.lang.String r1, $r6, $r7, $r12, $r19;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r8, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        byte $b0, $b1, $b2;
        sun.security.util.ObjectIdentifier $r10;
        int $i3;
        java.io.IOException $r20, r21;
        java.lang.IllegalArgumentException $r22;

        r0 := @this: sun.security.util.DerValue;

     label0:
        r1 = virtualinvoke r0.<sun.security.util.DerValue: java.lang.String getAsString()>();
        if r1 == null goto label2;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return $r6;

     label2:
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 != 5 goto label4;

        $r7 = "[DerValue, null]";

     label3:
        return $r7;

     label4:
        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        if $b1 != 6 goto label6;

        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OID.");
        $r10 = virtualinvoke r0.<sun.security.util.DerValue: sun.security.util.ObjectIdentifier getOID()>();
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return $r12;

     label6:
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[DerValue, tag = ");
        $b2 = r0.<sun.security.util.DerValue: byte tag>;
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b2);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", length = ");
        $i3 = r0.<sun.security.util.DerValue: int length>;
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        return $r19;

     label8:
        $r20 := @caughtexception;
        r21 = $r20;
        $r22 = new java.lang.IllegalArgumentException;
        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("misformatted DER value");
        throw $r22;

        catch java.io.IOException from label0 to label1 with label8;
        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public byte[] toByteArray() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        sun.security.util.DerOutputStream $r1, r2;
        sun.security.util.DerInputStream $r3;
        byte[] $r4;

        r0 := @this: sun.security.util.DerValue;
        $r1 = new sun.security.util.DerOutputStream;
        specialinvoke $r1.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r1;
        virtualinvoke r0.<sun.security.util.DerValue: void encode(sun.security.util.DerOutputStream)>(r2);
        $r3 = r0.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        virtualinvoke $r3.<sun.security.util.DerInputStream: void reset()>();
        $r4 = virtualinvoke r2.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        return $r4;
    }

    public sun.security.util.DerInputStream toDerInputStream() throws java.io.IOException
    {
        sun.security.util.DerValue r0;
        byte $b0, $b1, $b2;
        sun.security.util.DerInputStream $r1;
        sun.security.util.DerInputBuffer $r2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: sun.security.util.DerValue;
        $b0 = r0.<sun.security.util.DerValue: byte tag>;
        if $b0 == 48 goto label0;

        $b1 = r0.<sun.security.util.DerValue: byte tag>;
        if $b1 != 49 goto label1;

     label0:
        $r1 = new sun.security.util.DerInputStream;
        $r2 = r0.<sun.security.util.DerValue: sun.security.util.DerInputBuffer buffer>;
        specialinvoke $r1.<sun.security.util.DerInputStream: void <init>(sun.security.util.DerInputBuffer)>($r2);
        return $r1;

     label1:
        $r3 = new java.io.IOException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("toDerInputStream rejects tag type ");
        $b2 = r0.<sun.security.util.DerValue: byte tag>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b2);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);
        throw $r3;
    }

    public int length()
    {
        sun.security.util.DerValue r0;
        int $i0;

        r0 := @this: sun.security.util.DerValue;
        $i0 = r0.<sun.security.util.DerValue: int length>;
        return $i0;
    }

    public static boolean isPrintableStringChar(char)
    {
        char c0;

        c0 := @parameter0: char;
        if c0 < 97 goto label0;

        if c0 <= 122 goto label2;

     label0:
        if c0 < 65 goto label1;

        if c0 <= 90 goto label2;

     label1:
        if c0 < 48 goto label3;

        if c0 > 57 goto label3;

     label2:
        return 1;

     label3:
        tableswitch(c0)
        {
            case 32: goto label4;
            case 33: goto label5;
            case 34: goto label5;
            case 35: goto label5;
            case 36: goto label5;
            case 37: goto label5;
            case 38: goto label5;
            case 39: goto label4;
            case 40: goto label4;
            case 41: goto label4;
            case 42: goto label5;
            case 43: goto label4;
            case 44: goto label4;
            case 45: goto label4;
            case 46: goto label4;
            case 47: goto label4;
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label5;
            case 53: goto label5;
            case 54: goto label5;
            case 55: goto label5;
            case 56: goto label5;
            case 57: goto label5;
            case 58: goto label4;
            case 59: goto label5;
            case 60: goto label5;
            case 61: goto label4;
            case 62: goto label5;
            case 63: goto label4;
            default: goto label5;
        };

     label4:
        return 1;

     label5:
        return 0;
    }

    public static byte createTag(byte, boolean, byte)
    {
        byte b0, b1, b2, $b3, $b4;
        boolean z0;

        b0 := @parameter0: byte;
        z0 := @parameter1: boolean;
        b1 := @parameter2: byte;
        $b3 = b0 | b1;
        b2 = (byte) $b3;
        if z0 == 0 goto label0;

        $b4 = b2 | 32;
        b2 = (byte) $b4;

     label0:
        return b2;
    }

    public void resetTag(byte)
    {
        sun.security.util.DerValue r0;
        byte b0;

        r0 := @this: sun.security.util.DerValue;
        b0 := @parameter0: byte;
        r0.<sun.security.util.DerValue: byte tag> = b0;
        return;
    }

    public int hashCode()
    {
        sun.security.util.DerValue r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: sun.security.util.DerValue;
        $r1 = virtualinvoke r0.<sun.security.util.DerValue: java.lang.String toString()>();
        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        return $i0;
    }
}
