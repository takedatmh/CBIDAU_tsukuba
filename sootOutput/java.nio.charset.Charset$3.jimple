final class java.nio.charset.Charset$3 extends java.lang.Object implements java.security.PrivilegedAction
{

    void <init>()
    {
        java.nio.charset.Charset$3 r0;

        r0 := @this: java.nio.charset.Charset$3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.util.SortedMap run()
    {
        java.nio.charset.Charset$3 r0;
        java.util.TreeMap $r1, r3;
        java.util.Comparator $r2;
        java.nio.charset.spi.CharsetProvider r4, r6, $r7;
        java.util.Iterator r5, $r8, $r9, $r11;
        boolean $z0;
        java.lang.Object $r10;
        java.util.SortedMap $r12;

        r0 := @this: java.nio.charset.Charset$3;
        $r1 = new java.util.TreeMap;
        $r2 = <sun.misc.ASCIICaseInsensitiveComparator: java.util.Comparator CASE_INSENSITIVE_ORDER>;
        specialinvoke $r1.<java.util.TreeMap: void <init>(java.util.Comparator)>($r2);
        r3 = $r1;
        $r7 = staticinvoke <java.nio.charset.Charset: java.nio.charset.spi.CharsetProvider access$100()>();
        $r8 = virtualinvoke $r7.<java.nio.charset.spi.CharsetProvider: java.util.Iterator charsets()>();
        staticinvoke <java.nio.charset.Charset: void access$200(java.util.Iterator,java.util.Map)>($r8, r3);
        r4 = <java.nio.charset.Charset$ExtendedProviderHolder: java.nio.charset.spi.CharsetProvider extendedProvider>;
        if r4 == null goto label0;

        $r9 = virtualinvoke r4.<java.nio.charset.spi.CharsetProvider: java.util.Iterator charsets()>();
        staticinvoke <java.nio.charset.Charset: void access$200(java.util.Iterator,java.util.Map)>($r9, r3);

     label0:
        r5 = staticinvoke <java.nio.charset.Charset: java.util.Iterator access$000()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.nio.charset.spi.CharsetProvider) $r10;
        $r11 = virtualinvoke r6.<java.nio.charset.spi.CharsetProvider: java.util.Iterator charsets()>();
        staticinvoke <java.nio.charset.Charset: void access$200(java.util.Iterator,java.util.Map)>($r11, r3);
        goto label1;

     label2:
        $r12 = staticinvoke <java.util.Collections: java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap)>(r3);
        return $r12;
    }

    public volatile java.lang.Object run()
    {
        java.nio.charset.Charset$3 r0;
        java.util.SortedMap $r1;

        r0 := @this: java.nio.charset.Charset$3;
        $r1 = virtualinvoke r0.<java.nio.charset.Charset$3: java.util.SortedMap run()>();
        return $r1;
    }
}
