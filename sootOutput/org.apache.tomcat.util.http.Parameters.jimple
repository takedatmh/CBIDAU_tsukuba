public final class org.apache.tomcat.util.http.Parameters extends java.lang.Object
{
    private static final org.apache.juli.logging.Log log;
    private static final org.apache.tomcat.util.log.UserDataHelper userDataLog;
    private static final org.apache.tomcat.util.log.UserDataHelper maxParamCountLog;
    static final org.apache.tomcat.util.res.StringManager sm;
    private final java.util.Map paramHashValues;
    private boolean didQueryParameters;
    org.apache.tomcat.util.buf.MessageBytes queryMB;
    org.apache.tomcat.util.buf.UDecoder urlDec;
    org.apache.tomcat.util.buf.MessageBytes decodedQuery;
    java.lang.String encoding;
    java.lang.String queryStringEncoding;
    private int limit;
    private int parameterCount;
    private org.apache.tomcat.util.http.Parameters$FailReason parseFailedReason;
    org.apache.tomcat.util.buf.ByteChunk tmpName;
    org.apache.tomcat.util.buf.ByteChunk tmpValue;
    private final org.apache.tomcat.util.buf.ByteChunk origName;
    private final org.apache.tomcat.util.buf.ByteChunk origValue;
    org.apache.tomcat.util.buf.CharChunk tmpNameC;
    public static final java.lang.String DEFAULT_ENCODING;
    private static final java.nio.charset.Charset DEFAULT_CHARSET;
    private static int[] $SWITCH_TABLE$org$apache$tomcat$util$log$UserDataHelper$Mode;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0, $r1, $r4;
        org.apache.tomcat.util.log.UserDataHelper $r2, $r3;
        org.apache.tomcat.util.res.StringManager $r5;
        java.nio.charset.Charset $r6;

        $r1 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/tomcat/util/http/Parameters");
        <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log> = $r1;
        $r2 = new org.apache.tomcat.util.log.UserDataHelper;
        $r0 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        specialinvoke $r2.<org.apache.tomcat.util.log.UserDataHelper: void <init>(org.apache.juli.logging.Log)>($r0);
        <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.log.UserDataHelper userDataLog> = $r2;
        $r3 = new org.apache.tomcat.util.log.UserDataHelper;
        $r4 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        specialinvoke $r3.<org.apache.tomcat.util.log.UserDataHelper: void <init>(org.apache.juli.logging.Log)>($r4);
        <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.log.UserDataHelper maxParamCountLog> = $r3;
        $r5 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.tomcat.util.http");
        <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm> = $r5;
        $r6 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ISO-8859-1");
        <org.apache.tomcat.util.http.Parameters: java.nio.charset.Charset DEFAULT_CHARSET> = $r6;
        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.util.LinkedHashMap $r1;
        org.apache.tomcat.util.buf.MessageBytes $r2;
        org.apache.tomcat.util.buf.ByteChunk $r3, $r4, $r5, $r6;
        org.apache.tomcat.util.buf.CharChunk $r7;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.LinkedHashMap;
        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();
        r0.<org.apache.tomcat.util.http.Parameters: java.util.Map paramHashValues> = $r1;
        r0.<org.apache.tomcat.util.http.Parameters: boolean didQueryParameters> = 0;
        $r2 = staticinvoke <org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.MessageBytes newInstance()>();
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.MessageBytes decodedQuery> = $r2;
        r0.<org.apache.tomcat.util.http.Parameters: java.lang.String encoding> = null;
        r0.<org.apache.tomcat.util.http.Parameters: java.lang.String queryStringEncoding> = null;
        r0.<org.apache.tomcat.util.http.Parameters: int limit> = -1;
        r0.<org.apache.tomcat.util.http.Parameters: int parameterCount> = 0;
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.http.Parameters$FailReason parseFailedReason> = null;
        $r3 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r3.<org.apache.tomcat.util.buf.ByteChunk: void <init>()>();
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpName> = $r3;
        $r4 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: void <init>()>();
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpValue> = $r4;
        $r5 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: void <init>()>();
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk origName> = $r5;
        $r6 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r6.<org.apache.tomcat.util.buf.ByteChunk: void <init>()>();
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk origValue> = $r6;
        $r7 = new org.apache.tomcat.util.buf.CharChunk;
        specialinvoke $r7.<org.apache.tomcat.util.buf.CharChunk: void <init>(int)>(1024);
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.CharChunk tmpNameC> = $r7;
        return;
    }

    public void setQuery(org.apache.tomcat.util.buf.MessageBytes)
    {
        org.apache.tomcat.util.http.Parameters r0;
        org.apache.tomcat.util.buf.MessageBytes r1;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.MessageBytes queryMB> = r1;
        return;
    }

    public void setLimit(int)
    {
        org.apache.tomcat.util.http.Parameters r0;
        int i0;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        i0 := @parameter0: int;
        r0.<org.apache.tomcat.util.http.Parameters: int limit> = i0;
        return;
    }

    public java.lang.String getEncoding()
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        $r1 = r0.<org.apache.tomcat.util.http.Parameters: java.lang.String encoding>;
        return $r1;
    }

    public void setEncoding(java.lang.String)
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.lang.String r1, $r6;
        org.apache.juli.logging.Log $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.tomcat.util.http.Parameters: java.lang.String encoding> = r1;
        $r2 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r3 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Set encoding to ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r6);

     label0:
        return;
    }

    public void setQueryStringEncoding(java.lang.String)
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.lang.String r1, $r6;
        org.apache.juli.logging.Log $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.tomcat.util.http.Parameters: java.lang.String queryStringEncoding> = r1;
        $r2 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r3 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Set query string encoding to ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r6);

     label0:
        return;
    }

    public boolean isParseFailed()
    {
        org.apache.tomcat.util.http.Parameters r0;
        org.apache.tomcat.util.http.Parameters$FailReason $r1;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        $r1 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.http.Parameters$FailReason parseFailedReason>;
        if $r1 == null goto label0;

        return 1;

     label0:
        return 0;
    }

    public org.apache.tomcat.util.http.Parameters$FailReason getParseFailedReason()
    {
        org.apache.tomcat.util.http.Parameters r0;
        org.apache.tomcat.util.http.Parameters$FailReason $r1;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        $r1 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.http.Parameters$FailReason parseFailedReason>;
        return $r1;
    }

    public void setParseFailedReason(org.apache.tomcat.util.http.Parameters$FailReason)
    {
        org.apache.tomcat.util.http.Parameters r0;
        org.apache.tomcat.util.http.Parameters$FailReason r1, $r2;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: org.apache.tomcat.util.http.Parameters$FailReason;
        $r2 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.http.Parameters$FailReason parseFailedReason>;
        if $r2 != null goto label0;

        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.http.Parameters$FailReason parseFailedReason> = r1;

     label0:
        return;
    }

    public void recycle()
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.util.Map $r1;
        org.apache.tomcat.util.buf.MessageBytes $r2;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r0.<org.apache.tomcat.util.http.Parameters: int parameterCount> = 0;
        $r1 = r0.<org.apache.tomcat.util.http.Parameters: java.util.Map paramHashValues>;
        interfaceinvoke $r1.<java.util.Map: void clear()>();
        r0.<org.apache.tomcat.util.http.Parameters: boolean didQueryParameters> = 0;
        r0.<org.apache.tomcat.util.http.Parameters: java.lang.String encoding> = null;
        $r2 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.MessageBytes decodedQuery>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.MessageBytes: void recycle()>();
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.http.Parameters$FailReason parseFailedReason> = null;
        return;
    }

    public void addParameterValues(java.lang.String, java.lang.String[])
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.lang.String r1, r5;
        java.lang.String[] r2, r4;
        java.util.ArrayList r3, $r8;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.Map $r6, $r9;
        java.lang.Object $r7;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String[];
        if r1 != null goto label0;

        return;

     label0:
        $r6 = r0.<org.apache.tomcat.util.http.Parameters: java.util.Map paramHashValues>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (java.util.ArrayList) $r7;
        if r3 != null goto label1;

        $r8 = new java.util.ArrayList;
        $i2 = lengthof r2;
        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i2);
        r3 = $r8;
        $r9 = r0.<org.apache.tomcat.util.http.Parameters: java.util.Map paramHashValues>;
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);
        goto label2;

     label1:
        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        $i4 = lengthof r2;
        $i5 = $i3 + $i4;
        virtualinvoke r3.<java.util.ArrayList: void ensureCapacity(int)>($i5);

     label2:
        r4 = r2;
        i0 = lengthof r2;
        i1 = 0;
        goto label4;

     label3:
        r5 = r4[i1];
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label3;

        return;
    }

    public java.lang.String[] getParameterValues(java.lang.String)
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        int $i0;
        java.lang.String[] $r5, $r7;
        java.lang.Object[] $r6;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.apache.tomcat.util.http.Parameters: void handleQueryParameters()>();
        $r3 = r0.<org.apache.tomcat.util.http.Parameters: java.util.Map paramHashValues>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (java.util.ArrayList) $r4;
        if r2 != null goto label0;

        return null;

     label0:
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        $r5 = newarray (java.lang.String)[$i0];
        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);
        $r7 = (java.lang.String[]) $r6;
        return $r7;
    }

    public java.util.Enumeration getParameterNames()
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Enumeration $r3;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        virtualinvoke r0.<org.apache.tomcat.util.http.Parameters: void handleQueryParameters()>();
        $r1 = r0.<org.apache.tomcat.util.http.Parameters: java.util.Map paramHashValues>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();
        $r3 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r2);
        return $r3;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.lang.String r1, $r6;
        java.util.ArrayList r2;
        java.util.Map $r3;
        java.lang.Object $r4, $r5;
        int $i0;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.apache.tomcat.util.http.Parameters: void handleQueryParameters()>();
        $r3 = r0.<org.apache.tomcat.util.http.Parameters: java.util.Map paramHashValues>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (java.util.ArrayList) $r4;
        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        if $i0 != 0 goto label0;

        return "";

     label0:
        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $r6 = (java.lang.String) $r5;
        return $r6;

     label1:
        return null;
    }

    public void handleQueryParameters()
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.io.IOException r1, $r15;
        boolean $z0, $z1, $z2;
        org.apache.tomcat.util.buf.MessageBytes $r2, $r3, $r7, $r13, $r14, $r16;
        org.apache.juli.logging.Log $r4, $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        java.lang.String $r10, $r12, $r17;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        $z0 = r0.<org.apache.tomcat.util.http.Parameters: boolean didQueryParameters>;
        if $z0 == 0 goto label0;

        return;

     label0:
        r0.<org.apache.tomcat.util.http.Parameters: boolean didQueryParameters> = 1;
        $r2 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.MessageBytes queryMB>;
        if $r2 == null goto label1;

        $r3 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.MessageBytes queryMB>;
        $z1 = virtualinvoke $r3.<org.apache.tomcat.util.buf.MessageBytes: boolean isNull()>();
        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r4 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r4.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label3;

        $r5 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Decoding query ");
        $r7 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.MessageBytes decodedQuery>;
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r10 = r0.<org.apache.tomcat.util.http.Parameters: java.lang.String queryStringEncoding>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r12);

     label3:
        $r13 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.MessageBytes decodedQuery>;
        $r14 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.MessageBytes queryMB>;
        virtualinvoke $r13.<org.apache.tomcat.util.buf.MessageBytes: void duplicate(org.apache.tomcat.util.buf.MessageBytes)>($r14);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;
        r1 = $r15;
        virtualinvoke r1.<java.io.IOException: void printStackTrace()>();

     label6:
        $r16 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.MessageBytes decodedQuery>;
        $r17 = r0.<org.apache.tomcat.util.http.Parameters: java.lang.String queryStringEncoding>;
        virtualinvoke r0.<org.apache.tomcat.util.http.Parameters: void processParameters(org.apache.tomcat.util.buf.MessageBytes,java.lang.String)>($r16, $r17);
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public void addParameter(java.lang.String, java.lang.String) throws java.lang.IllegalStateException
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.lang.String r1, r2, $r10;
        java.util.ArrayList r3, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.tomcat.util.http.Parameters$FailReason $r5;
        java.lang.IllegalStateException $r6;
        org.apache.tomcat.util.res.StringManager $r7;
        java.lang.Object[] $r8;
        java.lang.Integer $r9;
        java.util.Map $r11, $r14;
        java.lang.Object $r12;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        if r1 != null goto label0;

        return;

     label0:
        $i0 = r0.<org.apache.tomcat.util.http.Parameters: int parameterCount>;
        $i1 = $i0 + 1;
        r0.<org.apache.tomcat.util.http.Parameters: int parameterCount> = $i1;
        $i2 = r0.<org.apache.tomcat.util.http.Parameters: int limit>;
        if $i2 <= -1 goto label1;

        $i3 = r0.<org.apache.tomcat.util.http.Parameters: int parameterCount>;
        $i4 = r0.<org.apache.tomcat.util.http.Parameters: int limit>;
        if $i3 <= $i4 goto label1;

        $r5 = <org.apache.tomcat.util.http.Parameters$FailReason: org.apache.tomcat.util.http.Parameters$FailReason TOO_MANY_PARAMETERS>;
        virtualinvoke r0.<org.apache.tomcat.util.http.Parameters: void setParseFailedReason(org.apache.tomcat.util.http.Parameters$FailReason)>($r5);
        $r6 = new java.lang.IllegalStateException;
        $r7 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = newarray (java.lang.Object)[1];
        $i5 = r0.<org.apache.tomcat.util.http.Parameters: int limit>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        $r8[0] = $r9;
        $r10 = virtualinvoke $r7.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("parameters.maxCountFail", $r8);
        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label1:
        $r11 = r0.<org.apache.tomcat.util.http.Parameters: java.util.Map paramHashValues>;
        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (java.util.ArrayList) $r12;
        if r3 != null goto label2;

        $r13 = new java.util.ArrayList;
        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>(1);
        r3 = $r13;
        $r14 = r0.<org.apache.tomcat.util.http.Parameters: java.util.Map paramHashValues>;
        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label2:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);
        return;
    }

    public void setURLDecoder(org.apache.tomcat.util.buf.UDecoder)
    {
        org.apache.tomcat.util.http.Parameters r0;
        org.apache.tomcat.util.buf.UDecoder r1;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: org.apache.tomcat.util.buf.UDecoder;
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.UDecoder urlDec> = r1;
        return;
    }

    public void processParameters(byte[], int, int)
    {
        org.apache.tomcat.util.http.Parameters r0;
        byte[] r1;
        int i0, i1;
        java.lang.String $r2;
        java.nio.charset.Charset $r3;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = r0.<org.apache.tomcat.util.http.Parameters: java.lang.String encoding>;
        $r3 = specialinvoke r0.<org.apache.tomcat.util.http.Parameters: java.nio.charset.Charset getCharset(java.lang.String)>($r2);
        specialinvoke r0.<org.apache.tomcat.util.http.Parameters: void processParameters(byte[],int,int,java.nio.charset.Charset)>(r1, i0, i1, $r3);
        return;
    }

    private void processParameters(byte[], int, int, java.nio.charset.Charset)
    {
        org.apache.tomcat.util.http.Parameters r0;
        byte[] r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.nio.charset.Charset r2, $r6, $r22, $r30;
        org.apache.juli.logging.Log $r3, $r12, $r15, $r16, $r24, $r25, $r41, $r42, $r47, $r53, $r73, $r74, $r78, $r79, $r80, $r88, $r104, $r105, $r108, $r111, $r124, $r125;
        org.apache.tomcat.util.res.StringManager $r4, $r17, $r26, $r31, $r38, $r54, $r70, $r81, $r91, $r101, $r114, $r121;
        java.lang.String $r5, r8, r9, r11, $r14, $r21, $r23, $r27, $r29, $r37, $r39, $r55, r59, r63, $r69, $r71, $r84, $r86, $r87, $r94, $r96, r97, $r100, $r102, r117, $r120, $r122;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.apache.tomcat.util.log.UserDataHelper$Mode r7, r10, r90, r113;
        java.lang.Object[] $r13, $r18, $r32, $r82, $r92, $r115;
        byte $b9;
        java.lang.Integer $r19, $r20, $r33, $r34, $r116;
        org.apache.tomcat.util.log.UserDataHelper $r28, $r66, $r89, $r112;
        int[] $r35, $r67, $r98, $r118;
        java.lang.StringBuilder $r36, $r40, $r68, $r72, $r99, $r103, $r119, $r123;
        org.apache.tomcat.util.http.Parameters$FailReason $r43, $r77;
        org.apache.tomcat.util.buf.ByteChunk $r44, $r45, $r46, $r48, $r49, $r50, $r56, $r57, $r58, $r60, $r61, $r62, $r83, $r85, $r93, $r95, $r106, $r107, $r109, $r110;
        java.io.IOException $r51, r52, $r75, r76;
        java.lang.IllegalStateException $r64, r65;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: java.nio.charset.Charset;
        $r3 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label0;

        $r12 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $r4 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r13 = newarray (java.lang.Object)[1];
        $r5 = new java.lang.String;
        $r6 = <org.apache.tomcat.util.http.Parameters: java.nio.charset.Charset DEFAULT_CHARSET>;
        specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, i0, i1, $r6);
        $r13[0] = $r5;
        $r14 = virtualinvoke $r4.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("parameters.bytes", $r13);
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r14);

     label0:
        i2 = 0;
        i3 = i0;
        i4 = i0 + i1;
        goto label49;

     label1:
        i5 = i3;
        i6 = -1;
        i7 = -1;
        i8 = -1;
        z0 = 1;
        z1 = 0;
        z2 = 0;
        z3 = 0;

     label2:
        $b9 = r1[i3];
        lookupswitch($b9)
        {
            case 37: goto label8;
            case 38: goto label5;
            case 43: goto label8;
            case 61: goto label3;
            default: goto label11;
        };

     label3:
        if z0 == 0 goto label4;

        i6 = i3;
        z0 = 0;
        i3 = i3 + 1;
        i7 = i3;
        goto label12;

     label4:
        i3 = i3 + 1;
        goto label12;

     label5:
        if z0 == 0 goto label6;

        i6 = i3;
        goto label7;

     label6:
        i8 = i3;

     label7:
        z3 = 1;
        i3 = i3 + 1;
        goto label12;

     label8:
        if z0 == 0 goto label9;

        z1 = 1;
        goto label10;

     label9:
        z2 = 1;

     label10:
        i3 = i3 + 1;
        goto label12;

     label11:
        i3 = i3 + 1;

     label12:
        if z3 != 0 goto label13;

        if i3 < i4 goto label2;

     label13:
        if i3 != i4 goto label15;

        if i6 != -1 goto label14;

        i6 = i3;
        goto label15;

     label14:
        if i7 <= -1 goto label15;

        if i8 != -1 goto label15;

        i8 = i3;

     label15:
        $r15 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r15.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label16;

        if i7 != -1 goto label16;

        $r16 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $r17 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r18 = newarray (java.lang.Object)[3];
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);
        $r18[0] = $r19;
        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
        $r18[1] = $r20;
        $r21 = new java.lang.String;
        $i10 = i6 - i5;
        $r22 = <org.apache.tomcat.util.http.Parameters: java.nio.charset.Charset DEFAULT_CHARSET>;
        specialinvoke $r21.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, i5, $i10, $r22);
        $r18[2] = $r21;
        $r23 = virtualinvoke $r17.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("parameters.noequal", $r18);
        interfaceinvoke $r16.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r23);

     label16:
        if i6 > i5 goto label24;

        if i7 != -1 goto label17;

        $r24 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z6 = interfaceinvoke $r24.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label49;

        $r25 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $r26 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r27 = virtualinvoke $r26.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("parameters.emptyChunk");
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r27);
        goto label49;

     label17:
        $r28 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.log.UserDataHelper userDataLog>;
        r7 = virtualinvoke $r28.<org.apache.tomcat.util.log.UserDataHelper: org.apache.tomcat.util.log.UserDataHelper$Mode getNextMode()>();
        if r7 == null goto label23;

        if i8 <= i5 goto label18;

        $r29 = new java.lang.String;
        $i11 = i8 - i5;
        $r30 = <org.apache.tomcat.util.http.Parameters: java.nio.charset.Charset DEFAULT_CHARSET>;
        specialinvoke $r29.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, i5, $i11, $r30);
        r8 = $r29;
        goto label19;

     label18:
        r8 = "";

     label19:
        $r31 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r32 = newarray (java.lang.Object)[3];
        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);
        $r32[0] = $r33;
        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
        $r32[1] = $r34;
        $r32[2] = r8;
        r9 = virtualinvoke $r31.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("parameters.invalidChunk", $r32);
        $r35 = staticinvoke <org.apache.tomcat.util.http.Parameters: int[] $SWITCH_TABLE$org$apache$tomcat$util$log$UserDataHelper$Mode()>();
        $i12 = virtualinvoke r7.<org.apache.tomcat.util.log.UserDataHelper$Mode: int ordinal()>();
        $i13 = $r35[$i12];
        tableswitch($i13)
        {
            case 1: goto label22;
            case 2: goto label20;
            case 3: goto label21;
            default: goto label23;
        };

     label20:
        $r36 = new java.lang.StringBuilder;
        $r37 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r9);
        specialinvoke $r36.<java.lang.StringBuilder: void <init>(java.lang.String)>($r37);
        $r38 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r39 = virtualinvoke $r38.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("parameters.fallToDebug");
        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);
        r9 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        $r41 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        interfaceinvoke $r41.<org.apache.juli.logging.Log: void info(java.lang.Object)>(r9);
        goto label23;

     label22:
        $r42 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        interfaceinvoke $r42.<org.apache.juli.logging.Log: void debug(java.lang.Object)>(r9);

     label23:
        $r43 = <org.apache.tomcat.util.http.Parameters$FailReason: org.apache.tomcat.util.http.Parameters$FailReason NO_NAME>;
        virtualinvoke r0.<org.apache.tomcat.util.http.Parameters: void setParseFailedReason(org.apache.tomcat.util.http.Parameters$FailReason)>($r43);
        goto label49;

     label24:
        $r44 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpName>;
        $i14 = i6 - i5;
        virtualinvoke $r44.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>(r1, i5, $i14);
        if i7 < 0 goto label25;

        $r45 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpValue>;
        $i15 = i8 - i7;
        virtualinvoke $r45.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>(r1, i7, $i15);
        goto label26;

     label25:
        $r46 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpValue>;
        virtualinvoke $r46.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>(r1, 0, 0);

     label26:
        $r47 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z7 = interfaceinvoke $r47.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z7 == 0 goto label31;

     label27:
        $r48 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk origName>;
        $i16 = i6 - i5;
        virtualinvoke $r48.<org.apache.tomcat.util.buf.ByteChunk: void append(byte[],int,int)>(r1, i5, $i16);
        if i7 < 0 goto label28;

        $r49 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk origValue>;
        $i17 = i8 - i7;
        virtualinvoke $r49.<org.apache.tomcat.util.buf.ByteChunk: void append(byte[],int,int)>(r1, i7, $i17);
        goto label31;

     label28:
        $r50 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk origValue>;
        virtualinvoke $r50.<org.apache.tomcat.util.buf.ByteChunk: void append(byte[],int,int)>(r1, 0, 0);

     label29:
        goto label31;

     label30:
        $r51 := @caughtexception;
        r52 = $r51;
        $r53 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $r54 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r55 = virtualinvoke $r54.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("parameters.copyFail");
        interfaceinvoke $r53.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r55, r52);

     label31:
        if z1 == 0 goto label32;

        $r56 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpName>;
        specialinvoke r0.<org.apache.tomcat.util.http.Parameters: void urlDecode(org.apache.tomcat.util.buf.ByteChunk)>($r56);

     label32:
        $r57 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpName>;
        virtualinvoke $r57.<org.apache.tomcat.util.buf.ByteChunk: void setCharset(java.nio.charset.Charset)>(r2);
        $r58 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpName>;
        r59 = virtualinvoke $r58.<org.apache.tomcat.util.buf.ByteChunk: java.lang.String toString()>();
        if i7 < 0 goto label34;

        if z2 == 0 goto label33;

        $r60 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpValue>;
        specialinvoke r0.<org.apache.tomcat.util.http.Parameters: void urlDecode(org.apache.tomcat.util.buf.ByteChunk)>($r60);

     label33:
        $r61 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpValue>;
        virtualinvoke $r61.<org.apache.tomcat.util.buf.ByteChunk: void setCharset(java.nio.charset.Charset)>(r2);
        $r62 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpValue>;
        r63 = virtualinvoke $r62.<org.apache.tomcat.util.buf.ByteChunk: java.lang.String toString()>();
        goto label35;

     label34:
        r63 = "";

     label35:
        virtualinvoke r0.<org.apache.tomcat.util.http.Parameters: void addParameter(java.lang.String,java.lang.String)>(r59, r63);

     label36:
        goto label48;

     label37:
        $r64 := @caughtexception;
        r65 = $r64;
        $r66 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.log.UserDataHelper maxParamCountLog>;
        r10 = virtualinvoke $r66.<org.apache.tomcat.util.log.UserDataHelper: org.apache.tomcat.util.log.UserDataHelper$Mode getNextMode()>();
        if r10 == null goto label50;

        r11 = virtualinvoke r65.<java.lang.IllegalStateException: java.lang.String getMessage()>();
        $r67 = staticinvoke <org.apache.tomcat.util.http.Parameters: int[] $SWITCH_TABLE$org$apache$tomcat$util$log$UserDataHelper$Mode()>();
        $i18 = virtualinvoke r10.<org.apache.tomcat.util.log.UserDataHelper$Mode: int ordinal()>();
        $i19 = $r67[$i18];
        tableswitch($i19)
        {
            case 1: goto label40;
            case 2: goto label38;
            case 3: goto label39;
            default: goto label41;
        };

     label38:
        $r68 = new java.lang.StringBuilder;
        $r69 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r11);
        specialinvoke $r68.<java.lang.StringBuilder: void <init>(java.lang.String)>($r69);
        $r70 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r71 = virtualinvoke $r70.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("parameters.maxCountFail.fallToDebug");
        $r72 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);
        r11 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

     label39:
        $r73 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        interfaceinvoke $r73.<org.apache.juli.logging.Log: void info(java.lang.Object)>(r11);
        goto label50;

     label40:
        $r74 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        interfaceinvoke $r74.<org.apache.juli.logging.Log: void debug(java.lang.Object)>(r11);

     label41:
        goto label50;

     label42:
        $r75 := @caughtexception;
        r76 = $r75;
        $r77 = <org.apache.tomcat.util.http.Parameters$FailReason: org.apache.tomcat.util.http.Parameters$FailReason URL_DECODING>;
        virtualinvoke r0.<org.apache.tomcat.util.http.Parameters: void setParseFailedReason(org.apache.tomcat.util.http.Parameters$FailReason)>($r77);
        i2 = i2 + 1;
        if i2 == 1 goto label43;

        $r78 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z8 = interfaceinvoke $r78.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z8 == 0 goto label48;

     label43:
        $r79 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z9 = interfaceinvoke $r79.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z9 == 0 goto label44;

        $r80 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $r81 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r82 = newarray (java.lang.Object)[2];
        $r83 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk origName>;
        $r84 = virtualinvoke $r83.<org.apache.tomcat.util.buf.ByteChunk: java.lang.String toString()>();
        $r82[0] = $r84;
        $r85 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk origValue>;
        $r86 = virtualinvoke $r85.<org.apache.tomcat.util.buf.ByteChunk: java.lang.String toString()>();
        $r82[1] = $r86;
        $r87 = virtualinvoke $r81.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("parameters.decodeFail.debug", $r82);
        interfaceinvoke $r80.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r87, r76);
        goto label48;

     label44:
        $r88 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z10 = interfaceinvoke $r88.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z10 == 0 goto label48;

        $r89 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.log.UserDataHelper userDataLog>;
        r90 = virtualinvoke $r89.<org.apache.tomcat.util.log.UserDataHelper: org.apache.tomcat.util.log.UserDataHelper$Mode getNextMode()>();
        if r90 == null goto label48;

        $r91 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r92 = newarray (java.lang.Object)[2];
        $r93 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpName>;
        $r94 = virtualinvoke $r93.<org.apache.tomcat.util.buf.ByteChunk: java.lang.String toString()>();
        $r92[0] = $r94;
        $r95 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpValue>;
        $r96 = virtualinvoke $r95.<org.apache.tomcat.util.buf.ByteChunk: java.lang.String toString()>();
        $r92[1] = $r96;
        r97 = virtualinvoke $r91.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("parameters.decodeFail.info", $r92);
        $r98 = staticinvoke <org.apache.tomcat.util.http.Parameters: int[] $SWITCH_TABLE$org$apache$tomcat$util$log$UserDataHelper$Mode()>();
        $i20 = virtualinvoke r90.<org.apache.tomcat.util.log.UserDataHelper$Mode: int ordinal()>();
        $i21 = $r98[$i20];
        tableswitch($i21)
        {
            case 1: goto label47;
            case 2: goto label45;
            case 3: goto label46;
            default: goto label48;
        };

     label45:
        $r99 = new java.lang.StringBuilder;
        $r100 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r97);
        specialinvoke $r99.<java.lang.StringBuilder: void <init>(java.lang.String)>($r100);
        $r101 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r102 = virtualinvoke $r101.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("parameters.fallToDebug");
        $r103 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);
        r97 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

     label46:
        $r104 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        interfaceinvoke $r104.<org.apache.juli.logging.Log: void info(java.lang.Object)>(r97);
        goto label48;

     label47:
        $r105 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        interfaceinvoke $r105.<org.apache.juli.logging.Log: void debug(java.lang.Object)>(r97);

     label48:
        $r106 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpName>;
        virtualinvoke $r106.<org.apache.tomcat.util.buf.ByteChunk: void recycle()>();
        $r107 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk tmpValue>;
        virtualinvoke $r107.<org.apache.tomcat.util.buf.ByteChunk: void recycle()>();
        $r108 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z11 = interfaceinvoke $r108.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z11 == 0 goto label49;

        $r109 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk origName>;
        virtualinvoke $r109.<org.apache.tomcat.util.buf.ByteChunk: void recycle()>();
        $r110 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.ByteChunk origValue>;
        virtualinvoke $r110.<org.apache.tomcat.util.buf.ByteChunk: void recycle()>();

     label49:
        if i3 < i4 goto label1;

     label50:
        if i2 <= 1 goto label54;

        $r111 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        $z12 = interfaceinvoke $r111.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z12 != 0 goto label54;

        $r112 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.log.UserDataHelper userDataLog>;
        r113 = virtualinvoke $r112.<org.apache.tomcat.util.log.UserDataHelper: org.apache.tomcat.util.log.UserDataHelper$Mode getNextMode()>();
        if r113 == null goto label54;

        $r114 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r115 = newarray (java.lang.Object)[1];
        $r116 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r115[0] = $r116;
        r117 = virtualinvoke $r114.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("parameters.multipleDecodingFail", $r115);
        $r118 = staticinvoke <org.apache.tomcat.util.http.Parameters: int[] $SWITCH_TABLE$org$apache$tomcat$util$log$UserDataHelper$Mode()>();
        $i22 = virtualinvoke r113.<org.apache.tomcat.util.log.UserDataHelper$Mode: int ordinal()>();
        $i23 = $r118[$i22];
        tableswitch($i23)
        {
            case 1: goto label53;
            case 2: goto label51;
            case 3: goto label52;
            default: goto label54;
        };

     label51:
        $r119 = new java.lang.StringBuilder;
        $r120 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r117);
        specialinvoke $r119.<java.lang.StringBuilder: void <init>(java.lang.String)>($r120);
        $r121 = <org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.res.StringManager sm>;
        $r122 = virtualinvoke $r121.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("parameters.fallToDebug");
        $r123 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);
        r117 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

     label52:
        $r124 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        interfaceinvoke $r124.<org.apache.juli.logging.Log: void info(java.lang.Object)>(r117);
        goto label54;

     label53:
        $r125 = <org.apache.tomcat.util.http.Parameters: org.apache.juli.logging.Log log>;
        interfaceinvoke $r125.<org.apache.juli.logging.Log: void debug(java.lang.Object)>(r117);

     label54:
        return;

        catch java.io.IOException from label27 to label29 with label30;
        catch java.lang.IllegalStateException from label35 to label36 with label37;
        catch java.io.IOException from label31 to label41 with label42;
    }

    private void urlDecode(org.apache.tomcat.util.buf.ByteChunk) throws java.io.IOException
    {
        org.apache.tomcat.util.http.Parameters r0;
        org.apache.tomcat.util.buf.ByteChunk r1;
        org.apache.tomcat.util.buf.UDecoder $r2, $r3, $r4;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        $r3 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.UDecoder urlDec>;
        if $r3 != null goto label0;

        $r2 = new org.apache.tomcat.util.buf.UDecoder;
        specialinvoke $r2.<org.apache.tomcat.util.buf.UDecoder: void <init>()>();
        r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.UDecoder urlDec> = $r2;

     label0:
        $r4 = r0.<org.apache.tomcat.util.http.Parameters: org.apache.tomcat.util.buf.UDecoder urlDec>;
        virtualinvoke $r4.<org.apache.tomcat.util.buf.UDecoder: void convert(org.apache.tomcat.util.buf.ByteChunk,boolean)>(r1, 1);
        return;
    }

    public void processParameters(org.apache.tomcat.util.buf.MessageBytes, java.lang.String)
    {
        org.apache.tomcat.util.http.Parameters r0;
        org.apache.tomcat.util.buf.MessageBytes r1;
        java.lang.String r2;
        org.apache.tomcat.util.buf.ByteChunk r3;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        byte[] $r4;
        java.nio.charset.Charset $r5;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        r2 := @parameter1: java.lang.String;
        if r1 == null goto label0;

        $z0 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: boolean isNull()>();
        if $z0 != 0 goto label0;

        $i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: int getLength()>();
        if $i0 > 0 goto label1;

     label0:
        return;

     label1:
        $i1 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: int getType()>();
        if $i1 == 2 goto label2;

        virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: void toBytes()>();

     label2:
        r3 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk getByteChunk()>();
        $r4 = virtualinvoke r3.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBytes()>();
        $i2 = virtualinvoke r3.<org.apache.tomcat.util.buf.ByteChunk: int getOffset()>();
        $i3 = virtualinvoke r3.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        $r5 = specialinvoke r0.<org.apache.tomcat.util.http.Parameters: java.nio.charset.Charset getCharset(java.lang.String)>(r2);
        specialinvoke r0.<org.apache.tomcat.util.http.Parameters: void processParameters(byte[],int,int,java.nio.charset.Charset)>($r4, $i2, $i3, $r5);
        return;
    }

    private java.nio.charset.Charset getCharset(java.lang.String)
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.lang.String r1;
        java.io.UnsupportedEncodingException r2, $r5;
        java.nio.charset.Charset $r3, $r4, $r6;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r3 = <org.apache.tomcat.util.http.Parameters: java.nio.charset.Charset DEFAULT_CHARSET>;
        return $r3;

     label0:
        $r4 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharset(java.lang.String)>(r1);

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        $r6 = <org.apache.tomcat.util.http.Parameters: java.nio.charset.Charset DEFAULT_CHARSET>;
        return $r6;

        catch java.io.UnsupportedEncodingException from label0 to label1 with label2;
    }

    public java.lang.String paramsAsString()
    {
        org.apache.tomcat.util.http.Parameters r0;
        java.lang.StringBuilder $r1, r2, $r13, $r17;
        java.util.Iterator r3, r6;
        java.util.Map$Entry r4;
        java.util.ArrayList r5;
        java.lang.String r7, $r12, $r20;
        java.util.Map $r8;
        java.util.Set $r9;
        java.lang.Object $r10, $r11, $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: org.apache.tomcat.util.http.Parameters;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r8 = r0.<org.apache.tomcat.util.http.Parameters: java.util.Map paramHashValues>;
        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();
        goto label3;

     label0:
        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r10;
        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r12 = (java.lang.String) $r11;
        $r13 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
        $r15 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        r5 = (java.util.ArrayList) $r15;
        r6 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label2;

     label1:
        $r16 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r16;
        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label0;

        $r20 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r20;
    }

    static int[] $SWITCH_TABLE$org$apache$tomcat$util$log$UserDataHelper$Mode()
    {
        int[] $r0, r1;
        org.apache.tomcat.util.log.UserDataHelper$Mode[] $r2;
        int $i0, $i1, $i2, $i3;
        org.apache.tomcat.util.log.UserDataHelper$Mode $r3, $r5, $r7;
        java.lang.NoSuchFieldError $r4, $r6, $r8;

        $r0 = <org.apache.tomcat.util.http.Parameters: int[] $SWITCH_TABLE$org$apache$tomcat$util$log$UserDataHelper$Mode>;
        if $r0 == null goto label0;

        return $r0;

     label0:
        $r2 = staticinvoke <org.apache.tomcat.util.log.UserDataHelper$Mode: org.apache.tomcat.util.log.UserDataHelper$Mode[] values()>();
        $i0 = lengthof $r2;
        r1 = newarray (int)[$i0];

     label1:
        $r3 = <org.apache.tomcat.util.log.UserDataHelper$Mode: org.apache.tomcat.util.log.UserDataHelper$Mode DEBUG>;
        $i1 = virtualinvoke $r3.<org.apache.tomcat.util.log.UserDataHelper$Mode: int ordinal()>();
        r1[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r5 = <org.apache.tomcat.util.log.UserDataHelper$Mode: org.apache.tomcat.util.log.UserDataHelper$Mode INFO>;
        $i2 = virtualinvoke $r5.<org.apache.tomcat.util.log.UserDataHelper$Mode: int ordinal()>();
        r1[$i2] = 3;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

     label7:
        $r7 = <org.apache.tomcat.util.log.UserDataHelper$Mode: org.apache.tomcat.util.log.UserDataHelper$Mode INFO_THEN_DEBUG>;
        $i3 = virtualinvoke $r7.<org.apache.tomcat.util.log.UserDataHelper$Mode: int ordinal()>();
        r1[$i3] = 2;

     label8:
        goto label10;

     label9:
        $r8 := @caughtexception;

     label10:
        <org.apache.tomcat.util.http.Parameters: int[] $SWITCH_TABLE$org$apache$tomcat$util$log$UserDataHelper$Mode> = r1;
        return r1;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
        catch java.lang.NoSuchFieldError from label7 to label8 with label9;
    }
}
