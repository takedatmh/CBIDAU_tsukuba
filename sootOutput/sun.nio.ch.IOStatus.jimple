final class sun.nio.ch.IOStatus extends java.lang.Object
{
    static final int EOF;
    static final int UNAVAILABLE;
    static final int INTERRUPTED;
    static final int UNSUPPORTED;
    static final int THROWN;
    static final int UNSUPPORTED_CASE;

    private void <init>()
    {
        sun.nio.ch.IOStatus r0;

        r0 := @this: sun.nio.ch.IOStatus;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static int normalize(int)
    {
        int i0;

        i0 := @parameter0: int;
        if i0 != -2 goto label0;

        return 0;

     label0:
        return i0;
    }

    static boolean check(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;
        if i0 < -2 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    static long normalize(long)
    {
        long l0;
        byte $b1;

        l0 := @parameter0: long;
        $b1 = l0 cmp -2L;
        if $b1 != 0 goto label0;

        return 0L;

     label0:
        return l0;
    }

    static boolean check(long)
    {
        long l0;
        byte $b1;
        boolean $z0;

        l0 := @parameter0: long;
        $b1 = l0 cmp -2L;
        if $b1 < 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    static boolean checkAll(long)
    {
        long l0;
        byte $b1, $b2;
        boolean $z0;

        l0 := @parameter0: long;
        $b1 = l0 cmp -1L;
        if $b1 > 0 goto label0;

        $b2 = l0 cmp -6L;
        if $b2 >= 0 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
