public final class org.apache.catalina.util.RequestUtil extends java.lang.Object
{
    private static final org.apache.juli.logging.Log log;
    private static final org.apache.tomcat.util.res.StringManager sm;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        org.apache.tomcat.util.res.StringManager $r1;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/util/RequestUtil");
        <org.apache.catalina.util.RequestUtil: org.apache.juli.logging.Log log> = $r0;
        $r1 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.catalina.util");
        <org.apache.catalina.util.RequestUtil: org.apache.tomcat.util.res.StringManager sm> = $r1;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.util.RequestUtil r0;

        r0 := @this: org.apache.catalina.util.RequestUtil;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String filter(java.lang.String)
    {
        java.lang.String r0, $r9;
        char[] r1;
        java.lang.StringBuilder r2, $r3;
        int i0, $i1, $i2, $i3, $i4, $i7;
        char $c5, $c6;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        r1 = newarray (char)[$i1];
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i2, r1, 0);
        $r3 = new java.lang.StringBuilder;
        $i3 = lengthof r1;
        $i4 = $i3 + 50;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i4);
        r2 = $r3;
        i0 = 0;
        goto label8;

     label1:
        $c5 = r1[i0];
        lookupswitch($c5)
        {
            case 34: goto label5;
            case 38: goto label4;
            case 60: goto label2;
            case 62: goto label3;
            default: goto label6;
        };

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&lt;");
        goto label7;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&gt;");
        goto label7;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");
        goto label7;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&quot;");
        goto label7;

     label6:
        $c6 = r1[i0];
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

     label7:
        i0 = i0 + 1;

     label8:
        $i7 = lengthof r1;
        if i0 < $i7 goto label1;

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r9;
    }

    public static java.lang.String normalize(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <org.apache.tomcat.util.http.RequestUtil: java.lang.String normalize(java.lang.String)>(r0);
        return $r1;
    }

    public static java.lang.String normalize(java.lang.String, boolean)
    {
        java.lang.String r0, $r1;
        boolean z0;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r1 = staticinvoke <org.apache.tomcat.util.http.RequestUtil: java.lang.String normalize(java.lang.String,boolean)>(r0, z0);
        return $r1;
    }

    public static void parseParameters(java.util.Map, java.lang.String, java.lang.String)
    {
        java.util.Map r0;
        java.lang.String r1, r2, $r11;
        null_type n0;
        java.io.UnsupportedEncodingException r3, $r6;
        int $i0;
        java.nio.charset.Charset $r4;
        byte[] r5;
        org.apache.juli.logging.Log $r7, $r8;
        boolean $z0;
        org.apache.tomcat.util.res.StringManager $r9;
        java.lang.Object[] $r10;

        r0 := @parameter0: java.util.Map;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 <= 0 goto label3;

        n0 = null;

     label0:
        $r4 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharset(java.lang.String)>(r2);
        r5 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);
        staticinvoke <org.apache.catalina.util.RequestUtil: void parseParameters(java.util.Map,byte[],java.lang.String)>(r0, r5, r2);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;
        $r7 = <org.apache.catalina.util.RequestUtil: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r7.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label3;

        $r8 = <org.apache.catalina.util.RequestUtil: org.apache.juli.logging.Log log>;
        $r9 = <org.apache.catalina.util.RequestUtil: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = newarray (java.lang.Object)[1];
        $r10[0] = r2;
        $r11 = virtualinvoke $r9.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("requestUtil.parseParameters.uee", $r10);
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r11, r3);

     label3:
        return;

        catch java.io.UnsupportedEncodingException from label0 to label1 with label2;
    }

    public static java.lang.String URLDecode(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <org.apache.catalina.util.RequestUtil: java.lang.String URLDecode(java.lang.String,java.lang.String)>(r0, null);
        return $r1;
    }

    public static java.lang.String URLDecode(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = staticinvoke <org.apache.catalina.util.RequestUtil: java.lang.String URLDecode(java.lang.String,java.lang.String,boolean)>(r0, r1, 0);
        return $r2;
    }

    public static java.lang.String URLDecode(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, $r11, $r12;
        boolean z0, $z1;
        byte[] r2;
        java.nio.charset.Charset $r3, $r5;
        java.io.UnsupportedEncodingException r4, $r6;
        org.apache.juli.logging.Log $r7, $r8;
        org.apache.tomcat.util.res.StringManager $r9;
        java.lang.Object[] $r10;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        if r0 != null goto label0;

        return null;

     label0:
        r2 = null;

     label1:
        if r1 != null goto label2;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
        r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);
        goto label5;

     label2:
        $r5 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharset(java.lang.String)>(r1);
        r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;
        r4 = $r6;
        $r7 = <org.apache.catalina.util.RequestUtil: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r7.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label5;

        $r8 = <org.apache.catalina.util.RequestUtil: org.apache.juli.logging.Log log>;
        $r9 = <org.apache.catalina.util.RequestUtil: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = newarray (java.lang.Object)[1];
        $r10[0] = r1;
        $r11 = virtualinvoke $r9.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("requestUtil.urlDecode.uee", $r10);
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r11, r4);

     label5:
        $r12 = staticinvoke <org.apache.catalina.util.RequestUtil: java.lang.String URLDecode(byte[],java.lang.String,boolean)>(r2, r1, z0);
        return $r12;

        catch java.io.UnsupportedEncodingException from label1 to label3 with label4;
    }

    public static java.lang.String URLDecode(byte[])
    {
        byte[] r0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];
        $r1 = staticinvoke <org.apache.catalina.util.RequestUtil: java.lang.String URLDecode(byte[],java.lang.String)>(r0, null);
        return $r1;
    }

    public static java.lang.String URLDecode(byte[], java.lang.String)
    {
        byte[] r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: byte[];
        r1 := @parameter1: java.lang.String;
        $r2 = staticinvoke <org.apache.catalina.util.RequestUtil: java.lang.String URLDecode(byte[],java.lang.String,boolean)>(r0, r1, 0);
        return $r2;
    }

    public static java.lang.String URLDecode(byte[], java.lang.String, boolean)
    {
        byte[] r0;
        java.lang.String r1, $r4, $r5, $r13, $r14;
        boolean z0, $z1;
        int i0, i1, i2, $i3, $i5, i6, $i9, $i12, $i13;
        byte b4, $b7, $b8, $b10, $b11;
        org.apache.tomcat.util.res.StringManager $r2, $r11;
        java.lang.IllegalArgumentException $r3;
        java.nio.charset.Charset $r6;
        java.io.UnsupportedEncodingException $r7, r8;
        org.apache.juli.logging.Log $r9, $r10;
        java.lang.Object[] $r12;

        r0 := @parameter0: byte[];
        r1 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        if r0 != null goto label0;

        return null;

     label0:
        i0 = lengthof r0;
        i1 = 0;
        i2 = 0;
        goto label5;

     label1:
        $i3 = i1;
        i1 = i1 + 1;
        b4 = r0[$i3];
        if b4 != 43 goto label2;

        if z0 == 0 goto label2;

        b4 = 32;
        goto label4;

     label2:
        if b4 != 37 goto label4;

        $i5 = i1 + 2;
        if $i5 <= i0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.catalina.util.RequestUtil: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("requestUtil.urlDecode.missingDigit");
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label3:
        i6 = i1 + 1;
        $b7 = r0[i1];
        $b8 = staticinvoke <org.apache.catalina.util.RequestUtil: byte convertHexDigit(byte)>($b7);
        $i9 = $b8 << 4;
        i1 = i6 + 1;
        $b10 = r0[i6];
        $b11 = staticinvoke <org.apache.catalina.util.RequestUtil: byte convertHexDigit(byte)>($b10);
        $i12 = $i9 + $b11;
        b4 = (byte) $i12;

     label4:
        $i13 = i2;
        i2 = i2 + 1;
        r0[$i13] = b4;

     label5:
        if i1 < i0 goto label1;

        if r1 == null goto label10;

     label6:
        $r5 = new java.lang.String;
        $r6 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharset(java.lang.String)>(r1);
        specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r0, 0, i2, $r6);

     label7:
        return $r5;

     label8:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = <org.apache.catalina.util.RequestUtil: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label9;

        $r10 = <org.apache.catalina.util.RequestUtil: org.apache.juli.logging.Log log>;
        $r11 = <org.apache.catalina.util.RequestUtil: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = newarray (java.lang.Object)[1];
        $r12[0] = r1;
        $r13 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("requestUtil.urlDecode.uee", $r12);
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r13, r8);

     label9:
        return null;

     label10:
        $r14 = new java.lang.String;
        specialinvoke $r14.<java.lang.String: void <init>(byte[],int,int)>(r0, 0, i2);
        return $r14;

        catch java.io.UnsupportedEncodingException from label6 to label7 with label8;
    }

    private static byte convertHexDigit(byte)
    {
        byte b0, $b2, $b5, $b8;
        org.apache.tomcat.util.res.StringManager $r0;
        int $i1, $i3, $i4, $i6, $i7;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object[] $r2;
        char $c9;
        java.lang.Character $r3;
        java.lang.String $r4;

        b0 := @parameter0: byte;
        if b0 < 48 goto label0;

        if b0 > 57 goto label0;

        $i1 = b0 - 48;
        $b2 = (byte) $i1;
        return $b2;

     label0:
        if b0 < 97 goto label1;

        if b0 > 102 goto label1;

        $i3 = b0 - 97;
        $i4 = $i3 + 10;
        $b5 = (byte) $i4;
        return $b5;

     label1:
        if b0 < 65 goto label2;

        if b0 > 70 goto label2;

        $i6 = b0 - 65;
        $i7 = $i6 + 10;
        $b8 = (byte) $i7;
        return $b8;

     label2:
        $r1 = new java.lang.IllegalArgumentException;
        $r0 = <org.apache.catalina.util.RequestUtil: org.apache.tomcat.util.res.StringManager sm>;
        $r2 = newarray (java.lang.Object)[1];
        $c9 = (char) b0;
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c9);
        $r2[0] = $r3;
        $r4 = virtualinvoke $r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("requestUtil.convertHexDigit.notHex", $r2);
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);
        throw $r1;
    }

    private static void putMapEntry(java.util.Map, java.lang.String, java.lang.String)
    {
        java.util.Map r0;
        java.lang.String r1, r2;
        null_type n0;
        java.lang.String[] r3, r5;
        java.lang.Object $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: java.util.Map;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        n0 = null;
        $r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (java.lang.String[]) $r4;
        if r3 != null goto label0;

        r5 = newarray (java.lang.String)[1];
        r5[0] = r2;
        goto label1;

     label0:
        $i0 = lengthof r3;
        $i1 = $i0 + 1;
        r5 = newarray (java.lang.String)[$i1];
        $i2 = lengthof r3;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r5, 0, $i2);
        $i3 = lengthof r3;
        r5[$i3] = r2;

     label1:
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);
        return;
    }

    public static void parseParameters(java.util.Map, byte[], java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.util.Map r0;
        byte[] r1;
        java.lang.String r2, r4, $r5, r6, $r7, $r8, r9;
        java.nio.charset.Charset r3;
        int i0, i1, $i2, $i4, $i6, $i7, $i8, i9, $i12, $i15, $i17, $i18;
        null_type n0;
        byte b3, $b10, $b11, $b13, $b14, $b16;
        char $c5;

        r0 := @parameter0: java.util.Map;
        r1 := @parameter1: byte[];
        r2 := @parameter2: java.lang.String;
        r3 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharset(java.lang.String)>(r2);
        if r1 == null goto label9;

        $i4 = lengthof r1;
        if $i4 <= 0 goto label9;

        i0 = 0;
        i1 = 0;
        r4 = null;
        n0 = null;
        goto label8;

     label0:
        $i2 = i0;
        i0 = i0 + 1;
        b3 = r1[$i2];
        $c5 = (char) b3;
        lookupswitch($c5)
        {
            case 37: goto label6;
            case 38: goto label1;
            case 43: goto label5;
            case 61: goto label3;
            default: goto label7;
        };

     label1:
        $r5 = new java.lang.String;
        specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, 0, i1, r3);
        r6 = $r5;
        if r4 == null goto label2;

        staticinvoke <org.apache.catalina.util.RequestUtil: void putMapEntry(java.util.Map,java.lang.String,java.lang.String)>(r0, r4, r6);
        r4 = null;

     label2:
        i1 = 0;
        goto label8;

     label3:
        if r4 != null goto label4;

        $r7 = new java.lang.String;
        specialinvoke $r7.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, 0, i1, r3);
        r4 = $r7;
        i1 = 0;
        goto label8;

     label4:
        $i6 = i1;
        i1 = i1 + 1;
        r1[$i6] = b3;
        goto label8;

     label5:
        $i7 = i1;
        i1 = i1 + 1;
        r1[$i7] = 32;
        goto label8;

     label6:
        $i8 = i1;
        i1 = i1 + 1;
        i9 = i0 + 1;
        $b10 = r1[i0];
        $b11 = staticinvoke <org.apache.catalina.util.RequestUtil: byte convertHexDigit(byte)>($b10);
        $i12 = $b11 << 4;
        i0 = i9 + 1;
        $b13 = r1[i9];
        $b14 = staticinvoke <org.apache.catalina.util.RequestUtil: byte convertHexDigit(byte)>($b13);
        $i15 = $i12 + $b14;
        $b16 = (byte) $i15;
        r1[$i8] = $b16;
        goto label8;

     label7:
        $i17 = i1;
        i1 = i1 + 1;
        r1[$i17] = b3;

     label8:
        $i18 = lengthof r1;
        if i0 < $i18 goto label0;

        if r4 == null goto label9;

        $r8 = new java.lang.String;
        specialinvoke $r8.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, 0, i1, r3);
        r9 = $r8;
        staticinvoke <org.apache.catalina.util.RequestUtil: void putMapEntry(java.util.Map,java.lang.String,java.lang.String)>(r0, r4, r9);

     label9:
        return;
    }
}
