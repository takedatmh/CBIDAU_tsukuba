public class org.apache.catalina.deploy.NamingResources extends org.apache.catalina.util.LifecycleMBeanBase implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final org.apache.juli.logging.Log log;
    private static final org.apache.tomcat.util.res.StringManager sm;
    private volatile boolean resourceRequireExplicitRegistration;
    private java.lang.Object container;
    private java.util.Set entries;
    private java.util.HashMap ejbs;
    private java.util.HashMap envs;
    private java.util.HashMap localEjbs;
    private java.util.HashMap mdrs;
    private java.util.HashMap resourceEnvRefs;
    private java.util.HashMap resources;
    private java.util.HashMap resourceLinks;
    private java.util.HashMap services;
    private org.apache.catalina.deploy.ContextTransaction transaction;
    protected java.beans.PropertyChangeSupport support;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        org.apache.tomcat.util.res.StringManager $r1;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/deploy/NamingResources");
        <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log> = $r0;
        $r1 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.catalina.deploy");
        <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm> = $r1;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.HashSet $r1;
        java.util.HashMap $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.beans.PropertyChangeSupport $r10;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        specialinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: void <init>()>();
        r0.<org.apache.catalina.deploy.NamingResources: boolean resourceRequireExplicitRegistration> = 0;
        r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container> = null;
        $r1 = new java.util.HashSet;
        specialinvoke $r1.<java.util.HashSet: void <init>()>();
        r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries> = $r1;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap ejbs> = $r2;
        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs> = $r3;
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap localEjbs> = $r4;
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap mdrs> = $r5;
        $r6 = new java.util.HashMap;
        specialinvoke $r6.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceEnvRefs> = $r6;
        $r7 = new java.util.HashMap;
        specialinvoke $r7.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources> = $r7;
        $r8 = new java.util.HashMap;
        specialinvoke $r8.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks> = $r8;
        $r9 = new java.util.HashMap;
        specialinvoke $r9.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap services> = $r9;
        r0.<org.apache.catalina.deploy.NamingResources: org.apache.catalina.deploy.ContextTransaction transaction> = null;
        $r10 = new java.beans.PropertyChangeSupport;
        specialinvoke $r10.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);
        r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support> = $r10;
        return;
    }

    public java.lang.Object getContainer()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r1 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        return $r1;
    }

    public void setContainer(java.lang.Object)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.Object r1;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.Object;
        r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container> = r1;
        return;
    }

    public void setTransaction(org.apache.catalina.deploy.ContextTransaction)
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.deploy.ContextTransaction r1;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.deploy.ContextTransaction;
        r0.<org.apache.catalina.deploy.NamingResources: org.apache.catalina.deploy.ContextTransaction transaction> = r1;
        return;
    }

    public org.apache.catalina.deploy.ContextTransaction getTransaction()
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.deploy.ContextTransaction $r1;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r1 = r0.<org.apache.catalina.deploy.NamingResources: org.apache.catalina.deploy.ContextTransaction transaction>;
        return $r1;
    }

    public void addEjb(org.apache.catalina.deploy.ContextEjb)
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.deploy.ContextEjb r1;
        java.lang.String r2, r3, $r8, $r9, $r11, $r13, $r16;
        org.apache.tomcat.util.res.StringManager $r4;
        java.util.HashMap r5, $r14, $r15;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object[] $r7;
        java.util.Set $r10, $r12;
        boolean $z0;
        java.lang.Throwable $r18;
        java.beans.PropertyChangeSupport $r19;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.deploy.ContextEjb;
        r2 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEjb: java.lang.String getLink()>();
        r3 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEjb: java.lang.String getLookupName()>();
        if r2 == null goto label0;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        if r3 == null goto label0;

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i1 <= 0 goto label0;

        $r6 = new java.lang.IllegalArgumentException;
        $r4 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r7 = newarray (java.lang.Object)[1];
        $r8 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEjb: java.lang.String getName()>();
        $r7[0] = $r8;
        $r9 = virtualinvoke $r4.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.ejbLookupLink", $r7);
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);
        throw $r6;

     label0:
        $r10 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r11 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEjb: java.lang.String getName()>();
        $z0 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>($r11);
        if $z0 == 0 goto label1;

        return;

     label1:
        $r12 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r13 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEjb: java.lang.String getName()>();
        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r13);
        $r14 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap ejbs>;
        r5 = $r14;
        entermonitor $r14;

     label2:
        virtualinvoke r1.<org.apache.catalina.deploy.ContextEjb: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(r0);
        $r15 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap ejbs>;
        $r16 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEjb: java.lang.String getName()>();
        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r1);
        exitmonitor r5;

     label3:
        goto label7;

     label4:
        $r18 := @caughtexception;

     label5:
        exitmonitor r5;

     label6:
        throw $r18;

     label7:
        $r19 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r19.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("ejb", null, r1);
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)
    {
        org.apache.catalina.deploy.NamingResources r0, r4;
        org.apache.catalina.deploy.ContextEnvironment r1, r2, $r14, $r16;
        org.apache.catalina.deploy.ContextResourceLink r3;
        org.apache.tomcat.util.res.StringManager $r5, $r26, $r43;
        java.util.HashMap r6, $r33, $r34;
        java.util.Set $r7, $r31;
        java.lang.String $r8, $r9, $r10, $r11, $r13, $r15, $r17, r19, r20, $r23, $r24, $r28, $r29, $r30, $r32, $r35, $r45, $r46;
        boolean $z0, $z1, $z2, $z3, $z5;
        org.apache.catalina.Server $r12;
        java.util.List r18;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r21, $r25;
        java.lang.Object[] $r22, $r27, $r44;
        java.lang.Throwable $r37;
        java.beans.PropertyChangeSupport $r38;
        java.lang.Exception $r40, r41;
        org.apache.juli.logging.Log $r42;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.deploy.ContextEnvironment;
        $r7 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r8 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r8);
        if $z0 == 0 goto label4;

        $r9 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        r2 = virtualinvoke r0.<org.apache.catalina.deploy.NamingResources: org.apache.catalina.deploy.ContextEnvironment findEnvironment(java.lang.String)>($r9);
        $r10 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        r3 = virtualinvoke r0.<org.apache.catalina.deploy.NamingResources: org.apache.catalina.deploy.ContextResourceLink findResourceLink(java.lang.String)>($r10);
        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<org.apache.catalina.deploy.ContextEnvironment: boolean getOverride()>();
        if $z1 == 0 goto label0;

        $r11 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        virtualinvoke r0.<org.apache.catalina.deploy.NamingResources: void removeEnvironment(java.lang.String)>($r11);
        goto label4;

     label0:
        return;

     label1:
        if r3 == null goto label3;

        $r12 = specialinvoke r0.<org.apache.catalina.deploy.NamingResources: org.apache.catalina.Server getServer()>();
        r4 = interfaceinvoke $r12.<org.apache.catalina.Server: org.apache.catalina.deploy.NamingResources getGlobalNamingResources()>();
        $r13 = virtualinvoke r3.<org.apache.catalina.deploy.ContextResourceLink: java.lang.String getGlobal()>();
        $r14 = virtualinvoke r4.<org.apache.catalina.deploy.NamingResources: org.apache.catalina.deploy.ContextEnvironment findEnvironment(java.lang.String)>($r13);
        if $r14 == null goto label4;

        $r15 = virtualinvoke r3.<org.apache.catalina.deploy.ContextResourceLink: java.lang.String getGlobal()>();
        $r16 = virtualinvoke r4.<org.apache.catalina.deploy.NamingResources: org.apache.catalina.deploy.ContextEnvironment findEnvironment(java.lang.String)>($r15);
        $z2 = virtualinvoke $r16.<org.apache.catalina.deploy.ContextEnvironment: boolean getOverride()>();
        if $z2 == 0 goto label2;

        $r17 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        virtualinvoke r0.<org.apache.catalina.deploy.NamingResources: void removeResourceLink(java.lang.String)>($r17);
        goto label4;

     label2:
        return;

     label3:
        return;

     label4:
        r18 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.util.List getInjectionTargets()>();
        r19 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getValue()>();
        r20 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getLookupName()>();
        if r18 == null goto label6;

        $i0 = interfaceinvoke r18.<java.util.List: int size()>();
        if $i0 <= 0 goto label6;

        if r19 == null goto label5;

        $i1 = virtualinvoke r19.<java.lang.String: int length()>();
        if $i1 != 0 goto label6;

     label5:
        return;

     label6:
        if r19 == null goto label7;

        $i2 = virtualinvoke r19.<java.lang.String: int length()>();
        if $i2 <= 0 goto label7;

        if r20 == null goto label7;

        $i3 = virtualinvoke r20.<java.lang.String: int length()>();
        if $i3 <= 0 goto label7;

        $r21 = new java.lang.IllegalArgumentException;
        $r5 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r22 = newarray (java.lang.Object)[1];
        $r23 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        $r22[0] = $r23;
        $r24 = virtualinvoke $r5.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.envEntryLookupValue", $r22);
        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);
        throw $r21;

     label7:
        $z3 = specialinvoke r0.<org.apache.catalina.deploy.NamingResources: boolean checkResourceType(org.apache.catalina.deploy.ResourceBase)>(r1);
        if $z3 != 0 goto label8;

        $r25 = new java.lang.IllegalArgumentException;
        $r26 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r27 = newarray (java.lang.Object)[2];
        $r28 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        $r27[0] = $r28;
        $r29 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getType()>();
        $r27[1] = $r29;
        $r30 = virtualinvoke $r26.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.resourceTypeFail", $r27);
        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);
        throw $r25;

     label8:
        $r31 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r32 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        interfaceinvoke $r31.<java.util.Set: boolean add(java.lang.Object)>($r32);
        $r33 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        r6 = $r33;
        entermonitor $r33;

     label9:
        virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(r0);
        $r34 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        $r35 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        virtualinvoke $r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, r1);
        exitmonitor r6;

     label10:
        goto label14;

     label11:
        $r37 := @caughtexception;

     label12:
        exitmonitor r6;

     label13:
        throw $r37;

     label14:
        $r38 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r38.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("environment", null, r1);
        $z5 = r0.<org.apache.catalina.deploy.NamingResources: boolean resourceRequireExplicitRegistration>;
        if $z5 == 0 goto label18;

     label15:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextEnvironment)>(r1);

     label16:
        goto label18;

     label17:
        $r40 := @caughtexception;
        r41 = $r40;
        $r42 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r43 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r44 = newarray (java.lang.Object)[1];
        $r45 = virtualinvoke r1.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        $r44[0] = $r45;
        $r46 = virtualinvoke $r43.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanCreateFail", $r44);
        interfaceinvoke $r42.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r46, r41);

     label18:
        return;

        catch java.lang.Throwable from label9 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    private org.apache.catalina.Server getServer()
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.Engine r1;
        java.lang.Object $r2, $r3, $r5, $r6;
        boolean $z0, $z1;
        org.apache.catalina.Server $r4, $r11;
        org.apache.catalina.Context $r7;
        org.apache.catalina.Container $r8, $r9;
        org.apache.catalina.Service $r10;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r2 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $z0 = $r2 instanceof org.apache.catalina.Server;
        if $z0 == 0 goto label0;

        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $r4 = (org.apache.catalina.Server) $r3;
        return $r4;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $z1 = $r5 instanceof org.apache.catalina.Context;
        if $z1 == 0 goto label1;

        $r6 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $r7 = (org.apache.catalina.Context) $r6;
        $r8 = interfaceinvoke $r7.<org.apache.catalina.Context: org.apache.catalina.Container getParent()>();
        $r9 = interfaceinvoke $r8.<org.apache.catalina.Container: org.apache.catalina.Container getParent()>();
        r1 = (org.apache.catalina.Engine) $r9;
        $r10 = interfaceinvoke r1.<org.apache.catalina.Engine: org.apache.catalina.Service getService()>();
        $r11 = interfaceinvoke $r10.<org.apache.catalina.Service: org.apache.catalina.Server getServer()>();
        return $r11;

     label1:
        return null;
    }

    public void addLocalEjb(org.apache.catalina.deploy.ContextLocalEjb)
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.deploy.ContextLocalEjb r1;
        java.util.HashMap r2, $r7, $r8;
        java.util.Set $r3, $r5;
        java.lang.String $r4, $r6, $r9;
        boolean $z0;
        java.lang.Throwable $r11;
        java.beans.PropertyChangeSupport $r12;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.deploy.ContextLocalEjb;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r4 = virtualinvoke r1.<org.apache.catalina.deploy.ContextLocalEjb: java.lang.String getName()>();
        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r4);
        if $z0 == 0 goto label0;

        return;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r6 = virtualinvoke r1.<org.apache.catalina.deploy.ContextLocalEjb: java.lang.String getName()>();
        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r6);
        $r7 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap localEjbs>;
        r2 = $r7;
        entermonitor $r7;

     label1:
        virtualinvoke r1.<org.apache.catalina.deploy.ContextLocalEjb: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(r0);
        $r8 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap localEjbs>;
        $r9 = virtualinvoke r1.<org.apache.catalina.deploy.ContextLocalEjb: java.lang.String getName()>();
        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r11;

     label6:
        $r12 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r12.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("localEjb", null, r1);
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void addMessageDestinationRef(org.apache.catalina.deploy.MessageDestinationRef)
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.deploy.MessageDestinationRef r1;
        org.apache.tomcat.util.res.StringManager $r2;
        java.util.HashMap r3, $r13, $r14;
        java.util.Set $r4, $r11;
        java.lang.String $r5, $r8, $r9, $r10, $r12, $r15;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r17;
        java.beans.PropertyChangeSupport $r18;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.deploy.MessageDestinationRef;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r5 = virtualinvoke r1.<org.apache.catalina.deploy.MessageDestinationRef: java.lang.String getName()>();
        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5);
        if $z0 == 0 goto label0;

        return;

     label0:
        $z1 = specialinvoke r0.<org.apache.catalina.deploy.NamingResources: boolean checkResourceType(org.apache.catalina.deploy.ResourceBase)>(r1);
        if $z1 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r7 = newarray (java.lang.Object)[2];
        $r8 = virtualinvoke r1.<org.apache.catalina.deploy.MessageDestinationRef: java.lang.String getName()>();
        $r7[0] = $r8;
        $r9 = virtualinvoke r1.<org.apache.catalina.deploy.MessageDestinationRef: java.lang.String getType()>();
        $r7[1] = $r9;
        $r10 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.resourceTypeFail", $r7);
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label1:
        $r11 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r12 = virtualinvoke r1.<org.apache.catalina.deploy.MessageDestinationRef: java.lang.String getName()>();
        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12);
        $r13 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap mdrs>;
        r3 = $r13;
        entermonitor $r13;

     label2:
        virtualinvoke r1.<org.apache.catalina.deploy.MessageDestinationRef: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(r0);
        $r14 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap mdrs>;
        $r15 = virtualinvoke r1.<org.apache.catalina.deploy.MessageDestinationRef: java.lang.String getName()>();
        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r1);
        exitmonitor r3;

     label3:
        goto label7;

     label4:
        $r17 := @caughtexception;

     label5:
        exitmonitor r3;

     label6:
        throw $r17;

     label7:
        $r18 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r18.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("messageDestinationRef", null, r1);
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.beans.PropertyChangeListener r1;
        java.beans.PropertyChangeSupport $r2;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.beans.PropertyChangeListener;
        $r2 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);
        return;
    }

    public void addResource(org.apache.catalina.deploy.ContextResource)
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.deploy.ContextResource r1;
        org.apache.tomcat.util.res.StringManager $r2, $r23;
        java.util.HashMap r3, $r13, $r14;
        java.util.Set $r4, $r11;
        java.lang.String $r5, $r8, $r9, $r10, $r12, $r15, $r25, $r26;
        boolean $z0, $z1, $z3;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object[] $r7, $r24;
        java.lang.Throwable $r17;
        java.beans.PropertyChangeSupport $r18;
        java.lang.Exception $r20, r21;
        org.apache.juli.logging.Log $r22;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.deploy.ContextResource;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r5 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5);
        if $z0 == 0 goto label0;

        return;

     label0:
        $z1 = specialinvoke r0.<org.apache.catalina.deploy.NamingResources: boolean checkResourceType(org.apache.catalina.deploy.ResourceBase)>(r1);
        if $z1 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r7 = newarray (java.lang.Object)[2];
        $r8 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        $r7[0] = $r8;
        $r9 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: java.lang.String getType()>();
        $r7[1] = $r9;
        $r10 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.resourceTypeFail", $r7);
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label1:
        $r11 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r12 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12);
        $r13 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        r3 = $r13;
        entermonitor $r13;

     label2:
        virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(r0);
        $r14 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        $r15 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r1);
        exitmonitor r3;

     label3:
        goto label7;

     label4:
        $r17 := @caughtexception;

     label5:
        exitmonitor r3;

     label6:
        throw $r17;

     label7:
        $r18 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r18.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", null, r1);
        $z3 = r0.<org.apache.catalina.deploy.NamingResources: boolean resourceRequireExplicitRegistration>;
        if $z3 == 0 goto label11;

     label8:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResource)>(r1);

     label9:
        goto label11;

     label10:
        $r20 := @caughtexception;
        r21 = $r20;
        $r22 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r23 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r24 = newarray (java.lang.Object)[1];
        $r25 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        $r24[0] = $r25;
        $r26 = virtualinvoke $r23.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanCreateFail", $r24);
        interfaceinvoke $r22.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r26, r21);

     label11:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Exception from label8 to label9 with label10;
    }

    public void addResourceEnvRef(org.apache.catalina.deploy.ContextResourceEnvRef)
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.deploy.ContextResourceEnvRef r1;
        org.apache.tomcat.util.res.StringManager $r2;
        java.util.HashMap r3, $r13, $r14;
        java.util.Set $r4, $r11;
        java.lang.String $r5, $r8, $r9, $r10, $r12, $r15;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r17;
        java.beans.PropertyChangeSupport $r18;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.deploy.ContextResourceEnvRef;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r5 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceEnvRef: java.lang.String getName()>();
        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5);
        if $z0 == 0 goto label0;

        return;

     label0:
        $z1 = specialinvoke r0.<org.apache.catalina.deploy.NamingResources: boolean checkResourceType(org.apache.catalina.deploy.ResourceBase)>(r1);
        if $z1 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r7 = newarray (java.lang.Object)[2];
        $r8 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceEnvRef: java.lang.String getName()>();
        $r7[0] = $r8;
        $r9 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceEnvRef: java.lang.String getType()>();
        $r7[1] = $r9;
        $r10 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.resourceTypeFail", $r7);
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label1:
        $r11 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r12 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceEnvRef: java.lang.String getName()>();
        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r12);
        $r13 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceEnvRefs>;
        r3 = $r13;
        entermonitor $r13;

     label2:
        virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceEnvRef: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(r0);
        $r14 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceEnvRefs>;
        $r15 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceEnvRef: java.lang.String getName()>();
        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r1);
        exitmonitor r3;

     label3:
        goto label7;

     label4:
        $r17 := @caughtexception;

     label5:
        exitmonitor r3;

     label6:
        throw $r17;

     label7:
        $r18 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r18.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceEnvRef", null, r1);
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.deploy.ContextResourceLink r1;
        java.util.HashMap r2, $r7, $r8;
        java.util.Set $r3, $r5;
        java.lang.String $r4, $r6, $r9, $r19, $r20;
        boolean $z0, $z2;
        java.lang.Throwable $r11;
        java.beans.PropertyChangeSupport $r12;
        java.lang.Exception $r14, r15;
        org.apache.juli.logging.Log $r16;
        org.apache.tomcat.util.res.StringManager $r17;
        java.lang.Object[] $r18;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.deploy.ContextResourceLink;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r4 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceLink: java.lang.String getName()>();
        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r4);
        if $z0 == 0 goto label0;

        return;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r6 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceLink: java.lang.String getName()>();
        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r6);
        $r7 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        r2 = $r7;
        entermonitor $r7;

     label1:
        virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceLink: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(r0);
        $r8 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        $r9 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceLink: java.lang.String getName()>();
        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r11;

     label6:
        $r12 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r12.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceLink", null, r1);
        $z2 = r0.<org.apache.catalina.deploy.NamingResources: boolean resourceRequireExplicitRegistration>;
        if $z2 == 0 goto label10;

     label7:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResourceLink)>(r1);

     label8:
        goto label10;

     label9:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r17 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r18 = newarray (java.lang.Object)[1];
        $r19 = virtualinvoke r1.<org.apache.catalina.deploy.ContextResourceLink: java.lang.String getName()>();
        $r18[0] = $r19;
        $r20 = virtualinvoke $r17.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanCreateFail", $r18);
        interfaceinvoke $r16.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r20, r15);

     label10:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public void addService(org.apache.catalina.deploy.ContextService)
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.deploy.ContextService r1;
        java.util.HashMap r2, $r7, $r8;
        java.util.Set $r3, $r5;
        java.lang.String $r4, $r6, $r9;
        boolean $z0;
        java.lang.Throwable $r11;
        java.beans.PropertyChangeSupport $r12;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.deploy.ContextService;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r4 = virtualinvoke r1.<org.apache.catalina.deploy.ContextService: java.lang.String getName()>();
        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r4);
        if $z0 == 0 goto label0;

        return;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $r6 = virtualinvoke r1.<org.apache.catalina.deploy.ContextService: java.lang.String getName()>();
        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r6);
        $r7 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap services>;
        r2 = $r7;
        entermonitor $r7;

     label1:
        virtualinvoke r1.<org.apache.catalina.deploy.ContextService: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(r0);
        $r8 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap services>;
        $r9 = virtualinvoke r1.<org.apache.catalina.deploy.ContextService: java.lang.String getName()>();
        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r11;

     label6:
        $r12 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r12.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("service", null, r1);
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public org.apache.catalina.deploy.ContextEjb findEjb(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        java.util.HashMap r2, $r3, $r4;
        java.lang.Object $r5;
        org.apache.catalina.deploy.ContextEjb $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap ejbs>;
        r2 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap ejbs>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r6 = (org.apache.catalina.deploy.ContextEjb) $r5;
        exitmonitor r2;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r7;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextEjb[] findEjbs()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.HashMap r1, $r3, $r4, $r5;
        org.apache.catalina.deploy.ContextEjb[] r2, $r8;
        int $i0;
        java.util.Collection $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap ejbs>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap ejbs>;
        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();
        r2 = newarray (org.apache.catalina.deploy.ContextEjb)[$i0];
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap ejbs>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r2);
        $r8 = (org.apache.catalina.deploy.ContextEjb[]) $r7;
        exitmonitor r1;

     label1:
        return $r8;

     label2:
        $r9 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r9;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextEnvironment findEnvironment(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        java.util.HashMap r2, $r3, $r4;
        java.lang.Object $r5;
        org.apache.catalina.deploy.ContextEnvironment $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        r2 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r6 = (org.apache.catalina.deploy.ContextEnvironment) $r5;
        exitmonitor r2;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r7;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextEnvironment[] findEnvironments()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.HashMap r1, $r3, $r4, $r5;
        org.apache.catalina.deploy.ContextEnvironment[] r2, $r8;
        int $i0;
        java.util.Collection $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();
        r2 = newarray (org.apache.catalina.deploy.ContextEnvironment)[$i0];
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r2);
        $r8 = (org.apache.catalina.deploy.ContextEnvironment[]) $r7;
        exitmonitor r1;

     label1:
        return $r8;

     label2:
        $r9 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r9;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextLocalEjb findLocalEjb(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        java.util.HashMap r2, $r3, $r4;
        java.lang.Object $r5;
        org.apache.catalina.deploy.ContextLocalEjb $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap localEjbs>;
        r2 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap localEjbs>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r6 = (org.apache.catalina.deploy.ContextLocalEjb) $r5;
        exitmonitor r2;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r7;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextLocalEjb[] findLocalEjbs()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.HashMap r1, $r3, $r4, $r5;
        org.apache.catalina.deploy.ContextLocalEjb[] r2, $r8;
        int $i0;
        java.util.Collection $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap localEjbs>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap localEjbs>;
        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();
        r2 = newarray (org.apache.catalina.deploy.ContextLocalEjb)[$i0];
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap localEjbs>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r2);
        $r8 = (org.apache.catalina.deploy.ContextLocalEjb[]) $r7;
        exitmonitor r1;

     label1:
        return $r8;

     label2:
        $r9 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r9;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.MessageDestinationRef findMessageDestinationRef(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        java.util.HashMap r2, $r3, $r4;
        java.lang.Object $r5;
        org.apache.catalina.deploy.MessageDestinationRef $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap mdrs>;
        r2 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap mdrs>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r6 = (org.apache.catalina.deploy.MessageDestinationRef) $r5;
        exitmonitor r2;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r7;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.MessageDestinationRef[] findMessageDestinationRefs()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.HashMap r1, $r3, $r4, $r5;
        org.apache.catalina.deploy.MessageDestinationRef[] r2, $r8;
        int $i0;
        java.util.Collection $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap mdrs>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap mdrs>;
        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();
        r2 = newarray (org.apache.catalina.deploy.MessageDestinationRef)[$i0];
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap mdrs>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r2);
        $r8 = (org.apache.catalina.deploy.MessageDestinationRef[]) $r7;
        exitmonitor r1;

     label1:
        return $r8;

     label2:
        $r9 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r9;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextResource findResource(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        java.util.HashMap r2, $r3, $r4;
        java.lang.Object $r5;
        org.apache.catalina.deploy.ContextResource $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        r2 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r6 = (org.apache.catalina.deploy.ContextResource) $r5;
        exitmonitor r2;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r7;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextResourceLink findResourceLink(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        java.util.HashMap r2, $r3, $r4;
        java.lang.Object $r5;
        org.apache.catalina.deploy.ContextResourceLink $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        r2 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r6 = (org.apache.catalina.deploy.ContextResourceLink) $r5;
        exitmonitor r2;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r7;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextResourceLink[] findResourceLinks()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.HashMap r1, $r3, $r4, $r5;
        org.apache.catalina.deploy.ContextResourceLink[] r2, $r8;
        int $i0;
        java.util.Collection $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();
        r2 = newarray (org.apache.catalina.deploy.ContextResourceLink)[$i0];
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r2);
        $r8 = (org.apache.catalina.deploy.ContextResourceLink[]) $r7;
        exitmonitor r1;

     label1:
        return $r8;

     label2:
        $r9 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r9;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextResource[] findResources()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.HashMap r1, $r3, $r4, $r5;
        org.apache.catalina.deploy.ContextResource[] r2, $r8;
        int $i0;
        java.util.Collection $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();
        r2 = newarray (org.apache.catalina.deploy.ContextResource)[$i0];
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r2);
        $r8 = (org.apache.catalina.deploy.ContextResource[]) $r7;
        exitmonitor r1;

     label1:
        return $r8;

     label2:
        $r9 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r9;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextResourceEnvRef findResourceEnvRef(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        java.util.HashMap r2, $r3, $r4;
        java.lang.Object $r5;
        org.apache.catalina.deploy.ContextResourceEnvRef $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceEnvRefs>;
        r2 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceEnvRefs>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r6 = (org.apache.catalina.deploy.ContextResourceEnvRef) $r5;
        exitmonitor r2;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r7;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextResourceEnvRef[] findResourceEnvRefs()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.HashMap r1, $r3, $r4, $r5;
        org.apache.catalina.deploy.ContextResourceEnvRef[] r2, $r8;
        int $i0;
        java.util.Collection $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceEnvRefs>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceEnvRefs>;
        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();
        r2 = newarray (org.apache.catalina.deploy.ContextResourceEnvRef)[$i0];
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceEnvRefs>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r2);
        $r8 = (org.apache.catalina.deploy.ContextResourceEnvRef[]) $r7;
        exitmonitor r1;

     label1:
        return $r8;

     label2:
        $r9 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r9;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextService findService(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        java.util.HashMap r2, $r3, $r4;
        java.lang.Object $r5;
        org.apache.catalina.deploy.ContextService $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap services>;
        r2 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap services>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r6 = (org.apache.catalina.deploy.ContextService) $r5;
        exitmonitor r2;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r7;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public org.apache.catalina.deploy.ContextService[] findServices()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.HashMap r1, $r3, $r4, $r5;
        org.apache.catalina.deploy.ContextService[] r2, $r8;
        int $i0;
        java.util.Collection $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap services>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap services>;
        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();
        r2 = newarray (org.apache.catalina.deploy.ContextService)[$i0];
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap services>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();
        $r7 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r2);
        $r8 = (org.apache.catalina.deploy.ContextService[]) $r7;
        exitmonitor r1;

     label1:
        return $r8;

     label2:
        $r9 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r9;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean exists(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        return $z0;
    }

    public void removeEjb(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        null_type n0;
        java.util.HashMap r2, $r4, $r5;
        java.util.Set $r3;
        java.lang.Object $r6;
        org.apache.catalina.deploy.ContextEjb r7;
        java.lang.Throwable $r8;
        java.beans.PropertyChangeSupport $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);
        n0 = null;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap ejbs>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap ejbs>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        r7 = (org.apache.catalina.deploy.ContextEjb) $r6;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r8;

     label5:
        if r7 == null goto label6;

        $r9 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r9.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("ejb", r7, null);
        virtualinvoke r7.<org.apache.catalina.deploy.ContextEjb: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(null);

     label6:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void removeEnvironment(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1, $r15, $r16;
        null_type n0;
        java.util.HashMap r2, $r4, $r5;
        java.util.Set $r3;
        java.lang.Object $r6;
        org.apache.catalina.deploy.ContextEnvironment r7;
        java.lang.Throwable $r8;
        java.beans.PropertyChangeSupport $r9;
        boolean $z1;
        java.lang.Exception $r10, r11;
        org.apache.juli.logging.Log $r12;
        org.apache.tomcat.util.res.StringManager $r13;
        java.lang.Object[] $r14;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);
        n0 = null;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        r7 = (org.apache.catalina.deploy.ContextEnvironment) $r6;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r8;

     label5:
        if r7 == null goto label10;

        $r9 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r9.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("environment", r7, null);
        $z1 = r0.<org.apache.catalina.deploy.NamingResources: boolean resourceRequireExplicitRegistration>;
        if $z1 == 0 goto label9;

     label6:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: void destroyMBean(org.apache.catalina.deploy.ContextEnvironment)>(r7);

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r13 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = newarray (java.lang.Object)[1];
        $r15 = virtualinvoke r7.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        $r14[0] = $r15;
        $r16 = virtualinvoke $r13.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanDestroyFail", $r14);
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r16, r11);

     label9:
        virtualinvoke r7.<org.apache.catalina.deploy.ContextEnvironment: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(null);

     label10:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public void removeLocalEjb(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        null_type n0;
        java.util.HashMap r2, $r4, $r5;
        java.util.Set $r3;
        java.lang.Object $r6;
        org.apache.catalina.deploy.ContextLocalEjb r7;
        java.lang.Throwable $r8;
        java.beans.PropertyChangeSupport $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);
        n0 = null;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap localEjbs>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap localEjbs>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        r7 = (org.apache.catalina.deploy.ContextLocalEjb) $r6;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r8;

     label5:
        if r7 == null goto label6;

        $r9 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r9.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("localEjb", r7, null);
        virtualinvoke r7.<org.apache.catalina.deploy.ContextLocalEjb: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(null);

     label6:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void removeMessageDestinationRef(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        null_type n0;
        java.util.HashMap r2, $r4, $r5;
        java.util.Set $r3;
        java.lang.Object $r6;
        org.apache.catalina.deploy.MessageDestinationRef r7;
        java.lang.Throwable $r8;
        java.beans.PropertyChangeSupport $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);
        n0 = null;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap mdrs>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap mdrs>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        r7 = (org.apache.catalina.deploy.MessageDestinationRef) $r6;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r8;

     label5:
        if r7 == null goto label6;

        $r9 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r9.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("messageDestinationRef", r7, null);
        virtualinvoke r7.<org.apache.catalina.deploy.MessageDestinationRef: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(null);

     label6:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.beans.PropertyChangeListener r1;
        java.beans.PropertyChangeSupport $r2;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.beans.PropertyChangeListener;
        $r2 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);
        return;
    }

    public void removeResource(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1, $r15, $r16;
        null_type n0;
        java.util.HashMap r2, $r4, $r5;
        java.util.Set $r3;
        java.lang.Object $r6;
        org.apache.catalina.deploy.ContextResource r7;
        java.lang.Throwable $r8;
        java.beans.PropertyChangeSupport $r9;
        boolean $z1;
        java.lang.Exception $r10, r11;
        org.apache.juli.logging.Log $r12;
        org.apache.tomcat.util.res.StringManager $r13;
        java.lang.Object[] $r14;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);
        n0 = null;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        r7 = (org.apache.catalina.deploy.ContextResource) $r6;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r8;

     label5:
        if r7 == null goto label10;

        $r9 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r9.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", r7, null);
        $z1 = r0.<org.apache.catalina.deploy.NamingResources: boolean resourceRequireExplicitRegistration>;
        if $z1 == 0 goto label9;

     label6:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: void destroyMBean(org.apache.catalina.deploy.ContextResource)>(r7);

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r13 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = newarray (java.lang.Object)[1];
        $r15 = virtualinvoke r7.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        $r14[0] = $r15;
        $r16 = virtualinvoke $r13.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanDestroyFail", $r14);
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r16, r11);

     label9:
        virtualinvoke r7.<org.apache.catalina.deploy.ContextResource: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(null);

     label10:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public void removeResourceEnvRef(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        null_type n0;
        java.util.HashMap r2, $r4, $r5;
        java.util.Set $r3;
        java.lang.Object $r6;
        org.apache.catalina.deploy.ContextResourceEnvRef r7;
        java.lang.Throwable $r8;
        java.beans.PropertyChangeSupport $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);
        n0 = null;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceEnvRefs>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceEnvRefs>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        r7 = (org.apache.catalina.deploy.ContextResourceEnvRef) $r6;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r8;

     label5:
        if r7 == null goto label6;

        $r9 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r9.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceEnvRef", r7, null);
        virtualinvoke r7.<org.apache.catalina.deploy.ContextResourceEnvRef: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(null);

     label6:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void removeResourceLink(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1, $r15, $r16;
        null_type n0;
        java.util.HashMap r2, $r4, $r5;
        java.util.Set $r3;
        java.lang.Object $r6;
        org.apache.catalina.deploy.ContextResourceLink r7;
        java.lang.Throwable $r8;
        java.beans.PropertyChangeSupport $r9;
        boolean $z1;
        java.lang.Exception $r10, r11;
        org.apache.juli.logging.Log $r12;
        org.apache.tomcat.util.res.StringManager $r13;
        java.lang.Object[] $r14;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);
        n0 = null;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        r7 = (org.apache.catalina.deploy.ContextResourceLink) $r6;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r8;

     label5:
        if r7 == null goto label10;

        $r9 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r9.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceLink", r7, null);
        $z1 = r0.<org.apache.catalina.deploy.NamingResources: boolean resourceRequireExplicitRegistration>;
        if $z1 == 0 goto label9;

     label6:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: void destroyMBean(org.apache.catalina.deploy.ContextResourceLink)>(r7);

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r13 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = newarray (java.lang.Object)[1];
        $r15 = virtualinvoke r7.<org.apache.catalina.deploy.ContextResourceLink: java.lang.String getName()>();
        $r14[0] = $r15;
        $r16 = virtualinvoke $r13.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanDestroyFail", $r14);
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r16, r11);

     label9:
        virtualinvoke r7.<org.apache.catalina.deploy.ContextResourceLink: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(null);

     label10:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public void removeService(java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.String r1;
        null_type n0;
        java.util.HashMap r2, $r4, $r5;
        java.util.Set $r3;
        java.lang.Object $r6;
        org.apache.catalina.deploy.ContextService r7;
        java.lang.Throwable $r8;
        java.beans.PropertyChangeSupport $r9;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.deploy.NamingResources: java.util.Set entries>;
        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);
        n0 = null;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap services>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap services>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);
        r7 = (org.apache.catalina.deploy.ContextService) $r6;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r8;

     label5:
        if r7 == null goto label6;

        $r9 = r0.<org.apache.catalina.deploy.NamingResources: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r9.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("service", r7, null);
        virtualinvoke r7.<org.apache.catalina.deploy.ContextService: void setNamingResources(org.apache.catalina.deploy.NamingResources)>(null);

     label6:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    protected void initInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.Iterator r1, r16, r29;
        org.apache.catalina.deploy.ContextResource r2;
        java.lang.Exception r3, $r8, $r20, r21, $r33, r34;
        java.util.HashMap $r4, $r14, $r27;
        java.util.Collection $r5, $r15, $r28;
        java.lang.Object $r6, $r17, $r30;
        org.apache.juli.logging.Log $r9, $r22, $r35;
        org.apache.tomcat.util.res.StringManager $r10, $r23, $r36;
        java.lang.Object[] $r11, $r24, $r37;
        java.lang.String $r12, $r13, $r25, $r26, $r38, $r39;
        boolean $z0, $z1, $z2;
        org.apache.catalina.deploy.ContextEnvironment r18;
        org.apache.catalina.deploy.ContextResourceLink r31;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        specialinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: void initInternal()>();
        r0.<org.apache.catalina.deploy.NamingResources: boolean resourceRequireExplicitRegistration> = 1;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();
        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();
        goto label4;

     label0:
        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.apache.catalina.deploy.ContextResource) $r6;

     label1:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResource)>(r2);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;
        r3 = $r8;
        $r9 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r10 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[1];
        $r12 = virtualinvoke r2.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        $r11[0] = $r12;
        $r13 = virtualinvoke $r10.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanCreateFail", $r11);
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r13, r3);

     label4:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        $r14 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        $r15 = virtualinvoke $r14.<java.util.HashMap: java.util.Collection values()>();
        r16 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();
        goto label9;

     label5:
        $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();
        r18 = (org.apache.catalina.deploy.ContextEnvironment) $r17;

     label6:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextEnvironment)>(r18);

     label7:
        goto label9;

     label8:
        $r20 := @caughtexception;
        r21 = $r20;
        $r22 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r23 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r24 = newarray (java.lang.Object)[1];
        $r25 = virtualinvoke r18.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        $r24[0] = $r25;
        $r26 = virtualinvoke $r23.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanCreateFail", $r24);
        interfaceinvoke $r22.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r26, r21);

     label9:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label5;

        $r27 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        $r28 = virtualinvoke $r27.<java.util.HashMap: java.util.Collection values()>();
        r29 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();
        goto label14;

     label10:
        $r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();
        r31 = (org.apache.catalina.deploy.ContextResourceLink) $r30;

     label11:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResourceLink)>(r31);

     label12:
        goto label14;

     label13:
        $r33 := @caughtexception;
        r34 = $r33;
        $r35 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r36 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r37 = newarray (java.lang.Object)[1];
        $r38 = virtualinvoke r31.<org.apache.catalina.deploy.ContextResourceLink: java.lang.String getName()>();
        $r37[0] = $r38;
        $r39 = virtualinvoke $r36.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanCreateFail", $r37);
        interfaceinvoke $r35.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r39, r34);

     label14:
        $z2 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label10;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label6 to label7 with label8;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    protected void startInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.LifecycleState $r1;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        virtualinvoke r0.<org.apache.catalina.deploy.NamingResources: void fireLifecycleEvent(java.lang.String,java.lang.Object)>("configure_start", null);
        $r1 = <org.apache.catalina.LifecycleState: org.apache.catalina.LifecycleState STARTING>;
        virtualinvoke r0.<org.apache.catalina.deploy.NamingResources: void setState(org.apache.catalina.LifecycleState)>($r1);
        return;
    }

    protected void stopInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.LifecycleState $r1;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        specialinvoke r0.<org.apache.catalina.deploy.NamingResources: void cleanUp()>();
        $r1 = <org.apache.catalina.LifecycleState: org.apache.catalina.LifecycleState STOPPING>;
        virtualinvoke r0.<org.apache.catalina.deploy.NamingResources: void setState(org.apache.catalina.LifecycleState)>($r1);
        virtualinvoke r0.<org.apache.catalina.deploy.NamingResources: void fireLifecycleEvent(java.lang.String,java.lang.Object)>("configure_stop", null);
        return;
    }

    private void cleanUp()
    {
        org.apache.catalina.deploy.NamingResources r0;
        javax.naming.Context r1, r12;
        javax.naming.NamingException r2, r7, $r14, $r24;
        java.util.Iterator r3;
        java.lang.String r4, r5, $r19, $r28, $r30;
        java.lang.Object r6, $r9, $r10, $r13, $r18, $r22, $r29;
        java.util.HashMap $r8, $r20;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.catalina.Server $r11;
        org.apache.juli.logging.Log $r15, $r25;
        org.apache.tomcat.util.res.StringManager $r16, $r26;
        java.lang.Object[] $r17, $r27;
        java.util.Collection $r21;
        org.apache.catalina.deploy.ContextResource r23;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        $r8 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        $i0 = virtualinvoke $r8.<java.util.HashMap: int size()>();
        if $i0 != 0 goto label0;

        return;

     label0:
        $r9 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $z0 = $r9 instanceof org.apache.catalina.Server;
        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $r11 = (org.apache.catalina.Server) $r10;
        r1 = interfaceinvoke $r11.<org.apache.catalina.Server: javax.naming.Context getGlobalNamingContext()>();
        goto label4;

     label1:
        r12 = staticinvoke <org.apache.naming.ContextBindings: javax.naming.Context getClassLoader()>();
        $r13 = interfaceinvoke r12.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>("comp/env");
        r1 = (javax.naming.Context) $r13;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;
        r2 = $r14;
        $r15 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r16 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r17 = newarray (java.lang.Object)[1];
        $r18 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $r17[0] = $r18;
        $r19 = virtualinvoke $r16.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.cleanupNoContext", $r17);
        interfaceinvoke $r15.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r19, r2);
        return;

     label4:
        $r20 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        $r21 = virtualinvoke $r20.<java.util.HashMap: java.util.Collection values()>();
        r3 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();
        goto label10;

     label5:
        $r22 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r23 = (org.apache.catalina.deploy.ContextResource) $r22;
        $z1 = virtualinvoke r23.<org.apache.catalina.deploy.ContextResource: boolean getSingleton()>();
        if $z1 == 0 goto label10;

        r4 = virtualinvoke r23.<org.apache.catalina.deploy.ContextResource: java.lang.String getCloseMethod()>();
        if r4 == null goto label10;

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i1 <= 0 goto label10;

        r5 = virtualinvoke r23.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();

     label6:
        r6 = interfaceinvoke r1.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>(r5);

     label7:
        goto label9;

     label8:
        $r24 := @caughtexception;
        r7 = $r24;
        $r25 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r26 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r27 = newarray (java.lang.Object)[2];
        $r28 = virtualinvoke r23.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        $r27[0] = $r28;
        $r29 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $r27[1] = $r29;
        $r30 = virtualinvoke $r26.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.cleanupNoResource", $r27);
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r30, r7);
        goto label10;

     label9:
        specialinvoke r0.<org.apache.catalina.deploy.NamingResources: void cleanUp(java.lang.Object,java.lang.String,java.lang.String)>(r6, r5, r4);

     label10:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label5;

        return;

        catch javax.naming.NamingException from label0 to label2 with label3;
        catch javax.naming.NamingException from label6 to label7 with label8;
    }

    private void cleanUp(java.lang.Object, java.lang.String, java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.Object r1, $r12, $r19, $r27, $r34, $r41;
        java.lang.String r2, r3, $r13, $r20, $r28, $r35, $r42;
        null_type n0;
        java.lang.SecurityException r4, $r8;
        java.lang.Throwable r5;
        java.lang.Class $r6;
        java.lang.reflect.Method r7;
        org.apache.juli.logging.Log $r9, $r16, $r24, $r31, $r38;
        org.apache.tomcat.util.res.StringManager $r10, $r17, $r25, $r32, $r39;
        java.lang.Object[] $r11, $r18, $r26, $r33, $r40;
        java.lang.NoSuchMethodException $r14, r15;
        java.lang.IllegalArgumentException $r22, r23;
        java.lang.IllegalAccessException $r29, r30;
        java.lang.reflect.InvocationTargetException $r36, r37;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        n0 = null;

     label0:
        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r3, null);

     label1:
        goto label4;

     label2:
        $r8 := @caughtexception;
        r4 = $r8;
        $r9 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r10 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[3];
        $r11[0] = r3;
        $r11[1] = r2;
        $r12 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $r11[2] = $r12;
        $r13 = virtualinvoke $r10.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.cleanupCloseSecurity", $r11);
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r13);
        return;

     label3:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r17 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r18 = newarray (java.lang.Object)[3];
        $r18[0] = r2;
        $r19 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $r18[1] = $r19;
        $r18[2] = r3;
        $r20 = virtualinvoke $r17.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.cleanupNoClose", $r18);
        interfaceinvoke $r16.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r20);
        return;

     label4:
        virtualinvoke r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, null);

     label5:
        goto label9;

     label6:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r25 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r26 = newarray (java.lang.Object)[3];
        $r26[0] = r3;
        $r26[1] = r2;
        $r27 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $r26[2] = $r27;
        $r28 = virtualinvoke $r25.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.cleanupCloseFailed", $r26);
        interfaceinvoke $r24.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r28, r23);
        goto label9;

     label7:
        $r29 := @caughtexception;
        r30 = $r29;
        $r31 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r32 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r33 = newarray (java.lang.Object)[3];
        $r33[0] = r3;
        $r33[1] = r2;
        $r34 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $r33[2] = $r34;
        $r35 = virtualinvoke $r32.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.cleanupCloseFailed", $r33);
        interfaceinvoke $r31.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r35, r30);
        goto label9;

     label8:
        $r36 := @caughtexception;
        r37 = $r36;
        r5 = staticinvoke <org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>(r37);
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r5);
        $r38 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r39 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r40 = newarray (java.lang.Object)[3];
        $r40[0] = r3;
        $r40[1] = r2;
        $r41 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $r40[2] = $r41;
        $r42 = virtualinvoke $r39.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.cleanupCloseFailed", $r40);
        interfaceinvoke $r38.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r42, r5);

     label9:
        return;

        catch java.lang.SecurityException from label0 to label1 with label2;
        catch java.lang.NoSuchMethodException from label0 to label1 with label3;
        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
        catch java.lang.IllegalAccessException from label4 to label5 with label7;
        catch java.lang.reflect.InvocationTargetException from label4 to label5 with label8;
    }

    protected void destroyInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.util.Iterator r1, r15, r27;
        org.apache.catalina.deploy.ContextResourceLink r2;
        java.lang.Exception r3, $r7, $r18, r19, $r30, r31;
        java.util.HashMap $r4, $r13, $r25;
        java.util.Collection $r5, $r14, $r26;
        java.lang.Object $r6, $r16, $r28;
        org.apache.juli.logging.Log $r8, $r20, $r32;
        org.apache.tomcat.util.res.StringManager $r9, $r21, $r33;
        java.lang.Object[] $r10, $r22, $r34;
        java.lang.String $r11, $r12, $r23, $r24, $r35, $r36;
        boolean $z0, $z1, $z2;
        org.apache.catalina.deploy.ContextEnvironment r17;
        org.apache.catalina.deploy.ContextResource r29;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r0.<org.apache.catalina.deploy.NamingResources: boolean resourceRequireExplicitRegistration> = 0;
        $r4 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resourceLinks>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();
        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();
        goto label4;

     label0:
        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.apache.catalina.deploy.ContextResourceLink) $r6;

     label1:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: void destroyMBean(org.apache.catalina.deploy.ContextResourceLink)>(r2);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;
        $r8 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r9 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = newarray (java.lang.Object)[1];
        $r11 = virtualinvoke r2.<org.apache.catalina.deploy.ContextResourceLink: java.lang.String getName()>();
        $r10[0] = $r11;
        $r12 = virtualinvoke $r9.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanDestroyFail", $r10);
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r12, r3);

     label4:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        $r13 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap envs>;
        $r14 = virtualinvoke $r13.<java.util.HashMap: java.util.Collection values()>();
        r15 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();
        goto label9;

     label5:
        $r16 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();
        r17 = (org.apache.catalina.deploy.ContextEnvironment) $r16;

     label6:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: void destroyMBean(org.apache.catalina.deploy.ContextEnvironment)>(r17);

     label7:
        goto label9;

     label8:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r21 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r22 = newarray (java.lang.Object)[1];
        $r23 = virtualinvoke r17.<org.apache.catalina.deploy.ContextEnvironment: java.lang.String getName()>();
        $r22[0] = $r23;
        $r24 = virtualinvoke $r21.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanDestroyFail", $r22);
        interfaceinvoke $r20.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r24, r19);

     label9:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label5;

        $r25 = r0.<org.apache.catalina.deploy.NamingResources: java.util.HashMap resources>;
        $r26 = virtualinvoke $r25.<java.util.HashMap: java.util.Collection values()>();
        r27 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>();
        goto label14;

     label10:
        $r28 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();
        r29 = (org.apache.catalina.deploy.ContextResource) $r28;

     label11:
        staticinvoke <org.apache.catalina.mbeans.MBeanUtils: void destroyMBean(org.apache.catalina.deploy.ContextResource)>(r29);

     label12:
        goto label14;

     label13:
        $r30 := @caughtexception;
        r31 = $r30;
        $r32 = <org.apache.catalina.deploy.NamingResources: org.apache.juli.logging.Log log>;
        $r33 = <org.apache.catalina.deploy.NamingResources: org.apache.tomcat.util.res.StringManager sm>;
        $r34 = newarray (java.lang.Object)[1];
        $r35 = virtualinvoke r29.<org.apache.catalina.deploy.ContextResource: java.lang.String getName()>();
        $r34[0] = $r35;
        $r36 = virtualinvoke $r33.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("namingResources.mbeanDestroyFail", $r34);
        interfaceinvoke $r32.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r36, r31);

     label14:
        $z2 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label10;

        specialinvoke r0.<org.apache.catalina.util.LifecycleMBeanBase: void destroyInternal()>();
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label6 to label7 with label8;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    protected java.lang.String getDomainInternal()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.Object r1;
        boolean $z0;
        org.apache.catalina.util.LifecycleMBeanBase $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 = virtualinvoke r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object getContainer()>();
        $z0 = r1 instanceof org.apache.catalina.util.LifecycleMBeanBase;
        if $z0 == 0 goto label0;

        $r2 = (org.apache.catalina.util.LifecycleMBeanBase) r1;
        $r3 = virtualinvoke $r2.<org.apache.catalina.util.LifecycleMBeanBase: java.lang.String getDomain()>();
        return $r3;

     label0:
        return null;
    }

    protected java.lang.String getObjectNameKeyProperties()
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r5;
        org.apache.catalina.Container $r3;
        java.lang.String $r4, $r6;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 = virtualinvoke r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object getContainer()>();
        $z0 = r1 instanceof org.apache.catalina.Container;
        if $z0 == 0 goto label0;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("type=NamingResources");
        $r3 = (org.apache.catalina.Container) r1;
        $r4 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String getContainerKeyProperties(org.apache.catalina.Container)>($r3);
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;

     label0:
        return "type=NamingResources";
    }

    private boolean checkResourceType(org.apache.catalina.deploy.ResourceBase)
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.deploy.ResourceBase r1;
        org.apache.catalina.Context r2;
        java.lang.String r3, $r10;
        java.lang.Class r4, r5;
        java.lang.Object $r6, $r9;
        boolean $z0;
        java.util.List $r7, $r8;
        int $i0;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.deploy.ResourceBase;
        $r6 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        $z0 = $r6 instanceof org.apache.catalina.Context;
        if $z0 != 0 goto label0;

        return 1;

     label0:
        $r7 = virtualinvoke r1.<org.apache.catalina.deploy.ResourceBase: java.util.List getInjectionTargets()>();
        if $r7 == null goto label1;

        $r8 = virtualinvoke r1.<org.apache.catalina.deploy.ResourceBase: java.util.List getInjectionTargets()>();
        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();
        if $i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        $r9 = r0.<org.apache.catalina.deploy.NamingResources: java.lang.Object container>;
        r2 = (org.apache.catalina.Context) $r9;
        r3 = virtualinvoke r1.<org.apache.catalina.deploy.ResourceBase: java.lang.String getType()>();
        r4 = null;
        if r3 == null goto label3;

        r4 = staticinvoke <org.apache.catalina.util.Introspection: java.lang.Class loadClass(org.apache.catalina.Container,java.lang.String)>(r2, r3);
        if r4 != null goto label3;

        return 1;

     label3:
        r5 = specialinvoke r0.<org.apache.catalina.deploy.NamingResources: java.lang.Class getCompatibleType(org.apache.catalina.Context,org.apache.catalina.deploy.ResourceBase,java.lang.Class)>(r2, r1, r4);
        if r5 != null goto label4;

        return 0;

     label4:
        $r10 = virtualinvoke r5.<java.lang.Class: java.lang.String getCanonicalName()>();
        virtualinvoke r1.<org.apache.catalina.deploy.ResourceBase: void setType(java.lang.String)>($r10);
        return 1;
    }

    private java.lang.Class getCompatibleType(org.apache.catalina.Context, org.apache.catalina.deploy.ResourceBase, java.lang.Class)
    {
        org.apache.catalina.deploy.NamingResources r0;
        org.apache.catalina.Context r1;
        org.apache.catalina.deploy.ResourceBase r2;
        java.lang.Class r3, r4, r7, r9, r13;
        java.util.Iterator r5;
        org.apache.catalina.deploy.InjectionTarget r6;
        java.lang.String r8, $r12;
        java.util.List $r10;
        java.lang.Object $r11;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: org.apache.catalina.Context;
        r2 := @parameter1: org.apache.catalina.deploy.ResourceBase;
        r3 := @parameter2: java.lang.Class;
        r4 = null;
        $r10 = virtualinvoke r2.<org.apache.catalina.deploy.ResourceBase: java.util.List getInjectionTargets()>();
        r5 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();
        goto label8;

     label0:
        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (org.apache.catalina.deploy.InjectionTarget) $r11;
        $r12 = virtualinvoke r6.<org.apache.catalina.deploy.InjectionTarget: java.lang.String getTargetClass()>();
        r7 = staticinvoke <org.apache.catalina.util.Introspection: java.lang.Class loadClass(org.apache.catalina.Container,java.lang.String)>(r1, $r12);
        if r7 != null goto label1;

        goto label8;

     label1:
        r8 = virtualinvoke r6.<org.apache.catalina.deploy.InjectionTarget: java.lang.String getTargetName()>();
        r9 = specialinvoke r0.<org.apache.catalina.deploy.NamingResources: java.lang.Class getSetterType(java.lang.Class,java.lang.String)>(r7, r8);
        if r9 != null goto label2;

        r9 = specialinvoke r0.<org.apache.catalina.deploy.NamingResources: java.lang.Class getFieldType(java.lang.Class,java.lang.String)>(r7, r8);

     label2:
        if r9 != null goto label3;

        goto label8;

     label3:
        r13 = staticinvoke <org.apache.catalina.util.Introspection: java.lang.Class convertPrimitiveType(java.lang.Class)>(r9);
        if r3 != null goto label6;

        if r4 != null goto label4;

        r4 = r13;
        goto label8;

     label4:
        $z0 = virtualinvoke r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);
        if $z0 != 0 goto label8;

        $z1 = virtualinvoke r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r13);
        if $z1 == 0 goto label5;

        r4 = r13;
        goto label8;

     label5:
        return null;

     label6:
        $z2 = virtualinvoke r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);
        if $z2 == 0 goto label7;

        r4 = r3;
        goto label8;

     label7:
        return null;

     label8:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label0;

        return r4;
    }

    private java.lang.Class getSetterType(java.lang.Class, java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.Class r1, $r9;
        java.lang.String r2, $r7;
        java.lang.reflect.Method[] r3, r4;
        int i0, i1, $i2;
        java.lang.reflect.Method r5;
        boolean $z0, $z1;
        java.lang.Class[] $r8;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.String;
        r3 = staticinvoke <org.apache.catalina.util.Introspection: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>(r1);
        if r3 == null goto label3;

        $i2 = lengthof r3;
        if $i2 <= 0 goto label3;

        r4 = r3;
        i0 = lengthof r3;
        i1 = 0;
        goto label2;

     label0:
        r5 = r4[i1];
        $z0 = staticinvoke <org.apache.catalina.util.Introspection: boolean isValidSetter(java.lang.reflect.Method)>(r5);
        if $z0 == 0 goto label1;

        $r7 = staticinvoke <org.apache.catalina.util.Introspection: java.lang.String getPropertyName(java.lang.reflect.Method)>(r5);
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z1 == 0 goto label1;

        $r8 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        $r9 = $r8[0];
        return $r9;

     label1:
        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label0;

     label3:
        return null;
    }

    private java.lang.Class getFieldType(java.lang.Class, java.lang.String)
    {
        org.apache.catalina.deploy.NamingResources r0;
        java.lang.Class r1, $r8;
        java.lang.String r2, $r7;
        java.lang.reflect.Field[] r3, r4;
        int i0, i1, $i2;
        java.lang.reflect.Field r5;
        boolean $z0;

        r0 := @this: org.apache.catalina.deploy.NamingResources;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.String;
        r3 = staticinvoke <org.apache.catalina.util.Introspection: java.lang.reflect.Field[] getDeclaredFields(java.lang.Class)>(r1);
        if r3 == null goto label3;

        $i2 = lengthof r3;
        if $i2 <= 0 goto label3;

        r4 = r3;
        i0 = lengthof r3;
        i1 = 0;
        goto label2;

     label0:
        r5 = r4[i1];
        $r7 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.String getName()>();
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.Class getType()>();
        return $r8;

     label1:
        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label0;

     label3:
        return null;
    }
}
