public class java.util.logging.Level extends java.lang.Object implements java.io.Serializable
{
    private static final java.lang.String defaultBundle;
    private final java.lang.String name;
    private final int value;
    private final java.lang.String resourceBundleName;
    private transient java.lang.String localizedLevelName;
    private transient java.util.Locale cachedLocale;
    public static final java.util.logging.Level OFF;
    public static final java.util.logging.Level SEVERE;
    public static final java.util.logging.Level WARNING;
    public static final java.util.logging.Level INFO;
    public static final java.util.logging.Level CONFIG;
    public static final java.util.logging.Level FINE;
    public static final java.util.logging.Level FINER;
    public static final java.util.logging.Level FINEST;
    public static final java.util.logging.Level ALL;
    private static final long serialVersionUID;

    protected void <init>(java.lang.String, int)
    {
        java.util.logging.Level r0;
        java.lang.String r1;
        int i0;

        r0 := @this: java.util.logging.Level;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>(r1, i0, null);
        return;
    }

    protected void <init>(java.lang.String, int, java.lang.String)
    {
        java.util.logging.Level r0;
        java.lang.String r1, r2, $r5;
        int i0;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.logging.Level;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label0:
        r0.<java.util.logging.Level: java.lang.String name> = r1;
        r0.<java.util.logging.Level: int value> = i0;
        r0.<java.util.logging.Level: java.lang.String resourceBundleName> = r2;
        if r2 != null goto label1;

        $r5 = r1;
        goto label2;

     label1:
        $r5 = null;

     label2:
        r0.<java.util.logging.Level: java.lang.String localizedLevelName> = $r5;
        r0.<java.util.logging.Level: java.util.Locale cachedLocale> = null;
        staticinvoke <java.util.logging.Level$KnownLevel: void add(java.util.logging.Level)>(r0);
        return;
    }

    public java.lang.String getResourceBundleName()
    {
        java.util.logging.Level r0;
        java.lang.String $r1;

        r0 := @this: java.util.logging.Level;
        $r1 = r0.<java.util.logging.Level: java.lang.String resourceBundleName>;
        return $r1;
    }

    public java.lang.String getName()
    {
        java.util.logging.Level r0;
        java.lang.String $r1;

        r0 := @this: java.util.logging.Level;
        $r1 = r0.<java.util.logging.Level: java.lang.String name>;
        return $r1;
    }

    public java.lang.String getLocalizedName()
    {
        java.util.logging.Level r0;
        java.lang.String $r1;

        r0 := @this: java.util.logging.Level;
        $r1 = virtualinvoke r0.<java.util.logging.Level: java.lang.String getLocalizedLevelName()>();
        return $r1;
    }

    final java.lang.String getLevelName()
    {
        java.util.logging.Level r0;
        java.lang.String $r1;

        r0 := @this: java.util.logging.Level;
        $r1 = r0.<java.util.logging.Level: java.lang.String name>;
        return $r1;
    }

    private java.lang.String computeLocalizedLevelName(java.util.Locale)
    {
        java.util.logging.Level r0;
        java.util.Locale r1, r4, $r5, r6, $r11, $r14, $r15;
        java.util.ResourceBundle r2;
        java.lang.String r3, $r7, $r8, $r9, $r10, $r12, $r13, $r16;
        boolean z0, $z1, $z2, $z3;

        r0 := @this: java.util.logging.Level;
        r1 := @parameter0: java.util.Locale;
        $r7 = r0.<java.util.logging.Level: java.lang.String resourceBundleName>;
        r2 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>($r7, r1);
        $r8 = r0.<java.util.logging.Level: java.lang.String name>;
        r3 = virtualinvoke r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>($r8);
        $r9 = "sun.util.logging.resources.logging";
        $r10 = r0.<java.util.logging.Level: java.lang.String resourceBundleName>;
        z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if z0 != 0 goto label0;

        return r3;

     label0:
        r4 = virtualinvoke r2.<java.util.ResourceBundle: java.util.Locale getLocale()>();
        $r11 = <java.util.Locale: java.util.Locale ROOT>;
        $z1 = virtualinvoke $r11.<java.util.Locale: boolean equals(java.lang.Object)>(r4);
        if $z1 != 0 goto label1;

        $r12 = r0.<java.util.logging.Level: java.lang.String name>;
        $r5 = <java.util.Locale: java.util.Locale ROOT>;
        $r13 = virtualinvoke r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r5);
        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);
        if $z2 == 0 goto label2;

     label1:
        $r14 = <java.util.Locale: java.util.Locale ROOT>;
        goto label3;

     label2:
        $r14 = r4;

     label3:
        r6 = $r14;
        $r15 = <java.util.Locale: java.util.Locale ROOT>;
        $z3 = virtualinvoke $r15.<java.util.Locale: boolean equals(java.lang.Object)>(r6);
        if $z3 == 0 goto label4;

        $r16 = r0.<java.util.logging.Level: java.lang.String name>;
        goto label5;

     label4:
        $r16 = virtualinvoke r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r6);

     label5:
        return $r16;
    }

    final java.lang.String getCachedLocalizedLevelName()
    {
        java.util.logging.Level r0;
        java.util.Locale $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: java.util.logging.Level;
        $r2 = r0.<java.util.logging.Level: java.lang.String localizedLevelName>;
        if $r2 == null goto label0;

        $r3 = r0.<java.util.logging.Level: java.util.Locale cachedLocale>;
        if $r3 == null goto label0;

        $r4 = r0.<java.util.logging.Level: java.util.Locale cachedLocale>;
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        $z0 = virtualinvoke $r4.<java.util.Locale: boolean equals(java.lang.Object)>($r1);
        if $z0 == 0 goto label0;

        $r5 = r0.<java.util.logging.Level: java.lang.String localizedLevelName>;
        return $r5;

     label0:
        $r6 = r0.<java.util.logging.Level: java.lang.String resourceBundleName>;
        if $r6 != null goto label1;

        $r7 = r0.<java.util.logging.Level: java.lang.String name>;
        return $r7;

     label1:
        return null;
    }

    final synchronized java.lang.String getLocalizedLevelName()
    {
        java.util.logging.Level r0;
        java.lang.String r1, $r4, $r6, $r7;
        java.util.Locale r2;
        java.lang.Exception r3, $r5;

        r0 := @this: java.util.logging.Level;
        r1 = virtualinvoke r0.<java.util.logging.Level: java.lang.String getCachedLocalizedLevelName()>();
        if r1 == null goto label0;

        return r1;

     label0:
        r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label1:
        $r4 = specialinvoke r0.<java.util.logging.Level: java.lang.String computeLocalizedLevelName(java.util.Locale)>(r2);
        r0.<java.util.logging.Level: java.lang.String localizedLevelName> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = r0.<java.util.logging.Level: java.lang.String name>;
        r0.<java.util.logging.Level: java.lang.String localizedLevelName> = $r6;

     label4:
        r0.<java.util.logging.Level: java.util.Locale cachedLocale> = r2;
        $r7 = r0.<java.util.logging.Level: java.lang.String localizedLevelName>;
        return $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static java.util.logging.Level findLevel(java.lang.String)
    {
        java.lang.String r0;
        java.util.logging.Level$KnownLevel r1, r5, r10;
        int i0;
        java.util.logging.Level r2, $r4, $r6, $r7, $r11;
        java.lang.NullPointerException $r3;
        java.lang.NumberFormatException $r8, r9;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label0:
        r1 = staticinvoke <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByName(java.lang.String)>(r0);
        if r1 == null goto label1;

        $r4 = r1.<java.util.logging.Level$KnownLevel: java.util.logging.Level mirroredLevel>;
        return $r4;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);
        r5 = staticinvoke <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>(i0);
        if r5 != null goto label2;

        $r6 = new java.util.logging.Level;
        specialinvoke $r6.<java.util.logging.Level: void <init>(java.lang.String,int)>(r0, i0);
        r2 = $r6;
        r5 = staticinvoke <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>(i0);

     label2:
        $r7 = r5.<java.util.logging.Level$KnownLevel: java.util.logging.Level mirroredLevel>;

     label3:
        return $r7;

     label4:
        $r8 := @caughtexception;
        r9 = $r8;
        r10 = staticinvoke <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>(r0);
        if r10 == null goto label5;

        $r11 = r10.<java.util.logging.Level$KnownLevel: java.util.logging.Level mirroredLevel>;
        return $r11;

     label5:
        return null;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }

    public final java.lang.String toString()
    {
        java.util.logging.Level r0;
        java.lang.String $r1;

        r0 := @this: java.util.logging.Level;
        $r1 = r0.<java.util.logging.Level: java.lang.String name>;
        return $r1;
    }

    public final int intValue()
    {
        java.util.logging.Level r0;
        int $i0;

        r0 := @this: java.util.logging.Level;
        $i0 = r0.<java.util.logging.Level: int value>;
        return $i0;
    }

    private java.lang.Object readResolve()
    {
        java.util.logging.Level r0, r2, $r3, $r4;
        java.util.logging.Level$KnownLevel r1;
        java.lang.String $r5, $r6;
        int $i0;

        r0 := @this: java.util.logging.Level;
        r1 = staticinvoke <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel matches(java.util.logging.Level)>(r0);
        if r1 == null goto label0;

        $r3 = r1.<java.util.logging.Level$KnownLevel: java.util.logging.Level levelObject>;
        return $r3;

     label0:
        $r4 = new java.util.logging.Level;
        $r5 = r0.<java.util.logging.Level: java.lang.String name>;
        $i0 = r0.<java.util.logging.Level: int value>;
        $r6 = r0.<java.util.logging.Level: java.lang.String resourceBundleName>;
        specialinvoke $r4.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>($r5, $i0, $r6);
        r2 = $r4;
        return r2;
    }

    public static synchronized java.util.logging.Level parse(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0, $r16;
        java.util.logging.Level$KnownLevel r1, r4, r9;
        int i0;
        java.util.logging.Level r2, $r3, $r5, $r6, $r10;
        java.lang.NumberFormatException $r7, r8;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;

        r0 := @parameter0: java.lang.String;
        virtualinvoke r0.<java.lang.String: int length()>();
        r1 = staticinvoke <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByName(java.lang.String)>(r0);
        if r1 == null goto label0;

        $r3 = r1.<java.util.logging.Level$KnownLevel: java.util.logging.Level levelObject>;
        return $r3;

     label0:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);
        r4 = staticinvoke <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>(i0);
        if r4 != null goto label1;

        $r5 = new java.util.logging.Level;
        specialinvoke $r5.<java.util.logging.Level: void <init>(java.lang.String,int)>(r0, i0);
        r2 = $r5;
        r4 = staticinvoke <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>(i0);

     label1:
        $r6 = r4.<java.util.logging.Level$KnownLevel: java.util.logging.Level levelObject>;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;
        r8 = $r7;
        r9 = staticinvoke <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedName(java.lang.String)>(r0);
        if r9 == null goto label4;

        $r10 = r9.<java.util.logging.Level$KnownLevel: java.util.logging.Level levelObject>;
        return $r10;

     label4:
        $r11 = new java.lang.IllegalArgumentException;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad level \"");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);
        throw $r11;

        catch java.lang.NumberFormatException from label0 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.logging.Level r0, r2;
        java.lang.Object r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Exception $r3, r4;

        r0 := @this: java.util.logging.Level;
        r1 := @parameter0: java.lang.Object;

     label0:
        r2 = (java.util.logging.Level) r1;
        $i0 = r2.<java.util.logging.Level: int value>;
        $i1 = r0.<java.util.logging.Level: int value>;
        if $i0 != $i1 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;
        r4 = $r3;
        return 0;

        catch java.lang.Exception from label0 to label2 with label3;
    }

    public int hashCode()
    {
        java.util.logging.Level r0;
        int $i0;

        r0 := @this: java.util.logging.Level;
        $i0 = r0.<java.util.logging.Level: int value>;
        return $i0;
    }

    static java.lang.String access$000(java.util.logging.Level)
    {
        java.util.logging.Level r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.logging.Level;
        $r1 = r0.<java.util.logging.Level: java.lang.String name>;
        return $r1;
    }

    static int access$100(java.util.logging.Level)
    {
        java.util.logging.Level r0;
        int $i0;

        r0 := @parameter0: java.util.logging.Level;
        $i0 = r0.<java.util.logging.Level: int value>;
        return $i0;
    }

    static java.lang.String access$200(java.util.logging.Level)
    {
        java.util.logging.Level r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.logging.Level;
        $r1 = r0.<java.util.logging.Level: java.lang.String resourceBundleName>;
        return $r1;
    }

    static void <clinit>()
    {
        java.util.logging.Level $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = new java.util.logging.Level;
        specialinvoke $r0.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>("OFF", 2147483647, "sun.util.logging.resources.logging");
        <java.util.logging.Level: java.util.logging.Level OFF> = $r0;
        $r1 = new java.util.logging.Level;
        specialinvoke $r1.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>("SEVERE", 1000, "sun.util.logging.resources.logging");
        <java.util.logging.Level: java.util.logging.Level SEVERE> = $r1;
        $r2 = new java.util.logging.Level;
        specialinvoke $r2.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>("WARNING", 900, "sun.util.logging.resources.logging");
        <java.util.logging.Level: java.util.logging.Level WARNING> = $r2;
        $r3 = new java.util.logging.Level;
        specialinvoke $r3.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>("INFO", 800, "sun.util.logging.resources.logging");
        <java.util.logging.Level: java.util.logging.Level INFO> = $r3;
        $r4 = new java.util.logging.Level;
        specialinvoke $r4.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>("CONFIG", 700, "sun.util.logging.resources.logging");
        <java.util.logging.Level: java.util.logging.Level CONFIG> = $r4;
        $r5 = new java.util.logging.Level;
        specialinvoke $r5.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>("FINE", 500, "sun.util.logging.resources.logging");
        <java.util.logging.Level: java.util.logging.Level FINE> = $r5;
        $r6 = new java.util.logging.Level;
        specialinvoke $r6.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>("FINER", 400, "sun.util.logging.resources.logging");
        <java.util.logging.Level: java.util.logging.Level FINER> = $r6;
        $r7 = new java.util.logging.Level;
        specialinvoke $r7.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>("FINEST", 300, "sun.util.logging.resources.logging");
        <java.util.logging.Level: java.util.logging.Level FINEST> = $r7;
        $r8 = new java.util.logging.Level;
        specialinvoke $r8.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>("ALL", -2147483648, "sun.util.logging.resources.logging");
        <java.util.logging.Level: java.util.logging.Level ALL> = $r8;
        return;
    }
}
