class java.util.logging.LogManager$LoggerContext$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.util.logging.Logger val$logger;
    final java.lang.String val$name;
    final java.util.logging.LogManager$LoggerContext this$0;

    void <init>(java.util.logging.LogManager$LoggerContext, java.util.logging.Logger, java.lang.String)
    {
        java.util.logging.LogManager$LoggerContext$1 r0;
        java.util.logging.LogManager$LoggerContext r1;
        java.util.logging.Logger r2;
        java.lang.String r3;

        r0 := @this: java.util.logging.LogManager$LoggerContext$1;
        r1 := @parameter0: java.util.logging.LogManager$LoggerContext;
        r2 := @parameter1: java.util.logging.Logger;
        r3 := @parameter2: java.lang.String;
        r0.<java.util.logging.LogManager$LoggerContext$1: java.util.logging.LogManager$LoggerContext this$0> = r1;
        r0.<java.util.logging.LogManager$LoggerContext$1: java.util.logging.Logger val$logger> = r2;
        r0.<java.util.logging.LogManager$LoggerContext$1: java.lang.String val$name> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run()
    {
        java.util.logging.LogManager$LoggerContext$1 r0;
        java.util.logging.LogManager $r1, $r4;
        boolean z0;
        java.util.logging.Logger $r2, $r3, $r10;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String $r6, $r9;

        r0 := @this: java.util.logging.LogManager$LoggerContext$1;
        $r2 = r0.<java.util.logging.LogManager$LoggerContext$1: java.util.logging.Logger val$logger>;
        $r1 = staticinvoke <java.util.logging.LogManager: java.util.logging.LogManager access$100()>();
        $r3 = staticinvoke <java.util.logging.LogManager: java.util.logging.Logger access$200(java.util.logging.LogManager)>($r1);
        if $r2 == $r3 goto label0;

        $r4 = staticinvoke <java.util.logging.LogManager: java.util.logging.LogManager access$100()>();
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = r0.<java.util.logging.LogManager$LoggerContext$1: java.lang.String val$name>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".useParentHandlers");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        z0 = virtualinvoke $r4.<java.util.logging.LogManager: boolean getBooleanProperty(java.lang.String,boolean)>($r9, 1);
        if z0 != 0 goto label0;

        $r10 = r0.<java.util.logging.LogManager$LoggerContext$1: java.util.logging.Logger val$logger>;
        virtualinvoke $r10.<java.util.logging.Logger: void setUseParentHandlers(boolean)>(0);

     label0:
        return null;
    }

    public volatile java.lang.Object run()
    {
        java.util.logging.LogManager$LoggerContext$1 r0;
        java.lang.Void $r1;

        r0 := @this: java.util.logging.LogManager$LoggerContext$1;
        $r1 = virtualinvoke r0.<java.util.logging.LogManager$LoggerContext$1: java.lang.Void run()>();
        return $r1;
    }
}
