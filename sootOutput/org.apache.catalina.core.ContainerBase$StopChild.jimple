class org.apache.catalina.core.ContainerBase$StopChild extends java.lang.Object implements java.util.concurrent.Callable
{
    private org.apache.catalina.Container child;

    public void <init>(org.apache.catalina.Container)
    {
        org.apache.catalina.core.ContainerBase$StopChild r0;
        org.apache.catalina.Container r1;

        r0 := @this: org.apache.catalina.core.ContainerBase$StopChild;
        r1 := @parameter0: org.apache.catalina.Container;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.catalina.core.ContainerBase$StopChild: org.apache.catalina.Container child> = r1;
        return;
    }

    public java.lang.Void call() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.core.ContainerBase$StopChild r0;
        org.apache.catalina.Container $r1, $r3;
        org.apache.catalina.LifecycleState $r2;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.ContainerBase$StopChild;
        $r1 = r0.<org.apache.catalina.core.ContainerBase$StopChild: org.apache.catalina.Container child>;
        $r2 = interfaceinvoke $r1.<org.apache.catalina.Container: org.apache.catalina.LifecycleState getState()>();
        $z0 = virtualinvoke $r2.<org.apache.catalina.LifecycleState: boolean isAvailable()>();
        if $z0 == 0 goto label0;

        $r3 = r0.<org.apache.catalina.core.ContainerBase$StopChild: org.apache.catalina.Container child>;
        interfaceinvoke $r3.<org.apache.catalina.Container: void stop()>();

     label0:
        return null;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.apache.catalina.core.ContainerBase$StopChild r0;
        java.lang.Void $r1;

        r0 := @this: org.apache.catalina.core.ContainerBase$StopChild;
        $r1 = virtualinvoke r0.<org.apache.catalina.core.ContainerBase$StopChild: java.lang.Void call()>();
        return $r1;
    }
}
