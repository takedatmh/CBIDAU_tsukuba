class org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2 extends java.lang.Object implements java.lang.Runnable
{
    final org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1;
    private final org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key;
    private final int val$ops;
    private final org.apache.tomcat.util.net.NioBlockingSelector$KeyReference val$ref;

    void <init>(org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller, org.apache.tomcat.util.net.NioEndpoint$KeyAttachment, int, org.apache.tomcat.util.net.NioBlockingSelector$KeyReference)
    {
        org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2 r0;
        org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller r1;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r2;
        int i0;
        org.apache.tomcat.util.net.NioBlockingSelector$KeyReference r3;

        r0 := @this: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2;
        r1 := @parameter0: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller;
        r2 := @parameter1: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment;
        i0 := @parameter2: int;
        r3 := @parameter3: org.apache.tomcat.util.net.NioBlockingSelector$KeyReference;
        r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1> = r1;
        r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key> = r2;
        r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: int val$ops> = i0;
        r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioBlockingSelector$KeyReference val$ref> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2 r0;
        org.apache.tomcat.util.net.NioChannel r1;
        java.nio.channels.SocketChannel r2;
        java.nio.channels.SelectionKey r3;
        java.nio.channels.CancelledKeyException r4, $r16;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment $r5, $r6, $r11, $r14, $r18, $r22;
        org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller $r7, $r9, $r13, $r17, $r21;
        java.nio.channels.Selector $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.tomcat.util.net.NioBlockingSelector$KeyReference $r12;
        boolean $z0;
        java.nio.channels.ClosedChannelException $r19, r20;

        r0 := @this: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2;
        $r5 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        if $r5 != null goto label0;

        return;

     label0:
        $r6 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        r1 = virtualinvoke $r6.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioChannel getChannel()>();
        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel getIOChannel()>();
        if r2 != null goto label2;

        return;

     label2:
        $r7 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1>;
        $r8 = $r7.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller: java.nio.channels.Selector selector>;
        r3 = virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)>($r8);

     label3:
        if r3 != null goto label4;

        $r9 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1>;
        $r10 = $r9.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller: java.nio.channels.Selector selector>;
        $i0 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: int val$ops>;
        $r11 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        r3 = virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>($r10, $i0, $r11);
        $r12 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioBlockingSelector$KeyReference val$ref>;
        $r12.<org.apache.tomcat.util.net.NioBlockingSelector$KeyReference: java.nio.channels.SelectionKey key> = r3;
        goto label9;

     label4:
        $z0 = virtualinvoke r3.<java.nio.channels.SelectionKey: boolean isValid()>();
        if $z0 != 0 goto label5;

        $r13 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1>;
        $r14 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        $i1 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: int val$ops>;
        virtualinvoke $r13.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller: void cancel(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r3, $r14, $i1);
        goto label9;

     label5:
        $i2 = virtualinvoke r3.<java.nio.channels.SelectionKey: int interestOps()>();
        $i3 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: int val$ops>;
        $i4 = $i2 | $i3;
        virtualinvoke r3.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i4);

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;
        r4 = $r16;
        $r17 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1>;
        $r18 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        $i5 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: int val$ops>;
        virtualinvoke $r17.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller: void cancel(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r3, $r18, $i5);
        goto label9;

     label8:
        $r19 := @caughtexception;
        r20 = $r19;
        $r21 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1>;
        $r22 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        $i6 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$2: int val$ops>;
        virtualinvoke $r21.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller: void cancel(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r3, $r22, $i6);

     label9:
        return;

        catch java.nio.channels.CancelledKeyException from label3 to label6 with label7;
        catch java.nio.channels.ClosedChannelException from label3 to label6 with label8;
    }
}
