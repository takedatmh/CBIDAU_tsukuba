public class org.apache.tomcat.util.codec.binary.StringUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.tomcat.util.codec.binary.StringUtils r0;

        r0 := @this: org.apache.tomcat.util.codec.binary.StringUtils;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static byte[] getBytes(java.lang.String, java.nio.charset.Charset)
    {
        java.lang.String r0;
        java.nio.charset.Charset r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.nio.charset.Charset;
        if r0 != null goto label0;

        return null;

     label0:
        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(r1);
        return $r2;
    }

    public static byte[] getBytesUtf8(java.lang.String)
    {
        java.lang.String r0;
        java.nio.charset.Charset $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset UTF_8>;
        $r2 = staticinvoke <org.apache.tomcat.util.codec.binary.StringUtils: byte[] getBytes(java.lang.String,java.nio.charset.Charset)>(r0, $r1);
        return $r2;
    }

    private static java.lang.String newString(byte[], java.nio.charset.Charset)
    {
        byte[] r0;
        java.nio.charset.Charset r1;
        java.lang.String $r2;

        r0 := @parameter0: byte[];
        r1 := @parameter1: java.nio.charset.Charset;
        if r0 != null goto label0;

        $r2 = null;
        goto label1;

     label0:
        $r2 = new java.lang.String;
        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r0, r1);

     label1:
        return $r2;
    }

    public static java.lang.String newStringUsAscii(byte[])
    {
        byte[] r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        r0 := @parameter0: byte[];
        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");
        $r2 = staticinvoke <org.apache.tomcat.util.codec.binary.StringUtils: java.lang.String newString(byte[],java.nio.charset.Charset)>(r0, $r1);
        return $r2;
    }

    public static java.lang.String newStringUtf8(byte[])
    {
        byte[] r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        r0 := @parameter0: byte[];
        $r1 = <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset UTF_8>;
        $r2 = staticinvoke <org.apache.tomcat.util.codec.binary.StringUtils: java.lang.String newString(byte[],java.nio.charset.Charset)>(r0, $r1);
        return $r2;
    }
}
