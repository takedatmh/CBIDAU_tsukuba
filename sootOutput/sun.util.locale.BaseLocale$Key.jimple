final class sun.util.locale.BaseLocale$Key extends java.lang.Object
{
    private final java.lang.ref.SoftReference lang;
    private final java.lang.ref.SoftReference scrt;
    private final java.lang.ref.SoftReference regn;
    private final java.lang.ref.SoftReference vart;
    private final boolean normalized;
    private final int hash;
    static final boolean $assertionsDisabled;

    private void <init>(java.lang.String, java.lang.String)
    {
        sun.util.locale.BaseLocale$Key r0;
        java.lang.String r1, r2, $r3, $r4;
        int i0, i1, i2, $i3;
        boolean $z0;
        java.lang.AssertionError $r5;
        java.lang.ref.SoftReference $r6, $r7, $r8, $r9;
        char $c4, $c5;

        r0 := @this: sun.util.locale.BaseLocale$Key;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $z0 = <sun.util.locale.BaseLocale$Key: boolean $assertionsDisabled>;
        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();
        if $r3 != r1 goto label0;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();
        if $r4 == r2 goto label1;

     label0:
        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        throw $r5;

     label1:
        $r6 = new java.lang.ref.SoftReference;
        specialinvoke $r6.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r1);
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference lang> = $r6;
        $r7 = new java.lang.ref.SoftReference;
        specialinvoke $r7.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>("");
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference scrt> = $r7;
        $r8 = new java.lang.ref.SoftReference;
        specialinvoke $r8.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r2);
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference regn> = $r8;
        $r9 = new java.lang.ref.SoftReference;
        specialinvoke $r9.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>("");
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference vart> = $r9;
        r0.<sun.util.locale.BaseLocale$Key: boolean normalized> = 1;
        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();
        if r2 == "" goto label3;

        i1 = virtualinvoke r2.<java.lang.String: int length()>();
        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $i3 = 31 * i0;
        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i2);
        $c5 = staticinvoke <sun.util.locale.LocaleUtils: char toLower(char)>($c4);
        i0 = $i3 + $c5;
        i2 = i2 + 1;
        goto label2;

     label3:
        r0.<sun.util.locale.BaseLocale$Key: int hash> = i0;
        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        sun.util.locale.BaseLocale$Key r0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: sun.util.locale.BaseLocale$Key;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        specialinvoke r0.<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, r4, 0);
        return;
    }

    private void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        sun.util.locale.BaseLocale$Key r0;
        java.lang.String r1, r2, r3, r4;
        boolean z0;
        int i0, i1, i2, $i3, i6, i7, $i8, i11, i12, $i13, i16, i17, $i18;
        java.lang.ref.SoftReference $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        char $c4, $c5, $c9, $c10, $c14, $c15, $c19;

        r0 := @this: sun.util.locale.BaseLocale$Key;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        z0 := @parameter4: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        i0 = 0;
        if r1 == null goto label2;

        $r5 = new java.lang.ref.SoftReference;
        specialinvoke $r5.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r1);
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference lang> = $r5;
        i1 = virtualinvoke r1.<java.lang.String: int length()>();
        i2 = 0;

     label0:
        if i2 >= i1 goto label1;

        $i3 = 31 * i0;
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);
        $c5 = staticinvoke <sun.util.locale.LocaleUtils: char toLower(char)>($c4);
        i0 = $i3 + $c5;
        i2 = i2 + 1;
        goto label0;

     label1:
        goto label3;

     label2:
        $r6 = new java.lang.ref.SoftReference;
        specialinvoke $r6.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>("");
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference lang> = $r6;

     label3:
        if r2 == null goto label6;

        $r7 = new java.lang.ref.SoftReference;
        specialinvoke $r7.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r2);
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference scrt> = $r7;
        i6 = virtualinvoke r2.<java.lang.String: int length()>();
        i7 = 0;

     label4:
        if i7 >= i6 goto label5;

        $i8 = 31 * i0;
        $c9 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i7);
        $c10 = staticinvoke <sun.util.locale.LocaleUtils: char toLower(char)>($c9);
        i0 = $i8 + $c10;
        i7 = i7 + 1;
        goto label4;

     label5:
        goto label7;

     label6:
        $r8 = new java.lang.ref.SoftReference;
        specialinvoke $r8.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>("");
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference scrt> = $r8;

     label7:
        if r3 == null goto label10;

        $r9 = new java.lang.ref.SoftReference;
        specialinvoke $r9.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r3);
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference regn> = $r9;
        i11 = virtualinvoke r3.<java.lang.String: int length()>();
        i12 = 0;

     label8:
        if i12 >= i11 goto label9;

        $i13 = 31 * i0;
        $c14 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i12);
        $c15 = staticinvoke <sun.util.locale.LocaleUtils: char toLower(char)>($c14);
        i0 = $i13 + $c15;
        i12 = i12 + 1;
        goto label8;

     label9:
        goto label11;

     label10:
        $r10 = new java.lang.ref.SoftReference;
        specialinvoke $r10.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>("");
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference regn> = $r10;

     label11:
        if r4 == null goto label14;

        $r11 = new java.lang.ref.SoftReference;
        specialinvoke $r11.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r4);
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference vart> = $r11;
        i16 = virtualinvoke r4.<java.lang.String: int length()>();
        i17 = 0;

     label12:
        if i17 >= i16 goto label13;

        $i18 = 31 * i0;
        $c19 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i17);
        i0 = $i18 + $c19;
        i17 = i17 + 1;
        goto label12;

     label13:
        goto label15;

     label14:
        $r12 = new java.lang.ref.SoftReference;
        specialinvoke $r12.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>("");
        r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference vart> = $r12;

     label15:
        r0.<sun.util.locale.BaseLocale$Key: int hash> = i0;
        r0.<sun.util.locale.BaseLocale$Key: boolean normalized> = z0;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        sun.util.locale.BaseLocale$Key r0, $r10, $r13, $r18, $r23, $r28;
        java.lang.Object r1, $r12, $r15, $r17, $r20, $r22, $r25, $r27, $r30;
        java.lang.String r2, r3, r4, r5, r6, r7, r8, r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1;
        java.lang.ref.SoftReference $r11, $r14, $r16, $r19, $r21, $r24, $r26, $r29;

        r0 := @this: sun.util.locale.BaseLocale$Key;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.util.locale.BaseLocale$Key;
        if $z0 == 0 goto label3;

        $i0 = r0.<sun.util.locale.BaseLocale$Key: int hash>;
        $r10 = (sun.util.locale.BaseLocale$Key) r1;
        $i1 = $r10.<sun.util.locale.BaseLocale$Key: int hash>;
        if $i0 != $i1 goto label3;

        $r11 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference lang>;
        $r12 = virtualinvoke $r11.<java.lang.ref.SoftReference: java.lang.Object get()>();
        r2 = (java.lang.String) $r12;
        $r13 = (sun.util.locale.BaseLocale$Key) r1;
        $r14 = $r13.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference lang>;
        $r15 = virtualinvoke $r14.<java.lang.ref.SoftReference: java.lang.Object get()>();
        r3 = (java.lang.String) $r15;
        if r2 == null goto label3;

        if r3 == null goto label3;

        $z1 = staticinvoke <sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>(r3, r2);
        if $z1 == 0 goto label3;

        $r16 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference scrt>;
        $r17 = virtualinvoke $r16.<java.lang.ref.SoftReference: java.lang.Object get()>();
        r4 = (java.lang.String) $r17;
        $r18 = (sun.util.locale.BaseLocale$Key) r1;
        $r19 = $r18.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference scrt>;
        $r20 = virtualinvoke $r19.<java.lang.ref.SoftReference: java.lang.Object get()>();
        r5 = (java.lang.String) $r20;
        if r4 == null goto label3;

        if r5 == null goto label3;

        $z2 = staticinvoke <sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>(r5, r4);
        if $z2 == 0 goto label3;

        $r21 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference regn>;
        $r22 = virtualinvoke $r21.<java.lang.ref.SoftReference: java.lang.Object get()>();
        r6 = (java.lang.String) $r22;
        $r23 = (sun.util.locale.BaseLocale$Key) r1;
        $r24 = $r23.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference regn>;
        $r25 = virtualinvoke $r24.<java.lang.ref.SoftReference: java.lang.Object get()>();
        r7 = (java.lang.String) $r25;
        if r6 == null goto label3;

        if r7 == null goto label3;

        $z3 = staticinvoke <sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>(r7, r6);
        if $z3 == 0 goto label3;

        $r26 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference vart>;
        $r27 = virtualinvoke $r26.<java.lang.ref.SoftReference: java.lang.Object get()>();
        r8 = (java.lang.String) $r27;
        $r28 = (sun.util.locale.BaseLocale$Key) r1;
        $r29 = $r28.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference vart>;
        $r30 = virtualinvoke $r29.<java.lang.ref.SoftReference: java.lang.Object get()>();
        r9 = (java.lang.String) $r30;
        if r9 == null goto label1;

        $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        if $z4 == 0 goto label1;

        $z5 = 1;
        goto label2;

     label1:
        $z5 = 0;

     label2:
        return $z5;

     label3:
        return 0;
    }

    public int hashCode()
    {
        sun.util.locale.BaseLocale$Key r0;
        int $i0;

        r0 := @this: sun.util.locale.BaseLocale$Key;
        $i0 = r0.<sun.util.locale.BaseLocale$Key: int hash>;
        return $i0;
    }

    public static sun.util.locale.BaseLocale$Key normalize(sun.util.locale.BaseLocale$Key)
    {
        sun.util.locale.BaseLocale$Key r0, $r20;
        java.lang.String r1, r2, r3, r4, $r7, $r8, $r11, $r12, $r15, $r16, $r19;
        boolean $z0;
        java.lang.ref.SoftReference $r5, $r9, $r13, $r17;
        java.lang.Object $r6, $r10, $r14, $r18;

        r0 := @parameter0: sun.util.locale.BaseLocale$Key;
        $z0 = r0.<sun.util.locale.BaseLocale$Key: boolean normalized>;
        if $z0 == 0 goto label0;

        return r0;

     label0:
        $r5 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference lang>;
        $r6 = virtualinvoke $r5.<java.lang.ref.SoftReference: java.lang.Object get()>();
        $r7 = (java.lang.String) $r6;
        $r8 = staticinvoke <sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)>($r7);
        r1 = virtualinvoke $r8.<java.lang.String: java.lang.String intern()>();
        $r9 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference scrt>;
        $r10 = virtualinvoke $r9.<java.lang.ref.SoftReference: java.lang.Object get()>();
        $r11 = (java.lang.String) $r10;
        $r12 = staticinvoke <sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)>($r11);
        r2 = virtualinvoke $r12.<java.lang.String: java.lang.String intern()>();
        $r13 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference regn>;
        $r14 = virtualinvoke $r13.<java.lang.ref.SoftReference: java.lang.Object get()>();
        $r15 = (java.lang.String) $r14;
        $r16 = staticinvoke <sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)>($r15);
        r3 = virtualinvoke $r16.<java.lang.String: java.lang.String intern()>();
        $r17 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference vart>;
        $r18 = virtualinvoke $r17.<java.lang.ref.SoftReference: java.lang.Object get()>();
        $r19 = (java.lang.String) $r18;
        r4 = virtualinvoke $r19.<java.lang.String: java.lang.String intern()>();
        $r20 = new sun.util.locale.BaseLocale$Key;
        specialinvoke $r20.<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, r4, 1);
        return $r20;
    }

    void <init>(java.lang.String, java.lang.String, sun.util.locale.BaseLocale$1)
    {
        sun.util.locale.BaseLocale$Key r0;
        java.lang.String r1, r2;
        sun.util.locale.BaseLocale$1 r3;

        r0 := @this: sun.util.locale.BaseLocale$Key;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: sun.util.locale.BaseLocale$1;
        specialinvoke r0.<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    static java.lang.ref.SoftReference access$100(sun.util.locale.BaseLocale$Key)
    {
        sun.util.locale.BaseLocale$Key r0;
        java.lang.ref.SoftReference $r1;

        r0 := @parameter0: sun.util.locale.BaseLocale$Key;
        $r1 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference lang>;
        return $r1;
    }

    static java.lang.ref.SoftReference access$200(sun.util.locale.BaseLocale$Key)
    {
        sun.util.locale.BaseLocale$Key r0;
        java.lang.ref.SoftReference $r1;

        r0 := @parameter0: sun.util.locale.BaseLocale$Key;
        $r1 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference scrt>;
        return $r1;
    }

    static java.lang.ref.SoftReference access$300(sun.util.locale.BaseLocale$Key)
    {
        sun.util.locale.BaseLocale$Key r0;
        java.lang.ref.SoftReference $r1;

        r0 := @parameter0: sun.util.locale.BaseLocale$Key;
        $r1 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference regn>;
        return $r1;
    }

    static java.lang.ref.SoftReference access$400(sun.util.locale.BaseLocale$Key)
    {
        sun.util.locale.BaseLocale$Key r0;
        java.lang.ref.SoftReference $r1;

        r0 := @parameter0: sun.util.locale.BaseLocale$Key;
        $r1 = r0.<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference vart>;
        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "sun/util/locale/BaseLocale";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <sun.util.locale.BaseLocale$Key: boolean $assertionsDisabled> = $z1;
        return;
    }
}
