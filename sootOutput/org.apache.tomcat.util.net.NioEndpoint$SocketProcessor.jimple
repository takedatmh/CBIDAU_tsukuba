public class org.apache.tomcat.util.net.NioEndpoint$SocketProcessor extends java.lang.Object implements java.lang.Runnable
{
    protected org.apache.tomcat.util.net.NioChannel socket;
    protected org.apache.tomcat.util.net.SocketStatus status;
    final org.apache.tomcat.util.net.NioEndpoint this$0;

    public void <init>(org.apache.tomcat.util.net.NioEndpoint, org.apache.tomcat.util.net.NioChannel, org.apache.tomcat.util.net.SocketStatus)
    {
        org.apache.tomcat.util.net.NioEndpoint$SocketProcessor r0;
        org.apache.tomcat.util.net.NioEndpoint r1;
        org.apache.tomcat.util.net.NioChannel r2;
        org.apache.tomcat.util.net.SocketStatus r3;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$SocketProcessor;
        r1 := @parameter0: org.apache.tomcat.util.net.NioEndpoint;
        r2 := @parameter1: org.apache.tomcat.util.net.NioChannel;
        r3 := @parameter2: org.apache.tomcat.util.net.SocketStatus;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket> = null;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status> = null;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: void reset(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus)>(r2, r3);
        return;
    }

    public void reset(org.apache.tomcat.util.net.NioChannel, org.apache.tomcat.util.net.SocketStatus)
    {
        org.apache.tomcat.util.net.NioEndpoint$SocketProcessor r0;
        org.apache.tomcat.util.net.NioChannel r1;
        org.apache.tomcat.util.net.SocketStatus r2;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$SocketProcessor;
        r1 := @parameter0: org.apache.tomcat.util.net.NioChannel;
        r2 := @parameter1: org.apache.tomcat.util.net.SocketStatus;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket> = r1;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status> = r2;
        return;
    }

    public void run()
    {
        org.apache.tomcat.util.net.NioEndpoint$SocketProcessor r0;
        java.nio.channels.SelectionKey r1;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r2;
        java.lang.Object r3, $r9, $r12;
        org.apache.tomcat.util.net.NioChannel $r4, $r6, $r14, r15;
        java.nio.channels.SocketChannel $r5;
        org.apache.tomcat.util.net.NioEndpoint$Poller $r7;
        java.nio.channels.Selector $r8;
        boolean $z0;
        org.apache.tomcat.util.net.SocketStatus $r10, $r11;
        java.lang.Throwable $r13, $r16;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$SocketProcessor;
        $r4 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        $r5 = virtualinvoke $r4.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel getIOChannel()>();
        $r6 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        $r7 = virtualinvoke $r6.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.NioEndpoint$Poller getPoller()>();
        $r8 = virtualinvoke $r7.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector getSelector()>();
        r1 = virtualinvoke $r5.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)>($r8);
        r2 = null;
        if r1 == null goto label0;

        $r9 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attachment()>();
        r2 = (org.apache.tomcat.util.net.NioEndpoint$KeyAttachment) $r9;

     label0:
        if r2 == null goto label6;

        $z0 = virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: boolean isUpgraded()>();
        if $z0 == 0 goto label6;

        $r10 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus OPEN_WRITE>;
        $r11 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status>;
        if $r10 != $r11 goto label6;

        $r12 = virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: java.lang.Object getWriteThreadLock()>();
        r3 = $r12;
        entermonitor $r12;

     label1:
        specialinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: void doRun(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)>(r1, r2);
        exitmonitor r3;

     label2:
        goto label12;

     label3:
        $r13 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r13;

     label6:
        $r14 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        r15 = $r14;
        entermonitor $r14;

     label7:
        specialinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: void doRun(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)>(r1, r2);
        exitmonitor r15;

     label8:
        goto label12;

     label9:
        $r16 := @caughtexception;

     label10:
        exitmonitor r15;

     label11:
        throw $r16;

     label12:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.lang.Throwable from label7 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    private void doRun(java.nio.channels.SelectionKey, org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)
    {
        org.apache.tomcat.util.net.NioEndpoint$SocketProcessor r0;
        java.nio.channels.SelectionKey r1;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r2;
        int i0;
        org.apache.tomcat.util.net.SocketStatus $r3, $r5, $r9, $r11, $r18, $r21, $r25, $r29, $r48, $r71;
        java.io.IOException r4, $r12;
        java.lang.Throwable r6, r7, $r51, r52, $r54, $r65, r66, $r77;
        org.apache.tomcat.util.net.NioChannel $r8, $r10, $r27, $r28, $r31, $r34, $r45, $r46, $r68, $r69;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z10, $z11, $z13, $z14, $z16, $z17, $z19, $z20;
        org.apache.juli.logging.Log $r13, $r14, $r44, $r67;
        java.nio.channels.CancelledKeyException $r15, r16, $r32, r33;
        org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState r17, r22, $r26;
        org.apache.tomcat.util.net.NioEndpoint $r19, $r23, $r37, $r38, $r39, $r43, $r50, $r55, $r56, $r57, $r61, $r62, $r63, $r73, $r74, $r75, $r78, $r79, $r80, $r82, $r83, $r84;
        org.apache.tomcat.util.net.NioEndpoint$Handler $r20, $r24;
        org.apache.tomcat.util.net.NioEndpoint$Poller $r30, $r35, $r47, $r70;
        java.util.concurrent.ConcurrentLinkedQueue $r40, $r58, $r64, $r76, $r81, $r85;
        java.lang.OutOfMemoryError $r41, r42;
        java.io.PrintStream $r53;
        java.lang.VirtualMachineError $r59, r60;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$SocketProcessor;
        r1 := @parameter0: java.nio.channels.SelectionKey;
        r2 := @parameter1: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment;

     label0:
        i0 = -1;

     label1:
        if r1 == null goto label7;

        $r8 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        $z0 = virtualinvoke $r8.<org.apache.tomcat.util.net.NioChannel: boolean isHandshakeComplete()>();
        if $z0 != 0 goto label2;

        $r9 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status>;
        $r3 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus STOP>;
        if $r9 != $r3 goto label3;

     label2:
        i0 = 0;
        goto label7;

     label3:
        $r10 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        $z1 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isReadable()>();
        $z2 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isWritable()>();
        i0 = virtualinvoke $r10.<org.apache.tomcat.util.net.NioChannel: int handshake(boolean,boolean)>($z1, $z2);
        $r11 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus OPEN_READ>;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status> = $r11;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;
        r4 = $r12;
        i0 = -1;
        $r13 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z3 = interfaceinvoke $r13.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label7;

        $r14 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Error during SSL handshake", r4);
        goto label7;

     label6:
        $r15 := @caughtexception;
        r16 = $r15;
        i0 = -1;

     label7:
        if i0 != 0 goto label10;

        r17 = <org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState: org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState OPEN>;
        $r18 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status>;
        if $r18 != null goto label8;

        $r19 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r20 = $r19.<org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.net.NioEndpoint$Handler handler>;
        $r21 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus OPEN_READ>;
        r22 = interfaceinvoke $r20.<org.apache.tomcat.util.net.NioEndpoint$Handler: org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)>(r2, $r21);
        goto label9;

     label8:
        $r23 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r24 = $r23.<org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.net.NioEndpoint$Handler handler>;
        $r25 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status>;
        r22 = interfaceinvoke $r24.<org.apache.tomcat.util.net.NioEndpoint$Handler: org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)>(r2, $r25);

     label9:
        $r26 = <org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState: org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState CLOSED>;
        if r22 != $r26 goto label33;

        $r27 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        $r5 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus ERROR>;
        specialinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: void close(org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,org.apache.tomcat.util.net.NioChannel,java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus)>(r2, $r27, r1, $r5);
        goto label33;

     label10:
        if i0 != -1 goto label11;

        $r28 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        $r29 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus DISCONNECT>;
        specialinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: void close(org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,org.apache.tomcat.util.net.NioChannel,java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus)>(r2, $r28, r1, $r29);
        goto label33;

     label11:
        $r30 = virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioEndpoint$Poller getPoller()>();
        $r31 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        virtualinvoke $r30.<org.apache.tomcat.util.net.NioEndpoint$Poller: void add(org.apache.tomcat.util.net.NioChannel,int)>($r31, i0);

     label12:
        goto label33;

     label13:
        $r32 := @caughtexception;
        r33 = $r32;
        $r34 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        $r35 = virtualinvoke $r34.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.NioEndpoint$Poller getPoller()>();
        virtualinvoke $r35.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, null, 0);

     label14:
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket> = null;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status> = null;
        $r37 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z4 = $r37.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z4 == 0 goto label34;

        $r38 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z5 = $r38.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z5 != 0 goto label34;

        $r39 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r40 = $r39.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue processorCache>;
        virtualinvoke $r40.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>(r0);
        goto label34;

     label15:
        $r41 := @caughtexception;

     label16:
        r42 = $r41;

     label17:
        $r43 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r43.<org.apache.tomcat.util.net.NioEndpoint: byte[] oomParachuteData> = null;
        $r44 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r44.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("", r42);
        $r45 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        if $r45 == null goto label18;

        $r46 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        $r47 = virtualinvoke $r46.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.NioEndpoint$Poller getPoller()>();
        $r48 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus ERROR>;
        virtualinvoke $r47.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r48, 0);

     label18:
        $r50 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        virtualinvoke $r50.<org.apache.tomcat.util.net.NioEndpoint: void releaseCaches()>();

     label19:
        goto label24;

     label20:
        $r51 := @caughtexception;
        r52 = $r51;

     label21:
        $r53 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>("SEVERE:Memory usage is low, parachute is non existent, your system may start failing.");
        virtualinvoke r52.<java.lang.Throwable: void printStackTrace()>();

     label22:
        goto label24;

     label23:
        $r54 := @caughtexception;
        r6 = $r54;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r6);

     label24:
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket> = null;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status> = null;
        $r55 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z7 = $r55.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z7 == 0 goto label34;

        $r56 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z8 = $r56.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z8 != 0 goto label34;

        $r57 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r58 = $r57.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue processorCache>;
        virtualinvoke $r58.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>(r0);
        goto label34;

     label25:
        $r59 := @caughtexception;

     label26:
        r60 = $r59;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r60);

     label27:
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket> = null;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status> = null;
        $r61 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z10 = $r61.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z10 == 0 goto label34;

        $r62 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z11 = $r62.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z11 != 0 goto label34;

        $r63 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r64 = $r63.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue processorCache>;
        virtualinvoke $r64.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>(r0);
        goto label34;

     label28:
        $r65 := @caughtexception;

     label29:
        r66 = $r65;
        $r67 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r67.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("", r66);
        $r68 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        if $r68 == null goto label30;

        $r69 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket>;
        $r70 = virtualinvoke $r69.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.NioEndpoint$Poller getPoller()>();
        $r71 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus ERROR>;
        virtualinvoke $r70.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r71, 0);

     label30:
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket> = null;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status> = null;
        $r73 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z13 = $r73.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z13 == 0 goto label34;

        $r74 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z14 = $r74.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z14 != 0 goto label34;

        $r75 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r76 = $r75.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue processorCache>;
        virtualinvoke $r76.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>(r0);
        goto label34;

     label31:
        $r77 := @caughtexception;
        r7 = $r77;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket> = null;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status> = null;
        $r78 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z16 = $r78.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z16 == 0 goto label32;

        $r79 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z17 = $r79.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z17 != 0 goto label32;

        $r80 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r81 = $r80.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue processorCache>;
        virtualinvoke $r81.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>(r0);

     label32:
        throw r7;

     label33:
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioChannel socket> = null;
        r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.SocketStatus status> = null;
        $r82 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z19 = $r82.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z19 == 0 goto label34;

        $r83 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z20 = $r83.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z20 != 0 goto label34;

        $r84 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r85 = $r84.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue processorCache>;
        virtualinvoke $r85.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>(r0);

     label34:
        return;

        catch java.io.IOException from label1 to label4 with label5;
        catch java.nio.channels.CancelledKeyException from label1 to label4 with label6;
        catch java.nio.channels.CancelledKeyException from label0 to label12 with label13;
        catch java.lang.OutOfMemoryError from label0 to label12 with label15;
        catch java.lang.Throwable from label17 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.VirtualMachineError from label0 to label12 with label25;
        catch java.lang.Throwable from label0 to label12 with label28;
        catch java.lang.Throwable from label0 to label14 with label31;
        catch java.lang.Throwable from label16 to label24 with label31;
        catch java.lang.Throwable from label26 to label27 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
    }

    private void close(org.apache.tomcat.util.net.NioEndpoint$KeyAttachment, org.apache.tomcat.util.net.NioChannel, java.nio.channels.SelectionKey, org.apache.tomcat.util.net.SocketStatus)
    {
        org.apache.tomcat.util.net.NioEndpoint$SocketProcessor r0;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r1, $r7;
        org.apache.tomcat.util.net.NioChannel r2;
        java.nio.channels.SelectionKey r3;
        org.apache.tomcat.util.net.SocketStatus r4;
        java.lang.Exception r5, $r16;
        org.apache.tomcat.util.net.NioEndpoint$Poller $r6;
        org.apache.tomcat.util.net.NioEndpoint $r8, $r9, $r10, $r12, $r13, $r14;
        boolean $z0, $z1, $z3, $z4;
        java.util.concurrent.ConcurrentLinkedQueue $r11, $r15;
        org.apache.juli.logging.Log $r17;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$SocketProcessor;
        r1 := @parameter0: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment;
        r2 := @parameter1: org.apache.tomcat.util.net.NioChannel;
        r3 := @parameter2: java.nio.channels.SelectionKey;
        r4 := @parameter3: org.apache.tomcat.util.net.SocketStatus;

     label0:
        if r1 == null goto label1;

        virtualinvoke r1.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void setComet(boolean)>(0);

     label1:
        $r6 = virtualinvoke r2.<org.apache.tomcat.util.net.NioChannel: org.apache.tomcat.util.net.NioEndpoint$Poller getPoller()>();
        $r7 = virtualinvoke $r6.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r3, r4, 0);
        if $r7 == null goto label5;

        $r8 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z0 = $r8.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z0 == 0 goto label2;

        $r9 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z1 = $r9.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z1 != 0 goto label2;

        $r10 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r11 = $r10.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue nioChannels>;
        virtualinvoke $r11.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>(r2);

     label2:
        $r12 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z3 = $r12.<org.apache.tomcat.util.net.NioEndpoint: boolean running>;
        if $z3 == 0 goto label5;

        $r13 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z4 = $r13.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z4 != 0 goto label5;

        if r1 == null goto label5;

        $r14 = r0.<org.apache.tomcat.util.net.NioEndpoint$SocketProcessor: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r15 = $r14.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue keyCache>;
        virtualinvoke $r15.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>(r1);

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;
        r5 = $r16;
        $r17 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r17.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("", r5);

     label5:
        return;

        catch java.lang.Exception from label0 to label3 with label4;
    }
}
