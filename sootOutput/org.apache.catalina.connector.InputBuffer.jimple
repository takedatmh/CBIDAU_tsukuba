public class org.apache.catalina.connector.InputBuffer extends java.io.Reader implements org.apache.tomcat.util.buf.ByteChunk$ByteInputChannel, org.apache.tomcat.util.buf.CharChunk$CharInputChannel, org.apache.tomcat.util.buf.CharChunk$CharOutputChannel
{
    protected static final org.apache.tomcat.util.res.StringManager sm;
    public static final java.lang.String DEFAULT_ENCODING;
    public static final int DEFAULT_BUFFER_SIZE;
    public final int INITIAL_STATE;
    public final int CHAR_STATE;
    public final int BYTE_STATE;
    private final org.apache.tomcat.util.buf.ByteChunk bb;
    private org.apache.tomcat.util.buf.CharChunk cb;
    private int state;
    private boolean closed;
    private java.lang.String enc;
    private boolean gotEnc;
    private final java.util.Map encoders;
    protected org.apache.tomcat.util.buf.B2CConverter conv;
    private org.apache.coyote.Request coyoteRequest;
    private int markPos;
    private int size;

    static void <clinit>()
    {
        org.apache.tomcat.util.res.StringManager $r0;

        $r0 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.catalina.connector");
        <org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.res.StringManager sm> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.connector.InputBuffer r0;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        specialinvoke r0.<org.apache.catalina.connector.InputBuffer: void <init>(int)>(8192);
        return;
    }

    public void <init>(int)
    {
        org.apache.catalina.connector.InputBuffer r0;
        int i0;
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.tomcat.util.buf.ByteChunk $r2, $r3, $r4;
        org.apache.tomcat.util.buf.CharChunk $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        i0 := @parameter0: int;
        specialinvoke r0.<java.io.Reader: void <init>()>();
        r0.<org.apache.catalina.connector.InputBuffer: int INITIAL_STATE> = 0;
        r0.<org.apache.catalina.connector.InputBuffer: int CHAR_STATE> = 1;
        r0.<org.apache.catalina.connector.InputBuffer: int BYTE_STATE> = 2;
        r0.<org.apache.catalina.connector.InputBuffer: int state> = 0;
        r0.<org.apache.catalina.connector.InputBuffer: boolean closed> = 0;
        r0.<org.apache.catalina.connector.InputBuffer: boolean gotEnc> = 0;
        $r1 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        r0.<org.apache.catalina.connector.InputBuffer: java.util.Map encoders> = $r1;
        r0.<org.apache.catalina.connector.InputBuffer: int markPos> = -1;
        r0.<org.apache.catalina.connector.InputBuffer: int size> = -1;
        r0.<org.apache.catalina.connector.InputBuffer: int size> = i0;
        $r2 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r2.<org.apache.tomcat.util.buf.ByteChunk: void <init>(int)>(i0);
        r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb> = $r2;
        $r3 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r3.<org.apache.tomcat.util.buf.ByteChunk: void setLimit(int)>(i0);
        $r4 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: void setByteInputChannel(org.apache.tomcat.util.buf.ByteChunk$ByteInputChannel)>(r0);
        $r5 = new org.apache.tomcat.util.buf.CharChunk;
        specialinvoke $r5.<org.apache.tomcat.util.buf.CharChunk: void <init>(int)>(i0);
        r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb> = $r5;
        $r6 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r6.<org.apache.tomcat.util.buf.CharChunk: void setLimit(int)>(i0);
        $r7 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r7.<org.apache.tomcat.util.buf.CharChunk: void setOptimizedWrite(boolean)>(0);
        $r8 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r8.<org.apache.tomcat.util.buf.CharChunk: void setCharInputChannel(org.apache.tomcat.util.buf.CharChunk$CharInputChannel)>(r0);
        $r9 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r9.<org.apache.tomcat.util.buf.CharChunk: void setCharOutputChannel(org.apache.tomcat.util.buf.CharChunk$CharOutputChannel)>(r0);
        return;
    }

    public void setRequest(org.apache.coyote.Request)
    {
        org.apache.catalina.connector.InputBuffer r0;
        org.apache.coyote.Request r1;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        r1 := @parameter0: org.apache.coyote.Request;
        r0.<org.apache.catalina.connector.InputBuffer: org.apache.coyote.Request coyoteRequest> = r1;
        return;
    }

    public org.apache.coyote.Request getRequest()
    {
        org.apache.catalina.connector.InputBuffer r0;
        org.apache.coyote.Request $r1;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        $r1 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.coyote.Request coyoteRequest>;
        return $r1;
    }

    public void recycle()
    {
        org.apache.catalina.connector.InputBuffer r0;
        org.apache.tomcat.util.buf.CharChunk $r1, $r3, $r4, $r5, $r6, $r7, $r8;
        char[] $r2;
        int $i0, $i1, $i2, $i3;
        org.apache.tomcat.util.buf.ByteChunk $r9;
        org.apache.tomcat.util.buf.B2CConverter $r10, $r11;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        r0.<org.apache.catalina.connector.InputBuffer: int state> = 0;
        $r1 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r2 = virtualinvoke $r1.<org.apache.tomcat.util.buf.CharChunk: char[] getChars()>();
        $i0 = lengthof $r2;
        $i1 = r0.<org.apache.catalina.connector.InputBuffer: int size>;
        if $i0 <= $i1 goto label0;

        $r3 = new org.apache.tomcat.util.buf.CharChunk;
        $i2 = r0.<org.apache.catalina.connector.InputBuffer: int size>;
        specialinvoke $r3.<org.apache.tomcat.util.buf.CharChunk: void <init>(int)>($i2);
        r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb> = $r3;
        $r4 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i3 = r0.<org.apache.catalina.connector.InputBuffer: int size>;
        virtualinvoke $r4.<org.apache.tomcat.util.buf.CharChunk: void setLimit(int)>($i3);
        $r5 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r5.<org.apache.tomcat.util.buf.CharChunk: void setOptimizedWrite(boolean)>(0);
        $r6 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r6.<org.apache.tomcat.util.buf.CharChunk: void setCharInputChannel(org.apache.tomcat.util.buf.CharChunk$CharInputChannel)>(r0);
        $r7 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r7.<org.apache.tomcat.util.buf.CharChunk: void setCharOutputChannel(org.apache.tomcat.util.buf.CharChunk$CharOutputChannel)>(r0);
        goto label1;

     label0:
        $r8 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r8.<org.apache.tomcat.util.buf.CharChunk: void recycle()>();

     label1:
        r0.<org.apache.catalina.connector.InputBuffer: int markPos> = -1;
        $r9 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r9.<org.apache.tomcat.util.buf.ByteChunk: void recycle()>();
        r0.<org.apache.catalina.connector.InputBuffer: boolean closed> = 0;
        $r10 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.B2CConverter conv>;
        if $r10 == null goto label2;

        $r11 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.B2CConverter conv>;
        virtualinvoke $r11.<org.apache.tomcat.util.buf.B2CConverter: void recycle()>();

     label2:
        r0.<org.apache.catalina.connector.InputBuffer: boolean gotEnc> = 0;
        r0.<org.apache.catalina.connector.InputBuffer: java.lang.String enc> = null;
        return;
    }

    public void clearEncoders()
    {
        org.apache.catalina.connector.InputBuffer r0;
        java.util.Map $r1;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        $r1 = r0.<org.apache.catalina.connector.InputBuffer: java.util.Map encoders>;
        interfaceinvoke $r1.<java.util.Map: void clear()>();
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        r0.<org.apache.catalina.connector.InputBuffer: boolean closed> = 1;
        return;
    }

    public int available()
    {
        org.apache.catalina.connector.InputBuffer r0;
        int i0, $i1, $i2, $i3;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        org.apache.tomcat.util.buf.CharChunk $r2;
        org.apache.coyote.Request $r3, $r5;
        org.apache.coyote.ActionCode $r4;
        byte $b4;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        i0 = 0;
        $i1 = r0.<org.apache.catalina.connector.InputBuffer: int state>;
        if $i1 != 2 goto label0;

        $r1 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        i0 = virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        goto label1;

     label0:
        $i2 = r0.<org.apache.catalina.connector.InputBuffer: int state>;
        if $i2 != 1 goto label1;

        $r2 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        i0 = virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();

     label1:
        if i0 != 0 goto label4;

        $r3 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.coyote.Request coyoteRequest>;
        $r4 = <org.apache.coyote.ActionCode: org.apache.coyote.ActionCode AVAILABLE>;
        virtualinvoke $r3.<org.apache.coyote.Request: void action(org.apache.coyote.ActionCode,java.lang.Object)>($r4, null);
        $r5 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.coyote.Request coyoteRequest>;
        $i3 = virtualinvoke $r5.<org.apache.coyote.Request: int getAvailable()>();
        if $i3 <= 0 goto label2;

        $b4 = 1;
        goto label3;

     label2:
        $b4 = 0;

     label3:
        i0 = $b4;

     label4:
        return i0;
    }

    public int realReadBytes(byte[], int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        byte[] r1;
        int i0, i1, i2, $i3;
        boolean $z0;
        org.apache.coyote.Request $r2, $r3;
        org.apache.tomcat.util.buf.ByteChunk $r4;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $z0 = r0.<org.apache.catalina.connector.InputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        return -1;

     label0:
        $r2 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.coyote.Request coyoteRequest>;
        if $r2 != null goto label1;

        return -1;

     label1:
        $i3 = r0.<org.apache.catalina.connector.InputBuffer: int state>;
        if $i3 != 0 goto label2;

        r0.<org.apache.catalina.connector.InputBuffer: int state> = 2;

     label2:
        $r3 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.coyote.Request coyoteRequest>;
        $r4 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        i2 = virtualinvoke $r3.<org.apache.coyote.Request: int doRead(org.apache.tomcat.util.buf.ByteChunk)>($r4);
        return i2;
    }

    public int readByte() throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.String $r3;
        org.apache.tomcat.util.buf.ByteChunk $r4;
        int $i0;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        $z0 = r0.<org.apache.catalina.connector.InputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        $r2 = new java.io.IOException;
        $r1 = <org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("inputBuffer.streamClosed");
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $r4 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i0 = virtualinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: int substract()>();
        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        byte[] r1;
        int i0, i1, $i2;
        org.apache.tomcat.util.res.StringManager $r2;
        boolean $z0;
        java.io.IOException $r3;
        java.lang.String $r4;
        org.apache.tomcat.util.buf.ByteChunk $r5;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $z0 = r0.<org.apache.catalina.connector.InputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        $r3 = new java.io.IOException;
        $r2 = <org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("inputBuffer.streamClosed");
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        $r5 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i2 = virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: int substract(byte[],int,int)>(r1, i0, i1);
        return $i2;
    }

    public void realWriteChars(char[], int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        char[] r1;
        int i0, i1;
        org.apache.tomcat.util.buf.CharChunk $r2, $r3;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r0.<org.apache.catalina.connector.InputBuffer: int markPos> = -1;
        $r2 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: void setOffset(int)>(0);
        $r3 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r3.<org.apache.tomcat.util.buf.CharChunk: void setEnd(int)>(0);
        return;
    }

    public void setEncoding(java.lang.String)
    {
        org.apache.catalina.connector.InputBuffer r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.connector.InputBuffer: java.lang.String enc> = r1;
        return;
    }

    public int realReadChars(char[], int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        char[] r1, $r12;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, $z1;
        org.apache.tomcat.util.buf.ByteChunk $r2, $r3, $r5, $r10, $r14, $r18;
        byte[] $r4, $r6;
        org.apache.tomcat.util.buf.CharChunk $r7, $r8, $r9, $r11, $r13, $r15, $r16, $r19, $r20, $r21;
        org.apache.tomcat.util.buf.B2CConverter $r17;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $z1 = r0.<org.apache.catalina.connector.InputBuffer: boolean gotEnc>;
        if $z1 != 0 goto label0;

        virtualinvoke r0.<org.apache.catalina.connector.InputBuffer: void setConverter()>();

     label0:
        z0 = 0;
        $r2 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i3 = virtualinvoke $r2.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        if $i3 > 0 goto label1;

        $r3 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $r4 = virtualinvoke $r3.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBytes()>();
        $r5 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $r6 = virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBytes()>();
        $i4 = lengthof $r6;
        i2 = virtualinvoke r0.<org.apache.catalina.connector.InputBuffer: int realReadBytes(byte[],int,int)>($r4, 0, $i4);
        if i2 >= 0 goto label1;

        z0 = 1;

     label1:
        $i5 = r0.<org.apache.catalina.connector.InputBuffer: int markPos>;
        if $i5 != -1 goto label2;

        $r7 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r7.<org.apache.tomcat.util.buf.CharChunk: void setOffset(int)>(0);
        $r8 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r8.<org.apache.tomcat.util.buf.CharChunk: void setEnd(int)>(0);
        goto label3;

     label2:
        $r9 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r10 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i6 = virtualinvoke $r10.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        virtualinvoke $r9.<org.apache.tomcat.util.buf.CharChunk: void makeSpace(int)>($i6);
        $r11 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r12 = virtualinvoke $r11.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        $i7 = lengthof $r12;
        $r13 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i8 = virtualinvoke $r13.<org.apache.tomcat.util.buf.CharChunk: int getEnd()>();
        $i9 = $i7 - $i8;
        if $i9 != 0 goto label3;

        $r14 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i10 = virtualinvoke $r14.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        if $i10 == 0 goto label3;

        $r15 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r15.<org.apache.tomcat.util.buf.CharChunk: void setOffset(int)>(0);
        $r16 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r16.<org.apache.tomcat.util.buf.CharChunk: void setEnd(int)>(0);
        r0.<org.apache.catalina.connector.InputBuffer: int markPos> = -1;

     label3:
        r0.<org.apache.catalina.connector.InputBuffer: int state> = 1;
        $r17 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.B2CConverter conv>;
        $r18 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $r19 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r17.<org.apache.tomcat.util.buf.B2CConverter: void convert(org.apache.tomcat.util.buf.ByteChunk,org.apache.tomcat.util.buf.CharChunk,boolean)>($r18, $r19, z0);
        $r20 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i11 = virtualinvoke $r20.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        if $i11 != 0 goto label4;

        if z0 == 0 goto label4;

        return -1;

     label4:
        $r21 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i12 = virtualinvoke $r21.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        return $i12;
    }

    public int read() throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.String $r3;
        org.apache.tomcat.util.buf.CharChunk $r4;
        int $i0;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        $z0 = r0.<org.apache.catalina.connector.InputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        $r2 = new java.io.IOException;
        $r1 = <org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("inputBuffer.streamClosed");
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $r4 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i0 = virtualinvoke $r4.<org.apache.tomcat.util.buf.CharChunk: int substract()>();
        return $i0;
    }

    public int read(char[]) throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        char[] r1;
        org.apache.tomcat.util.res.StringManager $r2;
        boolean $z0;
        java.io.IOException $r3;
        java.lang.String $r4;
        int $i0, $i1;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        r1 := @parameter0: char[];
        $z0 = r0.<org.apache.catalina.connector.InputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        $r3 = new java.io.IOException;
        $r2 = <org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("inputBuffer.streamClosed");
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        $i0 = lengthof r1;
        $i1 = virtualinvoke r0.<org.apache.catalina.connector.InputBuffer: int read(char[],int,int)>(r1, 0, $i0);
        return $i1;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        char[] r1;
        int i0, i1, $i2;
        org.apache.tomcat.util.res.StringManager $r2;
        boolean $z0;
        java.io.IOException $r3;
        java.lang.String $r4;
        org.apache.tomcat.util.buf.CharChunk $r5;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $z0 = r0.<org.apache.catalina.connector.InputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        $r3 = new java.io.IOException;
        $r2 = <org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("inputBuffer.streamClosed");
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        $r5 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i2 = virtualinvoke $r5.<org.apache.tomcat.util.buf.CharChunk: int substract(char[],int,int)>(r1, i0, i1);
        return $i2;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        long l0, l1, $l5, $l11, $l14, $l15, $l18;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean z0, $z1;
        int i2, $i4, $i7, $i8, $i9, $i10, $i12, $i13, i17;
        java.io.IOException $r2;
        java.lang.String $r3;
        byte $b3, $b6, $b16, $b19;
        java.lang.IllegalArgumentException $r4;
        org.apache.tomcat.util.buf.CharChunk $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15;
        char[] $r12, $r14, $r16;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        l0 := @parameter0: long;
        $z1 = r0.<org.apache.catalina.connector.InputBuffer: boolean closed>;
        if $z1 == 0 goto label0;

        $r2 = new java.io.IOException;
        $r1 = <org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("inputBuffer.streamClosed");
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $b3 = l0 cmp 0L;
        if $b3 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r4;

     label1:
        l1 = 0L;
        goto label6;

     label2:
        $r5 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i4 = virtualinvoke $r5.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        $l5 = (long) $i4;
        $b6 = $l5 cmp l0;
        if $b6 < 0 goto label3;

        $r6 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r7 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i7 = virtualinvoke $r7.<org.apache.tomcat.util.buf.CharChunk: int getStart()>();
        $i8 = (int) l0;
        $i9 = $i7 + $i8;
        virtualinvoke $r6.<org.apache.tomcat.util.buf.CharChunk: void setOffset(int)>($i9);
        l1 = l0;
        goto label6;

     label3:
        $r8 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i10 = virtualinvoke $r8.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        $l11 = (long) $i10;
        l1 = l1 + $l11;
        $r9 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r10 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i12 = virtualinvoke $r10.<org.apache.tomcat.util.buf.CharChunk: int getEnd()>();
        virtualinvoke $r9.<org.apache.tomcat.util.buf.CharChunk: void setOffset(int)>($i12);
        z0 = 0;
        $r11 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r12 = virtualinvoke $r11.<org.apache.tomcat.util.buf.CharChunk: char[] getChars()>();
        $i13 = lengthof $r12;
        $l14 = (long) $i13;
        $l15 = l0 - l1;
        $b16 = $l14 cmp $l15;
        if $b16 >= 0 goto label4;

        $r13 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r14 = virtualinvoke $r13.<org.apache.tomcat.util.buf.CharChunk: char[] getChars()>();
        i17 = lengthof $r14;
        goto label5;

     label4:
        $l18 = l0 - l1;
        i17 = (int) $l18;

     label5:
        $r15 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r16 = virtualinvoke $r15.<org.apache.tomcat.util.buf.CharChunk: char[] getChars()>();
        i2 = virtualinvoke r0.<org.apache.catalina.connector.InputBuffer: int realReadChars(char[],int,int)>($r16, 0, i17);
        if i2 >= 0 goto label6;

        goto label7;

     label6:
        $b19 = l1 cmp l0;
        if $b19 < 0 goto label2;

     label7:
        return l1;
    }

    public boolean ready() throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        $z0 = r0.<org.apache.catalina.connector.InputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        $r2 = new java.io.IOException;
        $r1 = <org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("inputBuffer.streamClosed");
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $i0 = virtualinvoke r0.<org.apache.catalina.connector.InputBuffer: int available()>();
        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean markSupported()
    {
        org.apache.catalina.connector.InputBuffer r0;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        return 1;
    }

    public void mark(int) throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.String $r3;
        org.apache.tomcat.util.buf.CharChunk $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        char[] $r8, $r12, $r15;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        i0 := @parameter0: int;
        $z0 = r0.<org.apache.catalina.connector.InputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        $r2 = new java.io.IOException;
        $r1 = <org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("inputBuffer.streamClosed");
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $r4 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i1 = virtualinvoke $r4.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        if $i1 > 0 goto label1;

        $r5 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r5.<org.apache.tomcat.util.buf.CharChunk: void setOffset(int)>(0);
        $r6 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r6.<org.apache.tomcat.util.buf.CharChunk: void setEnd(int)>(0);
        goto label2;

     label1:
        $r7 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r8 = virtualinvoke $r7.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        $i2 = lengthof $r8;
        $i3 = r0.<org.apache.catalina.connector.InputBuffer: int size>;
        $i4 = 2 * $i3;
        if $i2 <= $i4 goto label2;

        $r9 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i5 = virtualinvoke $r9.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        $r10 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i6 = virtualinvoke $r10.<org.apache.tomcat.util.buf.CharChunk: int getStart()>();
        if $i5 >= $i6 goto label2;

        $r11 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r12 = virtualinvoke $r11.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        $r13 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i7 = virtualinvoke $r13.<org.apache.tomcat.util.buf.CharChunk: int getStart()>();
        $r14 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r15 = virtualinvoke $r14.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        $r16 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i8 = virtualinvoke $r16.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, $i7, $r15, 0, $i8);
        $r17 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r18 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i9 = virtualinvoke $r18.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        virtualinvoke $r17.<org.apache.tomcat.util.buf.CharChunk: void setEnd(int)>($i9);
        $r19 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r19.<org.apache.tomcat.util.buf.CharChunk: void setOffset(int)>(0);

     label2:
        $r20 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $r21 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i10 = virtualinvoke $r21.<org.apache.tomcat.util.buf.CharChunk: int getStart()>();
        $i11 = $i10 + i0;
        $i12 = r0.<org.apache.catalina.connector.InputBuffer: int size>;
        $i13 = $i11 + $i12;
        virtualinvoke $r20.<org.apache.tomcat.util.buf.CharChunk: void setLimit(int)>($i13);
        $r22 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i14 = virtualinvoke $r22.<org.apache.tomcat.util.buf.CharChunk: int getStart()>();
        r0.<org.apache.catalina.connector.InputBuffer: int markPos> = $i14;
        return;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0;
        java.io.IOException $r2, $r5;
        java.lang.String $r3;
        int $i0, $i1, $i2;
        org.apache.tomcat.util.buf.CharChunk $r4, $r6;
        org.apache.tomcat.util.buf.ByteChunk $r7;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        $z0 = r0.<org.apache.catalina.connector.InputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        $r2 = new java.io.IOException;
        $r1 = <org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("inputBuffer.streamClosed");
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $i0 = r0.<org.apache.catalina.connector.InputBuffer: int state>;
        if $i0 != 1 goto label2;

        $i1 = r0.<org.apache.catalina.connector.InputBuffer: int markPos>;
        if $i1 >= 0 goto label1;

        $r4 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r4.<org.apache.tomcat.util.buf.CharChunk: void recycle()>();
        r0.<org.apache.catalina.connector.InputBuffer: int markPos> = -1;
        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>()>();
        throw $r5;

     label1:
        $r6 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i2 = r0.<org.apache.catalina.connector.InputBuffer: int markPos>;
        virtualinvoke $r6.<org.apache.tomcat.util.buf.CharChunk: void setOffset(int)>($i2);
        goto label3;

     label2:
        $r7 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r7.<org.apache.tomcat.util.buf.ByteChunk: void recycle()>();

     label3:
        return;
    }

    public void checkConverter() throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        $z0 = r0.<org.apache.catalina.connector.InputBuffer: boolean gotEnc>;
        if $z0 != 0 goto label0;

        virtualinvoke r0.<org.apache.catalina.connector.InputBuffer: void setConverter()>();

     label0:
        return;
    }

    protected void setConverter() throws java.io.IOException
    {
        org.apache.catalina.connector.InputBuffer r0;
        java.security.PrivilegedActionException r1, $r15;
        java.lang.Exception r2;
        org.apache.coyote.Request $r3, $r4;
        java.lang.String $r5, $r6, $r8, $r19, $r21;
        java.util.Map $r7, $r20;
        java.lang.Object $r9, $r13;
        org.apache.tomcat.util.buf.B2CConverter $r10, $r11, $r14, $r18, $r22;
        boolean $z0, $z1;
        org.apache.catalina.connector.InputBuffer$1 $r12;
        java.io.IOException $r16, $r17;

        r0 := @this: org.apache.catalina.connector.InputBuffer;
        $r3 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.coyote.Request coyoteRequest>;
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.coyote.Request coyoteRequest>;
        $r5 = virtualinvoke $r4.<org.apache.coyote.Request: java.lang.String getCharacterEncoding()>();
        r0.<org.apache.catalina.connector.InputBuffer: java.lang.String enc> = $r5;

     label0:
        r0.<org.apache.catalina.connector.InputBuffer: boolean gotEnc> = 1;
        $r6 = r0.<org.apache.catalina.connector.InputBuffer: java.lang.String enc>;
        if $r6 != null goto label1;

        r0.<org.apache.catalina.connector.InputBuffer: java.lang.String enc> = "ISO-8859-1";

     label1:
        $r7 = r0.<org.apache.catalina.connector.InputBuffer: java.util.Map encoders>;
        $r8 = r0.<org.apache.catalina.connector.InputBuffer: java.lang.String enc>;
        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);
        $r10 = (org.apache.tomcat.util.buf.B2CConverter) $r9;
        r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.B2CConverter conv> = $r10;
        $r11 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.B2CConverter conv>;
        if $r11 != null goto label8;

        $z0 = staticinvoke <org.apache.catalina.security.SecurityUtil: boolean isPackageProtectionEnabled()>();
        if $z0 == 0 goto label6;

     label2:
        $r12 = new org.apache.catalina.connector.InputBuffer$1;
        specialinvoke $r12.<org.apache.catalina.connector.InputBuffer$1: void <init>(org.apache.catalina.connector.InputBuffer)>(r0);
        $r13 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r12);
        $r14 = (org.apache.tomcat.util.buf.B2CConverter) $r13;
        r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.B2CConverter conv> = $r14;

     label3:
        goto label7;

     label4:
        $r15 := @caughtexception;
        r1 = $r15;
        r2 = virtualinvoke r1.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $z1 = r2 instanceof java.io.IOException;
        if $z1 == 0 goto label5;

        $r16 = (java.io.IOException) r2;
        throw $r16;

     label5:
        $r17 = new java.io.IOException;
        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.Throwable)>(r2);
        throw $r17;

     label6:
        $r18 = new org.apache.tomcat.util.buf.B2CConverter;
        $r19 = r0.<org.apache.catalina.connector.InputBuffer: java.lang.String enc>;
        specialinvoke $r18.<org.apache.tomcat.util.buf.B2CConverter: void <init>(java.lang.String)>($r19);
        r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.B2CConverter conv> = $r18;

     label7:
        $r20 = r0.<org.apache.catalina.connector.InputBuffer: java.util.Map encoders>;
        $r21 = r0.<org.apache.catalina.connector.InputBuffer: java.lang.String enc>;
        $r22 = r0.<org.apache.catalina.connector.InputBuffer: org.apache.tomcat.util.buf.B2CConverter conv>;
        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

     label8:
        return;

        catch java.security.PrivilegedActionException from label2 to label3 with label4;
    }

    static java.lang.String access$0(org.apache.catalina.connector.InputBuffer)
    {
        org.apache.catalina.connector.InputBuffer r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.catalina.connector.InputBuffer;
        $r1 = r0.<org.apache.catalina.connector.InputBuffer: java.lang.String enc>;
        return $r1;
    }
}
