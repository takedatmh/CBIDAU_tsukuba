public class org.apache.coyote.ajp.AjpMessage extends java.lang.Object
{
    private static final org.apache.juli.logging.Log log;
    protected static final org.apache.tomcat.util.res.StringManager sm;
    protected byte[] buf;
    protected int pos;
    protected int len;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        org.apache.tomcat.util.res.StringManager $r1;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/coyote/ajp/AjpMessage");
        <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log> = $r0;
        $r1 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.coyote.ajp");
        <org.apache.coyote.ajp.AjpMessage: org.apache.tomcat.util.res.StringManager sm> = $r1;
        return;
    }

    public void <init>(int)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        int i0;
        byte[] $r1;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf> = null;
        $r1 = newarray (byte)[i0];
        r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf> = $r1;
        return;
    }

    public void reset()
    {
        org.apache.coyote.ajp.AjpMessage r0;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        r0.<org.apache.coyote.ajp.AjpMessage: int len> = 4;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = 4;
        return;
    }

    public void end()
    {
        org.apache.coyote.ajp.AjpMessage r0;
        int i0, $i1, $i2, $i3, $i4, $i6;
        byte[] $r1, $r2, $r3, $r4;
        byte $b5, $b7;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        $i1 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        r0.<org.apache.coyote.ajp.AjpMessage: int len> = $i1;
        $i2 = r0.<org.apache.coyote.ajp.AjpMessage: int len>;
        i0 = $i2 - 4;
        $r1 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $r1[0] = 65;
        $r2 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $r2[1] = 66;
        $r3 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i3 = i0 >>> 8;
        $i4 = $i3 & 255;
        $b5 = (byte) $i4;
        $r3[2] = $b5;
        $r4 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i6 = i0 & 255;
        $b7 = (byte) $i6;
        $r4[3] = $b7;
        return;
    }

    public byte[] getBuffer()
    {
        org.apache.coyote.ajp.AjpMessage r0;
        byte[] $r1;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        $r1 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        return $r1;
    }

    public int getLen()
    {
        org.apache.coyote.ajp.AjpMessage r0;
        int $i0;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        $i0 = r0.<org.apache.coyote.ajp.AjpMessage: int len>;
        return $i0;
    }

    public void appendInt(int)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8;
        byte[] $r2, $r3;
        byte $b5, $b9;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        i0 := @parameter0: int;
        $r2 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i1 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i2 = $i1 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i2;
        $i3 = i0 >>> 8;
        $i4 = $i3 & 255;
        $b5 = (byte) $i4;
        $r2[$i1] = $b5;
        $r3 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i6 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i7 = $i6 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i7;
        $i8 = i0 & 255;
        $b9 = (byte) $i8;
        $r3[$i6] = $b9;
        return;
    }

    public void appendByte(int)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        int i0, $i1, $i2;
        byte[] $r2;
        byte $b3;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        i0 := @parameter0: int;
        $r2 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i1 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i2 = $i1 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i2;
        $b3 = (byte) i0;
        $r2[$i1] = $b3;
        return;
    }

    public void appendBytes(org.apache.tomcat.util.buf.MessageBytes)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        org.apache.tomcat.util.buf.MessageBytes r1;
        org.apache.tomcat.util.res.StringManager $r2;
        org.apache.tomcat.util.buf.ByteChunk r3;
        org.apache.juli.logging.Log $r4;
        java.lang.String $r5, $r8;
        java.lang.NullPointerException $r6;
        int $i0, $i1;
        org.apache.tomcat.util.buf.CharChunk r7;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        if r1 != null goto label0;

        $r4 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $r2 = <org.apache.coyote.ajp.AjpMessage: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("ajpmessage.null");
        $r6 = new java.lang.NullPointerException;
        specialinvoke $r6.<java.lang.NullPointerException: void <init>()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r5, $r6);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendInt(int)>(0);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendByte(int)>(0);
        return;

     label0:
        $i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: int getType()>();
        if $i0 != 2 goto label1;

        r3 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.ByteChunk getByteChunk()>();
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendByteChunk(org.apache.tomcat.util.buf.ByteChunk)>(r3);
        goto label3;

     label1:
        $i1 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: int getType()>();
        if $i1 != 3 goto label2;

        r7 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk getCharChunk()>();
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendCharChunk(org.apache.tomcat.util.buf.CharChunk)>(r7);
        goto label3;

     label2:
        $r8 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendString(java.lang.String)>($r8);

     label3:
        return;
    }

    public void appendByteChunk(org.apache.tomcat.util.buf.ByteChunk)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        org.apache.tomcat.util.buf.ByteChunk r1;
        org.apache.tomcat.util.res.StringManager $r2;
        org.apache.juli.logging.Log $r3;
        java.lang.String $r4;
        java.lang.NullPointerException $r5;
        byte[] $r6;
        int $i0, $i1;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        r1 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        if r1 != null goto label0;

        $r3 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $r2 = <org.apache.coyote.ajp.AjpMessage: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("ajpmessage.null");
        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();
        interfaceinvoke $r3.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r4, $r5);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendInt(int)>(0);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendByte(int)>(0);
        return;

     label0:
        $r6 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBytes()>();
        $i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getStart()>();
        $i1 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendBytes(byte[],int,int)>($r6, $i0, $i1);
        return;
    }

    public void appendCharChunk(org.apache.tomcat.util.buf.CharChunk)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        org.apache.tomcat.util.buf.CharChunk r1;
        org.apache.tomcat.util.res.StringManager $r2;
        int i0, i1, i2, $i4;
        char[] r3;
        char c3;
        org.apache.juli.logging.Log $r4;
        java.lang.String $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        r1 := @parameter0: org.apache.tomcat.util.buf.CharChunk;
        if r1 != null goto label0;

        $r4 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $r2 = <org.apache.coyote.ajp.AjpMessage: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("ajpmessage.null");
        $r6 = new java.lang.NullPointerException;
        specialinvoke $r6.<java.lang.NullPointerException: void <init>()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r5, $r6);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendInt(int)>(0);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendByte(int)>(0);
        return;

     label0:
        i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.CharChunk: int getStart()>();
        i1 = virtualinvoke r1.<org.apache.tomcat.util.buf.CharChunk: int getEnd()>();
        $i4 = i1 - i0;
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendInt(int)>($i4);
        r3 = virtualinvoke r1.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        i2 = i0;
        goto label5;

     label1:
        c3 = r3[i2];
        if c3 > 31 goto label2;

        if c3 != 9 goto label3;

     label2:
        if c3 == 127 goto label3;

        if c3 <= 255 goto label4;

     label3:
        c3 = 32;

     label4:
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendByte(int)>(c3);
        i2 = i2 + 1;

     label5:
        if i2 < i1 goto label1;

        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendByte(int)>(0);
        return;
    }

    public void appendString(java.lang.String)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        java.lang.String r1, $r4;
        org.apache.tomcat.util.res.StringManager $r2;
        int i0, i1;
        char c2;
        org.apache.juli.logging.Log $r3;
        java.lang.NullPointerException $r5;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r3 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $r2 = <org.apache.coyote.ajp.AjpMessage: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("ajpmessage.null");
        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();
        interfaceinvoke $r3.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r4, $r5);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendInt(int)>(0);
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendByte(int)>(0);
        return;

     label0:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendInt(int)>(i0);
        i1 = 0;
        goto label5;

     label1:
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        if c2 > 31 goto label2;

        if c2 != 9 goto label3;

     label2:
        if c2 == 127 goto label3;

        if c2 <= 255 goto label4;

     label3:
        c2 = 32;

     label4:
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendByte(int)>(c2);
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label1;

        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendByte(int)>(0);
        return;
    }

    public void appendBytes(byte[], int, int)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        byte[] r1, $r3, $r15;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.StringBuilder $r2, $r7, $r9, $r10;
        org.apache.juli.logging.Log $r4, $r14;
        org.apache.tomcat.util.res.StringManager $r5;
        java.lang.Object[] $r6;
        java.lang.String $r8, $r11, $r12;
        java.lang.ArrayIndexOutOfBoundsException $r13;
        boolean $z0;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i2 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i3 = $i2 + i1;
        $i4 = $i3 + 3;
        $r3 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i5 = lengthof $r3;
        if $i4 <= $i5 goto label1;

        $r4 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $r5 = <org.apache.coyote.ajp.AjpMessage: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = newarray (java.lang.Object)[2];
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $r6[0] = $r8;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $i6 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        $r6[1] = $r11;
        $r12 = virtualinvoke $r5.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("ajpmessage.overflow", $r6);
        $r13 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r13.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r12, $r13);
        $r14 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r14.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void dump(java.lang.String)>("Overflow/coBytes");

     label0:
        return;

     label1:
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendInt(int)>(i1);
        $r15 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i7 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r15, $i7, i1);
        $i8 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i9 = $i8 + i1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i9;
        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void appendByte(int)>(0);
        return;
    }

    public int getInt()
    {
        org.apache.coyote.ajp.AjpMessage r0;
        int $i0, $i3, $i5, $i6, $i8, $i9, $i10;
        short s1, s2;
        byte[] $r2, $r3;
        byte $b4, $b7;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        $r2 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i0 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i3 = $i0 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i3;
        $b4 = $r2[$i0];
        s1 = $b4 & 255;
        $r3 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i5 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i6 = $i5 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i6;
        $b7 = $r3[$i5];
        s2 = $b7 & 255;
        $i8 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        specialinvoke r0.<org.apache.coyote.ajp.AjpMessage: void validatePos(int)>($i8);
        $i9 = s1 << 8;
        $i10 = $i9 + s2;
        return $i10;
    }

    public int peekInt()
    {
        org.apache.coyote.ajp.AjpMessage r0;
        short s0, s1;
        int $i2, $i3, $i4, $i6, $i7, $i9, $i10;
        byte[] $r1, $r2;
        byte $b5, $b8;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        $i2 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i3 = $i2 + 2;
        specialinvoke r0.<org.apache.coyote.ajp.AjpMessage: void validatePos(int)>($i3);
        $r1 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i4 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $b5 = $r1[$i4];
        s0 = $b5 & 255;
        $r2 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i6 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i7 = $i6 + 1;
        $b8 = $r2[$i7];
        s1 = $b8 & 255;
        $i9 = s0 << 8;
        $i10 = $i9 + s1;
        return $i10;
    }

    public byte getByte()
    {
        org.apache.coyote.ajp.AjpMessage r0;
        int $i0, $i2, $i3;
        byte b1;
        byte[] $r2;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        $r2 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i0 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i2 = $i0 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i2;
        b1 = $r2[$i0];
        $i3 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        specialinvoke r0.<org.apache.coyote.ajp.AjpMessage: void validatePos(int)>($i3);
        return b1;
    }

    public void getBytes(org.apache.tomcat.util.buf.MessageBytes)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        org.apache.tomcat.util.buf.MessageBytes r1;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        specialinvoke r0.<org.apache.coyote.ajp.AjpMessage: void doGetBytes(org.apache.tomcat.util.buf.MessageBytes,boolean)>(r1, 1);
        return;
    }

    public void getBodyBytes(org.apache.tomcat.util.buf.MessageBytes)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        org.apache.tomcat.util.buf.MessageBytes r1;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        specialinvoke r0.<org.apache.coyote.ajp.AjpMessage: void doGetBytes(org.apache.tomcat.util.buf.MessageBytes,boolean)>(r1, 0);
        return;
    }

    private void doGetBytes(org.apache.tomcat.util.buf.MessageBytes, boolean)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        org.apache.tomcat.util.buf.MessageBytes r1;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        byte[] $r2;
        org.apache.tomcat.util.buf.CharChunk $r3;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        r1 := @parameter0: org.apache.tomcat.util.buf.MessageBytes;
        z0 := @parameter1: boolean;
        i0 = virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: int getInt()>();
        if i0 == 65535 goto label0;

        if i0 != -1 goto label1;

     label0:
        virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: void recycle()>();
        return;

     label1:
        if z0 == 0 goto label2;

        $i1 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i2 = $i1 + i0;
        $i3 = $i2 + 1;
        specialinvoke r0.<org.apache.coyote.ajp.AjpMessage: void validatePos(int)>($i3);
        goto label3;

     label2:
        $i4 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i5 = $i4 + i0;
        specialinvoke r0.<org.apache.coyote.ajp.AjpMessage: void validatePos(int)>($i5);

     label3:
        $r2 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i6 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: void setBytes(byte[],int,int)>($r2, $i6, i0);
        $r3 = virtualinvoke r1.<org.apache.tomcat.util.buf.MessageBytes: org.apache.tomcat.util.buf.CharChunk getCharChunk()>();
        virtualinvoke $r3.<org.apache.tomcat.util.buf.CharChunk: void recycle()>();
        $i7 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i8 = $i7 + i0;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i8;
        if z0 == 0 goto label4;

        $i9 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i10 = $i9 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i10;

     label4:
        return;
    }

    public int getLongInt()
    {
        org.apache.coyote.ajp.AjpMessage r0;
        int $i0, $i2, i4, $i5, $i6, i9, i10, $i11, $i12, i15, i16, $i17, $i18, i21, $i22;
        short s1, $s8, $s14, $s20;
        byte[] $r2, $r3, $r5, $r7;
        byte $b3, $b7, $b13, $b19;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        $r2 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i0 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i2 = $i0 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i2;
        $b3 = $r2[$i0];
        s1 = $b3 & 255;
        i4 = s1 << 8;
        $r3 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i5 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i6 = $i5 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i6;
        $b7 = $r3[$i5];
        $s8 = $b7 & 255;
        i9 = i4 | $s8;
        i10 = i9 << 8;
        $r5 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i11 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i12 = $i11 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i12;
        $b13 = $r5[$i11];
        $s14 = $b13 & 255;
        i15 = i10 | $s14;
        i16 = i15 << 8;
        $r7 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i17 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i18 = $i17 + 1;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = $i18;
        $b19 = $r7[$i17];
        $s20 = $b19 & 255;
        i21 = i16 | $s20;
        $i22 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        specialinvoke r0.<org.apache.coyote.ajp.AjpMessage: void validatePos(int)>($i22);
        return i21;
    }

    public int getHeaderLength()
    {
        org.apache.coyote.ajp.AjpMessage r0;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        return 4;
    }

    public int getPacketSize()
    {
        org.apache.coyote.ajp.AjpMessage r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        $r1 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i0 = lengthof $r1;
        return $i0;
    }

    public int processHeader()
    {
        org.apache.coyote.ajp.AjpMessage r0;
        int $i0;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        $i0 = virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: int processHeader(boolean)>(1);
        return $i0;
    }

    public int processHeader(boolean)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i4;
        java.lang.StringBuilder $r1, $r5, $r11, $r12, $r13, $r15;
        org.apache.juli.logging.Log $r2, $r8, $r9, $r10;
        org.apache.tomcat.util.res.StringManager $r3;
        java.lang.Object[] $r4;
        java.lang.String $r6, $r7, $r16;
        byte[] $r14;
        byte $b3;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        z0 := @parameter0: boolean;
        r0.<org.apache.coyote.ajp.AjpMessage: int pos> = 0;
        i0 = virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: int getInt()>();
        $i1 = virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: int getInt()>();
        r0.<org.apache.coyote.ajp.AjpMessage: int len> = $i1;
        if z0 == 0 goto label0;

        if i0 != 4660 goto label1;

     label0:
        if z0 != 0 goto label3;

        if i0 == 16706 goto label3;

     label1:
        $r2 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $r3 = <org.apache.coyote.ajp.AjpMessage: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = newarray (java.lang.Object)[1];
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $r4[0] = $r6;
        $r7 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("ajpmessage.invalid", $r4);
        interfaceinvoke $r2.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r8.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.coyote.ajp.AjpMessage: void dump(java.lang.String)>("In: ");

     label2:
        return -1;

     label3:
        $r9 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label4;

        $r10 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Received ");
        $i2 = r0.<org.apache.coyote.ajp.AjpMessage: int len>;
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r14 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $b3 = $r14[0];
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b3);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r16);

     label4:
        $i4 = r0.<org.apache.coyote.ajp.AjpMessage: int len>;
        return $i4;
    }

    public void dump(java.lang.String)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        java.lang.String r1, $r5, $r8, $r14, $r18;
        org.apache.juli.logging.Log $r2, $r4, $r15, $r16;
        java.lang.StringBuilder $r3, $r6, $r9, $r10, $r11, $r12, $r13;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1;
        byte[] $r7, $r17;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $r3 = new java.lang.StringBuilder;
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r7 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $r8 = staticinvoke <org.apache.tomcat.util.buf.HexUtils: java.lang.String toHexString(byte[])>($r7);
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $i2 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $i3 = r0.<org.apache.coyote.ajp.AjpMessage: int len>;
        $i4 = $i3 + 4;
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r14);

     label0:
        i0 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        $i5 = r0.<org.apache.coyote.ajp.AjpMessage: int len>;
        $i6 = $i5 + 4;
        $i7 = r0.<org.apache.coyote.ajp.AjpMessage: int pos>;
        if $i6 <= $i7 goto label1;

        $i8 = r0.<org.apache.coyote.ajp.AjpMessage: int len>;
        i0 = $i8 + 4;

     label1:
        if i0 <= 1000 goto label2;

        i0 = 1000;

     label2:
        $r15 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r15.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label5;

        i1 = 0;
        goto label4;

     label3:
        $r16 = <org.apache.coyote.ajp.AjpMessage: org.apache.juli.logging.Log log>;
        $r17 = r0.<org.apache.coyote.ajp.AjpMessage: byte[] buf>;
        $i9 = r0.<org.apache.coyote.ajp.AjpMessage: int len>;
        $r18 = staticinvoke <org.apache.coyote.ajp.AjpMessage: java.lang.String hexLine(byte[],int,int)>($r17, i1, $i9);
        interfaceinvoke $r16.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r18);
        i1 = i1 + 16;

     label4:
        if i1 < i0 goto label3;

     label5:
        return;
    }

    private void validatePos(int)
    {
        org.apache.coyote.ajp.AjpMessage r0;
        int i0, $i1, $i2;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        org.apache.tomcat.util.res.StringManager $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.coyote.ajp.AjpMessage;
        i0 := @parameter0: int;
        $i1 = r0.<org.apache.coyote.ajp.AjpMessage: int len>;
        $i2 = $i1 + 4;
        if i0 <= $i2 goto label0;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;
        $r2 = <org.apache.coyote.ajp.AjpMessage: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = newarray (java.lang.Object)[1];
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r3[0] = $r4;
        $r5 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("ajpMessage.invalidPos", $r3);
        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r5);
        throw $r1;

     label0:
        return;
    }

    protected static java.lang.String hexLine(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i3, $i5, i6, $i11, $i12;
        java.lang.StringBuilder $r1, r2, $r3, $r6;
        byte $b4, $b7, $b9;
        java.lang.String $r4, $r5, $r7, $r14;
        char $c8, $c10;
        boolean $z0;
        java.lang.Character $r11;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        i2 = i0;
        goto label3;

     label0:
        $i3 = i1 + 4;
        if i2 >= $i3 goto label1;

        $r3 = new java.lang.StringBuilder;
        $b4 = r0[i2];
        $r4 = staticinvoke <org.apache.coyote.ajp.AjpMessage: java.lang.String hex(int)>($b4);
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        goto label2;

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

     label2:
        i2 = i2 + 1;

     label3:
        $i5 = i0 + 16;
        if i2 < $i5 goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");
        i6 = i0;
        goto label7;

     label4:
        $b7 = r0[i6];
        $c8 = (char) $b7;
        $z0 = staticinvoke <java.lang.Character: boolean isISOControl(char)>($c8);
        if $z0 != 0 goto label5;

        $b9 = r0[i6];
        $c10 = (char) $b9;
        $r11 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c10);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);
        goto label6;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label6:
        i6 = i6 + 1;

     label7:
        $i11 = i0 + 16;
        if i6 >= $i11 goto label8;

        $i12 = i1 + 4;
        if i6 < $i12 goto label4;

     label8:
        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r14;
    }

    protected static java.lang.String hex(int)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String r0, $r3;
        java.lang.StringBuilder $r1, $r2;

        i0 := @parameter0: int;
        r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 != 1 goto label0;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        $i3 = $i2 - 2;
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);
        return $r3;
    }
}
