public abstract class sun.misc.Resource extends java.lang.Object
{
    private java.io.InputStream cis;

    public void <init>()
    {
        sun.misc.Resource r0;

        r0 := @this: sun.misc.Resource;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public abstract java.lang.String getName();

    public abstract java.net.URL getURL();

    public abstract java.net.URL getCodeSourceURL();

    public abstract java.io.InputStream getInputStream() throws java.io.IOException;

    public abstract int getContentLength() throws java.io.IOException;

    private synchronized java.io.InputStream cachedInputStream() throws java.io.IOException
    {
        sun.misc.Resource r0;
        java.io.InputStream $r1, $r2, $r3;

        r0 := @this: sun.misc.Resource;
        $r1 = r0.<sun.misc.Resource: java.io.InputStream cis>;
        if $r1 != null goto label0;

        $r2 = virtualinvoke r0.<sun.misc.Resource: java.io.InputStream getInputStream()>();
        r0.<sun.misc.Resource: java.io.InputStream cis> = $r2;

     label0:
        $r3 = r0.<sun.misc.Resource: java.io.InputStream cis>;
        return $r3;
    }

    public byte[] getBytes() throws java.io.IOException
    {
        sun.misc.Resource r0;
        java.io.InputStream r1;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.io.InterruptedIOException r2, r4, r6, $r7, $r8, $r10, r11, $r16;
        byte[] r3;
        java.lang.Throwable r5, $r15;
        java.io.EOFException $r9;
        java.io.IOException $r12, r13, $r17, r18;
        java.lang.Thread $r14, $r19;

        r0 := @this: sun.misc.Resource;
        r1 = specialinvoke r0.<sun.misc.Resource: java.io.InputStream cachedInputStream()>();
        z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

     label0:
        i0 = virtualinvoke r0.<sun.misc.Resource: int getContentLength()>();

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r2 = $r7;
        staticinvoke <java.lang.Thread: boolean interrupted()>();
        z0 = 1;
        goto label0;

     label3:
        r3 = newarray (byte)[0];
        if i0 != -1 goto label4;

        i0 = 2147483647;

     label4:
        i3 = 0;

     label5:
        if i3 >= i0 goto label14;

        $i4 = lengthof r3;
        if i3 < $i4 goto label6;

        $i5 = i0 - i3;
        $i6 = lengthof r3;
        $i7 = $i6 + 1024;
        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i7);
        $i8 = lengthof r3;
        $i9 = i3 + i1;
        if $i8 >= $i9 goto label7;

        $i10 = i3 + i1;
        r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r3, $i10);
        goto label7;

     label6:
        $i11 = lengthof r3;
        i1 = $i11 - i3;

     label7:
        i2 = 0;

     label8:
        i2 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r3, i3, i1);

     label9:
        goto label11;

     label10:
        $r8 := @caughtexception;
        r4 = $r8;
        staticinvoke <java.lang.Thread: boolean interrupted()>();
        z0 = 1;

     label11:
        if i2 >= 0 goto label13;

        if i0 == 2147483647 goto label12;

        $r9 = new java.io.EOFException;
        specialinvoke $r9.<java.io.EOFException: void <init>(java.lang.String)>("Detect premature EOF");
        throw $r9;

     label12:
        $i12 = lengthof r3;
        if $i12 == i3 goto label14;

        r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r3, i3);
        goto label14;

     label13:
        i3 = i3 + i2;
        goto label5;

     label14:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label15:
        goto label18;

     label16:
        $r10 := @caughtexception;
        r11 = $r10;
        z0 = 1;
        goto label18;

     label17:
        $r12 := @caughtexception;
        r13 = $r12;

     label18:
        if z0 == 0 goto label27;

        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r14.<java.lang.Thread: void interrupt()>();
        goto label27;

     label19:
        $r15 := @caughtexception;

     label20:
        r5 = $r15;

     label21:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label22:
        goto label25;

     label23:
        $r16 := @caughtexception;
        r6 = $r16;
        z0 = 1;
        goto label25;

     label24:
        $r17 := @caughtexception;
        r18 = $r17;

     label25:
        if z0 == 0 goto label26;

        $r19 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r19.<java.lang.Thread: void interrupt()>();

     label26:
        throw r5;

     label27:
        return r3;

        catch java.io.InterruptedIOException from label0 to label1 with label2;
        catch java.io.InterruptedIOException from label8 to label9 with label10;
        catch java.io.InterruptedIOException from label14 to label15 with label16;
        catch java.io.IOException from label14 to label15 with label17;
        catch java.lang.Throwable from label3 to label14 with label19;
        catch java.io.InterruptedIOException from label21 to label22 with label23;
        catch java.io.IOException from label21 to label22 with label24;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public java.nio.ByteBuffer getByteBuffer() throws java.io.IOException
    {
        sun.misc.Resource r0;
        java.io.InputStream r1;
        boolean $z0;
        sun.nio.ByteBuffered $r2;
        java.nio.ByteBuffer $r3;

        r0 := @this: sun.misc.Resource;
        r1 = specialinvoke r0.<sun.misc.Resource: java.io.InputStream cachedInputStream()>();
        $z0 = r1 instanceof sun.nio.ByteBuffered;
        if $z0 == 0 goto label0;

        $r2 = (sun.nio.ByteBuffered) r1;
        $r3 = interfaceinvoke $r2.<sun.nio.ByteBuffered: java.nio.ByteBuffer getByteBuffer()>();
        return $r3;

     label0:
        return null;
    }

    public java.util.jar.Manifest getManifest() throws java.io.IOException
    {
        sun.misc.Resource r0;

        r0 := @this: sun.misc.Resource;
        return null;
    }

    public java.security.cert.Certificate[] getCertificates()
    {
        sun.misc.Resource r0;

        r0 := @this: sun.misc.Resource;
        return null;
    }

    public java.security.CodeSigner[] getCodeSigners()
    {
        sun.misc.Resource r0;

        r0 := @this: sun.misc.Resource;
        return null;
    }
}
