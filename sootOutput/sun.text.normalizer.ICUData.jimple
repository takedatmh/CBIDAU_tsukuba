public final class sun.text.normalizer.ICUData extends java.lang.Object
{

    public void <init>()
    {
        sun.text.normalizer.ICUData r0;

        r0 := @this: sun.text.normalizer.ICUData;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static java.io.InputStream getStream(java.lang.Class, java.lang.String, boolean)
    {
        java.lang.Class r0;
        java.lang.String r1, $r8;
        boolean z0;
        null_type n0;
        java.lang.SecurityManager $r2;
        sun.text.normalizer.ICUData$1 $r3;
        java.lang.Object $r4;
        java.io.InputStream r5;
        java.util.MissingResourceException $r6;
        java.lang.Package $r7;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        n0 = null;
        $r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if $r2 == null goto label0;

        $r3 = new sun.text.normalizer.ICUData$1;
        specialinvoke $r3.<sun.text.normalizer.ICUData$1: void <init>(java.lang.Class,java.lang.String)>(r0, r1);
        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);
        r5 = (java.io.InputStream) $r4;
        goto label1;

     label0:
        r5 = virtualinvoke r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label1:
        if r5 != null goto label2;

        if z0 == 0 goto label2;

        $r6 = new java.util.MissingResourceException;
        $r7 = virtualinvoke r0.<java.lang.Class: java.lang.Package getPackage()>();
        $r8 = virtualinvoke $r7.<java.lang.Package: java.lang.String getName()>();
        specialinvoke $r6.<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>("could not locate data", $r8, r1);
        throw $r6;

     label2:
        return r5;
    }

    public static java.io.InputStream getStream(java.lang.String)
    {
        java.lang.String r0;
        java.io.InputStream $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <sun.text.normalizer.ICUData: java.io.InputStream getStream(java.lang.Class,java.lang.String,boolean)>(class "sun/text/normalizer/ICUData", r0, 0);
        return $r1;
    }

    public static java.io.InputStream getRequiredStream(java.lang.String)
    {
        java.lang.String r0;
        java.io.InputStream $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <sun.text.normalizer.ICUData: java.io.InputStream getStream(java.lang.Class,java.lang.String,boolean)>(class "sun/text/normalizer/ICUData", r0, 1);
        return $r1;
    }
}
