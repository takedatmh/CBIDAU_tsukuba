public interface  java.io.ObjectStreamConstants extends java.lang.Object
{
    public static final short STREAM_MAGIC;
    public static final short STREAM_VERSION;
    public static final byte TC_BASE;
    public static final byte TC_NULL;
    public static final byte TC_REFERENCE;
    public static final byte TC_CLASSDESC;
    public static final byte TC_OBJECT;
    public static final byte TC_STRING;
    public static final byte TC_ARRAY;
    public static final byte TC_CLASS;
    public static final byte TC_BLOCKDATA;
    public static final byte TC_ENDBLOCKDATA;
    public static final byte TC_RESET;
    public static final byte TC_BLOCKDATALONG;
    public static final byte TC_EXCEPTION;
    public static final byte TC_LONGSTRING;
    public static final byte TC_PROXYCLASSDESC;
    public static final byte TC_ENUM;
    public static final byte TC_MAX;
    public static final int baseWireHandle;
    public static final byte SC_WRITE_METHOD;
    public static final byte SC_BLOCK_DATA;
    public static final byte SC_SERIALIZABLE;
    public static final byte SC_EXTERNALIZABLE;
    public static final byte SC_ENUM;
    public static final java.io.SerializablePermission SUBSTITUTION_PERMISSION;
    public static final java.io.SerializablePermission SUBCLASS_IMPLEMENTATION_PERMISSION;
    public static final int PROTOCOL_VERSION_1;
    public static final int PROTOCOL_VERSION_2;

    static void <clinit>()
    {
        java.io.SerializablePermission $r0, $r1;

        $r0 = new java.io.SerializablePermission;
        specialinvoke $r0.<java.io.SerializablePermission: void <init>(java.lang.String)>("enableSubstitution");
        <java.io.ObjectStreamConstants: java.io.SerializablePermission SUBSTITUTION_PERMISSION> = $r0;
        $r1 = new java.io.SerializablePermission;
        specialinvoke $r1.<java.io.SerializablePermission: void <init>(java.lang.String)>("enableSubclassImplementation");
        <java.io.ObjectStreamConstants: java.io.SerializablePermission SUBCLASS_IMPLEMENTATION_PERMISSION> = $r1;
        return;
    }
}
