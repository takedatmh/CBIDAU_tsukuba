public class org.apache.tomcat.util.http.fileupload.FileUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.tomcat.util.http.fileupload.FileUtils r0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.FileUtils;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void deleteDirectory(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.io.IOException $r5;

        r0 := @parameter0: java.io.File;
        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();
        if $z0 != 0 goto label0;

        return;

     label0:
        $z1 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUtils: boolean isSymlink(java.io.File)>(r0);
        if $z1 != 0 goto label1;

        staticinvoke <org.apache.tomcat.util.http.fileupload.FileUtils: void cleanDirectory(java.io.File)>(r0);

     label1:
        $z2 = virtualinvoke r0.<java.io.File: boolean delete()>();
        if $z2 != 0 goto label2;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to delete directory ");
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>(r1);
        throw $r5;

     label2:
        return;
    }

    public static void cleanDirectory(java.io.File) throws java.io.IOException
    {
        java.io.File r0, r4;
        java.lang.String r1, r13, $r19;
        java.io.IOException r2, r5, $r16, $r21;
        java.io.File[] r3, r15;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r12, $r17, $r18;
        java.lang.IllegalArgumentException $r9, $r14;

        r0 := @parameter0: java.io.File;
        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();
        if $z0 != 0 goto label0;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");
        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = new java.lang.IllegalArgumentException;
        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);
        throw $r9;

     label0:
        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();
        if $z1 != 0 goto label1;

        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a directory");
        r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        $r14 = new java.lang.IllegalArgumentException;
        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r13);
        throw $r14;

     label1:
        r15 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();
        if r15 != null goto label2;

        $r16 = new java.io.IOException;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to list contents of ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r19);
        throw $r16;

     label2:
        r2 = null;
        r3 = r15;
        i0 = lengthof r15;
        i1 = 0;
        goto label8;

     label3:
        r4 = r3[i1];

     label4:
        staticinvoke <org.apache.tomcat.util.http.fileupload.FileUtils: void forceDelete(java.io.File)>(r4);

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;
        r5 = $r21;
        r2 = r5;

     label7:
        i1 = i1 + 1;

     label8:
        if i1 < i0 goto label3;

        if r2 == null goto label9;

        throw r2;

     label9:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public static void forceDelete(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1, $r4, $r6, $r7;
        java.lang.String r2, $r5;
        java.io.FileNotFoundException $r3;
        java.io.IOException $r8;

        r0 := @parameter0: java.io.File;
        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();
        if $z1 == 0 goto label0;

        staticinvoke <org.apache.tomcat.util.http.fileupload.FileUtils: void deleteDirectory(java.io.File)>(r0);
        goto label2;

     label0:
        z0 = virtualinvoke r0.<java.io.File: boolean exists()>();
        $z2 = virtualinvoke r0.<java.io.File: boolean delete()>();
        if $z2 != 0 goto label2;

        if z0 != 0 goto label1;

        $r3 = new java.io.FileNotFoundException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("File does not exist: ");
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r5);
        throw $r3;

     label1:
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to delete file: ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $r8 = new java.io.IOException;
        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>(r2);
        throw $r8;

     label2:
        return;
    }

    public static void forceDeleteOnExit(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        boolean $z0;

        r0 := @parameter0: java.io.File;
        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();
        if $z0 == 0 goto label0;

        staticinvoke <org.apache.tomcat.util.http.fileupload.FileUtils: void deleteDirectoryOnExit(java.io.File)>(r0);
        goto label1;

     label0:
        virtualinvoke r0.<java.io.File: void deleteOnExit()>();

     label1:
        return;
    }

    private static void deleteDirectoryOnExit(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.io.File;
        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();
        if $z0 != 0 goto label0;

        return;

     label0:
        virtualinvoke r0.<java.io.File: void deleteOnExit()>();
        $z1 = staticinvoke <org.apache.tomcat.util.http.fileupload.FileUtils: boolean isSymlink(java.io.File)>(r0);
        if $z1 != 0 goto label1;

        staticinvoke <org.apache.tomcat.util.http.fileupload.FileUtils: void cleanDirectoryOnExit(java.io.File)>(r0);

     label1:
        return;
    }

    private static void cleanDirectoryOnExit(java.io.File) throws java.io.IOException
    {
        java.io.File r0, r4;
        java.lang.String r1, r13, $r19;
        java.io.IOException r2, r5, $r16, $r21;
        java.io.File[] r3, r15;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r12, $r17, $r18;
        java.lang.IllegalArgumentException $r9, $r14;

        r0 := @parameter0: java.io.File;
        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();
        if $z0 != 0 goto label0;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");
        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = new java.lang.IllegalArgumentException;
        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);
        throw $r9;

     label0:
        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();
        if $z1 != 0 goto label1;

        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a directory");
        r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        $r14 = new java.lang.IllegalArgumentException;
        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r13);
        throw $r14;

     label1:
        r15 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();
        if r15 != null goto label2;

        $r16 = new java.io.IOException;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to list contents of ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r19);
        throw $r16;

     label2:
        r2 = null;
        r3 = r15;
        i0 = lengthof r15;
        i1 = 0;
        goto label8;

     label3:
        r4 = r3[i1];

     label4:
        staticinvoke <org.apache.tomcat.util.http.fileupload.FileUtils: void forceDeleteOnExit(java.io.File)>(r4);

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;
        r5 = $r21;
        r2 = r5;

     label7:
        i1 = i1 + 1;

     label8:
        if i1 < i0 goto label3;

        if r2 == null goto label9;

        throw r2;

     label9:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public static void forceMkdir(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        java.lang.String r1, r9;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8;
        java.io.IOException $r6, $r10;

        r0 := @parameter0: java.io.File;
        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label0;

        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();
        if $z1 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("File ");
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exists and is ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a directory. Unable to create directory.");
        r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $r6 = new java.io.IOException;
        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>(r1);
        throw $r6;

     label0:
        $z2 = virtualinvoke r0.<java.io.File: boolean mkdirs()>();
        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();
        if $z3 != 0 goto label1;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to create directory ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r10 = new java.io.IOException;
        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>(r9);
        throw $r10;

     label1:
        return;
    }

    public static void forceMkdirParent(java.io.File) throws java.io.IOException
    {
        java.io.File r0, r1;

        r0 := @parameter0: java.io.File;
        r1 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();
        if r1 != null goto label0;

        return;

     label0:
        staticinvoke <org.apache.tomcat.util.http.fileupload.FileUtils: void forceMkdir(java.io.File)>(r1);
        return;
    }

    public static boolean isSymlink(java.io.File) throws java.io.IOException
    {
        java.io.File r0, r1, r4, $r5, $r6, $r8, $r9;
        null_type n0;
        java.lang.NullPointerException $r2;
        char $c0;
        java.lang.String $r3, $r7;
        boolean $z0;

        r0 := @parameter0: java.io.File;
        if r0 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("File must not be null");
        throw $r2;

     label0:
        $c0 = <java.io.File: char separatorChar>;
        if $c0 != 92 goto label1;

        return 0;

     label1:
        n0 = null;
        $r3 = virtualinvoke r0.<java.io.File: java.lang.String getParent()>();
        if $r3 != null goto label2;

        r4 = r0;
        goto label3;

     label2:
        $r5 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();
        r1 = virtualinvoke $r5.<java.io.File: java.io.File getCanonicalFile()>();
        $r6 = new java.io.File;
        $r7 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();
        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r7);
        r4 = $r6;

     label3:
        $r8 = virtualinvoke r4.<java.io.File: java.io.File getCanonicalFile()>();
        $r9 = virtualinvoke r4.<java.io.File: java.io.File getAbsoluteFile()>();
        $z0 = virtualinvoke $r8.<java.io.File: boolean equals(java.lang.Object)>($r9);
        if $z0 == 0 goto label4;

        return 0;

     label4:
        return 1;
    }
}
