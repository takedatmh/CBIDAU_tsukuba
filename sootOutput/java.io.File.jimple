public class java.io.File extends java.lang.Object implements java.io.Serializable, java.lang.Comparable
{
    private static java.io.FileSystem fs;
    private java.lang.String path;
    private transient java.io.File$PathStatus status;
    private transient int prefixLength;
    public static final char separatorChar;
    public static final java.lang.String separator;
    public static final char pathSeparatorChar;
    public static final java.lang.String pathSeparator;
    private static final long serialVersionUID;
    private transient volatile java.nio.file.Path filePath;
    static final boolean $assertionsDisabled;

    final boolean isInvalid()
    {
        java.io.File r0;
        java.io.File$PathStatus $r1, $r4, $r5, $r6;
        java.lang.String $r3;
        int $i0;
        boolean $z0;

        r0 := @this: java.io.File;
        $r1 = r0.<java.io.File: java.io.File$PathStatus status>;
        if $r1 != null goto label2;

        $r3 = r0.<java.io.File: java.lang.String path>;
        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(0);
        if $i0 >= 0 goto label0;

        $r4 = <java.io.File$PathStatus: java.io.File$PathStatus CHECKED>;
        goto label1;

     label0:
        $r4 = <java.io.File$PathStatus: java.io.File$PathStatus INVALID>;

     label1:
        r0.<java.io.File: java.io.File$PathStatus status> = $r4;

     label2:
        $r5 = r0.<java.io.File: java.io.File$PathStatus status>;
        $r6 = <java.io.File$PathStatus: java.io.File$PathStatus INVALID>;
        if $r5 != $r6 goto label3;

        $z0 = 1;
        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    int getPrefixLength()
    {
        java.io.File r0;
        int $i0;

        r0 := @this: java.io.File;
        $i0 = r0.<java.io.File: int prefixLength>;
        return $i0;
    }

    private void <init>(java.lang.String, int)
    {
        java.io.File r0;
        java.lang.String r1;
        int i0;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.File: java.io.File$PathStatus status> = null;
        r0.<java.io.File: java.lang.String path> = r1;
        r0.<java.io.File: int prefixLength> = i0;
        return;
    }

    private void <init>(java.lang.String, java.io.File)
    {
        java.io.File r0, r2;
        java.lang.String r1, $r3, $r5, $r8, $r9;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r4, $r6;
        java.io.FileSystem $r7;
        int $i0;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.io.File;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.File: java.io.File$PathStatus status> = null;
        $z0 = <java.io.File: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $r3 = r2.<java.io.File: java.lang.String path>;
        if $r3 != null goto label0;

        $r4 = new java.lang.AssertionError;
        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
        throw $r4;

     label0:
        $z1 = <java.io.File: boolean $assertionsDisabled>;
        if $z1 != 0 goto label1;

        $r5 = r2.<java.io.File: java.lang.String path>;
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z2 == 0 goto label1;

        $r6 = new java.lang.AssertionError;
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
        throw $r6;

     label1:
        $r7 = <java.io.File: java.io.FileSystem fs>;
        $r8 = r2.<java.io.File: java.lang.String path>;
        $r9 = virtualinvoke $r7.<java.io.FileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>($r8, r1);
        r0.<java.io.File: java.lang.String path> = $r9;
        $i0 = r2.<java.io.File: int prefixLength>;
        r0.<java.io.File: int prefixLength> = $i0;
        return;
    }

    public void <init>(java.lang.String)
    {
        java.io.File r0;
        java.lang.String r1, $r4, $r6;
        java.lang.NullPointerException $r2;
        java.io.FileSystem $r3, $r5;
        int $i0;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.File: java.io.File$PathStatus status> = null;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $r4 = virtualinvoke $r3.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(r1);
        r0.<java.io.File: java.lang.String path> = $r4;
        $r5 = <java.io.File: java.io.FileSystem fs>;
        $r6 = r0.<java.io.File: java.lang.String path>;
        $i0 = virtualinvoke $r5.<java.io.FileSystem: int prefixLength(java.lang.String)>($r6);
        r0.<java.io.File: int prefixLength> = $i0;
        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.io.File r0;
        java.lang.String r1, r2, $r7, $r8, $r9, $r12, $r14, $r15, $r17, $r19;
        java.io.FileSystem $r3, $r4, $r6, $r10, $r11, $r13, $r16, $r18;
        java.lang.NullPointerException $r5;
        boolean $z0;
        int $i0;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.File: java.io.File$PathStatus status> = null;
        if r2 != null goto label0;

        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();
        throw $r5;

     label0:
        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 == 0 goto label1;

        $r6 = <java.io.File: java.io.FileSystem fs>;
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $r7 = virtualinvoke $r3.<java.io.FileSystem: java.lang.String getDefaultParent()>();
        $r4 = <java.io.File: java.io.FileSystem fs>;
        $r8 = virtualinvoke $r4.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(r2);
        $r9 = virtualinvoke $r6.<java.io.FileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>($r7, $r8);
        r0.<java.io.File: java.lang.String path> = $r9;
        goto label3;

     label1:
        $r10 = <java.io.File: java.io.FileSystem fs>;
        $r11 = <java.io.File: java.io.FileSystem fs>;
        $r12 = virtualinvoke $r11.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(r1);
        $r13 = <java.io.File: java.io.FileSystem fs>;
        $r14 = virtualinvoke $r13.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(r2);
        $r15 = virtualinvoke $r10.<java.io.FileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>($r12, $r14);
        r0.<java.io.File: java.lang.String path> = $r15;
        goto label3;

     label2:
        $r16 = <java.io.File: java.io.FileSystem fs>;
        $r17 = virtualinvoke $r16.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(r2);
        r0.<java.io.File: java.lang.String path> = $r17;

     label3:
        $r18 = <java.io.File: java.io.FileSystem fs>;
        $r19 = r0.<java.io.File: java.lang.String path>;
        $i0 = virtualinvoke $r18.<java.io.FileSystem: int prefixLength(java.lang.String)>($r19);
        r0.<java.io.File: int prefixLength> = $i0;
        return;
    }

    public void <init>(java.io.File, java.lang.String)
    {
        java.io.File r0, r1;
        java.lang.String r2, $r6, $r8, $r9, $r10, $r12, $r14, $r15, $r17, $r19;
        java.io.FileSystem $r3, $r4, $r7, $r11, $r13, $r16, $r18;
        java.lang.NullPointerException $r5;
        boolean $z0;
        int $i0;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.io.File;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.File: java.io.File$PathStatus status> = null;
        if r2 != null goto label0;

        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();
        throw $r5;

     label0:
        if r1 == null goto label2;

        $r6 = r1.<java.io.File: java.lang.String path>;
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 == 0 goto label1;

        $r7 = <java.io.File: java.io.FileSystem fs>;
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $r8 = virtualinvoke $r3.<java.io.FileSystem: java.lang.String getDefaultParent()>();
        $r4 = <java.io.File: java.io.FileSystem fs>;
        $r9 = virtualinvoke $r4.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(r2);
        $r10 = virtualinvoke $r7.<java.io.FileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>($r8, $r9);
        r0.<java.io.File: java.lang.String path> = $r10;
        goto label3;

     label1:
        $r11 = <java.io.File: java.io.FileSystem fs>;
        $r12 = r1.<java.io.File: java.lang.String path>;
        $r13 = <java.io.File: java.io.FileSystem fs>;
        $r14 = virtualinvoke $r13.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(r2);
        $r15 = virtualinvoke $r11.<java.io.FileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>($r12, $r14);
        r0.<java.io.File: java.lang.String path> = $r15;
        goto label3;

     label2:
        $r16 = <java.io.File: java.io.FileSystem fs>;
        $r17 = virtualinvoke $r16.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(r2);
        r0.<java.io.File: java.lang.String path> = $r17;

     label3:
        $r18 = <java.io.File: java.io.FileSystem fs>;
        $r19 = r0.<java.io.File: java.lang.String path>;
        $i0 = virtualinvoke $r18.<java.io.FileSystem: int prefixLength(java.lang.String)>($r19);
        r0.<java.io.File: int prefixLength> = $i0;
        return;
    }

    public void <init>(java.net.URI)
    {
        java.io.File r0;
        java.net.URI r1;
        java.lang.String r2, r3, $r7, $r9, $r11, r15, $r17, $r19;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r4, $r5, $r6, $r8, $r10, $r12, $r13;
        java.io.FileSystem $r14, $r16, $r18;
        char $c0, $c1;
        int $i2;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.net.URI;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.File: java.io.File$PathStatus status> = null;
        $z0 = virtualinvoke r1.<java.net.URI: boolean isAbsolute()>();
        if $z0 != 0 goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI is not absolute");
        throw $r4;

     label0:
        $z1 = virtualinvoke r1.<java.net.URI: boolean isOpaque()>();
        if $z1 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI is not hierarchical");
        throw $r5;

     label1:
        r2 = virtualinvoke r1.<java.net.URI: java.lang.String getScheme()>();
        if r2 == null goto label2;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");
        if $z2 != 0 goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI scheme is not \"file\"");
        throw $r6;

     label3:
        $r7 = virtualinvoke r1.<java.net.URI: java.lang.String getAuthority()>();
        if $r7 == null goto label4;

        $r8 = new java.lang.IllegalArgumentException;
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI has an authority component");
        throw $r8;

     label4:
        $r9 = virtualinvoke r1.<java.net.URI: java.lang.String getFragment()>();
        if $r9 == null goto label5;

        $r10 = new java.lang.IllegalArgumentException;
        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI has a fragment component");
        throw $r10;

     label5:
        $r11 = virtualinvoke r1.<java.net.URI: java.lang.String getQuery()>();
        if $r11 == null goto label6;

        $r12 = new java.lang.IllegalArgumentException;
        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI has a query component");
        throw $r12;

     label6:
        r3 = virtualinvoke r1.<java.net.URI: java.lang.String getPath()>();
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z3 == 0 goto label7;

        $r13 = new java.lang.IllegalArgumentException;
        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI path component is empty");
        throw $r13;

     label7:
        $r14 = <java.io.File: java.io.FileSystem fs>;
        r15 = virtualinvoke $r14.<java.io.FileSystem: java.lang.String fromURIPath(java.lang.String)>(r3);
        $c0 = <java.io.File: char separatorChar>;
        if $c0 == 47 goto label8;

        $c1 = <java.io.File: char separatorChar>;
        r15 = virtualinvoke r15.<java.lang.String: java.lang.String replace(char,char)>(47, $c1);

     label8:
        $r16 = <java.io.File: java.io.FileSystem fs>;
        $r17 = virtualinvoke $r16.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(r15);
        r0.<java.io.File: java.lang.String path> = $r17;
        $r18 = <java.io.File: java.io.FileSystem fs>;
        $r19 = r0.<java.io.File: java.lang.String path>;
        $i2 = virtualinvoke $r18.<java.io.FileSystem: int prefixLength(java.lang.String)>($r19);
        r0.<java.io.File: int prefixLength> = $i2;
        return;
    }

    public java.lang.String getName()
    {
        java.io.File r0;
        char $c0;
        int i1, $i2, $i3, $i4;
        java.lang.String $r1, $r2, $r3, $r4, $r5;

        r0 := @this: java.io.File;
        $r1 = r0.<java.io.File: java.lang.String path>;
        $c0 = <java.io.File: char separatorChar>;
        i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>($c0);
        $i2 = r0.<java.io.File: int prefixLength>;
        if i1 >= $i2 goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        $i3 = r0.<java.io.File: int prefixLength>;
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i3);
        return $r3;

     label0:
        $r4 = r0.<java.io.File: java.lang.String path>;
        $i4 = i1 + 1;
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i4);
        return $r5;
    }

    public java.lang.String getParent()
    {
        java.io.File r0;
        char $c0;
        int i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: java.io.File;
        $r1 = r0.<java.io.File: java.lang.String path>;
        $c0 = <java.io.File: char separatorChar>;
        i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>($c0);
        $i2 = r0.<java.io.File: int prefixLength>;
        if i1 >= $i2 goto label1;

        $i3 = r0.<java.io.File: int prefixLength>;
        if $i3 <= 0 goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();
        $i5 = r0.<java.io.File: int prefixLength>;
        if $i4 <= $i5 goto label0;

        $r3 = r0.<java.io.File: java.lang.String path>;
        $i6 = r0.<java.io.File: int prefixLength>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);
        return $r4;

     label0:
        return null;

     label1:
        $r5 = r0.<java.io.File: java.lang.String path>;
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, i1);
        return $r6;
    }

    public java.io.File getParentFile()
    {
        java.io.File r0, $r2;
        java.lang.String r1;
        int $i0;

        r0 := @this: java.io.File;
        r1 = virtualinvoke r0.<java.io.File: java.lang.String getParent()>();
        if r1 != null goto label0;

        return null;

     label0:
        $r2 = new java.io.File;
        $i0 = r0.<java.io.File: int prefixLength>;
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,int)>(r1, $i0);
        return $r2;
    }

    public java.lang.String getPath()
    {
        java.io.File r0;
        java.lang.String $r1;

        r0 := @this: java.io.File;
        $r1 = r0.<java.io.File: java.lang.String path>;
        return $r1;
    }

    public boolean isAbsolute()
    {
        java.io.File r0;
        java.io.FileSystem $r1;
        boolean $z0;

        r0 := @this: java.io.File;
        $r1 = <java.io.File: java.io.FileSystem fs>;
        $z0 = virtualinvoke $r1.<java.io.FileSystem: boolean isAbsolute(java.io.File)>(r0);
        return $z0;
    }

    public java.lang.String getAbsolutePath()
    {
        java.io.File r0;
        java.io.FileSystem $r1;
        java.lang.String $r2;

        r0 := @this: java.io.File;
        $r1 = <java.io.File: java.io.FileSystem fs>;
        $r2 = virtualinvoke $r1.<java.io.FileSystem: java.lang.String resolve(java.io.File)>(r0);
        return $r2;
    }

    public java.io.File getAbsoluteFile()
    {
        java.io.File r0, $r3;
        java.lang.String r1;
        java.io.FileSystem $r2;
        int $i0;

        r0 := @this: java.io.File;
        r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();
        $r3 = new java.io.File;
        $r2 = <java.io.File: java.io.FileSystem fs>;
        $i0 = virtualinvoke $r2.<java.io.FileSystem: int prefixLength(java.lang.String)>(r1);
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String,int)>(r1, $i0);
        return $r3;
    }

    public java.lang.String getCanonicalPath() throws java.io.IOException
    {
        java.io.File r0;
        boolean $z0;
        java.io.IOException $r1;
        java.io.FileSystem $r2, $r3;
        java.lang.String $r4, $r5;

        r0 := @this: java.io.File;
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label0;

        $r1 = new java.io.IOException;
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Invalid file path");
        throw $r1;

     label0:
        $r2 = <java.io.File: java.io.FileSystem fs>;
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $r4 = virtualinvoke $r3.<java.io.FileSystem: java.lang.String resolve(java.io.File)>(r0);
        $r5 = virtualinvoke $r2.<java.io.FileSystem: java.lang.String canonicalize(java.lang.String)>($r4);
        return $r5;
    }

    public java.io.File getCanonicalFile() throws java.io.IOException
    {
        java.io.File r0, $r3;
        java.lang.String r1;
        java.io.FileSystem $r2;
        int $i0;

        r0 := @this: java.io.File;
        r1 = virtualinvoke r0.<java.io.File: java.lang.String getCanonicalPath()>();
        $r3 = new java.io.File;
        $r2 = <java.io.File: java.io.FileSystem fs>;
        $i0 = virtualinvoke $r2.<java.io.FileSystem: int prefixLength(java.lang.String)>(r1);
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String,int)>(r1, $i0);
        return $r3;
    }

    private static java.lang.String slashify(java.lang.String, boolean)
    {
        java.lang.String r0, r1;
        boolean z0, $z1, $z2;
        char $c0, $c1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        r1 = r0;
        $c0 = <java.io.File: char separatorChar>;
        if $c0 == 47 goto label0;

        $c1 = <java.io.File: char separatorChar>;
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>($c1, 47);

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z1 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $z2 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");
        if $z2 != 0 goto label2;

        if z0 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r1;
    }

    public java.net.URL toURL() throws java.net.MalformedURLException
    {
        java.io.File r0;
        boolean $z0, $z1;
        java.net.MalformedURLException $r1;
        java.net.URL $r2;
        java.lang.String $r3, $r4;

        r0 := @this: java.io.File;
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label0;

        $r1 = new java.net.MalformedURLException;
        specialinvoke $r1.<java.net.MalformedURLException: void <init>(java.lang.String)>("Invalid file path");
        throw $r1;

     label0:
        $r2 = new java.net.URL;
        $r3 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();
        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();
        $r4 = staticinvoke <java.io.File: java.lang.String slashify(java.lang.String,boolean)>($r3, $z1);
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("file", "", $r4);
        return $r2;
    }

    public java.net.URI toURI()
    {
        java.io.File r0, r1;
        java.lang.String r2, $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.net.URI $r7;
        java.net.URISyntaxException $r8, r9;
        java.lang.Error $r10;

        r0 := @this: java.io.File;

     label0:
        r1 = virtualinvoke r0.<java.io.File: java.io.File getAbsoluteFile()>();
        $r3 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();
        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
        r2 = staticinvoke <java.io.File: java.lang.String slashify(java.lang.String,boolean)>($r3, $z0);
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("//");
        if $z1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r7 = new java.net.URI;
        specialinvoke $r7.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("file", null, r2, null);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.Error;
        specialinvoke $r10.<java.lang.Error: void <init>(java.lang.Throwable)>(r9);
        throw $r10;

        catch java.net.URISyntaxException from label0 to label2 with label3;
    }

    public boolean canRead()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.io.FileSystem $r3;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $z1 = virtualinvoke $r3.<java.io.FileSystem: boolean checkAccess(java.io.File,int)>(r0, 4);
        return $z1;
    }

    public boolean canWrite()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.io.FileSystem $r3;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $z1 = virtualinvoke $r3.<java.io.FileSystem: boolean checkAccess(java.io.File,int)>(r0, 2);
        return $z1;
    }

    public boolean exists()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.io.FileSystem $r3;
        int $i0, $i1;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $i0 = virtualinvoke $r3.<java.io.FileSystem: int getBooleanAttributes(java.io.File)>(r0);
        $i1 = $i0 & 1;
        if $i1 == 0 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isDirectory()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.io.FileSystem $r3;
        int $i0, $i1;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $i0 = virtualinvoke $r3.<java.io.FileSystem: int getBooleanAttributes(java.io.File)>(r0);
        $i1 = $i0 & 4;
        if $i1 == 0 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isFile()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.io.FileSystem $r3;
        int $i0, $i1;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $i0 = virtualinvoke $r3.<java.io.FileSystem: int getBooleanAttributes(java.io.File)>(r0);
        $i1 = $i0 & 2;
        if $i1 == 0 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isHidden()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.io.FileSystem $r3;
        int $i0, $i1;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $i0 = virtualinvoke $r3.<java.io.FileSystem: int getBooleanAttributes(java.io.File)>(r0);
        $i1 = $i0 & 8;
        if $i1 == 0 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public long lastModified()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0;
        java.io.FileSystem $r3;
        long $l0;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0L;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $l0 = virtualinvoke $r3.<java.io.FileSystem: long getLastModifiedTime(java.io.File)>(r0);
        return $l0;
    }

    public long length()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0;
        java.io.FileSystem $r3;
        long $l0;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0L;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $l0 = virtualinvoke $r3.<java.io.FileSystem: long getLength(java.io.File)>(r0);
        return $l0;
    }

    public boolean createNewFile() throws java.io.IOException
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2, $r5;
        boolean $z0, $z1;
        java.io.IOException $r3;
        java.io.FileSystem $r4;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Invalid file path");
        throw $r3;

     label1:
        $r4 = <java.io.File: java.io.FileSystem fs>;
        $r5 = r0.<java.io.File: java.lang.String path>;
        $z1 = virtualinvoke $r4.<java.io.FileSystem: boolean createFileExclusively(java.lang.String)>($r5);
        return $z1;
    }

    public boolean delete()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.io.FileSystem $r3;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkDelete(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $z1 = virtualinvoke $r3.<java.io.FileSystem: boolean delete(java.io.File)>(r0);
        return $z1;
    }

    public void deleteOnExit()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkDelete(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<java.io.File: java.lang.String path>;
        staticinvoke <java.io.DeleteOnExitHook: void add(java.lang.String)>($r3);
        return;
    }

    public java.lang.String[] list()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0;
        java.io.FileSystem $r3;
        java.lang.String[] $r4;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $r4 = virtualinvoke $r3.<java.io.FileSystem: java.lang.String[] list(java.io.File)>(r0);
        return $r4;
    }

    public java.lang.String[] list(java.io.FilenameFilter)
    {
        java.io.File r0;
        java.io.FilenameFilter r1;
        java.lang.String[] r2, $r7, $r9;
        java.util.ArrayList r3, $r4;
        int i0, $i1, $i2;
        java.lang.String $r5, $r6;
        boolean $z0;
        java.lang.Object[] $r8;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.io.FilenameFilter;
        r2 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();
        if r2 == null goto label0;

        if r1 != null goto label1;

     label0:
        return r2;

     label1:
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r3 = $r4;
        i0 = 0;

     label2:
        $i1 = lengthof r2;
        if i0 >= $i1 goto label4;

        $r5 = r2[i0];
        $z0 = interfaceinvoke r1.<java.io.FilenameFilter: boolean accept(java.io.File,java.lang.String)>(r0, $r5);
        if $z0 == 0 goto label3;

        $r6 = r2[i0];
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        i0 = i0 + 1;
        goto label2;

     label4:
        $i2 = interfaceinvoke r3.<java.util.List: int size()>();
        $r7 = newarray (java.lang.String)[$i2];
        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);
        $r9 = (java.lang.String[]) $r8;
        return $r9;
    }

    public java.io.File[] listFiles()
    {
        java.io.File r0, $r3;
        java.lang.String[] r1;
        int i0, i1;
        java.io.File[] r2;
        java.lang.String $r4;

        r0 := @this: java.io.File;
        r1 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();
        if r1 != null goto label0;

        return null;

     label0:
        i0 = lengthof r1;
        r2 = newarray (java.io.File)[i0];
        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = new java.io.File;
        $r4 = r1[i1];
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String,java.io.File)>($r4, r0);
        r2[i1] = $r3;
        i1 = i1 + 1;
        goto label1;

     label2:
        return r2;
    }

    public java.io.File[] listFiles(java.io.FilenameFilter)
    {
        java.io.File r0, $r7;
        java.io.FilenameFilter r1;
        java.lang.String[] r2, r4;
        java.util.ArrayList r3, $r6;
        int i0, i1, $i2;
        java.lang.String r5;
        boolean $z0;
        java.io.File[] $r8, $r10;
        java.lang.Object[] $r9;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.io.FilenameFilter;
        r2 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();
        if r2 != null goto label0;

        return null;

     label0:
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r3 = $r6;
        r4 = r2;
        i0 = lengthof r4;
        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r5 = r4[i1];
        if r1 == null goto label2;

        $z0 = interfaceinvoke r1.<java.io.FilenameFilter: boolean accept(java.io.File,java.lang.String)>(r0, r5);
        if $z0 == 0 goto label3;

     label2:
        $r7 = new java.io.File;
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String,java.io.File)>(r5, r0);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label3:
        i1 = i1 + 1;
        goto label1;

     label4:
        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        $r8 = newarray (java.io.File)[$i2];
        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);
        $r10 = (java.io.File[]) $r9;
        return $r10;
    }

    public java.io.File[] listFiles(java.io.FileFilter)
    {
        java.io.File r0, r6, $r8;
        java.io.FileFilter r1;
        java.lang.String[] r2, r4;
        java.util.ArrayList r3, $r7;
        int i0, i1, $i2;
        java.lang.String r5;
        boolean $z0;
        java.io.File[] $r9, $r11;
        java.lang.Object[] $r10;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.io.FileFilter;
        r2 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();
        if r2 != null goto label0;

        return null;

     label0:
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r3 = $r7;
        r4 = r2;
        i0 = lengthof r4;
        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r5 = r4[i1];
        $r8 = new java.io.File;
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.io.File)>(r5, r0);
        r6 = $r8;
        if r1 == null goto label2;

        $z0 = interfaceinvoke r1.<java.io.FileFilter: boolean accept(java.io.File)>(r6);
        if $z0 == 0 goto label3;

     label2:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label3:
        i1 = i1 + 1;
        goto label1;

     label4:
        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        $r9 = newarray (java.io.File)[$i2];
        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r9);
        $r11 = (java.io.File[]) $r10;
        return $r11;
    }

    public boolean mkdir()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.io.FileSystem $r3;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $z1 = virtualinvoke $r3.<java.io.FileSystem: boolean createDirectory(java.io.File)>(r0);
        return $z1;
    }

    public boolean mkdirs()
    {
        java.io.File r0, r2, r4;
        null_type n0;
        java.io.IOException r1, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: java.io.File;
        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label0;

        return 0;

     label0:
        $z1 = virtualinvoke r0.<java.io.File: boolean mkdir()>();
        if $z1 == 0 goto label1;

        return 1;

     label1:
        n0 = null;

     label2:
        r2 = virtualinvoke r0.<java.io.File: java.io.File getCanonicalFile()>();

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;
        r1 = $r3;
        return 0;

     label5:
        r4 = virtualinvoke r2.<java.io.File: java.io.File getParentFile()>();
        if r4 == null goto label7;

        $z2 = virtualinvoke r4.<java.io.File: boolean mkdirs()>();
        if $z2 != 0 goto label6;

        $z3 = virtualinvoke r4.<java.io.File: boolean exists()>();
        if $z3 == 0 goto label7;

     label6:
        $z4 = virtualinvoke r2.<java.io.File: boolean mkdir()>();
        if $z4 == 0 goto label7;

        $z5 = 1;
        goto label8;

     label7:
        $z5 = 0;

     label8:
        return $z5;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public boolean renameTo(java.io.File)
    {
        java.io.File r0, r1;
        java.lang.SecurityManager r2;
        java.lang.String $r3, $r4;
        java.lang.NullPointerException $r5;
        boolean $z0, $z1, $z2;
        java.io.FileSystem $r6;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.io.File;
        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r2 == null goto label0;

        $r3 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r2.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r3);
        $r4 = r1.<java.io.File: java.lang.String path>;
        virtualinvoke r2.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r4);

     label0:
        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();
        throw $r5;

     label1:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.io.File: boolean isInvalid()>();
        if $z1 == 0 goto label3;

     label2:
        return 0;

     label3:
        $r6 = <java.io.File: java.io.FileSystem fs>;
        $z2 = virtualinvoke $r6.<java.io.FileSystem: boolean rename(java.io.File,java.io.File)>(r0, r1);
        return $z2;
    }

    public boolean setLastModified(long)
    {
        java.io.File r0;
        long l0;
        java.lang.SecurityManager r1;
        byte $b1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;
        boolean $z0, $z1;
        java.io.FileSystem $r4;

        r0 := @this: java.io.File;
        l0 := @parameter0: long;
        $b1 = l0 cmp 0L;
        if $b1 >= 0 goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Negative time");
        throw $r2;

     label0:
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label1;

        $r3 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r3);

     label1:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r4 = <java.io.File: java.io.FileSystem fs>;
        $z1 = virtualinvoke $r4.<java.io.FileSystem: boolean setLastModifiedTime(java.io.File,long)>(r0, l0);
        return $z1;
    }

    public boolean setReadOnly()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.io.FileSystem $r3;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $z1 = virtualinvoke $r3.<java.io.FileSystem: boolean setReadOnly(java.io.File)>(r0);
        return $z1;
    }

    public boolean setWritable(boolean, boolean)
    {
        java.io.File r0;
        boolean z0, z1, $z2, $z3;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        java.io.FileSystem $r3;

        r0 := @this: java.io.File;
        z0 := @parameter0: boolean;
        z1 := @parameter1: boolean;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r2);

     label0:
        $z2 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z2 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $z3 = virtualinvoke $r3.<java.io.FileSystem: boolean setPermission(java.io.File,int,boolean,boolean)>(r0, 2, z0, z1);
        return $z3;
    }

    public boolean setWritable(boolean)
    {
        java.io.File r0;
        boolean z0, $z1;

        r0 := @this: java.io.File;
        z0 := @parameter0: boolean;
        $z1 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(z0, 1);
        return $z1;
    }

    public boolean setReadable(boolean, boolean)
    {
        java.io.File r0;
        boolean z0, z1, $z2, $z3;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        java.io.FileSystem $r3;

        r0 := @this: java.io.File;
        z0 := @parameter0: boolean;
        z1 := @parameter1: boolean;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r2);

     label0:
        $z2 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z2 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $z3 = virtualinvoke $r3.<java.io.FileSystem: boolean setPermission(java.io.File,int,boolean,boolean)>(r0, 4, z0, z1);
        return $z3;
    }

    public boolean setReadable(boolean)
    {
        java.io.File r0;
        boolean z0, $z1;

        r0 := @this: java.io.File;
        z0 := @parameter0: boolean;
        $z1 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(z0, 1);
        return $z1;
    }

    public boolean setExecutable(boolean, boolean)
    {
        java.io.File r0;
        boolean z0, z1, $z2, $z3;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        java.io.FileSystem $r3;

        r0 := @this: java.io.File;
        z0 := @parameter0: boolean;
        z1 := @parameter1: boolean;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r2);

     label0:
        $z2 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z2 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $z3 = virtualinvoke $r3.<java.io.FileSystem: boolean setPermission(java.io.File,int,boolean,boolean)>(r0, 1, z0, z1);
        return $z3;
    }

    public boolean setExecutable(boolean)
    {
        java.io.File r0;
        boolean z0, $z1;

        r0 := @this: java.io.File;
        z0 := @parameter0: boolean;
        $z1 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(z0, 1);
        return $z1;
    }

    public boolean canExecute()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        java.io.FileSystem $r3;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkExec(java.lang.String)>($r2);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <java.io.File: java.io.FileSystem fs>;
        $z1 = virtualinvoke $r3.<java.io.FileSystem: boolean checkAccess(java.io.File,int)>(r0, 1);
        return $z1;
    }

    public static java.io.File[] listRoots()
    {
        java.io.FileSystem $r0;
        java.io.File[] $r1;

        $r0 = <java.io.File: java.io.FileSystem fs>;
        $r1 = virtualinvoke $r0.<java.io.FileSystem: java.io.File[] listRoots()>();
        return $r1;
    }

    public long getTotalSpace()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.RuntimePermission $r2;
        java.lang.String $r3;
        boolean $z0;
        java.io.FileSystem $r4;
        long $l0;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = new java.lang.RuntimePermission;
        specialinvoke $r2.<java.lang.RuntimePermission: void <init>(java.lang.String)>("getFileSystemAttributes");
        virtualinvoke r1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);
        $r3 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r3);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0L;

     label1:
        $r4 = <java.io.File: java.io.FileSystem fs>;
        $l0 = virtualinvoke $r4.<java.io.FileSystem: long getSpace(java.io.File,int)>(r0, 0);
        return $l0;
    }

    public long getFreeSpace()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.RuntimePermission $r2;
        java.lang.String $r3;
        boolean $z0;
        java.io.FileSystem $r4;
        long $l0;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = new java.lang.RuntimePermission;
        specialinvoke $r2.<java.lang.RuntimePermission: void <init>(java.lang.String)>("getFileSystemAttributes");
        virtualinvoke r1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);
        $r3 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r3);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0L;

     label1:
        $r4 = <java.io.File: java.io.FileSystem fs>;
        $l0 = virtualinvoke $r4.<java.io.FileSystem: long getSpace(java.io.File,int)>(r0, 1);
        return $l0;
    }

    public long getUsableSpace()
    {
        java.io.File r0;
        java.lang.SecurityManager r1;
        java.lang.RuntimePermission $r2;
        java.lang.String $r3;
        boolean $z0;
        java.io.FileSystem $r4;
        long $l0;

        r0 := @this: java.io.File;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = new java.lang.RuntimePermission;
        specialinvoke $r2.<java.lang.RuntimePermission: void <init>(java.lang.String)>("getFileSystemAttributes");
        virtualinvoke r1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);
        $r3 = r0.<java.io.File: java.lang.String path>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkRead(java.lang.String)>($r3);

     label0:
        $z0 = virtualinvoke r0.<java.io.File: boolean isInvalid()>();
        if $z0 == 0 goto label1;

        return 0L;

     label1:
        $r4 = <java.io.File: java.io.FileSystem fs>;
        $l0 = virtualinvoke $r4.<java.io.FileSystem: long getSpace(java.io.File,int)>(r0, 2);
        return $l0;
    }

    public static java.io.File createTempFile(java.lang.String, java.lang.String, java.io.File) throws java.io.IOException
    {
        java.lang.String r0, r1, $r9, $r14;
        java.io.File r2, r3, r5, $r8;
        java.lang.SecurityManager r4;
        java.lang.SecurityException r6, $r10, $r11;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r7;
        java.io.FileSystem $r12, $r13;
        boolean $z0;
        java.io.IOException $r15;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.io.File;
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i0 >= 3 goto label0;

        $r7 = new java.lang.IllegalArgumentException;
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Prefix string too short");
        throw $r7;

     label0:
        if r1 != null goto label1;

        r1 = ".tmp";

     label1:
        if r2 == null goto label2;

        $r8 = r2;
        goto label3;

     label2:
        $r8 = staticinvoke <java.io.File$TempDirectory: java.io.File location()>();

     label3:
        r3 = $r8;
        r4 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

     label4:
        r5 = staticinvoke <java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>(r0, r1, r3);
        if r4 == null goto label9;

     label5:
        $r9 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();
        virtualinvoke r4.<java.lang.SecurityManager: void checkWrite(java.lang.String)>($r9);

     label6:
        goto label9;

     label7:
        $r10 := @caughtexception;
        r6 = $r10;
        if r2 != null goto label8;

        $r11 = new java.lang.SecurityException;
        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>("Unable to create temporary file");
        throw $r11;

     label8:
        throw r6;

     label9:
        $r12 = <java.io.File: java.io.FileSystem fs>;
        $i1 = virtualinvoke $r12.<java.io.FileSystem: int getBooleanAttributes(java.io.File)>(r5);
        $i2 = $i1 & 1;
        if $i2 != 0 goto label4;

        $r13 = <java.io.File: java.io.FileSystem fs>;
        $r14 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();
        $z0 = virtualinvoke $r13.<java.io.FileSystem: boolean createFileExclusively(java.lang.String)>($r14);
        if $z0 != 0 goto label10;

        $r15 = new java.io.IOException;
        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Unable to create temporary file");
        throw $r15;

     label10:
        return r5;

        catch java.lang.SecurityException from label5 to label6 with label7;
    }

    public static java.io.File createTempFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1;
        java.io.File $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>(r0, r1, null);
        return $r2;
    }

    public int compareTo(java.io.File)
    {
        java.io.File r0, r1;
        java.io.FileSystem $r2;
        int $i0;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.io.File;
        $r2 = <java.io.File: java.io.FileSystem fs>;
        $i0 = virtualinvoke $r2.<java.io.FileSystem: int compare(java.io.File,java.io.File)>(r0, r1);
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.io.File r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.lang.Object;
        if r1 == null goto label2;

        $z0 = r1 instanceof java.io.File;
        if $z0 == 0 goto label2;

        $r2 = (java.io.File) r1;
        $i0 = virtualinvoke r0.<java.io.File: int compareTo(java.io.File)>($r2);
        if $i0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        java.io.File r0;
        java.io.FileSystem $r1;
        int $i0;

        r0 := @this: java.io.File;
        $r1 = <java.io.File: java.io.FileSystem fs>;
        $i0 = virtualinvoke $r1.<java.io.FileSystem: int hashCode(java.io.File)>(r0);
        return $i0;
    }

    public java.lang.String toString()
    {
        java.io.File r0;
        java.lang.String $r1;

        r0 := @this: java.io.File;
        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();
        return $r1;
    }

    private synchronized void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.File r0;
        java.io.ObjectOutputStream r1;
        char $c0;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.io.ObjectOutputStream;
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();
        $c0 = <java.io.File: char separatorChar>;
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeChar(int)>($c0);
        return;
    }

    private synchronized void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.File r0;
        java.io.ObjectInputStream r1;
        java.io.ObjectInputStream$GetField r2;
        java.lang.String r3, $r6, $r8;
        char c0, $c1, $c2;
        java.lang.Object $r4;
        java.io.FileSystem $r5, $r7;
        int $i3;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.io.ObjectInputStream;
        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();
        $r4 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("path", null);
        r3 = (java.lang.String) $r4;
        c0 = virtualinvoke r1.<java.io.ObjectInputStream: char readChar()>();
        $c1 = <java.io.File: char separatorChar>;
        if c0 == $c1 goto label0;

        $c2 = <java.io.File: char separatorChar>;
        r3 = virtualinvoke r3.<java.lang.String: java.lang.String replace(char,char)>(c0, $c2);

     label0:
        $r5 = <java.io.File: java.io.FileSystem fs>;
        $r6 = virtualinvoke $r5.<java.io.FileSystem: java.lang.String normalize(java.lang.String)>(r3);
        r0.<java.io.File: java.lang.String path> = $r6;
        $r7 = <java.io.File: java.io.FileSystem fs>;
        $r8 = r0.<java.io.File: java.lang.String path>;
        $i3 = virtualinvoke $r7.<java.io.FileSystem: int prefixLength(java.lang.String)>($r8);
        r0.<java.io.File: int prefixLength> = $i3;
        return;
    }

    public java.nio.file.Path toPath()
    {
        java.io.File r0, r2;
        java.nio.file.Path r1;
        java.lang.Throwable r3, $r8;
        java.nio.file.FileSystem $r5;
        java.lang.String $r6;
        java.lang.String[] $r7;

        r0 := @this: java.io.File;
        r1 = r0.<java.io.File: java.nio.file.Path filePath>;
        if r1 != null goto label6;

        r2 = r0;
        entermonitor r0;

     label0:
        r1 = r0.<java.io.File: java.nio.file.Path filePath>;
        if r1 != null goto label1;

        $r5 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>();
        $r6 = r0.<java.io.File: java.lang.String path>;
        $r7 = newarray (java.lang.String)[0];
        r1 = virtualinvoke $r5.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>($r6, $r7);
        r0.<java.io.File: java.nio.file.Path filePath> = r1;

     label1:
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r8 := @caughtexception;

     label4:
        r3 = $r8;
        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return r1;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.io.File r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.io.File;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.io.File) r1;
        $i0 = virtualinvoke r0.<java.io.File: int compareTo(java.io.File)>($r2);
        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.io.FileSystem $r1, $r2, $r7;
        char $c0, $c1, $c2, $c3;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.String $r6, $r11;

        $r0 = class "java/io/File";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.io.File: boolean $assertionsDisabled> = $z1;
        $r1 = staticinvoke <java.io.FileSystem: java.io.FileSystem getFileSystem()>();
        <java.io.File: java.io.FileSystem fs> = $r1;
        $r2 = <java.io.File: java.io.FileSystem fs>;
        $c0 = virtualinvoke $r2.<java.io.FileSystem: char getSeparator()>();
        <java.io.File: char separatorChar> = $c0;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $c1 = <java.io.File: char separatorChar>;
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        <java.io.File: java.lang.String separator> = $r6;
        $r7 = <java.io.File: java.io.FileSystem fs>;
        $c2 = virtualinvoke $r7.<java.io.FileSystem: char getPathSeparator()>();
        <java.io.File: char pathSeparatorChar> = $c2;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $c3 = <java.io.File: char pathSeparatorChar>;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        <java.io.File: java.lang.String pathSeparator> = $r11;
        return;
    }
}
