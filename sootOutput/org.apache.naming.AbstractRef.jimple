public abstract class org.apache.naming.AbstractRef extends javax.naming.Reference
{
    private static final long serialVersionUID;

    public void <init>(java.lang.String)
    {
        org.apache.naming.AbstractRef r0;
        java.lang.String r1;

        r0 := @this: org.apache.naming.AbstractRef;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<javax.naming.Reference: void <init>(java.lang.String)>(r1);
        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.naming.AbstractRef r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.naming.AbstractRef;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        specialinvoke r0.<javax.naming.Reference: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);
        return;
    }

    public final java.lang.String getFactoryClassName()
    {
        org.apache.naming.AbstractRef r0;
        java.lang.String r1, r2, $r3;

        r0 := @this: org.apache.naming.AbstractRef;
        r1 = specialinvoke r0.<javax.naming.Reference: java.lang.String getFactoryClassName()>();
        if r1 == null goto label0;

        return r1;

     label0:
        r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.naming.factory.object");
        if r2 == null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.naming.AbstractRef: java.lang.String getDefaultFactoryClassName()>();
        return $r3;
    }

    protected abstract java.lang.String getDefaultFactoryClassName();

    public final java.lang.String toString()
    {
        org.apache.naming.AbstractRef r0;
        java.lang.StringBuilder $r1, r2;
        java.util.Enumeration r3;
        javax.naming.RefAddr r4;
        java.lang.Class $r5;
        java.lang.String $r6, $r8, $r11, $r14, $r18, $r25;
        java.lang.Object $r16, $r21;
        boolean $z0;

        r0 := @this: org.apache.naming.AbstractRef;
        $r1 = new java.lang.StringBuilder;
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[className=");
        $r8 = virtualinvoke r0.<org.apache.naming.AbstractRef: java.lang.String getClassName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",factoryClassLocation=");
        $r11 = virtualinvoke r0.<org.apache.naming.AbstractRef: java.lang.String getFactoryClassLocation()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",factoryClassName=");
        $r14 = virtualinvoke r0.<org.apache.naming.AbstractRef: java.lang.String getFactoryClassName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        r3 = virtualinvoke r0.<org.apache.naming.AbstractRef: java.util.Enumeration getAll()>();
        goto label1;

     label0:
        $r16 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (javax.naming.RefAddr) $r16;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",{type=");
        $r18 = virtualinvoke r4.<javax.naming.RefAddr: java.lang.String getType()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",content=");
        $r21 = virtualinvoke r4.<javax.naming.RefAddr: java.lang.Object getContent()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

     label1:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 != 0 goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r25 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r25;
    }
}
