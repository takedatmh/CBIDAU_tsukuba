public class sun.security.x509.GeneralSubtrees extends java.lang.Object implements java.lang.Cloneable
{
    private final java.util.List trees;
    private static final int NAME_DIFF_TYPE;
    private static final int NAME_MATCH;
    private static final int NAME_NARROWS;
    private static final int NAME_WIDENS;
    private static final int NAME_SAME_TYPE;

    public void <init>()
    {
        sun.security.x509.GeneralSubtrees r0;
        java.util.ArrayList $r1;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<sun.security.x509.GeneralSubtrees: java.util.List trees> = $r1;
        return;
    }

    private void <init>(sun.security.x509.GeneralSubtrees)
    {
        sun.security.x509.GeneralSubtrees r0, r1;
        java.util.ArrayList $r2;
        java.util.List $r3;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        r1 := @parameter0: sun.security.x509.GeneralSubtrees;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.ArrayList;
        $r3 = r1.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);
        r0.<sun.security.x509.GeneralSubtrees: java.util.List trees> = $r2;
        return;
    }

    public void <init>(sun.security.util.DerValue) throws java.io.IOException
    {
        sun.security.x509.GeneralSubtrees r0;
        sun.security.util.DerValue r1, r2;
        sun.security.x509.GeneralSubtree r3, $r7;
        byte $b0;
        java.io.IOException $r4;
        sun.security.util.DerInputStream $r5, $r6;
        int $i1;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<sun.security.x509.GeneralSubtrees: void <init>()>();
        $b0 = r1.<sun.security.util.DerValue: byte tag>;
        if $b0 == 48 goto label0;

        $r4 = new java.io.IOException;
        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Invalid encoding of GeneralSubtrees.");
        throw $r4;

     label0:
        $r5 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i1 = virtualinvoke $r5.<sun.security.util.DerInputStream: int available()>();
        if $i1 == 0 goto label1;

        $r6 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        r2 = virtualinvoke $r6.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r7 = new sun.security.x509.GeneralSubtree;
        specialinvoke $r7.<sun.security.x509.GeneralSubtree: void <init>(sun.security.util.DerValue)>(r2);
        r3 = $r7;
        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void add(sun.security.x509.GeneralSubtree)>(r3);
        goto label0;

     label1:
        return;
    }

    public sun.security.x509.GeneralSubtree get(int)
    {
        sun.security.x509.GeneralSubtrees r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        sun.security.x509.GeneralSubtree $r3;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        i0 := @parameter0: int;
        $r1 = r0.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);
        $r3 = (sun.security.x509.GeneralSubtree) $r2;
        return $r3;
    }

    public void remove(int)
    {
        sun.security.x509.GeneralSubtrees r0;
        int i0;
        java.util.List $r1;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        i0 := @parameter0: int;
        $r1 = r0.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i0);
        return;
    }

    public void add(sun.security.x509.GeneralSubtree)
    {
        sun.security.x509.GeneralSubtrees r0;
        sun.security.x509.GeneralSubtree r1;
        java.lang.NullPointerException $r2;
        java.util.List $r3;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        r1 := @parameter0: sun.security.x509.GeneralSubtree;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    public boolean contains(sun.security.x509.GeneralSubtree)
    {
        sun.security.x509.GeneralSubtrees r0;
        sun.security.x509.GeneralSubtree r1;
        java.lang.NullPointerException $r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        r1 := @parameter0: sun.security.x509.GeneralSubtree;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);
        return $z0;
    }

    public int size()
    {
        sun.security.x509.GeneralSubtrees r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        $r1 = r0.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        return $i0;
    }

    public java.util.Iterator iterator()
    {
        sun.security.x509.GeneralSubtrees r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        $r1 = r0.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();
        return $r2;
    }

    public java.util.List trees()
    {
        sun.security.x509.GeneralSubtrees r0;
        java.util.List $r1;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        $r1 = r0.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        return $r1;
    }

    public java.lang.Object clone()
    {
        sun.security.x509.GeneralSubtrees r0, $r1;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        $r1 = new sun.security.x509.GeneralSubtrees;
        specialinvoke $r1.<sun.security.x509.GeneralSubtrees: void <init>(sun.security.x509.GeneralSubtrees)>(r0);
        return $r1;
    }

    public java.lang.String toString()
    {
        sun.security.x509.GeneralSubtrees r0;
        java.lang.StringBuilder $r1, $r3, $r6, $r7;
        java.lang.String r2, $r5;
        java.util.List $r4;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   GeneralSubtrees:\n");
        $r4 = r0.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        return r2;
    }

    public void encode(sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.x509.GeneralSubtrees r0;
        sun.security.util.DerOutputStream r1, $r2, r3;
        int i0, i1;
        sun.security.x509.GeneralSubtree $r4;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        r1 := @parameter0: sun.security.util.DerOutputStream;
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        i0 = 0;
        i1 = virtualinvoke r0.<sun.security.x509.GeneralSubtrees: int size()>();

     label0:
        if i0 >= i1 goto label1;

        $r4 = virtualinvoke r0.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtree get(int)>(i0);
        virtualinvoke $r4.<sun.security.x509.GeneralSubtree: void encode(sun.security.util.DerOutputStream)>(r3);
        i0 = i0 + 1;
        goto label0;

     label1:
        virtualinvoke r1.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r3);
        return;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.x509.GeneralSubtrees r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.List $r3, $r4;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.security.x509.GeneralSubtrees;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (sun.security.x509.GeneralSubtrees) r1;
        $r3 = r0.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        $r4 = r2.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        $z1 = interfaceinvoke $r3.<java.util.List: boolean equals(java.lang.Object)>($r4);
        return $z1;
    }

    public int hashCode()
    {
        sun.security.x509.GeneralSubtrees r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        $r1 = r0.<sun.security.x509.GeneralSubtrees: java.util.List trees>;
        $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();
        return $i0;
    }

    private sun.security.x509.GeneralNameInterface getGeneralNameInterface(int)
    {
        sun.security.x509.GeneralSubtrees r0;
        int i0;
        sun.security.x509.GeneralSubtree $r1;
        sun.security.x509.GeneralNameInterface $r2;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtree get(int)>(i0);
        $r2 = staticinvoke <sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(sun.security.x509.GeneralSubtree)>($r1);
        return $r2;
    }

    private static sun.security.x509.GeneralNameInterface getGeneralNameInterface(sun.security.x509.GeneralSubtree)
    {
        sun.security.x509.GeneralSubtree r0;
        sun.security.x509.GeneralName r1;
        sun.security.x509.GeneralNameInterface r2;

        r0 := @parameter0: sun.security.x509.GeneralSubtree;
        r1 = virtualinvoke r0.<sun.security.x509.GeneralSubtree: sun.security.x509.GeneralName getName()>();
        r2 = virtualinvoke r1.<sun.security.x509.GeneralName: sun.security.x509.GeneralNameInterface getName()>();
        return r2;
    }

    private void minimize()
    {
        sun.security.x509.GeneralSubtrees r0;
        int i0, i1, $i2, $i3, $i4;
        sun.security.x509.GeneralNameInterface r1, r2;
        boolean z0;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        i0 = 0;

     label0:
        $i2 = virtualinvoke r0.<sun.security.x509.GeneralSubtrees: int size()>();
        if i0 >= $i2 goto label11;

        r1 = specialinvoke r0.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(int)>(i0);
        z0 = 0;
        i1 = i0 + 1;

     label1:
        $i3 = virtualinvoke r0.<sun.security.x509.GeneralSubtrees: int size()>();
        if i1 >= $i3 goto label9;

        r2 = specialinvoke r0.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(int)>(i1);
        $i4 = interfaceinvoke r1.<sun.security.x509.GeneralNameInterface: int constrains(sun.security.x509.GeneralNameInterface)>(r2);
        tableswitch($i4)
        {
            case -1: goto label2;
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label7;
        };

     label2:
        goto label8;

     label3:
        z0 = 1;
        goto label7;

     label4:
        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void remove(int)>(i1);
        i1 = i1 + -1;
        goto label8;

     label5:
        z0 = 1;
        goto label7;

     label6:
        goto label8;

     label7:
        goto label9;

     label8:
        i1 = i1 + 1;
        goto label1;

     label9:
        if z0 == 0 goto label10;

        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void remove(int)>(i0);
        i0 = i0 + -1;

     label10:
        i0 = i0 + 1;
        goto label0;

     label11:
        return;
    }

    private sun.security.x509.GeneralSubtree createWidestSubtree(sun.security.x509.GeneralNameInterface)
    {
        sun.security.x509.GeneralSubtrees r0;
        sun.security.x509.GeneralNameInterface r1;
        sun.security.util.ObjectIdentifier r2, $r25;
        sun.security.x509.OtherName $r3, $r5;
        sun.security.x509.GeneralName r4, $r6, $r7, $r9, $r11, $r14, $r16, $r18, $r20, $r23;
        int $i0, $i1;
        sun.security.x509.RFC822Name $r8;
        sun.security.x509.DNSName $r10;
        sun.security.x509.X400Address $r12;
        byte[] $r13, $r22;
        sun.security.x509.X500Name $r15;
        sun.security.x509.EDIPartyName $r17;
        sun.security.x509.URIName $r19;
        sun.security.x509.IPAddressName $r21;
        sun.security.x509.OIDName $r24;
        int[] $r26;
        java.io.IOException $r27, $r33, r34;
        java.lang.StringBuilder $r28, $r29, $r30, $r36, $r37, $r38;
        java.lang.String $r31, $r39;
        sun.security.x509.GeneralSubtree $r32;
        java.lang.RuntimeException $r35;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        r1 := @parameter0: sun.security.x509.GeneralNameInterface;

     label0:
        $i0 = interfaceinvoke r1.<sun.security.x509.GeneralNameInterface: int getType()>();
        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            case 8: goto label9;
            default: goto label10;
        };

     label1:
        $r5 = (sun.security.x509.OtherName) r1;
        r2 = virtualinvoke $r5.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier getOID()>();
        $r6 = new sun.security.x509.GeneralName;
        $r3 = new sun.security.x509.OtherName;
        specialinvoke $r3.<sun.security.x509.OtherName: void <init>(sun.security.util.ObjectIdentifier,byte[])>(r2, null);
        specialinvoke $r6.<sun.security.x509.GeneralName: void <init>(sun.security.x509.GeneralNameInterface)>($r3);
        r4 = $r6;
        goto label11;

     label2:
        $r7 = new sun.security.x509.GeneralName;
        $r8 = new sun.security.x509.RFC822Name;
        specialinvoke $r8.<sun.security.x509.RFC822Name: void <init>(java.lang.String)>("");
        specialinvoke $r7.<sun.security.x509.GeneralName: void <init>(sun.security.x509.GeneralNameInterface)>($r8);
        r4 = $r7;
        goto label11;

     label3:
        $r9 = new sun.security.x509.GeneralName;
        $r10 = new sun.security.x509.DNSName;
        specialinvoke $r10.<sun.security.x509.DNSName: void <init>(java.lang.String)>("");
        specialinvoke $r9.<sun.security.x509.GeneralName: void <init>(sun.security.x509.GeneralNameInterface)>($r10);
        r4 = $r9;
        goto label11;

     label4:
        $r11 = new sun.security.x509.GeneralName;
        $r12 = new sun.security.x509.X400Address;
        $r13 = (byte[]) null;
        specialinvoke $r12.<sun.security.x509.X400Address: void <init>(byte[])>($r13);
        specialinvoke $r11.<sun.security.x509.GeneralName: void <init>(sun.security.x509.GeneralNameInterface)>($r12);
        r4 = $r11;
        goto label11;

     label5:
        $r14 = new sun.security.x509.GeneralName;
        $r15 = new sun.security.x509.X500Name;
        specialinvoke $r15.<sun.security.x509.X500Name: void <init>(java.lang.String)>("");
        specialinvoke $r14.<sun.security.x509.GeneralName: void <init>(sun.security.x509.GeneralNameInterface)>($r15);
        r4 = $r14;
        goto label11;

     label6:
        $r16 = new sun.security.x509.GeneralName;
        $r17 = new sun.security.x509.EDIPartyName;
        specialinvoke $r17.<sun.security.x509.EDIPartyName: void <init>(java.lang.String)>("");
        specialinvoke $r16.<sun.security.x509.GeneralName: void <init>(sun.security.x509.GeneralNameInterface)>($r17);
        r4 = $r16;
        goto label11;

     label7:
        $r18 = new sun.security.x509.GeneralName;
        $r19 = new sun.security.x509.URIName;
        specialinvoke $r19.<sun.security.x509.URIName: void <init>(java.lang.String)>("");
        specialinvoke $r18.<sun.security.x509.GeneralName: void <init>(sun.security.x509.GeneralNameInterface)>($r19);
        r4 = $r18;
        goto label11;

     label8:
        $r20 = new sun.security.x509.GeneralName;
        $r21 = new sun.security.x509.IPAddressName;
        $r22 = (byte[]) null;
        specialinvoke $r21.<sun.security.x509.IPAddressName: void <init>(byte[])>($r22);
        specialinvoke $r20.<sun.security.x509.GeneralName: void <init>(sun.security.x509.GeneralNameInterface)>($r21);
        r4 = $r20;
        goto label11;

     label9:
        $r23 = new sun.security.x509.GeneralName;
        $r24 = new sun.security.x509.OIDName;
        $r25 = new sun.security.util.ObjectIdentifier;
        $r26 = (int[]) null;
        specialinvoke $r25.<sun.security.util.ObjectIdentifier: void <init>(int[])>($r26);
        specialinvoke $r24.<sun.security.x509.OIDName: void <init>(sun.security.util.ObjectIdentifier)>($r25);
        specialinvoke $r23.<sun.security.x509.GeneralName: void <init>(sun.security.x509.GeneralNameInterface)>($r24);
        r4 = $r23;
        goto label11;

     label10:
        $r27 = new java.io.IOException;
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported GeneralNameInterface type: ");
        $i1 = interfaceinvoke r1.<sun.security.x509.GeneralNameInterface: int getType()>();
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r31);
        throw $r27;

     label11:
        $r32 = new sun.security.x509.GeneralSubtree;
        specialinvoke $r32.<sun.security.x509.GeneralSubtree: void <init>(sun.security.x509.GeneralName,int,int)>(r4, 0, -1);

     label12:
        return $r32;

     label13:
        $r33 := @caughtexception;
        r34 = $r33;
        $r35 = new java.lang.RuntimeException;
        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error: ");
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r35.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r39, r34);
        throw $r35;

        catch java.io.IOException from label0 to label12 with label13;
    }

    public sun.security.x509.GeneralSubtrees intersect(sun.security.x509.GeneralSubtrees)
    {
        sun.security.x509.GeneralSubtrees r0, r1, r2, r3, $r9, $r11;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, i16, $i17, $i18;
        sun.security.x509.GeneralNameInterface r4, r6, r7, r10, r14, r15;
        boolean z0, z1, z2, $z3, z4;
        sun.security.x509.GeneralSubtree r5, r12, r13;
        java.lang.NullPointerException $r8;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        r1 := @parameter0: sun.security.x509.GeneralSubtrees;
        if r1 != null goto label0;

        $r8 = new java.lang.NullPointerException;
        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("other GeneralSubtrees must not be null");
        throw $r8;

     label0:
        $r9 = new sun.security.x509.GeneralSubtrees;
        specialinvoke $r9.<sun.security.x509.GeneralSubtrees: void <init>()>();
        r2 = $r9;
        r3 = null;
        $i4 = virtualinvoke r0.<sun.security.x509.GeneralSubtrees: int size()>();
        if $i4 != 0 goto label1;

        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void union(sun.security.x509.GeneralSubtrees)>(r1);
        return null;

     label1:
        specialinvoke r0.<sun.security.x509.GeneralSubtrees: void minimize()>();
        specialinvoke r1.<sun.security.x509.GeneralSubtrees: void minimize()>();
        i0 = 0;

     label2:
        $i5 = virtualinvoke r0.<sun.security.x509.GeneralSubtrees: int size()>();
        if i0 >= $i5 goto label19;

        r4 = specialinvoke r0.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(int)>(i0);
        z0 = 0;
        z1 = 0;
        i1 = 0;

     label3:
        $i6 = virtualinvoke r1.<sun.security.x509.GeneralSubtrees: int size()>();
        if i1 >= $i6 goto label9;

        r5 = virtualinvoke r1.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtree get(int)>(i1);
        r6 = staticinvoke <sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(sun.security.x509.GeneralSubtree)>(r5);
        $i7 = interfaceinvoke r4.<sun.security.x509.GeneralNameInterface: int constrains(sun.security.x509.GeneralNameInterface)>(r6);
        tableswitch($i7)
        {
            case -1: goto label7;
            case 0: goto label6;
            case 1: goto label4;
            case 2: goto label6;
            case 3: goto label5;
            default: goto label7;
        };

     label4:
        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void remove(int)>(i0);
        i0 = i0 + -1;
        virtualinvoke r2.<sun.security.x509.GeneralSubtrees: void add(sun.security.x509.GeneralSubtree)>(r5);
        z1 = 0;
        goto label9;

     label5:
        z1 = 1;
        goto label8;

     label6:
        z1 = 0;
        goto label9;

     label7:
        goto label8;

     label8:
        i1 = i1 + 1;
        goto label3;

     label9:
        if z1 == 0 goto label18;

        z2 = 0;
        i8 = 0;

     label10:
        $i9 = virtualinvoke r0.<sun.security.x509.GeneralSubtrees: int size()>();
        if i8 >= $i9 goto label15;

        r10 = specialinvoke r0.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(int)>(i8);
        $i10 = interfaceinvoke r10.<sun.security.x509.GeneralNameInterface: int getType()>();
        $i11 = interfaceinvoke r4.<sun.security.x509.GeneralNameInterface: int getType()>();
        if $i10 != $i11 goto label14;

        i2 = 0;

     label11:
        $i12 = virtualinvoke r1.<sun.security.x509.GeneralSubtrees: int size()>();
        if i2 >= $i12 goto label14;

        r7 = specialinvoke r1.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(int)>(i2);
        i3 = interfaceinvoke r10.<sun.security.x509.GeneralNameInterface: int constrains(sun.security.x509.GeneralNameInterface)>(r7);
        if i3 == 0 goto label12;

        if i3 == 2 goto label12;

        if i3 != 1 goto label13;

     label12:
        z2 = 1;
        goto label14;

     label13:
        i2 = i2 + 1;
        goto label11;

     label14:
        i8 = i8 + 1;
        goto label10;

     label15:
        if z2 != 0 goto label17;

        if r3 != null goto label16;

        $r11 = new sun.security.x509.GeneralSubtrees;
        specialinvoke $r11.<sun.security.x509.GeneralSubtrees: void <init>()>();
        r3 = $r11;

     label16:
        r12 = specialinvoke r0.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtree createWidestSubtree(sun.security.x509.GeneralNameInterface)>(r4);
        $z3 = virtualinvoke r3.<sun.security.x509.GeneralSubtrees: boolean contains(sun.security.x509.GeneralSubtree)>(r12);
        if $z3 != 0 goto label17;

        virtualinvoke r3.<sun.security.x509.GeneralSubtrees: void add(sun.security.x509.GeneralSubtree)>(r12);

     label17:
        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void remove(int)>(i0);
        i0 = i0 + -1;

     label18:
        i0 = i0 + 1;
        goto label2;

     label19:
        $i13 = virtualinvoke r2.<sun.security.x509.GeneralSubtrees: int size()>();
        if $i13 <= 0 goto label20;

        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void union(sun.security.x509.GeneralSubtrees)>(r2);

     label20:
        i14 = 0;

     label21:
        $i15 = virtualinvoke r1.<sun.security.x509.GeneralSubtrees: int size()>();
        if i14 >= $i15 goto label29;

        r13 = virtualinvoke r1.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtree get(int)>(i14);
        r14 = staticinvoke <sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(sun.security.x509.GeneralSubtree)>(r13);
        z4 = 0;
        i16 = 0;

     label22:
        $i17 = virtualinvoke r0.<sun.security.x509.GeneralSubtrees: int size()>();
        if i16 >= $i17 goto label27;

        r15 = specialinvoke r0.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(int)>(i16);
        $i18 = interfaceinvoke r15.<sun.security.x509.GeneralNameInterface: int constrains(sun.security.x509.GeneralNameInterface)>(r14);
        tableswitch($i18)
        {
            case -1: goto label23;
            case 0: goto label24;
            case 1: goto label24;
            case 2: goto label24;
            case 3: goto label24;
            default: goto label25;
        };

     label23:
        z4 = 1;
        goto label26;

     label24:
        z4 = 0;
        goto label27;

     label25:
        goto label26;

     label26:
        i16 = i16 + 1;
        goto label22;

     label27:
        if z4 == 0 goto label28;

        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void add(sun.security.x509.GeneralSubtree)>(r13);

     label28:
        i14 = i14 + 1;
        goto label21;

     label29:
        return r3;
    }

    public void union(sun.security.x509.GeneralSubtrees)
    {
        sun.security.x509.GeneralSubtrees r0, r1;
        int i0, i1;
        sun.security.x509.GeneralSubtree $r2;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        r1 := @parameter0: sun.security.x509.GeneralSubtrees;
        if r1 == null goto label2;

        i0 = 0;
        i1 = virtualinvoke r1.<sun.security.x509.GeneralSubtrees: int size()>();

     label0:
        if i0 >= i1 goto label1;

        $r2 = virtualinvoke r1.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtree get(int)>(i0);
        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void add(sun.security.x509.GeneralSubtree)>($r2);
        i0 = i0 + 1;
        goto label0;

     label1:
        specialinvoke r0.<sun.security.x509.GeneralSubtrees: void minimize()>();

     label2:
        return;
    }

    public void reduce(sun.security.x509.GeneralSubtrees)
    {
        sun.security.x509.GeneralSubtrees r0, r1;
        int i0, i1, i2, $i3, $i4;
        sun.security.x509.GeneralNameInterface r2, r3;

        r0 := @this: sun.security.x509.GeneralSubtrees;
        r1 := @parameter0: sun.security.x509.GeneralSubtrees;
        if r1 != null goto label0;

        return;

     label0:
        i0 = 0;
        i1 = virtualinvoke r1.<sun.security.x509.GeneralSubtrees: int size()>();

     label1:
        if i0 >= i1 goto label9;

        r2 = specialinvoke r1.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(int)>(i0);
        i2 = 0;

     label2:
        $i3 = virtualinvoke r0.<sun.security.x509.GeneralSubtrees: int size()>();
        if i2 >= $i3 goto label8;

        r3 = specialinvoke r0.<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralNameInterface getGeneralNameInterface(int)>(i2);
        $i4 = interfaceinvoke r2.<sun.security.x509.GeneralNameInterface: int constrains(sun.security.x509.GeneralNameInterface)>(r3);
        tableswitch($i4)
        {
            case -1: goto label3;
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label7;
        };

     label3:
        goto label7;

     label4:
        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void remove(int)>(i2);
        i2 = i2 + -1;
        goto label7;

     label5:
        virtualinvoke r0.<sun.security.x509.GeneralSubtrees: void remove(int)>(i2);
        i2 = i2 + -1;
        goto label7;

     label6:
        goto label7;

     label7:
        i2 = i2 + 1;
        goto label2;

     label8:
        i0 = i0 + 1;
        goto label1;

     label9:
        return;
    }
}
