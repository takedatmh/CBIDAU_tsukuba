public class sun.nio.cs.Surrogate$Generator extends java.lang.Object
{
    private java.nio.charset.CoderResult error;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        sun.nio.cs.Surrogate$Generator r0;
        java.nio.charset.CoderResult $r1;

        r0 := @this: sun.nio.cs.Surrogate$Generator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = $r1;
        return;
    }

    public java.nio.charset.CoderResult error()
    {
        sun.nio.cs.Surrogate$Generator r0;
        boolean $z0;
        java.nio.charset.CoderResult $r1, $r3;
        java.lang.AssertionError $r2;

        r0 := @this: sun.nio.cs.Surrogate$Generator;
        $z0 = <sun.nio.cs.Surrogate$Generator: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $r1 = r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error>;
        if $r1 != null goto label0;

        $r2 = new java.lang.AssertionError;
        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error>;
        return $r3;
    }

    public int generate(int, int, java.nio.CharBuffer)
    {
        sun.nio.cs.Surrogate$Generator r0;
        int i0, i1, $i3, $i4;
        java.nio.CharBuffer r1;
        char c2, $c5, $c6;
        boolean $z0, $z1, $z2;
        java.nio.charset.CoderResult $r2, $r3, $r5, $r8;

        r0 := @this: sun.nio.cs.Surrogate$Generator;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.nio.CharBuffer;
        $z0 = staticinvoke <java.lang.Character: boolean isBmpCodePoint(int)>(i0);
        if $z0 == 0 goto label2;

        c2 = (char) i0;
        $z1 = staticinvoke <java.lang.Character: boolean isSurrogate(char)>(c2);
        if $z1 == 0 goto label0;

        $r2 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(i1);
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = $r2;
        return -1;

     label0:
        $i3 = virtualinvoke r1.<java.nio.CharBuffer: int remaining()>();
        if $i3 >= 1 goto label1;

        $r3 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = $r3;
        return -1;

     label1:
        virtualinvoke r1.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>(c2);
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = null;
        return 1;

     label2:
        $z2 = staticinvoke <java.lang.Character: boolean isValidCodePoint(int)>(i0);
        if $z2 == 0 goto label4;

        $i4 = virtualinvoke r1.<java.nio.CharBuffer: int remaining()>();
        if $i4 >= 2 goto label3;

        $r5 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = $r5;
        return -1;

     label3:
        $c5 = staticinvoke <java.lang.Character: char highSurrogate(int)>(i0);
        virtualinvoke r1.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c5);
        $c6 = staticinvoke <java.lang.Character: char lowSurrogate(int)>(i0);
        virtualinvoke r1.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c6);
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = null;
        return 2;

     label4:
        $r8 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult unmappableForLength(int)>(i1);
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = $r8;
        return -1;
    }

    public int generate(int, int, char[], int, int)
    {
        sun.nio.cs.Surrogate$Generator r0;
        int i0, i1, i2, i3, $i5, $i6, $i8;
        char[] r1;
        char c4, $c7, $c9;
        boolean $z0, $z1, $z2;
        java.nio.charset.CoderResult $r2, $r3, $r4, $r5;

        r0 := @this: sun.nio.cs.Surrogate$Generator;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: char[];
        i2 := @parameter3: int;
        i3 := @parameter4: int;
        $z0 = staticinvoke <java.lang.Character: boolean isBmpCodePoint(int)>(i0);
        if $z0 == 0 goto label2;

        c4 = (char) i0;
        $z1 = staticinvoke <java.lang.Character: boolean isSurrogate(char)>(c4);
        if $z1 == 0 goto label0;

        $r2 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(i1);
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = $r2;
        return -1;

     label0:
        $i5 = i3 - i2;
        if $i5 >= 1 goto label1;

        $r3 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = $r3;
        return -1;

     label1:
        r1[i2] = c4;
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = null;
        return 1;

     label2:
        $z2 = staticinvoke <java.lang.Character: boolean isValidCodePoint(int)>(i0);
        if $z2 == 0 goto label4;

        $i6 = i3 - i2;
        if $i6 >= 2 goto label3;

        $r4 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = $r4;
        return -1;

     label3:
        $c7 = staticinvoke <java.lang.Character: char highSurrogate(int)>(i0);
        r1[i2] = $c7;
        $i8 = i2 + 1;
        $c9 = staticinvoke <java.lang.Character: char lowSurrogate(int)>(i0);
        r1[$i8] = $c9;
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = null;
        return 2;

     label4:
        $r5 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult unmappableForLength(int)>(i1);
        r0.<sun.nio.cs.Surrogate$Generator: java.nio.charset.CoderResult error> = $r5;
        return -1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "sun/nio/cs/Surrogate";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <sun.nio.cs.Surrogate$Generator: boolean $assertionsDisabled> = $z1;
        return;
    }
}
