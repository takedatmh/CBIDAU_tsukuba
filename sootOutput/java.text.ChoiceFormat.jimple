public class java.text.ChoiceFormat extends java.text.NumberFormat
{
    private static final long serialVersionUID;
    private double[] choiceLimits;
    private java.lang.String[] choiceFormats;
    static final long SIGN;
    static final long EXPONENT;
    static final long POSITIVEINFINITY;

    public void applyPattern(java.lang.String)
    {
        java.text.ChoiceFormat r0;
        java.lang.String r1, r5, $r15, $r23, $r28;
        java.lang.StringBuffer[] r2;
        int i0, i1, i3, $i5, $i6, $i7, $i8, $i9, $i11, $i15, $i16;
        java.lang.StringBuffer $r3, $r7, $r9, $r11, $r13, $r14, $r21, $r22, $r24, $r25, $r27;
        java.lang.String[] r4, $r31, $r32;
        byte b2, $b12, $b13, $b14;
        double d0, d1;
        boolean z0, $z1, $z2, $z3;
        char c4, $c10;
        double[] r6, $r29, $r30;
        java.lang.IllegalArgumentException $r12, $r19, $r20;
        java.lang.Double $r16;
        java.lang.Exception $r17, r18;

        r0 := @this: java.text.ChoiceFormat;
        r1 := @parameter0: java.lang.String;
        r2 = newarray (java.lang.StringBuffer)[2];
        i0 = 0;

     label0:
        $i5 = lengthof r2;
        if i0 >= $i5 goto label1;

        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        r2[i0] = $r3;
        i0 = i0 + 1;
        goto label0;

     label1:
        r6 = newarray (double)[30];
        r4 = newarray (java.lang.String)[30];
        i1 = 0;
        b2 = 0;
        d0 = 0.0;
        d1 = #NaN;
        z0 = 0;
        i3 = 0;

     label2:
        $i6 = virtualinvoke r1.<java.lang.String: int length()>();
        if i3 >= $i6 goto label21;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);
        if c4 != 39 goto label6;

        $i7 = i3 + 1;
        $i8 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i7 >= $i8 goto label3;

        $i9 = i3 + 1;
        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);
        if $c10 != c4 goto label3;

        $r7 = r2[b2];
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c4);
        i3 = i3 + 1;
        goto label20;

     label3:
        if z0 != 0 goto label4;

        $z1 = 1;
        goto label5;

     label4:
        $z1 = 0;

     label5:
        z0 = $z1;
        goto label20;

     label6:
        if z0 == 0 goto label7;

        $r9 = r2[b2];
        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c4);
        goto label20;

     label7:
        if c4 == 60 goto label8;

        if c4 == 35 goto label8;

        if c4 != 8804 goto label17;

     label8:
        $r11 = r2[0];
        $i11 = virtualinvoke $r11.<java.lang.StringBuffer: int length()>();
        if $i11 != 0 goto label9;

        $r12 = new java.lang.IllegalArgumentException;
        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r12;

     label9:
        $r13 = r2[0];
        r5 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("\u221e");
        if $z2 == 0 goto label10;

        d0 = #Infinity;
        goto label12;

     label10:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-\u221e");
        if $z3 == 0 goto label11;

        d0 = #-Infinity;
        goto label12;

     label11:
        $r14 = r2[0];
        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();
        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r15);
        d0 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

     label12:
        goto label14;

     label13:
        $r17 := @caughtexception;
        r18 = $r17;
        $r19 = new java.lang.IllegalArgumentException;
        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r19;

     label14:
        if c4 != 60 goto label15;

        $b12 = d0 cmpl #Infinity;
        if $b12 == 0 goto label15;

        $b13 = d0 cmpl #-Infinity;
        if $b13 == 0 goto label15;

        d0 = staticinvoke <java.text.ChoiceFormat: double nextDouble(double)>(d0);

     label15:
        $b14 = d0 cmpg d1;
        if $b14 > 0 goto label16;

        $r20 = new java.lang.IllegalArgumentException;
        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r20;

     label16:
        $r21 = r2[0];
        virtualinvoke $r21.<java.lang.StringBuffer: void setLength(int)>(0);
        b2 = 1;
        goto label20;

     label17:
        if c4 != 124 goto label19;

        $i15 = lengthof r6;
        if i1 != $i15 goto label18;

        r6 = staticinvoke <java.text.ChoiceFormat: double[] doubleArraySize(double[])>(r6);
        r4 = specialinvoke r0.<java.text.ChoiceFormat: java.lang.String[] doubleArraySize(java.lang.String[])>(r4);

     label18:
        r6[i1] = d0;
        $r22 = r2[1];
        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();
        r4[i1] = $r23;
        i1 = i1 + 1;
        d1 = d0;
        $r24 = r2[1];
        virtualinvoke $r24.<java.lang.StringBuffer: void setLength(int)>(0);
        b2 = 0;
        goto label20;

     label19:
        $r25 = r2[b2];
        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c4);

     label20:
        i3 = i3 + 1;
        goto label2;

     label21:
        if b2 != 1 goto label23;

        $i16 = lengthof r6;
        if i1 != $i16 goto label22;

        r6 = staticinvoke <java.text.ChoiceFormat: double[] doubleArraySize(double[])>(r6);
        r4 = specialinvoke r0.<java.text.ChoiceFormat: java.lang.String[] doubleArraySize(java.lang.String[])>(r4);

     label22:
        r6[i1] = d0;
        $r27 = r2[1];
        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();
        r4[i1] = $r28;
        i1 = i1 + 1;

     label23:
        $r29 = newarray (double)[i1];
        r0.<java.text.ChoiceFormat: double[] choiceLimits> = $r29;
        $r30 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, $r30, 0, i1);
        $r31 = newarray (java.lang.String)[i1];
        r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats> = $r31;
        $r32 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, $r32, 0, i1);
        return;

        catch java.lang.Exception from label9 to label12 with label13;
    }

    public java.lang.String toPattern()
    {
        java.text.ChoiceFormat r0;
        java.lang.StringBuffer $r1, r2;
        int i0, i1, $i3, $i7, $i8, $i9, $i10, $i11, $i12;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.lang.String r3, $r12, $r22, $r31;
        boolean z0, $z1;
        char c2;
        double[] $r4, $r6, $r7, $r10, $r15, $r17;
        byte $b4, $b5, $b6;
        java.lang.StringBuilder $r8, $r9, $r11, $r19, $r20, $r21;
        java.lang.String[] $r25;

        r0 := @this: java.text.ChoiceFormat;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        i0 = 0;

     label0:
        $r4 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $i3 = lengthof $r4;
        if i0 >= $i3 goto label16;

        if i0 == 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(124);

     label1:
        $r6 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $d3 = $r6[i0];
        d0 = staticinvoke <java.text.ChoiceFormat: double previousDouble(double)>($d3);
        $r7 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $d4 = $r7[i0];
        $d5 = staticinvoke <java.lang.Math: double IEEEremainder(double,double)>($d4, 1.0);
        d1 = staticinvoke <java.lang.Math: double abs(double)>($d5);
        $d6 = staticinvoke <java.lang.Math: double IEEEremainder(double,double)>(d0, 1.0);
        d2 = staticinvoke <java.lang.Math: double abs(double)>($d6);
        $b4 = d1 cmpg d2;
        if $b4 >= 0 goto label2;

        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r10 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $d7 = $r10[i0];
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d7);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);
        goto label6;

     label2:
        $r15 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $d8 = $r15[i0];
        $b5 = $d8 cmpl #Infinity;
        if $b5 != 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\u221e");
        goto label5;

     label3:
        $r17 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $d9 = $r17[i0];
        $b6 = $d9 cmpl #-Infinity;
        if $b6 != 0 goto label4;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-\u221e");
        goto label5;

     label4:
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

     label5:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(60);

     label6:
        $r25 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        r3 = $r25[i0];
        $i7 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(60);
        if $i7 >= 0 goto label7;

        $i8 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(35);
        if $i8 >= 0 goto label7;

        $i9 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(8804);
        if $i9 >= 0 goto label7;

        $i10 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(124);
        if $i10 < 0 goto label8;

     label7:
        $z1 = 1;
        goto label9;

     label8:
        $z1 = 0;

     label9:
        z0 = $z1;
        if z0 == 0 goto label10;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

     label10:
        $i11 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(39);
        if $i11 >= 0 goto label11;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);
        goto label14;

     label11:
        i1 = 0;

     label12:
        $i12 = virtualinvoke r3.<java.lang.String: int length()>();
        if i1 >= $i12 goto label14;

        c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i1);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2);
        if c2 != 39 goto label13;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2);

     label13:
        i1 = i1 + 1;
        goto label12;

     label14:
        if z0 == 0 goto label15;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

     label15:
        i0 = i0 + 1;
        goto label0;

     label16:
        $r31 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r31;
    }

    public void <init>(java.lang.String)
    {
        java.text.ChoiceFormat r0;
        java.lang.String r1;

        r0 := @this: java.text.ChoiceFormat;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.text.NumberFormat: void <init>()>();
        virtualinvoke r0.<java.text.ChoiceFormat: void applyPattern(java.lang.String)>(r1);
        return;
    }

    public void <init>(double[], java.lang.String[])
    {
        java.text.ChoiceFormat r0;
        double[] r1;
        java.lang.String[] r2;

        r0 := @this: java.text.ChoiceFormat;
        r1 := @parameter0: double[];
        r2 := @parameter1: java.lang.String[];
        specialinvoke r0.<java.text.NumberFormat: void <init>()>();
        virtualinvoke r0.<java.text.ChoiceFormat: void setChoices(double[],java.lang.String[])>(r1, r2);
        return;
    }

    public void setChoices(double[], java.lang.String[])
    {
        java.text.ChoiceFormat r0;
        double[] r1;
        java.lang.String[] r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: java.text.ChoiceFormat;
        r1 := @parameter0: double[];
        r2 := @parameter1: java.lang.String[];
        $i0 = lengthof r1;
        $i1 = lengthof r2;
        if $i0 == $i1 goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array and limit arrays must be of the same length.");
        throw $r3;

     label0:
        r0.<java.text.ChoiceFormat: double[] choiceLimits> = r1;
        r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats> = r2;
        return;
    }

    public double[] getLimits()
    {
        java.text.ChoiceFormat r0;
        double[] $r1;

        r0 := @this: java.text.ChoiceFormat;
        $r1 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        return $r1;
    }

    public java.lang.Object[] getFormats()
    {
        java.text.ChoiceFormat r0;
        java.lang.String[] $r1;

        r0 := @this: java.text.ChoiceFormat;
        $r1 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        return $r1;
    }

    public java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.text.ChoiceFormat r0;
        long l0;
        java.lang.StringBuffer r1, $r3;
        java.text.FieldPosition r2;
        double $d0;

        r0 := @this: java.text.ChoiceFormat;
        l0 := @parameter0: long;
        r1 := @parameter1: java.lang.StringBuffer;
        r2 := @parameter2: java.text.FieldPosition;
        $d0 = (double) l0;
        $r3 = virtualinvoke r0.<java.text.ChoiceFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>($d0, r1, r2);
        return $r3;
    }

    public java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.text.ChoiceFormat r0;
        double d0, $d1;
        java.lang.StringBuffer r1, $r7;
        java.text.FieldPosition r2;
        int i0, $i1, i3;
        double[] $r3, $r4;
        byte $b2;
        java.lang.String[] $r5;
        java.lang.String $r6;

        r0 := @this: java.text.ChoiceFormat;
        d0 := @parameter0: double;
        r1 := @parameter1: java.lang.StringBuffer;
        r2 := @parameter2: java.text.FieldPosition;
        i0 = 0;

     label0:
        $r3 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $i1 = lengthof $r3;
        if i0 >= $i1 goto label2;

        $r4 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $d1 = $r4[i0];
        $b2 = d0 cmpl $d1;
        if $b2 >= 0 goto label1;

        goto label2;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        i3 = i0 + -1;
        if i3 >= 0 goto label3;

        i3 = 0;

     label3:
        $r5 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        $r6 = $r5[i3];
        $r7 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        return $r7;
    }

    public java.lang.Number parse(java.lang.String, java.text.ParsePosition)
    {
        java.text.ChoiceFormat r0;
        java.lang.String r1, r3;
        java.text.ParsePosition r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        double d0, d1, d2;
        java.lang.String[] $r4, $r5;
        boolean $z0;
        double[] $r6;
        java.lang.Double $r7;

        r0 := @this: java.text.ChoiceFormat;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.text.ParsePosition;
        i0 = r2.<java.text.ParsePosition: int index>;
        i1 = i0;
        d0 = #NaN;
        d1 = 0.0;
        i2 = 0;

     label0:
        $r4 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        $i3 = lengthof $r4;
        if i2 >= $i3 goto label2;

        $r5 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        r3 = $r5[i2];
        $i4 = virtualinvoke r3.<java.lang.String: int length()>();
        $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i0, r3, 0, $i4);
        if $z0 == 0 goto label1;

        $i5 = virtualinvoke r3.<java.lang.String: int length()>();
        $i6 = i0 + $i5;
        r2.<java.text.ParsePosition: int index> = $i6;
        $r6 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        d2 = $r6[i2];
        $i7 = r2.<java.text.ParsePosition: int index>;
        if $i7 <= i1 goto label1;

        i1 = r2.<java.text.ParsePosition: int index>;
        d0 = d2;
        $i8 = virtualinvoke r1.<java.lang.String: int length()>();
        if i1 != $i8 goto label1;

        goto label2;

     label1:
        i2 = i2 + 1;
        goto label0;

     label2:
        r2.<java.text.ParsePosition: int index> = i1;
        $i9 = r2.<java.text.ParsePosition: int index>;
        if $i9 != i0 goto label3;

        r2.<java.text.ParsePosition: int errorIndex> = i1;

     label3:
        $r7 = new java.lang.Double;
        specialinvoke $r7.<java.lang.Double: void <init>(double)>(d0);
        return $r7;
    }

    public static final double nextDouble(double)
    {
        double d0, $d1;

        d0 := @parameter0: double;
        $d1 = staticinvoke <java.text.ChoiceFormat: double nextDouble(double,boolean)>(d0, 1);
        return $d1;
    }

    public static final double previousDouble(double)
    {
        double d0, $d1;

        d0 := @parameter0: double;
        $d1 = staticinvoke <java.text.ChoiceFormat: double nextDouble(double,boolean)>(d0, 0);
        return $d1;
    }

    public java.lang.Object clone()
    {
        java.text.ChoiceFormat r0, r1;
        java.lang.Object $r2, $r4, $r8;
        double[] $r3, $r5, $r6;
        java.lang.String[] $r7, $r9, $r10;

        r0 := @this: java.text.ChoiceFormat;
        $r2 = specialinvoke r0.<java.text.NumberFormat: java.lang.Object clone()>();
        r1 = (java.text.ChoiceFormat) $r2;
        $r3 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();
        $r5 = (double[]) $r4;
        $r6 = (double[]) $r5;
        r1.<java.text.ChoiceFormat: double[] choiceLimits> = $r6;
        $r7 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();
        $r9 = (java.lang.String[]) $r8;
        $r10 = (java.lang.String[]) $r9;
        r1.<java.text.ChoiceFormat: java.lang.String[] choiceFormats> = $r10;
        return r1;
    }

    public int hashCode()
    {
        java.text.ChoiceFormat r0;
        int i0, $i1, $i2, $i3, $i4;
        double[] $r1;
        java.lang.String[] $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: java.text.ChoiceFormat;
        $r1 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        i0 = lengthof $r1;
        $r2 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        $i1 = lengthof $r2;
        if $i1 <= 0 goto label0;

        $r3 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        $r4 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        $i2 = lengthof $r4;
        $i3 = $i2 - 1;
        $r5 = $r3[$i3];
        $i4 = virtualinvoke $r5.<java.lang.String: int hashCode()>();
        i0 = i0 ^ $i4;

     label0:
        return i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.text.ChoiceFormat r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double[] $r5, $r6;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r7, $r8;

        r0 := @this: java.text.ChoiceFormat;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        return 0;

     label0:
        if r0 != r1 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == $r4 goto label2;

        return 0;

     label2:
        r2 = (java.text.ChoiceFormat) r1;
        $r5 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $r6 = r2.<java.text.ChoiceFormat: double[] choiceLimits>;
        $z0 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r5, $r6);
        if $z0 == 0 goto label3;

        $r7 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        $r8 = r2.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r8);
        if $z1 == 0 goto label3;

        $z2 = 1;
        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.text.ChoiceFormat r0;
        java.io.ObjectInputStream r1;
        double[] $r2;
        int $i0, $i1;
        java.lang.String[] $r3;
        java.io.InvalidObjectException $r4;

        r0 := @this: java.text.ChoiceFormat;
        r1 := @parameter0: java.io.ObjectInputStream;
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();
        $r2 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;
        $i0 = lengthof $r2;
        $r3 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;
        $i1 = lengthof $r3;
        if $i0 == $i1 goto label0;

        $r4 = new java.io.InvalidObjectException;
        specialinvoke $r4.<java.io.InvalidObjectException: void <init>(java.lang.String)>("limits and format arrays of different length.");
        throw $r4;

     label0:
        return;
    }

    public static double nextDouble(double, boolean)
    {
        double d0, d1, $d2, $d3;
        boolean z0, $z1, $z2;
        long l0, l1, l3, $l6;
        byte $b2, $b4, $b5;

        d0 := @parameter0: double;
        z0 := @parameter1: boolean;
        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);
        if $z1 == 0 goto label0;

        return d0;

     label0:
        $b2 = d0 cmpl 0.0;
        if $b2 != 0 goto label2;

        d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(1L);
        if z0 == 0 goto label1;

        return d1;

     label1:
        $d2 = neg d1;
        return $d2;

     label2:
        l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);
        l0 = l3 & 9223372036854775807L;
        $b4 = l3 cmp 0L;
        if $b4 <= 0 goto label3;

        $z2 = 1;
        goto label4;

     label3:
        $z2 = 0;

     label4:
        if $z2 != z0 goto label5;

        $b5 = l0 cmp 9218868437227405312L;
        if $b5 == 0 goto label6;

        l0 = l0 + 1L;
        goto label6;

     label5:
        l0 = l0 - 1L;

     label6:
        l1 = l3 & -9223372036854775808L;
        $l6 = l0 | l1;
        $d3 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l6);
        return $d3;
    }

    private static double[] doubleArraySize(double[])
    {
        double[] r0, r1;
        int i0, $i1;

        r0 := @parameter0: double[];
        i0 = lengthof r0;
        $i1 = i0 * 2;
        r1 = newarray (double)[$i1];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);
        return r1;
    }

    private java.lang.String[] doubleArraySize(java.lang.String[])
    {
        java.text.ChoiceFormat r0;
        java.lang.String[] r1, r2;
        int i0, $i1;

        r0 := @this: java.text.ChoiceFormat;
        r1 := @parameter0: java.lang.String[];
        i0 = lengthof r1;
        $i1 = i0 * 2;
        r2 = newarray (java.lang.String)[$i1];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i0);
        return r2;
    }
}
