public abstract class java.nio.charset.CharsetEncoder extends java.lang.Object
{
    private final java.nio.charset.Charset charset;
    private final float averageBytesPerChar;
    private final float maxBytesPerChar;
    private byte[] replacement;
    private java.nio.charset.CodingErrorAction malformedInputAction;
    private java.nio.charset.CodingErrorAction unmappableCharacterAction;
    private static final int ST_RESET;
    private static final int ST_CODING;
    private static final int ST_END;
    private static final int ST_FLUSHED;
    private int state;
    private static java.lang.String[] stateNames;
    private java.lang.ref.WeakReference cachedDecoder;
    static final boolean $assertionsDisabled;

    protected void <init>(java.nio.charset.Charset, float, float, byte[])
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.charset.Charset r1;
        float f0, f1;
        byte[] r2;
        java.nio.charset.CodingErrorAction $r3, $r4;
        byte $b0, $b1, $b2;
        java.lang.IllegalArgumentException $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.charset.Charset;
        f0 := @parameter1: float;
        f1 := @parameter2: float;
        r2 := @parameter3: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;
        r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction malformedInputAction> = $r3;
        $r4 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;
        r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction unmappableCharacterAction> = $r4;
        r0.<java.nio.charset.CharsetEncoder: int state> = 0;
        r0.<java.nio.charset.CharsetEncoder: java.lang.ref.WeakReference cachedDecoder> = null;
        r0.<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset> = r1;
        $b0 = f0 cmpg 0.0F;
        if $b0 > 0 goto label0;

        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-positive averageBytesPerChar");
        throw $r5;

     label0:
        $b1 = f1 cmpg 0.0F;
        if $b1 > 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-positive maxBytesPerChar");
        throw $r6;

     label1:
        $z0 = staticinvoke <java.nio.charset.Charset: boolean atBugLevel(java.lang.String)>("1.4");
        if $z0 != 0 goto label2;

        $b2 = f0 cmpl f1;
        if $b2 <= 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("averageBytesPerChar exceeds maxBytesPerChar");
        throw $r7;

     label2:
        r0.<java.nio.charset.CharsetEncoder: byte[] replacement> = r2;
        r0.<java.nio.charset.CharsetEncoder: float averageBytesPerChar> = f0;
        r0.<java.nio.charset.CharsetEncoder: float maxBytesPerChar> = f1;
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder replaceWith(byte[])>(r2);
        return;
    }

    protected void <init>(java.nio.charset.Charset, float, float)
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.charset.Charset r1;
        float f0, f1;
        byte[] $r2;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.charset.Charset;
        f0 := @parameter1: float;
        f1 := @parameter2: float;
        $r2 = newarray (byte)[1];
        $r2[0] = 63;
        specialinvoke r0.<java.nio.charset.CharsetEncoder: void <init>(java.nio.charset.Charset,float,float,byte[])>(r1, f0, f1, $r2);
        return;
    }

    public final java.nio.charset.Charset charset()
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.charset.Charset $r1;

        r0 := @this: java.nio.charset.CharsetEncoder;
        $r1 = r0.<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset>;
        return $r1;
    }

    public final byte[] replacement()
    {
        java.nio.charset.CharsetEncoder r0;
        byte[] $r1;

        r0 := @this: java.nio.charset.CharsetEncoder;
        $r1 = r0.<java.nio.charset.CharsetEncoder: byte[] replacement>;
        return $r1;
    }

    public final java.nio.charset.CharsetEncoder replaceWith(byte[])
    {
        java.nio.charset.CharsetEncoder r0;
        byte[] r1;
        int i0;
        java.lang.IllegalArgumentException $r2, $r3, $r4, $r5;
        float $f0, $f1;
        byte $b1;
        boolean $z0;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: byte[];
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null replacement");
        throw $r2;

     label0:
        i0 = lengthof r1;
        if i0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty replacement");
        throw $r3;

     label1:
        $f0 = (float) i0;
        $f1 = r0.<java.nio.charset.CharsetEncoder: float maxBytesPerChar>;
        $b1 = $f0 cmpl $f1;
        if $b1 <= 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Replacement too long");
        throw $r4;

     label2:
        $z0 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: boolean isLegalReplacement(byte[])>(r1);
        if $z0 != 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal replacement");
        throw $r5;

     label3:
        r0.<java.nio.charset.CharsetEncoder: byte[] replacement> = r1;
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: void implReplaceWith(byte[])>(r1);
        return r0;
    }

    protected void implReplaceWith(byte[])
    {
        java.nio.charset.CharsetEncoder r0;
        byte[] r1;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: byte[];
        return;
    }

    public boolean isLegalReplacement(byte[])
    {
        java.nio.charset.CharsetEncoder r0;
        byte[] r1;
        java.lang.ref.WeakReference r2, $r14;
        null_type n0;
        java.nio.ByteBuffer r3;
        java.nio.CharBuffer r4;
        java.nio.charset.CoderResult r5;
        java.lang.Object $r6;
        java.nio.charset.CharsetDecoder $r7, r8;
        java.nio.charset.Charset $r9;
        java.nio.charset.CodingErrorAction $r10, $r12;
        int $i0, $i1;
        float $f0, $f1, $f2;
        boolean $z0, $z1;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: byte[];
        r2 = r0.<java.nio.charset.CharsetEncoder: java.lang.ref.WeakReference cachedDecoder>;
        n0 = null;
        if r2 == null goto label0;

        $r6 = virtualinvoke r2.<java.lang.ref.WeakReference: java.lang.Object get()>();
        $r7 = (java.nio.charset.CharsetDecoder) $r6;
        r8 = $r7;
        if $r7 != null goto label1;

     label0:
        $r9 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>();
        r8 = virtualinvoke $r9.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();
        $r10 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;
        virtualinvoke r8.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r10);
        $r12 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;
        virtualinvoke r8.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r12);
        $r14 = new java.lang.ref.WeakReference;
        specialinvoke $r14.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r8);
        r0.<java.nio.charset.CharsetEncoder: java.lang.ref.WeakReference cachedDecoder> = $r14;
        goto label2;

     label1:
        virtualinvoke r8.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>();

     label2:
        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);
        $i0 = virtualinvoke r3.<java.nio.ByteBuffer: int remaining()>();
        $f0 = (float) $i0;
        $f1 = virtualinvoke r8.<java.nio.charset.CharsetDecoder: float maxCharsPerByte()>();
        $f2 = $f0 * $f1;
        $i1 = (int) $f2;
        r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>($i1);
        r5 = virtualinvoke r8.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(r3, r4, 1);
        $z0 = virtualinvoke r5.<java.nio.charset.CoderResult: boolean isError()>();
        if $z0 != 0 goto label3;

        $z1 = 1;
        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public java.nio.charset.CodingErrorAction malformedInputAction()
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.charset.CodingErrorAction $r1;

        r0 := @this: java.nio.charset.CharsetEncoder;
        $r1 = r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction malformedInputAction>;
        return $r1;
    }

    public final java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.charset.CodingErrorAction r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.charset.CodingErrorAction;
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null action");
        throw $r2;

     label0:
        r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction malformedInputAction> = r1;
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: void implOnMalformedInput(java.nio.charset.CodingErrorAction)>(r1);
        return r0;
    }

    protected void implOnMalformedInput(java.nio.charset.CodingErrorAction)
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.charset.CodingErrorAction r1;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.charset.CodingErrorAction;
        return;
    }

    public java.nio.charset.CodingErrorAction unmappableCharacterAction()
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.charset.CodingErrorAction $r1;

        r0 := @this: java.nio.charset.CharsetEncoder;
        $r1 = r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction unmappableCharacterAction>;
        return $r1;
    }

    public final java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.charset.CodingErrorAction r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.charset.CodingErrorAction;
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null action");
        throw $r2;

     label0:
        r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction unmappableCharacterAction> = r1;
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)>(r1);
        return r0;
    }

    protected void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.charset.CodingErrorAction r1;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.charset.CodingErrorAction;
        return;
    }

    public final float averageBytesPerChar()
    {
        java.nio.charset.CharsetEncoder r0;
        float $f0;

        r0 := @this: java.nio.charset.CharsetEncoder;
        $f0 = r0.<java.nio.charset.CharsetEncoder: float averageBytesPerChar>;
        return $f0;
    }

    public final float maxBytesPerChar()
    {
        java.nio.charset.CharsetEncoder r0;
        float $f0;

        r0 := @this: java.nio.charset.CharsetEncoder;
        $f0 = r0.<java.nio.charset.CharsetEncoder: float maxBytesPerChar>;
        return $f0;
    }

    public final java.nio.charset.CoderResult encode(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.CharBuffer r1;
        java.nio.ByteBuffer r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte b0, $b1;
        java.nio.charset.CoderResult r3, $r16;
        java.nio.BufferUnderflowException r4, $r5;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.nio.charset.CoderMalfunctionError $r6, $r9;
        java.nio.BufferOverflowException $r7, r8;
        java.nio.charset.CodingErrorAction r10, $r13, $r14, $r19, $r20;
        java.lang.AssertionError $r11, $r22;
        java.lang.String $r12;
        byte[] $r15, $r17;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.CharBuffer;
        r2 := @parameter1: java.nio.ByteBuffer;
        z0 := @parameter2: boolean;
        if z0 == 0 goto label0;

        $b1 = 2;
        goto label1;

     label0:
        $b1 = 1;

     label1:
        b0 = $b1;
        $i2 = r0.<java.nio.charset.CharsetEncoder: int state>;
        if $i2 == 0 goto label3;

        $i3 = r0.<java.nio.charset.CharsetEncoder: int state>;
        if $i3 == 1 goto label3;

        if z0 == 0 goto label2;

        $i4 = r0.<java.nio.charset.CharsetEncoder: int state>;
        if $i4 == 2 goto label3;

     label2:
        $i5 = r0.<java.nio.charset.CharsetEncoder: int state>;
        specialinvoke r0.<java.nio.charset.CharsetEncoder: void throwIllegalStateException(int,int)>($i5, b0);

     label3:
        r0.<java.nio.charset.CharsetEncoder: int state> = b0;

     label4:
        r3 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer)>(r1, r2);

     label5:
        goto label8;

     label6:
        $r5 := @caughtexception;
        r4 = $r5;
        $r6 = new java.nio.charset.CoderMalfunctionError;
        specialinvoke $r6.<java.nio.charset.CoderMalfunctionError: void <init>(java.lang.Exception)>(r4);
        throw $r6;

     label7:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = new java.nio.charset.CoderMalfunctionError;
        specialinvoke $r9.<java.nio.charset.CoderMalfunctionError: void <init>(java.lang.Exception)>(r8);
        throw $r9;

     label8:
        $z1 = virtualinvoke r3.<java.nio.charset.CoderResult: boolean isOverflow()>();
        if $z1 == 0 goto label9;

        return r3;

     label9:
        $z2 = virtualinvoke r3.<java.nio.charset.CoderResult: boolean isUnderflow()>();
        if $z2 == 0 goto label11;

        if z0 == 0 goto label10;

        $z3 = virtualinvoke r1.<java.nio.CharBuffer: boolean hasRemaining()>();
        if $z3 == 0 goto label10;

        $i6 = virtualinvoke r1.<java.nio.CharBuffer: int remaining()>();
        r3 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>($i6);
        goto label11;

     label10:
        return r3;

     label11:
        r10 = null;
        $z4 = virtualinvoke r3.<java.nio.charset.CoderResult: boolean isMalformed()>();
        if $z4 == 0 goto label12;

        r10 = r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction malformedInputAction>;
        goto label14;

     label12:
        $z5 = virtualinvoke r3.<java.nio.charset.CoderResult: boolean isUnmappable()>();
        if $z5 == 0 goto label13;

        r10 = r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction unmappableCharacterAction>;
        goto label14;

     label13:
        $z6 = <java.nio.charset.CharsetEncoder: boolean $assertionsDisabled>;
        if $z6 != 0 goto label14;

        $r11 = new java.lang.AssertionError;
        $r12 = virtualinvoke r3.<java.nio.charset.CoderResult: java.lang.String toString()>();
        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);
        throw $r11;

     label14:
        $r13 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;
        if r10 != $r13 goto label15;

        return r3;

     label15:
        $r14 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
        if r10 != $r14 goto label17;

        $i7 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();
        $r15 = r0.<java.nio.charset.CharsetEncoder: byte[] replacement>;
        $i8 = lengthof $r15;
        if $i7 >= $i8 goto label16;

        $r16 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;
        return $r16;

     label16:
        $r17 = r0.<java.nio.charset.CharsetEncoder: byte[] replacement>;
        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r17);

     label17:
        $r19 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction IGNORE>;
        if r10 == $r19 goto label18;

        $r20 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
        if r10 != $r20 goto label19;

     label18:
        $i9 = virtualinvoke r1.<java.nio.CharBuffer: int position()>();
        $i10 = virtualinvoke r3.<java.nio.charset.CoderResult: int length()>();
        $i11 = $i9 + $i10;
        virtualinvoke r1.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i11);
        goto label4;

     label19:
        $z7 = <java.nio.charset.CharsetEncoder: boolean $assertionsDisabled>;
        if $z7 != 0 goto label20;

        $r22 = new java.lang.AssertionError;
        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();
        throw $r22;

     label20:
        goto label4;

        catch java.nio.BufferUnderflowException from label4 to label5 with label6;
        catch java.nio.BufferOverflowException from label4 to label5 with label7;
    }

    public final java.nio.charset.CoderResult flush(java.nio.ByteBuffer)
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.ByteBuffer r1;
        java.nio.charset.CoderResult r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.ByteBuffer;
        $i0 = r0.<java.nio.charset.CharsetEncoder: int state>;
        if $i0 != 2 goto label1;

        r2 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer)>(r1);
        $z0 = virtualinvoke r2.<java.nio.charset.CoderResult: boolean isUnderflow()>();
        if $z0 == 0 goto label0;

        r0.<java.nio.charset.CharsetEncoder: int state> = 3;

     label0:
        return r2;

     label1:
        $i1 = r0.<java.nio.charset.CharsetEncoder: int state>;
        if $i1 == 3 goto label2;

        $i2 = r0.<java.nio.charset.CharsetEncoder: int state>;
        specialinvoke r0.<java.nio.charset.CharsetEncoder: void throwIllegalStateException(int,int)>($i2, 3);

     label2:
        $r3 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;
        return $r3;
    }

    protected java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer)
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.ByteBuffer r1;
        java.nio.charset.CoderResult $r2;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.ByteBuffer;
        $r2 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;
        return $r2;
    }

    public final java.nio.charset.CharsetEncoder reset()
    {
        java.nio.charset.CharsetEncoder r0;

        r0 := @this: java.nio.charset.CharsetEncoder;
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: void implReset()>();
        r0.<java.nio.charset.CharsetEncoder: int state> = 0;
        return r0;
    }

    protected void implReset()
    {
        java.nio.charset.CharsetEncoder r0;

        r0 := @this: java.nio.charset.CharsetEncoder;
        return;
    }

    protected abstract java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer);

    public final java.nio.ByteBuffer encode(java.nio.CharBuffer) throws java.nio.charset.CharacterCodingException
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.CharBuffer r1;
        int i0, $i1, $i2, $i3;
        java.nio.ByteBuffer r2, r4;
        java.nio.charset.CoderResult r3, $r6;
        float $f0, $f1, $f2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.CharBuffer;
        $i1 = virtualinvoke r1.<java.nio.CharBuffer: int remaining()>();
        $f0 = (float) $i1;
        $f1 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: float averageBytesPerChar()>();
        $f2 = $f0 * $f1;
        i0 = (int) $f2;
        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);
        if i0 != 0 goto label0;

        $i2 = virtualinvoke r1.<java.nio.CharBuffer: int remaining()>();
        if $i2 != 0 goto label0;

        return r2;

     label0:
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>();

     label1:
        $z0 = virtualinvoke r1.<java.nio.CharBuffer: boolean hasRemaining()>();
        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>(r1, r2, 1);
        goto label3;

     label2:
        $r6 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

     label3:
        r3 = $r6;
        $z1 = virtualinvoke r3.<java.nio.charset.CoderResult: boolean isUnderflow()>();
        if $z1 == 0 goto label4;

        r3 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult flush(java.nio.ByteBuffer)>(r2);

     label4:
        $z2 = virtualinvoke r3.<java.nio.charset.CoderResult: boolean isUnderflow()>();
        if $z2 == 0 goto label5;

        goto label7;

     label5:
        $z3 = virtualinvoke r3.<java.nio.charset.CoderResult: boolean isOverflow()>();
        if $z3 == 0 goto label6;

        $i3 = 2 * i0;
        i0 = $i3 + 1;
        r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);
        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(r2);
        r2 = r4;
        goto label1;

     label6:
        virtualinvoke r3.<java.nio.charset.CoderResult: void throwException()>();
        goto label1;

     label7:
        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();
        return r2;
    }

    private boolean canEncode(java.nio.CharBuffer)
    {
        java.nio.charset.CharsetEncoder r0;
        java.nio.CharBuffer r1;
        java.nio.charset.CodingErrorAction r2, r3, $r7, $r9;
        java.nio.charset.CharacterCodingException r4, $r15;
        boolean z0;
        java.lang.Throwable r5, $r19;
        int $i0, $i1, $i2;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.nio.CharBuffer;
        $i0 = r0.<java.nio.charset.CharsetEncoder: int state>;
        if $i0 != 3 goto label0;

        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>();
        goto label1;

     label0:
        $i1 = r0.<java.nio.charset.CharsetEncoder: int state>;
        if $i1 == 0 goto label1;

        $i2 = r0.<java.nio.charset.CharsetEncoder: int state>;
        specialinvoke r0.<java.nio.charset.CharsetEncoder: void throwIllegalStateException(int,int)>($i2, 1);

     label1:
        r2 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction malformedInputAction()>();
        r3 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction unmappableCharacterAction()>();

     label2:
        $r7 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r7);
        $r9 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r9);
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.ByteBuffer encode(java.nio.CharBuffer)>(r1);

     label3:
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>(r2);
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>(r3);
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>();
        goto label10;

     label4:
        $r15 := @caughtexception;

     label5:
        r4 = $r15;
        z0 = 0;

     label6:
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>(r2);
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>(r3);
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>();
        return z0;

     label7:
        $r19 := @caughtexception;

     label8:
        r5 = $r19;

     label9:
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>(r2);
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>(r3);
        virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>();
        throw r5;

     label10:
        return 1;

        catch java.nio.charset.CharacterCodingException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean canEncode(char)
    {
        java.nio.charset.CharsetEncoder r0;
        char c0;
        java.nio.CharBuffer r1;
        boolean $z0;

        r0 := @this: java.nio.charset.CharsetEncoder;
        c0 := @parameter0: char;
        r1 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(1);
        virtualinvoke r1.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>(c0);
        virtualinvoke r1.<java.nio.CharBuffer: java.nio.Buffer flip()>();
        $z0 = specialinvoke r0.<java.nio.charset.CharsetEncoder: boolean canEncode(java.nio.CharBuffer)>(r1);
        return $z0;
    }

    public boolean canEncode(java.lang.CharSequence)
    {
        java.nio.charset.CharsetEncoder r0;
        java.lang.CharSequence r1;
        java.nio.CharBuffer r2, $r3;
        boolean $z0, $z1;
        java.lang.String $r4;

        r0 := @this: java.nio.charset.CharsetEncoder;
        r1 := @parameter0: java.lang.CharSequence;
        $z0 = r1 instanceof java.nio.CharBuffer;
        if $z0 == 0 goto label0;

        $r3 = (java.nio.CharBuffer) r1;
        r2 = virtualinvoke $r3.<java.nio.CharBuffer: java.nio.CharBuffer duplicate()>();
        goto label1;

     label0:
        $r4 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();
        r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>($r4);

     label1:
        $z1 = specialinvoke r0.<java.nio.charset.CharsetEncoder: boolean canEncode(java.nio.CharBuffer)>(r2);
        return $z1;
    }

    private void throwIllegalStateException(int, int)
    {
        java.nio.charset.CharsetEncoder r0;
        int i0, i1;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r10;
        java.lang.String[] $r4, $r8;
        java.lang.String $r5, $r9, $r11;

        r0 := @this: java.nio.charset.CharsetEncoder;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = new java.lang.IllegalStateException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current state = ");
        $r4 = <java.nio.charset.CharsetEncoder: java.lang.String[] stateNames>;
        $r5 = $r4[i0];
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new state = ");
        $r8 = <java.nio.charset.CharsetEncoder: java.lang.String[] stateNames>;
        $r9 = $r8[i1];
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);
        throw $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.lang.String[] $r1;

        $r0 = class "java/nio/charset/CharsetEncoder";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.nio.charset.CharsetEncoder: boolean $assertionsDisabled> = $z1;
        $r1 = newarray (java.lang.String)[4];
        $r1[0] = "RESET";
        $r1[1] = "CODING";
        $r1[2] = "CODING_END";
        $r1[3] = "FLUSHED";
        <java.nio.charset.CharsetEncoder: java.lang.String[] stateNames> = $r1;
        return;
    }
}
