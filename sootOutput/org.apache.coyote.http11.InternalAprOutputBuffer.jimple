public class org.apache.coyote.http11.InternalAprOutputBuffer extends org.apache.coyote.http11.AbstractOutputBuffer
{
    private long socket;
    private java.nio.ByteBuffer bbuf;

    public void <init>(org.apache.coyote.Response, int)
    {
        org.apache.coyote.http11.InternalAprOutputBuffer r0;
        org.apache.coyote.Response r1;
        int i0, $i1, $i2, $i3;
        byte[] $r2;
        java.nio.ByteBuffer $r3, $r4;
        org.apache.coyote.http11.InternalAprOutputBuffer$SocketOutputBuffer $r5;
        org.apache.coyote.http11.OutputFilter[] $r6, $r7;
        java.util.Locale $r8;
        org.apache.tomcat.util.http.HttpMessages $r9;

        r0 := @this: org.apache.coyote.http11.InternalAprOutputBuffer;
        r1 := @parameter0: org.apache.coyote.Response;
        i0 := @parameter1: int;
        specialinvoke r0.<org.apache.coyote.http11.AbstractOutputBuffer: void <init>()>();
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: java.nio.ByteBuffer bbuf> = null;
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: org.apache.coyote.Response response> = r1;
        $r2 = newarray (byte)[i0];
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: byte[] buf> = $r2;
        if i0 >= 8192 goto label0;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(9000);
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: java.nio.ByteBuffer bbuf> = $r3;
        goto label1;

     label0:
        $i1 = i0 / 1500;
        $i2 = $i1 + 1;
        $i3 = $i2 * 1500;
        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i3);
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: java.nio.ByteBuffer bbuf> = $r4;

     label1:
        $r5 = new org.apache.coyote.http11.InternalAprOutputBuffer$SocketOutputBuffer;
        specialinvoke $r5.<org.apache.coyote.http11.InternalAprOutputBuffer$SocketOutputBuffer: void <init>(org.apache.coyote.http11.InternalAprOutputBuffer)>(r0);
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: org.apache.coyote.OutputBuffer outputStreamOutputBuffer> = $r5;
        $r6 = newarray (org.apache.coyote.http11.OutputFilter)[0];
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: org.apache.coyote.http11.OutputFilter[] filterLibrary> = $r6;
        $r7 = newarray (org.apache.coyote.http11.OutputFilter)[0];
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: org.apache.coyote.http11.OutputFilter[] activeFilters> = $r7;
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: int lastActiveFilter> = -1;
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: boolean committed> = 0;
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: boolean finished> = 0;
        $r8 = virtualinvoke r1.<org.apache.coyote.Response: java.util.Locale getLocale()>();
        $r9 = staticinvoke <org.apache.tomcat.util.http.HttpMessages: org.apache.tomcat.util.http.HttpMessages getInstance(java.util.Locale)>($r8);
        virtualinvoke $r9.<org.apache.tomcat.util.http.HttpMessages: java.lang.String getMessage(int)>(200);
        return;
    }

    public void init(org.apache.tomcat.util.net.SocketWrapper, org.apache.tomcat.util.net.AbstractEndpoint) throws java.io.IOException
    {
        org.apache.coyote.http11.InternalAprOutputBuffer r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        org.apache.tomcat.util.net.AbstractEndpoint r2;
        java.lang.Object $r3;
        java.lang.Long $r4;
        long $l0, $l1;
        java.nio.ByteBuffer $r5;

        r0 := @this: org.apache.coyote.http11.InternalAprOutputBuffer;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        r2 := @parameter1: org.apache.tomcat.util.net.AbstractEndpoint;
        $r3 = virtualinvoke r1.<org.apache.tomcat.util.net.SocketWrapper: java.lang.Object getSocket()>();
        $r4 = (java.lang.Long) $r3;
        $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: long socket> = $l0;
        $l1 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: long socket>;
        $r5 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: java.nio.ByteBuffer bbuf>;
        staticinvoke <org.apache.tomcat.jni.Socket: void setsbb(long,java.nio.ByteBuffer)>($l1, $r5);
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.coyote.http11.InternalAprOutputBuffer r0;

        r0 := @this: org.apache.coyote.http11.InternalAprOutputBuffer;
        specialinvoke r0.<org.apache.coyote.http11.AbstractOutputBuffer: void flush()>();
        specialinvoke r0.<org.apache.coyote.http11.InternalAprOutputBuffer: void flushBuffer()>();
        return;
    }

    public void recycle()
    {
        org.apache.coyote.http11.InternalAprOutputBuffer r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.apache.coyote.http11.InternalAprOutputBuffer;
        specialinvoke r0.<org.apache.coyote.http11.AbstractOutputBuffer: void recycle()>();
        $r1 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: java.nio.ByteBuffer bbuf>;
        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer clear()>();
        return;
    }

    public void endRequest() throws java.io.IOException
    {
        org.apache.coyote.http11.InternalAprOutputBuffer r0;
        org.apache.coyote.ActionCode $r1;
        boolean $z0, $z1;
        org.apache.coyote.Response $r2;
        int $i0, $i1;
        org.apache.coyote.http11.OutputFilter[] $r3;
        org.apache.coyote.http11.OutputFilter $r4;

        r0 := @this: org.apache.coyote.http11.InternalAprOutputBuffer;
        $z0 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: boolean committed>;
        if $z0 != 0 goto label0;

        $r2 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: org.apache.coyote.Response response>;
        $r1 = <org.apache.coyote.ActionCode: org.apache.coyote.ActionCode COMMIT>;
        virtualinvoke $r2.<org.apache.coyote.Response: void action(org.apache.coyote.ActionCode,java.lang.Object)>($r1, null);

     label0:
        $z1 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: boolean finished>;
        if $z1 == 0 goto label1;

        return;

     label1:
        $i0 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: int lastActiveFilter>;
        if $i0 == -1 goto label2;

        $r3 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: org.apache.coyote.http11.OutputFilter[] activeFilters>;
        $i1 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: int lastActiveFilter>;
        $r4 = $r3[$i1];
        interfaceinvoke $r4.<org.apache.coyote.http11.OutputFilter: long end()>();

     label2:
        specialinvoke r0.<org.apache.coyote.http11.InternalAprOutputBuffer: void flushBuffer()>();
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: boolean finished> = 1;
        return;
    }

    public void sendAck() throws java.io.IOException
    {
        org.apache.coyote.http11.InternalAprOutputBuffer r0;
        byte[] $r1, $r2;
        boolean $z0;
        long $l0;
        int $i1, $i2;
        java.io.IOException $r3;
        org.apache.tomcat.util.res.StringManager $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.coyote.http11.InternalAprOutputBuffer;
        $z0 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: boolean committed>;
        if $z0 != 0 goto label0;

        $l0 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: long socket>;
        $r1 = <org.apache.coyote.http11.Constants: byte[] ACK_BYTES>;
        $r2 = <org.apache.coyote.http11.Constants: byte[] ACK_BYTES>;
        $i1 = lengthof $r2;
        $i2 = staticinvoke <org.apache.tomcat.jni.Socket: int send(long,byte[],int,int)>($l0, $r1, 0, $i1);
        if $i2 >= 0 goto label0;

        $r3 = new java.io.IOException;
        $r4 = <org.apache.coyote.http11.InternalAprOutputBuffer: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = virtualinvoke $r4.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("iib.failedwrite");
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r3;

     label0:
        return;
    }

    protected void commit() throws java.io.IOException
    {
        org.apache.coyote.http11.InternalAprOutputBuffer r0;
        org.apache.coyote.Response $r1;
        int $i0, $i1;
        java.nio.ByteBuffer $r2;
        byte[] $r3;

        r0 := @this: org.apache.coyote.http11.InternalAprOutputBuffer;
        r0.<org.apache.coyote.http11.InternalAprOutputBuffer: boolean committed> = 1;
        $r1 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: org.apache.coyote.Response response>;
        virtualinvoke $r1.<org.apache.coyote.Response: void setCommitted(boolean)>(1);
        $i0 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: int pos>;
        if $i0 <= 0 goto label0;

        $r2 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: java.nio.ByteBuffer bbuf>;
        $r3 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: byte[] buf>;
        $i1 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: int pos>;
        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r3, 0, $i1);

     label0:
        return;
    }

    private void flushBuffer() throws java.io.IOException
    {
        org.apache.coyote.http11.InternalAprOutputBuffer r0;
        java.nio.ByteBuffer $r1, $r2, $r4;
        int $i0, $i2, $i3;
        long $l1;
        java.io.IOException $r3;

        r0 := @this: org.apache.coyote.http11.InternalAprOutputBuffer;
        $r1 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: java.nio.ByteBuffer bbuf>;
        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();
        if $i0 <= 0 goto label1;

        $l1 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: long socket>;
        $r2 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: java.nio.ByteBuffer bbuf>;
        $i2 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();
        $i3 = staticinvoke <org.apache.tomcat.jni.Socket: int sendbb(long,int,int)>($l1, 0, $i2);
        if $i3 >= 0 goto label0;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>()>();
        throw $r3;

     label0:
        $r4 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: java.nio.ByteBuffer bbuf>;
        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

     label1:
        return;
    }

    static java.nio.ByteBuffer access$0(org.apache.coyote.http11.InternalAprOutputBuffer)
    {
        org.apache.coyote.http11.InternalAprOutputBuffer r0;
        java.nio.ByteBuffer $r1;

        r0 := @parameter0: org.apache.coyote.http11.InternalAprOutputBuffer;
        $r1 = r0.<org.apache.coyote.http11.InternalAprOutputBuffer: java.nio.ByteBuffer bbuf>;
        return $r1;
    }

    static void access$1(org.apache.coyote.http11.InternalAprOutputBuffer) throws java.io.IOException
    {
        org.apache.coyote.http11.InternalAprOutputBuffer r0;

        r0 := @parameter0: org.apache.coyote.http11.InternalAprOutputBuffer;
        specialinvoke r0.<org.apache.coyote.http11.InternalAprOutputBuffer: void flushBuffer()>();
        return;
    }
}
