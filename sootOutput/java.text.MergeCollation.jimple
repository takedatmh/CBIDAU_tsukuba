final class java.text.MergeCollation extends java.lang.Object
{
    java.util.ArrayList patterns;
    private transient java.text.PatternEntry saveEntry;
    private transient java.text.PatternEntry lastEntry;
    private transient java.lang.StringBuffer excess;
    private transient byte[] statusArray;
    private final byte BITARRAYMASK;
    private final int BYTEPOWER;
    private final int BYTEMASK;

    public void <init>(java.lang.String) throws java.text.ParseException
    {
        java.text.MergeCollation r0;
        java.lang.String r1;
        java.util.ArrayList $r2;
        int i0, $i1;
        java.lang.StringBuffer $r3;
        byte[] $r4, $r5, $r6;

        r0 := @this: java.text.MergeCollation;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<java.text.MergeCollation: java.util.ArrayList patterns> = $r2;
        r0.<java.text.MergeCollation: java.text.PatternEntry saveEntry> = null;
        r0.<java.text.MergeCollation: java.text.PatternEntry lastEntry> = null;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        r0.<java.text.MergeCollation: java.lang.StringBuffer excess> = $r3;
        $r4 = newarray (byte)[8192];
        r0.<java.text.MergeCollation: byte[] statusArray> = $r4;
        r0.<java.text.MergeCollation: byte BITARRAYMASK> = 1;
        r0.<java.text.MergeCollation: int BYTEPOWER> = 3;
        r0.<java.text.MergeCollation: int BYTEMASK> = 7;
        i0 = 0;

     label0:
        $r5 = r0.<java.text.MergeCollation: byte[] statusArray>;
        $i1 = lengthof $r5;
        if i0 >= $i1 goto label1;

        $r6 = r0.<java.text.MergeCollation: byte[] statusArray>;
        $r6[i0] = 0;
        i0 = i0 + 1;
        goto label0;

     label1:
        virtualinvoke r0.<java.text.MergeCollation: void setPattern(java.lang.String)>(r1);
        return;
    }

    public java.lang.String getPattern()
    {
        java.text.MergeCollation r0;
        java.lang.String $r1;

        r0 := @this: java.text.MergeCollation;
        $r1 = virtualinvoke r0.<java.text.MergeCollation: java.lang.String getPattern(boolean)>(1);
        return $r1;
    }

    public java.lang.String getPattern(boolean)
    {
        java.text.MergeCollation r0;
        boolean z0;
        java.lang.StringBuffer $r1, r2;
        null_type n0, n1;
        java.util.ArrayList r3, $r6, $r7, $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.text.PatternEntry r4, r5, $r12, r13, r14, $r16, r17;
        java.lang.Object $r8, $r11, $r15;
        java.lang.String $r9, $r18;

        r0 := @this: java.text.MergeCollation;
        z0 := @parameter0: boolean;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        n0 = null;
        r3 = null;
        i0 = 0;

     label0:
        $r6 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();
        if i0 >= $i2 goto label7;

        $r7 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        r4 = (java.text.PatternEntry) $r8;
        $r9 = r4.<java.text.PatternEntry: java.lang.String extension>;
        $i3 = virtualinvoke $r9.<java.lang.String: int length()>();
        if $i3 == 0 goto label2;

        if r3 != null goto label1;

        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r3 = $r10;

     label1:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);
        goto label6;

     label2:
        if r3 == null goto label5;

        $i4 = i0 - 1;
        r5 = specialinvoke r0.<java.text.MergeCollation: java.text.PatternEntry findLastWithNoExtension(int)>($i4);
        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        i1 = $i5 - 1;

     label3:
        if i1 < 0 goto label4;

        $r11 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        $r12 = (java.text.PatternEntry) $r11;
        r13 = (java.text.PatternEntry) $r12;
        virtualinvoke r13.<java.text.PatternEntry: void addToBuffer(java.lang.StringBuffer,boolean,boolean,java.text.PatternEntry)>(r2, 0, z0, r5);
        i1 = i1 + -1;
        goto label3;

     label4:
        r3 = null;

     label5:
        virtualinvoke r4.<java.text.PatternEntry: void addToBuffer(java.lang.StringBuffer,boolean,boolean,java.text.PatternEntry)>(r2, 0, z0, null);

     label6:
        i0 = i0 + 1;
        goto label0;

     label7:
        if r3 == null goto label10;

        $i6 = i0 - 1;
        r14 = specialinvoke r0.<java.text.MergeCollation: java.text.PatternEntry findLastWithNoExtension(int)>($i6);
        $i7 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        i8 = $i7 - 1;

     label8:
        if i8 < 0 goto label9;

        $r15 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i8);
        $r16 = (java.text.PatternEntry) $r15;
        r17 = (java.text.PatternEntry) $r16;
        virtualinvoke r17.<java.text.PatternEntry: void addToBuffer(java.lang.StringBuffer,boolean,boolean,java.text.PatternEntry)>(r2, 0, z0, r14);
        i8 = i8 + -1;
        goto label8;

     label9:
        n1 = null;

     label10:
        $r18 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r18;
    }

    private final java.text.PatternEntry findLastWithNoExtension(int)
    {
        java.text.MergeCollation r0;
        int i0, i1, $i2;
        java.text.PatternEntry r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: java.text.MergeCollation;
        i0 := @parameter0: int;
        i1 = i0 + -1;

     label0:
        if i1 < 0 goto label2;

        $r2 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        r1 = (java.text.PatternEntry) $r3;
        $r4 = r1.<java.text.PatternEntry: java.lang.String extension>;
        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();
        if $i2 != 0 goto label1;

        return r1;

     label1:
        i1 = i1 + -1;
        goto label0;

     label2:
        return null;
    }

    public java.lang.String emitPattern()
    {
        java.text.MergeCollation r0;
        java.lang.String $r1;

        r0 := @this: java.text.MergeCollation;
        $r1 = virtualinvoke r0.<java.text.MergeCollation: java.lang.String emitPattern(boolean)>(1);
        return $r1;
    }

    public java.lang.String emitPattern(boolean)
    {
        java.text.MergeCollation r0;
        boolean z0;
        java.lang.StringBuffer $r1, r2;
        int i0, $i1;
        java.text.PatternEntry r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        java.lang.String $r7;

        r0 := @this: java.text.MergeCollation;
        z0 := @parameter0: boolean;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        i0 = 0;

     label0:
        $r4 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();
        if i0 >= $i1 goto label2;

        $r5 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        r3 = (java.text.PatternEntry) $r6;
        if r3 == null goto label1;

        virtualinvoke r3.<java.text.PatternEntry: void addToBuffer(java.lang.StringBuffer,boolean,boolean,java.text.PatternEntry)>(r2, 1, z0, null);

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r7;
    }

    public void setPattern(java.lang.String) throws java.text.ParseException
    {
        java.text.MergeCollation r0;
        java.lang.String r1;
        java.util.ArrayList $r2;

        r0 := @this: java.text.MergeCollation;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        virtualinvoke $r2.<java.util.ArrayList: void clear()>();
        virtualinvoke r0.<java.text.MergeCollation: void addPattern(java.lang.String)>(r1);
        return;
    }

    public void addPattern(java.lang.String) throws java.text.ParseException
    {
        java.text.MergeCollation r0;
        java.lang.String r1;
        java.text.PatternEntry$Parser r2, $r4;
        java.text.PatternEntry r3;

        r0 := @this: java.text.MergeCollation;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        return;

     label0:
        $r4 = new java.text.PatternEntry$Parser;
        specialinvoke $r4.<java.text.PatternEntry$Parser: void <init>(java.lang.String)>(r1);
        r2 = $r4;
        r3 = virtualinvoke r2.<java.text.PatternEntry$Parser: java.text.PatternEntry next()>();

     label1:
        if r3 == null goto label2;

        specialinvoke r0.<java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>(r3);
        r3 = virtualinvoke r2.<java.text.PatternEntry$Parser: java.text.PatternEntry next()>();
        goto label1;

     label2:
        return;
    }

    public int getCount()
    {
        java.text.MergeCollation r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: java.text.MergeCollation;
        $r1 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();
        return $i0;
    }

    public java.text.PatternEntry getItemAt(int)
    {
        java.text.MergeCollation r0;
        int i0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        java.text.PatternEntry $r3;

        r0 := @this: java.text.MergeCollation;
        i0 := @parameter0: int;
        $r1 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        $r3 = (java.text.PatternEntry) $r2;
        return $r3;
    }

    private final void fixEntry(java.text.PatternEntry) throws java.text.ParseException
    {
        java.text.MergeCollation r0;
        java.text.PatternEntry r1, $r3, $r5, $r8, $r12, $r28, $r38;
        java.lang.StringBuilder $r2, $r11, $r13, $r14, $r15, $r16, $r17, $r31, $r33, $r35;
        boolean z0, $z1, $z2;
        int i0, $i5, $i6, $i7, $i8, $i10, i14, $i15, $i16, $i17;
        char c1, c2, $c9;
        byte b3, b4, $b11, $b12, $b13;
        java.lang.String $r4, $r6, $r7, $r9, $r18, $r19, $r20, $r34, $r36;
        java.text.ParseException $r10;
        byte[] $r21, $r23;
        java.util.ArrayList $r22, $r24, $r25, $r37, $r39, $r40, $r41;
        java.lang.StringBuffer $r27, $r29, $r30, $r32;

        r0 := @this: java.text.MergeCollation;
        r1 := @parameter0: java.text.PatternEntry;
        $r3 = r0.<java.text.MergeCollation: java.text.PatternEntry lastEntry>;
        if $r3 == null goto label1;

        $r4 = r1.<java.text.PatternEntry: java.lang.String chars>;
        $r5 = r0.<java.text.MergeCollation: java.text.PatternEntry lastEntry>;
        $r6 = $r5.<java.text.PatternEntry: java.lang.String chars>;
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z1 == 0 goto label1;

        $r7 = r1.<java.text.PatternEntry: java.lang.String extension>;
        $r8 = r0.<java.text.MergeCollation: java.text.PatternEntry lastEntry>;
        $r9 = $r8.<java.text.PatternEntry: java.lang.String extension>;
        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        if $z2 == 0 goto label1;

        $i5 = r1.<java.text.PatternEntry: int strength>;
        if $i5 == 3 goto label0;

        $i6 = r1.<java.text.PatternEntry: int strength>;
        if $i6 == -2 goto label0;

        $r10 = new java.text.ParseException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The entries ");
        $r12 = r0.<java.text.MergeCollation: java.text.PatternEntry lastEntry>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" are adjacent in the rules, but have conflicting ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("strengths: A character can\'t be unequal to itself.");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<java.text.ParseException: void <init>(java.lang.String,int)>($r18, -1);
        throw $r10;

     label0:
        return;

     label1:
        z0 = 1;
        $i7 = r1.<java.text.PatternEntry: int strength>;
        if $i7 == -2 goto label9;

        i0 = -1;
        $r19 = r1.<java.text.PatternEntry: java.lang.String chars>;
        $i8 = virtualinvoke $r19.<java.lang.String: int length()>();
        if $i8 != 1 goto label4;

        $r20 = r1.<java.text.PatternEntry: java.lang.String chars>;
        c1 = virtualinvoke $r20.<java.lang.String: char charAt(int)>(0);
        c2 = c1 >> 3;
        $r21 = r0.<java.text.MergeCollation: byte[] statusArray>;
        b3 = $r21[c2];
        $c9 = c1 & 7;
        $i10 = 1 << $c9;
        b4 = (byte) $i10;
        if b3 == 0 goto label2;

        $b11 = b3 & b4;
        if $b11 == 0 goto label2;

        $r22 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        i0 = virtualinvoke $r22.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);
        goto label3;

     label2:
        $r23 = r0.<java.text.MergeCollation: byte[] statusArray>;
        $b12 = b3 | b4;
        $b13 = (byte) $b12;
        $r23[c2] = $b13;

     label3:
        goto label5;

     label4:
        $r24 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        i0 = virtualinvoke $r24.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

     label5:
        if i0 == -1 goto label6;

        $r25 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        virtualinvoke $r25.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label6:
        $r27 = r0.<java.text.MergeCollation: java.lang.StringBuffer excess>;
        virtualinvoke $r27.<java.lang.StringBuffer: void setLength(int)>(0);
        $r28 = r0.<java.text.MergeCollation: java.text.PatternEntry lastEntry>;
        $r29 = r0.<java.text.MergeCollation: java.lang.StringBuffer excess>;
        i14 = specialinvoke r0.<java.text.MergeCollation: int findLastEntry(java.text.PatternEntry,java.lang.StringBuffer)>($r28, $r29);
        $r30 = r0.<java.text.MergeCollation: java.lang.StringBuffer excess>;
        $i15 = virtualinvoke $r30.<java.lang.StringBuffer: int length()>();
        if $i15 == 0 goto label7;

        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
        $r32 = r0.<java.text.MergeCollation: java.lang.StringBuffer excess>;
        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);
        $r34 = r1.<java.text.PatternEntry: java.lang.String extension>;
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        r1.<java.text.PatternEntry: java.lang.String extension> = $r36;
        $r37 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $i16 = virtualinvoke $r37.<java.util.ArrayList: int size()>();
        if i14 == $i16 goto label7;

        $r38 = r0.<java.text.MergeCollation: java.text.PatternEntry saveEntry>;
        r0.<java.text.MergeCollation: java.text.PatternEntry lastEntry> = $r38;
        z0 = 0;

     label7:
        $r39 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $i17 = virtualinvoke $r39.<java.util.ArrayList: int size()>();
        if i14 != $i17 goto label8;

        $r40 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);
        r0.<java.text.MergeCollation: java.text.PatternEntry saveEntry> = r1;
        goto label9;

     label8:
        $r41 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        virtualinvoke $r41.<java.util.ArrayList: void add(int,java.lang.Object)>(i14, r1);

     label9:
        if z0 == 0 goto label10;

        r0.<java.text.MergeCollation: java.text.PatternEntry lastEntry> = r1;

     label10:
        return;
    }

    private final int findLastEntry(java.text.PatternEntry, java.lang.StringBuffer) throws java.text.ParseException
    {
        java.text.MergeCollation r0;
        java.text.PatternEntry r1, r17;
        java.lang.StringBuffer r2;
        int i0, $i2, $i3, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16;
        char c1, $c4, $c6, $c7;
        java.lang.String $r3, $r4, $r6, $r13, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r30;
        byte[] $r5;
        byte $b5;
        java.util.ArrayList $r7, $r8, $r14, $r15;
        java.text.ParseException $r9, $r26;
        java.lang.StringBuilder $r10, $r11, $r12, $r27, $r28, $r29;
        java.lang.Object $r16;
        boolean $z0;

        r0 := @this: java.text.MergeCollation;
        r1 := @parameter0: java.text.PatternEntry;
        r2 := @parameter1: java.lang.StringBuffer;
        if r1 != null goto label0;

        return 0;

     label0:
        $i2 = r1.<java.text.PatternEntry: int strength>;
        if $i2 == -2 goto label5;

        i0 = -1;
        $r3 = r1.<java.text.PatternEntry: java.lang.String chars>;
        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i3 != 1 goto label2;

        $r4 = r1.<java.text.PatternEntry: java.lang.String chars>;
        $c4 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);
        c1 = $c4 >> 3;
        $r5 = r0.<java.text.MergeCollation: byte[] statusArray>;
        $b5 = $r5[c1];
        $r6 = r1.<java.text.PatternEntry: java.lang.String chars>;
        $c6 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(0);
        $c7 = $c6 & 7;
        $i8 = 1 << $c7;
        $i9 = $b5 & $i8;
        if $i9 == 0 goto label1;

        $r7 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        i0 = virtualinvoke $r7.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

     label1:
        goto label3;

     label2:
        $r8 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        i0 = virtualinvoke $r8.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

     label3:
        if i0 != -1 goto label4;

        $r9 = new java.text.ParseException;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("couldn\'t find last entry: ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.text.ParseException: void <init>(java.lang.String,int)>($r13, i0);
        throw $r9;

     label4:
        $i10 = i0 + 1;
        return $i10;

     label5:
        $r14 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $i11 = virtualinvoke $r14.<java.util.ArrayList: int size()>();
        i12 = $i11 - 1;

     label6:
        if i12 < 0 goto label8;

        $r15 = r0.<java.text.MergeCollation: java.util.ArrayList patterns>;
        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i12);
        r17 = (java.text.PatternEntry) $r16;
        $r18 = r17.<java.text.PatternEntry: java.lang.String chars>;
        $r19 = r1.<java.text.PatternEntry: java.lang.String chars>;
        $r20 = r17.<java.text.PatternEntry: java.lang.String chars>;
        $i13 = virtualinvoke $r20.<java.lang.String: int length()>();
        $z0 = virtualinvoke $r18.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, $r19, 0, $i13);
        if $z0 == 0 goto label7;

        $r21 = r1.<java.text.PatternEntry: java.lang.String chars>;
        $r22 = r17.<java.text.PatternEntry: java.lang.String chars>;
        $i14 = virtualinvoke $r22.<java.lang.String: int length()>();
        $r23 = r1.<java.text.PatternEntry: java.lang.String chars>;
        $i15 = virtualinvoke $r23.<java.lang.String: int length()>();
        $r24 = virtualinvoke $r21.<java.lang.String: java.lang.String substring(int,int)>($i14, $i15);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);
        goto label8;

     label7:
        i12 = i12 + -1;
        goto label6;

     label8:
        if i12 != -1 goto label9;

        $r26 = new java.text.ParseException;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("couldn\'t find: ");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r26.<java.text.ParseException: void <init>(java.lang.String,int)>($r30, i12);
        throw $r26;

     label9:
        $i16 = i12 + 1;
        return $i16;
    }
}
