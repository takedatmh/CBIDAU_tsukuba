class sun.security.provider.PolicyFile$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final sun.security.provider.PolicyFile this$0;

    void <init>(sun.security.provider.PolicyFile)
    {
        sun.security.provider.PolicyFile$1 r0;
        sun.security.provider.PolicyFile r1;

        r0 := @this: sun.security.provider.PolicyFile$1;
        r1 := @parameter0: sun.security.provider.PolicyFile;
        r0.<sun.security.provider.PolicyFile$1: sun.security.provider.PolicyFile this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.String run()
    {
        sun.security.provider.PolicyFile$1 r0;
        java.lang.String $r1, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r13;
        sun.security.provider.PolicyFile $r2, $r4, $r7, $r10;
        boolean $z0, $z2, $z4, $z6;

        r0 := @this: sun.security.provider.PolicyFile$1;
        $r2 = r0.<sun.security.provider.PolicyFile$1: sun.security.provider.PolicyFile this$0>;
        $r1 = "true";
        $r3 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>("policy.expandProperties");
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);
        staticinvoke <sun.security.provider.PolicyFile: boolean access$002(sun.security.provider.PolicyFile,boolean)>($r2, $z0);
        $r4 = r0.<sun.security.provider.PolicyFile$1: sun.security.provider.PolicyFile this$0>;
        $r5 = "true";
        $r6 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>("policy.ignoreIdentityScope");
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);
        staticinvoke <sun.security.provider.PolicyFile: boolean access$102(sun.security.provider.PolicyFile,boolean)>($r4, $z2);
        $r7 = r0.<sun.security.provider.PolicyFile$1: sun.security.provider.PolicyFile this$0>;
        $r8 = "true";
        $r9 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>("policy.allowSystemProperty");
        $z4 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);
        staticinvoke <sun.security.provider.PolicyFile: boolean access$202(sun.security.provider.PolicyFile,boolean)>($r7, $z4);
        $r10 = r0.<sun.security.provider.PolicyFile$1: sun.security.provider.PolicyFile this$0>;
        $r11 = "false";
        $r12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.security.policy.utf8");
        $z6 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12);
        staticinvoke <sun.security.provider.PolicyFile: boolean access$302(sun.security.provider.PolicyFile,boolean)>($r10, $z6);
        $r13 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.security.policy.numcaches");
        return $r13;
    }

    public volatile java.lang.Object run()
    {
        sun.security.provider.PolicyFile$1 r0;
        java.lang.String $r1;

        r0 := @this: sun.security.provider.PolicyFile$1;
        $r1 = virtualinvoke r0.<sun.security.provider.PolicyFile$1: java.lang.String run()>();
        return $r1;
    }
}
