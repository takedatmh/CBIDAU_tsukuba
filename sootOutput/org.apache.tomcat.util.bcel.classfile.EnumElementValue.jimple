public class org.apache.tomcat.util.bcel.classfile.EnumElementValue extends org.apache.tomcat.util.bcel.classfile.ElementValue
{
    private final int valueIdx;

    void <init>(int, int, org.apache.tomcat.util.bcel.classfile.ConstantPool)
    {
        org.apache.tomcat.util.bcel.classfile.EnumElementValue r0;
        int i0, i1;
        org.apache.tomcat.util.bcel.classfile.ConstantPool r1;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.tomcat.util.bcel.classfile.EnumElementValue;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: org.apache.tomcat.util.bcel.classfile.ConstantPool;
        specialinvoke r0.<org.apache.tomcat.util.bcel.classfile.ElementValue: void <init>(int,org.apache.tomcat.util.bcel.classfile.ConstantPool)>(i0, r1);
        if i0 == 101 goto label0;

        $r2 = new java.lang.RuntimeException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Only element values of type enum can be built with this ctor - type specified: ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        r0.<org.apache.tomcat.util.bcel.classfile.EnumElementValue: int valueIdx> = i1;
        return;
    }

    public java.lang.String stringifyValue()
    {
        org.apache.tomcat.util.bcel.classfile.EnumElementValue r0;
        org.apache.tomcat.util.bcel.classfile.ConstantUtf8 r1;
        org.apache.tomcat.util.bcel.classfile.ConstantPool $r2;
        int $i0;
        org.apache.tomcat.util.bcel.classfile.Constant $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.tomcat.util.bcel.classfile.EnumElementValue;
        $r2 = specialinvoke r0.<org.apache.tomcat.util.bcel.classfile.ElementValue: org.apache.tomcat.util.bcel.classfile.ConstantPool getConstantPool()>();
        $i0 = r0.<org.apache.tomcat.util.bcel.classfile.EnumElementValue: int valueIdx>;
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant getConstant(int,byte)>($i0, 1);
        r1 = (org.apache.tomcat.util.bcel.classfile.ConstantUtf8) $r3;
        $r4 = virtualinvoke r1.<org.apache.tomcat.util.bcel.classfile.ConstantUtf8: java.lang.String getBytes()>();
        return $r4;
    }
}
