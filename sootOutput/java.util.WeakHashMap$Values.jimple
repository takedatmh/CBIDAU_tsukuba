class java.util.WeakHashMap$Values extends java.util.AbstractCollection
{
    final java.util.WeakHashMap this$0;

    private void <init>(java.util.WeakHashMap)
    {
        java.util.WeakHashMap$Values r0;
        java.util.WeakHashMap r1;

        r0 := @this: java.util.WeakHashMap$Values;
        r1 := @parameter0: java.util.WeakHashMap;
        r0.<java.util.WeakHashMap$Values: java.util.WeakHashMap this$0> = r1;
        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();
        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.WeakHashMap$Values r0;
        java.util.WeakHashMap$ValueIterator $r1;
        java.util.WeakHashMap $r2;

        r0 := @this: java.util.WeakHashMap$Values;
        $r1 = new java.util.WeakHashMap$ValueIterator;
        $r2 = r0.<java.util.WeakHashMap$Values: java.util.WeakHashMap this$0>;
        specialinvoke $r1.<java.util.WeakHashMap$ValueIterator: void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1)>($r2, null);
        return $r1;
    }

    public int size()
    {
        java.util.WeakHashMap$Values r0;
        java.util.WeakHashMap $r1;
        int $i0;

        r0 := @this: java.util.WeakHashMap$Values;
        $r1 = r0.<java.util.WeakHashMap$Values: java.util.WeakHashMap this$0>;
        $i0 = virtualinvoke $r1.<java.util.WeakHashMap: int size()>();
        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.WeakHashMap$Values r0;
        java.lang.Object r1;
        java.util.WeakHashMap $r2;
        boolean $z0;

        r0 := @this: java.util.WeakHashMap$Values;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.WeakHashMap$Values: java.util.WeakHashMap this$0>;
        $z0 = virtualinvoke $r2.<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>(r1);
        return $z0;
    }

    public void clear()
    {
        java.util.WeakHashMap$Values r0;
        java.util.WeakHashMap $r1;

        r0 := @this: java.util.WeakHashMap$Values;
        $r1 = r0.<java.util.WeakHashMap$Values: java.util.WeakHashMap this$0>;
        virtualinvoke $r1.<java.util.WeakHashMap: void clear()>();
        return;
    }

    void <init>(java.util.WeakHashMap, java.util.WeakHashMap$1)
    {
        java.util.WeakHashMap$Values r0;
        java.util.WeakHashMap r1;
        java.util.WeakHashMap$1 r2;

        r0 := @this: java.util.WeakHashMap$Values;
        r1 := @parameter0: java.util.WeakHashMap;
        r2 := @parameter1: java.util.WeakHashMap$1;
        specialinvoke r0.<java.util.WeakHashMap$Values: void <init>(java.util.WeakHashMap)>(r1);
        return;
    }
}
