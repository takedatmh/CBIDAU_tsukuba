public class sun.security.x509.CertificatePolicyMap extends java.lang.Object
{
    private sun.security.x509.CertificatePolicyId issuerDomain;
    private sun.security.x509.CertificatePolicyId subjectDomain;

    public void <init>(sun.security.x509.CertificatePolicyId, sun.security.x509.CertificatePolicyId)
    {
        sun.security.x509.CertificatePolicyMap r0;
        sun.security.x509.CertificatePolicyId r1, r2;

        r0 := @this: sun.security.x509.CertificatePolicyMap;
        r1 := @parameter0: sun.security.x509.CertificatePolicyId;
        r2 := @parameter1: sun.security.x509.CertificatePolicyId;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.CertificatePolicyMap: sun.security.x509.CertificatePolicyId issuerDomain> = r1;
        r0.<sun.security.x509.CertificatePolicyMap: sun.security.x509.CertificatePolicyId subjectDomain> = r2;
        return;
    }

    public void <init>(sun.security.util.DerValue) throws java.io.IOException
    {
        sun.security.x509.CertificatePolicyMap r0;
        sun.security.util.DerValue r1, $r5, $r8;
        byte $b0;
        java.io.IOException $r2;
        sun.security.x509.CertificatePolicyId $r3, $r6;
        sun.security.util.DerInputStream $r4, $r7;

        r0 := @this: sun.security.x509.CertificatePolicyMap;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $b0 = r1.<sun.security.util.DerValue: byte tag>;
        if $b0 == 48 goto label0;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Invalid encoding for CertificatePolicyMap");
        throw $r2;

     label0:
        $r3 = new sun.security.x509.CertificatePolicyId;
        $r4 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $r5 = virtualinvoke $r4.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        specialinvoke $r3.<sun.security.x509.CertificatePolicyId: void <init>(sun.security.util.DerValue)>($r5);
        r0.<sun.security.x509.CertificatePolicyMap: sun.security.x509.CertificatePolicyId issuerDomain> = $r3;
        $r6 = new sun.security.x509.CertificatePolicyId;
        $r7 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $r8 = virtualinvoke $r7.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        specialinvoke $r6.<sun.security.x509.CertificatePolicyId: void <init>(sun.security.util.DerValue)>($r8);
        r0.<sun.security.x509.CertificatePolicyMap: sun.security.x509.CertificatePolicyId subjectDomain> = $r6;
        return;
    }

    public sun.security.x509.CertificatePolicyId getIssuerIdentifier()
    {
        sun.security.x509.CertificatePolicyMap r0;
        sun.security.x509.CertificatePolicyId $r1;

        r0 := @this: sun.security.x509.CertificatePolicyMap;
        $r1 = r0.<sun.security.x509.CertificatePolicyMap: sun.security.x509.CertificatePolicyId issuerDomain>;
        return $r1;
    }

    public sun.security.x509.CertificatePolicyId getSubjectIdentifier()
    {
        sun.security.x509.CertificatePolicyMap r0;
        sun.security.x509.CertificatePolicyId $r1;

        r0 := @this: sun.security.x509.CertificatePolicyMap;
        $r1 = r0.<sun.security.x509.CertificatePolicyMap: sun.security.x509.CertificatePolicyId subjectDomain>;
        return $r1;
    }

    public java.lang.String toString()
    {
        sun.security.x509.CertificatePolicyMap r0;
        java.lang.StringBuilder $r1, $r3, $r6, $r7, $r10, $r11;
        java.lang.String r2, $r5, $r9;
        sun.security.x509.CertificatePolicyId $r4, $r8;

        r0 := @this: sun.security.x509.CertificatePolicyMap;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CertificatePolicyMap: [\nIssuerDomain:");
        $r4 = r0.<sun.security.x509.CertificatePolicyMap: sun.security.x509.CertificatePolicyId issuerDomain>;
        $r5 = virtualinvoke $r4.<sun.security.x509.CertificatePolicyId: java.lang.String toString()>();
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SubjectDomain:");
        $r8 = r0.<sun.security.x509.CertificatePolicyMap: sun.security.x509.CertificatePolicyId subjectDomain>;
        $r9 = virtualinvoke $r8.<sun.security.x509.CertificatePolicyId: java.lang.String toString()>();
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");
        r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        return r2;
    }

    public void encode(sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.x509.CertificatePolicyMap r0;
        sun.security.util.DerOutputStream r1, $r2, r3;
        sun.security.x509.CertificatePolicyId $r4, $r5;

        r0 := @this: sun.security.x509.CertificatePolicyMap;
        r1 := @parameter0: sun.security.util.DerOutputStream;
        $r2 = new sun.security.util.DerOutputStream;
        specialinvoke $r2.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r2;
        $r4 = r0.<sun.security.x509.CertificatePolicyMap: sun.security.x509.CertificatePolicyId issuerDomain>;
        virtualinvoke $r4.<sun.security.x509.CertificatePolicyId: void encode(sun.security.util.DerOutputStream)>(r3);
        $r5 = r0.<sun.security.x509.CertificatePolicyMap: sun.security.x509.CertificatePolicyId subjectDomain>;
        virtualinvoke $r5.<sun.security.x509.CertificatePolicyId: void encode(sun.security.util.DerOutputStream)>(r3);
        virtualinvoke r1.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r3);
        return;
    }
}
