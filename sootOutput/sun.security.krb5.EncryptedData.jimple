public class sun.security.krb5.EncryptedData extends java.lang.Object implements java.lang.Cloneable
{
    int eType;
    java.lang.Integer kvno;
    byte[] cipher;
    byte[] plain;
    public static final int ETYPE_NULL;
    public static final int ETYPE_DES_CBC_CRC;
    public static final int ETYPE_DES_CBC_MD4;
    public static final int ETYPE_DES_CBC_MD5;
    public static final int ETYPE_ARCFOUR_HMAC;
    public static final int ETYPE_ARCFOUR_HMAC_EXP;
    public static final int ETYPE_DES3_CBC_HMAC_SHA1_KD;
    public static final int ETYPE_AES128_CTS_HMAC_SHA1_96;
    public static final int ETYPE_AES256_CTS_HMAC_SHA1_96;

    private void <init>()
    {
        sun.security.krb5.EncryptedData r0;

        r0 := @this: sun.security.krb5.EncryptedData;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Object clone()
    {
        sun.security.krb5.EncryptedData r0, $r1, r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3, $r4, $r5;
        byte[] $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: sun.security.krb5.EncryptedData;
        $r1 = new sun.security.krb5.EncryptedData;
        specialinvoke $r1.<sun.security.krb5.EncryptedData: void <init>()>();
        r2 = $r1;
        $i0 = r0.<sun.security.krb5.EncryptedData: int eType>;
        r2.<sun.security.krb5.EncryptedData: int eType> = $i0;
        $r3 = r0.<sun.security.krb5.EncryptedData: java.lang.Integer kvno>;
        if $r3 == null goto label0;

        $r4 = new java.lang.Integer;
        $r5 = r0.<sun.security.krb5.EncryptedData: java.lang.Integer kvno>;
        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i1);
        r2.<sun.security.krb5.EncryptedData: java.lang.Integer kvno> = $r4;

     label0:
        $r6 = r0.<sun.security.krb5.EncryptedData: byte[] cipher>;
        if $r6 == null goto label1;

        $r7 = r0.<sun.security.krb5.EncryptedData: byte[] cipher>;
        $i2 = lengthof $r7;
        $r8 = newarray (byte)[$i2];
        r2.<sun.security.krb5.EncryptedData: byte[] cipher> = $r8;
        $r9 = r0.<sun.security.krb5.EncryptedData: byte[] cipher>;
        $r10 = r2.<sun.security.krb5.EncryptedData: byte[] cipher>;
        $r11 = r0.<sun.security.krb5.EncryptedData: byte[] cipher>;
        $i3 = lengthof $r11;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r10, 0, $i3);

     label1:
        return r2;
    }

    public void <init>(int, java.lang.Integer, byte[])
    {
        sun.security.krb5.EncryptedData r0;
        int i0;
        java.lang.Integer r1;
        byte[] r2;

        r0 := @this: sun.security.krb5.EncryptedData;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Integer;
        r2 := @parameter2: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.EncryptedData: int eType> = i0;
        r0.<sun.security.krb5.EncryptedData: java.lang.Integer kvno> = r1;
        r0.<sun.security.krb5.EncryptedData: byte[] cipher> = r2;
        return;
    }

    public void <init>(sun.security.krb5.EncryptionKey, byte[], int) throws sun.security.krb5.internal.KdcErrException, sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.EncryptedData r0;
        sun.security.krb5.EncryptionKey r1;
        byte[] r2, $r4, $r5;
        int i0, $i1, $i2;
        sun.security.krb5.internal.crypto.EType r3;
        java.lang.Integer $r6;

        r0 := @this: sun.security.krb5.EncryptedData;
        r1 := @parameter0: sun.security.krb5.EncryptionKey;
        r2 := @parameter1: byte[];
        i0 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $i1 = virtualinvoke r1.<sun.security.krb5.EncryptionKey: int getEType()>();
        r3 = staticinvoke <sun.security.krb5.internal.crypto.EType: sun.security.krb5.internal.crypto.EType getInstance(int)>($i1);
        $r4 = virtualinvoke r1.<sun.security.krb5.EncryptionKey: byte[] getBytes()>();
        $r5 = virtualinvoke r3.<sun.security.krb5.internal.crypto.EType: byte[] encrypt(byte[],byte[],int)>(r2, $r4, i0);
        r0.<sun.security.krb5.EncryptedData: byte[] cipher> = $r5;
        $i2 = virtualinvoke r1.<sun.security.krb5.EncryptionKey: int getEType()>();
        r0.<sun.security.krb5.EncryptedData: int eType> = $i2;
        $r6 = virtualinvoke r1.<sun.security.krb5.EncryptionKey: java.lang.Integer getKeyVersionNumber()>();
        r0.<sun.security.krb5.EncryptedData: java.lang.Integer kvno> = $r6;
        return;
    }

    public byte[] decrypt(sun.security.krb5.EncryptionKey, int) throws sun.security.krb5.internal.KdcErrException, sun.security.krb5.internal.KrbApErrException, sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.EncryptedData r0;
        sun.security.krb5.EncryptionKey r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r2, $r5, $r7, $r8, $r10;
        sun.security.krb5.internal.crypto.EType r3;
        sun.security.krb5.KrbCryptoException $r4;
        java.lang.String $r6, $r9, $r11;
        byte[] $r12, $r13, $r14, $r15, $r16;

        r0 := @this: sun.security.krb5.EncryptedData;
        r1 := @parameter0: sun.security.krb5.EncryptionKey;
        i0 := @parameter1: int;
        $i1 = r0.<sun.security.krb5.EncryptedData: int eType>;
        $i2 = virtualinvoke r1.<sun.security.krb5.EncryptionKey: int getEType()>();
        if $i1 == $i2 goto label0;

        $r4 = new sun.security.krb5.KrbCryptoException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EncryptedData is encrypted using keytype ");
        $i3 = r0.<sun.security.krb5.EncryptedData: int eType>;
        $r6 = staticinvoke <sun.security.krb5.internal.crypto.EType: java.lang.String toString(int)>($i3);
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but decryption key is of type ");
        $i4 = virtualinvoke r1.<sun.security.krb5.EncryptionKey: int getEType()>();
        $r9 = staticinvoke <sun.security.krb5.internal.crypto.EType: java.lang.String toString(int)>($i4);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r11);
        throw $r4;

     label0:
        $i5 = r0.<sun.security.krb5.EncryptedData: int eType>;
        r3 = staticinvoke <sun.security.krb5.internal.crypto.EType: sun.security.krb5.internal.crypto.EType getInstance(int)>($i5);
        $r12 = r0.<sun.security.krb5.EncryptedData: byte[] cipher>;
        $r13 = virtualinvoke r1.<sun.security.krb5.EncryptionKey: byte[] getBytes()>();
        $r14 = virtualinvoke r3.<sun.security.krb5.internal.crypto.EType: byte[] decrypt(byte[],byte[],int)>($r12, $r13, i0);
        r0.<sun.security.krb5.EncryptedData: byte[] plain> = $r14;
        r0.<sun.security.krb5.EncryptedData: byte[] cipher> = null;
        $r15 = r0.<sun.security.krb5.EncryptedData: byte[] plain>;
        $r16 = virtualinvoke r3.<sun.security.krb5.internal.crypto.EType: byte[] decryptedData(byte[])>($r15);
        return $r16;
    }

    private byte[] decryptedData() throws sun.security.krb5.internal.KdcErrException
    {
        sun.security.krb5.EncryptedData r0;
        sun.security.krb5.internal.crypto.EType r1;
        byte[] $r2, $r3, $r4;
        int $i0;

        r0 := @this: sun.security.krb5.EncryptedData;
        $r2 = r0.<sun.security.krb5.EncryptedData: byte[] plain>;
        if $r2 == null goto label0;

        $i0 = r0.<sun.security.krb5.EncryptedData: int eType>;
        r1 = staticinvoke <sun.security.krb5.internal.crypto.EType: sun.security.krb5.internal.crypto.EType getInstance(int)>($i0);
        $r3 = r0.<sun.security.krb5.EncryptedData: byte[] plain>;
        $r4 = virtualinvoke r1.<sun.security.krb5.internal.crypto.EType: byte[] decryptedData(byte[])>($r3);
        return $r4;

     label0:
        return null;
    }

    private void <init>(sun.security.util.DerValue) throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.EncryptedData r0;
        sun.security.util.DerValue r1, r4, r10, r15;
        null_type n0;
        int i0, $i4, $i5, $i6, $i9;
        byte $b1, $b2, $b3, $b7, $b8;
        sun.security.krb5.Asn1Exception $r2, $r7, $r18, $r20;
        sun.security.util.DerInputStream $r3, $r5, $r8, $r9, $r11, $r14, $r16, $r19;
        java.math.BigInteger $r6, $r12;
        java.lang.Integer $r13;
        byte[] $r17;

        r0 := @this: sun.security.krb5.EncryptedData;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        n0 = null;
        $b1 = virtualinvoke r1.<sun.security.util.DerValue: byte getTag()>();
        if $b1 == 48 goto label0;

        $r2 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r2.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r2;

     label0:
        $r3 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r4 = virtualinvoke $r3.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b2 = virtualinvoke r4.<sun.security.util.DerValue: byte getTag()>();
        $b3 = $b2 & 31;
        if $b3 != 0 goto label1;

        $r5 = virtualinvoke r4.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r6 = virtualinvoke $r5.<sun.security.util.DerInputStream: java.math.BigInteger getBigInteger()>();
        $i4 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();
        r0.<sun.security.krb5.EncryptedData: int eType> = $i4;
        goto label2;

     label1:
        $r7 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r7.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r7;

     label2:
        $r8 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i5 = virtualinvoke $r8.<sun.security.util.DerInputStream: int peekByte()>();
        $i6 = $i5 & 31;
        if $i6 != 1 goto label3;

        $r9 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r10 = virtualinvoke $r9.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r11 = virtualinvoke r10.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r12 = virtualinvoke $r11.<sun.security.util.DerInputStream: java.math.BigInteger getBigInteger()>();
        i0 = virtualinvoke $r12.<java.math.BigInteger: int intValue()>();
        $r13 = new java.lang.Integer;
        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(i0);
        r0.<sun.security.krb5.EncryptedData: java.lang.Integer kvno> = $r13;
        goto label4;

     label3:
        r0.<sun.security.krb5.EncryptedData: java.lang.Integer kvno> = null;

     label4:
        $r14 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r15 = virtualinvoke $r14.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b7 = virtualinvoke r15.<sun.security.util.DerValue: byte getTag()>();
        $b8 = $b7 & 31;
        if $b8 != 2 goto label5;

        $r16 = virtualinvoke r15.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r17 = virtualinvoke $r16.<sun.security.util.DerInputStream: byte[] getOctetString()>();
        r0.<sun.security.krb5.EncryptedData: byte[] cipher> = $r17;
        goto label6;

     label5:
        $r18 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r18.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r18;

     label6:
        $r19 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i9 = virtualinvoke $r19.<sun.security.util.DerInputStream: int available()>();
        if $i9 <= 0 goto label7;

        $r20 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r20.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r20;

     label7:
        return;
    }

    public byte[] asn1Encode() throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.EncryptedData r0;
        sun.security.util.DerOutputStream $r1, r2, r3, $r4, $r6, r7, $r11, $r13, r14;
        int $i0;
        long $l1, $l3;
        java.math.BigInteger $r5, $r10;
        byte $b2, $b4, $b5;
        java.lang.Integer $r8, $r9;
        byte[] $r12, $r15;

        r0 := @this: sun.security.krb5.EncryptedData;
        $r1 = new sun.security.util.DerOutputStream;
        specialinvoke $r1.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r1;
        $r4 = new sun.security.util.DerOutputStream;
        specialinvoke $r4.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r4;
        $i0 = r0.<sun.security.krb5.EncryptedData: int eType>;
        $l1 = (long) $i0;
        $r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void putInteger(java.math.BigInteger)>($r5);
        $b2 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 0);
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b2, r3);
        $r6 = new sun.security.util.DerOutputStream;
        specialinvoke $r6.<sun.security.util.DerOutputStream: void <init>()>();
        r7 = $r6;
        $r8 = r0.<sun.security.krb5.EncryptedData: java.lang.Integer kvno>;
        if $r8 == null goto label0;

        $r9 = r0.<sun.security.krb5.EncryptedData: java.lang.Integer kvno>;
        $l3 = virtualinvoke $r9.<java.lang.Integer: long longValue()>();
        $r10 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);
        virtualinvoke r7.<sun.security.util.DerOutputStream: void putInteger(java.math.BigInteger)>($r10);
        $b4 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 1);
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b4, r7);
        $r11 = new sun.security.util.DerOutputStream;
        specialinvoke $r11.<sun.security.util.DerOutputStream: void <init>()>();
        r7 = $r11;

     label0:
        $r12 = r0.<sun.security.krb5.EncryptedData: byte[] cipher>;
        virtualinvoke r7.<sun.security.util.DerOutputStream: void putOctetString(byte[])>($r12);
        $b5 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 2);
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b5, r7);
        $r13 = new sun.security.util.DerOutputStream;
        specialinvoke $r13.<sun.security.util.DerOutputStream: void <init>()>();
        r14 = $r13;
        virtualinvoke r14.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r2);
        $r15 = virtualinvoke r14.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        return $r15;
    }

    public static sun.security.krb5.EncryptedData parse(sun.security.util.DerInputStream, byte, boolean) throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.util.DerInputStream r0, $r4;
        byte b0, $b2, $b3, $b4, $b5;
        boolean z0;
        sun.security.util.DerValue r1, r2;
        int $i1;
        sun.security.krb5.Asn1Exception $r3;
        sun.security.krb5.EncryptedData $r5;

        r0 := @parameter0: sun.security.util.DerInputStream;
        b0 := @parameter1: byte;
        z0 := @parameter2: boolean;
        if z0 == 0 goto label0;

        $i1 = virtualinvoke r0.<sun.security.util.DerInputStream: int peekByte()>();
        $b2 = (byte) $i1;
        $b3 = $b2 & 31;
        if $b3 == b0 goto label0;

        return null;

     label0:
        r1 = virtualinvoke r0.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b4 = virtualinvoke r1.<sun.security.util.DerValue: byte getTag()>();
        $b5 = $b4 & 31;
        if b0 == $b5 goto label1;

        $r3 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r3.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r3;

     label1:
        $r4 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r2 = virtualinvoke $r4.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r5 = new sun.security.krb5.EncryptedData;
        specialinvoke $r5.<sun.security.krb5.EncryptedData: void <init>(sun.security.util.DerValue)>(r2);
        return $r5;
    }

    public byte[] reset(byte[])
    {
        sun.security.krb5.EncryptedData r0;
        byte[] r1, r2;
        byte b0, $b3, $b5, $b7, $b9, $b11, $b13;
        int i1, i2, $i6, $i8, $i12, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        short $s4, $s10, $s14;

        r0 := @this: sun.security.krb5.EncryptedData;
        r1 := @parameter0: byte[];
        r2 = null;
        $b3 = r1[1];
        $s4 = $b3 & 255;
        if $s4 >= 128 goto label0;

        $b5 = r1[1];
        $i6 = $b5 + 2;
        r2 = newarray (byte)[$i6];
        $b7 = r1[1];
        $i8 = $b7 + 2;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i8);
        goto label3;

     label0:
        $b9 = r1[1];
        $s10 = $b9 & 255;
        if $s10 <= 128 goto label3;

        $b11 = r1[1];
        b0 = $b11 & 127;
        i1 = 0;
        i2 = 0;

     label1:
        if i2 >= b0 goto label2;

        $i12 = i2 + 2;
        $b13 = r1[$i12];
        $s14 = $b13 & 255;
        $i15 = b0 - i2;
        $i16 = $i15 - 1;
        $i17 = 8 * $i16;
        $i18 = $s14 << $i17;
        i1 = i1 | $i18;
        i2 = i2 + 1;
        goto label1;

     label2:
        $i19 = i1 + b0;
        $i20 = $i19 + 2;
        r2 = newarray (byte)[$i20];
        $i21 = i1 + b0;
        $i22 = $i21 + 2;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i22);

     label3:
        return r2;
    }

    public int getEType()
    {
        sun.security.krb5.EncryptedData r0;
        int $i0;

        r0 := @this: sun.security.krb5.EncryptedData;
        $i0 = r0.<sun.security.krb5.EncryptedData: int eType>;
        return $i0;
    }

    public java.lang.Integer getKeyVersionNumber()
    {
        sun.security.krb5.EncryptedData r0;
        java.lang.Integer $r1;

        r0 := @this: sun.security.krb5.EncryptedData;
        $r1 = r0.<sun.security.krb5.EncryptedData: java.lang.Integer kvno>;
        return $r1;
    }

    public byte[] getBytes()
    {
        sun.security.krb5.EncryptedData r0;
        byte[] $r1;

        r0 := @this: sun.security.krb5.EncryptedData;
        $r1 = r0.<sun.security.krb5.EncryptedData: byte[] cipher>;
        return $r1;
    }
}
