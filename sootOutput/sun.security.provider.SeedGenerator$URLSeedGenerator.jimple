class sun.security.provider.SeedGenerator$URLSeedGenerator extends sun.security.provider.SeedGenerator
{
    private java.lang.String deviceName;
    private java.io.InputStream devRandom;

    void <init>(java.lang.String) throws java.io.IOException
    {
        sun.security.provider.SeedGenerator$URLSeedGenerator r0;
        java.lang.String r1;
        java.io.IOException $r2;

        r0 := @this: sun.security.provider.SeedGenerator$URLSeedGenerator;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<sun.security.provider.SeedGenerator: void <init>()>();
        if r1 != null goto label0;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("No random source specified");
        throw $r2;

     label0:
        r0.<sun.security.provider.SeedGenerator$URLSeedGenerator: java.lang.String deviceName> = r1;
        specialinvoke r0.<sun.security.provider.SeedGenerator$URLSeedGenerator: void init()>();
        return;
    }

    void <init>() throws java.io.IOException
    {
        sun.security.provider.SeedGenerator$URLSeedGenerator r0;

        r0 := @this: sun.security.provider.SeedGenerator$URLSeedGenerator;
        specialinvoke r0.<sun.security.provider.SeedGenerator$URLSeedGenerator: void <init>(java.lang.String)>("file:/dev/random");
        return;
    }

    private void init() throws java.io.IOException
    {
        sun.security.provider.SeedGenerator$URLSeedGenerator r0;
        java.net.URL $r1, r2;
        java.lang.Exception r3, $r8;
        java.lang.String $r4, $r12, $r14;
        sun.security.provider.SeedGenerator$URLSeedGenerator$1 $r5;
        java.lang.Object $r6;
        java.io.InputStream $r7;
        java.io.IOException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.Throwable $r15;

        r0 := @this: sun.security.provider.SeedGenerator$URLSeedGenerator;
        $r1 = new java.net.URL;
        $r4 = r0.<sun.security.provider.SeedGenerator$URLSeedGenerator: java.lang.String deviceName>;
        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r4);
        r2 = $r1;

     label0:
        $r5 = new sun.security.provider.SeedGenerator$URLSeedGenerator$1;
        specialinvoke $r5.<sun.security.provider.SeedGenerator$URLSeedGenerator$1: void <init>(sun.security.provider.SeedGenerator$URLSeedGenerator,java.net.URL)>(r0, r2);
        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r5);
        $r7 = (java.io.InputStream) $r6;
        r0.<sun.security.provider.SeedGenerator$URLSeedGenerator: java.io.InputStream devRandom> = $r7;

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r3 = $r8;
        $r9 = new java.io.IOException;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to open ");
        $r12 = r0.<sun.security.provider.SeedGenerator$URLSeedGenerator: java.lang.String deviceName>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = virtualinvoke r3.<java.lang.Exception: java.lang.Throwable getCause()>();
        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r15);
        throw $r9;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    private java.io.File getDeviceFile(java.net.URL) throws java.io.IOException
    {
        sun.security.provider.SeedGenerator$URLSeedGenerator r0;
        java.net.URL r1;
        java.net.URI r2, r3, $r14;
        java.lang.String r4, $r6, $r8, $r10, $r11, $r19;
        boolean $z0;
        java.io.File $r5, $r13, $r15, $r18;
        java.lang.StringBuilder $r7, $r9, $r12;
        java.net.URISyntaxException $r16, r17;

        r0 := @this: sun.security.provider.SeedGenerator$URLSeedGenerator;
        r1 := @parameter0: java.net.URL;

     label0:
        r2 = virtualinvoke r1.<java.net.URL: java.net.URI toURI()>();
        $z0 = virtualinvoke r2.<java.net.URI: boolean isOpaque()>();
        if $z0 == 0 goto label2;

        $r5 = new java.io.File;
        $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);
        r3 = virtualinvoke $r5.<java.io.File: java.net.URI toURI()>();
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke r3.<java.net.URI: java.lang.String toString()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke r2.<java.net.URI: java.lang.String toString()>();
        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(5);
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        $r13 = new java.io.File;
        $r14 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r4);
        specialinvoke $r13.<java.io.File: void <init>(java.net.URI)>($r14);

     label1:
        return $r13;

     label2:
        $r15 = new java.io.File;
        specialinvoke $r15.<java.io.File: void <init>(java.net.URI)>(r2);

     label3:
        return $r15;

     label4:
        $r16 := @caughtexception;
        r17 = $r16;
        $r18 = new java.io.File;
        $r19 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();
        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r19);
        return $r18;

        catch java.net.URISyntaxException from label0 to label1 with label4;
        catch java.net.URISyntaxException from label2 to label3 with label4;
    }

    void getSeedBytes(byte[])
    {
        sun.security.provider.SeedGenerator$URLSeedGenerator r0;
        byte[] r1;
        int i0, i1, i2, $i3;
        java.io.InputStream $r2;
        java.lang.InternalError $r3, $r12;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r13, $r14, $r16, $r17, $r19;
        java.lang.String $r6, $r9, $r15, $r18, $r20;
        java.io.IOException $r10, r11;

        r0 := @this: sun.security.provider.SeedGenerator$URLSeedGenerator;
        r1 := @parameter0: byte[];
        i0 = lengthof r1;
        i1 = 0;

     label0:
        if i1 >= i0 goto label2;

        $r2 = r0.<sun.security.provider.SeedGenerator$URLSeedGenerator: java.io.InputStream devRandom>;
        $i3 = i0 - i1;
        i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i1, $i3);
        if i2 >= 0 goto label1;

        $r3 = new java.lang.InternalError;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URLSeedGenerator ");
        $r6 = r0.<sun.security.provider.SeedGenerator$URLSeedGenerator: java.lang.String deviceName>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reached end of file");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.InternalError: void <init>(java.lang.String)>($r9);
        throw $r3;

     label1:
        i1 = i1 + i2;
        goto label0;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = new java.lang.InternalError;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URLSeedGenerator ");
        $r15 = r0.<sun.security.provider.SeedGenerator$URLSeedGenerator: java.lang.String deviceName>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" generated exception: ");
        $r18 = virtualinvoke r11.<java.io.IOException: java.lang.String getMessage()>();
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r12.<java.lang.InternalError: void <init>(java.lang.String)>($r20);
        throw $r12;

     label4:
        return;

        catch java.io.IOException from label0 to label2 with label3;
    }

    static java.io.File access$300(sun.security.provider.SeedGenerator$URLSeedGenerator, java.net.URL) throws java.io.IOException
    {
        sun.security.provider.SeedGenerator$URLSeedGenerator r0;
        java.net.URL r1;
        java.io.File $r2;

        r0 := @parameter0: sun.security.provider.SeedGenerator$URLSeedGenerator;
        r1 := @parameter1: java.net.URL;
        $r2 = specialinvoke r0.<sun.security.provider.SeedGenerator$URLSeedGenerator: java.io.File getDeviceFile(java.net.URL)>(r1);
        return $r2;
    }
}
