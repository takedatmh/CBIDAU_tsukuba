public class java.text.MessageFormat extends java.text.Format
{
    private static final long serialVersionUID;
    private java.util.Locale locale;
    private java.lang.String pattern;
    private static final int INITIAL_FORMATS;
    private java.text.Format[] formats;
    private int[] offsets;
    private int[] argumentNumbers;
    private int maxOffset;
    private static final int SEG_RAW;
    private static final int SEG_INDEX;
    private static final int SEG_TYPE;
    private static final int SEG_MODIFIER;
    private static final int TYPE_NULL;
    private static final int TYPE_NUMBER;
    private static final int TYPE_DATE;
    private static final int TYPE_TIME;
    private static final int TYPE_CHOICE;
    private static final java.lang.String[] TYPE_KEYWORDS;
    private static final int MODIFIER_DEFAULT;
    private static final int MODIFIER_CURRENCY;
    private static final int MODIFIER_PERCENT;
    private static final int MODIFIER_INTEGER;
    private static final java.lang.String[] NUMBER_MODIFIER_KEYWORDS;
    private static final int MODIFIER_SHORT;
    private static final int MODIFIER_MEDIUM;
    private static final int MODIFIER_LONG;
    private static final int MODIFIER_FULL;
    private static final java.lang.String[] DATE_TIME_MODIFIER_KEYWORDS;
    private static final int[] DATE_TIME_MODIFIERS;

    public void <init>(java.lang.String)
    {
        java.text.MessageFormat r0;
        java.lang.String r1;
        java.text.Format[] $r2;
        int[] $r3, $r4;
        java.util.Locale$Category $r5;
        java.util.Locale $r6;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.text.Format: void <init>()>();
        r0.<java.text.MessageFormat: java.lang.String pattern> = "";
        $r2 = newarray (java.text.Format)[10];
        r0.<java.text.MessageFormat: java.text.Format[] formats> = $r2;
        $r3 = newarray (int)[10];
        r0.<java.text.MessageFormat: int[] offsets> = $r3;
        $r4 = newarray (int)[10];
        r0.<java.text.MessageFormat: int[] argumentNumbers> = $r4;
        r0.<java.text.MessageFormat: int maxOffset> = -1;
        $r5 = <java.util.Locale$Category: java.util.Locale$Category FORMAT>;
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault(java.util.Locale$Category)>($r5);
        r0.<java.text.MessageFormat: java.util.Locale locale> = $r6;
        virtualinvoke r0.<java.text.MessageFormat: void applyPattern(java.lang.String)>(r1);
        return;
    }

    public void <init>(java.lang.String, java.util.Locale)
    {
        java.text.MessageFormat r0;
        java.lang.String r1;
        java.util.Locale r2;
        java.text.Format[] $r3;
        int[] $r4, $r5;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Locale;
        specialinvoke r0.<java.text.Format: void <init>()>();
        r0.<java.text.MessageFormat: java.lang.String pattern> = "";
        $r3 = newarray (java.text.Format)[10];
        r0.<java.text.MessageFormat: java.text.Format[] formats> = $r3;
        $r4 = newarray (int)[10];
        r0.<java.text.MessageFormat: int[] offsets> = $r4;
        $r5 = newarray (int)[10];
        r0.<java.text.MessageFormat: int[] argumentNumbers> = $r5;
        r0.<java.text.MessageFormat: int maxOffset> = -1;
        r0.<java.text.MessageFormat: java.util.Locale locale> = r2;
        virtualinvoke r0.<java.text.MessageFormat: void applyPattern(java.lang.String)>(r1);
        return;
    }

    public void setLocale(java.util.Locale)
    {
        java.text.MessageFormat r0;
        java.util.Locale r1;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.util.Locale;
        r0.<java.text.MessageFormat: java.util.Locale locale> = r1;
        return;
    }

    public java.util.Locale getLocale()
    {
        java.text.MessageFormat r0;
        java.util.Locale $r1;

        r0 := @this: java.text.MessageFormat;
        $r1 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        return $r1;
    }

    public void applyPattern(java.lang.String)
    {
        java.text.MessageFormat r0;
        java.lang.String r1, $r27;
        java.lang.StringBuilder[] r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r18, $r20, $r21, $r23, $r26;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i10;
        boolean z0, $z1;
        char c4, $c9;
        java.lang.IllegalArgumentException $r25;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.String;
        r2 = newarray (java.lang.StringBuilder)[4];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        r2[0] = $r3;
        i0 = 0;
        i1 = 0;
        z0 = 0;
        i2 = 0;
        r0.<java.text.MessageFormat: int maxOffset> = -1;
        i3 = 0;

     label0:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();
        if i3 >= $i5 goto label18;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);
        if i0 != 0 goto label6;

        if c4 != 39 goto label4;

        $i6 = i3 + 1;
        $i7 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i6 >= $i7 goto label1;

        $i8 = i3 + 1;
        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);
        if $c9 != 39 goto label1;

        $r4 = r2[i0];
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
        i3 = i3 + 1;
        goto label17;

     label1:
        if z0 != 0 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;
        goto label17;

     label4:
        if c4 != 123 goto label5;

        if z0 != 0 goto label5;

        i0 = 1;
        $r6 = r2[1];
        if $r6 != null goto label17;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        r2[1] = $r7;
        goto label17;

     label5:
        $r8 = r2[i0];
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
        goto label17;

     label6:
        if z0 == 0 goto label7;

        $r10 = r2[i0];
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
        if c4 != 39 goto label17;

        z0 = 0;
        goto label17;

     label7:
        lookupswitch(c4)
        {
            case 32: goto label13;
            case 39: goto label15;
            case 44: goto label8;
            case 123: goto label10;
            case 125: goto label11;
            default: goto label16;
        };

     label8:
        if i0 >= 3 goto label9;

        i0 = i0 + 1;
        $r12 = r2[i0];
        if $r12 != null goto label17;

        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        r2[i0] = $r13;
        goto label17;

     label9:
        $r14 = r2[i0];
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
        goto label17;

     label10:
        i2 = i2 + 1;
        $r16 = r2[i0];
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
        goto label17;

     label11:
        if i2 != 0 goto label12;

        i0 = 0;
        specialinvoke r0.<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>(i3, i1, r2);
        i1 = i1 + 1;
        r2[1] = null;
        r2[2] = null;
        r2[3] = null;
        goto label17;

     label12:
        i2 = i2 + -1;
        $r18 = r2[i0];
        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
        goto label17;

     label13:
        if i0 != 2 goto label14;

        $r20 = r2[2];
        $i10 = virtualinvoke $r20.<java.lang.StringBuilder: int length()>();
        if $i10 <= 0 goto label17;

     label14:
        $r21 = r2[i0];
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
        goto label17;

     label15:
        z0 = 1;

     label16:
        $r23 = r2[i0];
        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

     label17:
        i3 = i3 + 1;
        goto label0;

     label18:
        if i2 != 0 goto label19;

        if i0 == 0 goto label19;

        r0.<java.text.MessageFormat: int maxOffset> = -1;
        $r25 = new java.lang.IllegalArgumentException;
        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unmatched braces in the pattern.");
        throw $r25;

     label19:
        $r26 = r2[0];
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<java.text.MessageFormat: java.lang.String pattern> = $r27;
        return;
    }

    public java.lang.String toPattern()
    {
        java.text.MessageFormat r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.StringBuilder r1, $r4, $r8, $r24, $r28, $r41, $r45;
        java.text.Format r2;
        java.text.DateFormat r3, r38;
        java.lang.String $r5, $r26, $r30, $r43, $r47, $r50, $r51, $r52;
        int[] $r6, $r7, $r9, $r32, $r33, $r36, $r40;
        java.text.Format[] $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Locale $r12, $r15, $r18, $r21, $r34, $r37;
        java.text.NumberFormat $r13, $r16, $r19, $r22;
        java.text.DecimalFormat $r25;
        java.text.ChoiceFormat $r29;
        java.text.SimpleDateFormat $r42;
        java.lang.String[] $r46;

        r0 := @this: java.text.MessageFormat;
        i0 = 0;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r1 = $r4;
        i1 = 0;

     label0:
        $i3 = r0.<java.text.MessageFormat: int maxOffset>;
        if i1 > $i3 goto label14;

        $r5 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $r6 = r0.<java.text.MessageFormat: int[] offsets>;
        $i4 = $r6[i1];
        staticinvoke <java.text.MessageFormat: void copyAndFixQuotes(java.lang.String,int,int,java.lang.StringBuilder)>($r5, i0, $i4, r1);
        $r7 = r0.<java.text.MessageFormat: int[] offsets>;
        i0 = $r7[i1];
        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);
        $r9 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $i5 = $r9[i1];
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
        $r11 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        r2 = $r11[i1];
        if r2 != null goto label1;

        goto label13;

     label1:
        $z0 = r2 instanceof java.text.NumberFormat;
        if $z0 == 0 goto label7;

        $r12 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        $r13 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r12);
        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r13);
        if $z1 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",number");
        goto label13;

     label2:
        $r15 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        $r16 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>($r15);
        $z2 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r16);
        if $z2 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",number,currency");
        goto label13;

     label3:
        $r18 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        $r19 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)>($r18);
        $z3 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r19);
        if $z3 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",number,percent");
        goto label13;

     label4:
        $r21 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        $r22 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>($r21);
        $z4 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r22);
        if $z4 == 0 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",number,integer");
        goto label13;

     label5:
        $z5 = r2 instanceof java.text.DecimalFormat;
        if $z5 == 0 goto label6;

        $r24 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",number,");
        $r25 = (java.text.DecimalFormat) r2;
        $r26 = virtualinvoke $r25.<java.text.DecimalFormat: java.lang.String toPattern()>();
        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        goto label13;

     label6:
        $z6 = r2 instanceof java.text.ChoiceFormat;
        if $z6 == 0 goto label13;

        $r28 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",choice,");
        $r29 = (java.text.ChoiceFormat) r2;
        $r30 = virtualinvoke $r29.<java.text.ChoiceFormat: java.lang.String toPattern()>();
        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        goto label13;

     label7:
        $z7 = r2 instanceof java.text.DateFormat;
        if $z7 == 0 goto label13;

        i2 = 0;

     label8:
        $r32 = <java.text.MessageFormat: int[] DATE_TIME_MODIFIERS>;
        $i6 = lengthof $r32;
        if i2 >= $i6 goto label11;

        $r33 = <java.text.MessageFormat: int[] DATE_TIME_MODIFIERS>;
        $i7 = $r33[i2];
        $r34 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        r3 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>($i7, $r34);
        $z8 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r3);
        if $z8 == 0 goto label9;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",date");
        goto label11;

     label9:
        $r36 = <java.text.MessageFormat: int[] DATE_TIME_MODIFIERS>;
        $i8 = $r36[i2];
        $r37 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        r38 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>($i8, $r37);
        $z9 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r38);
        if $z9 == 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",time");
        goto label11;

     label10:
        i2 = i2 + 1;
        goto label8;

     label11:
        $r40 = <java.text.MessageFormat: int[] DATE_TIME_MODIFIERS>;
        $i9 = lengthof $r40;
        if i2 < $i9 goto label12;

        $z10 = r2 instanceof java.text.SimpleDateFormat;
        if $z10 == 0 goto label13;

        $r41 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",date,");
        $r42 = (java.text.SimpleDateFormat) r2;
        $r43 = virtualinvoke $r42.<java.text.SimpleDateFormat: java.lang.String toPattern()>();
        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
        goto label13;

     label12:
        if i2 == 0 goto label13;

        $r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
        $r46 = <java.text.MessageFormat: java.lang.String[] DATE_TIME_MODIFIER_KEYWORDS>;
        $r47 = $r46[i2];
        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

     label13:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);
        i1 = i1 + 1;
        goto label0;

     label14:
        $r50 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $r51 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $i10 = virtualinvoke $r51.<java.lang.String: int length()>();
        staticinvoke <java.text.MessageFormat: void copyAndFixQuotes(java.lang.String,int,int,java.lang.StringBuilder)>($r50, i0, $i10, r1);
        $r52 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r52;
    }

    public void setFormatsByArgumentIndex(java.text.Format[])
    {
        java.text.MessageFormat r0;
        java.text.Format[] r1, $r3;
        int i0, i1, $i2, $i3;
        int[] $r2;
        java.text.Format $r4;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.text.Format[];
        i0 = 0;

     label0:
        $i2 = r0.<java.text.MessageFormat: int maxOffset>;
        if i0 > $i2 goto label2;

        $r2 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        i1 = $r2[i0];
        $i3 = lengthof r1;
        if i1 >= $i3 goto label1;

        $r3 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r4 = r1[i1];
        $r3[i0] = $r4;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return;
    }

    public void setFormats(java.text.Format[])
    {
        java.text.MessageFormat r0;
        java.text.Format[] r1, $r2;
        int i0, i1, $i2, $i3, $i4;
        java.text.Format $r3;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.text.Format[];
        i0 = lengthof r1;
        $i2 = r0.<java.text.MessageFormat: int maxOffset>;
        $i3 = $i2 + 1;
        if i0 <= $i3 goto label0;

        $i4 = r0.<java.text.MessageFormat: int maxOffset>;
        i0 = $i4 + 1;

     label0:
        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r3 = r1[i1];
        $r2[i1] = $r3;
        i1 = i1 + 1;
        goto label1;

     label2:
        return;
    }

    public void setFormatByArgumentIndex(int, java.text.Format)
    {
        java.text.MessageFormat r0;
        int i0, i1, $i2, $i3;
        java.text.Format r1;
        int[] $r2;
        java.text.Format[] $r3;

        r0 := @this: java.text.MessageFormat;
        i0 := @parameter0: int;
        r1 := @parameter1: java.text.Format;
        i1 = 0;

     label0:
        $i2 = r0.<java.text.MessageFormat: int maxOffset>;
        if i1 > $i2 goto label2;

        $r2 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $i3 = $r2[i1];
        if $i3 != i0 goto label1;

        $r3 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r3[i1] = r1;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        return;
    }

    public void setFormat(int, java.text.Format)
    {
        java.text.MessageFormat r0;
        int i0;
        java.text.Format r1;
        java.text.Format[] $r2;

        r0 := @this: java.text.MessageFormat;
        i0 := @parameter0: int;
        r1 := @parameter1: java.text.Format;
        $r2 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r2[i0] = r1;
        return;
    }

    public java.text.Format[] getFormatsByArgumentIndex()
    {
        java.text.MessageFormat r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r1, $r2, $r4;
        java.text.Format[] r3, $r5;
        java.text.Format $r6;

        r0 := @this: java.text.MessageFormat;
        i0 = -1;
        i1 = 0;

     label0:
        $i3 = r0.<java.text.MessageFormat: int maxOffset>;
        if i1 > $i3 goto label2;

        $r1 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $i4 = $r1[i1];
        if $i4 <= i0 goto label1;

        $r2 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        i0 = $r2[i1];

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        $i5 = i0 + 1;
        r3 = newarray (java.text.Format)[$i5];
        i2 = 0;

     label3:
        $i6 = r0.<java.text.MessageFormat: int maxOffset>;
        if i2 > $i6 goto label4;

        $r4 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $i7 = $r4[i2];
        $r5 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r6 = $r5[i2];
        r3[$i7] = $r6;
        i2 = i2 + 1;
        goto label3;

     label4:
        return r3;
    }

    public java.text.Format[] getFormats()
    {
        java.text.MessageFormat r0;
        java.text.Format[] r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.text.MessageFormat;
        $i0 = r0.<java.text.MessageFormat: int maxOffset>;
        $i1 = $i0 + 1;
        r1 = newarray (java.text.Format)[$i1];
        $r2 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $i2 = r0.<java.text.MessageFormat: int maxOffset>;
        $i3 = $i2 + 1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i3);
        return r1;
    }

    public final java.lang.StringBuffer format(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.text.MessageFormat r0;
        java.lang.Object[] r1;
        java.lang.StringBuffer r2, $r4;
        java.text.FieldPosition r3;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.Object[];
        r2 := @parameter1: java.lang.StringBuffer;
        r3 := @parameter2: java.text.FieldPosition;
        $r4 = specialinvoke r0.<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>(r1, r2, r3, null);
        return $r4;
    }

    public static transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r4;
        java.lang.Object[] r1;
        java.text.MessageFormat $r2, r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.Object[];
        $r2 = new java.text.MessageFormat;
        specialinvoke $r2.<java.text.MessageFormat: void <init>(java.lang.String)>(r0);
        r3 = $r2;
        $r4 = virtualinvoke r3.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r1);
        return $r4;
    }

    public final java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.text.MessageFormat r0;
        java.lang.Object r1;
        java.lang.StringBuffer r2, $r6;
        java.text.FieldPosition r3;
        java.lang.Object[] $r4, $r5;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.StringBuffer;
        r3 := @parameter2: java.text.FieldPosition;
        $r4 = (java.lang.Object[]) r1;
        $r5 = (java.lang.Object[]) $r4;
        $r6 = specialinvoke r0.<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>($r5, r2, r3, null);
        return $r6;
    }

    public java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)
    {
        java.text.MessageFormat r0;
        java.lang.Object r1;
        java.lang.StringBuffer $r2, r3;
        java.util.ArrayList r4, $r5;
        java.lang.NullPointerException $r6;
        java.lang.Object[] $r7, $r8, $r12;
        int $i0, $i1;
        java.text.AttributedCharacterIterator $r10, $r15;
        java.text.AttributedCharacterIterator[] $r11, $r13, $r14;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.Object;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        r3 = $r2;
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r4 = $r5;
        if r1 != null goto label0;

        $r6 = new java.lang.NullPointerException;
        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("formatToCharacterIterator must be passed non-null object");
        throw $r6;

     label0:
        $r7 = (java.lang.Object[]) r1;
        $r8 = (java.lang.Object[]) $r7;
        specialinvoke r0.<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>($r8, r3, null, r4);
        $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();
        if $i0 != 0 goto label1;

        $r10 = virtualinvoke r0.<java.text.MessageFormat: java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.lang.String)>("");
        return $r10;

     label1:
        $i1 = virtualinvoke r4.<java.util.ArrayList: int size()>();
        $r11 = newarray (java.text.AttributedCharacterIterator)[$i1];
        $r12 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r11);
        $r13 = (java.text.AttributedCharacterIterator[]) $r12;
        $r14 = (java.text.AttributedCharacterIterator[]) $r13;
        $r15 = virtualinvoke r0.<java.text.MessageFormat: java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.text.AttributedCharacterIterator[])>($r14);
        return $r15;
    }

    public java.lang.Object[] parse(java.lang.String, java.text.ParsePosition)
    {
        java.text.MessageFormat r0;
        java.lang.String r1, r5, $r11, $r15, $r16, $r17, $r23, $r25, $r30, $r31;
        java.text.ParsePosition r2, r4, $r9;
        java.lang.Object[] r3, r8;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i23;
        int[] $r6, $r7, $r10, $r14, $r20, $r24, $r26;
        boolean $z0, $z1, $z2;
        java.text.Format[] $r12, $r27;
        java.text.Format $r13, $r28;
        java.lang.StringBuilder $r18, $r19, $r21, $r22;
        java.lang.Object $r29;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.text.ParsePosition;
        if r1 != null goto label0;

        r3 = newarray (java.lang.Object)[0];
        return r3;

     label0:
        i7 = -1;
        i0 = 0;

     label1:
        $i8 = r0.<java.text.MessageFormat: int maxOffset>;
        if i0 > $i8 goto label3;

        $r6 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $i9 = $r6[i0];
        if $i9 <= i7 goto label2;

        $r7 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        i7 = $r7[i0];

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        $i10 = i7 + 1;
        r8 = newarray (java.lang.Object)[$i10];
        i1 = 0;
        i2 = r2.<java.text.ParsePosition: int index>;
        $r9 = new java.text.ParsePosition;
        specialinvoke $r9.<java.text.ParsePosition: void <init>(int)>(0);
        r4 = $r9;
        i3 = 0;

     label4:
        $i11 = r0.<java.text.MessageFormat: int maxOffset>;
        if i3 > $i11 goto label17;

        $r10 = r0.<java.text.MessageFormat: int[] offsets>;
        $i12 = $r10[i3];
        i4 = $i12 - i1;
        if i4 == 0 goto label5;

        $r11 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $z0 = virtualinvoke $r11.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i1, r1, i2, i4);
        if $z0 == 0 goto label6;

     label5:
        i13 = i2 + i4;
        i1 = i1 + i4;
        goto label7;

     label6:
        r2.<java.text.ParsePosition: int errorIndex> = i2;
        return null;

     label7:
        $r12 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r13 = $r12[i3];
        if $r13 != null goto label14;

        $i14 = r0.<java.text.MessageFormat: int maxOffset>;
        if i3 == $i14 goto label8;

        $r14 = r0.<java.text.MessageFormat: int[] offsets>;
        $i15 = i3 + 1;
        $i16 = $r14[$i15];
        goto label9;

     label8:
        $r15 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $i16 = virtualinvoke $r15.<java.lang.String: int length()>();

     label9:
        i5 = $i16;
        if i1 < i5 goto label10;

        i6 = virtualinvoke r1.<java.lang.String: int length()>();
        goto label11;

     label10:
        $r16 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int,int)>(i1, i5);
        i6 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>($r17, i13);

     label11:
        if i6 >= 0 goto label12;

        r2.<java.text.ParsePosition: int errorIndex> = i13;
        return null;

     label12:
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i13, i6);
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");
        $r20 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $i17 = $r20[i3];
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r23);
        if $z1 != 0 goto label13;

        $r24 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $i18 = $r24[i3];
        $r25 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i13, i6);
        r8[$i18] = $r25;

     label13:
        i2 = i6;
        goto label16;

     label14:
        r4.<java.text.ParsePosition: int index> = i13;
        $r26 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $i19 = $r26[i3];
        $r27 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r28 = $r27[i3];
        $r29 = virtualinvoke $r28.<java.text.Format: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>(r1, r4);
        r8[$i19] = $r29;
        $i20 = r4.<java.text.ParsePosition: int index>;
        if $i20 != i13 goto label15;

        r2.<java.text.ParsePosition: int errorIndex> = i13;
        return null;

     label15:
        i2 = r4.<java.text.ParsePosition: int index>;

     label16:
        i3 = i3 + 1;
        goto label4;

     label17:
        $r30 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $i21 = virtualinvoke $r30.<java.lang.String: int length()>();
        i22 = $i21 - i1;
        if i22 == 0 goto label18;

        $r31 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $z2 = virtualinvoke $r31.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i1, r1, i2, i22);
        if $z2 == 0 goto label19;

     label18:
        $i23 = i2 + i22;
        r2.<java.text.ParsePosition: int index> = $i23;
        goto label20;

     label19:
        r2.<java.text.ParsePosition: int errorIndex> = i2;
        return null;

     label20:
        return r8;
    }

    public java.lang.Object[] parse(java.lang.String) throws java.text.ParseException
    {
        java.text.MessageFormat r0;
        java.lang.String r1;
        java.text.ParsePosition $r2, r3;
        java.lang.Object[] r4;
        int $i0, $i1;
        java.text.ParseException $r5;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.text.ParsePosition;
        specialinvoke $r2.<java.text.ParsePosition: void <init>(int)>(0);
        r3 = $r2;
        r4 = virtualinvoke r0.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>(r1, r3);
        $i0 = r3.<java.text.ParsePosition: int index>;
        if $i0 != 0 goto label0;

        $r5 = new java.text.ParseException;
        $i1 = r3.<java.text.ParsePosition: int errorIndex>;
        specialinvoke $r5.<java.text.ParseException: void <init>(java.lang.String,int)>("MessageFormat parse error!", $i1);
        throw $r5;

     label0:
        return r4;
    }

    public java.lang.Object parseObject(java.lang.String, java.text.ParsePosition)
    {
        java.text.MessageFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        java.lang.Object[] $r3;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.text.ParsePosition;
        $r3 = virtualinvoke r0.<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>(r1, r2);
        return $r3;
    }

    public java.lang.Object clone()
    {
        java.text.MessageFormat r0, r1;
        int i0, $i1;
        java.lang.Object $r2, $r4, $r13, $r16, $r20;
        java.text.Format[] $r3, $r5, $r6, $r7, $r8, $r10, $r11;
        java.text.Format $r9, $r12, $r14;
        int[] $r15, $r17, $r18, $r19, $r21, $r22;

        r0 := @this: java.text.MessageFormat;
        $r2 = specialinvoke r0.<java.text.Format: java.lang.Object clone()>();
        r1 = (java.text.MessageFormat) $r2;
        $r3 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();
        $r5 = (java.text.Format[]) $r4;
        $r6 = (java.text.Format[]) $r5;
        r1.<java.text.MessageFormat: java.text.Format[] formats> = $r6;
        i0 = 0;

     label0:
        $r7 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $i1 = lengthof $r7;
        if i0 >= $i1 goto label2;

        $r8 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r9 = $r8[i0];
        if $r9 == null goto label1;

        $r10 = r1.<java.text.MessageFormat: java.text.Format[] formats>;
        $r11 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r12 = $r11[i0];
        $r13 = virtualinvoke $r12.<java.text.Format: java.lang.Object clone()>();
        $r14 = (java.text.Format) $r13;
        $r10[i0] = $r14;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        $r15 = r0.<java.text.MessageFormat: int[] offsets>;
        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Object clone()>();
        $r17 = (int[]) $r16;
        $r18 = (int[]) $r17;
        r1.<java.text.MessageFormat: int[] offsets> = $r18;
        $r19 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.Object clone()>();
        $r21 = (int[]) $r20;
        $r22 = (int[]) $r21;
        r1.<java.text.MessageFormat: int[] argumentNumbers> = $r22;
        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.text.MessageFormat r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        int $i0, $i1;
        java.lang.String $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Locale $r7, $r8, $r9, $r10, $r11;
        int[] $r12, $r13, $r14, $r15;
        java.text.Format[] $r16, $r17;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        if r1 == null goto label1;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == $r4 goto label2;

     label1:
        return 0;

     label2:
        r2 = (java.text.MessageFormat) r1;
        $i0 = r0.<java.text.MessageFormat: int maxOffset>;
        $i1 = r2.<java.text.MessageFormat: int maxOffset>;
        if $i0 != $i1 goto label5;

        $r5 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $r6 = r2.<java.text.MessageFormat: java.lang.String pattern>;
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z0 == 0 goto label5;

        $r7 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        if $r7 == null goto label3;

        $r8 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        $r9 = r2.<java.text.MessageFormat: java.util.Locale locale>;
        $z1 = virtualinvoke $r8.<java.util.Locale: boolean equals(java.lang.Object)>($r9);
        if $z1 != 0 goto label4;

     label3:
        $r10 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        if $r10 != null goto label5;

        $r11 = r2.<java.text.MessageFormat: java.util.Locale locale>;
        if $r11 != null goto label5;

     label4:
        $r12 = r0.<java.text.MessageFormat: int[] offsets>;
        $r13 = r2.<java.text.MessageFormat: int[] offsets>;
        $z2 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r12, $r13);
        if $z2 == 0 goto label5;

        $r14 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $r15 = r2.<java.text.MessageFormat: int[] argumentNumbers>;
        $z3 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r14, $r15);
        if $z3 == 0 goto label5;

        $r16 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r17 = r2.<java.text.MessageFormat: java.text.Format[] formats>;
        $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r16, $r17);
        if $z4 == 0 goto label5;

        $z5 = 1;
        goto label6;

     label5:
        $z5 = 0;

     label6:
        return $z5;
    }

    public int hashCode()
    {
        java.text.MessageFormat r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: java.text.MessageFormat;
        $r1 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        return $i0;
    }

    private java.lang.StringBuffer subformat(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition, java.util.List)
    {
        java.text.MessageFormat r0, $r23;
        java.lang.Object[] r1;
        java.lang.StringBuffer r2, $r15, $r16;
        java.text.FieldPosition r3;
        java.util.List r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14;
        java.lang.Object r5;
        java.lang.String r6, $r9, $r11, $r27, $r39, $r40, $r41, $r43;
        java.text.Format r7, $r19, $r22;
        java.text.AttributedCharacterIterator r8, $r28, $r31, $r35, $r44;
        int[] $r10, $r13, $r14;
        java.text.Format[] $r18, $r20, $r21;
        boolean $z0, $z1, $z2, $z3, $z7;
        java.util.Locale $r24, $r25, $r26;
        java.text.MessageFormat$Field $r29, $r33, $r37;
        java.lang.Integer $r30, $r34;
        java.text.Format$Field $r38;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.Object[];
        r2 := @parameter1: java.lang.StringBuffer;
        r3 := @parameter2: java.text.FieldPosition;
        r4 := @parameter3: java.util.List;
        i0 = 0;
        i1 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();
        i2 = 0;

     label0:
        $i4 = r0.<java.text.MessageFormat: int maxOffset>;
        if i2 > $i4 goto label16;

        $r9 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $r10 = r0.<java.text.MessageFormat: int[] offsets>;
        $i5 = $r10[i2];
        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);
        $r13 = r0.<java.text.MessageFormat: int[] offsets>;
        i0 = $r13[i2];
        $r14 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        i3 = $r14[i2];
        if r1 == null goto label1;

        $i6 = lengthof r1;
        if i3 < $i6 goto label2;

     label1:
        $r15 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);
        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);
        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);
        goto label15;

     label2:
        r5 = r1[i3];
        r6 = null;
        r7 = null;
        if r5 != null goto label3;

        r6 = "null";
        goto label8;

     label3:
        $r18 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r19 = $r18[i2];
        if $r19 == null goto label4;

        $r20 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        r7 = $r20[i2];
        $z0 = r7 instanceof java.text.ChoiceFormat;
        if $z0 == 0 goto label8;

        $r21 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r22 = $r21[i2];
        r6 = virtualinvoke $r22.<java.text.Format: java.lang.String format(java.lang.Object)>(r5);
        $i7 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(123);
        if $i7 < 0 goto label8;

        $r23 = new java.text.MessageFormat;
        $r24 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        specialinvoke $r23.<java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>(r6, $r24);
        r7 = $r23;
        r5 = r1;
        r6 = null;
        goto label8;

     label4:
        $z1 = r5 instanceof java.lang.Number;
        if $z1 == 0 goto label5;

        $r25 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        r7 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r25);
        goto label8;

     label5:
        $z2 = r5 instanceof java.util.Date;
        if $z2 == 0 goto label6;

        $r26 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        r7 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>(3, 3, $r26);
        goto label8;

     label6:
        $z3 = r5 instanceof java.lang.String;
        if $z3 == 0 goto label7;

        r6 = (java.lang.String) r5;
        goto label8;

     label7:
        r6 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
        if r6 != null goto label8;

        r6 = "null";

     label8:
        if r4 == null goto label12;

        $i8 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();
        if i1 == $i8 goto label9;

        $r27 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String substring(int)>(i1);
        $r28 = virtualinvoke r0.<java.text.MessageFormat: java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.lang.String)>($r27);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r28);
        i1 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

     label9:
        if r7 == null goto label11;

        r8 = virtualinvoke r7.<java.text.Format: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>(r5);
        specialinvoke r0.<java.text.MessageFormat: void append(java.lang.StringBuffer,java.text.CharacterIterator)>(r2, r8);
        $i9 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();
        if i1 == $i9 goto label10;

        $r29 = <java.text.MessageFormat$Field: java.text.MessageFormat$Field ARGUMENT>;
        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        $r31 = virtualinvoke r0.<java.text.MessageFormat: java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.text.AttributedCharacterIterator,java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>(r8, $r29, $r30);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r31);
        i1 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

     label10:
        r6 = null;

     label11:
        if r6 == null goto label15;

        $i10 = virtualinvoke r6.<java.lang.String: int length()>();
        if $i10 <= 0 goto label15;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);
        $r33 = <java.text.MessageFormat$Field: java.text.MessageFormat$Field ARGUMENT>;
        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        $r35 = virtualinvoke r0.<java.text.MessageFormat: java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.lang.String,java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>(r6, $r33, $r34);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r35);
        i1 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();
        goto label15;

     label12:
        if r7 == null goto label13;

        r6 = virtualinvoke r7.<java.text.Format: java.lang.String format(java.lang.Object)>(r5);

     label13:
        i11 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);
        if i2 != 0 goto label14;

        if r3 == null goto label14;

        $r37 = <java.text.MessageFormat$Field: java.text.MessageFormat$Field ARGUMENT>;
        $r38 = virtualinvoke r3.<java.text.FieldPosition: java.text.Format$Field getFieldAttribute()>();
        $z7 = virtualinvoke $r37.<java.text.MessageFormat$Field: boolean equals(java.lang.Object)>($r38);
        if $z7 == 0 goto label14;

        virtualinvoke r3.<java.text.FieldPosition: void setBeginIndex(int)>(i11);
        $i12 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();
        virtualinvoke r3.<java.text.FieldPosition: void setEndIndex(int)>($i12);

     label14:
        i1 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

     label15:
        i2 = i2 + 1;
        goto label0;

     label16:
        $r39 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $r40 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $i13 = virtualinvoke $r40.<java.lang.String: int length()>();
        $r41 = virtualinvoke $r39.<java.lang.String: java.lang.String substring(int,int)>(i0, $i13);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);
        if r4 == null goto label17;

        $i14 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();
        if i1 == $i14 goto label17;

        $r43 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String substring(int)>(i1);
        $r44 = virtualinvoke r0.<java.text.MessageFormat: java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.lang.String)>($r43);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r44);

     label17:
        return r2;
    }

    private void append(java.lang.StringBuffer, java.text.CharacterIterator)
    {
        java.text.MessageFormat r0;
        java.lang.StringBuffer r1;
        java.text.CharacterIterator r2;
        char c0, $c1, $c2, $c3;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.lang.StringBuffer;
        r2 := @parameter1: java.text.CharacterIterator;
        $c1 = interfaceinvoke r2.<java.text.CharacterIterator: char first()>();
        if $c1 == 65535 goto label1;

        $c2 = interfaceinvoke r2.<java.text.CharacterIterator: char first()>();
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label0:
        $c3 = interfaceinvoke r2.<java.text.CharacterIterator: char next()>();
        c0 = $c3;
        if $c3 == 65535 goto label1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);
        goto label0;

     label1:
        return;
    }

    private void makeFormat(int, int, java.lang.StringBuilder[])
    {
        java.text.MessageFormat r0;
        int i0, i1, i2, $i3, $i4, $i5, i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, i19, $i20, i21, $i22, $i23, $i24;
        java.lang.StringBuilder[] r1;
        java.lang.String[] r2, $r35, $r37, $r49, $r50;
        java.lang.StringBuilder r3, $r14, $r15, $r17, $r20, $r21, $r22, $r64, $r65, $r67, $r70, $r71, $r73;
        java.text.Format[] r4, $r24, $r25, $r26, $r75;
        int[] r5, r6, $r27, $r28, $r29, $r31, $r51, $r53;
        java.lang.IllegalArgumentException r7, $r13, $r19, $r46, r47, $r58, $r63, $r69;
        java.lang.String $r9, $r10, $r16, $r18, $r23, $r30, $r33, $r34, $r36, $r43, $r48, $r56, $r60, $r66, $r68, $r72, $r74;
        java.lang.NumberFormatException $r11, r12;
        java.text.Format r32;
        java.util.Locale $r38, $r39, $r40, $r41, $r44, $r52, $r54, $r57;
        java.text.DecimalFormat $r42;
        java.text.DecimalFormatSymbols $r45;
        java.text.SimpleDateFormat $r55;
        java.text.ChoiceFormat $r59;
        java.lang.Exception $r61, r62;

        r0 := @this: java.text.MessageFormat;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.lang.StringBuilder[];
        $i3 = lengthof r1;
        r2 = newarray (java.lang.String)[$i3];
        i2 = 0;

     label0:
        $i4 = lengthof r1;
        if i2 >= $i4 goto label3;

        r3 = r1[i2];
        $i5 = i2;
        if r3 == null goto label1;

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label2;

     label1:
        $r9 = "";

     label2:
        r2[$i5] = $r9;
        i2 = i2 + 1;
        goto label0;

     label3:
        $r10 = r2[1];
        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = new java.lang.IllegalArgumentException;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t parse argument number: ");
        $r16 = r2[1];
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r12);
        throw $r13;

     label6:
        if i6 >= 0 goto label7;

        $r19 = new java.lang.IllegalArgumentException;
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("negative argument number: ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);
        throw $r19;

     label7:
        $r24 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $i7 = lengthof $r24;
        if i1 < $i7 goto label8;

        $r25 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $i8 = lengthof $r25;
        i9 = $i8 * 2;
        r4 = newarray (java.text.Format)[i9];
        r5 = newarray (int)[i9];
        r6 = newarray (int)[i9];
        $r26 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $i10 = r0.<java.text.MessageFormat: int maxOffset>;
        $i11 = $i10 + 1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r26, 0, r4, 0, $i11);
        $r27 = r0.<java.text.MessageFormat: int[] offsets>;
        $i12 = r0.<java.text.MessageFormat: int maxOffset>;
        $i13 = $i12 + 1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r27, 0, r5, 0, $i13);
        $r28 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $i14 = r0.<java.text.MessageFormat: int maxOffset>;
        $i15 = $i14 + 1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r28, 0, r6, 0, $i15);
        r0.<java.text.MessageFormat: java.text.Format[] formats> = r4;
        r0.<java.text.MessageFormat: int[] offsets> = r5;
        r0.<java.text.MessageFormat: int[] argumentNumbers> = r6;

     label8:
        i16 = r0.<java.text.MessageFormat: int maxOffset>;
        r0.<java.text.MessageFormat: int maxOffset> = i1;
        $r29 = r0.<java.text.MessageFormat: int[] offsets>;
        $r30 = r2[0];
        $i17 = virtualinvoke $r30.<java.lang.String: int length()>();
        $r29[i1] = $i17;
        $r31 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $r31[i1] = i6;
        r32 = null;
        $r33 = r2[2];
        $i18 = virtualinvoke $r33.<java.lang.String: int length()>();
        if $i18 == 0 goto label27;

        $r34 = r2[2];
        $r35 = <java.text.MessageFormat: java.lang.String[] TYPE_KEYWORDS>;
        i19 = staticinvoke <java.text.MessageFormat: int findKeyword(java.lang.String,java.lang.String[])>($r34, $r35);
        tableswitch(i19)
        {
            case 0: goto label9;
            case 1: goto label10;
            case 2: goto label18;
            case 3: goto label18;
            case 4: goto label23;
            default: goto label26;
        };

     label9:
        goto label27;

     label10:
        $r36 = r2[3];
        $r37 = <java.text.MessageFormat: java.lang.String[] NUMBER_MODIFIER_KEYWORDS>;
        $i20 = staticinvoke <java.text.MessageFormat: int findKeyword(java.lang.String,java.lang.String[])>($r36, $r37);
        tableswitch($i20)
        {
            case 0: goto label11;
            case 1: goto label12;
            case 2: goto label13;
            case 3: goto label14;
            default: goto label15;
        };

     label11:
        $r38 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        r32 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r38);
        goto label27;

     label12:
        $r39 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        r32 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>($r39);
        goto label27;

     label13:
        $r40 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        r32 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)>($r40);
        goto label27;

     label14:
        $r41 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        r32 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>($r41);
        goto label27;

     label15:
        $r42 = new java.text.DecimalFormat;
        $r43 = r2[3];
        $r44 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        $r45 = staticinvoke <java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>($r44);
        specialinvoke $r42.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>($r43, $r45);
        r32 = $r42;

     label16:
        goto label27;

     label17:
        $r46 := @caughtexception;
        r47 = $r46;
        r0.<java.text.MessageFormat: int maxOffset> = i16;
        throw r47;

     label18:
        $r48 = r2[3];
        $r49 = <java.text.MessageFormat: java.lang.String[] DATE_TIME_MODIFIER_KEYWORDS>;
        i21 = staticinvoke <java.text.MessageFormat: int findKeyword(java.lang.String,java.lang.String[])>($r48, $r49);
        if i21 < 0 goto label20;

        $r50 = <java.text.MessageFormat: java.lang.String[] DATE_TIME_MODIFIER_KEYWORDS>;
        $i22 = lengthof $r50;
        if i21 >= $i22 goto label20;

        if i19 != 2 goto label19;

        $r51 = <java.text.MessageFormat: int[] DATE_TIME_MODIFIERS>;
        $i23 = $r51[i21];
        $r52 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        r32 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>($i23, $r52);
        goto label27;

     label19:
        $r53 = <java.text.MessageFormat: int[] DATE_TIME_MODIFIERS>;
        $i24 = $r53[i21];
        $r54 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        r32 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>($i24, $r54);
        goto label27;

     label20:
        $r55 = new java.text.SimpleDateFormat;
        $r56 = r2[3];
        $r57 = r0.<java.text.MessageFormat: java.util.Locale locale>;
        specialinvoke $r55.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r56, $r57);
        r32 = $r55;

     label21:
        goto label27;

     label22:
        $r58 := @caughtexception;
        r7 = $r58;
        r0.<java.text.MessageFormat: int maxOffset> = i16;
        throw r7;

     label23:
        $r59 = new java.text.ChoiceFormat;
        $r60 = r2[3];
        specialinvoke $r59.<java.text.ChoiceFormat: void <init>(java.lang.String)>($r60);
        r32 = $r59;

     label24:
        goto label27;

     label25:
        $r61 := @caughtexception;
        r62 = $r61;
        r0.<java.text.MessageFormat: int maxOffset> = i16;
        $r63 = new java.lang.IllegalArgumentException;
        $r64 = new java.lang.StringBuilder;
        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Choice Pattern incorrect: ");
        $r66 = r2[3];
        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r63.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r68, r62);
        throw $r63;

     label26:
        r0.<java.text.MessageFormat: int maxOffset> = i16;
        $r69 = new java.lang.IllegalArgumentException;
        $r70 = new java.lang.StringBuilder;
        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown format type: ");
        $r72 = r2[2];
        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);
        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r69.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r74);
        throw $r69;

     label27:
        $r75 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $r75[i1] = r32;
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
        catch java.lang.IllegalArgumentException from label15 to label16 with label17;
        catch java.lang.IllegalArgumentException from label20 to label21 with label22;
        catch java.lang.Exception from label23 to label24 with label25;
    }

    private static final int findKeyword(java.lang.String, java.lang.String[])
    {
        java.lang.String r0, $r2, $r3, r5, $r6;
        java.lang.String[] r1;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1;
        java.util.Locale $r4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String[];
        i0 = 0;

     label0:
        $i2 = lengthof r1;
        if i0 >= $i2 goto label2;

        $r2 = r1[i0];
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label1;

        return i0;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();
        $r4 = <java.util.Locale: java.util.Locale ROOT>;
        r5 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);
        if r5 == r0 goto label5;

        i1 = 0;

     label3:
        $i3 = lengthof r1;
        if i1 >= $i3 goto label5;

        $r6 = r1[i1];
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z1 == 0 goto label4;

        return i1;

     label4:
        i1 = i1 + 1;
        goto label3;

     label5:
        return -1;
    }

    private static final void copyAndFixQuotes(java.lang.String, int, int, java.lang.StringBuilder)
    {
        java.lang.String r0;
        int i0, i1, i2;
        java.lang.StringBuilder r1;
        boolean z0;
        char c3;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r1 := @parameter3: java.lang.StringBuilder;
        z0 = 0;
        i2 = i0;

     label0:
        if i2 >= i1 goto label6;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);
        if c3 != 123 goto label2;

        if z0 != 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);
        z0 = 1;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);
        goto label5;

     label2:
        if c3 != 39 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\'");
        goto label5;

     label3:
        if z0 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);
        z0 = 0;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

     label5:
        i2 = i2 + 1;
        goto label0;

     label6:
        if z0 == 0 goto label7;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

     label7:
        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.text.MessageFormat r0;
        java.io.ObjectInputStream r1;
        boolean z0, $z1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.text.Format[] $r2;
        int[] $r3, $r4, $r6, $r7, $r8;
        java.lang.String $r5;
        java.io.InvalidObjectException $r9;

        r0 := @this: java.text.MessageFormat;
        r1 := @parameter0: java.io.ObjectInputStream;
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();
        $i2 = r0.<java.text.MessageFormat: int maxOffset>;
        if $i2 < -1 goto label0;

        $r2 = r0.<java.text.MessageFormat: java.text.Format[] formats>;
        $i3 = lengthof $r2;
        $i4 = r0.<java.text.MessageFormat: int maxOffset>;
        if $i3 <= $i4 goto label0;

        $r3 = r0.<java.text.MessageFormat: int[] offsets>;
        $i5 = lengthof $r3;
        $i6 = r0.<java.text.MessageFormat: int maxOffset>;
        if $i5 <= $i6 goto label0;

        $r4 = r0.<java.text.MessageFormat: int[] argumentNumbers>;
        $i7 = lengthof $r4;
        $i8 = r0.<java.text.MessageFormat: int maxOffset>;
        if $i7 <= $i8 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;
        if z0 == 0 goto label5;

        $r5 = r0.<java.text.MessageFormat: java.lang.String pattern>;
        $i9 = virtualinvoke $r5.<java.lang.String: int length()>();
        i0 = $i9 + 1;
        i1 = r0.<java.text.MessageFormat: int maxOffset>;

     label2:
        if i1 < 0 goto label5;

        $r6 = r0.<java.text.MessageFormat: int[] offsets>;
        $i10 = $r6[i1];
        if $i10 < 0 goto label3;

        $r7 = r0.<java.text.MessageFormat: int[] offsets>;
        $i11 = $r7[i1];
        if $i11 <= i0 goto label4;

     label3:
        z0 = 0;
        goto label5;

     label4:
        $r8 = r0.<java.text.MessageFormat: int[] offsets>;
        i0 = $r8[i1];
        i1 = i1 + -1;
        goto label2;

     label5:
        if z0 != 0 goto label6;

        $r9 = new java.io.InvalidObjectException;
        specialinvoke $r9.<java.io.InvalidObjectException: void <init>(java.lang.String)>("Could not reconstruct MessageFormat from corrupt stream.");
        throw $r9;

     label6:
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r2;
        int[] $r3;

        $r0 = newarray (java.lang.String)[5];
        $r0[0] = "";
        $r0[1] = "number";
        $r0[2] = "date";
        $r0[3] = "time";
        $r0[4] = "choice";
        <java.text.MessageFormat: java.lang.String[] TYPE_KEYWORDS> = $r0;
        $r1 = newarray (java.lang.String)[4];
        $r1[0] = "";
        $r1[1] = "currency";
        $r1[2] = "percent";
        $r1[3] = "integer";
        <java.text.MessageFormat: java.lang.String[] NUMBER_MODIFIER_KEYWORDS> = $r1;
        $r2 = newarray (java.lang.String)[5];
        $r2[0] = "";
        $r2[1] = "short";
        $r2[2] = "medium";
        $r2[3] = "long";
        $r2[4] = "full";
        <java.text.MessageFormat: java.lang.String[] DATE_TIME_MODIFIER_KEYWORDS> = $r2;
        $r3 = newarray (int)[5];
        $r3[0] = 2;
        $r3[1] = 3;
        $r3[2] = 2;
        $r3[3] = 1;
        $r3[4] = 0;
        <java.text.MessageFormat: int[] DATE_TIME_MODIFIERS> = $r3;
        return;
    }
}
