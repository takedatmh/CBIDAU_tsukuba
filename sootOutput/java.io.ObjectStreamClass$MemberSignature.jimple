class java.io.ObjectStreamClass$MemberSignature extends java.lang.Object
{
    public final java.lang.reflect.Member member;
    public final java.lang.String name;
    public final java.lang.String signature;

    public void <init>(java.lang.reflect.Field)
    {
        java.io.ObjectStreamClass$MemberSignature r0;
        java.lang.reflect.Field r1;
        java.lang.String $r2, $r4;
        java.lang.Class $r3;

        r0 := @this: java.io.ObjectStreamClass$MemberSignature;
        r1 := @parameter0: java.lang.reflect.Field;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.ObjectStreamClass$MemberSignature: java.lang.reflect.Member member> = r1;
        $r2 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();
        r0.<java.io.ObjectStreamClass$MemberSignature: java.lang.String name> = $r2;
        $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getType()>();
        $r4 = staticinvoke <java.io.ObjectStreamClass: java.lang.String access$2400(java.lang.Class)>($r3);
        r0.<java.io.ObjectStreamClass$MemberSignature: java.lang.String signature> = $r4;
        return;
    }

    public void <init>(java.lang.reflect.Constructor)
    {
        java.io.ObjectStreamClass$MemberSignature r0;
        java.lang.reflect.Constructor r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;
        java.lang.Class[] $r4;

        r0 := @this: java.io.ObjectStreamClass$MemberSignature;
        r1 := @parameter0: java.lang.reflect.Constructor;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.ObjectStreamClass$MemberSignature: java.lang.reflect.Member member> = r1;
        $r3 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.String getName()>();
        r0.<java.io.ObjectStreamClass$MemberSignature: java.lang.String name> = $r3;
        $r4 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();
        $r2 = <java.lang.Void: java.lang.Class TYPE>;
        $r5 = staticinvoke <java.io.ObjectStreamClass: java.lang.String access$2500(java.lang.Class[],java.lang.Class)>($r4, $r2);
        r0.<java.io.ObjectStreamClass$MemberSignature: java.lang.String signature> = $r5;
        return;
    }

    public void <init>(java.lang.reflect.Method)
    {
        java.io.ObjectStreamClass$MemberSignature r0;
        java.lang.reflect.Method r1;
        java.lang.String $r2, $r5;
        java.lang.Class[] $r3;
        java.lang.Class $r4;

        r0 := @this: java.io.ObjectStreamClass$MemberSignature;
        r1 := @parameter0: java.lang.reflect.Method;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.ObjectStreamClass$MemberSignature: java.lang.reflect.Member member> = r1;
        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();
        r0.<java.io.ObjectStreamClass$MemberSignature: java.lang.String name> = $r2;
        $r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
        $r4 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();
        $r5 = staticinvoke <java.io.ObjectStreamClass: java.lang.String access$2500(java.lang.Class[],java.lang.Class)>($r3, $r4);
        r0.<java.io.ObjectStreamClass$MemberSignature: java.lang.String signature> = $r5;
        return;
    }
}
