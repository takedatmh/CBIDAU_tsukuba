public abstract class sun.net.www.protocol.http.AuthenticationInfo extends sun.net.www.protocol.http.AuthCacheValue implements java.lang.Cloneable
{
    public static final char SERVER_AUTHENTICATION;
    public static final char PROXY_AUTHENTICATION;
    static boolean serializeAuth;
    protected transient java.net.PasswordAuthentication pw;
    private static java.util.HashMap requests;
    char type;
    sun.net.www.protocol.http.AuthScheme authScheme;
    java.lang.String protocol;
    java.lang.String host;
    int port;
    java.lang.String realm;
    java.lang.String path;
    java.lang.String s1;
    java.lang.String s2;
    static final boolean $assertionsDisabled;

    public java.net.PasswordAuthentication credentials()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        java.net.PasswordAuthentication $r1;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        $r1 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.net.PasswordAuthentication pw>;
        return $r1;
    }

    public sun.net.www.protocol.http.AuthCacheValue$Type getAuthType()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        char $c0;
        sun.net.www.protocol.http.AuthCacheValue$Type $r1;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        $c0 = r0.<sun.net.www.protocol.http.AuthenticationInfo: char type>;
        if $c0 != 115 goto label0;

        $r1 = <sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type Server>;
        goto label1;

     label0:
        $r1 = <sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type Proxy>;

     label1:
        return $r1;
    }

    sun.net.www.protocol.http.AuthScheme getAuthScheme()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        sun.net.www.protocol.http.AuthScheme $r1;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        $r1 = r0.<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthScheme authScheme>;
        return $r1;
    }

    public java.lang.String getHost()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        java.lang.String $r1;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        $r1 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String host>;
        return $r1;
    }

    public int getPort()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        int $i0;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        $i0 = r0.<sun.net.www.protocol.http.AuthenticationInfo: int port>;
        return $i0;
    }

    public java.lang.String getRealm()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        java.lang.String $r1;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        $r1 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String realm>;
        return $r1;
    }

    public java.lang.String getPath()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        java.lang.String $r1;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        $r1 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String path>;
        return $r1;
    }

    public java.lang.String getProtocolScheme()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        java.lang.String $r1;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        $r1 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String protocol>;
        return $r1;
    }

    private static boolean requestIsInProgress(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;
        java.util.HashMap r1, $r6, $r7, $r10, $r12, $r13;
        java.lang.Thread r2, r3, $r9;
        java.lang.InterruptedException r4, $r14;
        java.lang.Throwable r5, $r15;
        java.lang.Object $r8;

        r0 := @parameter0: java.lang.String;
        $z0 = <sun.net.www.protocol.http.AuthenticationInfo: boolean serializeAuth>;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $r6 = <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests>;
        r1 = $r6;
        entermonitor $r6;

     label1:
        r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r7 = <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests>;
        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);
        $r9 = (java.lang.Thread) $r8;
        r3 = $r9;
        if $r9 != null goto label3;

        $r10 = <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests>;
        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);
        $z1 = 0;
        exitmonitor r1;

     label2:
        return $z1;

     label3:
        if r3 != r2 goto label5;

        $z2 = 0;
        exitmonitor r1;

     label4:
        return $z2;

     label5:
        $r12 = <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests>;
        $z3 = virtualinvoke $r12.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r0);
        if $z3 == 0 goto label9;

     label6:
        $r13 = <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests>;
        virtualinvoke $r13.<java.lang.Object: void wait()>();

     label7:
        goto label5;

     label8:
        $r14 := @caughtexception;
        r4 = $r14;
        goto label5;

     label9:
        exitmonitor r1;

     label10:
        goto label14;

     label11:
        $r15 := @caughtexception;

     label12:
        r5 = $r15;
        exitmonitor r1;

     label13:
        throw r5;

     label14:
        return 1;

        catch java.lang.InterruptedException from label6 to label7 with label8;
        catch java.lang.Throwable from label1 to label2 with label11;
        catch java.lang.Throwable from label3 to label4 with label11;
        catch java.lang.Throwable from label5 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private static void requestCompleted(java.lang.String)
    {
        java.lang.String r0;
        java.util.HashMap $r1, r2, $r5, $r8, $r11;
        java.lang.Thread r3, $r7;
        boolean z0, $z1, $z2;
        java.lang.Throwable r4, $r12;
        java.lang.Object $r6, $r9;
        java.lang.AssertionError $r10;

        r0 := @parameter0: java.lang.String;
        $r1 = <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests>;
        r2 = $r1;
        entermonitor $r1;

     label0:
        $r5 = <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);
        r3 = (java.lang.Thread) $r6;
        if r3 == null goto label3;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        if r3 != $r7 goto label3;

        $r8 = <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests>;
        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r0);
        if $r9 == null goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;
        $z2 = <sun.net.www.protocol.http.AuthenticationInfo: boolean $assertionsDisabled>;
        if $z2 != 0 goto label3;

        if z0 != 0 goto label3;

        $r10 = new java.lang.AssertionError;
        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();
        throw $r10;

     label3:
        $r11 = <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests>;
        virtualinvoke $r11.<java.lang.Object: void notifyAll()>();
        exitmonitor r2;

     label4:
        goto label8;

     label5:
        $r12 := @caughtexception;

     label6:
        r4 = $r12;
        exitmonitor r2;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label0 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void <init>(char, sun.net.www.protocol.http.AuthScheme, java.lang.String, int, java.lang.String)
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        char c0;
        sun.net.www.protocol.http.AuthScheme r1;
        java.lang.String r2, r3, $r4;
        int i1;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        c0 := @parameter0: char;
        r1 := @parameter1: sun.net.www.protocol.http.AuthScheme;
        r2 := @parameter2: java.lang.String;
        i1 := @parameter3: int;
        r3 := @parameter4: java.lang.String;
        specialinvoke r0.<sun.net.www.protocol.http.AuthCacheValue: void <init>()>();
        r0.<sun.net.www.protocol.http.AuthenticationInfo: char type> = c0;
        r0.<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthScheme authScheme> = r1;
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String protocol> = "";
        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String host> = $r4;
        r0.<sun.net.www.protocol.http.AuthenticationInfo: int port> = i1;
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String realm> = r3;
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String path> = null;
        return;
    }

    public java.lang.Object clone()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        java.lang.CloneNotSupportedException r1, $r3;
        java.lang.Object $r2;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;

     label0:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        return null;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public void <init>(char, sun.net.www.protocol.http.AuthScheme, java.net.URL, java.lang.String)
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        char c0;
        sun.net.www.protocol.http.AuthScheme r1;
        java.net.URL r2;
        java.lang.String r3, r4, $r5, $r6, $r7, $r8, $r9;
        int $i1, $i2, $i3, $i4;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        c0 := @parameter0: char;
        r1 := @parameter1: sun.net.www.protocol.http.AuthScheme;
        r2 := @parameter2: java.net.URL;
        r3 := @parameter3: java.lang.String;
        specialinvoke r0.<sun.net.www.protocol.http.AuthCacheValue: void <init>()>();
        r0.<sun.net.www.protocol.http.AuthenticationInfo: char type> = c0;
        r0.<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthScheme authScheme> = r1;
        $r5 = virtualinvoke r2.<java.net.URL: java.lang.String getProtocol()>();
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String protocol> = $r6;
        $r7 = virtualinvoke r2.<java.net.URL: java.lang.String getHost()>();
        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String host> = $r8;
        $i1 = virtualinvoke r2.<java.net.URL: int getPort()>();
        r0.<sun.net.www.protocol.http.AuthenticationInfo: int port> = $i1;
        $i2 = r0.<sun.net.www.protocol.http.AuthenticationInfo: int port>;
        if $i2 != -1 goto label0;

        $i3 = virtualinvoke r2.<java.net.URL: int getDefaultPort()>();
        r0.<sun.net.www.protocol.http.AuthenticationInfo: int port> = $i3;

     label0:
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String realm> = r3;
        r4 = virtualinvoke r2.<java.net.URL: java.lang.String getPath()>();
        $i4 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i4 != 0 goto label1;

        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String path> = r4;
        goto label2;

     label1:
        $r9 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: java.lang.String reducePath(java.lang.String)>(r4);
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String path> = $r9;

     label2:
        return;
    }

    static java.lang.String reducePath(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, i1, $i2;

        r0 := @parameter0: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);
        i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);
        if i0 == -1 goto label1;

        if i0 >= i1 goto label0;

        $i2 = i0 + 1;
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);
        return $r1;

     label0:
        return r0;

     label1:
        return r0;
    }

    static sun.net.www.protocol.http.AuthenticationInfo getServerAuth(java.net.URL)
    {
        java.net.URL r0;
        int i0;
        java.lang.String r1, $r4, $r5, $r8, $r9;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r10, $r11, $r12;
        sun.net.www.protocol.http.AuthenticationInfo $r13;

        r0 := @parameter0: java.net.URL;
        i0 = virtualinvoke r0.<java.net.URL: int getPort()>();
        if i0 != -1 goto label0;

        i0 = virtualinvoke r0.<java.net.URL: int getDefaultPort()>();

     label0:
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s:");
        $r4 = virtualinvoke r0.<java.net.URL: java.lang.String getProtocol()>();
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r8 = virtualinvoke r0.<java.net.URL: java.lang.String getHost()>();
        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        $r13 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getAuth(java.lang.String,java.net.URL)>(r1, r0);
        return $r13;
    }

    static java.lang.String getServerAuthKey(java.net.URL, java.lang.String, sun.net.www.protocol.http.AuthScheme)
    {
        java.net.URL r0;
        java.lang.String r1, r3, $r8, $r9, $r12, $r13;
        sun.net.www.protocol.http.AuthScheme r2;
        int i0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r10, $r11, $r14, $r15, $r16, $r17, $r18;

        r0 := @parameter0: java.net.URL;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: sun.net.www.protocol.http.AuthScheme;
        i0 = virtualinvoke r0.<java.net.URL: int getPort()>();
        if i0 != -1 goto label0;

        i0 = virtualinvoke r0.<java.net.URL: int getDefaultPort()>();

     label0:
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s:");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r8 = virtualinvoke r0.<java.net.URL: java.lang.String getProtocol()>();
        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r12 = virtualinvoke r0.<java.net.URL: java.lang.String getHost()>();
        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase()>();
        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r3 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        return r3;
    }

    static sun.net.www.protocol.http.AuthenticationInfo getServerAuth(java.lang.String)
    {
        java.lang.String r0;
        sun.net.www.protocol.http.AuthenticationInfo r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        r1 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getAuth(java.lang.String,java.net.URL)>(r0, null);
        if r1 != null goto label0;

        $z0 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: boolean requestIsInProgress(java.lang.String)>(r0);
        if $z0 == 0 goto label0;

        r1 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getAuth(java.lang.String,java.net.URL)>(r0, null);

     label0:
        return r1;
    }

    static sun.net.www.protocol.http.AuthenticationInfo getAuth(java.lang.String, java.net.URL)
    {
        java.lang.String r0, $r6;
        java.net.URL r1;
        sun.net.www.protocol.http.AuthCache $r2, $r5;
        sun.net.www.protocol.http.AuthCacheValue $r3, $r7;
        sun.net.www.protocol.http.AuthenticationInfo $r4, $r8;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.net.URL;
        if r1 != null goto label0;

        $r2 = <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthCache cache>;
        $r3 = interfaceinvoke $r2.<sun.net.www.protocol.http.AuthCache: sun.net.www.protocol.http.AuthCacheValue get(java.lang.String,java.lang.String)>(r0, null);
        $r4 = (sun.net.www.protocol.http.AuthenticationInfo) $r3;
        return $r4;

     label0:
        $r5 = <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthCache cache>;
        $r6 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();
        $r7 = interfaceinvoke $r5.<sun.net.www.protocol.http.AuthCache: sun.net.www.protocol.http.AuthCacheValue get(java.lang.String,java.lang.String)>(r0, $r6);
        $r8 = (sun.net.www.protocol.http.AuthenticationInfo) $r7;
        return $r8;
    }

    static sun.net.www.protocol.http.AuthenticationInfo getProxyAuth(java.lang.String, int)
    {
        java.lang.String r0, r2, $r5;
        int i0;
        java.lang.StringBuilder $r1, $r4, $r6, $r7, $r8;
        sun.net.www.protocol.http.AuthenticationInfo r3;
        sun.net.www.protocol.http.AuthCache $r9;
        sun.net.www.protocol.http.AuthCacheValue $r10;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("p::");
        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthCache cache>;
        $r10 = interfaceinvoke $r9.<sun.net.www.protocol.http.AuthCache: sun.net.www.protocol.http.AuthCacheValue get(java.lang.String,java.lang.String)>(r2, null);
        r3 = (sun.net.www.protocol.http.AuthenticationInfo) $r10;
        return r3;
    }

    static java.lang.String getProxyAuthKey(java.lang.String, int, java.lang.String, sun.net.www.protocol.http.AuthScheme)
    {
        java.lang.String r0, r1, r4, $r8;
        int i0;
        sun.net.www.protocol.http.AuthScheme r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: sun.net.www.protocol.http.AuthScheme;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("p:");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::");
        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        return r4;
    }

    static sun.net.www.protocol.http.AuthenticationInfo getProxyAuth(java.lang.String)
    {
        java.lang.String r0;
        sun.net.www.protocol.http.AuthCache $r1, $r4;
        sun.net.www.protocol.http.AuthenticationInfo r2;
        sun.net.www.protocol.http.AuthCacheValue $r3, $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthCache cache>;
        $r3 = interfaceinvoke $r1.<sun.net.www.protocol.http.AuthCache: sun.net.www.protocol.http.AuthCacheValue get(java.lang.String,java.lang.String)>(r0, null);
        r2 = (sun.net.www.protocol.http.AuthenticationInfo) $r3;
        if r2 != null goto label0;

        $z0 = staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: boolean requestIsInProgress(java.lang.String)>(r0);
        if $z0 == 0 goto label0;

        $r4 = <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthCache cache>;
        $r5 = interfaceinvoke $r4.<sun.net.www.protocol.http.AuthCache: sun.net.www.protocol.http.AuthCacheValue get(java.lang.String,java.lang.String)>(r0, null);
        r2 = (sun.net.www.protocol.http.AuthenticationInfo) $r5;

     label0:
        return r2;
    }

    void addToCache()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        java.lang.String r1, $r4;
        sun.net.www.protocol.http.AuthCache $r2, $r3;
        boolean $z0;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        r1 = virtualinvoke r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String cacheKey(boolean)>(1);
        $r2 = <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthCache cache>;
        interfaceinvoke $r2.<sun.net.www.protocol.http.AuthCache: void put(java.lang.String,sun.net.www.protocol.http.AuthCacheValue)>(r1, r0);
        $z0 = virtualinvoke r0.<sun.net.www.protocol.http.AuthenticationInfo: boolean supportsPreemptiveAuthorization()>();
        if $z0 == 0 goto label0;

        $r3 = <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthCache cache>;
        $r4 = virtualinvoke r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String cacheKey(boolean)>(0);
        interfaceinvoke $r3.<sun.net.www.protocol.http.AuthCache: void put(java.lang.String,sun.net.www.protocol.http.AuthCacheValue)>($r4, r0);

     label0:
        staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>(r1);
        return;
    }

    static void endAuthRequest(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        java.util.HashMap r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @parameter0: java.lang.String;
        $z0 = <sun.net.www.protocol.http.AuthenticationInfo: boolean serializeAuth>;
        if $z0 != 0 goto label0;

        return;

     label0:
        $r3 = <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests>;
        r1 = $r3;
        entermonitor $r3;

     label1:
        staticinvoke <sun.net.www.protocol.http.AuthenticationInfo: void requestCompleted(java.lang.String)>(r0);
        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r4 := @caughtexception;

     label4:
        r2 = $r4;
        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void removeFromCache()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        sun.net.www.protocol.http.AuthCache $r1, $r3;
        java.lang.String $r2, $r4;
        boolean $z0;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        $r1 = <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthCache cache>;
        $r2 = virtualinvoke r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String cacheKey(boolean)>(1);
        interfaceinvoke $r1.<sun.net.www.protocol.http.AuthCache: void remove(java.lang.String,sun.net.www.protocol.http.AuthCacheValue)>($r2, r0);
        $z0 = virtualinvoke r0.<sun.net.www.protocol.http.AuthenticationInfo: boolean supportsPreemptiveAuthorization()>();
        if $z0 == 0 goto label0;

        $r3 = <sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthCache cache>;
        $r4 = virtualinvoke r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String cacheKey(boolean)>(0);
        interfaceinvoke $r3.<sun.net.www.protocol.http.AuthCache: void remove(java.lang.String,sun.net.www.protocol.http.AuthCacheValue)>($r4, r0);

     label0:
        return;
    }

    public abstract boolean supportsPreemptiveAuthorization();

    public java.lang.String getHeaderName()
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        char $c0;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        $c0 = r0.<sun.net.www.protocol.http.AuthenticationInfo: char type>;
        if $c0 != 115 goto label0;

        return "Authorization";

     label0:
        return "Proxy-authorization";
    }

    public abstract java.lang.String getHeaderValue(java.net.URL, java.lang.String);

    public abstract boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection, sun.net.www.HeaderParser, java.lang.String);

    public abstract boolean isAuthorizationStale(java.lang.String);

    java.lang.String cacheKey(boolean)
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        boolean z0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r18, $r19, $r20, $r22, $r23, $r25, $r26, $r27;
        char $c0, $c2;
        sun.net.www.protocol.http.AuthScheme $r4;
        java.lang.String $r7, $r10, $r15, $r17, $r21, $r24, $r28;
        int $i1, $i3;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        z0 := @parameter0: boolean;
        if z0 == 0 goto label0;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $c0 = r0.<sun.net.www.protocol.http.AuthenticationInfo: char type>;
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r4 = r0.<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthScheme authScheme>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r7 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String protocol>;
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r10 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String host>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $i1 = r0.<sun.net.www.protocol.http.AuthenticationInfo: int port>;
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r15 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String realm>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r17;

     label0:
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $c2 = r0.<sun.net.www.protocol.http.AuthenticationInfo: char type>;
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r21 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String protocol>;
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r24 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String host>;
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $i3 = r0.<sun.net.www.protocol.http.AuthenticationInfo: int port>;
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r28;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        java.io.ObjectInputStream r1;
        java.net.PasswordAuthentication $r2;
        java.lang.String $r3, $r4;
        char[] $r5;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        r1 := @parameter0: java.io.ObjectInputStream;
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();
        $r2 = new java.net.PasswordAuthentication;
        $r3 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String s1>;
        $r4 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String s2>;
        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();
        specialinvoke $r2.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r3, $r5);
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.net.PasswordAuthentication pw> = $r2;
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String s1> = null;
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String s2> = null;
        return;
    }

    private synchronized void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        sun.net.www.protocol.http.AuthenticationInfo r0;
        java.io.ObjectOutputStream r1;
        java.net.PasswordAuthentication $r2, $r5;
        java.lang.String $r3, $r4;
        char[] $r6;

        r0 := @this: sun.net.www.protocol.http.AuthenticationInfo;
        r1 := @parameter0: java.io.ObjectOutputStream;
        $r2 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.net.PasswordAuthentication pw>;
        $r3 = virtualinvoke $r2.<java.net.PasswordAuthentication: java.lang.String getUserName()>();
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String s1> = $r3;
        $r4 = new java.lang.String;
        $r5 = r0.<sun.net.www.protocol.http.AuthenticationInfo: java.net.PasswordAuthentication pw>;
        $r6 = virtualinvoke $r5.<java.net.PasswordAuthentication: char[] getPassword()>();
        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);
        r0.<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String s2> = $r4;
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1, $z2;
        sun.security.action.GetBooleanAction $r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        java.util.HashMap $r4;

        $r0 = class "sun/net/www/protocol/http/AuthenticationInfo";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <sun.net.www.protocol.http.AuthenticationInfo: boolean $assertionsDisabled> = $z1;
        $r1 = new sun.security.action.GetBooleanAction;
        specialinvoke $r1.<sun.security.action.GetBooleanAction: void <init>(java.lang.String)>("http.auth.serializeRequests");
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        $r3 = (java.lang.Boolean) $r2;
        $z2 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();
        <sun.net.www.protocol.http.AuthenticationInfo: boolean serializeAuth> = $z2;
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        <sun.net.www.protocol.http.AuthenticationInfo: java.util.HashMap requests> = $r4;
        return;
    }
}
