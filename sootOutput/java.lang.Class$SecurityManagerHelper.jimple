class java.lang.Class$SecurityManagerHelper extends java.lang.Object
{
    final java.lang.SecurityManager sm;
    final boolean overrideCheckMemberAccess;

    void <init>(java.lang.SecurityManager)
    {
        java.lang.Class$SecurityManagerHelper r0;
        java.lang.SecurityManager r1;
        boolean z0, $z1;
        java.lang.NoSuchMethodError r2, $r7;
        java.lang.Class $r3, $r4, $r6;
        java.lang.reflect.Method $r5;

        r0 := @this: java.lang.Class$SecurityManagerHelper;
        r1 := @parameter0: java.lang.SecurityManager;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.Class$SecurityManagerHelper: java.lang.SecurityManager sm> = r1;
        z0 = 0;
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == class "java/lang/SecurityManager" goto label5;

     label0:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r5 = staticinvoke <java.lang.Class: java.lang.reflect.Method access$100(java.lang.Class)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
        if $r6 == class "java/lang/SecurityManager" goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;
        r2 = $r7;

     label5:
        r0.<java.lang.Class$SecurityManagerHelper: boolean overrideCheckMemberAccess> = z0;
        return;

        catch java.lang.NoSuchMethodError from label0 to label3 with label4;
    }
}
