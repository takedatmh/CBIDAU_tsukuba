class java.nio.file.attribute.FileTime$DaysAndNanos extends java.lang.Object implements java.lang.Comparable
{
    private static final long C0;
    private static final long C1;
    private static final long C2;
    private static final long C3;
    private static final long C4;
    private static final long C5;
    private static final long C6;
    private final long days;
    private final long excessNanos;

    void <init>(long, java.util.concurrent.TimeUnit)
    {
        java.nio.file.attribute.FileTime$DaysAndNanos r0;
        long l0, l1, $l4, $l5, $l6, $l7, $l8;
        java.util.concurrent.TimeUnit r1;
        int[] $r2;
        int $i2, $i3;
        java.lang.AssertionError $r3;

        r0 := @this: java.nio.file.attribute.FileTime$DaysAndNanos;
        l0 := @parameter0: long;
        r1 := @parameter1: java.util.concurrent.TimeUnit;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = <java.nio.file.attribute.FileTime$1: int[] $SwitchMap$java$util$concurrent$TimeUnit>;
        $i2 = virtualinvoke r1.<java.util.concurrent.TimeUnit: int ordinal()>();
        $i3 = $r2[$i2];
        tableswitch($i3)
        {
            case 1: goto label0;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label6;
            default: goto label7;
        };

     label0:
        l1 = 1L;
        goto label8;

     label1:
        l1 = 24L;
        goto label8;

     label2:
        l1 = 1440L;
        goto label8;

     label3:
        l1 = 86400L;
        goto label8;

     label4:
        l1 = 86400000L;
        goto label8;

     label5:
        l1 = 86400000000L;
        goto label8;

     label6:
        l1 = 86400000000000L;
        goto label8;

     label7:
        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("Unit not handled");
        throw $r3;

     label8:
        $l4 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toDays(long)>(l0);
        r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long days> = $l4;
        $l5 = r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long days>;
        $l6 = $l5 * l1;
        $l7 = l0 - $l6;
        $l8 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>($l7);
        r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long excessNanos> = $l8;
        return;
    }

    long fractionOfSecondInNanos()
    {
        java.nio.file.attribute.FileTime$DaysAndNanos r0;
        long $l0, $l1;

        r0 := @this: java.nio.file.attribute.FileTime$DaysAndNanos;
        $l0 = r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long excessNanos>;
        $l1 = $l0 % 1000000000L;
        return $l1;
    }

    public boolean equals(java.lang.Object)
    {
        java.nio.file.attribute.FileTime$DaysAndNanos r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: java.nio.file.attribute.FileTime$DaysAndNanos;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.nio.file.attribute.FileTime$DaysAndNanos;
        if $z0 == 0 goto label1;

        $r2 = (java.nio.file.attribute.FileTime$DaysAndNanos) r1;
        $i0 = virtualinvoke r0.<java.nio.file.attribute.FileTime$DaysAndNanos: int compareTo(java.nio.file.attribute.FileTime$DaysAndNanos)>($r2);
        if $i0 != 0 goto label0;

        $z1 = 1;
        goto label2;

     label0:
        $z1 = 0;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        java.nio.file.attribute.FileTime$DaysAndNanos r0;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8;
        int $i9;

        r0 := @this: java.nio.file.attribute.FileTime$DaysAndNanos;
        $l0 = r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long days>;
        $l1 = r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long days>;
        $l2 = $l1 >>> 32;
        $l3 = $l0 ^ $l2;
        $l4 = r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long excessNanos>;
        $l5 = $l3 ^ $l4;
        $l6 = r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long excessNanos>;
        $l7 = $l6 >>> 32;
        $l8 = $l5 ^ $l7;
        $i9 = (int) $l8;
        return $i9;
    }

    public int compareTo(java.nio.file.attribute.FileTime$DaysAndNanos)
    {
        java.nio.file.attribute.FileTime$DaysAndNanos r0, r1;
        long $l0, $l1, $l3, $l4, $l7, $l8, $l11, $l12;
        byte $b2, $b5, $b6, $b9, $b10, $b13;

        r0 := @this: java.nio.file.attribute.FileTime$DaysAndNanos;
        r1 := @parameter0: java.nio.file.attribute.FileTime$DaysAndNanos;
        $l0 = r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long days>;
        $l1 = r1.<java.nio.file.attribute.FileTime$DaysAndNanos: long days>;
        $b2 = $l0 cmp $l1;
        if $b2 == 0 goto label2;

        $l3 = r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long days>;
        $l4 = r1.<java.nio.file.attribute.FileTime$DaysAndNanos: long days>;
        $b5 = $l3 cmp $l4;
        if $b5 >= 0 goto label0;

        $b6 = -1;
        goto label1;

     label0:
        $b6 = 1;

     label1:
        return $b6;

     label2:
        $l7 = r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long excessNanos>;
        $l8 = r1.<java.nio.file.attribute.FileTime$DaysAndNanos: long excessNanos>;
        $b9 = $l7 cmp $l8;
        if $b9 >= 0 goto label3;

        $b10 = -1;
        goto label5;

     label3:
        $l11 = r0.<java.nio.file.attribute.FileTime$DaysAndNanos: long excessNanos>;
        $l12 = r1.<java.nio.file.attribute.FileTime$DaysAndNanos: long excessNanos>;
        $b13 = $l11 cmp $l12;
        if $b13 != 0 goto label4;

        $b10 = 0;
        goto label5;

     label4:
        $b10 = 1;

     label5:
        return $b10;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.nio.file.attribute.FileTime$DaysAndNanos r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.nio.file.attribute.FileTime$DaysAndNanos;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.nio.file.attribute.FileTime$DaysAndNanos) r1;
        $i0 = virtualinvoke r0.<java.nio.file.attribute.FileTime$DaysAndNanos: int compareTo(java.nio.file.attribute.FileTime$DaysAndNanos)>($r2);
        return $i0;
    }
}
