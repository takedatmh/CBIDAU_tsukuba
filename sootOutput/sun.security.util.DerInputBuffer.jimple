class sun.security.util.DerInputBuffer extends java.io.ByteArrayInputStream implements java.lang.Cloneable
{

    void <init>(byte[])
    {
        sun.security.util.DerInputBuffer r0;
        byte[] r1;

        r0 := @this: sun.security.util.DerInputBuffer;
        r1 := @parameter0: byte[];
        specialinvoke r0.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);
        return;
    }

    void <init>(byte[], int, int)
    {
        sun.security.util.DerInputBuffer r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: sun.security.util.DerInputBuffer;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r1, i0, i1);
        return;
    }

    sun.security.util.DerInputBuffer dup()
    {
        sun.security.util.DerInputBuffer r0, r1;
        java.lang.Object $r2;
        java.lang.CloneNotSupportedException $r4, r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;

        r0 := @this: sun.security.util.DerInputBuffer;

     label0:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        r1 = (sun.security.util.DerInputBuffer) $r2;
        virtualinvoke r1.<sun.security.util.DerInputBuffer: void mark(int)>(2147483647);

     label1:
        return r1;

     label2:
        $r4 := @caughtexception;
        r5 = $r4;
        $r6 = new java.lang.IllegalArgumentException;
        $r7 = virtualinvoke r5.<java.lang.CloneNotSupportedException: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);
        throw $r6;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    byte[] toByteArray()
    {
        sun.security.util.DerInputBuffer r0;
        int i0, $i1;
        byte[] r1, $r2;

        r0 := @this: sun.security.util.DerInputBuffer;
        i0 = virtualinvoke r0.<sun.security.util.DerInputBuffer: int available()>();
        if i0 > 0 goto label0;

        return null;

     label0:
        r1 = newarray (byte)[i0];
        $r2 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i1 = r0.<sun.security.util.DerInputBuffer: int pos>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, r1, 0, i0);
        return r1;
    }

    int peek() throws java.io.IOException
    {
        sun.security.util.DerInputBuffer r0;
        int $i0, $i1, $i2;
        java.io.IOException $r1;
        byte[] $r2;
        byte $b3;

        r0 := @this: sun.security.util.DerInputBuffer;
        $i0 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i1 = r0.<sun.security.util.DerInputBuffer: int count>;
        if $i0 < $i1 goto label0;

        $r1 = new java.io.IOException;
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("out of data");
        throw $r1;

     label0:
        $r2 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i2 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $b3 = $r2[$i2];
        return $b3;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.util.DerInputBuffer r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: sun.security.util.DerInputBuffer;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof sun.security.util.DerInputBuffer;
        if $z0 == 0 goto label0;

        $r2 = (sun.security.util.DerInputBuffer) r1;
        $z1 = virtualinvoke r0.<sun.security.util.DerInputBuffer: boolean equals(sun.security.util.DerInputBuffer)>($r2);
        return $z1;

     label0:
        return 0;
    }

    boolean equals(sun.security.util.DerInputBuffer)
    {
        sun.security.util.DerInputBuffer r0, r1;
        int i0, i1, $i2, $i3, $i4, $i6, $i7;
        byte[] $r2, $r3;
        byte $b5, $b8;

        r0 := @this: sun.security.util.DerInputBuffer;
        r1 := @parameter0: sun.security.util.DerInputBuffer;
        if r0 != r1 goto label0;

        return 1;

     label0:
        i0 = virtualinvoke r0.<sun.security.util.DerInputBuffer: int available()>();
        $i2 = virtualinvoke r1.<sun.security.util.DerInputBuffer: int available()>();
        if $i2 == i0 goto label1;

        return 0;

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r2 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i3 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i4 = $i3 + i1;
        $b5 = $r2[$i4];
        $r3 = r1.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i6 = r1.<sun.security.util.DerInputBuffer: int pos>;
        $i7 = $i6 + i1;
        $b8 = $r3[$i7];
        if $b5 == $b8 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;
        goto label2;

     label4:
        return 1;
    }

    public int hashCode()
    {
        sun.security.util.DerInputBuffer r0;
        int i0, i1, i2, i3, $i4, $i6;
        byte[] $r1;
        byte $b5;

        r0 := @this: sun.security.util.DerInputBuffer;
        i0 = 0;
        i1 = virtualinvoke r0.<sun.security.util.DerInputBuffer: int available()>();
        i2 = r0.<sun.security.util.DerInputBuffer: int pos>;
        i3 = 0;

     label0:
        if i3 >= i1 goto label1;

        $r1 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i4 = i2 + i3;
        $b5 = $r1[$i4];
        $i6 = $b5 * i3;
        i0 = i0 + $i6;
        i3 = i3 + 1;
        goto label0;

     label1:
        return i0;
    }

    void truncate(int) throws java.io.IOException
    {
        sun.security.util.DerInputBuffer r0;
        int i0, $i1, $i2, $i3;
        java.io.IOException $r1;

        r0 := @this: sun.security.util.DerInputBuffer;
        i0 := @parameter0: int;
        $i1 = virtualinvoke r0.<sun.security.util.DerInputBuffer: int available()>();
        if i0 <= $i1 goto label0;

        $r1 = new java.io.IOException;
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("insufficient data");
        throw $r1;

     label0:
        $i2 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i3 = $i2 + i0;
        r0.<sun.security.util.DerInputBuffer: int count> = $i3;
        return;
    }

    java.math.BigInteger getBigInteger(int, boolean) throws java.io.IOException
    {
        sun.security.util.DerInputBuffer r0;
        int i0, $i1, $i2;
        boolean z0;
        byte[] r1, $r4;
        java.io.IOException $r2, $r3;
        long $l3;
        java.math.BigInteger $r5, $r6;

        r0 := @this: sun.security.util.DerInputBuffer;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        $i1 = virtualinvoke r0.<sun.security.util.DerInputBuffer: int available()>();
        if i0 <= $i1 goto label0;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("short read of integer");
        throw $r2;

     label0:
        if i0 != 0 goto label1;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Invalid encoding: zero length Int value");
        throw $r3;

     label1:
        r1 = newarray (byte)[i0];
        $r4 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i2 = r0.<sun.security.util.DerInputBuffer: int pos>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i2, r1, 0, i0);
        $l3 = (long) i0;
        virtualinvoke r0.<sun.security.util.DerInputBuffer: long skip(long)>($l3);
        if z0 == 0 goto label2;

        $r5 = new java.math.BigInteger;
        specialinvoke $r5.<java.math.BigInteger: void <init>(int,byte[])>(1, r1);
        return $r5;

     label2:
        $r6 = new java.math.BigInteger;
        specialinvoke $r6.<java.math.BigInteger: void <init>(byte[])>(r1);
        return $r6;
    }

    public int getInteger(int) throws java.io.IOException
    {
        sun.security.util.DerInputBuffer r0;
        int i0, $i1, $i2, $i3;
        java.math.BigInteger r1, $r2, $r4;
        java.io.IOException $r3, $r5;

        r0 := @this: sun.security.util.DerInputBuffer;
        i0 := @parameter0: int;
        r1 = virtualinvoke r0.<sun.security.util.DerInputBuffer: java.math.BigInteger getBigInteger(int,boolean)>(i0, 0);
        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-2147483648L);
        $i1 = virtualinvoke r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);
        if $i1 >= 0 goto label0;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Integer below minimum valid value");
        throw $r3;

     label0:
        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L);
        $i2 = virtualinvoke r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r4);
        if $i2 <= 0 goto label1;

        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Integer exceeds maximum valid value");
        throw $r5;

     label1:
        $i3 = virtualinvoke r1.<java.math.BigInteger: int intValue()>();
        return $i3;
    }

    public byte[] getBitString(int) throws java.io.IOException
    {
        sun.security.util.DerInputBuffer r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11;
        byte b1, $b9, $b12;
        byte[] r1, $r4, $r6;
        java.io.IOException $r2, $r3, $r5;
        long $l13;

        r0 := @this: sun.security.util.DerInputBuffer;
        i0 := @parameter0: int;
        $i2 = virtualinvoke r0.<sun.security.util.DerInputBuffer: int available()>();
        if i0 <= $i2 goto label0;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("short read of bit string");
        throw $r2;

     label0:
        if i0 != 0 goto label1;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Invalid encoding: zero length bit string");
        throw $r3;

     label1:
        $r4 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i3 = r0.<sun.security.util.DerInputBuffer: int pos>;
        b1 = $r4[$i3];
        if b1 < 0 goto label2;

        if b1 <= 7 goto label3;

     label2:
        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Invalid number of padding bits");
        throw $r5;

     label3:
        $i4 = i0 - 1;
        r1 = newarray (byte)[$i4];
        $r6 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i5 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i6 = $i5 + 1;
        $i7 = i0 - 1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i6, r1, 0, $i7);
        if b1 == 0 goto label4;

        $i8 = i0 - 2;
        $b9 = r1[$i8];
        $i10 = 255 << b1;
        $i11 = $b9 & $i10;
        $b12 = (byte) $i11;
        r1[$i8] = $b12;

     label4:
        $l13 = (long) i0;
        virtualinvoke r0.<sun.security.util.DerInputBuffer: long skip(long)>($l13);
        return r1;
    }

    byte[] getBitString() throws java.io.IOException
    {
        sun.security.util.DerInputBuffer r0;
        int $i0;
        byte[] $r1;

        r0 := @this: sun.security.util.DerInputBuffer;
        $i0 = virtualinvoke r0.<sun.security.util.DerInputBuffer: int available()>();
        $r1 = virtualinvoke r0.<sun.security.util.DerInputBuffer: byte[] getBitString(int)>($i0);
        return $r1;
    }

    sun.security.util.BitArray getUnalignedBitString() throws java.io.IOException
    {
        sun.security.util.DerInputBuffer r0;
        int i0, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        short s1;
        java.lang.StringBuilder $r1, $r6, $r7;
        byte[] r2, $r4, $r9;
        sun.security.util.BitArray r3, $r10;
        byte $b6;
        java.io.IOException $r5;
        java.lang.String $r8;

        r0 := @this: sun.security.util.DerInputBuffer;
        $i3 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i4 = r0.<sun.security.util.DerInputBuffer: int count>;
        if $i3 < $i4 goto label0;

        return null;

     label0:
        i0 = virtualinvoke r0.<sun.security.util.DerInputBuffer: int available()>();
        $r4 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i5 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $b6 = $r4[$i5];
        s1 = $b6 & 255;
        if s1 <= 7 goto label1;

        $r5 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for unused bits: ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r8);
        throw $r5;

     label1:
        $i7 = i0 - 1;
        r2 = newarray (byte)[$i7];
        $i8 = lengthof r2;
        if $i8 != 0 goto label2;

        $i9 = 0;
        goto label3;

     label2:
        $i10 = lengthof r2;
        $i11 = $i10 * 8;
        $i9 = $i11 - s1;

     label3:
        i2 = $i9;
        $r9 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i12 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i13 = $i12 + 1;
        $i14 = i0 - 1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i13, r2, 0, $i14);
        $r10 = new sun.security.util.BitArray;
        specialinvoke $r10.<sun.security.util.BitArray: void <init>(int,byte[])>(i2, r2);
        r3 = $r10;
        $i15 = r0.<sun.security.util.DerInputBuffer: int count>;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i15;
        return r3;
    }

    public java.util.Date getUTCTime(int) throws java.io.IOException
    {
        sun.security.util.DerInputBuffer r0;
        int i0, $i1;
        java.io.IOException $r1, $r2;
        java.util.Date $r3;

        r0 := @this: sun.security.util.DerInputBuffer;
        i0 := @parameter0: int;
        $i1 = virtualinvoke r0.<sun.security.util.DerInputBuffer: int available()>();
        if i0 <= $i1 goto label0;

        $r1 = new java.io.IOException;
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("short read of DER UTC Time");
        throw $r1;

     label0:
        if i0 < 11 goto label1;

        if i0 <= 17 goto label2;

     label1:
        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("DER UTC Time length error");
        throw $r2;

     label2:
        $r3 = specialinvoke r0.<sun.security.util.DerInputBuffer: java.util.Date getTime(int,boolean)>(i0, 0);
        return $r3;
    }

    public java.util.Date getGeneralizedTime(int) throws java.io.IOException
    {
        sun.security.util.DerInputBuffer r0;
        int i0, $i1;
        java.io.IOException $r1, $r2;
        java.util.Date $r3;

        r0 := @this: sun.security.util.DerInputBuffer;
        i0 := @parameter0: int;
        $i1 = virtualinvoke r0.<sun.security.util.DerInputBuffer: int available()>();
        if i0 <= $i1 goto label0;

        $r1 = new java.io.IOException;
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("short read of DER Generalized Time");
        throw $r1;

     label0:
        if i0 < 13 goto label1;

        if i0 <= 23 goto label2;

     label1:
        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("DER Generalized Time length error");
        throw $r2;

     label2:
        $r3 = specialinvoke r0.<sun.security.util.DerInputBuffer: java.util.Date getTime(int,boolean)>(i0, 1);
        return $r3;
    }

    private java.util.Date getTime(int, boolean) throws java.io.IOException
    {
        sun.security.util.DerInputBuffer r0;
        int i0, $i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i12, i13, $i14, $i17, $i18, $i19, $i22, $i23, i24, $i25, $i26, $i29, $i30, i31, $i32, $i33, $i36, i37, $i38, $i39, $i42, i43, $i44, $i45, $i48, i49, $i50, $i51, $i54, $i55, $i56, $i59, i60, $i61, $i62, $i65, $i66, $i67, $i70, i71, $i72, $i73, $i76, $i77, $i78, $i81, i82, $i83, $i84, $i87, $i88, $i89, $i92, i93, i94, $i95, $i96, $i99, $i100, $i101, $i104, i105, $i106, $i108, i110, $i111, $i112, $i116, $i117, $i120, $i121, i122, $i123, $i124, $i127, $i128, i129, $i130, $i131, $i134, $i135, $i136, $i139, $i140, i141, $i142, $i143, $i146, $i147, $i148, $i149, $i152, $i153, $i154, $i155, $i157, $i158, $i161, $i162, $i163, $i166, i167, $i168, $i169, $i172, $i173, $i174, $i177, i178, $i179, $i180, $i181, $i182, $i184, $i185, $i188, i189, $i190, $i191, $i194, i195, $i196, $i197, $i200, i201, $i202, $i203, $i206, i207, $i208, $i209, $i210, $i211;
        boolean z0;
        null_type n0;
        long l11, $l183, $l212;
        java.lang.String r2, $r57, $r63, $r73, $r89, $r103, $r109;
        byte[] $r3, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r35, $r37, $r38, $r39, $r40, $r42, $r44, $r46, $r48, $r50, $r74, $r76, $r78, $r80, $r82, $r90, $r92, $r94, $r96;
        byte $b15, $b20, $b27, $b34, $b40, $b46, $b52, $b57, $b63, $b68, $b74, $b79, $b85, $b90, $b97, $b102, $b107, $b109, $b113, $b114, $b115, $b118, $b125, $b132, $b137, $b144, $b150, $b156, $b159, $b164, $b170, $b175, $b186, $b192, $b198, $b204;
        char $c16, $c21, $c28, $c35, $c41, $c47, $c53, $c58, $c64, $c69, $c75, $c80, $c86, $c91, $c98, $c103, $c119, $c126, $c133, $c138, $c145, $c151, $c160, $c165, $c171, $c176, $c187, $c193, $c199, $c205;
        java.io.IOException $r52, $r58, $r68, $r84, $r98, $r104;
        java.lang.StringBuilder $r53, $r54, $r55, $r56, $r59, $r60, $r61, $r62, $r69, $r70, $r71, $r72, $r85, $r86, $r87, $r88, $r99, $r100, $r101, $r102, $r105, $r106, $r107, $r108;
        sun.util.calendar.Gregorian r64;
        sun.util.calendar.CalendarDate r65;
        java.util.Date $r110;

        r0 := @this: sun.security.util.DerInputBuffer;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        n0 = null;
        if z0 == 0 goto label0;

        r2 = "Generalized";
        $r3 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i1 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i14 = $i1 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i14;
        $b15 = $r3[$i1];
        $c16 = (char) $b15;
        $i17 = staticinvoke <java.lang.Character: int digit(char,int)>($c16, 10);
        i2 = 1000 * $i17;
        $r4 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i18 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i19 = $i18 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i19;
        $b20 = $r4[$i18];
        $c21 = (char) $b20;
        $i22 = staticinvoke <java.lang.Character: int digit(char,int)>($c21, 10);
        $i23 = 100 * $i22;
        i24 = i2 + $i23;
        $r6 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i25 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i26 = $i25 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i26;
        $b27 = $r6[$i25];
        $c28 = (char) $b27;
        $i29 = staticinvoke <java.lang.Character: int digit(char,int)>($c28, 10);
        $i30 = 10 * $i29;
        i31 = i24 + $i30;
        $r8 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i32 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i33 = $i32 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i33;
        $b34 = $r8[$i32];
        $c35 = (char) $b34;
        $i36 = staticinvoke <java.lang.Character: int digit(char,int)>($c35, 10);
        i37 = i31 + $i36;
        i0 = i0 + -2;
        goto label2;

     label0:
        r2 = "UTC";
        $r10 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i38 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i39 = $i38 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i39;
        $b40 = $r10[$i38];
        $c41 = (char) $b40;
        $i42 = staticinvoke <java.lang.Character: int digit(char,int)>($c41, 10);
        i43 = 10 * $i42;
        $r12 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i44 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i45 = $i44 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i45;
        $b46 = $r12[$i44];
        $c47 = (char) $b46;
        $i48 = staticinvoke <java.lang.Character: int digit(char,int)>($c47, 10);
        i49 = i43 + $i48;
        if i49 >= 50 goto label1;

        i37 = i49 + 2000;
        goto label2;

     label1:
        i37 = i49 + 1900;

     label2:
        $r14 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i50 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i51 = $i50 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i51;
        $b52 = $r14[$i50];
        $c53 = (char) $b52;
        $i54 = staticinvoke <java.lang.Character: int digit(char,int)>($c53, 10);
        i3 = 10 * $i54;
        $r16 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i55 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i56 = $i55 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i56;
        $b57 = $r16[$i55];
        $c58 = (char) $b57;
        $i59 = staticinvoke <java.lang.Character: int digit(char,int)>($c58, 10);
        i60 = i3 + $i59;
        $r18 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i61 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i62 = $i61 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i62;
        $b63 = $r18[$i61];
        $c64 = (char) $b63;
        $i65 = staticinvoke <java.lang.Character: int digit(char,int)>($c64, 10);
        i4 = 10 * $i65;
        $r20 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i66 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i67 = $i66 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i67;
        $b68 = $r20[$i66];
        $c69 = (char) $b68;
        $i70 = staticinvoke <java.lang.Character: int digit(char,int)>($c69, 10);
        i71 = i4 + $i70;
        $r22 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i72 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i73 = $i72 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i73;
        $b74 = $r22[$i72];
        $c75 = (char) $b74;
        $i76 = staticinvoke <java.lang.Character: int digit(char,int)>($c75, 10);
        i5 = 10 * $i76;
        $r24 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i77 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i78 = $i77 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i78;
        $b79 = $r24[$i77];
        $c80 = (char) $b79;
        $i81 = staticinvoke <java.lang.Character: int digit(char,int)>($c80, 10);
        i82 = i5 + $i81;
        $r26 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i83 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i84 = $i83 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i84;
        $b85 = $r26[$i83];
        $c86 = (char) $b85;
        $i87 = staticinvoke <java.lang.Character: int digit(char,int)>($c86, 10);
        i6 = 10 * $i87;
        $r28 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i88 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i89 = $i88 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i89;
        $b90 = $r28[$i88];
        $c91 = (char) $b90;
        $i92 = staticinvoke <java.lang.Character: int digit(char,int)>($c91, 10);
        i93 = i6 + $i92;
        i94 = i0 + -10;
        i7 = 0;
        if i94 <= 2 goto label11;

        if i94 >= 12 goto label11;

        $r30 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i95 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i96 = $i95 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i96;
        $b97 = $r30[$i95];
        $c98 = (char) $b97;
        $i99 = staticinvoke <java.lang.Character: int digit(char,int)>($c98, 10);
        i8 = 10 * $i99;
        $r32 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i100 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i101 = $i100 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i101;
        $b102 = $r32[$i100];
        $c103 = (char) $b102;
        $i104 = staticinvoke <java.lang.Character: int digit(char,int)>($c103, 10);
        i105 = i8 + $i104;
        i94 = i94 + -2;
        $r34 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i106 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $b107 = $r34[$i106];
        if $b107 == 46 goto label3;

        $r35 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i108 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $b109 = $r35[$i108];
        if $b109 != 44 goto label12;

     label3:
        i110 = i94 + -1;
        $i111 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i112 = $i111 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i112;
        i9 = 0;
        i10 = r0.<sun.security.util.DerInputBuffer: int pos>;

     label4:
        $r37 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $b113 = $r37[i10];
        if $b113 == 90 goto label5;

        $r38 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $b114 = $r38[i10];
        if $b114 == 43 goto label5;

        $r39 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $b115 = $r39[i10];
        if $b115 == 45 goto label5;

        i10 = i10 + 1;
        i9 = i9 + 1;
        goto label4;

     label5:
        tableswitch(i9)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            default: goto label9;
        };

     label6:
        $r40 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i116 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i117 = $i116 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i117;
        $b118 = $r40[$i116];
        $c119 = (char) $b118;
        $i120 = staticinvoke <java.lang.Character: int digit(char,int)>($c119, 10);
        $i121 = 100 * $i120;
        i122 = i7 + $i121;
        $r42 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i123 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i124 = $i123 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i124;
        $b125 = $r42[$i123];
        $c126 = (char) $b125;
        $i127 = staticinvoke <java.lang.Character: int digit(char,int)>($c126, 10);
        $i128 = 10 * $i127;
        i129 = i122 + $i128;
        $r44 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i130 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i131 = $i130 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i131;
        $b132 = $r44[$i130];
        $c133 = (char) $b132;
        $i134 = staticinvoke <java.lang.Character: int digit(char,int)>($c133, 10);
        i7 = i129 + $i134;
        goto label10;

     label7:
        $r46 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i135 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i136 = $i135 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i136;
        $b137 = $r46[$i135];
        $c138 = (char) $b137;
        $i139 = staticinvoke <java.lang.Character: int digit(char,int)>($c138, 10);
        $i140 = 100 * $i139;
        i141 = i7 + $i140;
        $r48 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i142 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i143 = $i142 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i143;
        $b144 = $r48[$i142];
        $c145 = (char) $b144;
        $i146 = staticinvoke <java.lang.Character: int digit(char,int)>($c145, 10);
        $i147 = 10 * $i146;
        i7 = i141 + $i147;
        goto label10;

     label8:
        $r50 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i148 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i149 = $i148 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i149;
        $b150 = $r50[$i148];
        $c151 = (char) $b150;
        $i152 = staticinvoke <java.lang.Character: int digit(char,int)>($c151, 10);
        $i153 = 100 * $i152;
        i7 = i7 + $i153;
        goto label10;

     label9:
        $r52 = new java.io.IOException;
        $r53 = new java.lang.StringBuilder;
        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse ");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time, unsupported precision for seconds value");
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r52.<java.io.IOException: void <init>(java.lang.String)>($r57);
        throw $r52;

     label10:
        i94 = i110 - i9;
        goto label12;

     label11:
        i105 = 0;

     label12:
        if i60 == 0 goto label13;

        if i71 == 0 goto label13;

        if i60 > 12 goto label13;

        if i71 > 31 goto label13;

        if i82 >= 24 goto label13;

        if i93 >= 60 goto label13;

        if i105 < 60 goto label14;

     label13:
        $r58 = new java.io.IOException;
        $r59 = new java.lang.StringBuilder;
        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse ");
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time, invalid format");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r58.<java.io.IOException: void <init>(java.lang.String)>($r63);
        throw $r58;

     label14:
        r64 = staticinvoke <sun.util.calendar.CalendarSystem: sun.util.calendar.Gregorian getGregorianCalendar()>();
        r65 = virtualinvoke r64.<sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarDate newCalendarDate(java.util.TimeZone)>(null);
        virtualinvoke r65.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>(i37, i60, i71);
        virtualinvoke r65.<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setTimeOfDay(int,int,int,int)>(i82, i93, i105, i7);
        l11 = virtualinvoke r64.<sun.util.calendar.CalendarSystem: long getTime(sun.util.calendar.CalendarDate)>(r65);
        if i94 == 1 goto label15;

        if i94 == 5 goto label15;

        $r68 = new java.io.IOException;
        $r69 = new java.lang.StringBuilder;
        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse ");
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time, invalid offset");
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r68.<java.io.IOException: void <init>(java.lang.String)>($r73);
        throw $r68;

     label15:
        $r74 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i154 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i155 = $i154 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i155;
        $b156 = $r74[$i154];
        lookupswitch($b156)
        {
            case 43: goto label16;
            case 45: goto label19;
            case 90: goto label22;
            default: goto label23;
        };

     label16:
        $r76 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i157 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i158 = $i157 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i158;
        $b159 = $r76[$i157];
        $c160 = (char) $b159;
        $i161 = staticinvoke <java.lang.Character: int digit(char,int)>($c160, 10);
        i12 = 10 * $i161;
        $r78 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i162 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i163 = $i162 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i163;
        $b164 = $r78[$i162];
        $c165 = (char) $b164;
        $i166 = staticinvoke <java.lang.Character: int digit(char,int)>($c165, 10);
        i167 = i12 + $i166;
        $r80 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i168 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i169 = $i168 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i169;
        $b170 = $r80[$i168];
        $c171 = (char) $b170;
        $i172 = staticinvoke <java.lang.Character: int digit(char,int)>($c171, 10);
        i13 = 10 * $i172;
        $r82 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i173 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i174 = $i173 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i174;
        $b175 = $r82[$i173];
        $c176 = (char) $b175;
        $i177 = staticinvoke <java.lang.Character: int digit(char,int)>($c176, 10);
        i178 = i13 + $i177;
        if i167 >= 24 goto label17;

        if i178 < 60 goto label18;

     label17:
        $r84 = new java.io.IOException;
        $r85 = new java.lang.StringBuilder;
        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();
        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse ");
        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time, +hhmm");
        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r84.<java.io.IOException: void <init>(java.lang.String)>($r89);
        throw $r84;

     label18:
        $i179 = i167 * 60;
        $i180 = $i179 + i178;
        $i181 = $i180 * 60;
        $i182 = $i181 * 1000;
        $l183 = (long) $i182;
        l11 = l11 - $l183;
        goto label24;

     label19:
        $r90 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i184 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i185 = $i184 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i185;
        $b186 = $r90[$i184];
        $c187 = (char) $b186;
        $i188 = staticinvoke <java.lang.Character: int digit(char,int)>($c187, 10);
        i189 = 10 * $i188;
        $r92 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i190 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i191 = $i190 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i191;
        $b192 = $r92[$i190];
        $c193 = (char) $b192;
        $i194 = staticinvoke <java.lang.Character: int digit(char,int)>($c193, 10);
        i195 = i189 + $i194;
        $r94 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i196 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i197 = $i196 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i197;
        $b198 = $r94[$i196];
        $c199 = (char) $b198;
        $i200 = staticinvoke <java.lang.Character: int digit(char,int)>($c199, 10);
        i201 = 10 * $i200;
        $r96 = r0.<sun.security.util.DerInputBuffer: byte[] buf>;
        $i202 = r0.<sun.security.util.DerInputBuffer: int pos>;
        $i203 = $i202 + 1;
        r0.<sun.security.util.DerInputBuffer: int pos> = $i203;
        $b204 = $r96[$i202];
        $c205 = (char) $b204;
        $i206 = staticinvoke <java.lang.Character: int digit(char,int)>($c205, 10);
        i207 = i201 + $i206;
        if i195 >= 24 goto label20;

        if i207 < 60 goto label21;

     label20:
        $r98 = new java.io.IOException;
        $r99 = new java.lang.StringBuilder;
        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();
        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse ");
        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time, -hhmm");
        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r98.<java.io.IOException: void <init>(java.lang.String)>($r103);
        throw $r98;

     label21:
        $i208 = i195 * 60;
        $i209 = $i208 + i207;
        $i210 = $i209 * 60;
        $i211 = $i210 * 1000;
        $l212 = (long) $i211;
        l11 = l11 + $l212;
        goto label24;

     label22:
        goto label24;

     label23:
        $r104 = new java.io.IOException;
        $r105 = new java.lang.StringBuilder;
        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();
        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse ");
        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time, garbage offset");
        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r104.<java.io.IOException: void <init>(java.lang.String)>($r109);
        throw $r104;

     label24:
        $r110 = new java.util.Date;
        specialinvoke $r110.<java.util.Date: void <init>(long)>(l11);
        return $r110;
    }
}
