public class org.apache.tomcat.util.Diagnostics extends java.lang.Object
{
    private static final java.lang.String PACKAGE;
    private static final java.lang.String INDENT1;
    private static final java.lang.String INDENT2;
    private static final java.lang.String INDENT3;
    private static final java.lang.String CRLF;
    private static final java.lang.String vminfoSystemProperty;
    private static final java.text.SimpleDateFormat timeformat;
    private static final java.lang.management.ClassLoadingMXBean classLoadingMXBean;
    private static final java.lang.management.CompilationMXBean compilationMXBean;
    private static final java.lang.management.OperatingSystemMXBean operatingSystemMXBean;
    private static final java.lang.management.RuntimeMXBean runtimeMXBean;
    private static final java.lang.management.ThreadMXBean threadMXBean;
    private static final java.util.logging.LoggingMXBean loggingMXBean;
    private static final java.lang.management.MemoryMXBean memoryMXBean;
    private static final java.util.List garbageCollectorMXBeans;
    private static final java.util.List memoryManagerMXBeans;
    private static final java.util.List memoryPoolMXBeans;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;
        java.lang.management.ClassLoadingMXBean $r1;
        java.lang.management.CompilationMXBean $r2;
        java.lang.management.OperatingSystemMXBean $r3;
        java.lang.management.RuntimeMXBean $r4;
        java.lang.management.ThreadMXBean $r5;
        java.util.logging.LoggingMXBean $r6;
        java.lang.management.MemoryMXBean $r7;
        java.util.List $r8, $r9, $r10;

        $r0 = new java.text.SimpleDateFormat;
        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss.SSS");
        <org.apache.tomcat.util.Diagnostics: java.text.SimpleDateFormat timeformat> = $r0;
        $r1 = staticinvoke <java.lang.management.ManagementFactory: java.lang.management.ClassLoadingMXBean getClassLoadingMXBean()>();
        <org.apache.tomcat.util.Diagnostics: java.lang.management.ClassLoadingMXBean classLoadingMXBean> = $r1;
        $r2 = staticinvoke <java.lang.management.ManagementFactory: java.lang.management.CompilationMXBean getCompilationMXBean()>();
        <org.apache.tomcat.util.Diagnostics: java.lang.management.CompilationMXBean compilationMXBean> = $r2;
        $r3 = staticinvoke <java.lang.management.ManagementFactory: java.lang.management.OperatingSystemMXBean getOperatingSystemMXBean()>();
        <org.apache.tomcat.util.Diagnostics: java.lang.management.OperatingSystemMXBean operatingSystemMXBean> = $r3;
        $r4 = staticinvoke <java.lang.management.ManagementFactory: java.lang.management.RuntimeMXBean getRuntimeMXBean()>();
        <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean> = $r4;
        $r5 = staticinvoke <java.lang.management.ManagementFactory: java.lang.management.ThreadMXBean getThreadMXBean()>();
        <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean> = $r5;
        $r6 = staticinvoke <java.util.logging.LogManager: java.util.logging.LoggingMXBean getLoggingMXBean()>();
        <org.apache.tomcat.util.Diagnostics: java.util.logging.LoggingMXBean loggingMXBean> = $r6;
        $r7 = staticinvoke <java.lang.management.ManagementFactory: java.lang.management.MemoryMXBean getMemoryMXBean()>();
        <org.apache.tomcat.util.Diagnostics: java.lang.management.MemoryMXBean memoryMXBean> = $r7;
        $r8 = staticinvoke <java.lang.management.ManagementFactory: java.util.List getGarbageCollectorMXBeans()>();
        <org.apache.tomcat.util.Diagnostics: java.util.List garbageCollectorMXBeans> = $r8;
        $r9 = staticinvoke <java.lang.management.ManagementFactory: java.util.List getMemoryManagerMXBeans()>();
        <org.apache.tomcat.util.Diagnostics: java.util.List memoryManagerMXBeans> = $r9;
        $r10 = staticinvoke <java.lang.management.ManagementFactory: java.util.List getMemoryPoolMXBeans()>();
        <org.apache.tomcat.util.Diagnostics: java.util.List memoryPoolMXBeans> = $r10;
        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.Diagnostics r0;

        r0 := @this: org.apache.tomcat.util.Diagnostics;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static java.lang.String getThreadDumpHeader(java.lang.management.ThreadInfo)
    {
        java.lang.management.ThreadInfo r0;
        java.lang.StringBuilder $r1, $r2, r3, $r5, $r6, $r8, $r9, $r12, $r14, $r15, $r18, $r20, $r21, $r24, $r25, $r26, $r27, $r28, $r31, $r32, $r33, $r34, $r35, $r41, $r43;
        java.lang.String $r4, $r7, $r10, $r16, $r22, $r29, $r36, $r44, $r47;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8;
        java.lang.management.ThreadMXBean $r13, $r19;
        boolean $z0, $z1;
        java.lang.Thread$State $r42;

        r0 := @parameter0: java.lang.management.ThreadInfo;
        $r1 = new java.lang.StringBuilder;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("\"");
        $r4 = virtualinvoke r0.<java.lang.management.ThreadInfo: java.lang.String getThreadName()>();
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);
        r3 = $r1;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(" Id=");
        $l0 = virtualinvoke r0.<java.lang.management.ThreadInfo: long getThreadId()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(" cpu=");
        $r13 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $l1 = virtualinvoke r0.<java.lang.management.ThreadInfo: long getThreadId()>();
        $l2 = interfaceinvoke $r13.<java.lang.management.ThreadMXBean: long getThreadCpuTime(long)>($l1);
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ns");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>(" usr=");
        $r19 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $l3 = virtualinvoke r0.<java.lang.management.ThreadInfo: long getThreadId()>();
        $l4 = interfaceinvoke $r19.<java.lang.management.ThreadMXBean: long getThreadUserTime(long)>($l3);
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ns");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>(" blocked ");
        $l5 = virtualinvoke r0.<java.lang.management.ThreadInfo: long getBlockedCount()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");
        $l6 = virtualinvoke r0.<java.lang.management.ThreadInfo: long getBlockedTime()>();
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>(" waited ");
        $l7 = virtualinvoke r0.<java.lang.management.ThreadInfo: long getWaitedCount()>();
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");
        $l8 = virtualinvoke r0.<java.lang.management.ThreadInfo: long getWaitedTime()>();
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
        $z0 = virtualinvoke r0.<java.lang.management.ThreadInfo: boolean isSuspended()>();
        if $z0 == 0 goto label0;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (suspended)");

     label0:
        $z1 = virtualinvoke r0.<java.lang.management.ThreadInfo: boolean isInNative()>();
        if $z1 == 0 goto label1;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (running in native)");

     label1:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r41 = new java.lang.StringBuilder;
        specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>("   java.lang.Thread.State: ");
        $r42 = virtualinvoke r0.<java.lang.management.ThreadInfo: java.lang.Thread$State getThreadState()>();
        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r47 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r47;
    }

    private static java.lang.String getThreadDump(java.lang.management.ThreadInfo)
    {
        java.lang.management.ThreadInfo r0;
        java.lang.StringBuilder $r1, r2, $r9, $r11, $r12, $r20, $r22, $r23, $r27, $r29, $r30, $r34, $r36, $r37, $r38, $r44, $r46, $r47, $r48, $r49, $r50, $r53;
        java.lang.management.LockInfo[] r3, $r8;
        int i0, i1, i2, $i3, $i4, $i5, i6, $i8, $i9;
        java.lang.management.LockInfo r4;
        java.lang.StackTraceElement r5, $r51;
        java.lang.management.MonitorInfo r6, $r18, $r19;
        java.lang.String $r7, $r10, $r13, $r21, $r24, $r26, $r28, $r31, $r33, $r35, $r39, $r45, $r52, $r54, $r57;
        boolean z0;
        java.lang.StackTraceElement[] r15;
        java.lang.Object[] r16;
        java.lang.management.MonitorInfo[] r17;
        long $l7;
        java.lang.Object $r42, $r43;

        r0 := @parameter0: java.lang.management.ThreadInfo;
        $r1 = new java.lang.StringBuilder;
        $r7 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String getThreadDumpHeader(java.lang.management.ThreadInfo)>(r0);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);
        r2 = $r1;
        $r8 = virtualinvoke r0.<java.lang.management.ThreadInfo: java.lang.management.LockInfo[] getLockedSynchronizers()>();
        r3 = $r8;
        i0 = lengthof $r8;
        i1 = 0;
        goto label1;

     label0:
        r4 = r3[i1];
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("\tlocks ");
        $r10 = virtualinvoke r4.<java.lang.management.LockInfo: java.lang.String toString()>();
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        i1 = i1 + 1;

     label1:
        if i1 < i0 goto label0;

        z0 = 1;
        r15 = virtualinvoke r0.<java.lang.management.ThreadInfo: java.lang.StackTraceElement[] getStackTrace()>();
        $i3 = lengthof r15;
        r16 = newarray (java.lang.Object)[$i3];
        r17 = virtualinvoke r0.<java.lang.management.ThreadInfo: java.lang.management.MonitorInfo[] getLockedMonitors()>();
        i2 = 0;
        goto label3;

     label2:
        $r18 = r17[i2];
        $i4 = virtualinvoke $r18.<java.lang.management.MonitorInfo: int getLockedStackDepth()>();
        $r19 = r17[i2];
        r16[$i4] = $r19;
        i2 = i2 + 1;

     label3:
        $i5 = lengthof r17;
        if i2 < $i5 goto label2;

        i6 = 0;
        goto label9;

     label4:
        r5 = r15[i6];
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("\tat ");
        $r21 = virtualinvoke r5.<java.lang.StackTraceElement: java.lang.String toString()>();
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        if z0 == 0 goto label7;

        $r26 = virtualinvoke r0.<java.lang.management.ThreadInfo: java.lang.String getLockName()>();
        if $r26 == null goto label6;

        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t- waiting on (a ");
        $r28 = virtualinvoke r0.<java.lang.management.ThreadInfo: java.lang.String getLockName()>();
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = virtualinvoke r0.<java.lang.management.ThreadInfo: java.lang.String getLockOwnerName()>();
        if $r33 == null goto label5;

        $r34 = new java.lang.StringBuilder;
        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>(" owned by ");
        $r35 = virtualinvoke r0.<java.lang.management.ThreadInfo: java.lang.String getLockOwnerName()>();
        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Id=");
        $l7 = virtualinvoke r0.<java.lang.management.ThreadInfo: long getLockOwnerId()>();
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

     label6:
        z0 = 0;

     label7:
        $r42 = r16[i6];
        if $r42 == null goto label8;

        $r43 = r16[i6];
        r6 = (java.lang.management.MonitorInfo) $r43;
        $r44 = new java.lang.StringBuilder;
        specialinvoke $r44.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t- locked (a ");
        $r45 = virtualinvoke r6.<java.lang.management.MonitorInfo: java.lang.String toString()>();
        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" index ");
        $i8 = virtualinvoke r6.<java.lang.management.MonitorInfo: int getLockedStackDepth()>();
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" frame ");
        $r51 = virtualinvoke r6.<java.lang.management.MonitorInfo: java.lang.StackTraceElement getLockedStackFrame()>();
        $r52 = virtualinvoke $r51.<java.lang.StackTraceElement: java.lang.String toString()>();
        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

     label8:
        i6 = i6 + 1;

     label9:
        $i9 = lengthof r15;
        if i6 < $i9 goto label4;

        $r57 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r57;
    }

    private static java.lang.String getThreadDump(java.lang.management.ThreadInfo[])
    {
        java.lang.management.ThreadInfo[] r0, r3;
        java.lang.StringBuilder $r1, r2;
        int i0, i1;
        java.lang.management.ThreadInfo r4;
        java.lang.String $r6, $r9;

        r0 := @parameter0: java.lang.management.ThreadInfo[];
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        r3 = r0;
        i0 = lengthof r0;
        i1 = 0;
        goto label1;

     label0:
        r4 = r3[i1];
        $r6 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String getThreadDump(java.lang.management.ThreadInfo)>(r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        i1 = i1 + 1;

     label1:
        if i1 < i0 goto label0;

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r9;
    }

    private static java.lang.String findDeadlock()
    {
        null_type n0;
        long[] r0, $r5;
        java.lang.management.ThreadMXBean $r1, $r3, $r4;
        java.lang.StringBuilder r2, $r7;
        java.lang.management.ThreadInfo[] r6;
        java.lang.String $r9, $r11;

        n0 = null;
        $r3 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        r0 = interfaceinvoke $r3.<java.lang.management.ThreadMXBean: long[] findDeadlockedThreads()>();
        if r0 == null goto label0;

        $r4 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $r1 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $r5 = interfaceinvoke $r1.<java.lang.management.ThreadMXBean: long[] findDeadlockedThreads()>();
        r6 = interfaceinvoke $r4.<java.lang.management.ThreadMXBean: java.lang.management.ThreadInfo[] getThreadInfo(long[],boolean,boolean)>($r5, 1, 1);
        if r6 == null goto label0;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Deadlock found between the following threads:");
        r2 = $r7;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r9 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String getThreadDump(java.lang.management.ThreadInfo[])>(r6);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r11;

     label0:
        return "";
    }

    public static java.lang.String getThreadDump(java.util.Enumeration)
    {
        java.util.Enumeration r0;
        org.apache.tomcat.util.res.StringManager $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.util.Enumeration;
        $r1 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String,java.util.Enumeration)>("org.apache.tomcat.util", r0);
        $r2 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String getThreadDump(org.apache.tomcat.util.res.StringManager)>($r1);
        return $r2;
    }

    private static java.lang.String getThreadDump(org.apache.tomcat.util.res.StringManager)
    {
        org.apache.tomcat.util.res.StringManager r0;
        java.lang.StringBuilder $r1, r2, $r23, $r24;
        java.text.SimpleDateFormat r3, $r6, $r7;
        java.util.Date $r4;
        java.lang.management.ThreadInfo[] r5;
        java.lang.String $r8, $r12, $r16, $r20, r22, $r25, $r30, $r32, $r34;
        java.lang.Throwable $r10;
        java.lang.management.RuntimeMXBean $r15, $r19;
        java.lang.management.ThreadMXBean $r29;

        r0 := @parameter0: org.apache.tomcat.util.res.StringManager;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r6 = <org.apache.tomcat.util.Diagnostics: java.text.SimpleDateFormat timeformat>;
        r3 = $r6;
        entermonitor $r6;

     label0:
        $r7 = <org.apache.tomcat.util.Diagnostics: java.text.SimpleDateFormat timeformat>;
        $r4 = new java.util.Date;
        specialinvoke $r4.<java.util.Date: void <init>()>();
        $r8 = virtualinvoke $r7.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        exitmonitor r3;

     label1:
        goto label5;

     label2:
        $r10 := @caughtexception;

     label3:
        exitmonitor r3;

     label4:
        throw $r10;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r12 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.threadDumpTitle");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r15 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r16 = interfaceinvoke $r15.<java.lang.management.RuntimeMXBean: java.lang.String getVmName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");
        $r19 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r20 = interfaceinvoke $r19.<java.lang.management.RuntimeMXBean: java.lang.String getVmVersion()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        r22 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.info");
        if r22 == null goto label6;

        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label6:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):\r\n");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r29 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        r5 = interfaceinvoke $r29.<java.lang.management.ThreadMXBean: java.lang.management.ThreadInfo[] dumpAllThreads(boolean,boolean)>(1, 1);
        $r30 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String getThreadDump(java.lang.management.ThreadInfo[])>(r5);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String findDeadlock()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        $r34 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r34;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    private static java.lang.String formatMemoryUsage(java.lang.String, java.lang.management.MemoryUsage)
    {
        java.lang.String r0, $r9, $r16, $r23, $r30, $r32;
        java.lang.management.MemoryUsage r1;
        java.lang.StringBuilder r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28, $r29;
        long $l0, $l1, $l2, $l3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.management.MemoryUsage;
        if r1 == null goto label0;

        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        r2 = $r3;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("  ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" init: ");
        $l0 = virtualinvoke r1.<java.lang.management.MemoryUsage: long getInit()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("  ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" used: ");
        $l1 = virtualinvoke r1.<java.lang.management.MemoryUsage: long getUsed()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("  ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" committed: ");
        $l2 = virtualinvoke r1.<java.lang.management.MemoryUsage: long getCommitted()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("  ");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max: ");
        $l3 = virtualinvoke r1.<java.lang.management.MemoryUsage: long getMax()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r32;

     label0:
        return "";
    }

    public static java.lang.String getVMInfo(java.util.Enumeration)
    {
        java.util.Enumeration r0;
        org.apache.tomcat.util.res.StringManager $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.util.Enumeration;
        $r1 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String,java.util.Enumeration)>("org.apache.tomcat.util", r0);
        $r2 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String getVMInfo(org.apache.tomcat.util.res.StringManager)>($r1);
        return $r2;
    }

    private static java.lang.String getVMInfo(org.apache.tomcat.util.res.StringManager)
    {
        org.apache.tomcat.util.res.StringManager r0;
        java.lang.StringBuilder $r1, r2, $r18, $r21, $r22, $r25, $r28, $r29, $r32, $r35, $r36, $r39, $r42, $r43, $r46, $r49, $r50, $r53, $r56, $r57, $r60, $r63, $r64, $r67, $r70, $r71, $r74, $r76, $r77, $r80, $r82, $r83, $r86, $r88, $r89, $r96, $r99, $r100, $r103, $r106, $r107, $r110, $r113, $r114, $r117, $r119, $r120, $r123, $r125, $r126, $r133, $r135, $r136, $r139, $r141, $r142, $r145, $r147, $r148, $r151, $r153, $r154, $r157, $r159, $r160, $r163, $r165, $r166, $r169, $r171, $r172, $r179, $r181, $r182, $r185, $r187, $r188, $r191, $r193, $r194, $r197, $r199, $r200, $r211, $r212, $r213, $r220, $r223, $r224, $r227, $r230, $r231, $r234, $r237, $r238, $r245, $r247, $r248, $r251, $r253, $r254, $r257, $r259, $r260, $r263, $r265, $r266, $r273, $r276, $r277, $r280, $r282, $r283, $r286, $r288, $r289, $r302, $r303, $r304, $r309, $r310, $r311, $r324, $r325, $r326, $r334, $r335, $r336, $r339, $r340, $r341, $r344, $r345, $r346, $r353, $r355, $r356, $r359, $r361, $r362, $r383, $r384, $r385, $r388, $r390, $r391, $r399, $r400, $r401, $r404, $r405, $r406, $r409, $r410, $r411, $r416, $r417, $r418, $r421, $r422, $r423, $r428, $r429, $r430, $r435, $r436, $r437, $r442, $r443, $r444, $r449, $r450, $r451, $r477, $r478, $r479, $r482, $r483, $r495, $r496, $r497, $r500, $r501, $r504, $r505;
        java.text.SimpleDateFormat r3, $r9, $r10;
        java.util.Date $r4;
        java.util.Iterator r5, r294, r316, r375, r474, r492;
        java.lang.String[] r6, r7, r330, r332, r395, r397;
        int i0, i1, $i4, $i5, $i6, $i7, $i9, i13, i14, $i17, i18, i19;
        java.lang.String r8, $r11, $r15, $r20, $r23, $r27, $r30, $r34, $r37, $r41, $r44, $r48, $r51, $r55, $r58, $r62, $r65, $r69, $r72, $r78, $r84, $r90, $r93, $r98, $r101, $r105, $r108, $r112, $r115, $r121, $r127, $r130, $r137, $r143, $r149, $r155, $r161, $r167, $r173, $r176, $r183, $r189, $r195, $r201, $r204, r210, $r214, $r217, $r222, $r225, $r229, $r232, $r236, $r239, $r242, $r249, $r255, $r261, $r267, $r270, $r275, $r278, $r284, $r290, $r298, $r299, $r305, $r312, $r320, $r321, $r327, r333, $r337, $r342, $r347, $r350, $r357, $r363, $r367, $r371, $r379, $r380, $r386, $r392, r398, $r402, $r407, $r412, $r419, $r424, $r431, $r438, $r445, $r452, $r457, $r460, $r463, $r466, r476, $r481, $r484, $r487, r494, $r499, $r503, $r506, $r509;
        java.lang.Throwable $r13;
        java.lang.management.RuntimeMXBean $r19, $r26, $r33, $r40, $r47, $r54, $r61, $r68, $r75, $r81, $r87, $r207, $r221, $r228, $r235, $r469;
        long $l2, $l3, $l8, $l10, $l11, $l12, $l15, $l16, $l20, $l21, $l22, $l23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        java.lang.management.OperatingSystemMXBean $r97, $r104, $r111, $r118, $r124;
        double $d0;
        java.lang.management.ThreadMXBean $r134, $r140, $r146, $r152, $r158, $r164, $r170, $r180, $r186, $r192, $r198;
        java.util.List $r208, $r293, $r315, $r374, r491;
        java.lang.Object $r209, $r295, $r317, $r376, $r475, $r480, $r493;
        java.lang.management.ClassLoadingMXBean $r246, $r252, $r258, $r264;
        java.lang.management.CompilationMXBean $r274, $r281, $r287;
        java.lang.management.MemoryManagerMXBean r296;
        java.lang.Object[] $r297, $r319, $r378;
        java.lang.management.GarbageCollectorMXBean r318;
        java.lang.management.MemoryMXBean $r354, $r360, $r365, $r369;
        java.lang.management.MemoryUsage $r366, $r370, $r456, $r459, $r462;
        java.lang.management.MemoryPoolMXBean r377;
        java.lang.management.MemoryType $r389;
        java.lang.UnsupportedOperationException $r414, r415, $r426, r427, $r433, r434, $r440, r441, $r447, r448, $r454, r455;
        java.util.Map r470;
        java.util.ArrayList $r471, r473;
        java.util.Set $r472;
        java.util.logging.LoggingMXBean $r490, $r498, $r502;

        r0 := @parameter0: org.apache.tomcat.util.res.StringManager;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r9 = <org.apache.tomcat.util.Diagnostics: java.text.SimpleDateFormat timeformat>;
        r3 = $r9;
        entermonitor $r9;

     label0:
        $r10 = <org.apache.tomcat.util.Diagnostics: java.text.SimpleDateFormat timeformat>;
        $r4 = new java.util.Date;
        specialinvoke $r4.<java.util.Date: void <init>()>();
        $r11 = virtualinvoke $r10.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        exitmonitor r3;

     label1:
        goto label5;

     label2:
        $r13 := @caughtexception;

     label3:
        exitmonitor r3;

     label4:
        throw $r13;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r15 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoRuntime");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("  vmName: ");
        $r19 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r20 = interfaceinvoke $r19.<java.lang.management.RuntimeMXBean: java.lang.String getVmName()>();
        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("  vmVersion: ");
        $r26 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r27 = interfaceinvoke $r26.<java.lang.management.RuntimeMXBean: java.lang.String getVmVersion()>();
        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("  vmVendor: ");
        $r33 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r34 = interfaceinvoke $r33.<java.lang.management.RuntimeMXBean: java.lang.String getVmVendor()>();
        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
        $r39 = new java.lang.StringBuilder;
        specialinvoke $r39.<java.lang.StringBuilder: void <init>(java.lang.String)>("  specName: ");
        $r40 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r41 = interfaceinvoke $r40.<java.lang.management.RuntimeMXBean: java.lang.String getSpecName()>();
        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>("  specVersion: ");
        $r47 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r48 = interfaceinvoke $r47.<java.lang.management.RuntimeMXBean: java.lang.String getSpecVersion()>();
        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);
        $r53 = new java.lang.StringBuilder;
        specialinvoke $r53.<java.lang.StringBuilder: void <init>(java.lang.String)>("  specVendor: ");
        $r54 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r55 = interfaceinvoke $r54.<java.lang.management.RuntimeMXBean: java.lang.String getSpecVendor()>();
        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);
        $r60 = new java.lang.StringBuilder;
        specialinvoke $r60.<java.lang.StringBuilder: void <init>(java.lang.String)>("  managementSpecVersion: ");
        $r61 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r62 = interfaceinvoke $r61.<java.lang.management.RuntimeMXBean: java.lang.String getManagementSpecVersion()>();
        $r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);
        $r67 = new java.lang.StringBuilder;
        specialinvoke $r67.<java.lang.StringBuilder: void <init>(java.lang.String)>("  name: ");
        $r68 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r69 = interfaceinvoke $r68.<java.lang.management.RuntimeMXBean: java.lang.String getName()>();
        $r70 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);
        $r74 = new java.lang.StringBuilder;
        specialinvoke $r74.<java.lang.StringBuilder: void <init>(java.lang.String)>("  startTime: ");
        $r75 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $l2 = interfaceinvoke $r75.<java.lang.management.RuntimeMXBean: long getStartTime()>();
        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);
        $r80 = new java.lang.StringBuilder;
        specialinvoke $r80.<java.lang.StringBuilder: void <init>(java.lang.String)>("  uptime: ");
        $r81 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $l3 = interfaceinvoke $r81.<java.lang.management.RuntimeMXBean: long getUptime()>();
        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);
        $r86 = new java.lang.StringBuilder;
        specialinvoke $r86.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isBootClassPathSupported: ");
        $r87 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $z0 = interfaceinvoke $r87.<java.lang.management.RuntimeMXBean: boolean isBootClassPathSupported()>();
        $r88 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r93 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoOs");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r96 = new java.lang.StringBuilder;
        specialinvoke $r96.<java.lang.StringBuilder: void <init>(java.lang.String)>("  name: ");
        $r97 = <org.apache.tomcat.util.Diagnostics: java.lang.management.OperatingSystemMXBean operatingSystemMXBean>;
        $r98 = interfaceinvoke $r97.<java.lang.management.OperatingSystemMXBean: java.lang.String getName()>();
        $r99 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);
        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);
        $r103 = new java.lang.StringBuilder;
        specialinvoke $r103.<java.lang.StringBuilder: void <init>(java.lang.String)>("  version: ");
        $r104 = <org.apache.tomcat.util.Diagnostics: java.lang.management.OperatingSystemMXBean operatingSystemMXBean>;
        $r105 = interfaceinvoke $r104.<java.lang.management.OperatingSystemMXBean: java.lang.String getVersion()>();
        $r106 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);
        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);
        $r110 = new java.lang.StringBuilder;
        specialinvoke $r110.<java.lang.StringBuilder: void <init>(java.lang.String)>("  architecture: ");
        $r111 = <org.apache.tomcat.util.Diagnostics: java.lang.management.OperatingSystemMXBean operatingSystemMXBean>;
        $r112 = interfaceinvoke $r111.<java.lang.management.OperatingSystemMXBean: java.lang.String getArch()>();
        $r113 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);
        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);
        $r117 = new java.lang.StringBuilder;
        specialinvoke $r117.<java.lang.StringBuilder: void <init>(java.lang.String)>("  availableProcessors: ");
        $r118 = <org.apache.tomcat.util.Diagnostics: java.lang.management.OperatingSystemMXBean operatingSystemMXBean>;
        $i4 = interfaceinvoke $r118.<java.lang.management.OperatingSystemMXBean: int getAvailableProcessors()>();
        $r119 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);
        $r123 = new java.lang.StringBuilder;
        specialinvoke $r123.<java.lang.StringBuilder: void <init>(java.lang.String)>("  systemLoadAverage: ");
        $r124 = <org.apache.tomcat.util.Diagnostics: java.lang.management.OperatingSystemMXBean operatingSystemMXBean>;
        $d0 = interfaceinvoke $r124.<java.lang.management.OperatingSystemMXBean: double getSystemLoadAverage()>();
        $r125 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r127);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r130 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoThreadMxBean");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r130);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r133 = new java.lang.StringBuilder;
        specialinvoke $r133.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isCurrentThreadCpuTimeSupported: ");
        $r134 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $z1 = interfaceinvoke $r134.<java.lang.management.ThreadMXBean: boolean isCurrentThreadCpuTimeSupported()>();
        $r135 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r137);
        $r139 = new java.lang.StringBuilder;
        specialinvoke $r139.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isThreadCpuTimeSupported: ");
        $r140 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $z2 = interfaceinvoke $r140.<java.lang.management.ThreadMXBean: boolean isThreadCpuTimeSupported()>();
        $r141 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);
        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r143);
        $r145 = new java.lang.StringBuilder;
        specialinvoke $r145.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isThreadCpuTimeEnabled: ");
        $r146 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $z3 = interfaceinvoke $r146.<java.lang.management.ThreadMXBean: boolean isThreadCpuTimeEnabled()>();
        $r147 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);
        $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r149);
        $r151 = new java.lang.StringBuilder;
        specialinvoke $r151.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isObjectMonitorUsageSupported: ");
        $r152 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $z4 = interfaceinvoke $r152.<java.lang.management.ThreadMXBean: boolean isObjectMonitorUsageSupported()>();
        $r153 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);
        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r155);
        $r157 = new java.lang.StringBuilder;
        specialinvoke $r157.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isSynchronizerUsageSupported: ");
        $r158 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $z5 = interfaceinvoke $r158.<java.lang.management.ThreadMXBean: boolean isSynchronizerUsageSupported()>();
        $r159 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);
        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r161);
        $r163 = new java.lang.StringBuilder;
        specialinvoke $r163.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isThreadContentionMonitoringSupported: ");
        $r164 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $z6 = interfaceinvoke $r164.<java.lang.management.ThreadMXBean: boolean isThreadContentionMonitoringSupported()>();
        $r165 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);
        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r167);
        $r169 = new java.lang.StringBuilder;
        specialinvoke $r169.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isThreadContentionMonitoringEnabled: ");
        $r170 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $z7 = interfaceinvoke $r170.<java.lang.management.ThreadMXBean: boolean isThreadContentionMonitoringEnabled()>();
        $r171 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);
        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r173);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r176 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoThreadCounts");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r176);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r179 = new java.lang.StringBuilder;
        specialinvoke $r179.<java.lang.StringBuilder: void <init>(java.lang.String)>("  daemon: ");
        $r180 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $i5 = interfaceinvoke $r180.<java.lang.management.ThreadMXBean: int getDaemonThreadCount()>();
        $r181 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r183);
        $r185 = new java.lang.StringBuilder;
        specialinvoke $r185.<java.lang.StringBuilder: void <init>(java.lang.String)>("  total: ");
        $r186 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $i6 = interfaceinvoke $r186.<java.lang.management.ThreadMXBean: int getThreadCount()>();
        $r187 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
        $r188 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r189);
        $r191 = new java.lang.StringBuilder;
        specialinvoke $r191.<java.lang.StringBuilder: void <init>(java.lang.String)>("  peak: ");
        $r192 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $i7 = interfaceinvoke $r192.<java.lang.management.ThreadMXBean: int getPeakThreadCount()>();
        $r193 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
        $r194 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r195 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r195);
        $r197 = new java.lang.StringBuilder;
        specialinvoke $r197.<java.lang.StringBuilder: void <init>(java.lang.String)>("  totalStarted: ");
        $r198 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ThreadMXBean threadMXBean>;
        $l8 = interfaceinvoke $r198.<java.lang.management.ThreadMXBean: long getTotalStartedThreadCount()>();
        $r199 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);
        $r200 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r201);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r204 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoStartup");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r204);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r207 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r208 = interfaceinvoke $r207.<java.lang.management.RuntimeMXBean: java.util.List getInputArguments()>();
        r5 = interfaceinvoke $r208.<java.util.List: java.util.Iterator iterator()>();
        goto label7;

     label6:
        $r209 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r210 = (java.lang.String) $r209;
        $r211 = new java.lang.StringBuilder;
        specialinvoke $r211.<java.lang.StringBuilder: void <init>(java.lang.String)>("  ");
        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r210);
        $r213 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r214 = virtualinvoke $r213.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r214);

     label7:
        $z8 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z8 != 0 goto label6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r217 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoPath");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r217);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r220 = new java.lang.StringBuilder;
        specialinvoke $r220.<java.lang.StringBuilder: void <init>(java.lang.String)>("  bootClassPath: ");
        $r221 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r222 = interfaceinvoke $r221.<java.lang.management.RuntimeMXBean: java.lang.String getBootClassPath()>();
        $r223 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r222);
        $r224 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r225 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r225);
        $r227 = new java.lang.StringBuilder;
        specialinvoke $r227.<java.lang.StringBuilder: void <init>(java.lang.String)>("  classPath: ");
        $r228 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r229 = interfaceinvoke $r228.<java.lang.management.RuntimeMXBean: java.lang.String getClassPath()>();
        $r230 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r229);
        $r231 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r232 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r232);
        $r234 = new java.lang.StringBuilder;
        specialinvoke $r234.<java.lang.StringBuilder: void <init>(java.lang.String)>("  libraryPath: ");
        $r235 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        $r236 = interfaceinvoke $r235.<java.lang.management.RuntimeMXBean: java.lang.String getLibraryPath()>();
        $r237 = virtualinvoke $r234.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r236);
        $r238 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r239 = virtualinvoke $r238.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r239);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r242 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoClassLoading");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r242);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r245 = new java.lang.StringBuilder;
        specialinvoke $r245.<java.lang.StringBuilder: void <init>(java.lang.String)>("  loaded: ");
        $r246 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ClassLoadingMXBean classLoadingMXBean>;
        $i9 = interfaceinvoke $r246.<java.lang.management.ClassLoadingMXBean: int getLoadedClassCount()>();
        $r247 = virtualinvoke $r245.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);
        $r248 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r249 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r249);
        $r251 = new java.lang.StringBuilder;
        specialinvoke $r251.<java.lang.StringBuilder: void <init>(java.lang.String)>("  unloaded: ");
        $r252 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ClassLoadingMXBean classLoadingMXBean>;
        $l10 = interfaceinvoke $r252.<java.lang.management.ClassLoadingMXBean: long getUnloadedClassCount()>();
        $r253 = virtualinvoke $r251.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);
        $r254 = virtualinvoke $r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r255 = virtualinvoke $r254.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r255);
        $r257 = new java.lang.StringBuilder;
        specialinvoke $r257.<java.lang.StringBuilder: void <init>(java.lang.String)>("  totalLoaded: ");
        $r258 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ClassLoadingMXBean classLoadingMXBean>;
        $l11 = interfaceinvoke $r258.<java.lang.management.ClassLoadingMXBean: long getTotalLoadedClassCount()>();
        $r259 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);
        $r260 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r261 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r261);
        $r263 = new java.lang.StringBuilder;
        specialinvoke $r263.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isVerbose: ");
        $r264 = <org.apache.tomcat.util.Diagnostics: java.lang.management.ClassLoadingMXBean classLoadingMXBean>;
        $z9 = interfaceinvoke $r264.<java.lang.management.ClassLoadingMXBean: boolean isVerbose()>();
        $r265 = virtualinvoke $r263.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);
        $r266 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r267 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r267);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r270 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoClassCompilation");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r270);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r273 = new java.lang.StringBuilder;
        specialinvoke $r273.<java.lang.StringBuilder: void <init>(java.lang.String)>("  name: ");
        $r274 = <org.apache.tomcat.util.Diagnostics: java.lang.management.CompilationMXBean compilationMXBean>;
        $r275 = interfaceinvoke $r274.<java.lang.management.CompilationMXBean: java.lang.String getName()>();
        $r276 = virtualinvoke $r273.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r275);
        $r277 = virtualinvoke $r276.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r278 = virtualinvoke $r277.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r278);
        $r280 = new java.lang.StringBuilder;
        specialinvoke $r280.<java.lang.StringBuilder: void <init>(java.lang.String)>("  totalCompilationTime: ");
        $r281 = <org.apache.tomcat.util.Diagnostics: java.lang.management.CompilationMXBean compilationMXBean>;
        $l12 = interfaceinvoke $r281.<java.lang.management.CompilationMXBean: long getTotalCompilationTime()>();
        $r282 = virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);
        $r283 = virtualinvoke $r282.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r284 = virtualinvoke $r283.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r284);
        $r286 = new java.lang.StringBuilder;
        specialinvoke $r286.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isCompilationTimeMonitoringSupported: ");
        $r287 = <org.apache.tomcat.util.Diagnostics: java.lang.management.CompilationMXBean compilationMXBean>;
        $z10 = interfaceinvoke $r287.<java.lang.management.CompilationMXBean: boolean isCompilationTimeMonitoringSupported()>();
        $r288 = virtualinvoke $r286.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);
        $r289 = virtualinvoke $r288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r290 = virtualinvoke $r289.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r290);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r293 = <org.apache.tomcat.util.Diagnostics: java.util.List memoryManagerMXBeans>;
        r294 = interfaceinvoke $r293.<java.util.List: java.util.Iterator iterator()>();
        goto label11;

     label8:
        $r295 = interfaceinvoke r294.<java.util.Iterator: java.lang.Object next()>();
        r296 = (java.lang.management.MemoryManagerMXBean) $r295;
        $r297 = newarray (java.lang.Object)[1];
        $r298 = interfaceinvoke r296.<java.lang.management.MemoryManagerMXBean: java.lang.String getName()>();
        $r297[0] = $r298;
        $r299 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("diagnostics.vmInfoMemoryManagers", $r297);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r299);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r302 = new java.lang.StringBuilder;
        specialinvoke $r302.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isValid: ");
        $z11 = interfaceinvoke r296.<java.lang.management.MemoryManagerMXBean: boolean isValid()>();
        $r303 = virtualinvoke $r302.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);
        $r304 = virtualinvoke $r303.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r305 = virtualinvoke $r304.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r305);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mbean.getMemoryPoolNames: \r\n");
        r6 = interfaceinvoke r296.<java.lang.management.MemoryManagerMXBean: java.lang.String[] getMemoryPoolNames()>();
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r6);
        r7 = r6;
        i0 = lengthof r6;
        i1 = 0;
        goto label10;

     label9:
        r8 = r7[i1];
        $r309 = new java.lang.StringBuilder;
        specialinvoke $r309.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t");
        $r310 = virtualinvoke $r309.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r311 = virtualinvoke $r310.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r312 = virtualinvoke $r311.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r312);
        i1 = i1 + 1;

     label10:
        if i1 < i0 goto label9;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

     label11:
        $z12 = interfaceinvoke r294.<java.util.Iterator: boolean hasNext()>();
        if $z12 != 0 goto label8;

        $r315 = <org.apache.tomcat.util.Diagnostics: java.util.List garbageCollectorMXBeans>;
        r316 = interfaceinvoke $r315.<java.util.List: java.util.Iterator iterator()>();
        goto label15;

     label12:
        $r317 = interfaceinvoke r316.<java.util.Iterator: java.lang.Object next()>();
        r318 = (java.lang.management.GarbageCollectorMXBean) $r317;
        $r319 = newarray (java.lang.Object)[1];
        $r320 = interfaceinvoke r318.<java.lang.management.GarbageCollectorMXBean: java.lang.String getName()>();
        $r319[0] = $r320;
        $r321 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("diagnostics.vmInfoGarbageCollectors", $r319);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r321);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r324 = new java.lang.StringBuilder;
        specialinvoke $r324.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isValid: ");
        $z13 = interfaceinvoke r318.<java.lang.management.GarbageCollectorMXBean: boolean isValid()>();
        $r325 = virtualinvoke $r324.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);
        $r326 = virtualinvoke $r325.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r327 = virtualinvoke $r326.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r327);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mbean.getMemoryPoolNames: \r\n");
        r330 = interfaceinvoke r318.<java.lang.management.GarbageCollectorMXBean: java.lang.String[] getMemoryPoolNames()>();
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r330);
        r332 = r330;
        i13 = lengthof r330;
        i14 = 0;
        goto label14;

     label13:
        r333 = r332[i14];
        $r334 = new java.lang.StringBuilder;
        specialinvoke $r334.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t");
        $r335 = virtualinvoke $r334.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r333);
        $r336 = virtualinvoke $r335.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r337 = virtualinvoke $r336.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r337);
        i14 = i14 + 1;

     label14:
        if i14 < i13 goto label13;

        $r339 = new java.lang.StringBuilder;
        specialinvoke $r339.<java.lang.StringBuilder: void <init>(java.lang.String)>("  getCollectionCount: ");
        $l15 = interfaceinvoke r318.<java.lang.management.GarbageCollectorMXBean: long getCollectionCount()>();
        $r340 = virtualinvoke $r339.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);
        $r341 = virtualinvoke $r340.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r342 = virtualinvoke $r341.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r342);
        $r344 = new java.lang.StringBuilder;
        specialinvoke $r344.<java.lang.StringBuilder: void <init>(java.lang.String)>("  getCollectionTime: ");
        $l16 = interfaceinvoke r318.<java.lang.management.GarbageCollectorMXBean: long getCollectionTime()>();
        $r345 = virtualinvoke $r344.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);
        $r346 = virtualinvoke $r345.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r347 = virtualinvoke $r346.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r347);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

     label15:
        $z14 = interfaceinvoke r316.<java.util.Iterator: boolean hasNext()>();
        if $z14 != 0 goto label12;

        $r350 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoMemory");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r350);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r353 = new java.lang.StringBuilder;
        specialinvoke $r353.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isVerbose: ");
        $r354 = <org.apache.tomcat.util.Diagnostics: java.lang.management.MemoryMXBean memoryMXBean>;
        $z15 = interfaceinvoke $r354.<java.lang.management.MemoryMXBean: boolean isVerbose()>();
        $r355 = virtualinvoke $r353.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);
        $r356 = virtualinvoke $r355.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r357 = virtualinvoke $r356.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r357);
        $r359 = new java.lang.StringBuilder;
        specialinvoke $r359.<java.lang.StringBuilder: void <init>(java.lang.String)>("  getObjectPendingFinalizationCount: ");
        $r360 = <org.apache.tomcat.util.Diagnostics: java.lang.management.MemoryMXBean memoryMXBean>;
        $i17 = interfaceinvoke $r360.<java.lang.management.MemoryMXBean: int getObjectPendingFinalizationCount()>();
        $r361 = virtualinvoke $r359.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);
        $r362 = virtualinvoke $r361.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r363 = virtualinvoke $r362.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r363);
        $r365 = <org.apache.tomcat.util.Diagnostics: java.lang.management.MemoryMXBean memoryMXBean>;
        $r366 = interfaceinvoke $r365.<java.lang.management.MemoryMXBean: java.lang.management.MemoryUsage getHeapMemoryUsage()>();
        $r367 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String formatMemoryUsage(java.lang.String,java.lang.management.MemoryUsage)>("heap", $r366);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r367);
        $r369 = <org.apache.tomcat.util.Diagnostics: java.lang.management.MemoryMXBean memoryMXBean>;
        $r370 = interfaceinvoke $r369.<java.lang.management.MemoryMXBean: java.lang.management.MemoryUsage getNonHeapMemoryUsage()>();
        $r371 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String formatMemoryUsage(java.lang.String,java.lang.management.MemoryUsage)>("non-heap", $r370);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r371);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r374 = <org.apache.tomcat.util.Diagnostics: java.util.List memoryPoolMXBeans>;
        r375 = interfaceinvoke $r374.<java.util.List: java.util.Iterator iterator()>();
        goto label39;

     label16:
        $r376 = interfaceinvoke r375.<java.util.Iterator: java.lang.Object next()>();
        r377 = (java.lang.management.MemoryPoolMXBean) $r376;
        $r378 = newarray (java.lang.Object)[1];
        $r379 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: java.lang.String getName()>();
        $r378[0] = $r379;
        $r380 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("diagnostics.vmInfoMemoryPools", $r378);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r380);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r383 = new java.lang.StringBuilder;
        specialinvoke $r383.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isValid: ");
        $z16 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: boolean isValid()>();
        $r384 = virtualinvoke $r383.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z16);
        $r385 = virtualinvoke $r384.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r386 = virtualinvoke $r385.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r386);
        $r388 = new java.lang.StringBuilder;
        specialinvoke $r388.<java.lang.StringBuilder: void <init>(java.lang.String)>("  getType: ");
        $r389 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: java.lang.management.MemoryType getType()>();
        $r390 = virtualinvoke $r388.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r389);
        $r391 = virtualinvoke $r390.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r392 = virtualinvoke $r391.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r392);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mbean.getMemoryManagerNames: \r\n");
        r395 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: java.lang.String[] getMemoryManagerNames()>();
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r395);
        r397 = r395;
        i18 = lengthof r395;
        i19 = 0;
        goto label18;

     label17:
        r398 = r397[i19];
        $r399 = new java.lang.StringBuilder;
        specialinvoke $r399.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t");
        $r400 = virtualinvoke $r399.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r398);
        $r401 = virtualinvoke $r400.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r402 = virtualinvoke $r401.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r402);
        i19 = i19 + 1;

     label18:
        if i19 < i18 goto label17;

        $r404 = new java.lang.StringBuilder;
        specialinvoke $r404.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isUsageThresholdSupported: ");
        $z17 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: boolean isUsageThresholdSupported()>();
        $r405 = virtualinvoke $r404.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z17);
        $r406 = virtualinvoke $r405.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r407 = virtualinvoke $r406.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r407);

     label19:
        $r409 = new java.lang.StringBuilder;
        specialinvoke $r409.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isUsageThresholdExceeded: ");
        $z18 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: boolean isUsageThresholdExceeded()>();
        $r410 = virtualinvoke $r409.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z18);
        $r411 = virtualinvoke $r410.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r412 = virtualinvoke $r411.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r412);

     label20:
        goto label22;

     label21:
        $r414 := @caughtexception;
        r415 = $r414;

     label22:
        $r416 = new java.lang.StringBuilder;
        specialinvoke $r416.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isCollectionUsageThresholdSupported: ");
        $z19 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: boolean isCollectionUsageThresholdSupported()>();
        $r417 = virtualinvoke $r416.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z19);
        $r418 = virtualinvoke $r417.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r419 = virtualinvoke $r418.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r419);

     label23:
        $r421 = new java.lang.StringBuilder;
        specialinvoke $r421.<java.lang.StringBuilder: void <init>(java.lang.String)>("  isCollectionUsageThresholdExceeded: ");
        $z20 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: boolean isCollectionUsageThresholdExceeded()>();
        $r422 = virtualinvoke $r421.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z20);
        $r423 = virtualinvoke $r422.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r424 = virtualinvoke $r423.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r424);

     label24:
        goto label26;

     label25:
        $r426 := @caughtexception;
        r427 = $r426;

     label26:
        $r428 = new java.lang.StringBuilder;
        specialinvoke $r428.<java.lang.StringBuilder: void <init>(java.lang.String)>("  getUsageThreshold: ");
        $l20 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: long getUsageThreshold()>();
        $r429 = virtualinvoke $r428.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);
        $r430 = virtualinvoke $r429.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r431 = virtualinvoke $r430.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r431);

     label27:
        goto label29;

     label28:
        $r433 := @caughtexception;
        r434 = $r433;

     label29:
        $r435 = new java.lang.StringBuilder;
        specialinvoke $r435.<java.lang.StringBuilder: void <init>(java.lang.String)>("  getUsageThresholdCount: ");
        $l21 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: long getUsageThresholdCount()>();
        $r436 = virtualinvoke $r435.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l21);
        $r437 = virtualinvoke $r436.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r438 = virtualinvoke $r437.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r438);

     label30:
        goto label32;

     label31:
        $r440 := @caughtexception;
        r441 = $r440;

     label32:
        $r442 = new java.lang.StringBuilder;
        specialinvoke $r442.<java.lang.StringBuilder: void <init>(java.lang.String)>("  getCollectionUsageThreshold: ");
        $l22 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: long getCollectionUsageThreshold()>();
        $r443 = virtualinvoke $r442.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l22);
        $r444 = virtualinvoke $r443.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r445 = virtualinvoke $r444.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r445);

     label33:
        goto label35;

     label34:
        $r447 := @caughtexception;
        r448 = $r447;

     label35:
        $r449 = new java.lang.StringBuilder;
        specialinvoke $r449.<java.lang.StringBuilder: void <init>(java.lang.String)>("  getCollectionUsageThresholdCount: ");
        $l23 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: long getCollectionUsageThresholdCount()>();
        $r450 = virtualinvoke $r449.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l23);
        $r451 = virtualinvoke $r450.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r452 = virtualinvoke $r451.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r452);

     label36:
        goto label38;

     label37:
        $r454 := @caughtexception;
        r455 = $r454;

     label38:
        $r456 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: java.lang.management.MemoryUsage getUsage()>();
        $r457 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String formatMemoryUsage(java.lang.String,java.lang.management.MemoryUsage)>("current", $r456);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r457);
        $r459 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: java.lang.management.MemoryUsage getCollectionUsage()>();
        $r460 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String formatMemoryUsage(java.lang.String,java.lang.management.MemoryUsage)>("collection", $r459);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r460);
        $r462 = interfaceinvoke r377.<java.lang.management.MemoryPoolMXBean: java.lang.management.MemoryUsage getPeakUsage()>();
        $r463 = staticinvoke <org.apache.tomcat.util.Diagnostics: java.lang.String formatMemoryUsage(java.lang.String,java.lang.management.MemoryUsage)>("peak", $r462);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r463);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

     label39:
        $z21 = interfaceinvoke r375.<java.util.Iterator: boolean hasNext()>();
        if $z21 != 0 goto label16;

        $r466 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoSystem");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r466);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r469 = <org.apache.tomcat.util.Diagnostics: java.lang.management.RuntimeMXBean runtimeMXBean>;
        r470 = interfaceinvoke $r469.<java.lang.management.RuntimeMXBean: java.util.Map getSystemProperties()>();
        $r471 = new java.util.ArrayList;
        $r472 = interfaceinvoke r470.<java.util.Map: java.util.Set keySet()>();
        specialinvoke $r471.<java.util.ArrayList: void <init>(java.util.Collection)>($r472);
        r473 = $r471;
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r473);
        r474 = virtualinvoke r473.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label41;

     label40:
        $r475 = interfaceinvoke r474.<java.util.Iterator: java.lang.Object next()>();
        r476 = (java.lang.String) $r475;
        $r477 = new java.lang.StringBuilder;
        specialinvoke $r477.<java.lang.StringBuilder: void <init>(java.lang.String)>("  ");
        $r478 = virtualinvoke $r477.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r476);
        $r479 = virtualinvoke $r478.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r480 = interfaceinvoke r470.<java.util.Map: java.lang.Object get(java.lang.Object)>(r476);
        $r481 = (java.lang.String) $r480;
        $r482 = virtualinvoke $r479.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r481);
        $r483 = virtualinvoke $r482.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r484 = virtualinvoke $r483.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r484);

     label41:
        $z22 = interfaceinvoke r474.<java.util.Iterator: boolean hasNext()>();
        if $z22 != 0 goto label40;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r487 = virtualinvoke r0.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("diagnostics.vmInfoLogger");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r487);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\r\n");
        $r490 = <org.apache.tomcat.util.Diagnostics: java.util.logging.LoggingMXBean loggingMXBean>;
        r491 = interfaceinvoke $r490.<java.util.logging.LoggingMXBean: java.util.List getLoggerNames()>();
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r491);
        r492 = interfaceinvoke r491.<java.util.List: java.util.Iterator iterator()>();
        goto label43;

     label42:
        $r493 = interfaceinvoke r492.<java.util.Iterator: java.lang.Object next()>();
        r494 = (java.lang.String) $r493;
        $r495 = new java.lang.StringBuilder;
        specialinvoke $r495.<java.lang.StringBuilder: void <init>(java.lang.String)>("  ");
        $r496 = virtualinvoke $r495.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r494);
        $r497 = virtualinvoke $r496.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": level=");
        $r498 = <org.apache.tomcat.util.Diagnostics: java.util.logging.LoggingMXBean loggingMXBean>;
        $r499 = interfaceinvoke $r498.<java.util.logging.LoggingMXBean: java.lang.String getLoggerLevel(java.lang.String)>(r494);
        $r500 = virtualinvoke $r497.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r499);
        $r501 = virtualinvoke $r500.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", parent=");
        $r502 = <org.apache.tomcat.util.Diagnostics: java.util.logging.LoggingMXBean loggingMXBean>;
        $r503 = interfaceinvoke $r502.<java.util.logging.LoggingMXBean: java.lang.String getParentLoggerName(java.lang.String)>(r494);
        $r504 = virtualinvoke $r501.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r503);
        $r505 = virtualinvoke $r504.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r506 = virtualinvoke $r505.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r506);

     label43:
        $z23 = interfaceinvoke r492.<java.util.Iterator: boolean hasNext()>();
        if $z23 != 0 goto label42;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r509 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r509;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.UnsupportedOperationException from label19 to label20 with label21;
        catch java.lang.UnsupportedOperationException from label23 to label24 with label25;
        catch java.lang.UnsupportedOperationException from label26 to label27 with label28;
        catch java.lang.UnsupportedOperationException from label29 to label30 with label31;
        catch java.lang.UnsupportedOperationException from label32 to label33 with label34;
        catch java.lang.UnsupportedOperationException from label35 to label36 with label37;
    }
}
