class java.io.ObjectInputStream$HandleTable extends java.lang.Object
{
    private static final byte STATUS_OK;
    private static final byte STATUS_UNKNOWN;
    private static final byte STATUS_EXCEPTION;
    byte[] status;
    java.lang.Object[] entries;
    java.io.ObjectInputStream$HandleTable$HandleList[] deps;
    int lowDep;
    int size;

    void <init>(int)
    {
        java.io.ObjectInputStream$HandleTable r0;
        int i0;
        byte[] $r1;
        java.lang.Object[] $r2;
        java.io.ObjectInputStream$HandleTable$HandleList[] $r3;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.ObjectInputStream$HandleTable: int lowDep> = -1;
        r0.<java.io.ObjectInputStream$HandleTable: int size> = 0;
        $r1 = newarray (byte)[i0];
        r0.<java.io.ObjectInputStream$HandleTable: byte[] status> = $r1;
        $r2 = newarray (java.lang.Object)[i0];
        r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries> = $r2;
        $r3 = newarray (java.io.ObjectInputStream$HandleTable$HandleList)[i0];
        r0.<java.io.ObjectInputStream$HandleTable: java.io.ObjectInputStream$HandleTable$HandleList[] deps> = $r3;
        return;
    }

    int assign(java.lang.Object)
    {
        java.io.ObjectInputStream$HandleTable r0;
        java.lang.Object r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r2, $r4;
        byte[] $r3;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        r1 := @parameter0: java.lang.Object;
        $i0 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        $r2 = r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries>;
        $i1 = lengthof $r2;
        if $i0 < $i1 goto label0;

        specialinvoke r0.<java.io.ObjectInputStream$HandleTable: void grow()>();

     label0:
        $r3 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $i2 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        $r3[$i2] = 2;
        $r4 = r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries>;
        $i3 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        $r4[$i3] = r1;
        $i4 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        $i5 = $i4 + 1;
        r0.<java.io.ObjectInputStream$HandleTable: int size> = $i5;
        return $i4;
    }

    void markDependency(int, int)
    {
        java.io.ObjectInputStream$HandleTable r0;
        int i0, i1, $i4, $i5;
        byte[] $r1, $r2;
        byte $b2, $b3;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.ClassNotFoundException $r5;
        java.io.ObjectInputStream$HandleTable$HandleList[] $r6, $r8, $r10;
        java.io.ObjectInputStream$HandleTable$HandleList $r7, $r9, $r11;
        java.lang.InternalError $r12, $r13;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 == -1 goto label0;

        if i1 != -1 goto label1;

     label0:
        return;

     label1:
        $r1 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $b2 = $r1[i0];
        lookupswitch($b2)
        {
            case 2: goto label2;
            case 3: goto label9;
            default: goto label10;
        };

     label2:
        $r2 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $b3 = $r2[i1];
        tableswitch($b3)
        {
            case 1: goto label3;
            case 2: goto label5;
            case 3: goto label4;
            default: goto label8;
        };

     label3:
        goto label11;

     label4:
        $r3 = r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries>;
        $r4 = $r3[i1];
        $r5 = (java.lang.ClassNotFoundException) $r4;
        virtualinvoke r0.<java.io.ObjectInputStream$HandleTable: void markException(int,java.lang.ClassNotFoundException)>(i0, $r5);
        goto label11;

     label5:
        $r6 = r0.<java.io.ObjectInputStream$HandleTable: java.io.ObjectInputStream$HandleTable$HandleList[] deps>;
        $r7 = $r6[i1];
        if $r7 != null goto label6;

        $r8 = r0.<java.io.ObjectInputStream$HandleTable: java.io.ObjectInputStream$HandleTable$HandleList[] deps>;
        $r9 = new java.io.ObjectInputStream$HandleTable$HandleList;
        specialinvoke $r9.<java.io.ObjectInputStream$HandleTable$HandleList: void <init>()>();
        $r8[i1] = $r9;

     label6:
        $r10 = r0.<java.io.ObjectInputStream$HandleTable: java.io.ObjectInputStream$HandleTable$HandleList[] deps>;
        $r11 = $r10[i1];
        virtualinvoke $r11.<java.io.ObjectInputStream$HandleTable$HandleList: void add(int)>(i0);
        $i4 = r0.<java.io.ObjectInputStream$HandleTable: int lowDep>;
        if $i4 < 0 goto label7;

        $i5 = r0.<java.io.ObjectInputStream$HandleTable: int lowDep>;
        if $i5 <= i1 goto label11;

     label7:
        r0.<java.io.ObjectInputStream$HandleTable: int lowDep> = i1;
        goto label11;

     label8:
        $r12 = new java.lang.InternalError;
        specialinvoke $r12.<java.lang.InternalError: void <init>()>();
        throw $r12;

     label9:
        goto label11;

     label10:
        $r13 = new java.lang.InternalError;
        specialinvoke $r13.<java.lang.InternalError: void <init>()>();
        throw $r13;

     label11:
        return;
    }

    void markException(int, java.lang.ClassNotFoundException)
    {
        java.io.ObjectInputStream$HandleTable r0;
        int i0, i1, i2, $i4;
        java.lang.ClassNotFoundException r1;
        java.io.ObjectInputStream$HandleTable$HandleList r2;
        byte[] $r3, $r4;
        byte $b3;
        java.lang.Object[] $r5;
        java.io.ObjectInputStream$HandleTable$HandleList[] $r6, $r7;
        java.lang.InternalError $r8;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.ClassNotFoundException;
        $r3 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $b3 = $r3[i0];
        lookupswitch($b3)
        {
            case 2: goto label0;
            case 3: goto label3;
            default: goto label4;
        };

     label0:
        $r4 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $r4[i0] = 3;
        $r5 = r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries>;
        $r5[i0] = r1;
        $r6 = r0.<java.io.ObjectInputStream$HandleTable: java.io.ObjectInputStream$HandleTable$HandleList[] deps>;
        r2 = $r6[i0];
        if r2 == null goto label5;

        i1 = virtualinvoke r2.<java.io.ObjectInputStream$HandleTable$HandleList: int size()>();
        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $i4 = virtualinvoke r2.<java.io.ObjectInputStream$HandleTable$HandleList: int get(int)>(i2);
        virtualinvoke r0.<java.io.ObjectInputStream$HandleTable: void markException(int,java.lang.ClassNotFoundException)>($i4, r1);
        i2 = i2 + 1;
        goto label1;

     label2:
        $r7 = r0.<java.io.ObjectInputStream$HandleTable: java.io.ObjectInputStream$HandleTable$HandleList[] deps>;
        $r7[i0] = null;
        goto label5;

     label3:
        goto label5;

     label4:
        $r8 = new java.lang.InternalError;
        specialinvoke $r8.<java.lang.InternalError: void <init>()>();
        throw $r8;

     label5:
        return;
    }

    void finish(int)
    {
        java.io.ObjectInputStream$HandleTable r0;
        int i0, i1, i2, $i3, $i4;
        byte[] $r1, $r2;
        byte $b5;
        java.io.ObjectInputStream$HandleTable$HandleList[] $r3;
        java.lang.InternalError $r4;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        i0 := @parameter0: int;
        $i3 = r0.<java.io.ObjectInputStream$HandleTable: int lowDep>;
        if $i3 >= 0 goto label0;

        i1 = i0 + 1;
        goto label2;

     label0:
        $i4 = r0.<java.io.ObjectInputStream$HandleTable: int lowDep>;
        if $i4 < i0 goto label1;

        i1 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        r0.<java.io.ObjectInputStream$HandleTable: int lowDep> = -1;
        goto label2;

     label1:
        return;

     label2:
        i2 = i0;

     label3:
        if i2 >= i1 goto label8;

        $r1 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $b5 = $r1[i2];
        tableswitch($b5)
        {
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label4:
        $r2 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $r2[i2] = 1;
        $r3 = r0.<java.io.ObjectInputStream$HandleTable: java.io.ObjectInputStream$HandleTable$HandleList[] deps>;
        $r3[i2] = null;
        goto label7;

     label5:
        goto label7;

     label6:
        $r4 = new java.lang.InternalError;
        specialinvoke $r4.<java.lang.InternalError: void <init>()>();
        throw $r4;

     label7:
        i2 = i2 + 1;
        goto label3;

     label8:
        return;
    }

    void setObject(int, java.lang.Object)
    {
        java.io.ObjectInputStream$HandleTable r0;
        int i0;
        java.lang.Object r1;
        byte[] $r2;
        byte $b1;
        java.lang.Object[] $r3;
        java.lang.InternalError $r4;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        $r2 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $b1 = $r2[i0];
        tableswitch($b1)
        {
            case 1: goto label0;
            case 2: goto label0;
            case 3: goto label1;
            default: goto label2;
        };

     label0:
        $r3 = r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries>;
        $r3[i0] = r1;
        goto label3;

     label1:
        goto label3;

     label2:
        $r4 = new java.lang.InternalError;
        specialinvoke $r4.<java.lang.InternalError: void <init>()>();
        throw $r4;

     label3:
        return;
    }

    java.lang.Object lookupObject(int)
    {
        java.io.ObjectInputStream$HandleTable r0;
        int i0;
        byte[] $r1;
        byte $b1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        i0 := @parameter0: int;
        if i0 == -1 goto label0;

        $r1 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $b1 = $r1[i0];
        if $b1 == 3 goto label0;

        $r2 = r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries>;
        $r3 = $r2[i0];
        goto label1;

     label0:
        $r3 = null;

     label1:
        return $r3;
    }

    java.lang.ClassNotFoundException lookupException(int)
    {
        java.io.ObjectInputStream$HandleTable r0;
        int i0;
        byte[] $r1;
        byte $b1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        java.lang.ClassNotFoundException $r4;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        i0 := @parameter0: int;
        if i0 == -1 goto label0;

        $r1 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $b1 = $r1[i0];
        if $b1 != 3 goto label0;

        $r2 = r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries>;
        $r3 = $r2[i0];
        $r4 = (java.lang.ClassNotFoundException) $r3;
        goto label1;

     label0:
        $r4 = null;

     label1:
        return $r4;
    }

    void clear()
    {
        java.io.ObjectInputStream$HandleTable r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        java.lang.Object[] $r2;
        java.io.ObjectInputStream$HandleTable$HandleList[] $r3;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        $r1 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $i0 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r1, 0, $i0, 0);
        $r2 = r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries>;
        $i1 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>($r2, 0, $i1, null);
        $r3 = r0.<java.io.ObjectInputStream$HandleTable: java.io.ObjectInputStream$HandleTable$HandleList[] deps>;
        $i2 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>($r3, 0, $i2, null);
        r0.<java.io.ObjectInputStream$HandleTable: int lowDep> = -1;
        r0.<java.io.ObjectInputStream$HandleTable: int size> = 0;
        return;
    }

    int size()
    {
        java.io.ObjectInputStream$HandleTable r0;
        int $i0;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        $i0 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        return $i0;
    }

    private void grow()
    {
        java.io.ObjectInputStream$HandleTable r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        byte[] r1, $r5;
        java.lang.Object[] r2, $r4, $r6;
        java.io.ObjectInputStream$HandleTable$HandleList[] r3, $r7;

        r0 := @this: java.io.ObjectInputStream$HandleTable;
        $r4 = r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries>;
        $i1 = lengthof $r4;
        $i2 = $i1 << 1;
        i0 = $i2 + 1;
        r1 = newarray (byte)[i0];
        r2 = newarray (java.lang.Object)[i0];
        r3 = newarray (java.io.ObjectInputStream$HandleTable$HandleList)[i0];
        $r5 = r0.<java.io.ObjectInputStream$HandleTable: byte[] status>;
        $i3 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r1, 0, $i3);
        $r6 = r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries>;
        $i4 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r2, 0, $i4);
        $r7 = r0.<java.io.ObjectInputStream$HandleTable: java.io.ObjectInputStream$HandleTable$HandleList[] deps>;
        $i5 = r0.<java.io.ObjectInputStream$HandleTable: int size>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r3, 0, $i5);
        r0.<java.io.ObjectInputStream$HandleTable: byte[] status> = r1;
        r0.<java.io.ObjectInputStream$HandleTable: java.lang.Object[] entries> = r2;
        r0.<java.io.ObjectInputStream$HandleTable: java.io.ObjectInputStream$HandleTable$HandleList[] deps> = r3;
        return;
    }
}
