class javax.security.auth.Subject$SecureSet extends java.util.AbstractSet implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    javax.security.auth.Subject subject;
    java.util.LinkedList elements;
    private int which;

    void <init>(javax.security.auth.Subject, int)
    {
        javax.security.auth.Subject$SecureSet r0;
        javax.security.auth.Subject r1;
        int i0;
        java.util.LinkedList $r2;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 := @parameter0: javax.security.auth.Subject;
        i0 := @parameter1: int;
        specialinvoke r0.<java.util.AbstractSet: void <init>()>();
        r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.Subject subject> = r1;
        r0.<javax.security.auth.Subject$SecureSet: int which> = i0;
        $r2 = new java.util.LinkedList;
        specialinvoke $r2.<java.util.LinkedList: void <init>()>();
        r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements> = $r2;
        return;
    }

    void <init>(javax.security.auth.Subject, int, java.util.Set)
    {
        javax.security.auth.Subject$SecureSet r0;
        javax.security.auth.Subject r1;
        int i0;
        java.util.Set r2;
        java.util.LinkedList $r3;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 := @parameter0: javax.security.auth.Subject;
        i0 := @parameter1: int;
        r2 := @parameter2: java.util.Set;
        specialinvoke r0.<java.util.AbstractSet: void <init>()>();
        r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.Subject subject> = r1;
        r0.<javax.security.auth.Subject$SecureSet: int which> = i0;
        $r3 = new java.util.LinkedList;
        specialinvoke $r3.<java.util.LinkedList: void <init>(java.util.Collection)>(r2);
        r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements> = $r3;
        return;
    }

    public int size()
    {
        javax.security.auth.Subject$SecureSet r0;
        java.util.LinkedList $r1;
        int $i0;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        $r1 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;
        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();
        return $i0;
    }

    public java.util.Iterator iterator()
    {
        javax.security.auth.Subject$SecureSet r0;
        java.util.LinkedList r1;
        javax.security.auth.Subject$SecureSet$1 $r2;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;
        $r2 = new javax.security.auth.Subject$SecureSet$1;
        specialinvoke $r2.<javax.security.auth.Subject$SecureSet$1: void <init>(javax.security.auth.Subject$SecureSet,java.util.LinkedList)>(r0, r1);
        return $r2;
    }

    public boolean add(java.lang.Object)
    {
        javax.security.auth.Subject$SecureSet r0;
        java.lang.Object r1;
        java.lang.SecurityManager r2;
        javax.security.auth.Subject $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5, $r10;
        int $i0, $i1;
        javax.security.auth.AuthPermission $r6, $r7, $r8;
        java.lang.SecurityException $r9;
        java.util.LinkedList $r11, $r12;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 := @parameter0: java.lang.Object;
        $r3 = r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.Subject subject>;
        $z0 = virtualinvoke $r3.<javax.security.auth.Subject: boolean isReadOnly()>();
        if $z0 == 0 goto label0;

        $r4 = new java.lang.IllegalStateException;
        $r5 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("Subject.is.read.only");
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);
        throw $r4;

     label0:
        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r2 == null goto label4;

        $i0 = r0.<javax.security.auth.Subject$SecureSet: int which>;
        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r6 = <javax.security.auth.Subject$AuthPermissionHolder: javax.security.auth.AuthPermission MODIFY_PRINCIPALS_PERMISSION>;
        virtualinvoke r2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r6);
        goto label4;

     label2:
        $r7 = <javax.security.auth.Subject$AuthPermissionHolder: javax.security.auth.AuthPermission MODIFY_PUBLIC_CREDENTIALS_PERMISSION>;
        virtualinvoke r2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r7);
        goto label4;

     label3:
        $r8 = <javax.security.auth.Subject$AuthPermissionHolder: javax.security.auth.AuthPermission MODIFY_PRIVATE_CREDENTIALS_PERMISSION>;
        virtualinvoke r2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r8);

     label4:
        $i1 = r0.<javax.security.auth.Subject$SecureSet: int which>;
        lookupswitch($i1)
        {
            case 1: goto label5;
            default: goto label6;
        };

     label5:
        $z1 = r1 instanceof java.security.Principal;
        if $z1 != 0 goto label6;

        $r9 = new java.lang.SecurityException;
        $r10 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("attempting.to.add.an.object.which.is.not.an.instance.of.java.security.Principal.to.a.Subject.s.Principal.Set");
        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);
        throw $r9;

     label6:
        $r11 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;
        $z2 = virtualinvoke $r11.<java.util.LinkedList: boolean contains(java.lang.Object)>(r1);
        if $z2 != 0 goto label7;

        $r12 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;
        $z3 = virtualinvoke $r12.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);
        return $z3;

     label7:
        return 0;
    }

    public boolean remove(java.lang.Object)
    {
        javax.security.auth.Subject$SecureSet r0;
        java.lang.Object r1, r3;
        java.util.Iterator r2;
        boolean $z0, $z1;
        int $i0;
        javax.security.auth.Subject$SecureSet$2 $r4;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 := @parameter0: java.lang.Object;
        r2 = virtualinvoke r0.<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        $i0 = r0.<javax.security.auth.Subject$SecureSet: int which>;
        if $i0 == 3 goto label1;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        goto label2;

     label1:
        $r4 = new javax.security.auth.Subject$SecureSet$2;
        specialinvoke $r4.<javax.security.auth.Subject$SecureSet$2: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>(r0, r2);
        r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r4);

     label2:
        if r3 != null goto label3;

        if r1 != null goto label4;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        return 1;

     label3:
        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label4;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        return 1;

     label4:
        goto label0;

     label5:
        return 0;
    }

    public boolean contains(java.lang.Object)
    {
        javax.security.auth.Subject$SecureSet r0;
        java.lang.Object r1, r3;
        java.util.Iterator r2;
        java.lang.SecurityManager r4;
        boolean $z0, $z1;
        int $i0;
        javax.security.auth.PrivateCredentialPermission $r5;
        java.lang.Class $r6;
        java.lang.String $r7;
        javax.security.auth.Subject $r8;
        java.util.Set $r9;
        javax.security.auth.Subject$SecureSet$3 $r10;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 := @parameter0: java.lang.Object;
        r2 = virtualinvoke r0.<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label6;

        $i0 = r0.<javax.security.auth.Subject$SecureSet: int which>;
        if $i0 == 3 goto label1;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        goto label3;

     label1:
        r4 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r4 == null goto label2;

        $r5 = new javax.security.auth.PrivateCredentialPermission;
        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();
        $r8 = r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.Subject subject>;
        $r9 = virtualinvoke $r8.<javax.security.auth.Subject: java.util.Set getPrincipals()>();
        specialinvoke $r5.<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>($r7, $r9);
        virtualinvoke r4.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r5);

     label2:
        $r10 = new javax.security.auth.Subject$SecureSet$3;
        specialinvoke $r10.<javax.security.auth.Subject$SecureSet$3: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>(r0, r2);
        r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r10);

     label3:
        if r3 != null goto label4;

        if r1 != null goto label5;

        return 1;

     label4:
        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label5;

        return 1;

     label5:
        goto label0;

     label6:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        javax.security.auth.Subject$SecureSet r0;
        java.util.Collection r1;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r2, r4;
        java.lang.Object r3, r5;
        int $i0;
        javax.security.auth.Subject$SecureSet$4 $r6;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 := @parameter0: java.util.Collection;
        z0 = 0;
        r2 = virtualinvoke r0.<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label7;

        $i0 = r0.<javax.security.auth.Subject$SecureSet: int which>;
        if $i0 == 3 goto label1;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        goto label2;

     label1:
        $r6 = new javax.security.auth.Subject$SecureSet$4;
        specialinvoke $r6.<javax.security.auth.Subject$SecureSet$4: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>(r0, r2);
        r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r6);

     label2:
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label6;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        if r3 != null goto label4;

        if r5 != null goto label5;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        z0 = 1;
        goto label6;

     label4:
        $z3 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r5);
        if $z3 == 0 goto label5;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        z0 = 1;
        goto label6;

     label5:
        goto label3;

     label6:
        goto label0;

     label7:
        return z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        javax.security.auth.Subject$SecureSet r0;
        java.util.Collection r1;
        boolean z0, z1, $z2, z3, $z4, $z5, z6;
        java.util.Iterator r2, r4;
        java.lang.Object r3, r5;
        int $i0;
        javax.security.auth.Subject$SecureSet$5 $r6;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 := @parameter0: java.util.Collection;
        z0 = 0;
        z1 = 0;
        r2 = virtualinvoke r0.<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>();

     label0:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label8;

        z3 = 0;
        $i0 = r0.<javax.security.auth.Subject$SecureSet: int which>;
        if $i0 == 3 goto label1;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        goto label2;

     label1:
        $r6 = new javax.security.auth.Subject$SecureSet$5;
        specialinvoke $r6.<javax.security.auth.Subject$SecureSet$5: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>(r0, r2);
        r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r6);

     label2:
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z4 == 0 goto label6;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        if r3 != null goto label4;

        if r5 != null goto label5;

        z3 = 1;
        goto label6;

     label4:
        $z5 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r5);
        if $z5 == 0 goto label5;

        z3 = 1;
        goto label6;

     label5:
        goto label3;

     label6:
        if z3 != 0 goto label7;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        z6 = 0;
        z0 = 1;

     label7:
        goto label0;

     label8:
        return z0;
    }

    public void clear()
    {
        javax.security.auth.Subject$SecureSet r0;
        java.util.Iterator r1;
        boolean $z0;
        int $i0;
        javax.security.auth.Subject$SecureSet$6 $r3;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 = virtualinvoke r0.<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $i0 = r0.<javax.security.auth.Subject$SecureSet: int which>;
        if $i0 == 3 goto label1;

        interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        goto label2;

     label1:
        $r3 = new javax.security.auth.Subject$SecureSet$6;
        specialinvoke $r3.<javax.security.auth.Subject$SecureSet$6: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>(r0, r1);
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);

     label2:
        interfaceinvoke r1.<java.util.Iterator: void remove()>();
        goto label0;

     label3:
        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        javax.security.auth.Subject$SecureSet r0;
        java.io.ObjectOutputStream r1;
        java.util.Iterator r2;
        int $i0, $i1;
        boolean $z0;
        java.io.ObjectOutputStream$PutField r4;
        javax.security.auth.Subject $r5;
        java.util.LinkedList $r6;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 := @parameter0: java.io.ObjectOutputStream;
        $i0 = r0.<javax.security.auth.Subject$SecureSet: int which>;
        if $i0 != 3 goto label1;

        r2 = virtualinvoke r0.<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        goto label0;

     label1:
        r4 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();
        $r5 = r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.Subject subject>;
        virtualinvoke r4.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("this$0", $r5);
        $r6 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;
        virtualinvoke r4.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("elements", $r6);
        $i1 = r0.<javax.security.auth.Subject$SecureSet: int which>;
        virtualinvoke r4.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("which", $i1);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();
        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        javax.security.auth.Subject$SecureSet r0;
        java.io.ObjectInputStream r1;
        java.io.ObjectInputStream$GetField r2;
        java.util.LinkedList r3, $r8;
        java.lang.Object $r4, $r6;
        javax.security.auth.Subject $r5;
        int $i0;
        java.lang.Class $r7;

        r0 := @this: javax.security.auth.Subject$SecureSet;
        r1 := @parameter0: java.io.ObjectInputStream;
        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();
        $r4 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("this$0", null);
        $r5 = (javax.security.auth.Subject) $r4;
        r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.Subject subject> = $r5;
        $i0 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("which", 0);
        r0.<javax.security.auth.Subject$SecureSet: int which> = $i0;
        $r6 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("elements", null);
        r3 = (java.util.LinkedList) $r6;
        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        if $r7 == class "java/util/LinkedList" goto label0;

        $r8 = new java.util.LinkedList;
        specialinvoke $r8.<java.util.LinkedList: void <init>(java.util.Collection)>(r3);
        r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements> = $r8;
        goto label1;

     label0:
        r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements> = r3;

     label1:
        return;
    }

    static int access$000(javax.security.auth.Subject$SecureSet)
    {
        javax.security.auth.Subject$SecureSet r0;
        int $i0;

        r0 := @parameter0: javax.security.auth.Subject$SecureSet;
        $i0 = r0.<javax.security.auth.Subject$SecureSet: int which>;
        return $i0;
    }

    static void <clinit>()
    {
        java.io.ObjectStreamField $r0, $r2, $r3;
        java.io.ObjectStreamField[] $r1;
        java.lang.Class $r4;

        $r1 = newarray (java.io.ObjectStreamField)[3];
        $r0 = new java.io.ObjectStreamField;
        specialinvoke $r0.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("this$0", class "javax/security/auth/Subject");
        $r1[0] = $r0;
        $r2 = new java.io.ObjectStreamField;
        specialinvoke $r2.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("elements", class "java/util/LinkedList");
        $r1[1] = $r2;
        $r3 = new java.io.ObjectStreamField;
        $r4 = <java.lang.Integer: java.lang.Class TYPE>;
        specialinvoke $r3.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("which", $r4);
        $r1[2] = $r3;
        <javax.security.auth.Subject$SecureSet: java.io.ObjectStreamField[] serialPersistentFields> = $r1;
        return;
    }
}
