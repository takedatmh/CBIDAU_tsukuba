class org.apache.tomcat.util.compat.Jre9Compat extends org.apache.tomcat.util.compat.Jre8Compat
{
    private static final org.apache.juli.logging.Log log;
    private static final org.apache.tomcat.util.res.StringManager sm;
    private static final java.lang.Class inaccessibleObjectExceptionClazz;
    private static final java.lang.reflect.Method setDefaultUseCachesMethod;
    private static final java.lang.reflect.Method bootMethod;
    private static final java.lang.reflect.Method configurationMethod;
    private static final java.lang.reflect.Method modulesMethod;
    private static final java.lang.reflect.Method referenceMethod;
    private static final java.lang.reflect.Method locationMethod;
    private static final java.lang.reflect.Method isPresentMethod;
    private static final java.lang.reflect.Method getMethod;
    private static final java.lang.reflect.Constructor jarFileConstructor;
    private static final java.lang.reflect.Method isMultiReleaseMethod;
    private static final java.lang.Object RUNTIME_VERSION;
    private static final int RUNTIME_MAJOR_VERSION;

    static void <clinit>()
    {
        java.lang.Class r0, r13, r14, r15, r16, r17, r18, $r23, $r26, $r28, $r36, $r38, $r39, $r40;
        java.lang.reflect.Method r1, r2, r3, r4, r5, r6, r7, r8, r10, r19, r20;
        java.lang.reflect.Constructor r9;
        java.lang.Object r11, r12;
        org.apache.juli.logging.Log $r21;
        org.apache.tomcat.util.res.StringManager $r22;
        java.lang.Class[] $r24, $r25, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r37, $r41;
        java.lang.Object[] $r42, $r43;
        java.lang.SecurityException $r44, r45;
        java.lang.NoSuchMethodException $r46, r47;
        java.lang.ClassNotFoundException $r48, r49;
        java.lang.IllegalArgumentException $r50, r51;
        java.lang.IllegalAccessException $r52, r53;
        java.lang.reflect.InvocationTargetException $r54, r55;
        java.lang.Integer $r56;
        int $i0;

        $r21 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/tomcat/util/compat/Jre9Compat");
        <org.apache.tomcat.util.compat.Jre9Compat: org.apache.juli.logging.Log log> = $r21;
        $r22 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.Class)>(class "org/apache/tomcat/util/compat/Jre9Compat");
        <org.apache.tomcat.util.compat.Jre9Compat: org.apache.tomcat.util.res.StringManager sm> = $r22;
        r0 = null;
        r1 = null;
        r2 = null;
        r3 = null;
        r4 = null;
        r5 = null;
        r6 = null;
        r7 = null;
        r8 = null;
        r9 = null;
        r10 = null;
        r11 = null;
        r12 = null;

     label0:
        r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.ModuleLayer");
        r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.module.Configuration");
        r15 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.module.ResolvedModule");
        r16 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.module.ModuleReference");
        r17 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.util.Optional");
        r18 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.Runtime$Version");
        $r23 = class "java/util/jar/JarFile";
        $r24 = newarray (java.lang.Class)[0];
        r19 = virtualinvoke $r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("runtimeVersion", $r24);
        $r25 = newarray (java.lang.Class)[0];
        r20 = virtualinvoke r18.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("major", $r25);
        r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.reflect.InaccessibleObjectException");
        $r26 = class "java/net/URLConnection";
        $r27 = newarray (java.lang.Class)[2];
        $r27[0] = class "java/lang/String";
        $r28 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r27[1] = $r28;
        r1 = virtualinvoke $r26.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setDefaultUseCaches", $r27);
        $r29 = newarray (java.lang.Class)[0];
        r2 = virtualinvoke r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("boot", $r29);
        $r30 = newarray (java.lang.Class)[0];
        r3 = virtualinvoke r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("configuration", $r30);
        $r31 = newarray (java.lang.Class)[0];
        r4 = virtualinvoke r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("modules", $r31);
        $r32 = newarray (java.lang.Class)[0];
        r5 = virtualinvoke r15.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("reference", $r32);
        $r33 = newarray (java.lang.Class)[0];
        r6 = virtualinvoke r16.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("location", $r33);
        $r34 = newarray (java.lang.Class)[0];
        r7 = virtualinvoke r17.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isPresent", $r34);
        $r35 = newarray (java.lang.Class)[0];
        r8 = virtualinvoke r17.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("get", $r35);
        $r36 = class "java/util/jar/JarFile";
        $r37 = newarray (java.lang.Class)[4];
        $r37[0] = class "java/io/File";
        $r38 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r37[1] = $r38;
        $r39 = <java.lang.Integer: java.lang.Class TYPE>;
        $r37[2] = $r39;
        $r37[3] = r18;
        r9 = virtualinvoke $r36.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r37);
        $r40 = class "java/util/jar/JarFile";
        $r41 = newarray (java.lang.Class)[0];
        r10 = virtualinvoke $r40.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isMultiRelease", $r41);
        $r42 = newarray (java.lang.Object)[0];
        r11 = virtualinvoke r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r42);
        $r43 = newarray (java.lang.Object)[0];
        r12 = virtualinvoke r20.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r11, $r43);

     label1:
        goto label8;

     label2:
        $r44 := @caughtexception;
        r45 = $r44;
        goto label8;

     label3:
        $r46 := @caughtexception;
        r47 = $r46;
        goto label8;

     label4:
        $r48 := @caughtexception;
        r49 = $r48;
        goto label8;

     label5:
        $r50 := @caughtexception;
        r51 = $r50;
        goto label8;

     label6:
        $r52 := @caughtexception;
        r53 = $r52;
        goto label8;

     label7:
        $r54 := @caughtexception;
        r55 = $r54;

     label8:
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.Class inaccessibleObjectExceptionClazz> = r0;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method setDefaultUseCachesMethod> = r1;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method bootMethod> = r2;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method configurationMethod> = r3;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method modulesMethod> = r4;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method referenceMethod> = r5;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method locationMethod> = r6;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method isPresentMethod> = r7;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method getMethod> = r8;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Constructor jarFileConstructor> = r9;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method isMultiReleaseMethod> = r10;
        <org.apache.tomcat.util.compat.Jre9Compat: java.lang.Object RUNTIME_VERSION> = r11;
        if r12 == null goto label9;

        $r56 = (java.lang.Integer) r12;
        $i0 = virtualinvoke $r56.<java.lang.Integer: int intValue()>();
        <org.apache.tomcat.util.compat.Jre9Compat: int RUNTIME_MAJOR_VERSION> = $i0;
        goto label10;

     label9:
        <org.apache.tomcat.util.compat.Jre9Compat: int RUNTIME_MAJOR_VERSION> = 8;

     label10:
        return;

        catch java.lang.SecurityException from label0 to label1 with label2;
        catch java.lang.NoSuchMethodException from label0 to label1 with label3;
        catch java.lang.ClassNotFoundException from label0 to label1 with label4;
        catch java.lang.IllegalArgumentException from label0 to label1 with label5;
        catch java.lang.IllegalAccessException from label0 to label1 with label6;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label7;
    }

    void <init>()
    {
        org.apache.tomcat.util.compat.Jre9Compat r0;

        r0 := @this: org.apache.tomcat.util.compat.Jre9Compat;
        specialinvoke r0.<org.apache.tomcat.util.compat.Jre8Compat: void <init>()>();
        return;
    }

    static boolean isSupported()
    {
        java.lang.Class $r0;

        $r0 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.Class inaccessibleObjectExceptionClazz>;
        if $r0 == null goto label0;

        return 1;

     label0:
        return 0;
    }

    public boolean isInstanceOfInaccessibleObjectException(java.lang.Throwable)
    {
        org.apache.tomcat.util.compat.Jre9Compat r0;
        java.lang.Throwable r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.compat.Jre9Compat;
        r1 := @parameter0: java.lang.Throwable;
        if r1 != null goto label0;

        return 0;

     label0:
        $r2 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.Class inaccessibleObjectExceptionClazz>;
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);
        return $z0;
    }

    public void disableCachingForJarUrlConnections() throws java.io.IOException
    {
        org.apache.tomcat.util.compat.Jre9Compat r0;
        java.lang.reflect.Method $r1;
        java.lang.IllegalAccessException r2, $r6;
        java.lang.Object[] $r3;
        java.lang.Boolean $r4;
        java.lang.UnsupportedOperationException $r7, $r10, $r13;
        java.lang.IllegalArgumentException $r8, r9;
        java.lang.reflect.InvocationTargetException $r11, r12;

        r0 := @this: org.apache.tomcat.util.compat.Jre9Compat;

     label0:
        $r1 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method setDefaultUseCachesMethod>;
        $r3 = newarray (java.lang.Object)[2];
        $r3[0] = "JAR";
        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;
        $r3[1] = $r4;
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

     label1:
        goto label5;

     label2:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = new java.lang.UnsupportedOperationException;
        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r2);
        throw $r7;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.UnsupportedOperationException;
        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r9);
        throw $r10;

     label4:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = new java.lang.UnsupportedOperationException;
        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r12);
        throw $r13;

     label5:
        return;

        catch java.lang.IllegalAccessException from label0 to label1 with label2;
        catch java.lang.IllegalArgumentException from label0 to label1 with label3;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label4;
    }

    public void addBootModulePath(java.util.Deque)
    {
        org.apache.tomcat.util.compat.Jre9Compat r0;
        java.util.Deque r1;
        java.lang.reflect.Method $r2, $r14, $r16, $r19, $r21, $r23, $r26;
        java.lang.Object r3, r4, r7, r8, r9, $r18, $r25, $r28;
        java.util.Set r5;
        java.util.Iterator r6;
        java.lang.Boolean r10;
        java.net.URI r11;
        java.net.URL r12;
        java.lang.Object[] $r13, $r15, $r17, $r20, $r22, $r24, $r27, $r33;
        boolean $z0, $z2;
        java.net.MalformedURLException $r29, r30;
        org.apache.juli.logging.Log $r31;
        org.apache.tomcat.util.res.StringManager $r32;
        java.lang.String $r34;
        java.lang.IllegalArgumentException $r35, r36;
        java.lang.UnsupportedOperationException $r37, $r40, $r43;
        java.lang.IllegalAccessException $r38, r39;
        java.lang.reflect.InvocationTargetException $r41, r42;

        r0 := @this: org.apache.tomcat.util.compat.Jre9Compat;
        r1 := @parameter0: java.util.Deque;

     label0:
        $r2 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method bootMethod>;
        $r13 = newarray (java.lang.Object)[0];
        r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);
        $r14 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method configurationMethod>;
        $r15 = newarray (java.lang.Object)[0];
        r4 = virtualinvoke $r14.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r15);
        $r16 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method modulesMethod>;
        $r17 = newarray (java.lang.Object)[0];
        $r18 = virtualinvoke $r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r17);
        r5 = (java.util.Set) $r18;
        r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();
        goto label5;

     label1:
        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        $r19 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method referenceMethod>;
        $r20 = newarray (java.lang.Object)[0];
        r8 = virtualinvoke $r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r7, $r20);
        $r21 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method locationMethod>;
        $r22 = newarray (java.lang.Object)[0];
        r9 = virtualinvoke $r21.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r8, $r22);
        $r23 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method isPresentMethod>;
        $r24 = newarray (java.lang.Object)[0];
        $r25 = virtualinvoke $r23.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r9, $r24);
        r10 = (java.lang.Boolean) $r25;
        $z0 = virtualinvoke r10.<java.lang.Boolean: boolean booleanValue()>();
        if $z0 == 0 goto label5;

        $r26 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method getMethod>;
        $r27 = newarray (java.lang.Object)[0];
        $r28 = virtualinvoke $r26.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r9, $r27);
        r11 = (java.net.URI) $r28;

     label2:
        r12 = virtualinvoke r11.<java.net.URI: java.net.URL toURL()>();
        interfaceinvoke r1.<java.util.Deque: boolean add(java.lang.Object)>(r12);

     label3:
        goto label5;

     label4:
        $r29 := @caughtexception;
        r30 = $r29;
        $r31 = <org.apache.tomcat.util.compat.Jre9Compat: org.apache.juli.logging.Log log>;
        $r32 = <org.apache.tomcat.util.compat.Jre9Compat: org.apache.tomcat.util.res.StringManager sm>;
        $r33 = newarray (java.lang.Object)[1];
        $r33[0] = r11;
        $r34 = virtualinvoke $r32.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jre9Compat.invalidModuleUri", $r33);
        interfaceinvoke $r31.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r34, r30);

     label5:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label1;

     label6:
        goto label10;

     label7:
        $r35 := @caughtexception;
        r36 = $r35;
        $r37 = new java.lang.UnsupportedOperationException;
        specialinvoke $r37.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r36);
        throw $r37;

     label8:
        $r38 := @caughtexception;
        r39 = $r38;
        $r40 = new java.lang.UnsupportedOperationException;
        specialinvoke $r40.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r39);
        throw $r40;

     label9:
        $r41 := @caughtexception;
        r42 = $r41;
        $r43 = new java.lang.UnsupportedOperationException;
        specialinvoke $r43.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r42);
        throw $r43;

     label10:
        return;

        catch java.net.MalformedURLException from label2 to label3 with label4;
        catch java.lang.IllegalArgumentException from label0 to label6 with label7;
        catch java.lang.IllegalAccessException from label0 to label6 with label8;
        catch java.lang.reflect.InvocationTargetException from label0 to label6 with label9;
    }

    public java.util.jar.JarFile jarFileNewInstance(java.io.File) throws java.io.IOException
    {
        org.apache.tomcat.util.compat.Jre9Compat r0;
        java.io.File r1;
        java.lang.reflect.Constructor $r2;
        java.lang.IllegalArgumentException r3, $r10;
        java.lang.Object[] $r4;
        java.lang.Boolean $r5;
        java.lang.Integer $r6;
        java.lang.Object $r7, $r8;
        java.util.jar.JarFile $r9;
        java.io.IOException $r11, $r14, $r17, $r20;
        java.lang.InstantiationException $r12, r13;
        java.lang.IllegalAccessException $r15, r16;
        java.lang.reflect.InvocationTargetException $r18, r19;

        r0 := @this: org.apache.tomcat.util.compat.Jre9Compat;
        r1 := @parameter0: java.io.File;

     label0:
        $r2 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Constructor jarFileConstructor>;
        $r4 = newarray (java.lang.Object)[4];
        $r4[0] = r1;
        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;
        $r4[1] = $r5;
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        $r4[2] = $r6;
        $r7 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.Object RUNTIME_VERSION>;
        $r4[3] = $r7;
        $r8 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);
        $r9 = (java.util.jar.JarFile) $r8;

     label1:
        return $r9;

     label2:
        $r10 := @caughtexception;
        r3 = $r10;
        $r11 = new java.io.IOException;
        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.Throwable)>(r3);
        throw $r11;

     label3:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new java.io.IOException;
        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.Throwable)>(r13);
        throw $r14;

     label4:
        $r15 := @caughtexception;
        r16 = $r15;
        $r17 = new java.io.IOException;
        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.Throwable)>(r16);
        throw $r17;

     label5:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = new java.io.IOException;
        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.Throwable)>(r19);
        throw $r20;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
        catch java.lang.InstantiationException from label0 to label1 with label3;
        catch java.lang.IllegalAccessException from label0 to label1 with label4;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label5;
    }

    public boolean jarFileIsMultiRelease(java.util.jar.JarFile)
    {
        org.apache.tomcat.util.compat.Jre9Compat r0;
        java.util.jar.JarFile r1;
        java.lang.reflect.Method $r2;
        java.lang.IllegalArgumentException r3, $r7;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        java.lang.IllegalAccessException $r8, r9;
        java.lang.reflect.InvocationTargetException $r10, r11;

        r0 := @this: org.apache.tomcat.util.compat.Jre9Compat;
        r1 := @parameter0: java.util.jar.JarFile;

     label0:
        $r2 = <org.apache.tomcat.util.compat.Jre9Compat: java.lang.reflect.Method isMultiReleaseMethod>;
        $r4 = newarray (java.lang.Object)[0];
        $r5 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r4);
        $r6 = (java.lang.Boolean) $r5;
        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

     label1:
        return $z0;

     label2:
        $r7 := @caughtexception;
        r3 = $r7;
        return 0;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        return 0;

     label4:
        $r10 := @caughtexception;
        r11 = $r10;
        return 0;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
        catch java.lang.IllegalAccessException from label0 to label1 with label3;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label4;
    }

    public int jarFileRuntimeMajorVersion()
    {
        org.apache.tomcat.util.compat.Jre9Compat r0;
        int $i0;

        r0 := @this: org.apache.tomcat.util.compat.Jre9Compat;
        $i0 = <org.apache.tomcat.util.compat.Jre9Compat: int RUNTIME_MAJOR_VERSION>;
        return $i0;
    }
}
