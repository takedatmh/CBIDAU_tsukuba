public class org.apache.tomcat.util.net.NioEndpoint$Poller extends java.lang.Object implements java.lang.Runnable
{
    protected java.nio.channels.Selector selector;
    protected java.util.concurrent.ConcurrentLinkedQueue events;
    protected volatile boolean close;
    protected long nextExpiration;
    protected java.util.concurrent.atomic.AtomicLong wakeupCounter;
    protected volatile int keyCount;
    final org.apache.tomcat.util.net.NioEndpoint this$0;
    private static int[] $SWITCH_TABLE$org$apache$tomcat$util$net$SendfileKeepAliveState;

    public void <init>(org.apache.tomcat.util.net.NioEndpoint) throws java.io.IOException
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        org.apache.tomcat.util.net.NioEndpoint r1;
        java.lang.Class r2, $r5;
        java.util.concurrent.ConcurrentLinkedQueue $r3;
        java.util.concurrent.atomic.AtomicLong $r4;
        java.nio.channels.Selector $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: org.apache.tomcat.util.net.NioEndpoint;
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new java.util.concurrent.ConcurrentLinkedQueue;
        specialinvoke $r3.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.util.concurrent.ConcurrentLinkedQueue events> = $r3;
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close> = 0;
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: long nextExpiration> = 0L;
        $r4 = new java.util.concurrent.atomic.AtomicLong;
        specialinvoke $r4.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.util.concurrent.atomic.AtomicLong wakeupCounter> = $r4;
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: int keyCount> = 0;
        $r5 = class "java/nio/channels/Selector";
        r2 = $r5;
        entermonitor $r5;

     label0:
        $r6 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector> = $r6;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r7 := @caughtexception;

     label3:
        exitmonitor r2;

     label4:
        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public int getKeyCount()
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        int $i0;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        $i0 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: int keyCount>;
        return $i0;
    }

    public java.nio.channels.Selector getSelector()
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        java.nio.channels.Selector $r1;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        $r1 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        return $r1;
    }

    org.apache.tomcat.util.net.NioEndpoint getEndpoint()
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        org.apache.tomcat.util.net.NioEndpoint $r1;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        $r1 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        return $r1;
    }

    protected void destroy()
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        java.nio.channels.Selector $r1;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close> = 1;
        $r1 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        virtualinvoke $r1.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();
        return;
    }

    public void addEvent(java.lang.Runnable)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        java.lang.Runnable r1;
        java.util.concurrent.ConcurrentLinkedQueue $r2;
        java.util.concurrent.atomic.AtomicLong $r3;
        long $l0;
        byte $b1;
        java.nio.channels.Selector $r4;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: java.lang.Runnable;
        $r2 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.util.concurrent.ConcurrentLinkedQueue events>;
        virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>(r1);
        $r3 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.util.concurrent.atomic.AtomicLong wakeupCounter>;
        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();
        $b1 = $l0 cmp 0L;
        if $b1 != 0 goto label0;

        $r4 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        virtualinvoke $r4.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();

     label0:
        return;
    }

    public void cometInterest(org.apache.tomcat.util.net.NioChannel)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        org.apache.tomcat.util.net.NioChannel r1;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r2;
        java.lang.Object $r3;
        int $i0, $i1, $i2;
        java.nio.channels.Selector $r4;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: org.apache.tomcat.util.net.NioChannel;
        $r3 = virtualinvoke r1.<org.apache.tomcat.util.net.NioChannel: java.lang.Object getAttachment()>();
        r2 = (org.apache.tomcat.util.net.NioEndpoint$KeyAttachment) $r3;
        $i0 = virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: int getCometOps()>();
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void add(org.apache.tomcat.util.net.NioChannel,int)>(r1, $i0);
        $i1 = virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: int getCometOps()>();
        $i2 = $i1 & 512;
        if $i2 != 512 goto label0;

        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: long nextExpiration> = 0L;
        $r4 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        virtualinvoke $r4.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();

     label0:
        return;
    }

    public void add(org.apache.tomcat.util.net.NioChannel)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        org.apache.tomcat.util.net.NioChannel r1;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: org.apache.tomcat.util.net.NioChannel;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void add(org.apache.tomcat.util.net.NioChannel,int)>(r1, 1);
        return;
    }

    public void add(org.apache.tomcat.util.net.NioChannel, int)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        org.apache.tomcat.util.net.NioChannel r1;
        int i0;
        org.apache.tomcat.util.net.NioEndpoint$PollerEvent r2, $r6;
        org.apache.tomcat.util.net.NioEndpoint $r3, $r7;
        java.util.concurrent.ConcurrentLinkedQueue $r4;
        java.lang.Object $r5;
        boolean $z0;
        org.apache.tomcat.util.net.SocketStatus $r8;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: org.apache.tomcat.util.net.NioChannel;
        i0 := @parameter1: int;
        $r3 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r4 = $r3.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue eventCache>;
        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();
        r2 = (org.apache.tomcat.util.net.NioEndpoint$PollerEvent) $r5;
        if r2 != null goto label0;

        $r6 = new org.apache.tomcat.util.net.NioEndpoint$PollerEvent;
        specialinvoke $r6.<org.apache.tomcat.util.net.NioEndpoint$PollerEvent: void <init>(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r1, null, i0);
        r2 = $r6;
        goto label1;

     label0:
        virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$PollerEvent: void reset(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r1, null, i0);

     label1:
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void addEvent(java.lang.Runnable)>(r2);
        $z0 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close>;
        if $z0 == 0 goto label2;

        $r7 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r8 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus STOP>;
        virtualinvoke $r7.<org.apache.tomcat.util.net.NioEndpoint: boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r8, 0);

     label2:
        return;
    }

    public boolean events()
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        boolean z0, $z1;
        null_type n0;
        int i0, i1;
        java.lang.Throwable r1, $r7;
        java.util.concurrent.ConcurrentLinkedQueue $r2, $r5, $r9;
        org.apache.tomcat.util.net.NioEndpoint$PollerEvent $r3, $r6;
        org.apache.tomcat.util.net.NioEndpoint $r4;
        org.apache.juli.logging.Log $r8;
        java.lang.Object $r10;
        java.lang.Runnable $r11, r12;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        z0 = 0;
        n0 = null;
        i0 = 0;
        $r2 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.util.concurrent.ConcurrentLinkedQueue events>;
        i1 = virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: int size()>();
        goto label5;

     label0:
        z0 = 1;

     label1:
        interfaceinvoke r12.<java.lang.Runnable: void run()>();
        $z1 = r12 instanceof org.apache.tomcat.util.net.NioEndpoint$PollerEvent;
        if $z1 == 0 goto label4;

        $r3 = (org.apache.tomcat.util.net.NioEndpoint$PollerEvent) r12;
        virtualinvoke $r3.<org.apache.tomcat.util.net.NioEndpoint$PollerEvent: void reset()>();
        $r4 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r5 = $r4.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue eventCache>;
        $r6 = (org.apache.tomcat.util.net.NioEndpoint$PollerEvent) r12;
        virtualinvoke $r5.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r1 = $r7;
        $r8 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("", r1);

     label4:
        i0 = i0 + 1;

     label5:
        if i0 >= i1 goto label6;

        $r9 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.util.concurrent.ConcurrentLinkedQueue events>;
        $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();
        $r11 = (java.lang.Runnable) $r10;
        r12 = $r11;
        if $r11 != null goto label0;

     label6:
        return z0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void register(org.apache.tomcat.util.net.NioChannel)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        org.apache.tomcat.util.net.NioChannel r1;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r2, r3, $r8;
        org.apache.tomcat.util.net.NioEndpoint$PollerEvent r4, $r16;
        org.apache.tomcat.util.net.NioEndpoint $r5, $r9, $r11, $r12, $r13;
        java.util.concurrent.ConcurrentLinkedQueue $r6, $r14;
        java.lang.Object $r7, $r15;
        org.apache.tomcat.util.net.SocketProperties $r10;
        int $i0, $i2;
        long $l1;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: org.apache.tomcat.util.net.NioChannel;
        virtualinvoke r1.<org.apache.tomcat.util.net.NioChannel: void setPoller(org.apache.tomcat.util.net.NioEndpoint$Poller)>(r0);
        $r5 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r6 = $r5.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue keyCache>;
        $r7 = virtualinvoke $r6.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();
        r2 = (org.apache.tomcat.util.net.NioEndpoint$KeyAttachment) $r7;
        if r2 == null goto label0;

        $r8 = r2;
        goto label1;

     label0:
        $r8 = new org.apache.tomcat.util.net.NioEndpoint$KeyAttachment;
        specialinvoke $r8.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void <init>(org.apache.tomcat.util.net.NioChannel)>(r1);

     label1:
        r3 = $r8;
        $r9 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r10 = virtualinvoke $r9.<org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.net.SocketProperties getSocketProperties()>();
        $i0 = virtualinvoke $r10.<org.apache.tomcat.util.net.SocketProperties: int getSoTimeout()>();
        $l1 = (long) $i0;
        virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void reset(org.apache.tomcat.util.net.NioEndpoint$Poller,org.apache.tomcat.util.net.NioChannel,long)>(r0, r1, $l1);
        $r11 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $i2 = virtualinvoke $r11.<org.apache.tomcat.util.net.NioEndpoint: int getMaxKeepAliveRequests()>();
        virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void setKeepAliveLeft(int)>($i2);
        $r12 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z0 = virtualinvoke $r12.<org.apache.tomcat.util.net.NioEndpoint: boolean isSSLEnabled()>();
        virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void setSecure(boolean)>($z0);
        $r13 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r14 = $r13.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.ConcurrentLinkedQueue eventCache>;
        $r15 = virtualinvoke $r14.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();
        r4 = (org.apache.tomcat.util.net.NioEndpoint$PollerEvent) $r15;
        virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: int interestOps(int)>(1);
        if r4 != null goto label2;

        $r16 = new org.apache.tomcat.util.net.NioEndpoint$PollerEvent;
        specialinvoke $r16.<org.apache.tomcat.util.net.NioEndpoint$PollerEvent: void <init>(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r1, r3, 256);
        r4 = $r16;
        goto label3;

     label2:
        virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$PollerEvent: void reset(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r1, r3, 256);

     label3:
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void addEvent(java.lang.Runnable)>(r4);
        return;
    }

    public org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey, org.apache.tomcat.util.net.SocketStatus, boolean)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        java.nio.channels.SelectionKey r1;
        org.apache.tomcat.util.net.SocketStatus r2, $r6;
        boolean z0, $z1, $z2, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r3;
        java.lang.Exception r4, $r20, $r27, r28, $r40, r41;
        java.lang.Object $r5, $r11, $r18;
        org.apache.tomcat.util.net.NioEndpoint $r7, $r9, $r12, $r14, $r42;
        org.apache.tomcat.util.net.NioChannel $r8, $r10, $r19;
        org.apache.tomcat.util.net.NioEndpoint$Handler $r13, $r15;
        java.nio.channels.SelectableChannel $r16, $r25, $r26;
        java.nio.channels.SocketChannel $r17;
        org.apache.juli.logging.Log $r21, $r22, $r29, $r30, $r45, $r46;
        org.apache.tomcat.util.res.StringManager $r23, $r31;
        java.lang.String $r24, $r32;
        org.apache.tomcat.util.net.NioEndpoint$SendfileData $r33, $r34, $r36, $r38;
        java.nio.channels.FileChannel $r35, $r37, $r39;
        java.lang.Throwable $r43, r44;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: java.nio.channels.SelectionKey;
        r2 := @parameter1: org.apache.tomcat.util.net.SocketStatus;
        z0 := @parameter2: boolean;
        r3 = null;

     label0:
        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r5 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attachment()>();
        r3 = (org.apache.tomcat.util.net.NioEndpoint$KeyAttachment) $r5;
        if r3 == null goto label5;

        $z1 = virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: boolean isComet()>();
        if $z1 == 0 goto label5;

        if r2 == null goto label5;

        virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void setComet(boolean)>(0);
        $r6 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus TIMEOUT>;
        if r2 != $r6 goto label4;

        $r7 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r8 = virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioChannel getChannel()>();
        $z2 = virtualinvoke $r7.<org.apache.tomcat.util.net.NioEndpoint: boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)>($r8, r2, 1);
        if $z2 == 0 goto label5;

     label3:
        return null;

     label4:
        $r9 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r10 = virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioChannel getChannel()>();
        virtualinvoke $r9.<org.apache.tomcat.util.net.NioEndpoint: boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)>($r10, r2, 0);

     label5:
        $r11 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>(null);
        r3 = (org.apache.tomcat.util.net.NioEndpoint$KeyAttachment) $r11;
        if r3 == null goto label6;

        $r12 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r13 = $r12.<org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.net.NioEndpoint$Handler handler>;
        interfaceinvoke $r13.<org.apache.tomcat.util.net.NioEndpoint$Handler: void release(org.apache.tomcat.util.net.SocketWrapper)>(r3);
        goto label7;

     label6:
        $r14 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r15 = $r14.<org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.net.NioEndpoint$Handler handler>;
        $r16 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();
        $r17 = (java.nio.channels.SocketChannel) $r16;
        interfaceinvoke $r15.<org.apache.tomcat.util.net.NioEndpoint$Handler: void release(java.nio.channels.SocketChannel)>($r17);

     label7:
        $z4 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isValid()>();
        if $z4 == 0 goto label8;

        virtualinvoke r1.<java.nio.channels.SelectionKey: void cancel()>();

     label8:
        if r3 == null goto label12;

     label9:
        $r18 = virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: java.lang.Object getSocket()>();
        $r19 = (org.apache.tomcat.util.net.NioChannel) $r18;
        virtualinvoke $r19.<org.apache.tomcat.util.net.NioChannel: void close(boolean)>(1);

     label10:
        goto label12;

     label11:
        $r20 := @caughtexception;
        r4 = $r20;
        $r21 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z5 = interfaceinvoke $r21.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label12;

        $r22 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r23 = <org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r24 = virtualinvoke $r23.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.debug.socketCloseFail");
        interfaceinvoke $r22.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r24, r4);

     label12:
        $r25 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();
        $z6 = virtualinvoke $r25.<java.nio.channels.SelectableChannel: boolean isOpen()>();
        if $z6 == 0 goto label16;

     label13:
        $r26 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();
        virtualinvoke $r26.<java.nio.channels.SelectableChannel: void close()>();

     label14:
        goto label16;

     label15:
        $r27 := @caughtexception;
        r28 = $r27;
        $r29 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z7 = interfaceinvoke $r29.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z7 == 0 goto label16;

        $r30 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r31 = <org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r32 = virtualinvoke $r31.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.debug.channelCloseFail");
        interfaceinvoke $r30.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r32, r28);

     label16:
        if r3 == null goto label19;

        $r33 = virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioEndpoint$SendfileData getSendfileData()>();
        if $r33 == null goto label19;

        $r34 = virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioEndpoint$SendfileData getSendfileData()>();
        $r35 = $r34.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.nio.channels.FileChannel fchannel>;
        if $r35 == null goto label19;

        $r36 = virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioEndpoint$SendfileData getSendfileData()>();
        $r37 = $r36.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.nio.channels.FileChannel fchannel>;
        $z8 = virtualinvoke $r37.<java.nio.channels.FileChannel: boolean isOpen()>();
        if $z8 == 0 goto label19;

        $r38 = virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioEndpoint$SendfileData getSendfileData()>();
        $r39 = $r38.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.nio.channels.FileChannel fchannel>;
        virtualinvoke $r39.<java.nio.channels.FileChannel: void close()>();

     label17:
        goto label19;

     label18:
        $r40 := @caughtexception;
        r41 = $r40;

     label19:
        if r3 == null goto label22;

        virtualinvoke r3.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void reset()>();
        $r42 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        virtualinvoke $r42.<org.apache.tomcat.util.net.NioEndpoint: long countDownConnection()>();

     label20:
        goto label22;

     label21:
        $r43 := @caughtexception;
        r44 = $r43;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r44);
        $r45 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z9 = interfaceinvoke $r45.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z9 == 0 goto label22;

        $r46 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r46.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("", r44);

     label22:
        return r3;

        catch java.lang.Exception from label9 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Throwable from label0 to label1 with label21;
        catch java.lang.Throwable from label2 to label3 with label21;
        catch java.lang.Throwable from label4 to label20 with label21;
    }

    public void run()
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        java.lang.InterruptedException r1, $r5;
        java.io.IOException r2, $r8, $r18, r19;
        java.nio.channels.SelectionKey r3;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r4;
        org.apache.tomcat.util.net.NioEndpoint $r6, $r15, $r44, $r45, $r47, $r50, $r51, $r58;
        boolean $z0, $z1, z2, $z3, z5, $z6, $z7, $z9, $z10, $z11, $z13;
        java.nio.channels.Selector $r7, $r13, $r14, $r17, $r28, $r34, $r38;
        org.apache.juli.logging.Log $r9, $r20, $r25, $r26, $r31, $r32, $r37, $r52;
        org.apache.tomcat.util.res.StringManager $r10, $r21;
        java.lang.String $r11, $r22;
        java.util.concurrent.atomic.AtomicLong $r12, $r16, $r27, $r33;
        long $l0, $l3;
        byte $b1;
        int $i2, $i4, $i5, $i6, $i7, $i8;
        java.lang.NullPointerException $r23, r24;
        java.nio.channels.CancelledKeyException $r29, r30;
        java.lang.Throwable $r35, r36, $r53, r54, $r56, r57;
        java.util.Set $r39;
        java.util.Iterator $r40, r41;
        java.lang.Object $r42, $r43;
        byte[] $r46;
        java.lang.OutOfMemoryError $r48, r49;
        java.io.PrintStream $r55;
        java.util.concurrent.CountDownLatch $r59;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;

     label0:
        goto label4;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r1 = $r5;

     label4:
        $r6 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z0 = $r6.<org.apache.tomcat.util.net.NioEndpoint: boolean paused>;
        if $z0 == 0 goto label5;

        $z1 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close>;
        if $z1 == 0 goto label1;

     label5:
        z2 = 0;
        $z3 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close>;
        if $z3 == 0 goto label10;

        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean events()>();
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void timeout(int,boolean)>(0, 0);

     label6:
        $r7 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        virtualinvoke $r7.<java.nio.channels.Selector: void close()>();

     label7:
        goto label45;

     label8:
        $r8 := @caughtexception;
        r2 = $r8;
        $r9 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r10 = <org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = virtualinvoke $r10.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.nio.selectorCloseFail");
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r11, r2);

     label9:
        goto label45;

     label10:
        z5 = virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean events()>();

     label11:
        $z6 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close>;
        if $z6 != 0 goto label14;

        $r12 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.util.concurrent.atomic.AtomicLong wakeupCounter>;
        $l0 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicLong: long getAndSet(long)>(-1L);
        $b1 = $l0 cmp 0L;
        if $b1 <= 0 goto label12;

        $r13 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        $i2 = virtualinvoke $r13.<java.nio.channels.Selector: int selectNow()>();
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: int keyCount> = $i2;
        goto label13;

     label12:
        $r14 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        $r15 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $l3 = $r15.<org.apache.tomcat.util.net.NioEndpoint: long selectorTimeout>;
        $i4 = virtualinvoke $r14.<java.nio.channels.Selector: int select(long)>($l3);
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: int keyCount> = $i4;

     label13:
        $r16 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.util.concurrent.atomic.AtomicLong wakeupCounter>;
        virtualinvoke $r16.<java.util.concurrent.atomic.AtomicLong: void set(long)>(0L);

     label14:
        $z7 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close>;
        if $z7 == 0 goto label28;

        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean events()>();
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void timeout(int,boolean)>(0, 0);

     label15:
        $r17 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        virtualinvoke $r17.<java.nio.channels.Selector: void close()>();

     label16:
        goto label45;

     label17:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r21 = <org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r22 = virtualinvoke $r21.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.nio.selectorCloseFail");
        interfaceinvoke $r20.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r22, r19);

     label18:
        goto label45;

     label19:
        $r23 := @caughtexception;

     label20:
        r24 = $r23;
        $r25 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z9 = interfaceinvoke $r25.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z9 == 0 goto label21;

        $r26 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r26.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Possibly encountered sun bug 5076772 on windows JDK 1.5", r24);

     label21:
        $r27 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.util.concurrent.atomic.AtomicLong wakeupCounter>;
        if $r27 == null goto label22;

        $r28 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        if $r28 != null goto label44;

     label22:
        throw r24;

     label23:
        $r29 := @caughtexception;
        r30 = $r29;
        $r31 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z10 = interfaceinvoke $r31.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z10 == 0 goto label24;

        $r32 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r32.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Possibly encountered sun bug 5076772 on windows JDK 1.5", r30);

     label24:
        $r33 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.util.concurrent.atomic.AtomicLong wakeupCounter>;
        if $r33 == null goto label25;

        $r34 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        if $r34 != null goto label44;

     label25:
        throw r30;

     label26:
        $r35 := @caughtexception;
        r36 = $r35;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r36);
        $r37 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r37.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("", r36);

     label27:
        goto label44;

     label28:
        $i5 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: int keyCount>;
        if $i5 != 0 goto label29;

        $z11 = virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean events()>();
        z5 = z5 | $z11;

     label29:
        $i6 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: int keyCount>;
        if $i6 <= 0 goto label30;

        $r38 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        $r39 = virtualinvoke $r38.<java.nio.channels.Selector: java.util.Set selectedKeys()>();
        $r40 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();
        goto label31;

     label30:
        $r40 = null;

     label31:
        r41 = $r40;
        goto label34;

     label32:
        $r42 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.nio.channels.SelectionKey) $r42;
        $r43 = virtualinvoke r3.<java.nio.channels.SelectionKey: java.lang.Object attachment()>();
        r4 = (org.apache.tomcat.util.net.NioEndpoint$KeyAttachment) $r43;
        if r4 != null goto label33;

        interfaceinvoke r41.<java.util.Iterator: void remove()>();
        goto label34;

     label33:
        virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void access()>();
        interfaceinvoke r41.<java.util.Iterator: void remove()>();
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)>(r3, r4);

     label34:
        if r41 == null goto label35;

        $z13 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();
        if $z13 != 0 goto label32;

     label35:
        $i7 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: int keyCount>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void timeout(int,boolean)>($i7, z5);
        $r44 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $i8 = $r44.<org.apache.tomcat.util.net.NioEndpoint: int oomParachute>;
        if $i8 <= 0 goto label44;

        $r45 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r46 = $r45.<org.apache.tomcat.util.net.NioEndpoint: byte[] oomParachuteData>;
        if $r46 != null goto label44;

        $r47 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        virtualinvoke $r47.<org.apache.tomcat.util.net.NioEndpoint: void checkParachute()>();

     label36:
        goto label44;

     label37:
        $r48 := @caughtexception;
        r49 = $r48;

     label38:
        $r50 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r50.<org.apache.tomcat.util.net.NioEndpoint: byte[] oomParachuteData> = null;
        $r51 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        virtualinvoke $r51.<org.apache.tomcat.util.net.NioEndpoint: void releaseCaches()>();
        $r52 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r52.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("", r49);

     label39:
        goto label44;

     label40:
        $r53 := @caughtexception;
        r54 = $r53;

     label41:
        $r55 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>("SEVERE:Memory usage is low, parachute is non existent, your system may start failing.");
        virtualinvoke r54.<java.lang.Throwable: void printStackTrace()>();

     label42:
        goto label44;

     label43:
        $r56 := @caughtexception;
        r57 = $r56;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r57);

     label44:
        goto label4;

     label45:
        $r58 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r59 = $r58.<org.apache.tomcat.util.net.NioEndpoint: java.util.concurrent.CountDownLatch stopLatch>;
        virtualinvoke $r59.<java.util.concurrent.CountDownLatch: void countDown()>();
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.io.IOException from label6 to label7 with label8;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.NullPointerException from label11 to label18 with label19;
        catch java.nio.channels.CancelledKeyException from label11 to label18 with label23;
        catch java.lang.Throwable from label11 to label18 with label26;
        catch java.lang.OutOfMemoryError from label0 to label9 with label37;
        catch java.lang.OutOfMemoryError from label10 to label18 with label37;
        catch java.lang.OutOfMemoryError from label20 to label27 with label37;
        catch java.lang.OutOfMemoryError from label28 to label36 with label37;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch java.lang.Throwable from label41 to label42 with label43;
    }

    protected boolean processKey(java.nio.channels.SelectionKey, org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        java.nio.channels.SelectionKey r1;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.apache.tomcat.util.net.SocketStatus $r3, $r11, $r13, $r14, $r16, $r20;
        org.apache.tomcat.util.net.NioChannel r4;
        org.apache.tomcat.util.net.NioEndpoint$SendfileData $r7;
        org.apache.tomcat.util.net.NioEndpoint $r9, $r10, $r12;
        int $i0;
        java.nio.channels.CancelledKeyException $r18, r19;
        java.lang.Throwable $r22, r23;
        org.apache.juli.logging.Log $r24;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: java.nio.channels.SelectionKey;
        r2 := @parameter1: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment;
        z0 = 1;

     label0:
        $z2 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close>;
        if $z2 == 0 goto label1;

        $r3 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus STOP>;
        $z3 = r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: boolean comet>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r3, $z3);
        goto label11;

     label1:
        $z4 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isValid()>();
        if $z4 == 0 goto label7;

        if r2 == null goto label7;

        virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void access()>();
        virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>(r2);
        r4 = virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioChannel getChannel()>();
        $z5 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isReadable()>();
        if $z5 != 0 goto label2;

        $z6 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isWritable()>();
        if $z6 == 0 goto label11;

     label2:
        $r7 = virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioEndpoint$SendfileData getSendfileData()>();
        if $r7 == null goto label3;

        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.SendfileState processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean)>(r1, r2, 0);
        goto label11;

     label3:
        $r9 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $z7 = virtualinvoke $r9.<org.apache.tomcat.util.net.NioEndpoint: boolean isWorkerAvailable()>();
        if $z7 == 0 goto label6;

        $i0 = virtualinvoke r1.<java.nio.channels.SelectionKey: int readyOps()>();
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void unreg(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r1, r2, $i0);
        z1 = 0;
        $z8 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isReadable()>();
        if $z8 == 0 goto label4;

        $r10 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r11 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus OPEN_READ>;
        $z9 = virtualinvoke $r10.<org.apache.tomcat.util.net.NioEndpoint: boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)>(r4, $r11, 1);
        if $z9 != 0 goto label4;

        z1 = 1;

     label4:
        if z1 != 0 goto label5;

        $z10 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isWritable()>();
        if $z10 == 0 goto label5;

        $r12 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r13 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus OPEN_WRITE>;
        $z11 = virtualinvoke $r12.<org.apache.tomcat.util.net.NioEndpoint: boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)>(r4, $r13, 1);
        if $z11 != 0 goto label5;

        z1 = 1;

     label5:
        if z1 == 0 goto label11;

        $r14 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus DISCONNECT>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r14, 0);
        goto label11;

     label6:
        z0 = 0;
        goto label11;

     label7:
        $r16 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus ERROR>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r16, 0);

     label8:
        goto label11;

     label9:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus ERROR>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r20, 0);
        goto label11;

     label10:
        $r22 := @caughtexception;
        r23 = $r22;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r23);
        $r24 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r24.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("", r23);

     label11:
        return z0;

        catch java.nio.channels.CancelledKeyException from label0 to label8 with label9;
        catch java.lang.Throwable from label0 to label8 with label10;
    }

    public org.apache.tomcat.util.net.SendfileState processSendfile(java.nio.channels.SelectionKey, org.apache.tomcat.util.net.NioEndpoint$KeyAttachment, boolean)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        java.nio.channels.SelectionKey r1;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        null_type n0;
        org.apache.tomcat.util.net.NioEndpoint$SendfileData r3;
        java.io.File r4, $r13;
        java.io.FileInputStream r5, $r15;
        int $i0, $i1, $i15, $i16, $i17;
        org.apache.juli.logging.Log $r6, $r7, $r25, $r26, $r36, $r37, $r40, $r41, $r46, $r47, $r49, $r50, $r59, $r60, $r66;
        java.lang.StringBuilder $r8, $r10, $r27, $r29, $r51, $r53;
        java.lang.String $r9, $r11, $r14, $r28, $r30, $r52, $r54;
        java.nio.channels.FileChannel $r12, $r16, $r20, $r23, $r31;
        org.apache.tomcat.util.net.NioChannel r17, $r55;
        java.nio.channels.ByteChannel $r18, r19;
        long $l2, $l3, l4, $l6, $l7, $l8, $l9, $l10, $l11, $l13;
        byte $b5, $b12, $b14;
        java.io.IOException $r24, $r57, r58;
        java.lang.Exception $r32, r33;
        int[] $r34;
        org.apache.tomcat.util.net.SendfileKeepAliveState $r35;
        org.apache.tomcat.util.net.SocketStatus $r38, $r43, $r44, $r61, $r67;
        org.apache.tomcat.util.net.NioEndpoint $r42;
        org.apache.tomcat.util.net.SendfileState $r48, $r56, $r63, $r69;
        java.lang.Throwable $r64, r65;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: java.nio.channels.SelectionKey;
        r2 := @parameter1: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment;
        z0 := @parameter2: boolean;
        n0 = null;

     label0:
        $i0 = virtualinvoke r1.<java.nio.channels.SelectionKey: int readyOps()>();
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void unreg(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r1, r2, $i0);
        r3 = virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioEndpoint$SendfileData getSendfileData()>();
        $r6 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z1 = interfaceinvoke $r6.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z1 == 0 goto label1;

        $r7 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Processing send file for: ");
        $r9 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.lang.String fileName>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r11);

     label1:
        $r12 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.nio.channels.FileChannel fchannel>;
        if $r12 != null goto label2;

        $r13 = new java.io.File;
        $r14 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.lang.String fileName>;
        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r14);
        r4 = $r13;
        $r15 = new java.io.FileInputStream;
        specialinvoke $r15.<java.io.FileInputStream: void <init>(java.io.File)>(r4);
        r5 = $r15;
        $r16 = virtualinvoke r5.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();
        r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.nio.channels.FileChannel fchannel> = $r16;

     label2:
        r17 = virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioChannel getChannel()>();
        $z2 = r17 instanceof org.apache.tomcat.util.net.SecureNioChannel;
        if $z2 == 0 goto label3;

        $r18 = r17;
        goto label4;

     label3:
        $r18 = virtualinvoke r17.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel getIOChannel()>();

     label4:
        r19 = $r18;
        $i1 = virtualinvoke r17.<org.apache.tomcat.util.net.NioChannel: int getOutboundRemaining()>();
        if $i1 <= 0 goto label5;

        $z3 = virtualinvoke r17.<org.apache.tomcat.util.net.NioChannel: boolean flushOutbound()>();
        if $z3 == 0 goto label7;

        virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void access()>();
        goto label7;

     label5:
        $r20 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.nio.channels.FileChannel fchannel>;
        $l2 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: long pos>;
        $l3 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: long length>;
        l4 = virtualinvoke $r20.<java.nio.channels.FileChannel: long transferTo(long,long,java.nio.channels.WritableByteChannel)>($l2, $l3, r19);
        $b5 = l4 cmp 0L;
        if $b5 <= 0 goto label6;

        $l6 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: long pos>;
        $l7 = $l6 + l4;
        r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: long pos> = $l7;
        $l8 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: long length>;
        $l9 = $l8 - l4;
        r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: long length> = $l9;
        virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void access()>();
        goto label7;

     label6:
        $r23 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.nio.channels.FileChannel fchannel>;
        $l10 = virtualinvoke $r23.<java.nio.channels.FileChannel: long size()>();
        $l11 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: long pos>;
        $b12 = $l10 cmp $l11;
        if $b12 > 0 goto label7;

        $r24 = new java.io.IOException;
        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("Sendfile configured to send more data than was available");
        throw $r24;

     label7:
        $l13 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: long length>;
        $b14 = $l13 cmp 0L;
        if $b14 > 0 goto label21;

        $i15 = virtualinvoke r17.<org.apache.tomcat.util.net.NioChannel: int getOutboundRemaining()>();
        if $i15 > 0 goto label21;

        $r25 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z4 = interfaceinvoke $r25.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label8;

        $r26 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Send file complete for: ");
        $r28 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.lang.String fileName>;
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r26.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r30);

     label8:
        virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void setSendfileData(org.apache.tomcat.util.net.NioEndpoint$SendfileData)>(null);

     label9:
        $r31 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.nio.channels.FileChannel fchannel>;
        virtualinvoke $r31.<java.nio.channels.FileChannel: void close()>();

     label10:
        goto label12;

     label11:
        $r32 := @caughtexception;
        r33 = $r32;

     label12:
        if z0 != 0 goto label19;

        $r34 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint$Poller: int[] $SWITCH_TABLE$org$apache$tomcat$util$net$SendfileKeepAliveState()>();
        $r35 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: org.apache.tomcat.util.net.SendfileKeepAliveState keepAliveState>;
        $i16 = virtualinvoke $r35.<org.apache.tomcat.util.net.SendfileKeepAliveState: int ordinal()>();
        $i17 = $r34[$i16];
        tableswitch($i17)
        {
            case 1: goto label13;
            case 2: goto label15;
            case 3: goto label17;
            default: goto label19;
        };

     label13:
        $r36 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z5 = interfaceinvoke $r36.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label14;

        $r37 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r37.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Send file connection is being closed");

     label14:
        $r38 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus STOP>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r38, 0);
        goto label19;

     label15:
        $r40 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z6 = interfaceinvoke $r40.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label16;

        $r41 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r41.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Connection is keep alive, processing pipe-lined data");

     label16:
        $r42 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r43 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus OPEN_READ>;
        $z7 = virtualinvoke $r42.<org.apache.tomcat.util.net.NioEndpoint: boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)>(r17, $r43, 1);
        if $z7 != 0 goto label19;

        $r44 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus DISCONNECT>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r44, 0);
        goto label19;

     label17:
        $r46 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z8 = interfaceinvoke $r46.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z8 == 0 goto label18;

        $r47 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r47.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("Connection is keep alive, registering back for OP_READ");

     label18:
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void reg(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r1, r2, 1);

     label19:
        $r48 = <org.apache.tomcat.util.net.SendfileState: org.apache.tomcat.util.net.SendfileState DONE>;

     label20:
        return $r48;

     label21:
        $r49 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z9 = interfaceinvoke $r49.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z9 == 0 goto label22;

        $r50 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r51 = new java.lang.StringBuilder;
        specialinvoke $r51.<java.lang.StringBuilder: void <init>(java.lang.String)>("OP_WRITE for sendfile: ");
        $r52 = r3.<org.apache.tomcat.util.net.NioEndpoint$SendfileData: java.lang.String fileName>;
        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r50.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r54);

     label22:
        if z0 == 0 goto label23;

        $r55 = virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioChannel getChannel()>();
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void add(org.apache.tomcat.util.net.NioChannel,int)>($r55, 4);
        goto label24;

     label23:
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void reg(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r1, r2, 4);

     label24:
        $r56 = <org.apache.tomcat.util.net.SendfileState: org.apache.tomcat.util.net.SendfileState PENDING>;

     label25:
        return $r56;

     label26:
        $r57 := @caughtexception;
        r58 = $r57;
        $r59 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z10 = interfaceinvoke $r59.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z10 == 0 goto label27;

        $r60 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r60.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Unable to complete sendfile request:", r58);

     label27:
        if z0 != 0 goto label28;

        $r61 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus ERROR>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r61, 0);

     label28:
        $r63 = <org.apache.tomcat.util.net.SendfileState: org.apache.tomcat.util.net.SendfileState ERROR>;
        return $r63;

     label29:
        $r64 := @caughtexception;
        r65 = $r64;
        $r66 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        interfaceinvoke $r66.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("", r65);
        if z0 != 0 goto label30;

        $r67 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus ERROR>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r1, $r67, 0);

     label30:
        $r69 = <org.apache.tomcat.util.net.SendfileState: org.apache.tomcat.util.net.SendfileState ERROR>;
        return $r69;

        catch java.lang.Exception from label9 to label10 with label11;
        catch java.io.IOException from label0 to label20 with label26;
        catch java.io.IOException from label21 to label25 with label26;
        catch java.lang.Throwable from label0 to label20 with label29;
        catch java.lang.Throwable from label21 to label25 with label29;
    }

    protected void unreg(java.nio.channels.SelectionKey, org.apache.tomcat.util.net.NioEndpoint$KeyAttachment, int)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        java.nio.channels.SelectionKey r1;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r2;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: java.nio.channels.SelectionKey;
        r2 := @parameter1: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment;
        i0 := @parameter2: int;
        $i1 = virtualinvoke r1.<java.nio.channels.SelectionKey: int interestOps()>();
        $i2 = i0 ^ -1;
        $i3 = $i1 & $i2;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void reg(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r1, r2, $i3);
        return;
    }

    protected void reg(java.nio.channels.SelectionKey, org.apache.tomcat.util.net.NioEndpoint$KeyAttachment, int)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        java.nio.channels.SelectionKey r1;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r2;
        int i0;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        r1 := @parameter0: java.nio.channels.SelectionKey;
        r2 := @parameter1: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment;
        i0 := @parameter2: int;
        virtualinvoke r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(i0);
        virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: int interestOps(int)>(i0);
        virtualinvoke r2.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void setCometOps(int)>(i0);
        return;
    }

    protected void timeout(int, boolean)
    {
        org.apache.tomcat.util.net.NioEndpoint$Poller r0;
        int i0, i2, $i7, $i8, $i9, $i10, $i23;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z11, $z12, $z13, $z15, $z16, z17, $z19, $z20, $z21, $z22;
        long l1, l3, l4, $l5, $l11, $l17, $l19, l20, $l21, $l24, l25, l27, $l28, $l29, $l30;
        java.util.Set r1;
        java.util.Iterator r2;
        java.nio.channels.SelectionKey r3;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r4;
        byte $b6, $b12, $b13, $b18, $b22, $b26, $b31;
        java.nio.channels.Selector $r5;
        java.lang.Object $r6, $r7;
        org.apache.tomcat.util.net.SocketStatus $r8, $r10, $r14, $r17, $r20, $r27, $r30;
        org.apache.tomcat.util.net.NioEndpoint $r12, $r15, $r23, $r25, $r37;
        org.apache.tomcat.util.net.NioChannel $r13, $r16, $r26;
        org.apache.tomcat.util.net.SocketProperties $r24, $r38;
        java.nio.channels.CancelledKeyException $r28, r29;
        java.util.ConcurrentModificationException $r32, r33;
        org.apache.juli.logging.Log $r34, $r39, $r40;
        org.apache.tomcat.util.res.StringManager $r35;
        java.lang.String $r36, $r53;
        java.lang.StringBuilder $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$Poller;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        if i0 > 0 goto label0;

        if z0 == 0 goto label1;

     label0:
        $l5 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: long nextExpiration>;
        $b6 = l1 cmp $l5;
        if $b6 >= 0 goto label1;

        $z2 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close>;
        if $z2 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: java.nio.channels.Selector selector>;
        r1 = virtualinvoke $r5.<java.nio.channels.Selector: java.util.Set keys()>();
        i2 = 0;

     label2:
        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();
        goto label22;

     label3:
        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.nio.channels.SelectionKey) $r6;
        i2 = i2 + 1;

     label4:
        $r7 = virtualinvoke r3.<java.nio.channels.SelectionKey: java.lang.Object attachment()>();
        r4 = (org.apache.tomcat.util.net.NioEndpoint$KeyAttachment) $r7;
        if r4 != null goto label5;

        $r8 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus ERROR>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r3, $r8, 0);
        goto label22;

     label5:
        $z3 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: boolean getError()>();
        if $z3 == 0 goto label6;

        $r10 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus ERROR>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r3, $r10, 1);
        goto label22;

     label6:
        $z4 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: boolean isComet()>();
        if $z4 == 0 goto label7;

        $z5 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: boolean getCometNotify()>();
        if $z5 == 0 goto label7;

        virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void setCometNotify(boolean)>(0);
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: void reg(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,int)>(r3, r4, 0);
        $r12 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r13 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioChannel getChannel()>();
        $r14 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus OPEN_READ>;
        $z6 = virtualinvoke $r12.<org.apache.tomcat.util.net.NioEndpoint: boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)>($r13, $r14, 1);
        if $z6 != 0 goto label22;

        $r15 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r16 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioChannel getChannel()>();
        $r17 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus DISCONNECT>;
        virtualinvoke $r15.<org.apache.tomcat.util.net.NioEndpoint: boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)>($r16, $r17, 1);
        goto label22;

     label7:
        $i7 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: int interestOps()>();
        $i8 = $i7 & 1;
        if $i8 == 1 goto label8;

        $i9 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: int interestOps()>();
        $i10 = $i9 & 4;
        if $i10 != 4 goto label12;

     label8:
        $l11 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: long getLastAccess()>();
        l3 = l1 - $l11;
        l4 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: long getTimeout()>();
        $b12 = l4 cmp 0L;
        if $b12 <= 0 goto label9;

        $b13 = l3 cmp l4;
        if $b13 <= 0 goto label9;

        $z8 = 1;
        goto label10;

     label9:
        $z8 = 0;

     label10:
        z1 = $z8;
        $z9 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close>;
        if $z9 == 0 goto label11;

        virtualinvoke r3.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(0);
        virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: int interestOps(int)>(0);
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)>(r3, r4);
        goto label22;

     label11:
        if z1 == 0 goto label22;

        virtualinvoke r3.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(0);
        virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: int interestOps(int)>(0);
        $r20 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus TIMEOUT>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r3, $r20, 1);
        goto label22;

     label12:
        $z11 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: boolean isAsync()>();
        if $z11 != 0 goto label13;

        $z12 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: boolean isComet()>();
        if $z12 == 0 goto label22;

     label13:
        $z13 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close>;
        if $z13 == 0 goto label14;

        virtualinvoke r3.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(0);
        virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: int interestOps(int)>(0);
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)>(r3, r4);
        goto label22;

     label14:
        $z15 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: boolean isAsync()>();
        if $z15 == 0 goto label15;

        $l17 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: long getTimeout()>();
        $b18 = $l17 cmp 0L;
        if $b18 <= 0 goto label22;

     label15:
        $l19 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: long getLastAccess()>();
        l20 = l1 - $l19;
        $l21 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: long getTimeout()>();
        $b22 = $l21 cmp -1L;
        if $b22 != 0 goto label16;

        $r23 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r24 = $r23.<org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.net.SocketProperties socketProperties>;
        $i23 = virtualinvoke $r24.<org.apache.tomcat.util.net.SocketProperties: int getSoTimeout()>();
        $l24 = (long) $i23;
        goto label17;

     label16:
        $l24 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: long getTimeout()>();

     label17:
        l25 = $l24;
        $b26 = l20 cmp l25;
        if $b26 <= 0 goto label18;

        $z16 = 1;
        goto label19;

     label18:
        $z16 = 0;

     label19:
        z17 = $z16;
        if z17 == 0 goto label22;

        virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: void access(long)>(9223372036854775807L);
        $r25 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r26 = virtualinvoke r4.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioChannel getChannel()>();
        $r27 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus TIMEOUT>;
        virtualinvoke $r25.<org.apache.tomcat.util.net.NioEndpoint: boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)>($r26, $r27, 1);

     label20:
        goto label22;

     label21:
        $r28 := @caughtexception;
        r29 = $r28;
        $r30 = <org.apache.tomcat.util.net.SocketStatus: org.apache.tomcat.util.net.SocketStatus ERROR>;
        virtualinvoke r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)>(r3, $r30, 0);

     label22:
        $z19 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z19 != 0 goto label3;

     label23:
        goto label25;

     label24:
        $r32 := @caughtexception;
        r33 = $r32;
        $r34 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r35 = <org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.res.StringManager sm>;
        $r36 = virtualinvoke $r35.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("endpoint.nio.timeoutCme");
        interfaceinvoke $r34.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r36, r33);

     label25:
        l27 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: long nextExpiration>;
        $l28 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r37 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: org.apache.tomcat.util.net.NioEndpoint this$0>;
        $r38 = $r37.<org.apache.tomcat.util.net.NioEndpoint: org.apache.tomcat.util.net.SocketProperties socketProperties>;
        $l29 = virtualinvoke $r38.<org.apache.tomcat.util.net.SocketProperties: long getTimeoutInterval()>();
        $l30 = $l28 + $l29;
        r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: long nextExpiration> = $l30;
        $r39 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $z20 = interfaceinvoke $r39.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z20 == 0 goto label29;

        $r40 = staticinvoke <org.apache.tomcat.util.net.NioEndpoint: org.apache.juli.logging.Log access$1()>();
        $r41 = new java.lang.StringBuilder;
        specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>("timeout completed: keys processed=");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; now=");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; nextExpiration=");
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l27);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; keyCount=");
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; hasEvents=");
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; eval=");
        $b31 = l1 cmp l27;
        if $b31 >= 0 goto label27;

        if i0 > 0 goto label26;

        if z0 == 0 goto label27;

     label26:
        $z21 = r0.<org.apache.tomcat.util.net.NioEndpoint$Poller: boolean close>;
        if $z21 != 0 goto label27;

        $z22 = 1;
        goto label28;

     label27:
        $z22 = 0;

     label28:
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z22);
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r40.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r53);

     label29:
        return;

        catch java.nio.channels.CancelledKeyException from label4 to label20 with label21;
        catch java.util.ConcurrentModificationException from label2 to label23 with label24;
    }

    static int[] $SWITCH_TABLE$org$apache$tomcat$util$net$SendfileKeepAliveState()
    {
        int[] $r0, r1;
        org.apache.tomcat.util.net.SendfileKeepAliveState[] $r2;
        int $i0, $i1, $i2, $i3;
        org.apache.tomcat.util.net.SendfileKeepAliveState $r3, $r5, $r7;
        java.lang.NoSuchFieldError $r4, $r6, $r8;

        $r0 = <org.apache.tomcat.util.net.NioEndpoint$Poller: int[] $SWITCH_TABLE$org$apache$tomcat$util$net$SendfileKeepAliveState>;
        if $r0 == null goto label0;

        return $r0;

     label0:
        $r2 = staticinvoke <org.apache.tomcat.util.net.SendfileKeepAliveState: org.apache.tomcat.util.net.SendfileKeepAliveState[] values()>();
        $i0 = lengthof $r2;
        r1 = newarray (int)[$i0];

     label1:
        $r3 = <org.apache.tomcat.util.net.SendfileKeepAliveState: org.apache.tomcat.util.net.SendfileKeepAliveState NONE>;
        $i1 = virtualinvoke $r3.<org.apache.tomcat.util.net.SendfileKeepAliveState: int ordinal()>();
        r1[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r5 = <org.apache.tomcat.util.net.SendfileKeepAliveState: org.apache.tomcat.util.net.SendfileKeepAliveState OPEN>;
        $i2 = virtualinvoke $r5.<org.apache.tomcat.util.net.SendfileKeepAliveState: int ordinal()>();
        r1[$i2] = 3;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

     label7:
        $r7 = <org.apache.tomcat.util.net.SendfileKeepAliveState: org.apache.tomcat.util.net.SendfileKeepAliveState PIPELINED>;
        $i3 = virtualinvoke $r7.<org.apache.tomcat.util.net.SendfileKeepAliveState: int ordinal()>();
        r1[$i3] = 2;

     label8:
        goto label10;

     label9:
        $r8 := @caughtexception;

     label10:
        <org.apache.tomcat.util.net.NioEndpoint$Poller: int[] $SWITCH_TABLE$org$apache$tomcat$util$net$SendfileKeepAliveState> = r1;
        return r1;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
        catch java.lang.NoSuchFieldError from label7 to label8 with label9;
    }
}
