class java.lang.ref.Finalizer$FinalizerThread extends java.lang.Thread
{
    private volatile boolean running;

    void <init>(java.lang.ThreadGroup)
    {
        java.lang.ref.Finalizer$FinalizerThread r0;
        java.lang.ThreadGroup r1;

        r0 := @this: java.lang.ref.Finalizer$FinalizerThread;
        r1 := @parameter0: java.lang.ThreadGroup;
        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>(r1, "Finalizer");
        return;
    }

    public void run()
    {
        java.lang.ref.Finalizer$FinalizerThread r0;
        java.lang.InterruptedException r1, $r3, $r7, r8;
        java.lang.ref.Finalizer r2;
        boolean $z0, $z1;
        sun.misc.JavaLangAccess r4;
        java.lang.ref.ReferenceQueue $r5;
        java.lang.ref.Reference $r6;

        r0 := @this: java.lang.ref.Finalizer$FinalizerThread;
        $z0 = r0.<java.lang.ref.Finalizer$FinalizerThread: boolean running>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $z1 = staticinvoke <sun.misc.VM: boolean isBooted()>();
        if $z1 != 0 goto label4;

     label1:
        staticinvoke <sun.misc.VM: void awaitBooted()>();

     label2:
        goto label0;

     label3:
        $r3 := @caughtexception;
        r1 = $r3;
        goto label0;

     label4:
        r4 = staticinvoke <sun.misc.SharedSecrets: sun.misc.JavaLangAccess getJavaLangAccess()>();
        r0.<java.lang.ref.Finalizer$FinalizerThread: boolean running> = 1;

     label5:
        $r5 = staticinvoke <java.lang.ref.Finalizer: java.lang.ref.ReferenceQueue access$000()>();
        $r6 = virtualinvoke $r5.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>();
        r2 = (java.lang.ref.Finalizer) $r6;
        staticinvoke <java.lang.ref.Finalizer: void access$100(java.lang.ref.Finalizer,sun.misc.JavaLangAccess)>(r2, r4);

     label6:
        goto label5;

     label7:
        $r7 := @caughtexception;
        r8 = $r7;
        goto label5;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }
}
