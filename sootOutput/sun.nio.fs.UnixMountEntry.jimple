class sun.nio.fs.UnixMountEntry extends java.lang.Object
{
    private byte[] name;
    private byte[] dir;
    private byte[] fstype;
    private byte[] opts;
    private long dev;
    private volatile java.lang.String fstypeAsString;
    private volatile java.lang.String optionsAsString;

    void <init>()
    {
        sun.nio.fs.UnixMountEntry r0;

        r0 := @this: sun.nio.fs.UnixMountEntry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    java.lang.String name()
    {
        sun.nio.fs.UnixMountEntry r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: sun.nio.fs.UnixMountEntry;
        $r1 = new java.lang.String;
        $r2 = r0.<sun.nio.fs.UnixMountEntry: byte[] name>;
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);
        return $r1;
    }

    java.lang.String fstype()
    {
        sun.nio.fs.UnixMountEntry r0;
        java.lang.String $r1, $r2, $r4;
        byte[] $r3;

        r0 := @this: sun.nio.fs.UnixMountEntry;
        $r2 = r0.<sun.nio.fs.UnixMountEntry: java.lang.String fstypeAsString>;
        if $r2 != null goto label0;

        $r1 = new java.lang.String;
        $r3 = r0.<sun.nio.fs.UnixMountEntry: byte[] fstype>;
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r3);
        r0.<sun.nio.fs.UnixMountEntry: java.lang.String fstypeAsString> = $r1;

     label0:
        $r4 = r0.<sun.nio.fs.UnixMountEntry: java.lang.String fstypeAsString>;
        return $r4;
    }

    byte[] dir()
    {
        sun.nio.fs.UnixMountEntry r0;
        byte[] $r1;

        r0 := @this: sun.nio.fs.UnixMountEntry;
        $r1 = r0.<sun.nio.fs.UnixMountEntry: byte[] dir>;
        return $r1;
    }

    long dev()
    {
        sun.nio.fs.UnixMountEntry r0;
        long $l0;

        r0 := @this: sun.nio.fs.UnixMountEntry;
        $l0 = r0.<sun.nio.fs.UnixMountEntry: long dev>;
        return $l0;
    }

    boolean hasOption(java.lang.String)
    {
        sun.nio.fs.UnixMountEntry r0;
        java.lang.String r1, $r2, r4, $r5, $r7;
        java.lang.String[] r3;
        int i0, i1;
        byte[] $r6;
        boolean $z0;

        r0 := @this: sun.nio.fs.UnixMountEntry;
        r1 := @parameter0: java.lang.String;
        $r5 = r0.<sun.nio.fs.UnixMountEntry: java.lang.String optionsAsString>;
        if $r5 != null goto label0;

        $r2 = new java.lang.String;
        $r6 = r0.<sun.nio.fs.UnixMountEntry: byte[] opts>;
        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r6);
        r0.<sun.nio.fs.UnixMountEntry: java.lang.String optionsAsString> = $r2;

     label0:
        $r7 = r0.<sun.nio.fs.UnixMountEntry: java.lang.String optionsAsString>;
        r3 = staticinvoke <sun.nio.fs.Util: java.lang.String[] split(java.lang.String,char)>($r7, 44);
        i0 = lengthof r3;
        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        return 0;
    }

    boolean isIgnored()
    {
        sun.nio.fs.UnixMountEntry r0;
        boolean $z0;

        r0 := @this: sun.nio.fs.UnixMountEntry;
        $z0 = virtualinvoke r0.<sun.nio.fs.UnixMountEntry: boolean hasOption(java.lang.String)>("ignore");
        return $z0;
    }

    boolean isReadOnly()
    {
        sun.nio.fs.UnixMountEntry r0;
        boolean $z0;

        r0 := @this: sun.nio.fs.UnixMountEntry;
        $z0 = virtualinvoke r0.<sun.nio.fs.UnixMountEntry: boolean hasOption(java.lang.String)>("ro");
        return $z0;
    }
}
