public class sun.security.krb5.internal.KDCReq extends java.lang.Object
{
    public sun.security.krb5.internal.KDCReqBody reqBody;
    private int pvno;
    private int msgType;
    private sun.security.krb5.internal.PAData[] pAData;

    public void <init>(sun.security.krb5.internal.PAData[], sun.security.krb5.internal.KDCReqBody, int) throws java.io.IOException
    {
        sun.security.krb5.internal.KDCReq r0;
        sun.security.krb5.internal.PAData[] r1, $r3, $r6;
        sun.security.krb5.internal.KDCReqBody r2;
        int i0, i1, $i2, $i3;
        sun.security.krb5.internal.PAData $r4, $r7, $r9;
        java.io.IOException $r5;
        java.lang.Object $r8;

        r0 := @this: sun.security.krb5.internal.KDCReq;
        r1 := @parameter0: sun.security.krb5.internal.PAData[];
        r2 := @parameter1: sun.security.krb5.internal.KDCReqBody;
        i0 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData> = null;
        r0.<sun.security.krb5.internal.KDCReq: int pvno> = 5;
        r0.<sun.security.krb5.internal.KDCReq: int msgType> = i0;
        if r1 == null goto label2;

        $i2 = lengthof r1;
        $r3 = newarray (sun.security.krb5.internal.PAData)[$i2];
        r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData> = $r3;
        i1 = 0;

     label0:
        $i3 = lengthof r1;
        if i1 >= $i3 goto label2;

        $r4 = r1[i1];
        if $r4 != null goto label1;

        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Cannot create a KDCRep");
        throw $r5;

     label1:
        $r6 = r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData>;
        $r7 = r1[i1];
        $r8 = virtualinvoke $r7.<sun.security.krb5.internal.PAData: java.lang.Object clone()>();
        $r9 = (sun.security.krb5.internal.PAData) $r8;
        $r6[i1] = $r9;
        i1 = i1 + 1;
        goto label0;

     label2:
        r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.KDCReqBody reqBody> = r2;
        return;
    }

    public void <init>()
    {
        sun.security.krb5.internal.KDCReq r0;

        r0 := @this: sun.security.krb5.internal.KDCReq;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData> = null;
        return;
    }

    public void <init>(byte[], int) throws sun.security.krb5.Asn1Exception, java.io.IOException, sun.security.krb5.KrbException
    {
        sun.security.krb5.internal.KDCReq r0;
        byte[] r1;
        int i0;
        sun.security.util.DerValue $r2;

        r0 := @this: sun.security.krb5.internal.KDCReq;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData> = null;
        $r2 = new sun.security.util.DerValue;
        specialinvoke $r2.<sun.security.util.DerValue: void <init>(byte[])>(r1);
        virtualinvoke r0.<sun.security.krb5.internal.KDCReq: void init(sun.security.util.DerValue,int)>($r2, i0);
        return;
    }

    public void <init>(sun.security.util.DerValue, int) throws sun.security.krb5.Asn1Exception, java.io.IOException, sun.security.krb5.KrbException
    {
        sun.security.krb5.internal.KDCReq r0;
        sun.security.util.DerValue r1;
        int i0;

        r0 := @this: sun.security.krb5.internal.KDCReq;
        r1 := @parameter0: sun.security.util.DerValue;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData> = null;
        virtualinvoke r0.<sun.security.krb5.internal.KDCReq: void init(sun.security.util.DerValue,int)>(r1, i0);
        return;
    }

    protected void init(sun.security.util.DerValue, int) throws sun.security.krb5.Asn1Exception, java.io.IOException, sun.security.krb5.KrbException
    {
        sun.security.krb5.internal.KDCReq r0;
        sun.security.util.DerValue r1, r2, r3, r5, r15, r22, $r29, r33, r35;
        int i0, $i6, $i7, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i20;
        java.math.BigInteger r4, r17;
        java.util.Vector r6, $r25;
        byte $b1, $b2, $b3, $b4, $b5, $b8, $b9, $b14, $b18, $b19;
        sun.security.krb5.Asn1Exception $r7, $r9, $r13, $r19, $r24, $r37;
        sun.security.util.DerInputStream $r8, $r10, $r11, $r14, $r16, $r20, $r21, $r23, $r26, $r28, $r32, $r34;
        sun.security.krb5.internal.KrbApErrException $r12, $r18;
        sun.security.krb5.internal.PAData $r27;
        sun.security.krb5.internal.PAData[] $r30, $r31;
        sun.security.krb5.internal.KDCReqBody $r36;

        r0 := @this: sun.security.krb5.internal.KDCReq;
        r1 := @parameter0: sun.security.util.DerValue;
        i0 := @parameter1: int;
        $b1 = virtualinvoke r1.<sun.security.util.DerValue: byte getTag()>();
        $b2 = $b1 & 31;
        if $b2 == i0 goto label0;

        $r7 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r7.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r7;

     label0:
        $r8 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r2 = virtualinvoke $r8.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b3 = virtualinvoke r2.<sun.security.util.DerValue: byte getTag()>();
        if $b3 == 48 goto label1;

        $r9 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r9.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r9;

     label1:
        $r10 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r3 = virtualinvoke $r10.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b4 = virtualinvoke r3.<sun.security.util.DerValue: byte getTag()>();
        $b5 = $b4 & 31;
        if $b5 != 1 goto label2;

        $r11 = virtualinvoke r3.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r4 = virtualinvoke $r11.<sun.security.util.DerInputStream: java.math.BigInteger getBigInteger()>();
        $i6 = virtualinvoke r4.<java.math.BigInteger: int intValue()>();
        r0.<sun.security.krb5.internal.KDCReq: int pvno> = $i6;
        $i7 = r0.<sun.security.krb5.internal.KDCReq: int pvno>;
        if $i7 == 5 goto label3;

        $r12 = new sun.security.krb5.internal.KrbApErrException;
        specialinvoke $r12.<sun.security.krb5.internal.KrbApErrException: void <init>(int)>(39);
        throw $r12;

     label2:
        $r13 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r13.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r13;

     label3:
        $r14 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r15 = virtualinvoke $r14.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b8 = virtualinvoke r15.<sun.security.util.DerValue: byte getTag()>();
        $b9 = $b8 & 31;
        if $b9 != 2 goto label4;

        $r16 = virtualinvoke r15.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r17 = virtualinvoke $r16.<sun.security.util.DerInputStream: java.math.BigInteger getBigInteger()>();
        $i10 = virtualinvoke r17.<java.math.BigInteger: int intValue()>();
        r0.<sun.security.krb5.internal.KDCReq: int msgType> = $i10;
        $i11 = r0.<sun.security.krb5.internal.KDCReq: int msgType>;
        if $i11 == i0 goto label5;

        $r18 = new sun.security.krb5.internal.KrbApErrException;
        specialinvoke $r18.<sun.security.krb5.internal.KrbApErrException: void <init>(int)>(40);
        throw $r18;

     label4:
        $r19 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r19.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r19;

     label5:
        $r20 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i12 = virtualinvoke $r20.<sun.security.util.DerInputStream: int peekByte()>();
        $i13 = $i12 & 31;
        if $i13 != 3 goto label10;

        $r21 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r22 = virtualinvoke $r21.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r23 = virtualinvoke r22.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r5 = virtualinvoke $r23.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b14 = virtualinvoke r5.<sun.security.util.DerValue: byte getTag()>();
        if $b14 == 48 goto label6;

        $r24 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r24.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r24;

     label6:
        $r25 = new java.util.Vector;
        specialinvoke $r25.<java.util.Vector: void <init>()>();
        r6 = $r25;

     label7:
        $r26 = virtualinvoke r5.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i15 = virtualinvoke $r26.<sun.security.util.DerInputStream: int available()>();
        if $i15 <= 0 goto label8;

        $r27 = new sun.security.krb5.internal.PAData;
        $r28 = virtualinvoke r5.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r29 = virtualinvoke $r28.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        specialinvoke $r27.<sun.security.krb5.internal.PAData: void <init>(sun.security.util.DerValue)>($r29);
        virtualinvoke r6.<java.util.Vector: void addElement(java.lang.Object)>($r27);
        goto label7;

     label8:
        $i16 = virtualinvoke r6.<java.util.Vector: int size()>();
        if $i16 <= 0 goto label9;

        $i17 = virtualinvoke r6.<java.util.Vector: int size()>();
        $r30 = newarray (sun.security.krb5.internal.PAData)[$i17];
        r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData> = $r30;
        $r31 = r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData>;
        virtualinvoke r6.<java.util.Vector: void copyInto(java.lang.Object[])>($r31);

     label9:
        goto label11;

     label10:
        r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData> = null;

     label11:
        $r32 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r33 = virtualinvoke $r32.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b18 = virtualinvoke r33.<sun.security.util.DerValue: byte getTag()>();
        $b19 = $b18 & 31;
        if $b19 != 4 goto label12;

        $r34 = virtualinvoke r33.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r35 = virtualinvoke $r34.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r36 = new sun.security.krb5.internal.KDCReqBody;
        $i20 = r0.<sun.security.krb5.internal.KDCReq: int msgType>;
        specialinvoke $r36.<sun.security.krb5.internal.KDCReqBody: void <init>(sun.security.util.DerValue,int)>(r35, $i20);
        r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.KDCReqBody reqBody> = $r36;
        goto label13;

     label12:
        $r37 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r37.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r37;

     label13:
        return;
    }

    public byte[] asn1Encode() throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.internal.KDCReq r0;
        sun.security.util.DerOutputStream $r1, r2, r3, r4, $r6, $r7, r8, $r12, r13, $r18, $r21, r22, $r23, r24;
        int i0, $i1, $i4, $i7, $i8, $i11, $i12;
        long $l2, $l5;
        java.math.BigInteger $r5, $r9;
        byte $b3, $b6, $b9, $b10, $b13, $b14;
        sun.security.krb5.internal.PAData[] $r10, $r11, $r14, $r15;
        sun.security.krb5.internal.PAData $r16;
        byte[] $r17, $r20, $r25;
        sun.security.krb5.internal.KDCReqBody $r19;

        r0 := @this: sun.security.krb5.internal.KDCReq;
        $r1 = new sun.security.util.DerOutputStream;
        specialinvoke $r1.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r1;
        $i1 = r0.<sun.security.krb5.internal.KDCReq: int pvno>;
        $l2 = (long) $i1;
        $r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);
        virtualinvoke r2.<sun.security.util.DerOutputStream: void putInteger(java.math.BigInteger)>($r5);
        $r6 = new sun.security.util.DerOutputStream;
        specialinvoke $r6.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r6;
        $b3 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 1);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b3, r2);
        $r7 = new sun.security.util.DerOutputStream;
        specialinvoke $r7.<sun.security.util.DerOutputStream: void <init>()>();
        r8 = $r7;
        $i4 = r0.<sun.security.krb5.internal.KDCReq: int msgType>;
        $l5 = (long) $i4;
        $r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l5);
        virtualinvoke r8.<sun.security.util.DerOutputStream: void putInteger(java.math.BigInteger)>($r9);
        $b6 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 2);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b6, r8);
        $r10 = r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData>;
        if $r10 == null goto label2;

        $r11 = r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData>;
        $i7 = lengthof $r11;
        if $i7 <= 0 goto label2;

        $r12 = new sun.security.util.DerOutputStream;
        specialinvoke $r12.<sun.security.util.DerOutputStream: void <init>()>();
        r13 = $r12;
        i0 = 0;

     label0:
        $r14 = r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData>;
        $i8 = lengthof $r14;
        if i0 >= $i8 goto label1;

        $r15 = r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.PAData[] pAData>;
        $r16 = $r15[i0];
        $r17 = virtualinvoke $r16.<sun.security.krb5.internal.PAData: byte[] asn1Encode()>();
        virtualinvoke r13.<sun.security.util.DerOutputStream: void write(byte[])>($r17);
        i0 = i0 + 1;
        goto label0;

     label1:
        $r18 = new sun.security.util.DerOutputStream;
        specialinvoke $r18.<sun.security.util.DerOutputStream: void <init>()>();
        r4 = $r18;
        virtualinvoke r4.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r13);
        $b9 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 3);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b9, r4);

     label2:
        $b10 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 4);
        $r19 = r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.KDCReqBody reqBody>;
        $i11 = r0.<sun.security.krb5.internal.KDCReq: int msgType>;
        $r20 = virtualinvoke $r19.<sun.security.krb5.internal.KDCReqBody: byte[] asn1Encode(int)>($i11);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b10, $r20);
        $r21 = new sun.security.util.DerOutputStream;
        specialinvoke $r21.<sun.security.util.DerOutputStream: void <init>()>();
        r22 = $r21;
        virtualinvoke r22.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r3);
        $r23 = new sun.security.util.DerOutputStream;
        specialinvoke $r23.<sun.security.util.DerOutputStream: void <init>()>();
        r24 = $r23;
        $i12 = r0.<sun.security.krb5.internal.KDCReq: int msgType>;
        $b13 = (byte) $i12;
        $b14 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(64, 1, $b13);
        virtualinvoke r24.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b14, r22);
        $r25 = virtualinvoke r24.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        return $r25;
    }

    public byte[] asn1EncodeReqBody() throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.internal.KDCReq r0;
        sun.security.krb5.internal.KDCReqBody $r1;
        int $i0;
        byte[] $r2;

        r0 := @this: sun.security.krb5.internal.KDCReq;
        $r1 = r0.<sun.security.krb5.internal.KDCReq: sun.security.krb5.internal.KDCReqBody reqBody>;
        $i0 = r0.<sun.security.krb5.internal.KDCReq: int msgType>;
        $r2 = virtualinvoke $r1.<sun.security.krb5.internal.KDCReqBody: byte[] asn1Encode(int)>($i0);
        return $r2;
    }
}
