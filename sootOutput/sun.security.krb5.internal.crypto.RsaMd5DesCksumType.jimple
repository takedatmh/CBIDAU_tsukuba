public final class sun.security.krb5.internal.crypto.RsaMd5DesCksumType extends sun.security.krb5.internal.crypto.CksumType
{

    public void <init>()
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        specialinvoke r0.<sun.security.krb5.internal.crypto.CksumType: void <init>()>();
        return;
    }

    public int confounderSize()
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        return 8;
    }

    public int cksumType()
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        return 8;
    }

    public boolean isSafe()
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        return 1;
    }

    public int cksumSize()
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        return 24;
    }

    public int keyType()
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        return 1;
    }

    public int keySize()
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        return 8;
    }

    public byte[] calculateKeyedChecksum(byte[], int, byte[], int) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;
        byte[] r1, r2, r3, r4, r5, r6, r7, r8, r11;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i24, $i25;
        byte $b18, $b20, $b21, $b23;
        short $s19, $s22;
        boolean $z0;
        java.security.InvalidKeyException $r9, r10;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        r2 := @parameter2: byte[];
        i1 := @parameter3: int;
        $i3 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        $i4 = i0 + $i3;
        r3 = newarray (byte)[$i4];
        $i5 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        r4 = staticinvoke <sun.security.krb5.Confounder: byte[] bytes(int)>($i5);
        $i6 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r3, 0, $i6);
        $i7 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, $i7, i0);
        $i8 = lengthof r3;
        r5 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: byte[] calculateChecksum(byte[],int)>(r3, $i8);
        $i9 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int cksumSize()>();
        r6 = newarray (byte)[$i9];
        $i10 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r6, 0, $i10);
        $i11 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        $i12 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int cksumSize()>();
        $i13 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        $i14 = $i12 - $i13;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r6, $i11, $i14);
        $i15 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int keySize()>();
        r7 = newarray (byte)[$i15];
        $i16 = lengthof r2;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r7, 0, $i16);
        i2 = 0;

     label0:
        $i17 = lengthof r7;
        if i2 >= $i17 goto label1;

        $b18 = r7[i2];
        $s19 = $b18 ^ 240;
        $b20 = (byte) $s19;
        r7[i2] = $b20;
        i2 = i2 + 1;
        goto label0;

     label1:
        $z0 = staticinvoke <javax.crypto.spec.DESKeySpec: boolean isWeak(byte[],int)>(r7, 0);
        if $z0 == 0 goto label2;

        $b21 = r7[7];
        $s22 = $b21 ^ 240;
        $b23 = (byte) $s22;
        r7[7] = $b23;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;

     label4:
        $i24 = lengthof r7;
        r11 = newarray (byte)[$i24];
        $i25 = lengthof r6;
        r8 = newarray (byte)[$i25];
        staticinvoke <sun.security.krb5.internal.crypto.Des: void cbc_encrypt(byte[],byte[],byte[],byte[],boolean)>(r6, r8, r7, r11, 1);
        return r8;

        catch java.security.InvalidKeyException from label1 to label2 with label3;
    }

    public boolean verifyKeyedChecksum(byte[], int, byte[], byte[], int) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;
        byte[] r1, r2, r3, r4, r5, r6, r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        r2 := @parameter2: byte[];
        r3 := @parameter3: byte[];
        i1 := @parameter4: int;
        r4 = specialinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: byte[] decryptKeyedChecksum(byte[],byte[])>(r3, r2);
        $i2 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        $i3 = i0 + $i2;
        r5 = newarray (byte)[$i3];
        $i4 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r5, 0, $i4);
        $i5 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r5, $i5, i0);
        $i6 = lengthof r5;
        r6 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: byte[] calculateChecksum(byte[],int)>(r5, $i6);
        $i7 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int cksumSize()>();
        $i8 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        $i9 = $i7 - $i8;
        r7 = newarray (byte)[$i9];
        $i10 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        $i11 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int cksumSize()>();
        $i12 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int confounderSize()>();
        $i13 = $i11 - $i12;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i10, r7, 0, $i13);
        $z0 = staticinvoke <sun.security.krb5.internal.crypto.RsaMd5DesCksumType: boolean isChecksumEqual(byte[],byte[])>(r7, r6);
        return $z0;
    }

    private byte[] decryptKeyedChecksum(byte[], byte[]) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;
        byte[] r1, r2, r3, r4, r7;
        int i0, $i1, $i2, $i3, $i10, $i11;
        byte $b4, $b6, $b7, $b9;
        short $s5, $s8;
        boolean $z0;
        java.security.InvalidKeyException $r5, r6;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        r1 := @parameter0: byte[];
        r2 := @parameter1: byte[];
        $i1 = virtualinvoke r0.<sun.security.krb5.internal.crypto.RsaMd5DesCksumType: int keySize()>();
        r3 = newarray (byte)[$i1];
        $i2 = lengthof r2;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i2);
        i0 = 0;

     label0:
        $i3 = lengthof r3;
        if i0 >= $i3 goto label1;

        $b4 = r3[i0];
        $s5 = $b4 ^ 240;
        $b6 = (byte) $s5;
        r3[i0] = $b6;
        i0 = i0 + 1;
        goto label0;

     label1:
        $z0 = staticinvoke <javax.crypto.spec.DESKeySpec: boolean isWeak(byte[],int)>(r3, 0);
        if $z0 == 0 goto label2;

        $b7 = r3[7];
        $s8 = $b7 ^ 240;
        $b9 = (byte) $s8;
        r3[7] = $b9;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r6 = $r5;

     label4:
        $i10 = lengthof r3;
        r7 = newarray (byte)[$i10];
        $i11 = lengthof r1;
        r4 = newarray (byte)[$i11];
        staticinvoke <sun.security.krb5.internal.crypto.Des: void cbc_encrypt(byte[],byte[],byte[],byte[],boolean)>(r1, r4, r3, r7, 0);
        return r4;

        catch java.security.InvalidKeyException from label1 to label2 with label3;
    }

    public byte[] calculateChecksum(byte[], int) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.RsaMd5DesCksumType r0;
        byte[] r1, r11;
        int i0;
        null_type n0;
        java.security.MessageDigest r2;
        java.lang.Exception r3, $r5, $r12, r13;
        java.lang.StringBuilder $r4, $r7, $r9;
        sun.security.krb5.KrbCryptoException $r6, $r14;
        java.lang.String $r8, $r10, $r15;

        r0 := @this: sun.security.krb5.internal.crypto.RsaMd5DesCksumType;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        n0 = null;

     label0:
        r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = new sun.security.krb5.KrbCryptoException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JCE provider may not be installed. ");
        $r8 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label3:
        virtualinvoke r2.<java.security.MessageDigest: void update(byte[])>(r1);
        r11 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>();

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new sun.security.krb5.KrbCryptoException;
        $r15 = virtualinvoke r13.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r14.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r15);
        throw $r14;

     label6:
        return r11;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
