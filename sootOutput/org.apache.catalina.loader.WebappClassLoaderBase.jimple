public abstract class org.apache.catalina.loader.WebappClassLoaderBase extends java.net.URLClassLoader implements org.apache.catalina.Lifecycle, org.apache.tomcat.InstrumentableClassLoader, org.apache.tomcat.util.security.PermissionCheck
{
    private static final org.apache.juli.logging.Log log;
    private static final java.nio.charset.Charset CHARSET_UTF8;
    private static final java.util.List JVM_THREAD_GROUP_NAMES;
    private static final java.lang.String JVM_THREAD_GROUP_SYSTEM;
    private static final java.lang.String SERVICES_PREFIX;
    private static final java.lang.String CLASS_FILE_SUFFIX;
    private static final java.util.jar.Manifest MANIFEST_UNKNOWN;
    private static final java.lang.reflect.Method GET_CLASSLOADING_LOCK_METHOD;
    protected static final org.apache.tomcat.util.res.StringManager sm;
    protected static final java.lang.String[] triggers;
    protected static final java.lang.String[] packageTriggers;
    boolean antiJARLocking;
    protected javax.naming.directory.DirContext resources;
    protected java.util.Map resourceEntries;
    protected java.util.HashMap notFoundResources;
    protected boolean delegate;
    protected long lastJarAccessed;
    protected int jarOpenInterval;
    protected java.lang.String[] repositories;
    protected java.net.URL[] repositoryURLs;
    protected java.io.File[] files;
    protected java.util.jar.JarFile[] jarFiles;
    protected java.io.File[] jarRealFiles;
    protected java.lang.String jarPath;
    protected java.lang.String[] jarNames;
    protected long[] lastModifiedDates;
    protected java.lang.String[] paths;
    protected java.util.ArrayList permissionList;
    protected java.io.File loaderDir;
    protected java.lang.String canonicalLoaderDir;
    protected java.util.HashMap loaderPC;
    protected java.lang.SecurityManager securityManager;
    protected java.lang.ClassLoader parent;
    protected java.lang.ClassLoader system;
    protected java.lang.ClassLoader j2seClassLoader;
    protected boolean started;
    protected boolean hasExternalRepositories;
    protected boolean searchExternalFirst;
    protected boolean needConvert;
    protected java.security.Permission allPermission;
    private boolean clearReferencesRmiTargets;
    private boolean clearReferencesStatic;
    private boolean clearReferencesStopThreads;
    private boolean clearReferencesStopTimerThreads;
    private boolean clearReferencesLogFactoryRelease;
    private boolean clearReferencesHttpClientKeepAliveThread;
    private java.lang.String contextName;
    private boolean clearReferencesObjectStreamClassCaches;
    private final java.util.List transformers;
    private java.net.URL webInfClassesCodeBase;

    static void <clinit>()
    {
        java.lang.reflect.Method r0, r1;
        org.apache.juli.logging.Log $r2;
        java.nio.charset.Charset $r3;
        java.util.ArrayList $r4;
        java.util.jar.Manifest $r5;
        org.apache.tomcat.util.res.StringManager $r6;
        boolean $z0;
        java.lang.Class $r7, $r13;
        java.lang.Class[] $r8, $r14;
        org.apache.catalina.loader.WebappClassLoaderBase$1 $r9;
        java.lang.Object[] $r11;
        java.lang.Exception $r15, r16;
        java.util.List $r17, $r18;
        java.lang.String[] $r19, $r20;

        $r2 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/loader/WebappClassLoaderBase");
        <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log> = $r2;
        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");
        <org.apache.catalina.loader.WebappClassLoaderBase: java.nio.charset.Charset CHARSET_UTF8> = $r3;
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        <org.apache.catalina.loader.WebappClassLoaderBase: java.util.List JVM_THREAD_GROUP_NAMES> = $r4;
        $r5 = new java.util.jar.Manifest;
        specialinvoke $r5.<java.util.jar.Manifest: void <init>()>();
        <org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.Manifest MANIFEST_UNKNOWN> = $r5;
        $r6 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.catalina.loader");
        <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm> = $r6;
        r0 = null;

     label0:
        $z0 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: boolean isJre7Available()>();
        if $z0 == 0 goto label3;

        $r7 = class "java/lang/ClassLoader";
        $r8 = newarray (java.lang.Class)[0];
        r1 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("registerAsParallelCapable", $r8);
        $r9 = new org.apache.catalina.loader.WebappClassLoaderBase$1;
        specialinvoke $r9.<org.apache.catalina.loader.WebappClassLoaderBase$1: void <init>(java.lang.reflect.Method)>(r1);
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r9);
        $r11 = newarray (java.lang.Object)[0];
        virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r11);
        $r13 = class "java/lang/ClassLoader";
        $r14 = newarray (java.lang.Class)[1];
        $r14[0] = class "java/lang/String";
        r0 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getClassLoadingLock", $r14);

     label1:
        goto label3;

     label2:
        $r15 := @caughtexception;
        r16 = $r15;

     label3:
        <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.reflect.Method GET_CLASSLOADING_LOCK_METHOD> = r0;
        $r17 = <org.apache.catalina.loader.WebappClassLoaderBase: java.util.List JVM_THREAD_GROUP_NAMES>;
        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>("system");
        $r18 = <org.apache.catalina.loader.WebappClassLoaderBase: java.util.List JVM_THREAD_GROUP_NAMES>;
        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>("RMI Runtime");
        $r19 = newarray (java.lang.String)[2];
        $r19[0] = "javax.servlet.Servlet";
        $r19[1] = "javax.el.Expression";
        <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] triggers> = $r19;
        $r20 = newarray (java.lang.String)[0];
        <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] packageTriggers> = $r20;
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void <init>()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.ClassLoader r1, r2, $r18;
        java.net.URL[] $r3;
        java.util.concurrent.ConcurrentHashMap $r4;
        org.apache.catalina.loader.WebappClassLoaderBase$2 $r5;
        java.lang.String[] $r6, $r10, $r12;
        java.io.File[] $r7, $r9;
        java.util.jar.JarFile[] $r8;
        long[] $r11;
        java.util.ArrayList $r13;
        java.util.HashMap $r14;
        java.security.AllPermission $r15;
        java.util.concurrent.CopyOnWriteArrayList $r16;
        java.lang.Class $r17;
        java.lang.SecurityManager $r19, $r20;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r3 = newarray (java.net.URL)[0];
        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[])>($r3);
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean antiJARLocking> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources> = null;
        $r4 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries> = $r4;
        $r5 = new org.apache.catalina.loader.WebappClassLoaderBase$2;
        specialinvoke $r5.<org.apache.catalina.loader.WebappClassLoaderBase$2: void <init>(org.apache.catalina.loader.WebappClassLoaderBase)>(r0);
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap notFoundResources> = $r5;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: long lastJarAccessed> = 0L;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: int jarOpenInterval> = 90000;
        $r6 = newarray (java.lang.String)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories> = $r6;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs> = null;
        $r7 = newarray (java.io.File)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files> = $r7;
        $r8 = newarray (java.util.jar.JarFile)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles> = $r8;
        $r9 = newarray (java.io.File)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles> = $r9;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String jarPath> = null;
        $r10 = newarray (java.lang.String)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames> = $r10;
        $r11 = newarray (long)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates> = $r11;
        $r12 = newarray (java.lang.String)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths> = $r12;
        $r13 = new java.util.ArrayList;
        specialinvoke $r13.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.ArrayList permissionList> = $r13;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String canonicalLoaderDir> = null;
        $r14 = new java.util.HashMap;
        specialinvoke $r14.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap loaderPC> = $r14;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader system> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean started> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean needConvert> = 0;
        $r15 = new java.security.AllPermission;
        specialinvoke $r15.<java.security.AllPermission: void <init>()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.security.Permission allPermission> = $r15;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesRmiTargets> = 1;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStatic> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopThreads> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopTimerThreads> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesLogFactoryRelease> = 1;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesHttpClientKeepAliveThread> = 1;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName> = "unknown";
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesObjectStreamClassCaches> = 1;
        $r16 = new java.util.concurrent.CopyOnWriteArrayList;
        specialinvoke $r16.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.List transformers> = $r16;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL webInfClassesCodeBase> = null;
        r1 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader getParent()>();
        if r1 != null goto label0;

        r1 = staticinvoke <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader getSystemClassLoader()>();

     label0:
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent> = r1;
        $r17 = class "java/lang/String";
        r2 = virtualinvoke $r17.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        if r2 != null goto label3;

        r2 = staticinvoke <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader getSystemClassLoader()>();
        goto label2;

     label1:
        r2 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

     label2:
        $r18 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();
        if $r18 != null goto label1;

     label3:
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader j2seClassLoader> = r2;
        $r19 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager> = $r19;
        $r20 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        if $r20 == null goto label4;

        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void refreshPolicy()>();

     label4:
        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.ClassLoader r1, r2, r3, $r19;
        java.net.URL[] $r4;
        java.util.concurrent.ConcurrentHashMap $r5;
        org.apache.catalina.loader.WebappClassLoaderBase$2 $r6;
        java.lang.String[] $r7, $r11, $r13;
        java.io.File[] $r8, $r10;
        java.util.jar.JarFile[] $r9;
        long[] $r12;
        java.util.ArrayList $r14;
        java.util.HashMap $r15;
        java.security.AllPermission $r16;
        java.util.concurrent.CopyOnWriteArrayList $r17;
        java.lang.Class $r18;
        java.lang.SecurityManager $r20, $r21;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.ClassLoader;
        $r4 = newarray (java.net.URL)[0];
        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>($r4, r1);
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean antiJARLocking> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources> = null;
        $r5 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries> = $r5;
        $r6 = new org.apache.catalina.loader.WebappClassLoaderBase$2;
        specialinvoke $r6.<org.apache.catalina.loader.WebappClassLoaderBase$2: void <init>(org.apache.catalina.loader.WebappClassLoaderBase)>(r0);
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap notFoundResources> = $r6;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: long lastJarAccessed> = 0L;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: int jarOpenInterval> = 90000;
        $r7 = newarray (java.lang.String)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories> = $r7;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs> = null;
        $r8 = newarray (java.io.File)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files> = $r8;
        $r9 = newarray (java.util.jar.JarFile)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles> = $r9;
        $r10 = newarray (java.io.File)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles> = $r10;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String jarPath> = null;
        $r11 = newarray (java.lang.String)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames> = $r11;
        $r12 = newarray (long)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates> = $r12;
        $r13 = newarray (java.lang.String)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths> = $r13;
        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.ArrayList permissionList> = $r14;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String canonicalLoaderDir> = null;
        $r15 = new java.util.HashMap;
        specialinvoke $r15.<java.util.HashMap: void <init>()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap loaderPC> = $r15;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader system> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean started> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean needConvert> = 0;
        $r16 = new java.security.AllPermission;
        specialinvoke $r16.<java.security.AllPermission: void <init>()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.security.Permission allPermission> = $r16;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesRmiTargets> = 1;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStatic> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopThreads> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopTimerThreads> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesLogFactoryRelease> = 1;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesHttpClientKeepAliveThread> = 1;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName> = "unknown";
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesObjectStreamClassCaches> = 1;
        $r17 = new java.util.concurrent.CopyOnWriteArrayList;
        specialinvoke $r17.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.List transformers> = $r17;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL webInfClassesCodeBase> = null;
        r2 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader getParent()>();
        if r2 != null goto label0;

        r2 = staticinvoke <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader getSystemClassLoader()>();

     label0:
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent> = r2;
        $r18 = class "java/lang/String";
        r3 = virtualinvoke $r18.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        if r3 != null goto label3;

        r3 = staticinvoke <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader getSystemClassLoader()>();
        goto label2;

     label1:
        r3 = virtualinvoke r3.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

     label2:
        $r19 = virtualinvoke r3.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();
        if $r19 != null goto label1;

     label3:
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader j2seClassLoader> = r3;
        $r20 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager> = $r20;
        $r21 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        if $r21 == null goto label4;

        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void refreshPolicy()>();

     label4:
        return;
    }

    public javax.naming.directory.DirContext getResources()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        javax.naming.directory.DirContext $r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources>;
        return $r1;
    }

    public void setResources(javax.naming.directory.DirContext)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        javax.naming.directory.DirContext r1;
        boolean $z0;
        org.apache.naming.resources.ProxyDirContext $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: javax.naming.directory.DirContext;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources> = r1;
        $z0 = r1 instanceof org.apache.naming.resources.ProxyDirContext;
        if $z0 == 0 goto label0;

        $r2 = (org.apache.naming.resources.ProxyDirContext) r1;
        $r3 = virtualinvoke $r2.<org.apache.naming.resources.ProxyDirContext: java.lang.String getContextName()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName> = $r3;

     label0:
        return;
    }

    public java.lang.String getContextName()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        return $r1;
    }

    public boolean getDelegate()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate>;
        return $z0;
    }

    public void setDelegate(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate> = z0;
        return;
    }

    public void setJarOpenInterval(int)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        int i0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        i0 := @parameter0: int;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: int jarOpenInterval> = i0;
        return;
    }

    public int getJarOpenInterval()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        int $i0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $i0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: int jarOpenInterval>;
        return $i0;
    }

    public boolean getAntiJARLocking()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean antiJARLocking>;
        return $z0;
    }

    public void setAntiJARLocking(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean antiJARLocking> = z0;
        return;
    }

    public boolean getSearchExternalFirst()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        return $z0;
    }

    public boolean getClearReferencesRmiTargets()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesRmiTargets>;
        return $z0;
    }

    public void setClearReferencesRmiTargets(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesRmiTargets> = z0;
        return;
    }

    public void setSearchExternalFirst(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst> = z0;
        return;
    }

    public void addPermission(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r2, $r5, $r9, $r11, $r13, $r17, $r18, $r22, $r24;
        null_type n0;
        java.lang.SecurityManager $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r4, $r6, $r8, $r10, $r16, $r19, $r21, $r23;
        org.apache.naming.JndiPermission $r7, r12;
        java.io.FilePermission $r14, r15, $r20, r25;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        return;

     label0:
        r2 = r1;
        $r3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        if $r3 == null goto label5;

        n0 = null;
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("jndi:");
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("jar:jndi:");
        if $z1 == 0 goto label3;

     label1:
        $z2 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("/");
        if $z2 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r7 = new org.apache.naming.JndiPermission;
        $r8 = new java.lang.StringBuilder;
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<org.apache.naming.JndiPermission: void <init>(java.lang.String)>($r11);
        r12 = $r7;
        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void addPermission(java.security.Permission)>(r12);
        goto label5;

     label3:
        $r13 = <java.io.File: java.lang.String separator>;
        $z3 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>($r13);
        if $z3 != 0 goto label4;

        $r14 = new java.io.FilePermission;
        specialinvoke $r14.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r2, "read");
        r15 = $r14;
        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void addPermission(java.security.Permission)>(r15);
        $r16 = new java.lang.StringBuilder;
        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>($r17);
        $r18 = <java.io.File: java.lang.String separator>;
        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        r2 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r20 = new java.io.FilePermission;
        $r21 = new java.lang.StringBuilder;
        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r20.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>($r24, "read");
        r25 = $r20;
        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void addPermission(java.security.Permission)>(r25);

     label5:
        return;
    }

    public void addPermission(java.net.URL)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.net.URL r1;
        java.lang.String $r2;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.net.URL;
        if r1 == null goto label0;

        $r2 = virtualinvoke r1.<java.net.URL: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void addPermission(java.lang.String)>($r2);

     label0:
        return;
    }

    public void addPermission(java.security.Permission)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.security.Permission r1;
        java.lang.SecurityManager $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.security.Permission;
        $r2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        if $r2 == null goto label0;

        if r1 == null goto label0;

        $r3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.ArrayList permissionList>;
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label0:
        return;
    }

    public java.lang.String getJarPath()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String jarPath>;
        return $r1;
    }

    public void setJarPath(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String jarPath> = r1;
        return;
    }

    public void setWorkDir(java.io.File)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.io.File r1, $r2, $r4;
        java.io.IOException r3, $r15;
        java.lang.String $r5, $r6, $r7, $r10, $r11, $r12, $r14;
        boolean $z0;
        java.lang.StringBuilder $r9, $r13;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.io.File;
        $r2 = new java.io.File;
        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "loader");
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir> = $r2;

     label0:
        $r4 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir>;
        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getCanonicalPath()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String canonicalLoaderDir> = $r5;
        $r6 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String canonicalLoaderDir>;
        $r7 = <java.io.File: java.lang.String separator>;
        $z0 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>($r7);
        if $z0 != 0 goto label3;

        $r9 = new java.lang.StringBuilder;
        $r10 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String canonicalLoaderDir>;
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);
        $r12 = <java.io.File: java.lang.String separator>;
        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String canonicalLoaderDir> = $r14;

     label1:
        goto label3;

     label2:
        $r15 := @caughtexception;
        r3 = $r15;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String canonicalLoaderDir> = null;

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    protected void setParentClassLoader(java.lang.ClassLoader)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.ClassLoader;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent> = r1;
        return;
    }

    public boolean getClearReferencesStatic()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStatic>;
        return $z0;
    }

    public void setClearReferencesStatic(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStatic> = z0;
        return;
    }

    public boolean getClearReferencesStopThreads()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopThreads>;
        return $z0;
    }

    public void setClearReferencesStopThreads(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopThreads> = z0;
        return;
    }

    public boolean getClearReferencesStopTimerThreads()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopTimerThreads>;
        return $z0;
    }

    public void setClearReferencesStopTimerThreads(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopTimerThreads> = z0;
        return;
    }

    public boolean getClearReferencesLogFactoryRelease()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesLogFactoryRelease>;
        return $z0;
    }

    public void setClearReferencesLogFactoryRelease(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesLogFactoryRelease> = z0;
        return;
    }

    public boolean getClearReferencesHttpClientKeepAliveThread()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesHttpClientKeepAliveThread>;
        return $z0;
    }

    public void setClearReferencesHttpClientKeepAliveThread(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesHttpClientKeepAliveThread> = z0;
        return;
    }

    public boolean getClearReferencesObjectStreamClassCaches()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesObjectStreamClassCaches>;
        return $z0;
    }

    public void setClearReferencesObjectStreamClassCaches(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesObjectStreamClassCaches> = z0;
        return;
    }

    public void addTransformer(java.lang.instrument.ClassFileTransformer)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.instrument.ClassFileTransformer r1;
        org.apache.tomcat.util.res.StringManager $r2, $r9, $r15;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4, $r10, $r16;
        java.lang.String $r5, $r6, $r11, $r12, $r17, $r18;
        java.util.List $r7, $r13;
        boolean $z0;
        org.apache.juli.logging.Log $r8, $r14;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.instrument.ClassFileTransformer;
        if r1 != null goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = newarray (java.lang.Object)[1];
        $r5 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r4[0] = $r5;
        $r6 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.addTransformer.illegalArgument", $r4);
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);
        throw $r3;

     label0:
        $r7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.List transformers>;
        $z0 = interfaceinvoke $r7.<java.util.List: boolean contains(java.lang.Object)>(r1);
        if $z0 == 0 goto label1;

        $r8 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r9 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = newarray (java.lang.Object)[2];
        $r10[0] = r1;
        $r11 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r10[1] = $r11;
        $r12 = virtualinvoke $r9.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.addTransformer.duplicate", $r10);
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r12);
        return;

     label1:
        $r13 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.List transformers>;
        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r1);
        $r14 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r15 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r16 = newarray (java.lang.Object)[2];
        $r16[0] = r1;
        $r17 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r16[1] = $r17;
        $r18 = virtualinvoke $r15.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.addTransformer", $r16);
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r18);
        return;
    }

    public void removeTransformer(java.lang.instrument.ClassFileTransformer)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.instrument.ClassFileTransformer r1;
        java.util.List $r2;
        boolean $z0;
        org.apache.juli.logging.Log $r3;
        org.apache.tomcat.util.res.StringManager $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6, $r7;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.instrument.ClassFileTransformer;
        if r1 != null goto label0;

        return;

     label0:
        $r2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.List transformers>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);
        if $z0 == 0 goto label1;

        $r3 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r4 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[2];
        $r5[0] = r1;
        $r6 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r5[1] = $r6;
        $r7 = virtualinvoke $r4.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.removeTransformer", $r5);
        interfaceinvoke $r3.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r7);
        return;

     label1:
        return;
    }

    protected void copyStateWithoutTransformers(org.apache.catalina.loader.WebappClassLoaderBase)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9;
        javax.naming.directory.DirContext $r2;
        java.io.File[] $r3, $r14, $r16;
        long $l0;
        java.lang.String[] $r4, $r17, $r19, $r23, $r25;
        java.lang.String $r5, $r7, $r32;
        java.io.File $r6;
        java.net.URL[] $r8, $r10;
        java.lang.Object $r9, $r12, $r15, $r18, $r21, $r24;
        java.util.jar.JarFile[] $r11, $r13;
        long[] $r20, $r22;
        java.util.HashMap $r26, $r27, $r30, $r31;
        java.util.ArrayList $r28, $r29;
        int $i1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean antiJARLocking>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: boolean antiJARLocking> = $z0;
        $r2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources> = $r2;
        $r3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files> = $r3;
        $z1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate> = $z1;
        $l0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long lastJarAccessed>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: long lastJarAccessed> = $l0;
        $r4 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories> = $r4;
        $r5 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String jarPath>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String jarPath> = $r5;
        $r6 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir> = $r6;
        $r7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String canonicalLoaderDir>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String canonicalLoaderDir> = $r7;
        $z2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStatic>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStatic> = $z2;
        $z3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopThreads>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopThreads> = $z3;
        $z4 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopTimerThreads>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopTimerThreads> = $z4;
        $z5 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesLogFactoryRelease>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesLogFactoryRelease> = $z5;
        $z6 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesHttpClientKeepAliveThread>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesHttpClientKeepAliveThread> = $z6;
        $r8 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs>;
        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Object clone()>();
        $r10 = (java.net.URL[]) $r9;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs> = $r10;
        $r11 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Object clone()>();
        $r13 = (java.util.jar.JarFile[]) $r12;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles> = $r13;
        $r14 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Object clone()>();
        $r16 = (java.io.File[]) $r15;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles> = $r16;
        $r17 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames>;
        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.Object clone()>();
        $r19 = (java.lang.String[]) $r18;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames> = $r19;
        $r20 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.Object clone()>();
        $r22 = (long[]) $r21;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates> = $r22;
        $r23 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $r24 = virtualinvoke $r23.<java.lang.Object: java.lang.Object clone()>();
        $r25 = (java.lang.String[]) $r24;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths> = $r25;
        $r26 = r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap notFoundResources>;
        $r27 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap notFoundResources>;
        virtualinvoke $r26.<java.util.HashMap: void putAll(java.util.Map)>($r27);
        $r28 = r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.ArrayList permissionList>;
        $r29 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.ArrayList permissionList>;
        virtualinvoke $r28.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r29);
        $r30 = r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap loaderPC>;
        $r31 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap loaderPC>;
        virtualinvoke $r30.<java.util.HashMap: void putAll(java.util.Map)>($r31);
        $r32 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName> = $r32;
        $z8 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories> = $z8;
        $z9 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst> = $z9;
        $i1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: int jarOpenInterval>;
        r1.<org.apache.catalina.loader.WebappClassLoaderBase: int jarOpenInterval> = $i1;
        return;
    }

    public void addRepository(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, $r10;
        java.net.URL r2, $r4;
        java.lang.IllegalArgumentException r3, $r7;
        boolean $z0, $z1;
        java.net.MalformedURLException $r5, r6;
        java.lang.StringBuilder $r8, $r9;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/WEB-INF/lib");
        if $z0 != 0 goto label0;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/WEB-INF/classes");
        if $z1 == 0 goto label1;

     label0:
        return;

     label1:
        $r4 = new java.net.URL;
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>(r1);
        r2 = $r4;
        specialinvoke r0.<java.net.URLClassLoader: void addURL(java.net.URL)>(r2);
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories> = 1;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs> = null;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r6 = $r5;
        $r7 = new java.lang.IllegalArgumentException;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid repository: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);
        r3 = $r7;
        virtualinvoke r3.<java.lang.IllegalArgumentException: java.lang.Throwable initCause(java.lang.Throwable)>(r6);
        throw r3;

     label4:
        return;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    synchronized void addRepository(java.lang.String, java.io.File)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, $r10, $r13;
        java.io.File r2, $r18;
        java.lang.StringBuilder $r3, $r8, $r9;
        java.lang.String[] r4, $r11, $r12, $r14, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9;
        java.io.File[] r5, $r16, $r17, $r19, $r20;
        org.apache.juli.logging.Log $r6, $r7;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.io.File;
        if r1 != null goto label0;

        return;

     label0:
        $r6 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r6.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label1;

        $r7 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("addRepository(");
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r10);

     label1:
        $r11 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $i1 = lengthof $r11;
        $i2 = $i1 + 1;
        r4 = newarray (java.lang.String)[$i2];
        i0 = 0;
        goto label3;

     label2:
        $r12 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $r13 = $r12[i0];
        r4[i0] = $r13;
        i0 = i0 + 1;

     label3:
        $r14 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $i3 = lengthof $r14;
        if i0 < $i3 goto label2;

        $r15 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $i4 = lengthof $r15;
        r4[$i4] = r1;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories> = r4;
        $r16 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        $i5 = lengthof $r16;
        $i6 = $i5 + 1;
        r5 = newarray (java.io.File)[$i6];
        i7 = 0;
        goto label5;

     label4:
        $r17 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        $r18 = $r17[i7];
        r5[i7] = $r18;
        i7 = i7 + 1;

     label5:
        $r19 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        $i8 = lengthof $r19;
        if i7 < $i8 goto label4;

        $r20 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        $i9 = lengthof $r20;
        r5[$i9] = r2;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files> = r5;
        return;
    }

    synchronized void addJar(java.lang.String, java.util.jar.JarFile, java.io.File) throws java.io.IOException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r5, $r13, $r14, $r15, $r16, $r19, $r27;
        java.util.jar.JarFile r2, $r39;
        java.io.File r3, $r45;
        java.lang.StringBuilder $r4, $r11, $r12;
        java.lang.String[] r6, r7, $r17, $r18, $r20, $r21, $r25, $r26, $r28, $r29;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, i9, $i10, $i11, $i12, $i13, i14, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, i25, $i26, $i27;
        long[] r8, $r30, $r31, $r32, $r33;
        org.apache.juli.logging.Log $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        javax.naming.directory.DirContext $r22;
        javax.naming.directory.Attributes $r23;
        org.apache.naming.resources.ResourceAttributes $r24;
        long l6, $l15;
        javax.naming.NamingException $r34, r35;
        java.util.jar.JarFile[] $r36, r37, $r38, $r40, $r41;
        java.io.File[] $r42, r43, $r44, $r46, $r47;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.JarFile;
        r3 := @parameter2: java.io.File;
        if r1 != null goto label0;

        return;

     label0:
        if r2 != null goto label1;

        return;

     label1:
        if r3 != null goto label2;

        return;

     label2:
        $r9 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label3;

        $r10 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("addJar(");
        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r13);

     label3:
        $r14 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String jarPath>;
        if $r14 == null goto label8;

        $r15 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String jarPath>;
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r15);
        if $z1 == 0 goto label8;

        $r16 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String jarPath>;
        $i1 = virtualinvoke $r16.<java.lang.String: int length()>();
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);
        goto label5;

     label4:
        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(1);

     label5:
        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z2 != 0 goto label4;

        $r17 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames>;
        $i2 = lengthof $r17;
        $i3 = $i2 + 1;
        r6 = newarray (java.lang.String)[$i3];
        i0 = 0;
        goto label7;

     label6:
        $r18 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames>;
        $r19 = $r18[i0];
        r6[i0] = $r19;
        i0 = i0 + 1;

     label7:
        $r20 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames>;
        $i4 = lengthof $r20;
        if i0 < $i4 goto label6;

        $r21 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames>;
        $i5 = lengthof $r21;
        r6[$i5] = r5;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames> = r6;

     label8:
        $r22 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources>;
        $r23 = interfaceinvoke $r22.<javax.naming.directory.DirContext: javax.naming.directory.Attributes getAttributes(java.lang.String)>(r1);
        $r24 = (org.apache.naming.resources.ResourceAttributes) $r23;
        l6 = virtualinvoke $r24.<org.apache.naming.resources.ResourceAttributes: long getLastModified()>();
        $r25 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $i7 = lengthof $r25;
        $i8 = $i7 + 1;
        r7 = newarray (java.lang.String)[$i8];
        i9 = 0;
        goto label10;

     label9:
        $r26 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $r27 = $r26[i9];
        r7[i9] = $r27;
        i9 = i9 + 1;

     label10:
        $r28 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $i10 = lengthof $r28;
        if i9 < $i10 goto label9;

        $r29 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $i11 = lengthof $r29;
        r7[$i11] = r1;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths> = r7;
        $r30 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $i12 = lengthof $r30;
        $i13 = $i12 + 1;
        r8 = newarray (long)[$i13];
        i14 = 0;
        goto label12;

     label11:
        $r31 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $l15 = $r31[i14];
        r8[i14] = $l15;
        i14 = i14 + 1;

     label12:
        $r32 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $i16 = lengthof $r32;
        if i14 < $i16 goto label11;

        $r33 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $i17 = lengthof $r33;
        r8[$i17] = l6;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates> = r8;

     label13:
        goto label15;

     label14:
        $r34 := @caughtexception;
        r35 = $r34;

     label15:
        $z3 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean validateJarFile(java.io.File)>(r3);
        if $z3 != 0 goto label16;

        return;

     label16:
        $r36 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $i18 = lengthof $r36;
        $i19 = $i18 + 1;
        r37 = newarray (java.util.jar.JarFile)[$i19];
        i20 = 0;
        goto label18;

     label17:
        $r38 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r39 = $r38[i20];
        r37[i20] = $r39;
        i20 = i20 + 1;

     label18:
        $r40 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $i21 = lengthof $r40;
        if i20 < $i21 goto label17;

        $r41 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $i22 = lengthof $r41;
        r37[$i22] = r2;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles> = r37;
        $r42 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        $i23 = lengthof $r42;
        $i24 = $i23 + 1;
        r43 = newarray (java.io.File)[$i24];
        i25 = 0;
        goto label20;

     label19:
        $r44 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        $r45 = $r44[i25];
        r43[i25] = $r45;
        i25 = i25 + 1;

     label20:
        $r46 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        $i26 = lengthof $r46;
        if i25 < $i26 goto label19;

        $r47 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        $i27 = lengthof $r47;
        r43[$i27] = r3;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles> = r43;
        return;

        catch javax.naming.NamingException from label8 to label13 with label14;
    }

    public java.lang.String[] findRepositories()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (java.lang.String[]) $r2;
        return $r3;
    }

    public boolean modified()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        org.apache.juli.logging.Log $r1, $r4, $r13, $r14, $r29, $r44, $r52, $r54, $r57, $r58, $r66;
        int i0, i1, i2, i7, i8, $i9;
        long l3, $l4, $l6;
        javax.naming.NameClassPair r2, r50;
        java.lang.String r3, $r9, $r17, $r26, $r32, $r35, $r37, $r39, $r43, $r48, r51, $r60, $r63, $r68, $r71, $r73;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String[] $r5, $r8, $r16, $r31, $r36, $r42, $r53;
        long[] $r6, $r12, $r24;
        javax.naming.directory.DirContext $r7, $r38;
        javax.naming.directory.Attributes $r10;
        org.apache.naming.resources.ResourceAttributes $r11;
        byte $b5;
        java.lang.StringBuilder $r15, $r18, $r19, $r21, $r22, $r25, $r30, $r33, $r34, $r45, $r46, $r47, $r59, $r61, $r62, $r67, $r69, $r70, $r72;
        java.util.Date $r20, $r23;
        javax.naming.NamingException $r27, r28, $r55, r56;
        javax.naming.NamingEnumeration r40;
        java.lang.Object $r41, $r49;
        java.lang.ClassCastException $r64, r65;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r1.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("modified()");

     label0:
        $r5 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        i0 = lengthof $r5;
        $r6 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        i1 = lengthof $r6;
        if i0 <= i1 goto label1;

        i0 = i1;

     label1:
        i2 = 0;
        goto label6;

     label2:
        $r7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources>;
        $r8 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $r9 = $r8[i2];
        $r10 = interfaceinvoke $r7.<javax.naming.directory.DirContext: javax.naming.directory.Attributes getAttributes(java.lang.String)>($r9);
        $r11 = (org.apache.naming.resources.ResourceAttributes) $r10;
        l3 = virtualinvoke $r11.<org.apache.naming.resources.ResourceAttributes: long getLastModified()>();
        $r12 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $l4 = $r12[i2];
        $b5 = l3 cmp $l4;
        if $b5 == 0 goto label5;

        $r13 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r13.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label3;

        $r14 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Resource \'");
        $r16 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $r17 = $r16[i2];
        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was modified; Date is now: ");
        $r20 = new java.util.Date;
        specialinvoke $r20.<java.util.Date: void <init>(long)>(l3);
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Was: ");
        $r23 = new java.util.Date;
        $r24 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $l6 = $r24[i2];
        specialinvoke $r23.<java.util.Date: void <init>(long)>($l6);
        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r26);

     label3:
        return 1;

     label4:
        $r27 := @caughtexception;
        r28 = $r27;
        $r29 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("    Resource \'");
        $r31 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $r32 = $r31[i2];
        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is missing");
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r29.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r35);
        return 1;

     label5:
        i2 = i2 + 1;

     label6:
        if i2 < i0 goto label2;

        $r36 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames>;
        i7 = lengthof $r36;
        $r37 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getJarPath()>();
        if $r37 == null goto label21;

     label7:
        $r38 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources>;
        $r39 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getJarPath()>();
        r40 = interfaceinvoke $r38.<javax.naming.directory.DirContext: javax.naming.NamingEnumeration listBindings(java.lang.String)>($r39);
        i8 = 0;
        goto label12;

     label8:
        $r41 = interfaceinvoke r40.<javax.naming.NamingEnumeration: java.lang.Object nextElement()>();
        r2 = (javax.naming.NameClassPair) $r41;
        r3 = virtualinvoke r2.<javax.naming.NameClassPair: java.lang.String getName()>();
        $z2 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");
        if $z2 != 0 goto label9;

        goto label12;

     label9:
        $r42 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames>;
        $r43 = $r42[i8];
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r43);
        if $z3 != 0 goto label11;

        $r44 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r45 = new java.lang.StringBuilder;
        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("    Additional JARs have been added : \'");
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r44.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r48);

     label10:
        return 1;

     label11:
        i8 = i8 + 1;

     label12:
        $z4 = interfaceinvoke r40.<javax.naming.NamingEnumeration: boolean hasMoreElements()>();
        if $z4 == 0 goto label13;

        if i8 < i7 goto label8;

     label13:
        $z5 = interfaceinvoke r40.<javax.naming.NamingEnumeration: boolean hasMoreElements()>();
        if $z5 == 0 goto label17;

        goto label16;

     label14:
        $r49 = interfaceinvoke r40.<javax.naming.NamingEnumeration: java.lang.Object nextElement()>();
        r50 = (javax.naming.NameClassPair) $r49;
        r51 = virtualinvoke r50.<javax.naming.NameClassPair: java.lang.String getName()>();
        $z6 = virtualinvoke r51.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");
        if $z6 == 0 goto label16;

        $r52 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r52.<org.apache.juli.logging.Log: void info(java.lang.Object)>("    Additional JARs have been added");

     label15:
        return 1;

     label16:
        $z7 = interfaceinvoke r40.<javax.naming.NamingEnumeration: boolean hasMoreElements()>();
        if $z7 != 0 goto label14;

        goto label21;

     label17:
        $r53 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames>;
        $i9 = lengthof $r53;
        if i8 >= $i9 goto label21;

        $r54 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r54.<org.apache.juli.logging.Log: void info(java.lang.Object)>("    Additional JARs have been added");

     label18:
        return 1;

     label19:
        $r55 := @caughtexception;
        r56 = $r55;
        $r57 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z8 = interfaceinvoke $r57.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z8 == 0 goto label21;

        $r58 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r59 = new java.lang.StringBuilder;
        specialinvoke $r59.<java.lang.StringBuilder: void <init>(java.lang.String)>("    Failed tracking modifications of \'");
        $r60 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getJarPath()>();
        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r58.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r63);
        goto label21;

     label20:
        $r64 := @caughtexception;
        r65 = $r64;
        $r66 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r67 = new java.lang.StringBuilder;
        specialinvoke $r67.<java.lang.StringBuilder: void <init>(java.lang.String)>("    Failed tracking modifications of \'");
        $r68 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getJarPath()>();
        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' : ");
        $r71 = virtualinvoke r65.<java.lang.ClassCastException: java.lang.String getMessage()>();
        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r66.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r73);

     label21:
        return 0;

        catch javax.naming.NamingException from label2 to label3 with label4;
        catch javax.naming.NamingException from label7 to label10 with label19;
        catch javax.naming.NamingException from label11 to label15 with label19;
        catch javax.naming.NamingException from label16 to label18 with label19;
        catch java.lang.ClassCastException from label7 to label10 with label20;
        catch java.lang.ClassCastException from label11 to label15 with label20;
        catch java.lang.ClassCastException from label16 to label18 with label20;
    }

    public java.lang.String toString()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.StringBuilder $r1, r2, $r30;
        int i0, $i1, $i2;
        java.util.Iterator r3;
        java.lang.Class $r4;
        java.lang.String $r5, $r7, $r15, $r22, $r32;
        boolean $z0, $z1;
        java.lang.String[] $r12, $r14, $r18;
        java.lang.ClassLoader $r19, $r21;
        java.util.List $r25, $r27;
        java.lang.Object $r28;
        java.lang.instrument.ClassFileTransformer r29;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = new java.lang.StringBuilder;
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n  context: ");
        $r7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n  delegate: ");
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n  repositories:\r\n");
        $r12 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        if $r12 == null goto label2;

        i0 = 0;
        goto label1;

     label0:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");
        $r14 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $r15 = $r14[i0];
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        i0 = i0 + 1;

     label1:
        $r18 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $i1 = lengthof $r18;
        if i0 < $i1 goto label0;

     label2:
        $r19 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        if $r19 == null goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("----------> Parent Classloader:\r\n");
        $r21 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

     label3:
        $r25 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.List transformers>;
        $i2 = interfaceinvoke $r25.<java.util.List: int size()>();
        if $i2 <= 0 goto label6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("----------> Class file transformers:\r\n");
        $r27 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.List transformers>;
        r3 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();
        goto label5;

     label4:
        $r28 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r29 = (java.lang.instrument.ClassFileTransformer) $r28;
        $r30 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);
        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

     label5:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label4;

     label6:
        $r32 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r32;
    }

    protected void addURL(java.net.URL)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.net.URL r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.net.URL;
        specialinvoke r0.<java.net.URLClassLoader: void addURL(java.net.URL)>(r1);
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories> = 1;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs> = null;
        return;
    }

    protected final java.lang.Class doDefineClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1;
        byte[] r2;
        int i0, i1;
        java.security.ProtectionDomain r3;
        java.lang.Class $r4;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: byte[];
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        r3 := @parameter4: java.security.ProtectionDomain;
        $r4 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>(r1, r2, i0, i1, r3);
        return $r4;
    }

    public java.lang.Class findClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, $r8, $r14, $r25, $r34, $r36, $r50, $r52, $r64, $r66, $r83, $r90, $r92;
        org.apache.juli.logging.Log $r2, $r5, $r11, $r12, $r16, $r17, $r20, $r21, $r30, $r40, $r41, $r46, $r56, $r57, $r60, $r70, $r71, $r72, $r73, $r77, $r78, $r79, $r80, $r84, $r88;
        java.lang.StringBuilder $r3, $r6, $r7, $r22, $r23, $r24, $r31, $r32, $r33, $r35, $r47, $r48, $r49, $r51, $r61, $r62, $r63, $r65, $r81, $r82, $r89, $r91;
        int i0;
        java.lang.Exception r4, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.lang.ClassNotFoundException $r9, $r18, $r26, r27, $r37, $r42, r43, $r53, $r67, $r74, $r75, r76;
        java.lang.SecurityManager $r10, $r13;
        java.lang.Class r19;
        java.security.AccessControlException $r28, r29, $r44, r45, $r58, r59;
        java.lang.RuntimeException $r38, r39, $r54, r55, $r68, r69;
        org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedGetClassLoader $r85;
        java.lang.Object $r86;
        java.lang.ClassLoader r87;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r5 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("    findClass(");
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r8);

     label0:
        $z1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean started>;
        if $z1 != 0 goto label1;

        $r9 = new java.lang.ClassNotFoundException;
        specialinvoke $r9.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);
        throw $r9;

     label1:
        $r10 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        if $r10 == null goto label7;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);
        if i0 < 0 goto label7;

     label2:
        $r11 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r11.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z2 == 0 goto label3;

        $r12 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void trace(java.lang.Object)>("      securityManager.checkPackageDefinition");

     label3:
        $r13 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        $r14 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        virtualinvoke $r13.<java.lang.SecurityManager: void checkPackageDefinition(java.lang.String)>($r14);

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;
        r4 = $r15;
        $r16 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r16.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z3 == 0 goto label6;

        $r17 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r17.<org.apache.juli.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>("      -->Exception-->ClassNotFoundException", r4);

     label6:
        $r18 = new java.lang.ClassNotFoundException;
        specialinvoke $r18.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r4);
        throw $r18;

     label7:
        r19 = null;

     label8:
        $r20 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r20.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z4 == 0 goto label9;

        $r21 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("      findClassInternal(");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r21.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r25);

     label9:
        $z5 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories>;
        if $z5 == 0 goto label16;

        $z6 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        if $z6 == 0 goto label16;

     label10:
        r19 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class findClass(java.lang.String)>(r1);

     label11:
        goto label16;

     label12:
        $r26 := @caughtexception;
        r27 = $r26;
        goto label16;

     label13:
        $r28 := @caughtexception;
        r29 = $r28;
        $r30 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>("WebappClassLoaderBase.findClassInternal(");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") security exception: ");
        $r34 = virtualinvoke r29.<java.security.AccessControlException: java.lang.String getMessage()>();
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r30.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r36, r29);
        $r37 = new java.lang.ClassNotFoundException;
        specialinvoke $r37.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r29);
        throw $r37;

     label14:
        $r38 := @caughtexception;
        r39 = $r38;
        $r40 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z7 = interfaceinvoke $r40.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z7 == 0 goto label15;

        $r41 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r41.<org.apache.juli.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>("      -->RuntimeException Rethrown", r39);

     label15:
        throw r39;

     label16:
        if r19 != null goto label24;

     label17:
        r19 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Class findClassInternal(java.lang.String)>(r1);

     label18:
        goto label24;

     label19:
        $r42 := @caughtexception;
        r43 = $r42;
        $z8 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories>;
        if $z8 == 0 goto label20;

        $z9 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        if $z9 == 0 goto label24;

     label20:
        throw r43;

     label21:
        $r44 := @caughtexception;
        r45 = $r44;
        $r46 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r47 = new java.lang.StringBuilder;
        specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>("WebappClassLoaderBase.findClassInternal(");
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") security exception: ");
        $r50 = virtualinvoke r45.<java.security.AccessControlException: java.lang.String getMessage()>();
        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r46.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r52, r45);
        $r53 = new java.lang.ClassNotFoundException;
        specialinvoke $r53.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r45);
        throw $r53;

     label22:
        $r54 := @caughtexception;
        r55 = $r54;
        $r56 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z10 = interfaceinvoke $r56.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z10 == 0 goto label23;

        $r57 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r57.<org.apache.juli.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>("      -->RuntimeException Rethrown", r55);

     label23:
        throw r55;

     label24:
        if r19 != null goto label30;

        $z11 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories>;
        if $z11 == 0 goto label30;

        $z12 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        if $z12 != 0 goto label30;

     label25:
        r19 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class findClass(java.lang.String)>(r1);

     label26:
        goto label30;

     label27:
        $r58 := @caughtexception;
        r59 = $r58;
        $r60 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r61 = new java.lang.StringBuilder;
        specialinvoke $r61.<java.lang.StringBuilder: void <init>(java.lang.String)>("WebappClassLoaderBase.findClassInternal(");
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") security exception: ");
        $r64 = virtualinvoke r59.<java.security.AccessControlException: java.lang.String getMessage()>();
        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r60.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r66, r59);
        $r67 = new java.lang.ClassNotFoundException;
        specialinvoke $r67.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r59);
        throw $r67;

     label28:
        $r68 := @caughtexception;
        r69 = $r68;
        $r70 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z13 = interfaceinvoke $r70.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z13 == 0 goto label29;

        $r71 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r71.<org.apache.juli.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>("      -->RuntimeException Rethrown", r69);

     label29:
        throw r69;

     label30:
        if r19 != null goto label34;

        $r72 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z14 = interfaceinvoke $r72.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z14 == 0 goto label31;

        $r73 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r73.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("    --> Returning ClassNotFoundException");

     label31:
        $r74 = new java.lang.ClassNotFoundException;
        specialinvoke $r74.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);
        throw $r74;

     label32:
        $r75 := @caughtexception;
        r76 = $r75;
        $r77 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z15 = interfaceinvoke $r77.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z15 == 0 goto label33;

        $r78 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r78.<org.apache.juli.logging.Log: void trace(java.lang.Object)>("    --> Passing on ClassNotFoundException");

     label33:
        throw r76;

     label34:
        $r79 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z16 = interfaceinvoke $r79.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z16 == 0 goto label35;

        $r80 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r81 = new java.lang.StringBuilder;
        specialinvoke $r81.<java.lang.StringBuilder: void <init>(java.lang.String)>("      Returning class ");
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r80.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r83);

     label35:
        $r84 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z17 = interfaceinvoke $r84.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z17 == 0 goto label38;

        $z18 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z18 == 0 goto label36;

        $r85 = new org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedGetClassLoader;
        specialinvoke $r85.<org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedGetClassLoader: void <init>(java.lang.Class)>(r19);
        $r86 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r85);
        r87 = (java.lang.ClassLoader) $r86;
        goto label37;

     label36:
        r87 = virtualinvoke r19.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label37:
        $r88 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r89 = new java.lang.StringBuilder;
        specialinvoke $r89.<java.lang.StringBuilder: void <init>(java.lang.String)>("      Loaded by ");
        $r90 = virtualinvoke r87.<java.lang.Object: java.lang.String toString()>();
        $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);
        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r88.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r92);

     label38:
        return r19;

        catch java.lang.Exception from label2 to label4 with label5;
        catch java.lang.ClassNotFoundException from label10 to label11 with label12;
        catch java.security.AccessControlException from label10 to label11 with label13;
        catch java.lang.RuntimeException from label10 to label11 with label14;
        catch java.lang.ClassNotFoundException from label17 to label18 with label19;
        catch java.security.AccessControlException from label17 to label18 with label21;
        catch java.lang.RuntimeException from label17 to label18 with label22;
        catch java.security.AccessControlException from label25 to label26 with label27;
        catch java.lang.RuntimeException from label25 to label26 with label28;
        catch java.lang.ClassNotFoundException from label8 to label32 with label32;
    }

    public java.net.URL findResource(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r5, $r11, $r20, $r23;
        org.apache.juli.logging.Log $r2, $r8, $r17, $r18, $r24;
        java.lang.StringBuilder $r3, $r9, $r10, $r19, $r21, $r22;
        java.net.URL r4;
        org.apache.catalina.loader.ResourceEntry r6;
        org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedFindResourceByName r7, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Map $r12;
        java.lang.Object $r13, $r16;
        java.lang.SecurityManager $r14;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r8 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("    findResource(");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r11);

     label0:
        r4 = null;
        r5 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String nameToPath(java.lang.String)>(r1);
        $z1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories>;
        if $z1 == 0 goto label1;

        $z2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        if $z2 == 0 goto label1;

        r4 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL findResource(java.lang.String)>(r1);

     label1:
        if r4 != null goto label4;

        $r12 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries>;
        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
        r6 = (org.apache.catalina.loader.ResourceEntry) $r13;
        if r6 != null goto label3;

        $r14 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        if $r14 == null goto label2;

        $r15 = new org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedFindResourceByName;
        specialinvoke $r15.<org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedFindResourceByName: void <init>(org.apache.catalina.loader.WebappClassLoaderBase,java.lang.String,java.lang.String,boolean)>(r0, r1, r5, 0);
        r7 = $r15;
        $r16 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r7);
        r6 = (org.apache.catalina.loader.ResourceEntry) $r16;
        goto label3;

     label2:
        r6 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String,boolean)>(r1, r5, 0);

     label3:
        if r6 == null goto label4;

        r4 = r6.<org.apache.catalina.loader.ResourceEntry: java.net.URL source>;

     label4:
        if r4 != null goto label5;

        $z3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories>;
        if $z3 == 0 goto label5;

        $z4 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        if $z4 != 0 goto label5;

        r4 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL findResource(java.lang.String)>(r1);

     label5:
        $r17 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r17.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label7;

        if r4 == null goto label6;

        $r18 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("    --> Returning \'");
        $r20 = virtualinvoke r4.<java.net.URL: java.lang.String toString()>();
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r23);
        goto label7;

     label6:
        $r24 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r24.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("    --> Resource not found, returning null");

     label7:
        return r4;
    }

    public java.util.Enumeration findResources(java.lang.String) throws java.io.IOException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r7, $r11, $r19, $r20, r22;
        org.apache.juli.logging.Log $r2, $r8;
        java.lang.StringBuilder $r3, $r9, $r10, $r17, $r21;
        java.util.LinkedHashSet r4, $r12;
        int i0, i1, i2, i3;
        java.util.Enumeration r5, r44, $r47;
        java.net.MalformedURLException r6, $r29, $r41, r42;
        boolean $z0, $z1, $z2, $z4, $z6, $z8, $z9, $z11;
        java.util.jar.JarFile[] $r13, $r32, r33, $r34;
        java.lang.String[] $r14, $r18;
        java.lang.Object $r15, $r45;
        java.net.URL $r16, $r28, $r39, $r40, $r46;
        javax.naming.directory.DirContext $r23;
        java.io.File $r25, $r27, $r38;
        java.io.File[] $r26, $r37;
        javax.naming.NamingException $r30, r31;
        java.util.jar.JarFile $r35;
        java.util.jar.JarEntry r36;
        java.lang.Throwable $r43;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r8 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("    findResources(");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r11);

     label0:
        $r12 = new java.util.LinkedHashSet;
        specialinvoke $r12.<java.util.LinkedHashSet: void <init>()>();
        r4 = $r12;
        $r13 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        i0 = lengthof $r13;
        $r14 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        i1 = lengthof $r14;
        $z1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories>;
        if $z1 == 0 goto label3;

        $z2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        if $z2 == 0 goto label3;

        r5 = specialinvoke r0.<java.net.URLClassLoader: java.util.Enumeration findResources(java.lang.String)>(r1);
        goto label2;

     label1:
        $r15 = interfaceinvoke r5.<java.util.Enumeration: java.lang.Object nextElement()>();
        $r16 = (java.net.URL) $r15;
        virtualinvoke r4.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r16);

     label2:
        $z4 = interfaceinvoke r5.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z4 != 0 goto label1;

     label3:
        i2 = 0;
        goto label11;

     label4:
        $r17 = new java.lang.StringBuilder;
        $r18 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $r19 = $r18[i2];
        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r19);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>($r20);
        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        $r23 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources>;
        interfaceinvoke $r23.<javax.naming.directory.DirContext: java.lang.Object lookup(java.lang.String)>(r22);

     label5:
        $r25 = new java.io.File;
        $r26 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        $r27 = $r26[i2];
        specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>($r27, r1);
        $r28 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL getURI(java.io.File)>($r25);
        virtualinvoke r4.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r28);

     label6:
        goto label10;

     label7:
        $r29 := @caughtexception;
        r6 = $r29;

     label8:
        goto label10;

     label9:
        $r30 := @caughtexception;
        r31 = $r30;

     label10:
        i2 = i2 + 1;

     label11:
        if i2 < i1 goto label4;

        $r32 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        r33 = $r32;
        entermonitor $r32;

     label12:
        $z6 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean openJARs()>();
        if $z6 == 0 goto label19;

        i3 = 0;
        goto label18;

     label13:
        $r34 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r35 = $r34[i3];
        r36 = virtualinvoke $r35.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>(r1);
        if r36 == null goto label17;

     label14:
        $r37 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        $r38 = $r37[i3];
        $r39 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL getURI(java.io.File)>($r38);
        r7 = virtualinvoke $r39.<java.net.URL: java.lang.String toString()>();
        $r40 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: java.net.URL buildJarUrl(java.lang.String,java.lang.String)>(r7, r1);
        virtualinvoke r4.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r40);

     label15:
        goto label17;

     label16:
        $r41 := @caughtexception;
        r42 = $r41;

     label17:
        i3 = i3 + 1;

     label18:
        if i3 < i0 goto label13;

     label19:
        exitmonitor r33;

     label20:
        goto label24;

     label21:
        $r43 := @caughtexception;

     label22:
        exitmonitor r33;

     label23:
        throw $r43;

     label24:
        $z8 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories>;
        if $z8 == 0 goto label27;

        $z9 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        if $z9 != 0 goto label27;

        r44 = specialinvoke r0.<java.net.URLClassLoader: java.util.Enumeration findResources(java.lang.String)>(r1);
        goto label26;

     label25:
        $r45 = interfaceinvoke r44.<java.util.Enumeration: java.lang.Object nextElement()>();
        $r46 = (java.net.URL) $r45;
        virtualinvoke r4.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r46);

     label26:
        $z11 = interfaceinvoke r44.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z11 != 0 goto label25;

     label27:
        $r47 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>(r4);
        return $r47;

        catch java.net.MalformedURLException from label5 to label6 with label7;
        catch javax.naming.NamingException from label4 to label8 with label9;
        catch java.net.MalformedURLException from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public java.net.URL getResource(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r4, r6, $r11, $r17, $r23, $r26, $r38, $r41, $r47, $r50;
        org.apache.juli.logging.Log $r2, $r8, $r12, $r13, $r20, $r21, $r35, $r36, $r44, $r45, $r51, $r52;
        java.lang.StringBuilder $r3, $r9, $r10, $r14, $r16, $r22, $r24, $r25, $r37, $r39, $r40, $r46, $r48, $r49;
        null_type n0;
        org.apache.catalina.loader.ResourceEntry r5;
        java.io.File r7, $r31, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.ClassLoader $r15, $r18, $r42;
        java.net.URL r19, r27, $r30, r43;
        java.util.Map $r28;
        java.lang.Object $r29;
        java.lang.Exception $r33, r34;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r8 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("getResource(");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r11);

     label0:
        n0 = null;
        $z1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate>;
        if $z1 == 0 goto label3;

        $r12 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r12.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label1;

        $r13 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Delegating to parent classloader ");
        $r15 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r17);

     label1:
        $r18 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        r19 = virtualinvoke $r18.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r1);
        if r19 == null goto label3;

        $r20 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r20.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label2;

        $r21 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("  --> Returning \'");
        $r23 = virtualinvoke r19.<java.net.URL: java.lang.String toString()>();
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r21.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r26);

     label2:
        return r19;

     label3:
        r27 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL findResource(java.lang.String)>(r1);
        if r27 == null goto label9;

        $z4 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean antiJARLocking>;
        if $z4 == 0 goto label7;

        r4 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String nameToPath(java.lang.String)>(r1);
        $r28 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries>;
        $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (org.apache.catalina.loader.ResourceEntry) $r29;

     label4:
        $r30 = r5.<org.apache.catalina.loader.ResourceEntry: java.net.URL codeBase>;
        r6 = virtualinvoke $r30.<java.net.URL: java.lang.String toString()>();
        $z5 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");
        if $z5 == 0 goto label7;

        $z6 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".class");
        if $z6 != 0 goto label7;

        $r31 = new java.io.File;
        $r32 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir>;
        specialinvoke $r31.<java.io.File: void <init>(java.io.File,java.lang.String)>($r32, r1);
        r7 = $r31;
        r27 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL getURI(java.io.File)>(r7);

     label5:
        goto label7;

     label6:
        $r33 := @caughtexception;
        r34 = $r33;

     label7:
        $r35 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z7 = interfaceinvoke $r35.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z7 == 0 goto label8;

        $r36 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("  --> Returning \'");
        $r38 = virtualinvoke r27.<java.net.URL: java.lang.String toString()>();
        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r36.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r41);

     label8:
        return r27;

     label9:
        $z8 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate>;
        if $z8 != 0 goto label11;

        $r42 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        r43 = virtualinvoke $r42.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r1);
        if r43 == null goto label11;

        $r44 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z9 = interfaceinvoke $r44.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z9 == 0 goto label10;

        $r45 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>("  --> Returning \'");
        $r47 = virtualinvoke r43.<java.net.URL: java.lang.String toString()>();
        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r45.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r50);

     label10:
        return r43;

     label11:
        $r51 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z10 = interfaceinvoke $r51.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z10 == 0 goto label12;

        $r52 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r52.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  --> Resource not found, returning null");

     label12:
        return null;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public java.io.InputStream getResourceAsStream(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, $r9, $r18, $r34;
        org.apache.juli.logging.Log $r2, $r6, $r11, $r12, $r13, $r14, $r21, $r22, $r23, $r24, $r25, $r26, $r29, $r30, $r37, $r38, $r39, $r40;
        java.lang.StringBuilder $r3, $r7, $r8, $r15, $r17, $r31, $r33;
        null_type n0;
        java.net.URL r4;
        java.io.IOException r5, $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.io.InputStream r10, r20, r27, r36;
        java.lang.ClassLoader $r16, $r19, $r32, $r35;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("getResourceAsStream(");
        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r9);

     label0:
        n0 = null;
        r10 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.InputStream findLoadedResource(java.lang.String)>(r1);
        if r10 == null goto label2;

        $r11 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r11.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label1;

        $r12 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  --> Returning stream from cache");

     label1:
        return r10;

     label2:
        $z2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate>;
        if $z2 == 0 goto label5;

        $r13 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r13.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label3;

        $r14 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Delegating to parent classloader ");
        $r16 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r18);

     label3:
        $r19 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        r20 = virtualinvoke $r19.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);
        if r20 == null goto label5;

        $r21 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r21.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label4;

        $r22 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r22.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  --> Returning stream from parent");

     label4:
        return r20;

     label5:
        $r23 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r23.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label6;

        $r24 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r24.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  Searching local repositories");

     label6:
        r4 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL findResource(java.lang.String)>(r1);
        if r4 == null goto label12;

        $r25 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z6 = interfaceinvoke $r25.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label7;

        $r26 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r26.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  --> Returning stream from local");

     label7:
        r27 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.InputStream findLoadedResource(java.lang.String)>(r1);

     label8:
        $z7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories>;
        if $z7 == 0 goto label11;

        if r27 != null goto label11;

        r27 = virtualinvoke r4.<java.net.URL: java.io.InputStream openStream()>();

     label9:
        goto label11;

     label10:
        $r28 := @caughtexception;
        r5 = $r28;

     label11:
        if r27 == null goto label12;

        return r27;

     label12:
        $z8 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate>;
        if $z8 != 0 goto label15;

        $r29 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z9 = interfaceinvoke $r29.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z9 == 0 goto label13;

        $r30 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Delegating to parent classloader unconditionally ");
        $r32 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r30.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r34);

     label13:
        $r35 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        r36 = virtualinvoke $r35.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);
        if r36 == null goto label15;

        $r37 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z10 = interfaceinvoke $r37.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z10 == 0 goto label14;

        $r38 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r38.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  --> Returning stream from parent");

     label14:
        return r36;

     label15:
        $r39 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z11 = interfaceinvoke $r39.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z11 == 0 goto label16;

        $r40 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r40.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  --> Resource not found, returning null");

     label16:
        return null;

        catch java.io.IOException from label8 to label9 with label10;
    }

    public java.lang.Class loadClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Class loadClass(java.lang.String,boolean)>(r1, 0);
        return $r2;
    }

    public java.lang.Class loadClass(java.lang.String, boolean) throws java.lang.ClassNotFoundException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r5, $r14, $r20, $r36, $r48, $r69;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.Object r2, $r6;
        null_type n0;
        java.lang.IllegalStateException r3, $r15, $r16;
        java.lang.SecurityException r4, $r37;
        org.apache.juli.logging.Log $r7, $r8, $r17, $r22, $r23, $r26, $r27, $r40, $r41, $r43, $r44, $r51, $r52, $r56, $r57, $r59, $r60, $r64, $r65, $r72, $r73;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r38, $r39, $r45, $r47, $r66, $r68;
        org.apache.tomcat.util.res.StringManager $r18;
        java.lang.Object[] $r19;
        java.lang.Class r21, r25, r30, r50, r58, r71;
        java.lang.ClassLoader $r29, $r46, $r49, $r67, $r70;
        java.lang.ClassNotFoundException $r32, r33, $r42, $r54, r55, $r62, r63, $r75, r76, $r78;
        java.lang.SecurityManager $r34, $r35;
        int i0;
        java.lang.Throwable $r77;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r6 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Object getClassLoadingLockInternal(java.lang.String)>(r1);
        r2 = $r6;
        entermonitor $r6;

     label0:
        $r7 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r7.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label1;

        $r8 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("loadClass(");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r14);

     label1:
        n0 = null;
        $z2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean started>;
        if $z2 != 0 goto label4;

     label2:
        $r15 = new java.lang.IllegalStateException;
        specialinvoke $r15.<java.lang.IllegalStateException: void <init>()>();
        throw $r15;

     label3:
        $r16 := @caughtexception;
        r3 = $r16;
        $r17 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r18 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r19 = newarray (java.lang.Object)[1];
        $r19[0] = r1;
        $r20 = virtualinvoke $r18.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.stopped", $r19);
        interfaceinvoke $r17.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r20, r3);

     label4:
        r21 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Class findLoadedClass0(java.lang.String)>(r1);
        if r21 == null goto label8;

        $r22 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r22.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label5;

        $r23 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r23.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  Returning class from cache");

     label5:
        if z0 == 0 goto label6;

        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void resolveClass(java.lang.Class)>(r21);

     label6:
        exitmonitor r2;

     label7:
        return r21;

     label8:
        r25 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Class findLoadedClass(java.lang.String)>(r1);
        if r25 == null goto label12;

        $r26 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r26.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label9;

        $r27 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r27.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  Returning class from cache");

     label9:
        if z0 == 0 goto label10;

        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void resolveClass(java.lang.Class)>(r25);

     label10:
        exitmonitor r2;

     label11:
        return r25;

     label12:
        $r29 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader j2seClassLoader>;
        r30 = virtualinvoke $r29.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);
        if r30 == null goto label17;

        if z0 == 0 goto label13;

        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void resolveClass(java.lang.Class)>(r30);

     label13:
        exitmonitor r2;

     label14:
        return r30;

     label15:
        $r32 := @caughtexception;

     label16:
        r33 = $r32;

     label17:
        $r34 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        if $r34 == null goto label23;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);
        if i0 < 0 goto label23;

     label18:
        $r35 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        $r36 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        virtualinvoke $r35.<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>($r36);

     label19:
        goto label23;

     label20:
        $r37 := @caughtexception;
        r4 = $r37;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("Security Violation, attempt to use Restricted Class: ");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r5 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        $z5 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("BeanInfo");
        if $z5 == 0 goto label21;

        $r40 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r40.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>(r5, r4);
        goto label22;

     label21:
        $r41 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r41.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>(r5, r4);

     label22:
        $r42 = new java.lang.ClassNotFoundException;
        specialinvoke $r42.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>(r5, r4);
        throw $r42;

     label23:
        $z6 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean delegate>;
        if $z6 != 0 goto label24;

        $z7 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean filter(java.lang.String)>(r1);
        if $z7 != 0 goto label24;

        $z8 = 0;
        goto label25;

     label24:
        $z8 = 1;

     label25:
        z9 = $z8;
        if z9 == 0 goto label32;

        $r43 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z10 = interfaceinvoke $r43.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z10 == 0 goto label26;

        $r44 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r45 = new java.lang.StringBuilder;
        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Delegating to parent classloader1 ");
        $r46 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r44.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r48);

     label26:
        $r49 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        r50 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 0, $r49);
        if r50 == null goto label32;

        $r51 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z11 = interfaceinvoke $r51.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z11 == 0 goto label27;

        $r52 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r52.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  Loading class from parent");

     label27:
        if z0 == 0 goto label28;

        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void resolveClass(java.lang.Class)>(r50);

     label28:
        exitmonitor r2;

     label29:
        return r50;

     label30:
        $r54 := @caughtexception;

     label31:
        r55 = $r54;

     label32:
        $r56 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z12 = interfaceinvoke $r56.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z12 == 0 goto label33;

        $r57 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r57.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  Searching local repositories");

     label33:
        r58 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Class findClass(java.lang.String)>(r1);
        if r58 == null goto label39;

        $r59 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z13 = interfaceinvoke $r59.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z13 == 0 goto label34;

        $r60 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r60.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  Loading class from local repository");

     label34:
        if z0 == 0 goto label35;

        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void resolveClass(java.lang.Class)>(r58);

     label35:
        exitmonitor r2;

     label36:
        return r58;

     label37:
        $r62 := @caughtexception;

     label38:
        r63 = $r62;

     label39:
        if z9 != 0 goto label46;

        $r64 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z14 = interfaceinvoke $r64.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z14 == 0 goto label40;

        $r65 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r66 = new java.lang.StringBuilder;
        specialinvoke $r66.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Delegating to parent classloader at end: ");
        $r67 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r65.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r69);

     label40:
        $r70 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        r71 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 0, $r70);
        if r71 == null goto label46;

        $r72 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z15 = interfaceinvoke $r72.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z15 == 0 goto label41;

        $r73 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r73.<org.apache.juli.logging.Log: void debug(java.lang.Object)>("  Loading class from parent");

     label41:
        if z0 == 0 goto label42;

        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void resolveClass(java.lang.Class)>(r71);

     label42:
        exitmonitor r2;

     label43:
        return r71;

     label44:
        $r75 := @caughtexception;

     label45:
        r76 = $r75;

     label46:
        exitmonitor r2;

     label47:
        goto label51;

     label48:
        $r77 := @caughtexception;

     label49:
        exitmonitor r2;

     label50:
        throw $r77;

     label51:
        $r78 = new java.lang.ClassNotFoundException;
        specialinvoke $r78.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);
        throw $r78;

        catch java.lang.IllegalStateException from label2 to label3 with label3;
        catch java.lang.ClassNotFoundException from label12 to label13 with label15;
        catch java.lang.SecurityException from label18 to label19 with label20;
        catch java.lang.ClassNotFoundException from label26 to label28 with label30;
        catch java.lang.ClassNotFoundException from label33 to label35 with label37;
        catch java.lang.ClassNotFoundException from label40 to label42 with label44;
        catch java.lang.Throwable from label0 to label7 with label48;
        catch java.lang.Throwable from label8 to label11 with label48;
        catch java.lang.Throwable from label12 to label14 with label48;
        catch java.lang.Throwable from label16 to label29 with label48;
        catch java.lang.Throwable from label31 to label36 with label48;
        catch java.lang.Throwable from label38 to label43 with label48;
        catch java.lang.Throwable from label45 to label47 with label48;
        catch java.lang.Throwable from label49 to label50 with label48;
    }

    private java.lang.Object getClassLoadingLockInternal(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.Exception r2, $r7;
        java.lang.reflect.Method $r3, $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        $z0 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: boolean isJre7Available()>();
        if $z0 == 0 goto label3;

        $r3 = <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.reflect.Method GET_CLASSLOADING_LOCK_METHOD>;
        if $r3 == null goto label3;

     label0:
        $r4 = <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.reflect.Method GET_CLASSLOADING_LOCK_METHOD>;
        $r5 = newarray (java.lang.Object)[1];
        $r5[0] = r1;
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r5);

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;
        r2 = $r7;

     label3:
        return r0;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    protected java.security.PermissionCollection getPermissions(java.security.CodeSource)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.security.CodeSource r1;
        java.lang.String r2;
        java.security.PermissionCollection r3, $r9;
        java.util.Iterator r4;
        java.security.Permission r5;
        java.net.URL $r6;
        java.util.HashMap $r7, $r12;
        java.lang.Object $r8, $r11;
        java.util.ArrayList $r10;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.security.CodeSource;
        $r6 = virtualinvoke r1.<java.security.CodeSource: java.net.URL getLocation()>();
        r2 = virtualinvoke $r6.<java.net.URL: java.lang.String toString()>();
        $r7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap loaderPC>;
        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);
        $r9 = (java.security.PermissionCollection) $r8;
        r3 = $r9;
        if $r9 != null goto label2;

        r3 = specialinvoke r0.<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>(r1);
        if r3 == null goto label2;

        $r10 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.ArrayList permissionList>;
        r4 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.security.Permission) $r11;
        virtualinvoke r3.<java.security.PermissionCollection: void add(java.security.Permission)>(r5);

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        $r12 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap loaderPC>;
        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label2:
        return r3;
    }

    public boolean check(java.security.Permission)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.security.Permission r1;
        boolean $z0, $z1;
        java.security.Policy r2;
        org.apache.catalina.loader.ResourceEntry r3;
        java.security.CodeSource r4, $r6;
        java.security.PermissionCollection r5;
        java.net.URL $r7;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.security.Permission;
        $z0 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z0 != 0 goto label0;

        return 1;

     label0:
        r2 = staticinvoke <java.security.Policy: java.security.Policy getPolicy()>();
        if r2 == null goto label1;

        r3 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String,boolean)>("/", "/", 0);
        if r3 == null goto label1;

        $r6 = new java.security.CodeSource;
        $r7 = r3.<org.apache.catalina.loader.ResourceEntry: java.net.URL codeBase>;
        specialinvoke $r6.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>($r7, null);
        r4 = $r6;
        r5 = virtualinvoke r2.<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.CodeSource)>(r4);
        $z1 = virtualinvoke r5.<java.security.PermissionCollection: boolean implies(java.security.Permission)>(r1);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.net.URL[] getURLs()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.net.URL[] r1, r2, $r3, $r4, $r6, $r19, $r20, $r22;
        int i0, i1, i2, i3, i4, $i5, $i6, i7, $i8, i9, i10, $i11, i12, i13, $i14;
        java.lang.Object $r5, $r21;
        java.io.File[] $r7, $r8, $r10, $r13;
        boolean $z0, $z1;
        java.net.URL $r9, $r12, $r15, $r16;
        java.io.File $r11, $r14;
        java.net.MalformedURLException $r17, r18;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs>;
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs>;
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();
        $r6 = (java.net.URL[]) $r5;
        return $r6;

     label0:
        r1 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL[] getURLs()>();
        $r7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        i0 = lengthof $r7;
        $r8 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        i1 = lengthof $r8;
        i2 = lengthof r1;
        i3 = 0;

     label1:
        $i5 = i0 + i1;
        $i6 = $i5 + i2;
        r2 = newarray (java.net.URL)[$i6];
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        if $z0 == 0 goto label4;

        i4 = 0;
        goto label3;

     label2:
        $r9 = r1[i4];
        r2[i4] = $r9;
        i4 = i4 + 1;

     label3:
        if i4 < i2 goto label2;

        i3 = i2;

     label4:
        i7 = 0;
        goto label6;

     label5:
        $i8 = i3 + i7;
        $r10 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        $r11 = $r10[i7];
        $r12 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL getURI(java.io.File)>($r11);
        r2[$i8] = $r12;
        i7 = i7 + 1;

     label6:
        if i7 < i0 goto label5;

        i9 = i3 + i0;
        i10 = 0;
        goto label8;

     label7:
        $i11 = i9 + i10;
        $r13 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        $r14 = $r13[i10];
        $r15 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL getURI(java.io.File)>($r14);
        r2[$i11] = $r15;
        i10 = i10 + 1;

     label8:
        if i10 < i1 goto label7;

        i12 = i9 + i1;
        $z1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean searchExternalFirst>;
        if $z1 != 0 goto label11;

        i13 = 0;
        goto label10;

     label9:
        $i14 = i12 + i13;
        $r16 = r1[i13];
        r2[$i14] = $r16;
        i13 = i13 + 1;

     label10:
        if i13 < i2 goto label9;

     label11:
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs> = r2;

     label12:
        goto label14;

     label13:
        $r17 := @caughtexception;
        r18 = $r17;
        $r19 = newarray (java.net.URL)[0];
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs> = $r19;

     label14:
        $r20 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs>;
        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.Object clone()>();
        $r22 = (java.net.URL[]) $r21;
        return $r22;

        catch java.net.MalformedURLException from label1 to label12 with label13;
    }

    public void addLifecycleListener(org.apache.catalina.LifecycleListener)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        org.apache.catalina.LifecycleListener r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: org.apache.catalina.LifecycleListener;
        return;
    }

    public org.apache.catalina.LifecycleListener[] findLifecycleListeners()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        org.apache.catalina.LifecycleListener[] $r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = newarray (org.apache.catalina.LifecycleListener)[0];
        return $r1;
    }

    public void removeLifecycleListener(org.apache.catalina.LifecycleListener)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        org.apache.catalina.LifecycleListener r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: org.apache.catalina.LifecycleListener;
        return;
    }

    public org.apache.catalina.LifecycleState getState()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        org.apache.catalina.LifecycleState $r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = <org.apache.catalina.LifecycleState: org.apache.catalina.LifecycleState NEW>;
        return $r1;
    }

    public java.lang.String getStateName()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        org.apache.catalina.LifecycleState $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: org.apache.catalina.LifecycleState getState()>();
        $r2 = virtualinvoke $r1.<org.apache.catalina.LifecycleState: java.lang.String toString()>();
        return $r2;
    }

    public void init()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        return;
    }

    public void start() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        null_type n0;
        java.lang.SecurityException r1, $r4;
        java.net.MalformedURLException r2, $r11;
        java.lang.String r3, $r6;
        int $i0, i1, $i2;
        java.lang.String[] $r5, $r12;
        boolean $z0;
        java.io.File[] $r7;
        java.io.File $r8;
        java.net.URI $r9;
        java.net.URL $r10;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean started> = 1;
        n0 = null;

     label0:
        r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.encoding");

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        return;

     label3:
        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>("EBCDIC");
        if $i0 == -1 goto label4;

        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean needConvert> = 1;

     label4:
        i1 = 0;
        goto label10;

     label5:
        $r5 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $r6 = $r5[i1];
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("/WEB-INF/classes/");
        if $z0 == 0 goto label9;

     label6:
        $r7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        $r8 = $r7[i1];
        $r9 = virtualinvoke $r8.<java.io.File: java.net.URI toURI()>();
        $r10 = virtualinvoke $r9.<java.net.URI: java.net.URL toURL()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL webInfClassesCodeBase> = $r10;

     label7:
        goto label11;

     label8:
        $r11 := @caughtexception;
        r2 = $r11;
        goto label11;

     label9:
        i1 = i1 + 1;

     label10:
        $r12 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $i2 = lengthof $r12;
        if i1 < $i2 goto label5;

     label11:
        return;

        catch java.lang.SecurityException from label0 to label1 with label2;
        catch java.net.MalformedURLException from label6 to label7 with label8;
    }

    public boolean isStarted()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean started>;
        return $z0;
    }

    public void stop() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        int i0, i1, i2, i3;
        java.io.IOException r1, $r9;
        java.io.File[] $r2, $r3;
        java.util.jar.JarFile[] $r4, $r5, $r7, $r10;
        java.util.jar.JarFile $r6, $r8;
        java.util.HashMap $r11, $r14;
        java.util.Map $r12;
        java.util.ArrayList $r13;
        java.io.File $r15, $r16;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void clearReferences()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean started> = 0;
        $r2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        i0 = lengthof $r2;
        i1 = 0;
        goto label1;

     label0:
        $r3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        $r3[i1] = null;
        i1 = i1 + 1;

     label1:
        if i1 < i0 goto label0;

        $r4 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        i2 = lengthof $r4;
        i3 = 0;
        goto label6;

     label2:
        $r5 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r6 = $r5[i3];
        if $r6 == null goto label5;

        $r7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r8 = $r7[i3];
        virtualinvoke $r8.<java.util.jar.JarFile: void close()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;
        r1 = $r9;

     label5:
        $r10 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r10[i3] = null;
        i3 = i3 + 1;

     label6:
        if i3 < i2 goto label2;

        $r11 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap notFoundResources>;
        virtualinvoke $r11.<java.util.HashMap: void clear()>();
        $r12 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries>;
        interfaceinvoke $r12.<java.util.Map: void clear()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL[] repositoryURLs> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String jarPath> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] jarNames> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean hasExternalRepositories> = 0;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent> = null;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL webInfClassesCodeBase> = null;
        $r13 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.ArrayList permissionList>;
        virtualinvoke $r13.<java.util.ArrayList: void clear()>();
        $r14 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap loaderPC>;
        virtualinvoke $r14.<java.util.HashMap: void clear()>();
        $r15 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir>;
        if $r15 == null goto label7;

        $r16 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir>;
        staticinvoke <org.apache.catalina.loader.WebappClassLoaderBase: void deleteDir(java.io.File)>($r16);

     label7:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void destroy()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        return;
    }

    public void closeJARs(boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean z0, $z1;
        java.util.jar.JarFile[] r1, $r3, $r4, $r5, $r7, $r9, $r13;
        int i0, $i1, $i2, $i3, $i6, $i10;
        java.io.IOException r2, $r10;
        long $l4, $l5, $l7, $l8;
        byte $b9;
        java.util.jar.JarFile $r6, $r8;
        org.apache.juli.logging.Log $r11, $r12;
        java.lang.Throwable $r14;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        z0 := @parameter0: boolean;
        $r3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $i1 = lengthof $r3;
        if $i1 <= 0 goto label13;

        if z0 != 0 goto label0;

        $i2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: int jarOpenInterval>;
        if $i2 <= 0 goto label13;

     label0:
        $r4 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        r1 = $r4;
        entermonitor $r4;

     label1:
        if z0 != 0 goto label2;

        $i3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: int jarOpenInterval>;
        if $i3 <= 0 goto label8;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l5 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long lastJarAccessed>;
        $i6 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: int jarOpenInterval>;
        $l7 = (long) $i6;
        $l8 = $l5 + $l7;
        $b9 = $l4 cmp $l8;
        if $b9 <= 0 goto label8;

     label2:
        i0 = 0;
        goto label7;

     label3:
        $r5 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r6 = $r5[i0];
        if $r6 == null goto label6;

        $r7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r8 = $r7[i0];
        virtualinvoke $r8.<java.util.jar.JarFile: void close()>();
        $r9 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r9[i0] = null;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;
        r2 = $r10;
        $r11 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r11.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label6;

        $r12 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Failed to close JAR", r2);

     label6:
        i0 = i0 + 1;

     label7:
        $r13 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $i10 = lengthof $r13;
        if i0 < $i10 goto label3;

     label8:
        exitmonitor r1;

     label9:
        goto label13;

     label10:
        $r14 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r14;

     label13:
        return;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label9 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    protected java.lang.ClassLoader getJavaseClassLoader()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.ClassLoader $r1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader j2seClassLoader>;
        return $r1;
    }

    protected void setJavaseClassLoader(java.lang.ClassLoader)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.ClassLoader r1;
        org.apache.tomcat.util.res.StringManager $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.ClassLoader;
        if r1 != null goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("webappClassLoader.javaseClassLoaderNull");
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader j2seClassLoader> = r1;
        return;
    }

    protected void clearReferences()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void clearReferencesJdbc()>();
        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void clearReferencesThreads()>();
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesObjectStreamClassCaches>;
        if $z0 == 0 goto label0;

        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void clearReferencesObjectStreamClassCaches()>();

     label0:
        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void checkThreadLocalsForLeaks()>();
        $z1 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesRmiTargets>;
        if $z1 == 0 goto label1;

        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void clearReferencesRmiTargets()>();

     label1:
        $z2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStatic>;
        if $z2 == 0 goto label2;

        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void clearReferencesStaticFinal()>();

     label2:
        staticinvoke <org.apache.tomcat.util.IntrospectionUtils: void clear()>();
        $z3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesLogFactoryRelease>;
        if $z3 == 0 goto label3;

        staticinvoke <org.apache.juli.logging.LogFactory: void release(java.lang.ClassLoader)>(r0);

     label3:
        staticinvoke <java.beans.Introspector: void flushCaches()>();
        return;
    }

    private final void clearReferencesJdbc()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.io.InputStream r1;
        byte[] r2, r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object r4, $r17, $r18;
        java.util.List r5;
        java.util.Iterator r6;
        java.lang.String r7, $r22, $r23, $r30, $r31, $r36, $r37, $r44, $r45, $r51, $r52;
        java.io.IOException r8, $r32, $r39, r40, $r46, r47;
        java.lang.Throwable r9, r26, $r38;
        java.lang.Class $r10, r12, $r13;
        java.security.ProtectionDomain $r11;
        java.lang.Class[] $r14;
        java.lang.reflect.Method $r15;
        java.lang.Object[] $r16, $r21, $r29, $r35, $r43, $r50;
        org.apache.juli.logging.Log $r19, $r27, $r33, $r41, $r48;
        org.apache.tomcat.util.res.StringManager $r20, $r28, $r34, $r42, $r49;
        boolean $z0;
        java.lang.Exception $r24, r25;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.InputStream getResourceAsStream(java.lang.String)>("org/apache/catalina/loader/JdbcLeakPrevention.class");
        r2 = newarray (byte)[2048];
        i0 = 0;

     label0:
        $i2 = lengthof r2;
        $i3 = $i2 - i0;
        i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, i0, $i3);
        goto label3;

     label1:
        i0 = i0 + i1;
        $i4 = lengthof r2;
        if i0 != $i4 goto label2;

        $i5 = lengthof r2;
        $i6 = $i5 * 2;
        r3 = newarray (byte)[$i6];
        $i7 = lengthof r2;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i7);
        r2 = r3;

     label2:
        $i8 = lengthof r2;
        $i9 = $i8 - i0;
        i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, i0, $i9);

     label3:
        if i1 > -1 goto label1;

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r11 = virtualinvoke $r10.<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>();
        r12 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>("org.apache.catalina.loader.JdbcLeakPrevention", r2, 0, i0, $r11);
        r4 = virtualinvoke r12.<java.lang.Class: java.lang.Object newInstance()>();
        $r13 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r14 = newarray (java.lang.Class)[0];
        $r15 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("clearJdbcDriverRegistrations", $r14);
        $r16 = newarray (java.lang.Object)[0];
        $r17 = virtualinvoke $r15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r16);
        r5 = (java.util.List) $r17;
        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();
        goto label5;

     label4:
        $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r18;
        $r19 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r20 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r21 = newarray (java.lang.Object)[2];
        $r22 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r21[0] = $r22;
        $r21[1] = r7;
        $r23 = virtualinvoke $r20.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearJdbc", $r21);
        interfaceinvoke $r19.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r23);

     label5:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label4;

     label6:
        goto label17;

     label7:
        $r24 := @caughtexception;
        r25 = $r24;
        r26 = staticinvoke <org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>(r25);
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r26);
        $r27 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r28 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r29 = newarray (java.lang.Object)[1];
        $r30 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r29[0] = $r30;
        $r31 = virtualinvoke $r28.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.jdbcRemoveFailed", $r29);
        interfaceinvoke $r27.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r31, r26);

     label8:
        if r1 == null goto label21;

     label9:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label10:
        goto label21;

     label11:
        $r32 := @caughtexception;
        r8 = $r32;
        $r33 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r34 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r35 = newarray (java.lang.Object)[1];
        $r36 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r35[0] = $r36;
        $r37 = virtualinvoke $r34.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.jdbcRemoveStreamError", $r35);
        interfaceinvoke $r33.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r37, r8);
        goto label21;

     label12:
        $r38 := @caughtexception;
        r9 = $r38;
        if r1 == null goto label16;

     label13:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r39 := @caughtexception;
        r40 = $r39;
        $r41 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r42 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r43 = newarray (java.lang.Object)[1];
        $r44 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r43[0] = $r44;
        $r45 = virtualinvoke $r42.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.jdbcRemoveStreamError", $r43);
        interfaceinvoke $r41.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r45, r40);

     label16:
        throw r9;

     label17:
        if r1 == null goto label21;

     label18:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label19:
        goto label21;

     label20:
        $r46 := @caughtexception;
        r47 = $r46;
        $r48 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r49 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r50 = newarray (java.lang.Object)[1];
        $r51 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r50[0] = $r51;
        $r52 = virtualinvoke $r49.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.jdbcRemoveStreamError", $r50);
        interfaceinvoke $r48.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r52, r47);

     label21:
        return;

        catch java.lang.Exception from label0 to label6 with label7;
        catch java.io.IOException from label9 to label10 with label11;
        catch java.lang.Throwable from label0 to label8 with label12;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label18 to label19 with label20;
    }

    private final void clearReferencesStaticFinal()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.util.ArrayList $r1, r2;
        java.util.Iterator r3, r18;
        org.apache.catalina.loader.ResourceEntry r4, r20;
        java.lang.Class r5, $r12, $r21, r22, $r24, $r26, $r28;
        java.lang.reflect.Field[] r6, r23;
        int i0, i1, $i2, $i3, i4, $i5, $i6;
        java.lang.reflect.Field r7, $r13, $r14;
        java.lang.Throwable r8, $r16, r17, $r40, $r50, r51;
        java.util.Map $r9;
        java.util.Collection $r10;
        java.lang.Object $r11, $r19, $r30;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.String $r25, $r27, $r29, $r34, $r37, $r39, $r44, $r47, $r49, $r55, $r57;
        org.apache.juli.logging.Log $r31, $r32, $r41, $r42, $r52, $r53;
        java.lang.StringBuilder $r33, $r35, $r36, $r38, $r43, $r45, $r46, $r48, $r54, $r56;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r9 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries>;
        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Collection values()>();
        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r10);
        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();
        goto label7;

     label0:
        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.apache.catalina.loader.ResourceEntry) $r11;
        $r12 = r4.<org.apache.catalina.loader.ResourceEntry: java.lang.Class loadedClass>;
        if $r12 == null goto label7;

        r5 = r4.<org.apache.catalina.loader.ResourceEntry: java.lang.Class loadedClass>;

     label1:
        r6 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();
        i0 = 0;
        goto label4;

     label2:
        $r13 = r6[i0];
        $i2 = virtualinvoke $r13.<java.lang.reflect.Field: int getModifiers()>();
        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i2);
        if $z1 == 0 goto label3;

        $r14 = r6[i0];
        virtualinvoke $r14.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
        goto label7;

     label3:
        i0 = i0 + 1;

     label4:
        $i3 = lengthof r6;
        if i0 < $i3 goto label2;

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;
        r17 = $r16;

     label7:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label0;

        r18 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();
        goto label20;

     label8:
        $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();
        r20 = (org.apache.catalina.loader.ResourceEntry) $r19;
        $r21 = r20.<org.apache.catalina.loader.ResourceEntry: java.lang.Class loadedClass>;
        if $r21 == null goto label20;

        r22 = r20.<org.apache.catalina.loader.ResourceEntry: java.lang.Class loadedClass>;

     label9:
        r23 = virtualinvoke r22.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();
        i4 = 0;
        goto label17;

     label10:
        r7 = r23[i4];
        i1 = virtualinvoke r7.<java.lang.reflect.Field: int getModifiers()>();
        $r24 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Class getType()>();
        $z3 = virtualinvoke $r24.<java.lang.Class: boolean isPrimitive()>();
        if $z3 != 0 goto label16;

        $r25 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.String getName()>();
        $i5 = virtualinvoke $r25.<java.lang.String: int indexOf(int)>(36);
        if $i5 == -1 goto label11;

        goto label16;

     label11:
        $z4 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(i1);
        if $z4 == 0 goto label16;

     label12:
        virtualinvoke r7.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        $z5 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>(i1);
        if $z5 == 0 goto label13;

        $r26 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Class getType()>();
        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();
        $z6 = virtualinvoke $r27.<java.lang.String: boolean startsWith(java.lang.String)>("java.");
        if $z6 != 0 goto label16;

        $r28 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Class getType()>();
        $r29 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();
        $z7 = virtualinvoke $r29.<java.lang.String: boolean startsWith(java.lang.String)>("javax.");
        if $z7 != 0 goto label16;

        $r30 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void nullInstance(java.lang.Object)>($r30);
        goto label16;

     label13:
        virtualinvoke r7.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, null);
        $r31 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z8 = interfaceinvoke $r31.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z8 == 0 goto label16;

        $r32 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>("Set field ");
        $r34 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.String getName()>();
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to null in class ");
        $r37 = virtualinvoke r22.<java.lang.Class: java.lang.String getName()>();
        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r32.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r39);

     label14:
        goto label16;

     label15:
        $r40 := @caughtexception;
        r8 = $r40;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r8);
        $r41 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z9 = interfaceinvoke $r41.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z9 == 0 goto label16;

        $r42 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r43 = new java.lang.StringBuilder;
        specialinvoke $r43.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not set field ");
        $r44 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.String getName()>();
        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to null in class ");
        $r47 = virtualinvoke r22.<java.lang.Class: java.lang.String getName()>();
        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r42.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r49, r8);

     label16:
        i4 = i4 + 1;

     label17:
        $i6 = lengthof r23;
        if i4 < $i6 goto label10;

     label18:
        goto label20;

     label19:
        $r50 := @caughtexception;
        r51 = $r50;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r51);
        $r52 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z10 = interfaceinvoke $r52.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z10 == 0 goto label20;

        $r53 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r54 = new java.lang.StringBuilder;
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not clean fields for class ");
        $r55 = virtualinvoke r22.<java.lang.Class: java.lang.String getName()>();
        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r53.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r57, r51);

     label20:
        $z11 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();
        if $z11 != 0 goto label8;

        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label12 to label14 with label15;
        catch java.lang.Throwable from label9 to label18 with label19;
    }

    private void nullInstance(java.lang.Object)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Object r1, r4;
        java.lang.reflect.Field[] r2;
        int i0, i1, $i2, $i3;
        java.lang.reflect.Field r3;
        java.lang.Class r5, $r6, $r7, $r15, $r29, $r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r8, $r12, $r16, $r19, $r22, $r26, $r30, $r32, $r38, $r42, $r44;
        org.apache.juli.logging.Log $r9, $r10, $r23, $r24, $r35, $r36;
        java.lang.StringBuilder $r11, $r13, $r14, $r17, $r18, $r20, $r21, $r25, $r27, $r28, $r31, $r37, $r39, $r40, $r43;
        java.lang.Throwable $r33, r34;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        return;

     label0:
        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        r2 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();
        i0 = 0;
        goto label9;

     label1:
        r3 = r2[i0];
        i1 = virtualinvoke r3.<java.lang.reflect.Field: int getModifiers()>();
        $r7 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();
        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isPrimitive()>();
        if $z0 != 0 goto label8;

        $r8 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();
        $i2 = virtualinvoke $r8.<java.lang.String: int indexOf(int)>(36);
        if $i2 == -1 goto label2;

        goto label8;

     label2:
        virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(i1);
        if $z1 == 0 goto label4;

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>(i1);
        if $z2 == 0 goto label4;

     label3:
        goto label8;

     label4:
        r4 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);
        if r4 == null goto label8;

        r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $z3 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean loadedByThisOrChild(java.lang.Object)>(r5);
        if $z3 != 0 goto label5;

        $r9 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z4 = interfaceinvoke $r9.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z4 == 0 goto label8;

        $r10 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Not setting field ");
        $r12 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to null in object of class ");
        $r15 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();
        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because the referenced object was of type ");
        $r19 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which was not loaded by this web application class loader.");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r22);
        goto label8;

     label5:
        virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, null);
        $r23 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z5 = interfaceinvoke $r23.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label8;

        $r24 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("Set field ");
        $r26 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to null in class ");
        $r29 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();
        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r24.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r32);

     label6:
        goto label8;

     label7:
        $r33 := @caughtexception;
        r34 = $r33;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r34);
        $r35 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z6 = interfaceinvoke $r35.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label8;

        $r36 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not set field ");
        $r38 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();
        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to null in object instance of class ");
        $r41 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r42 = virtualinvoke $r41.<java.lang.Class: java.lang.String getName()>();
        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r36.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r44, r34);

     label8:
        i0 = i0 + 1;

     label9:
        $i3 = lengthof r2;
        if i0 < $i3 goto label1;

        return;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
    }

    private void clearReferencesThreads()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Thread[] r1, r3;
        java.util.ArrayList r2, $r11;
        int i0, i1, i2, i3, i4;
        java.lang.Thread r4, $r13, r82;
        java.lang.ClassLoader r5, $r17;
        java.lang.ThreadGroup r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12, $z13, $z14;
        java.lang.Object r7, r45, $r81;
        java.lang.String[] r8, $r35;
        java.lang.String r9, $r15, $r16, $r20, $r22, $r26, $r27, $r28, $r32, $r33, $r34, $r40, $r42, $r53, $r54, $r55, $r61, $r62, $r63, $r69, $r70, $r71, $r77, $r78, $r79;
        java.lang.reflect.Field r10, r44;
        java.util.List $r14;
        org.apache.juli.logging.Log $r18, $r23, $r29, $r50, $r58, $r66, $r74;
        org.apache.tomcat.util.res.StringManager $r19, $r24, $r30, $r51, $r59, $r67, $r75;
        java.lang.Class $r21, $r36, $r39, $r41, $r43;
        java.lang.Object[] $r25, $r31, $r52, $r60, $r68, $r76;
        java.lang.NoSuchFieldException $r37, r38, $r56, r57;
        java.util.concurrent.ThreadPoolExecutor $r46;
        java.lang.SecurityException $r48, r49;
        java.lang.IllegalArgumentException $r64, r65;
        java.lang.IllegalAccessException $r72, r73;
        java.util.Iterator r80;
        java.lang.InterruptedException $r83, r84;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Thread[] getThreads()>();
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r2 = $r11;
        r3 = r1;
        i0 = lengthof r1;
        i1 = 0;
        goto label23;

     label0:
        r4 = r3[i1];
        if r4 == null goto label22;

        r5 = virtualinvoke r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        if r5 != r0 goto label22;

        $r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        if r4 != $r13 goto label1;

        goto label22;

     label1:
        r6 = virtualinvoke r4.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();
        if r6 == null goto label2;

        $r14 = <org.apache.catalina.loader.WebappClassLoaderBase: java.util.List JVM_THREAD_GROUP_NAMES>;
        $r15 = virtualinvoke r6.<java.lang.ThreadGroup: java.lang.String getName()>();
        $z1 = interfaceinvoke $r14.<java.util.List: boolean contains(java.lang.Object)>($r15);
        if $z1 == 0 goto label2;

        $z2 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesHttpClientKeepAliveThread>;
        if $z2 == 0 goto label22;

        $r16 = virtualinvoke r4.<java.lang.Thread: java.lang.String getName()>();
        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("Keep-Alive-Timer");
        if $z3 == 0 goto label22;

        $r17 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        virtualinvoke r4.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r17);
        $r18 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r19 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("webappClassLoader.checkThreadsHttpClient");
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r20);
        goto label22;

     label2:
        $z4 = virtualinvoke r4.<java.lang.Thread: boolean isAlive()>();
        if $z4 != 0 goto label3;

        goto label22;

     label3:
        $r21 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();
        $z5 = virtualinvoke $r22.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Timer");
        if $z5 == 0 goto label4;

        $z6 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopTimerThreads>;
        if $z6 == 0 goto label4;

        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void clearReferencesStopTimerThread(java.lang.Thread)>(r4);
        goto label22;

     label4:
        $z7 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean isRequestThread(java.lang.Thread)>(r4);
        if $z7 == 0 goto label5;

        $r23 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r24 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r25 = newarray (java.lang.Object)[2];
        $r26 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r25[0] = $r26;
        $r27 = virtualinvoke r4.<java.lang.Thread: java.lang.String getName()>();
        $r25[1] = $r27;
        $r28 = virtualinvoke $r24.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.warnRequestThread", $r25);
        interfaceinvoke $r23.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r28);
        goto label6;

     label5:
        $r29 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r30 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r31 = newarray (java.lang.Object)[2];
        $r32 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r31[0] = $r32;
        $r33 = virtualinvoke r4.<java.lang.Thread: java.lang.String getName()>();
        $r31[1] = $r33;
        $r34 = virtualinvoke $r30.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.warnThread", $r31);
        interfaceinvoke $r29.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r34);

     label6:
        $z8 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean clearReferencesStopThreads>;
        if $z8 != 0 goto label7;

        goto label22;

     label7:
        z0 = 0;

     label8:
        r7 = null;
        $r35 = newarray (java.lang.String)[3];
        $r35[0] = "target";
        $r35[1] = "runnable";
        $r35[2] = "action";
        r8 = $r35;
        i2 = lengthof $r35;
        i3 = 0;
        goto label13;

     label9:
        r9 = r8[i3];

     label10:
        $r36 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        r10 = virtualinvoke $r36.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r9);
        virtualinvoke r10.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        r7 = virtualinvoke r10.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r4);

     label11:
        goto label14;

     label12:
        $r37 := @caughtexception;
        r38 = $r37;
        i3 = i3 + 1;

     label13:
        if i3 < i2 goto label9;

     label14:
        if r7 == null goto label20;

        $r39 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
        $r40 = virtualinvoke $r39.<java.lang.Class: java.lang.String getCanonicalName()>();
        if $r40 == null goto label20;

        $r41 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
        $r42 = virtualinvoke $r41.<java.lang.Class: java.lang.String getCanonicalName()>();
        $z9 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>("java.util.concurrent.ThreadPoolExecutor.Worker");
        if $z9 == 0 goto label20;

        $r43 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
        r44 = virtualinvoke $r43.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("this$0");
        virtualinvoke r44.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        r45 = virtualinvoke r44.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r7);
        $z10 = r45 instanceof java.util.concurrent.ThreadPoolExecutor;
        if $z10 == 0 goto label20;

        $r46 = (java.util.concurrent.ThreadPoolExecutor) r45;
        virtualinvoke $r46.<java.util.concurrent.ThreadPoolExecutor: java.util.List shutdownNow()>();
        z0 = 1;

     label15:
        goto label20;

     label16:
        $r48 := @caughtexception;
        r49 = $r48;
        $r50 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r51 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r52 = newarray (java.lang.Object)[2];
        $r53 = virtualinvoke r4.<java.lang.Thread: java.lang.String getName()>();
        $r52[0] = $r53;
        $r54 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r52[1] = $r54;
        $r55 = virtualinvoke $r51.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.stopThreadFail", $r52);
        interfaceinvoke $r50.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r55, r49);
        goto label20;

     label17:
        $r56 := @caughtexception;
        r57 = $r56;
        $r58 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r59 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r60 = newarray (java.lang.Object)[2];
        $r61 = virtualinvoke r4.<java.lang.Thread: java.lang.String getName()>();
        $r60[0] = $r61;
        $r62 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r60[1] = $r62;
        $r63 = virtualinvoke $r59.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.stopThreadFail", $r60);
        interfaceinvoke $r58.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r63, r57);
        goto label20;

     label18:
        $r64 := @caughtexception;
        r65 = $r64;
        $r66 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r67 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r68 = newarray (java.lang.Object)[2];
        $r69 = virtualinvoke r4.<java.lang.Thread: java.lang.String getName()>();
        $r68[0] = $r69;
        $r70 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r68[1] = $r70;
        $r71 = virtualinvoke $r67.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.stopThreadFail", $r68);
        interfaceinvoke $r66.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r71, r65);
        goto label20;

     label19:
        $r72 := @caughtexception;
        r73 = $r72;
        $r74 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r75 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r76 = newarray (java.lang.Object)[2];
        $r77 = virtualinvoke r4.<java.lang.Thread: java.lang.String getName()>();
        $r76[0] = $r77;
        $r78 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r76[1] = $r78;
        $r79 = virtualinvoke $r75.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.stopThreadFail", $r76);
        interfaceinvoke $r74.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r79, r73);

     label20:
        if z0 == 0 goto label21;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);
        goto label22;

     label21:
        virtualinvoke r4.<java.lang.Thread: void stop()>();

     label22:
        i1 = i1 + 1;

     label23:
        if i1 < i0 goto label0;

        i4 = 0;
        r80 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();
        goto label31;

     label24:
        $r81 = interfaceinvoke r80.<java.util.Iterator: java.lang.Object next()>();
        r82 = (java.lang.Thread) $r81;
        goto label29;

     label25:
        staticinvoke <java.lang.Thread: void sleep(long)>(20L);

     label26:
        goto label28;

     label27:
        $r83 := @caughtexception;
        r84 = $r83;
        goto label30;

     label28:
        i4 = i4 + 1;

     label29:
        $z12 = virtualinvoke r82.<java.lang.Thread: boolean isAlive()>();
        if $z12 == 0 goto label30;

        if i4 < 100 goto label25;

     label30:
        $z13 = virtualinvoke r82.<java.lang.Thread: boolean isAlive()>();
        if $z13 == 0 goto label31;

        virtualinvoke r82.<java.lang.Thread: void stop()>();

     label31:
        $z14 = interfaceinvoke r80.<java.util.Iterator: boolean hasNext()>();
        if $z14 != 0 goto label24;

        return;

        catch java.lang.NoSuchFieldException from label10 to label11 with label12;
        catch java.lang.SecurityException from label8 to label15 with label16;
        catch java.lang.NoSuchFieldException from label8 to label15 with label17;
        catch java.lang.IllegalArgumentException from label8 to label15 with label18;
        catch java.lang.IllegalAccessException from label8 to label15 with label19;
        catch java.lang.InterruptedException from label25 to label26 with label27;
    }

    private boolean isRequestThread(java.lang.Thread)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Thread r1;
        java.lang.StackTraceElement[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StackTraceElement r3;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.Thread;
        r2 = virtualinvoke r1.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();
        if r2 == null goto label0;

        $i1 = lengthof r2;
        if $i1 != 0 goto label1;

     label0:
        return 0;

     label1:
        i0 = 0;
        goto label4;

     label2:
        $i2 = lengthof r2;
        $i3 = i0 + 1;
        $i4 = $i2 - $i3;
        r3 = r2[$i4];
        $r4 = "org.apache.catalina.connector.CoyoteAdapter";
        $r5 = virtualinvoke r3.<java.lang.StackTraceElement: java.lang.String getClassName()>();
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z0 == 0 goto label3;

        return 1;

     label3:
        i0 = i0 + 1;

     label4:
        $i5 = lengthof r2;
        if i0 < $i5 goto label2;

        return 0;
    }

    private void clearReferencesStopTimerThread(java.lang.Thread)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Thread r1, r21;
        java.lang.reflect.Field r2, r3;
        java.lang.Object r4, r6;
        java.lang.reflect.Method r5, r19;
        java.lang.Class $r7, $r8, $r9, $r17;
        java.lang.Class[] $r10, $r18;
        java.lang.Object[] $r12, $r22, $r27, $r36;
        java.lang.Throwable $r14, $r24, r33;
        java.lang.NoSuchFieldException $r15, r16;
        org.apache.juli.logging.Log $r25, $r34;
        org.apache.tomcat.util.res.StringManager $r26, $r35;
        java.lang.String $r28, $r29, $r30, $r37, $r38, $r39;
        java.lang.Exception $r31, r32;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.Thread;

     label0:
        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        r2 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("newTasksMayBeScheduled");
        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        r3 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("queue");
        virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        r4 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);
        $r9 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r10 = newarray (java.lang.Class)[0];
        r5 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("clear", $r10);
        virtualinvoke r5.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
        r6 = r4;
        entermonitor r4;

     label1:
        virtualinvoke r2.<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>(r1, 0);
        $r12 = newarray (java.lang.Object)[0];
        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r12);
        virtualinvoke r4.<java.lang.Object: void notify()>();
        exitmonitor r6;

     label2:
        goto label12;

     label3:
        $r14 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r14;

     label6:
        $r15 := @caughtexception;
        r16 = $r15;
        $r17 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r18 = newarray (java.lang.Class)[0];
        r19 = virtualinvoke $r17.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("cancel", $r18);
        r21 = r1;
        entermonitor r1;

     label7:
        virtualinvoke r19.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
        $r22 = newarray (java.lang.Object)[0];
        virtualinvoke r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r22);
        exitmonitor r21;

     label8:
        goto label12;

     label9:
        $r24 := @caughtexception;

     label10:
        exitmonitor r21;

     label11:
        throw $r24;

     label12:
        $r25 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r26 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r27 = newarray (java.lang.Object)[2];
        $r28 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r27[0] = $r28;
        $r29 = virtualinvoke r1.<java.lang.Thread: java.lang.String getName()>();
        $r27[1] = $r29;
        $r30 = virtualinvoke $r26.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.warnTimerThread", $r27);
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r30);

     label13:
        goto label15;

     label14:
        $r31 := @caughtexception;
        r32 = $r31;
        r33 = staticinvoke <org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>(r32);
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r33);
        $r34 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r35 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r36 = newarray (java.lang.Object)[2];
        $r37 = virtualinvoke r1.<java.lang.Thread: java.lang.String getName()>();
        $r36[0] = $r37;
        $r38 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r36[1] = $r38;
        $r39 = virtualinvoke $r35.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.stopTimerThreadFail", $r36);
        interfaceinvoke $r34.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r39, r33);

     label15:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.lang.NoSuchFieldException from label0 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
        catch java.lang.Exception from label0 to label13 with label14;
    }

    private void checkThreadLocalsForLeaks()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Thread[] r1;
        java.lang.reflect.Field r2, r3, r5;
        java.lang.Class r4, $r8, $r9;
        java.lang.reflect.Method r6;
        int i0, $i1;
        java.lang.Object r7, r16;
        java.lang.Class[] $r10;
        java.lang.Thread $r11, $r12, $r15;
        java.lang.Object[] $r13, $r17, $r27;
        java.lang.Throwable $r19, r20;
        org.apache.tomcat.util.compat.JreCompat r21;
        boolean $z0;
        org.apache.juli.logging.Log $r22, $r25;
        org.apache.tomcat.util.res.StringManager $r23, $r26;
        java.lang.String $r24, $r28, $r29;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Thread[] getThreads()>();

     label0:
        $r8 = class "java/lang/Thread";
        r2 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("threadLocals");
        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        $r9 = class "java/lang/Thread";
        r3 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("inheritableThreadLocals");
        virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.ThreadLocal$ThreadLocalMap");
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("table");
        virtualinvoke r5.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        $r10 = newarray (java.lang.Class)[0];
        r6 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("expungeStaleEntries", $r10);
        virtualinvoke r6.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
        i0 = 0;
        goto label4;

     label1:
        $r11 = r1[i0];
        if $r11 == null goto label3;

        $r12 = r1[i0];
        r7 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r12);
        if r7 == null goto label2;

        $r13 = newarray (java.lang.Object)[0];
        virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r7, $r13);
        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)>(r7, r5);

     label2:
        $r15 = r1[i0];
        r16 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r15);
        if r16 == null goto label3;

        $r17 = newarray (java.lang.Object)[0];
        virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r16, $r17);
        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)>(r16, r5);

     label3:
        i0 = i0 + 1;

     label4:
        $i1 = lengthof r1;
        if i0 < $i1 goto label1;

     label5:
        goto label8;

     label6:
        $r19 := @caughtexception;
        r20 = $r19;
        r21 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: org.apache.tomcat.util.compat.JreCompat getInstance()>();
        $z0 = virtualinvoke r21.<org.apache.tomcat.util.compat.JreCompat: boolean isInstanceOfInaccessibleObjectException(java.lang.Throwable)>(r20);
        if $z0 == 0 goto label7;

        $r22 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r23 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r24 = virtualinvoke $r23.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("webappClassLoader.addExportsThreadLocal");
        interfaceinvoke $r22.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r24);
        goto label8;

     label7:
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r20);
        $r25 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r26 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r27 = newarray (java.lang.Object)[1];
        $r28 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r27[0] = $r28;
        $r29 = virtualinvoke $r26.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.checkThreadLocalsForLeaksFail", $r27);
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r29, r20);

     label8:
        return;

        catch java.lang.Throwable from label0 to label5 with label6;
    }

    private void checkThreadLocalMapForLeaks(java.lang.Object, java.lang.reflect.Field) throws java.lang.IllegalAccessException, java.lang.NoSuchFieldException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Object r1, r4, r5, r7, $r10, $r21, $r33;
        java.lang.reflect.Field r2, r6;
        java.lang.Object[] r3, r8, $r20, $r32;
        int i0, $i1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Exception r9, $r17, $r28, r29;
        java.lang.ref.Reference $r11;
        java.lang.Class $r12, $r14, $r25;
        java.lang.String $r13, $r15, $r16, $r22, $r24, $r26, $r27, $r34, $r36, $r39, $r43, $r47;
        org.apache.juli.logging.Log $r18, $r30, $r37, $r40, $r41, $r44, $r45;
        org.apache.tomcat.util.res.StringManager $r19, $r23, $r31, $r35, $r38, $r42, $r46;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.reflect.Field;
        if r1 == null goto label18;

        $r10 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);
        r3 = (java.lang.Object[]) $r10;
        if r3 == null goto label18;

        i0 = 0;
        goto label17;

     label0:
        r4 = r3[i0];
        if r4 == null goto label16;

        z0 = 0;
        z1 = 0;
        $r11 = (java.lang.ref.Reference) r4;
        r5 = virtualinvoke $r11.<java.lang.ref.Reference: java.lang.Object get()>();
        $z2 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r5);
        if $z2 != 0 goto label1;

        $z3 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean loadedByThisOrChild(java.lang.Object)>(r5);
        if $z3 == 0 goto label2;

     label1:
        z0 = 1;

     label2:
        $r12 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        r6 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("value");
        virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        r7 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r4);
        $z4 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r7);
        if $z4 != 0 goto label3;

        $z5 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean loadedByThisOrChild(java.lang.Object)>(r7);
        if $z5 == 0 goto label4;

     label3:
        z1 = 1;

     label4:
        if z0 != 0 goto label5;

        if z1 == 0 goto label16;

     label5:
        r8 = newarray (java.lang.Object)[5];
        $r13 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        r8[0] = $r13;
        if r5 == null goto label9;

        $r14 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();
        $r15 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getPrettyClassName(java.lang.Class)>($r14);
        r8[1] = $r15;

     label6:
        $r16 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
        r8[2] = $r16;

     label7:
        goto label9;

     label8:
        $r17 := @caughtexception;
        r9 = $r17;
        $r18 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r19 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = newarray (java.lang.Object)[1];
        $r21 = r8[1];
        $r20[0] = $r21;
        $r22 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.checkThreadLocalsForLeaks.badKey", $r20);
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r22, r9);
        $r23 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r24 = virtualinvoke $r23.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("webappClassLoader.checkThreadLocalsForLeaks.unknown");
        r8[2] = $r24;

     label9:
        if r7 == null goto label13;

        $r25 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();
        $r26 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getPrettyClassName(java.lang.Class)>($r25);
        r8[3] = $r26;

     label10:
        $r27 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();
        r8[4] = $r27;

     label11:
        goto label13;

     label12:
        $r28 := @caughtexception;
        r29 = $r28;
        $r30 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r31 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r32 = newarray (java.lang.Object)[1];
        $r33 = r8[3];
        $r32[0] = $r33;
        $r34 = virtualinvoke $r31.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.checkThreadLocalsForLeaks.badValue", $r32);
        interfaceinvoke $r30.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r34, r29);
        $r35 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r36 = virtualinvoke $r35.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("webappClassLoader.checkThreadLocalsForLeaks.unknown");
        r8[4] = $r36;

     label13:
        if z1 == 0 goto label14;

        $r37 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r38 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r39 = virtualinvoke $r38.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.checkThreadLocalsForLeaks", r8);
        interfaceinvoke $r37.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r39);
        goto label16;

     label14:
        if r7 != null goto label15;

        $r40 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z6 = interfaceinvoke $r40.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label16;

        $r41 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r42 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r43 = virtualinvoke $r42.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.checkThreadLocalsForLeaksNull", r8);
        interfaceinvoke $r41.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r43);
        goto label16;

     label15:
        $r44 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z7 = interfaceinvoke $r44.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z7 == 0 goto label16;

        $r45 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r46 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r47 = virtualinvoke $r46.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.checkThreadLocalsForLeaksNone", r8);
        interfaceinvoke $r45.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r47);

     label16:
        i0 = i0 + 1;

     label17:
        $i1 = lengthof r3;
        if i0 < $i1 goto label0;

     label18:
        return;

        catch java.lang.Exception from label6 to label7 with label8;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    private java.lang.String getPrettyClassName(java.lang.Class)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.Class;
        r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getCanonicalName()>();
        if r2 != null goto label0;

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

     label0:
        return r2;
    }

    private boolean loadedByThisOrChild(java.lang.Object)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Object r1, r5;
        java.lang.Class r2;
        java.lang.ClassLoader r3;
        java.util.Iterator r4;
        boolean $z0, $z1, $z2, $z3;
        java.util.Collection $r6;
        java.util.ConcurrentModificationException $r7, r8;
        org.apache.juli.logging.Log $r9;
        org.apache.tomcat.util.res.StringManager $r10;
        java.lang.Object[] $r11;
        java.lang.String $r12, $r13, $r14;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        return 0;

     label0:
        $z0 = r1 instanceof java.lang.Class;
        if $z0 == 0 goto label1;

        r2 = (java.lang.Class) r1;
        goto label2;

     label1:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        r3 = virtualinvoke r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        goto label5;

     label3:
        if r3 != r0 goto label4;

        return 1;

     label4:
        r3 = virtualinvoke r3.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

     label5:
        if r3 != null goto label3;

        $z1 = r1 instanceof java.util.Collection;
        if $z1 == 0 goto label12;

        $r6 = (java.util.Collection) r1;
        r4 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        goto label9;

     label7:
        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $z2 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean loadedByThisOrChild(java.lang.Object)>(r5);
        if $z2 == 0 goto label9;

     label8:
        return 1;

     label9:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label7;

     label10:
        goto label12;

     label11:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r10 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[2];
        $r12 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();
        $r11[0] = $r12;
        $r13 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r11[1] = $r13;
        $r14 = virtualinvoke $r10.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader", $r11);
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r14, r8);

     label12:
        return 0;

        catch java.util.ConcurrentModificationException from label6 to label8 with label11;
        catch java.util.ConcurrentModificationException from label9 to label10 with label11;
    }

    private java.lang.Thread[] getThreads()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Thread $r1;
        java.lang.ThreadGroup r2, $r5;
        java.lang.SecurityException r3, $r6;
        java.lang.String r4, $r9;
        int i0, $i1, i2;
        org.apache.tomcat.util.res.StringManager $r7;
        java.lang.Object[] $r8;
        org.apache.juli.logging.Log $r10, $r11, $r12;
        boolean $z0;
        java.lang.Thread[] r13;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();

     label0:
        goto label2;

     label1:
        r2 = virtualinvoke r2.<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>();

     label2:
        $r5 = virtualinvoke r2.<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>();
        if $r5 != null goto label1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;
        r3 = $r6;
        $r7 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = newarray (java.lang.Object)[1];
        $r9 = virtualinvoke r2.<java.lang.ThreadGroup: java.lang.String getName()>();
        $r8[0] = $r9;
        r4 = virtualinvoke $r7.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.getThreadGroupError", $r8);
        $r10 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r10.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label5;

        $r11 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>(r4, r3);
        goto label6;

     label5:
        $r12 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void warn(java.lang.Object)>(r4);

     label6:
        $i1 = virtualinvoke r2.<java.lang.ThreadGroup: int activeCount()>();
        i2 = $i1 + 50;
        r13 = newarray (java.lang.Thread)[i2];
        i0 = virtualinvoke r2.<java.lang.ThreadGroup: int enumerate(java.lang.Thread[])>(r13);
        goto label8;

     label7:
        i2 = i2 * 2;
        r13 = newarray (java.lang.Thread)[i2];
        i0 = virtualinvoke r2.<java.lang.ThreadGroup: int enumerate(java.lang.Thread[])>(r13);

     label8:
        if i0 == i2 goto label7;

        return r13;

        catch java.lang.SecurityException from label0 to label3 with label4;
    }

    private void clearReferencesRmiTargets()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Class r1, r4, $r21;
        java.lang.reflect.Field r2, r3, r5, r7, r24;
        java.lang.Object r6, r8, r9, r11, r12, r13, r14, r25, r29;
        java.util.Iterator r10, r28;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Map $r16, $r26;
        java.util.Collection $r17, $r27;
        org.apache.juli.logging.Log $r18, $r33, $r40, $r47, $r54, $r61, $r69;
        org.apache.tomcat.util.res.StringManager $r19, $r34, $r41, $r48, $r55, $r62, $r70;
        java.lang.Object[] $r20, $r35, $r42, $r49, $r56, $r63;
        java.lang.String $r22, $r23, $r36, $r37, $r43, $r44, $r50, $r51, $r57, $r58, $r64, $r65, $r71;
        java.lang.Throwable $r30;
        java.lang.ClassNotFoundException $r31, r32;
        java.lang.SecurityException $r38, r39;
        java.lang.NoSuchFieldException $r45, r46;
        java.lang.IllegalArgumentException $r52, r53;
        java.lang.IllegalAccessException $r59, r60;
        java.lang.Exception $r66, r67;
        org.apache.tomcat.util.compat.JreCompat r68;
        java.lang.RuntimeException $r72;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;

     label0:
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("sun.rmi.transport.Target");
        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ccl");
        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("stub");
        virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("sun.rmi.transport.ObjectTable");
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("objTable");
        virtualinvoke r5.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        r6 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
        if r6 != null goto label2;

     label1:
        return;

     label2:
        r7 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("tableLock");
        virtualinvoke r7.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        r8 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
        r9 = r8;
        entermonitor r8;

     label3:
        $z0 = r6 instanceof java.util.Map;
        if $z0 == 0 goto label6;

        $r16 = (java.util.Map) r6;
        $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Collection values()>();
        r10 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();
        goto label5;

     label4:
        r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();
        r12 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r11);
        if r0 != r12 goto label5;

        interfaceinvoke r10.<java.util.Iterator: void remove()>();
        r13 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r11);
        $r18 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r19 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = newarray (java.lang.Object)[2];
        $r21 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();
        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();
        $r20[0] = $r22;
        $r20[1] = r13;
        $r23 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearRmi", $r20);
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r23);

     label5:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label4;

     label6:
        r24 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("implTable");
        virtualinvoke r24.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        r25 = virtualinvoke r24.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
        if r25 != null goto label8;

        exitmonitor r9;

     label7:
        return;

     label8:
        $z2 = r25 instanceof java.util.Map;
        if $z2 == 0 goto label11;

        $r26 = (java.util.Map) r25;
        $r27 = interfaceinvoke $r26.<java.util.Map: java.util.Collection values()>();
        r28 = interfaceinvoke $r27.<java.util.Collection: java.util.Iterator iterator()>();
        goto label10;

     label9:
        r29 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();
        r14 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r29);
        if r0 != r14 goto label10;

        interfaceinvoke r28.<java.util.Iterator: void remove()>();

     label10:
        $z3 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label9;

     label11:
        exitmonitor r9;

     label12:
        goto label23;

     label13:
        $r30 := @caughtexception;

     label14:
        exitmonitor r9;

     label15:
        throw $r30;

     label16:
        $r31 := @caughtexception;
        r32 = $r31;
        $r33 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r34 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r35 = newarray (java.lang.Object)[1];
        $r36 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r35[0] = $r36;
        $r37 = virtualinvoke $r34.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearRmiInfo", $r35);
        interfaceinvoke $r33.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r37, r32);
        goto label23;

     label17:
        $r38 := @caughtexception;
        r39 = $r38;
        $r40 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r41 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r42 = newarray (java.lang.Object)[1];
        $r43 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r42[0] = $r43;
        $r44 = virtualinvoke $r41.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearRmiFail", $r42);
        interfaceinvoke $r40.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r44, r39);
        goto label23;

     label18:
        $r45 := @caughtexception;
        r46 = $r45;
        $r47 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r48 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r49 = newarray (java.lang.Object)[1];
        $r50 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r49[0] = $r50;
        $r51 = virtualinvoke $r48.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearRmiFail", $r49);
        interfaceinvoke $r47.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r51, r46);
        goto label23;

     label19:
        $r52 := @caughtexception;
        r53 = $r52;
        $r54 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r55 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r56 = newarray (java.lang.Object)[1];
        $r57 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r56[0] = $r57;
        $r58 = virtualinvoke $r55.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearRmiFail", $r56);
        interfaceinvoke $r54.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r58, r53);
        goto label23;

     label20:
        $r59 := @caughtexception;
        r60 = $r59;
        $r61 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r62 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r63 = newarray (java.lang.Object)[1];
        $r64 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String contextName>;
        $r63[0] = $r64;
        $r65 = virtualinvoke $r62.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearRmiFail", $r63);
        interfaceinvoke $r61.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r65, r60);
        goto label23;

     label21:
        $r66 := @caughtexception;
        r67 = $r66;
        r68 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: org.apache.tomcat.util.compat.JreCompat getInstance()>();
        $z4 = virtualinvoke r68.<org.apache.tomcat.util.compat.JreCompat: boolean isInstanceOfInaccessibleObjectException(java.lang.Throwable)>(r67);
        if $z4 == 0 goto label22;

        $r69 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r70 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r71 = virtualinvoke $r70.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("webappClassLoader.addExportsRmi");
        interfaceinvoke $r69.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r71);
        goto label23;

     label22:
        $r72 = new java.lang.RuntimeException;
        specialinvoke $r72.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r67);
        throw $r72;

     label23:
        return;

        catch java.lang.Throwable from label3 to label7 with label13;
        catch java.lang.Throwable from label8 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.ClassNotFoundException from label0 to label1 with label16;
        catch java.lang.ClassNotFoundException from label2 to label7 with label16;
        catch java.lang.ClassNotFoundException from label8 to label16 with label16;
        catch java.lang.SecurityException from label0 to label1 with label17;
        catch java.lang.SecurityException from label2 to label7 with label17;
        catch java.lang.SecurityException from label8 to label16 with label17;
        catch java.lang.NoSuchFieldException from label0 to label1 with label18;
        catch java.lang.NoSuchFieldException from label2 to label7 with label18;
        catch java.lang.NoSuchFieldException from label8 to label16 with label18;
        catch java.lang.IllegalArgumentException from label0 to label1 with label19;
        catch java.lang.IllegalArgumentException from label2 to label7 with label19;
        catch java.lang.IllegalArgumentException from label8 to label16 with label19;
        catch java.lang.IllegalAccessException from label0 to label1 with label20;
        catch java.lang.IllegalAccessException from label2 to label7 with label20;
        catch java.lang.IllegalAccessException from label8 to label16 with label20;
        catch java.lang.Exception from label0 to label1 with label21;
        catch java.lang.Exception from label2 to label7 with label21;
        catch java.lang.Exception from label8 to label16 with label21;
    }

    private void clearReferencesObjectStreamClassCaches()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Class r1;
        java.lang.SecurityException $r2, r3;
        org.apache.juli.logging.Log $r4, $r11, $r18, $r25, $r32, $r39;
        org.apache.tomcat.util.res.StringManager $r5, $r12, $r19, $r26, $r33, $r40;
        java.lang.Object[] $r6, $r13, $r20, $r27, $r34, $r41;
        java.lang.String $r7, $r8, $r14, $r15, $r21, $r22, $r28, $r29, $r35, $r36, $r42, $r43;
        java.lang.ClassCastException $r9, r10;
        java.lang.IllegalArgumentException $r16, r17;
        java.lang.NoSuchFieldException $r23, r24;
        java.lang.IllegalAccessException $r30, r31;
        java.lang.ClassNotFoundException $r37, r38;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;

     label0:
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.io.ObjectStreamClass$Caches");
        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void clearCache(java.lang.Class,java.lang.String)>(r1, "localDescs");
        specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void clearCache(java.lang.Class,java.lang.String)>(r1, "reflectors");

     label1:
        goto label8;

     label2:
        $r2 := @caughtexception;
        r3 = $r2;
        $r4 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r5 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = newarray (java.lang.Object)[1];
        $r7 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r6[0] = $r7;
        $r8 = virtualinvoke $r5.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearObjectStreamClassCachesFail", $r6);
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r8, r3);
        goto label8;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r12 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r13 = newarray (java.lang.Object)[1];
        $r14 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r13[0] = $r14;
        $r15 = virtualinvoke $r12.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearObjectStreamClassCachesFail", $r13);
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r15, r10);
        goto label8;

     label4:
        $r16 := @caughtexception;
        r17 = $r16;
        $r18 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r19 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = newarray (java.lang.Object)[1];
        $r21 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r20[0] = $r21;
        $r22 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearObjectStreamClassCachesFail", $r20);
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r22, r17);
        goto label8;

     label5:
        $r23 := @caughtexception;
        r24 = $r23;
        $r25 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r26 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r27 = newarray (java.lang.Object)[1];
        $r28 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r27[0] = $r28;
        $r29 = virtualinvoke $r26.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearObjectStreamClassCachesFail", $r27);
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r29, r24);
        goto label8;

     label6:
        $r30 := @caughtexception;
        r31 = $r30;
        $r32 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r33 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r34 = newarray (java.lang.Object)[1];
        $r35 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r34[0] = $r35;
        $r36 = virtualinvoke $r33.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearObjectStreamClassCachesFail", $r34);
        interfaceinvoke $r32.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r36, r31);
        goto label8;

     label7:
        $r37 := @caughtexception;
        r38 = $r37;
        $r39 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r40 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r41 = newarray (java.lang.Object)[1];
        $r42 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String getContextName()>();
        $r41[0] = $r42;
        $r43 = virtualinvoke $r40.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.clearObjectStreamClassCachesFail", $r41);
        interfaceinvoke $r39.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r43, r38);

     label8:
        return;

        catch java.lang.SecurityException from label0 to label1 with label2;
        catch java.lang.ClassCastException from label0 to label1 with label3;
        catch java.lang.IllegalArgumentException from label0 to label1 with label4;
        catch java.lang.NoSuchFieldException from label0 to label1 with label5;
        catch java.lang.IllegalAccessException from label0 to label1 with label6;
        catch java.lang.ClassNotFoundException from label0 to label1 with label7;
    }

    private void clearCache(java.lang.Class, java.lang.String) throws java.lang.SecurityException, java.lang.ClassCastException, java.lang.NoSuchFieldException, java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.Class r1;
        java.lang.String r2;
        java.lang.reflect.Field r3;
        java.util.Map r4;
        java.util.Iterator r5;
        java.lang.Object r6, r7, $r8;
        java.util.Set $r9;
        boolean $z0, $z1, $z2;
        java.lang.ref.Reference $r10;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.String;
        r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r2);
        virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
        $r8 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
        r4 = (java.util.Map) $r8;
        $r9 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>();
        r5 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();
        goto label1;

     label0:
        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        $z0 = r6 instanceof java.lang.ref.Reference;
        if $z0 == 0 goto label1;

        $r10 = (java.lang.ref.Reference) r6;
        r7 = virtualinvoke $r10.<java.lang.ref.Reference: java.lang.Object get()>();
        $z1 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean loadedByThisOrChild(java.lang.Object)>(r7);
        if $z1 == 0 goto label1;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label0;

        return;
    }

    protected boolean openJARs()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        long $l0;
        int i1, $i2, $i3;
        org.apache.tomcat.util.compat.JreCompat $r1;
        java.io.IOException r2, $r10;
        boolean $z0;
        java.util.jar.JarFile[] $r3, $r4, $r6, $r14, $r17;
        java.util.jar.JarFile $r5, $r9, $r15;
        java.io.File[] $r7;
        java.io.File $r8;
        org.apache.juli.logging.Log $r11;
        org.apache.tomcat.util.res.StringManager $r12;
        java.lang.Object[] $r13;
        java.lang.String $r16;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        $z0 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean started>;
        if $z0 == 0 goto label5;

        $r3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $i2 = lengthof $r3;
        if $i2 <= 0 goto label5;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: long lastJarAccessed> = $l0;
        $r4 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r5 = $r4[0];
        if $r5 != null goto label5;

        i1 = 0;
        goto label4;

     label0:
        $r6 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r1 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: org.apache.tomcat.util.compat.JreCompat getInstance()>();
        $r7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        $r8 = $r7[i1];
        $r9 = virtualinvoke $r1.<org.apache.tomcat.util.compat.JreCompat: java.util.jar.JarFile jarFileNewInstance(java.io.File)>($r8);
        $r6[i1] = $r9;

     label1:
        goto label3;

     label2:
        $r10 := @caughtexception;
        r2 = $r10;
        $r11 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r12 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r13 = newarray (java.lang.Object)[1];
        $r14 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r15 = $r14[i1];
        $r13[0] = $r15;
        $r16 = virtualinvoke $r12.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.jarOpenFail", $r13);
        interfaceinvoke $r11.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r16, r2);
        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: void closeJARs(boolean)>(1);
        return 0;

     label3:
        i1 = i1 + 1;

     label4:
        $r17 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $i3 = lengthof $r17;
        if i1 < $i3 goto label0;

     label5:
        return 1;

        catch java.io.IOException from label0 to label1 with label2;
    }

    protected java.lang.Class findClassInternal(java.lang.String) throws java.lang.ClassNotFoundException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r2, r5, $r22, $r31, r32, $r51, $r62, $r63, $r67, $r69;
        null_type n0;
        org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedFindResourceByName r3, $r11;
        java.lang.Object r4, $r12, $r16, $r24;
        java.util.Iterator r6;
        java.lang.instrument.ClassFileTransformer r7;
        byte[] r8, $r19, $r25, $r52, $r53;
        boolean $z0, $z1, z2, $z3, z4, $z5, $z6;
        java.lang.ClassNotFoundException $r9, $r14, $r20;
        java.lang.SecurityManager $r10, $r41;
        org.apache.catalina.loader.ResourceEntry r13;
        java.lang.Class r15, r17, r57;
        java.util.List $r21, $r23;
        int $i0, $i1, $i2, $i3, i4, $i5;
        java.lang.instrument.IllegalClassFormatException $r26, r27;
        org.apache.juli.logging.Log $r28;
        org.apache.tomcat.util.res.StringManager $r29, $r65;
        java.lang.Object[] $r30, $r66;
        java.lang.Package r33;
        java.util.jar.Manifest $r34, $r36, $r43, $r44;
        java.net.URL $r37, $r42, $r55;
        java.lang.IllegalArgumentException $r39, r40;
        java.lang.SecurityException $r45;
        java.lang.StringBuilder $r46, $r47, $r48, $r49, $r50, $r61, $r64, $r68;
        java.security.CodeSource $r54;
        java.security.cert.Certificate[] $r56;
        java.lang.UnsupportedClassVersionError $r58, r59, $r60;
        java.lang.Throwable $r70;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean validate(java.lang.String)>(r1);
        if $z0 != 0 goto label0;

        $r9 = new java.lang.ClassNotFoundException;
        specialinvoke $r9.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);
        throw $r9;

     label0:
        n0 = null;
        r2 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String binaryNameToPath(java.lang.String,boolean)>(r1, 1);
        $r10 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        if $r10 == null goto label1;

        $r11 = new org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedFindResourceByName;
        specialinvoke $r11.<org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedFindResourceByName: void <init>(org.apache.catalina.loader.WebappClassLoaderBase,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, 1);
        r3 = $r11;
        $r12 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r3);
        r13 = (org.apache.catalina.loader.ResourceEntry) $r12;
        goto label2;

     label1:
        r13 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String,boolean)>(r1, r2, 1);

     label2:
        if r13 != null goto label3;

        $r14 = new java.lang.ClassNotFoundException;
        specialinvoke $r14.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);
        throw $r14;

     label3:
        r15 = r13.<org.apache.catalina.loader.ResourceEntry: java.lang.Class loadedClass>;
        if r15 == null goto label4;

        return r15;

     label4:
        $r16 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Object getClassLoadingLockInternal(java.lang.String)>(r1);
        r4 = $r16;
        entermonitor $r16;

     label5:
        r17 = r13.<org.apache.catalina.loader.ResourceEntry: java.lang.Class loadedClass>;
        if r17 == null goto label7;

        exitmonitor r4;

     label6:
        return r17;

     label7:
        $r19 = r13.<org.apache.catalina.loader.ResourceEntry: byte[] binaryContent>;
        if $r19 != null goto label8;

        $r20 = new java.lang.ClassNotFoundException;
        specialinvoke $r20.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);
        throw $r20;

     label8:
        $r21 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.List transformers>;
        $i0 = interfaceinvoke $r21.<java.util.List: int size()>();
        if $i0 <= 0 goto label15;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();
        $r22 = ".class";
        $i2 = virtualinvoke $r22.<java.lang.String: int length()>();
        $i3 = $i1 - $i2;
        r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(1, $i3);
        $r23 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.List transformers>;
        r6 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();
        goto label14;

     label9:
        $r24 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.instrument.ClassFileTransformer) $r24;

     label10:
        $r25 = r13.<org.apache.catalina.loader.ResourceEntry: byte[] binaryContent>;
        r8 = interfaceinvoke r7.<java.lang.instrument.ClassFileTransformer: byte[] transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])>(r0, r5, null, null, $r25);
        if r8 == null goto label14;

        r13.<org.apache.catalina.loader.ResourceEntry: byte[] binaryContent> = r8;

     label11:
        goto label14;

     label12:
        $r26 := @caughtexception;
        r27 = $r26;
        $r28 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r29 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r30 = newarray (java.lang.Object)[1];
        $r30[0] = r1;
        $r31 = virtualinvoke $r29.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.transformError", $r30);
        interfaceinvoke $r28.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r31, r27);
        exitmonitor r4;

     label13:
        return null;

     label14:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label9;

     label15:
        r32 = null;
        i4 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);
        if i4 == -1 goto label16;

        r32 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

     label16:
        r33 = null;
        if r32 == null goto label22;

        r33 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Package getPackage(java.lang.String)>(r32);
        if r33 != null goto label22;

     label17:
        $r34 = r13.<org.apache.catalina.loader.ResourceEntry: java.util.jar.Manifest manifest>;
        if $r34 != null goto label18;

        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>(r32, null, null, null, null, null, null, null);
        goto label21;

     label18:
        $r36 = r13.<org.apache.catalina.loader.ResourceEntry: java.util.jar.Manifest manifest>;
        $r37 = r13.<org.apache.catalina.loader.ResourceEntry: java.net.URL codeBase>;
        virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Package definePackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>(r32, $r36, $r37);

     label19:
        goto label21;

     label20:
        $r39 := @caughtexception;
        r40 = $r39;

     label21:
        r33 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Package getPackage(java.lang.String)>(r32);

     label22:
        $r41 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.SecurityManager securityManager>;
        if $r41 == null goto label27;

        if r33 == null goto label27;

        z2 = 1;
        $z3 = virtualinvoke r33.<java.lang.Package: boolean isSealed()>();
        if $z3 == 0 goto label23;

        $r42 = r13.<org.apache.catalina.loader.ResourceEntry: java.net.URL codeBase>;
        z4 = virtualinvoke r33.<java.lang.Package: boolean isSealed(java.net.URL)>($r42);
        goto label26;

     label23:
        $r43 = r13.<org.apache.catalina.loader.ResourceEntry: java.util.jar.Manifest manifest>;
        if $r43 == null goto label24;

        $r44 = r13.<org.apache.catalina.loader.ResourceEntry: java.util.jar.Manifest manifest>;
        $z5 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean isPackageSealed(java.lang.String,java.util.jar.Manifest)>(r32, $r44);
        if $z5 == 0 goto label24;

        $z6 = 0;
        goto label25;

     label24:
        $z6 = 1;

     label25:
        z4 = $z6;

     label26:
        if z4 != 0 goto label27;

        $r45 = new java.lang.SecurityException;
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sealing violation loading ");
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : Package ");
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is sealed.");
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r45.<java.lang.SecurityException: void <init>(java.lang.String)>($r51);
        throw $r45;

     label27:
        $r52 = r13.<org.apache.catalina.loader.ResourceEntry: byte[] binaryContent>;
        $r53 = r13.<org.apache.catalina.loader.ResourceEntry: byte[] binaryContent>;
        $i5 = lengthof $r53;
        $r54 = new java.security.CodeSource;
        $r55 = r13.<org.apache.catalina.loader.ResourceEntry: java.net.URL codeBase>;
        $r56 = r13.<org.apache.catalina.loader.ResourceEntry: java.security.cert.Certificate[] certificates>;
        specialinvoke $r54.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>($r55, $r56);
        r57 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>(r1, $r52, 0, $i5, $r54);

     label28:
        goto label30;

     label29:
        $r58 := @caughtexception;
        r59 = $r58;
        $r60 = new java.lang.UnsupportedClassVersionError;
        $r61 = new java.lang.StringBuilder;
        $r62 = virtualinvoke r59.<java.lang.UnsupportedClassVersionError: java.lang.String getLocalizedMessage()>();
        $r63 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r62);
        specialinvoke $r61.<java.lang.StringBuilder: void <init>(java.lang.String)>($r63);
        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r65 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r66 = newarray (java.lang.Object)[1];
        $r66[0] = r1;
        $r67 = virtualinvoke $r65.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.wrongVersion", $r66);
        $r68 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r60.<java.lang.UnsupportedClassVersionError: void <init>(java.lang.String)>($r69);
        throw $r60;

     label30:
        r13.<org.apache.catalina.loader.ResourceEntry: java.lang.Class loadedClass> = r57;
        r13.<org.apache.catalina.loader.ResourceEntry: byte[] binaryContent> = null;
        r13.<org.apache.catalina.loader.ResourceEntry: java.net.URL codeBase> = null;
        r13.<org.apache.catalina.loader.ResourceEntry: java.util.jar.Manifest manifest> = null;
        r13.<org.apache.catalina.loader.ResourceEntry: java.security.cert.Certificate[] certificates> = null;
        exitmonitor r4;

     label31:
        goto label35;

     label32:
        $r70 := @caughtexception;

     label33:
        exitmonitor r4;

     label34:
        throw $r70;

     label35:
        return r57;

        catch java.lang.instrument.IllegalClassFormatException from label10 to label11 with label12;
        catch java.lang.IllegalArgumentException from label17 to label19 with label20;
        catch java.lang.UnsupportedClassVersionError from label27 to label28 with label29;
        catch java.lang.Throwable from label5 to label6 with label32;
        catch java.lang.Throwable from label7 to label13 with label32;
        catch java.lang.Throwable from label14 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
    }

    protected org.apache.catalina.loader.ResourceEntry findResourceInternal(java.io.File, java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.io.File r1, $r5;
        java.lang.String r2, r6, $r10;
        org.apache.catalina.loader.ResourceEntry $r3, r4;
        java.net.URL $r7, $r8, $r9, $r11, $r12;
        boolean $z0, $z1;
        java.net.MalformedURLException $r13, r14;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.io.File;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.apache.catalina.loader.ResourceEntry;
        specialinvoke $r3.<org.apache.catalina.loader.ResourceEntry: void <init>()>();
        r4 = $r3;

     label0:
        $r5 = new java.io.File;
        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, r2);
        $r7 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL getURI(java.io.File)>($r5);
        r4.<org.apache.catalina.loader.ResourceEntry: java.net.URL source> = $r7;
        $r8 = r4.<org.apache.catalina.loader.ResourceEntry: java.net.URL source>;
        r6 = virtualinvoke $r8.<java.net.URL: java.lang.String toString()>();
        $r9 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL webInfClassesCodeBase>;
        $r10 = virtualinvoke $r9.<java.net.URL: java.lang.String toString()>();
        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>($r10);
        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>(".class");
        if $z1 == 0 goto label1;

        $r11 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL webInfClassesCodeBase>;
        r4.<org.apache.catalina.loader.ResourceEntry: java.net.URL codeBase> = $r11;
        goto label4;

     label1:
        $r12 = r4.<org.apache.catalina.loader.ResourceEntry: java.net.URL source>;
        r4.<org.apache.catalina.loader.ResourceEntry: java.net.URL codeBase> = $r12;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;
        r14 = $r13;
        return null;

     label4:
        return r4;

        catch java.net.MalformedURLException from label0 to label2 with label3;
    }

    protected org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String, java.lang.String, boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r2, r5, r10, r13, $r23, $r43, $r44, $r61, $r78, $r99, $r106, $r109, $r111, $r112, $r116, $r117, $r123, $r124, $r158, $r161, r162;
        boolean z0, z1, z2, $z3, $z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z20;
        org.apache.tomcat.util.res.StringManager $r3, $r114, $r121, $r156;
        java.util.jar.JarEntry r4, r31, r105;
        org.apache.catalina.loader.ResourceEntry r6, $r73, r179;
        java.util.jar.JarFile[] r7, $r28, $r29, $r32, $r36, $r39, $r68, r69, $r71, $r86, $r90, $r101, $r128;
        int i0, i1, i2, i3, i4, i5, $i6, i7, $i10, $i11, $i13, $i14, $i16, $i17, i18, $i19, $i20, i21, i25, $i26, $i27, i28;
        java.io.IOException r8, r14, r17, r18, $r35, $r52, $r70, $r84, r85, $r92, r93, $r94, r95, $r118, r119, $r131, r132, $r133, $r134, r135, $r137, r138, $r139, r140, $r141, r142, $r143, r144, $r150, r151, $r153, r154, $r159, r160, $r166, r167, $r170, r171, $r172, r173;
        org.apache.naming.resources.Resource r9;
        java.lang.Object r11, $r25, $r104, $r178;
        org.apache.naming.resources.ResourceAttributes r12;
        long[] r15, $r55, $r56, $r57, $r58;
        java.lang.String[] r16, $r40, $r42, $r59, $r60, $r62, $r63;
        java.lang.Throwable r19, r20, $r37, $r64, $r136, $r149, $r169, $r174, $r182;
        org.apache.juli.logging.Log $r21, $r155;
        java.lang.Object[] $r22, $r115, $r122, $r157;
        java.util.Map $r24, $r175, r176, $r177, $r180;
        java.util.jar.Manifest $r26, $r27, $r34, $r88, $r89;
        java.util.jar.JarFile $r30, $r33, $r72, $r87, $r91, $r102, $r129;
        java.io.InputStream r38, r127;
        java.lang.StringBuilder $r41, $r45;
        javax.naming.directory.DirContext $r46, $r47;
        javax.naming.directory.Attributes $r48;
        long $l8, $l9, $l12, $l15, $l22, $l23, $l24;
        java.io.File $r49, $r51, $r75, $r81, $r97, $r98, r100, $r107, $r108, r110, r125;
        java.io.File[] $r50, $r74, $r80;
        java.security.Permission $r53, r54;
        javax.naming.NamingException $r65, r66;
        java.util.HashMap $r67, $r145, r146, $r147;
        java.net.URL $r76, $r77, $r79;
        java.net.MalformedURLException $r82, r83;
        byte[] r96, r152;
        java.util.Enumeration r103;
        java.lang.IllegalArgumentException $r113, $r120;
        java.io.FileOutputStream r126, $r130;
        java.nio.charset.Charset $r163;
        java.lang.Exception $r164, r165;
        java.security.cert.Certificate[] $r168;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $z3 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean started>;
        if $z3 != 0 goto label0;

        $r21 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r3 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r22 = newarray (java.lang.Object)[1];
        $r22[0] = r1;
        $r23 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.stopped", $r22);
        interfaceinvoke $r21.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r23);
        return null;

     label0:
        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return null;

     label2:
        r4 = null;
        r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);
        $r24 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries>;
        $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);
        r6 = (org.apache.catalina.loader.ResourceEntry) $r25;
        if r6 == null goto label16;

        if z0 == 0 goto label15;

        $r26 = r6.<org.apache.catalina.loader.ResourceEntry: java.util.jar.Manifest manifest>;
        $r27 = <org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.Manifest MANIFEST_UNKNOWN>;
        if $r26 != $r27 goto label15;

        $r28 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        r7 = $r28;
        entermonitor $r28;

     label3:
        $z4 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean openJARs()>();
        if $z4 == 0 goto label10;

        i0 = 0;
        goto label9;

     label4:
        $r29 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r30 = $r29[i0];
        r31 = virtualinvoke $r30.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>(r5);
        if r31 == null goto label8;

     label5:
        $r32 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r33 = $r32[i0];
        $r34 = virtualinvoke $r33.<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>();
        r6.<org.apache.catalina.loader.ResourceEntry: java.util.jar.Manifest manifest> = $r34;

     label6:
        goto label10;

     label7:
        $r35 := @caughtexception;
        r8 = $r35;
        goto label10;

     label8:
        i0 = i0 + 1;

     label9:
        $r36 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $i6 = lengthof $r36;
        if i0 < $i6 goto label4;

     label10:
        exitmonitor r7;

     label11:
        goto label15;

     label12:
        $r37 := @caughtexception;

     label13:
        exitmonitor r7;

     label14:
        throw $r37;

     label15:
        return r6;

     label16:
        i7 = -1;
        r38 = null;
        z5 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".class");
        z1 = z5;
        if z1 != 0 goto label17;

        z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("/META-INF/services/");

     label17:
        $r39 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        i1 = lengthof $r39;
        $r40 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        i2 = lengthof $r40;
        r9 = null;
        z2 = 0;
        i3 = 0;
        goto label39;

     label18:
        $r41 = new java.lang.StringBuilder;
        $r42 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] repositories>;
        $r43 = $r42[i3];
        $r44 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r43);
        specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>($r44);
        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        r10 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();
        $r46 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources>;
        r11 = interfaceinvoke $r46.<javax.naming.directory.DirContext: java.lang.Object lookup(java.lang.String)>(r10);
        $z6 = r11 instanceof org.apache.naming.resources.Resource;
        if $z6 == 0 goto label19;

        r9 = (org.apache.naming.resources.Resource) r11;

     label19:
        $r47 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: javax.naming.directory.DirContext resources>;
        $r48 = interfaceinvoke $r47.<javax.naming.directory.DirContext: javax.naming.directory.Attributes getAttributes(java.lang.String)>(r10);
        r12 = (org.apache.naming.resources.ResourceAttributes) $r48;
        $l8 = virtualinvoke r12.<org.apache.naming.resources.ResourceAttributes: long getContentLength()>();
        i7 = (int) $l8;
        r13 = virtualinvoke r12.<org.apache.naming.resources.ResourceAttributes: java.lang.String getCanonicalPath()>();
        if r13 == null goto label20;

        $r49 = new java.io.File;
        specialinvoke $r49.<java.io.File: void <init>(java.lang.String)>(r13);
        r6 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: org.apache.catalina.loader.ResourceEntry findResourceInternal(java.io.File,java.lang.String)>($r49, "");
        goto label21;

     label20:
        $r50 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] files>;
        $r51 = $r50[i3];
        r6 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: org.apache.catalina.loader.ResourceEntry findResourceInternal(java.io.File,java.lang.String)>($r51, r2);

     label21:
        $l9 = virtualinvoke r12.<org.apache.naming.resources.ResourceAttributes: long getLastModified()>();
        r6.<org.apache.catalina.loader.ResourceEntry: long lastModified> = $l9;
        if r9 == null goto label38;

     label22:
        r38 = virtualinvoke r9.<org.apache.naming.resources.Resource: java.io.InputStream streamContent()>();

     label23:
        goto label26;

     label24:
        $r52 := @caughtexception;
        r14 = $r52;

     label25:
        return null;

     label26:
        $z7 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean needConvert>;
        if $z7 == 0 goto label27;

        $z8 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".properties");
        if $z8 == 0 goto label27;

        z2 = 1;

     label27:
        $r53 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.security.Permission allPermission>;
        r54 = $r53;
        entermonitor $r53;

     label28:
        $r55 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $i10 = lengthof $r55;
        $i11 = $i10 + 1;
        r15 = newarray (long)[$i11];
        i4 = 0;
        goto label30;

     label29:
        $r56 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $l12 = $r56[i4];
        r15[i4] = $l12;
        i4 = i4 + 1;

     label30:
        $r57 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $i13 = lengthof $r57;
        if i4 < $i13 goto label29;

        $r58 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates>;
        $i14 = lengthof $r58;
        $l15 = r6.<org.apache.catalina.loader.ResourceEntry: long lastModified>;
        r15[$i14] = $l15;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: long[] lastModifiedDates> = r15;
        $r59 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $i16 = lengthof $r59;
        $i17 = $i16 + 1;
        r16 = newarray (java.lang.String)[$i17];
        i18 = 0;
        goto label32;

     label31:
        $r60 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $r61 = $r60[i18];
        r16[i18] = $r61;
        i18 = i18 + 1;

     label32:
        $r62 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $i19 = lengthof $r62;
        if i18 < $i19 goto label31;

        $r63 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths>;
        $i20 = lengthof $r63;
        r16[$i20] = r10;
        r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] paths> = r16;
        exitmonitor r54;

     label33:
        goto label38;

     label34:
        $r64 := @caughtexception;

     label35:
        exitmonitor r54;

     label36:
        throw $r64;

     label37:
        $r65 := @caughtexception;
        r66 = $r65;

     label38:
        i3 = i3 + 1;

     label39:
        if r6 != null goto label40;

        if i3 < i2 goto label18;

     label40:
        if r6 != null goto label41;

        $r67 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap notFoundResources>;
        $z9 = virtualinvoke $r67.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);
        if $z9 == 0 goto label41;

        return null;

     label41:
        $r68 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        r69 = $r68;
        entermonitor $r68;

     label42:
        $z10 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean openJARs()>();
        if $z10 != 0 goto label49;

     label43:
        if r38 == null goto label47;

     label44:
        virtualinvoke r38.<java.io.InputStream: void close()>();

     label45:
        goto label47;

     label46:
        $r70 := @caughtexception;
        r17 = $r70;

     label47:
        exitmonitor r69;

     label48:
        return null;

     label49:
        i21 = 0;
        goto label106;

     label50:
        $r71 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r72 = $r71[i21];
        r4 = virtualinvoke $r72.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>(r5);
        if r4 == null goto label105;

        $r73 = new org.apache.catalina.loader.ResourceEntry;
        specialinvoke $r73.<org.apache.catalina.loader.ResourceEntry: void <init>()>();
        r6 = $r73;

     label51:
        $r74 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        $r75 = $r74[i21];
        $r76 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL getURI(java.io.File)>($r75);
        r6.<org.apache.catalina.loader.ResourceEntry: java.net.URL codeBase> = $r76;
        $r77 = r6.<org.apache.catalina.loader.ResourceEntry: java.net.URL codeBase>;
        $r78 = virtualinvoke $r77.<java.net.URL: java.lang.String toString()>();
        $r79 = staticinvoke <org.apache.tomcat.util.buf.UriUtil: java.net.URL buildJarUrl(java.lang.String,java.lang.String)>($r78, r5);
        r6.<org.apache.catalina.loader.ResourceEntry: java.net.URL source> = $r79;
        $r80 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File[] jarRealFiles>;
        $r81 = $r80[i21];
        $l22 = virtualinvoke $r81.<java.io.File: long lastModified()>();
        r6.<org.apache.catalina.loader.ResourceEntry: long lastModified> = $l22;

     label52:
        goto label60;

     label53:
        $r82 := @caughtexception;
        r83 = $r82;

     label54:
        if r38 == null goto label58;

     label55:
        virtualinvoke r38.<java.io.InputStream: void close()>();

     label56:
        goto label58;

     label57:
        $r84 := @caughtexception;
        r85 = $r84;

     label58:
        exitmonitor r69;

     label59:
        return null;

     label60:
        $l23 = virtualinvoke r4.<java.util.jar.JarEntry: long getSize()>();
        i7 = (int) $l23;

     label61:
        if z0 == 0 goto label62;

        $r86 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r87 = $r86[i21];
        $r88 = virtualinvoke $r87.<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>();
        r6.<org.apache.catalina.loader.ResourceEntry: java.util.jar.Manifest manifest> = $r88;
        goto label63;

     label62:
        $r89 = <org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.Manifest MANIFEST_UNKNOWN>;
        r6.<org.apache.catalina.loader.ResourceEntry: java.util.jar.Manifest manifest> = $r89;

     label63:
        $r90 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r91 = $r90[i21];
        r38 = virtualinvoke $r91.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r4);

     label64:
        goto label72;

     label65:
        $r92 := @caughtexception;
        r93 = $r92;

     label66:
        if r38 == null goto label70;

     label67:
        virtualinvoke r38.<java.io.InputStream: void close()>();

     label68:
        goto label70;

     label69:
        $r94 := @caughtexception;
        r95 = $r94;

     label70:
        exitmonitor r69;

     label71:
        return null;

     label72:
        $z11 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: boolean antiJARLocking>;
        if $z11 == 0 goto label105;

        $z12 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".class");
        if $z12 != 0 goto label105;

        r96 = newarray (byte)[1024];
        $r97 = new java.io.File;
        $r98 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir>;
        $r99 = virtualinvoke r4.<java.util.jar.JarEntry: java.lang.String getName()>();
        specialinvoke $r97.<java.io.File: void <init>(java.io.File,java.lang.String)>($r98, $r99);
        r100 = $r97;
        $z13 = virtualinvoke r100.<java.io.File: boolean exists()>();
        if $z13 != 0 goto label105;

        $r101 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r102 = $r101[i21];
        r103 = virtualinvoke $r102.<java.util.jar.JarFile: java.util.Enumeration entries()>();
        goto label104;

     label73:
        $r104 = interfaceinvoke r103.<java.util.Enumeration: java.lang.Object nextElement()>();
        r105 = (java.util.jar.JarEntry) $r104;
        $z14 = virtualinvoke r105.<java.util.jar.JarEntry: boolean isDirectory()>();
        if $z14 != 0 goto label104;

        $r106 = virtualinvoke r105.<java.util.jar.JarEntry: java.lang.String getName()>();
        $z15 = virtualinvoke $r106.<java.lang.String: boolean endsWith(java.lang.String)>(".class");
        if $z15 != 0 goto label104;

        $r107 = new java.io.File;
        $r108 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.io.File loaderDir>;
        $r109 = virtualinvoke r105.<java.util.jar.JarEntry: java.lang.String getName()>();
        specialinvoke $r107.<java.io.File: void <init>(java.io.File,java.lang.String)>($r108, $r109);
        r110 = $r107;

     label74:
        $r111 = virtualinvoke r110.<java.io.File: java.lang.String getCanonicalPath()>();
        $r112 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String canonicalLoaderDir>;
        $z16 = virtualinvoke $r111.<java.lang.String: boolean startsWith(java.lang.String)>($r112);
        if $z16 != 0 goto label76;

        $r113 = new java.lang.IllegalArgumentException;
        $r114 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r115 = newarray (java.lang.Object)[1];
        $r116 = virtualinvoke r105.<java.util.jar.JarEntry: java.lang.String getName()>();
        $r115[0] = $r116;
        $r117 = virtualinvoke $r114.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.illegalJarPath", $r115);
        specialinvoke $r113.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r117);
        throw $r113;

     label75:
        $r118 := @caughtexception;
        r119 = $r118;
        $r120 = new java.lang.IllegalArgumentException;
        $r121 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r122 = newarray (java.lang.Object)[1];
        $r123 = virtualinvoke r105.<java.util.jar.JarEntry: java.lang.String getName()>();
        $r122[0] = $r123;
        $r124 = virtualinvoke $r121.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.validationErrorJarPath", $r122);
        specialinvoke $r120.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r124, r119);
        throw $r120;

     label76:
        r125 = virtualinvoke r110.<java.io.File: java.io.File getParentFile()>();
        $z17 = virtualinvoke r125.<java.io.File: boolean mkdirs()>();
        if $z17 != 0 goto label77;

        virtualinvoke r125.<java.io.File: boolean exists()>();

     label77:
        r126 = null;
        r127 = null;

     label78:
        $r128 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.jar.JarFile[] jarFiles>;
        $r129 = $r128[i21];
        r127 = virtualinvoke $r129.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r105);
        $r130 = new java.io.FileOutputStream;
        specialinvoke $r130.<java.io.FileOutputStream: void <init>(java.io.File)>(r110);
        r126 = $r130;

     label79:
        i5 = virtualinvoke r127.<java.io.InputStream: int read(byte[])>(r96);
        if i5 > 0 goto label80;

        goto label81;

     label80:
        virtualinvoke r126.<java.io.FileOutputStream: void write(byte[],int,int)>(r96, 0, i5);
        goto label79;

     label81:
        $l24 = virtualinvoke r105.<java.util.jar.JarEntry: long getTime()>();
        virtualinvoke r110.<java.io.File: boolean setLastModified(long)>($l24);

     label82:
        goto label98;

     label83:
        $r131 := @caughtexception;
        r132 = $r131;

     label84:
        if r127 == null goto label87;

        virtualinvoke r127.<java.io.InputStream: void close()>();

     label85:
        goto label87;

     label86:
        $r133 := @caughtexception;
        r18 = $r133;

     label87:
        if r126 == null goto label104;

        virtualinvoke r126.<java.io.FileOutputStream: void close()>();

     label88:
        goto label104;

     label89:
        $r134 := @caughtexception;
        r135 = $r134;
        goto label104;

     label90:
        $r136 := @caughtexception;
        r19 = $r136;

     label91:
        if r127 == null goto label94;

        virtualinvoke r127.<java.io.InputStream: void close()>();

     label92:
        goto label94;

     label93:
        $r137 := @caughtexception;
        r138 = $r137;

     label94:
        if r126 == null goto label97;

        virtualinvoke r126.<java.io.FileOutputStream: void close()>();

     label95:
        goto label97;

     label96:
        $r139 := @caughtexception;
        r140 = $r139;

     label97:
        throw r19;

     label98:
        if r127 == null goto label101;

        virtualinvoke r127.<java.io.InputStream: void close()>();

     label99:
        goto label101;

     label100:
        $r141 := @caughtexception;
        r142 = $r141;

     label101:
        if r126 == null goto label104;

        virtualinvoke r126.<java.io.FileOutputStream: void close()>();

     label102:
        goto label104;

     label103:
        $r143 := @caughtexception;
        r144 = $r143;

     label104:
        $z20 = interfaceinvoke r103.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z20 != 0 goto label73;

     label105:
        i21 = i21 + 1;

     label106:
        if r6 != null goto label107;

        if i21 < i1 goto label50;

     label107:
        if r6 != null goto label119;

        $r145 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap notFoundResources>;
        r146 = $r145;
        entermonitor $r145;

     label108:
        $r147 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.HashMap notFoundResources>;
        virtualinvoke $r147.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r1);
        exitmonitor r146;

     label109:
        goto label113;

     label110:
        $r149 := @caughtexception;

     label111:
        exitmonitor r146;

     label112:
        throw $r149;

     label113:
        if r38 == null goto label117;

     label114:
        virtualinvoke r38.<java.io.InputStream: void close()>();

     label115:
        goto label117;

     label116:
        $r150 := @caughtexception;
        r151 = $r150;

     label117:
        exitmonitor r69;

     label118:
        return null;

     label119:
        if r38 == null goto label146;

        if z1 != 0 goto label120;

        if z2 == 0 goto label146;

     label120:
        r152 = newarray (byte)[i7];
        i25 = 0;

     label121:
        $i26 = lengthof r152;
        $i27 = $i26 - i25;
        i28 = virtualinvoke r38.<java.io.InputStream: int read(byte[],int,int)>(r152, i25, $i27);
        if i28 > 0 goto label122;

        goto label130;

     label122:
        i25 = i25 + i28;
        goto label121;

     label123:
        $r153 := @caughtexception;
        r154 = $r153;
        $r155 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r156 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.tomcat.util.res.StringManager sm>;
        $r157 = newarray (java.lang.Object)[1];
        $r157[0] = r1;
        $r158 = virtualinvoke $r156.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("webappClassLoader.readError", $r157);
        interfaceinvoke $r155.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r158, r154);

     label124:
        if r38 == null goto label128;

     label125:
        virtualinvoke r38.<java.io.InputStream: void close()>();

     label126:
        goto label128;

     label127:
        $r159 := @caughtexception;
        r160 = $r159;

     label128:
        exitmonitor r69;

     label129:
        return null;

     label130:
        if z2 == 0 goto label140;

        $r161 = new java.lang.String;
        specialinvoke $r161.<java.lang.String: void <init>(byte[],int,int)>(r152, 0, i25);
        r162 = $r161;

     label131:
        $r163 = <org.apache.catalina.loader.WebappClassLoaderBase: java.nio.charset.Charset CHARSET_UTF8>;
        r152 = virtualinvoke r162.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r163);

     label132:
        goto label140;

     label133:
        $r164 := @caughtexception;
        r165 = $r164;

     label134:
        if r38 == null goto label138;

     label135:
        virtualinvoke r38.<java.io.InputStream: void close()>();

     label136:
        goto label138;

     label137:
        $r166 := @caughtexception;
        r167 = $r166;

     label138:
        exitmonitor r69;

     label139:
        return null;

     label140:
        r6.<org.apache.catalina.loader.ResourceEntry: byte[] binaryContent> = r152;
        if r4 == null goto label146;

        $r168 = virtualinvoke r4.<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>();
        r6.<org.apache.catalina.loader.ResourceEntry: java.security.cert.Certificate[] certificates> = $r168;
        goto label146;

     label141:
        $r169 := @caughtexception;
        r20 = $r169;
        if r38 == null goto label145;

     label142:
        virtualinvoke r38.<java.io.InputStream: void close()>();

     label143:
        goto label145;

     label144:
        $r170 := @caughtexception;
        r171 = $r170;

     label145:
        throw r20;

     label146:
        if r38 == null goto label150;

     label147:
        virtualinvoke r38.<java.io.InputStream: void close()>();

     label148:
        goto label150;

     label149:
        $r172 := @caughtexception;
        r173 = $r172;

     label150:
        exitmonitor r69;

     label151:
        goto label155;

     label152:
        $r174 := @caughtexception;

     label153:
        exitmonitor r69;

     label154:
        throw $r174;

     label155:
        $r175 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries>;
        r176 = $r175;
        entermonitor $r175;

     label156:
        $r177 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries>;
        $r178 = interfaceinvoke $r177.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);
        r179 = (org.apache.catalina.loader.ResourceEntry) $r178;
        if r179 != null goto label157;

        $r180 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries>;
        interfaceinvoke $r180.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r6);
        goto label158;

     label157:
        r6 = r179;

     label158:
        exitmonitor r176;

     label159:
        goto label163;

     label160:
        $r182 := @caughtexception;

     label161:
        exitmonitor r176;

     label162:
        throw $r182;

     label163:
        return r6;

        catch java.io.IOException from label5 to label6 with label7;
        catch java.lang.Throwable from label3 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.Throwable from label28 to label33 with label34;
        catch java.lang.Throwable from label35 to label36 with label34;
        catch javax.naming.NamingException from label18 to label25 with label37;
        catch javax.naming.NamingException from label26 to label37 with label37;
        catch java.io.IOException from label44 to label45 with label46;
        catch java.net.MalformedURLException from label51 to label52 with label53;
        catch java.io.IOException from label55 to label56 with label57;
        catch java.io.IOException from label61 to label64 with label65;
        catch java.io.IOException from label67 to label68 with label69;
        catch java.io.IOException from label74 to label75 with label75;
        catch java.io.IOException from label78 to label82 with label83;
        catch java.io.IOException from label84 to label85 with label86;
        catch java.io.IOException from label87 to label88 with label89;
        catch java.lang.Throwable from label78 to label84 with label90;
        catch java.io.IOException from label91 to label92 with label93;
        catch java.io.IOException from label94 to label95 with label96;
        catch java.io.IOException from label98 to label99 with label100;
        catch java.io.IOException from label101 to label102 with label103;
        catch java.lang.Throwable from label108 to label109 with label110;
        catch java.lang.Throwable from label111 to label112 with label110;
        catch java.io.IOException from label114 to label115 with label116;
        catch java.io.IOException from label121 to label123 with label123;
        catch java.io.IOException from label125 to label126 with label127;
        catch java.lang.Exception from label131 to label132 with label133;
        catch java.io.IOException from label135 to label136 with label137;
        catch java.lang.Throwable from label42 to label43 with label141;
        catch java.lang.Throwable from label49 to label54 with label141;
        catch java.lang.Throwable from label60 to label66 with label141;
        catch java.lang.Throwable from label72 to label113 with label141;
        catch java.lang.Throwable from label119 to label124 with label141;
        catch java.lang.Throwable from label130 to label134 with label141;
        catch java.lang.Throwable from label140 to label141 with label141;
        catch java.io.IOException from label142 to label143 with label144;
        catch java.io.IOException from label147 to label148 with label149;
        catch java.lang.Throwable from label42 to label48 with label152;
        catch java.lang.Throwable from label49 to label59 with label152;
        catch java.lang.Throwable from label60 to label71 with label152;
        catch java.lang.Throwable from label72 to label118 with label152;
        catch java.lang.Throwable from label119 to label129 with label152;
        catch java.lang.Throwable from label130 to label139 with label152;
        catch java.lang.Throwable from label140 to label151 with label152;
        catch java.lang.Throwable from label153 to label154 with label152;
        catch java.lang.Throwable from label156 to label159 with label160;
        catch java.lang.Throwable from label161 to label162 with label160;
    }

    private java.lang.String binaryNameToPath(java.lang.String, boolean)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, $r5, $r8;
        boolean z0;
        java.lang.StringBuilder $r2, r3;
        int $i0, $i1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = new java.lang.StringBuilder;
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i1 = 7 + $i0;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);
        r3 = $r2;
        if z0 == 0 goto label0;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label0:
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");
        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r8;
    }

    private java.lang.String nameToPath(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder r2, $r3;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if $z0 == 0 goto label0;

        return r1;

     label0:
        $r3 = new java.lang.StringBuilder;
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i1 = 1 + $i0;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);
        r2 = $r3;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    protected boolean isPackageSealed(java.lang.String, java.util.jar.Manifest)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r4, r6, $r7, $r8, $r14;
        java.util.jar.Manifest r2;
        java.lang.StringBuilder $r3, $r9;
        java.util.jar.Attributes r5, $r11, r12;
        java.util.jar.Attributes$Name $r10, $r13;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.Manifest;
        $r3 = new java.lang.StringBuilder;
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);
        r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        r5 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>(r4);
        r6 = null;
        if r5 == null goto label0;

        $r10 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;
        r6 = virtualinvoke r5.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r10);

     label0:
        if r6 != null goto label1;

        $r11 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();
        r12 = $r11;
        if $r11 == null goto label1;

        $r13 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;
        r6 = virtualinvoke r12.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r13);

     label1:
        $r14 = "true";
        $z0 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);
        return $z0;
    }

    protected java.io.InputStream findLoadedResource(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r2;
        org.apache.catalina.loader.ResourceEntry r3;
        java.io.IOException r4, $r12;
        java.util.Map $r5;
        java.lang.Object $r6;
        byte[] $r7, $r9;
        java.io.ByteArrayInputStream $r8;
        java.net.URL $r10;
        java.io.InputStream $r11;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        r2 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String nameToPath(java.lang.String)>(r1);
        $r5 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries>;
        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);
        r3 = (org.apache.catalina.loader.ResourceEntry) $r6;
        if r3 == null goto label3;

        $r7 = r3.<org.apache.catalina.loader.ResourceEntry: byte[] binaryContent>;
        if $r7 == null goto label0;

        $r8 = new java.io.ByteArrayInputStream;
        $r9 = r3.<org.apache.catalina.loader.ResourceEntry: byte[] binaryContent>;
        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);
        return $r8;

     label0:
        $r10 = r3.<org.apache.catalina.loader.ResourceEntry: java.net.URL source>;
        $r11 = virtualinvoke $r10.<java.net.URL: java.io.InputStream openStream()>();

     label1:
        return $r11;

     label2:
        $r12 := @caughtexception;
        r4 = $r12;

     label3:
        return null;

        catch java.io.IOException from label0 to label1 with label2;
    }

    protected java.lang.Class findLoadedClass0(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r2;
        org.apache.catalina.loader.ResourceEntry r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.Class $r6;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        r2 = specialinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String binaryNameToPath(java.lang.String,boolean)>(r1, 1);
        $r4 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.util.Map resourceEntries>;
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);
        r3 = (org.apache.catalina.loader.ResourceEntry) $r5;
        if r3 == null goto label0;

        $r6 = r3.<org.apache.catalina.loader.ResourceEntry: java.lang.Class loadedClass>;
        return $r6;

     label0:
        return null;
    }

    protected void refreshPolicy()
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.security.Policy r1;
        java.security.AccessControlException $r2, r3;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;

     label0:
        r1 = staticinvoke <java.security.Policy: java.security.Policy getPolicy()>();
        virtualinvoke r1.<java.security.Policy: void refresh()>();

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        r3 = $r2;

     label3:
        return;

        catch java.security.AccessControlException from label0 to label1 with label2;
    }

    protected boolean filter(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1, r2, $r4;
        null_type n0;
        int i0, i1, $i2;
        java.lang.String[] $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        return 0;

     label0:
        n0 = null;
        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);
        if i0 == -1 goto label1;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        goto label2;

     label1:
        return 0;

     label2:
        i1 = 0;
        goto label5;

     label3:
        $r3 = <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] packageTriggers>;
        $r4 = $r3[i1];
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);
        if $z0 == 0 goto label4;

        return 1;

     label4:
        i1 = i1 + 1;

     label5:
        $r5 = <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] packageTriggers>;
        $i2 = lengthof $r5;
        if i1 < $i2 goto label3;

        return 0;
    }

    protected boolean validate(java.lang.String)
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        return 0;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("java.");
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("javax.servlet.jsp.jstl");
        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("javax.servlet.");
        if $z2 == 0 goto label3;

        return 0;

     label3:
        $z3 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("javax.el");
        if $z3 == 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    protected boolean validateJarFile(java.io.File) throws java.io.IOException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.io.File r1;
        java.lang.String[] $r2, $r11, $r14, $r18, $r37;
        java.util.jar.JarFile r3;
        int i0, $i1;
        null_type n0;
        java.lang.Exception r4, $r16;
        java.util.jar.JarEntry r5;
        java.io.IOException r6, $r36, $r38, r39, $r41, r42;
        java.lang.Throwable r7, $r40;
        org.apache.tomcat.util.compat.JreCompat $r8;
        java.lang.ClassLoader $r9, $r10;
        java.lang.String $r12, $r15, $r19, $r20, $r21, r23, $r28, $r35;
        java.lang.Class r13;
        java.lang.StringBuilder $r17, $r22, $r26, $r27, $r30, $r31, $r32, $r33, $r34;
        org.apache.juli.logging.Log $r24, $r25, $r29;
        boolean $z0;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.io.File;
        $r2 = <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] triggers>;
        if $r2 != null goto label0;

        return 1;

     label0:
        r3 = null;

     label1:
        $r8 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: org.apache.tomcat.util.compat.JreCompat getInstance()>();
        r3 = virtualinvoke $r8.<org.apache.tomcat.util.compat.JreCompat: java.util.jar.JarFile jarFileNewInstance(java.io.File)>(r1);
        i0 = 0;
        goto label16;

     label2:
        n0 = null;

     label3:
        $r9 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        if $r9 == null goto label4;

        $r10 = r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.lang.ClassLoader parent>;
        $r11 = <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] triggers>;
        $r12 = $r11[i0];
        r13 = virtualinvoke $r10.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r12);
        goto label7;

     label4:
        $r14 = <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] triggers>;
        $r15 = $r14[i0];
        r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r15);

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;
        r4 = $r16;
        r13 = null;

     label7:
        if r13 != null goto label8;

        goto label15;

     label8:
        $r17 = new java.lang.StringBuilder;
        $r18 = <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] triggers>;
        $r19 = $r18[i0];
        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>($r21);
        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");
        r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        $r24 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r24.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label9;

        $r25 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(" Checking for ");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r28);

     label9:
        r5 = virtualinvoke r3.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>(r23);
        if r5 == null goto label15;

        $r29 = <org.apache.catalina.loader.WebappClassLoaderBase: org.apache.juli.logging.Log log>;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("validateJarFile(");
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - jar not loaded. See Servlet Spec 3.0, ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("section 10.7.2. Offending class: ");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r29.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r35);

     label10:
        if r3 == null goto label14;

     label11:
        virtualinvoke r3.<java.util.jar.JarFile: void close()>();

     label12:
        goto label14;

     label13:
        $r36 := @caughtexception;
        r6 = $r36;

     label14:
        return 0;

     label15:
        i0 = i0 + 1;

     label16:
        $r37 = <org.apache.catalina.loader.WebappClassLoaderBase: java.lang.String[] triggers>;
        $i1 = lengthof $r37;
        if i0 < $i1 goto label2;

     label17:
        if r3 == null goto label21;

     label18:
        virtualinvoke r3.<java.util.jar.JarFile: void close()>();

     label19:
        goto label21;

     label20:
        $r38 := @caughtexception;
        r39 = $r38;

     label21:
        return 1;

     label22:
        $r40 := @caughtexception;
        r7 = $r40;
        if r3 == null goto label26;

     label23:
        virtualinvoke r3.<java.util.jar.JarFile: void close()>();

     label24:
        goto label26;

     label25:
        $r41 := @caughtexception;
        r42 = $r41;

     label26:
        throw r7;

        catch java.lang.Exception from label3 to label5 with label6;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Throwable from label1 to label10 with label22;
        catch java.lang.Throwable from label15 to label17 with label22;
        catch java.io.IOException from label23 to label24 with label25;
    }

    protected java.net.URL getURL(java.io.File, boolean) throws java.net.MalformedURLException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.io.File r1, r2;
        boolean z0;
        java.io.IOException r3, $r4;
        java.net.URL $r5, $r7;
        java.net.URI $r6;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.io.File;
        z0 := @parameter1: boolean;
        r2 = r1;

     label0:
        r2 = virtualinvoke r2.<java.io.File: java.io.File getCanonicalFile()>();

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r3 = $r4;

     label3:
        if z0 == 0 goto label4;

        $r5 = virtualinvoke r0.<org.apache.catalina.loader.WebappClassLoaderBase: java.net.URL getURI(java.io.File)>(r2);
        return $r5;

     label4:
        $r6 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>();
        $r7 = virtualinvoke $r6.<java.net.URI: java.net.URL toURL()>();
        return $r7;

        catch java.io.IOException from label0 to label1 with label2;
    }

    protected java.net.URL getURI(java.io.File) throws java.net.MalformedURLException
    {
        org.apache.catalina.loader.WebappClassLoaderBase r0;
        java.io.File r1, r2;
        java.io.IOException r3, $r4;
        java.net.URI $r5;
        java.net.URL $r6;

        r0 := @this: org.apache.catalina.loader.WebappClassLoaderBase;
        r1 := @parameter0: java.io.File;
        r2 = r1;

     label0:
        r2 = virtualinvoke r2.<java.io.File: java.io.File getCanonicalFile()>();

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r3 = $r4;

     label3:
        $r5 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>();
        $r6 = virtualinvoke $r5.<java.net.URI: java.net.URL toURL()>();
        return $r6;

        catch java.io.IOException from label0 to label1 with label2;
    }

    protected static void deleteDir(java.io.File)
    {
        java.io.File r0, r2, $r3;
        java.lang.String[] r1;
        int i0, $i1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @parameter0: java.io.File;
        r1 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();
        if r1 != null goto label0;

        r1 = newarray (java.lang.String)[0];

     label0:
        i0 = 0;
        goto label4;

     label1:
        $r3 = new java.io.File;
        $r4 = r1[i0];
        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r4);
        r2 = $r3;
        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();
        if $z0 == 0 goto label2;

        staticinvoke <org.apache.catalina.loader.WebappClassLoaderBase: void deleteDir(java.io.File)>(r2);
        goto label3;

     label2:
        virtualinvoke r2.<java.io.File: boolean delete()>();

     label3:
        i0 = i0 + 1;

     label4:
        $i1 = lengthof r1;
        if i0 < $i1 goto label1;

        virtualinvoke r0.<java.io.File: boolean delete()>();
        return;
    }
}
