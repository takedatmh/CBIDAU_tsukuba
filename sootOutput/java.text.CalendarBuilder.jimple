class java.text.CalendarBuilder extends java.lang.Object
{
    private static final int UNSET;
    private static final int COMPUTED;
    private static final int MINIMUM_USER_STAMP;
    private static final int MAX_FIELD;
    public static final int WEEK_YEAR;
    public static final int ISO_DAY_OF_WEEK;
    private final int[] field;
    private int nextStamp;
    private int maxFieldIndex;

    void <init>()
    {
        java.text.CalendarBuilder r0;
        int[] $r1;

        r0 := @this: java.text.CalendarBuilder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (int)[36];
        r0.<java.text.CalendarBuilder: int[] field> = $r1;
        r0.<java.text.CalendarBuilder: int nextStamp> = 2;
        r0.<java.text.CalendarBuilder: int maxFieldIndex> = -1;
        return;
    }

    java.text.CalendarBuilder set(int, int)
    {
        java.text.CalendarBuilder r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        int[] $r2, $r3;

        r0 := @this: java.text.CalendarBuilder;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 != 1000 goto label0;

        i0 = 7;
        i1 = staticinvoke <java.text.CalendarBuilder: int toCalendarDayOfWeek(int)>(i1);

     label0:
        $r2 = r0.<java.text.CalendarBuilder: int[] field>;
        $i2 = r0.<java.text.CalendarBuilder: int nextStamp>;
        $i3 = $i2 + 1;
        r0.<java.text.CalendarBuilder: int nextStamp> = $i3;
        $r2[i0] = $i2;
        $r3 = r0.<java.text.CalendarBuilder: int[] field>;
        $i4 = 18 + i0;
        $r3[$i4] = i1;
        $i5 = r0.<java.text.CalendarBuilder: int maxFieldIndex>;
        if i0 <= $i5 goto label1;

        if i0 >= 17 goto label1;

        r0.<java.text.CalendarBuilder: int maxFieldIndex> = i0;

     label1:
        return r0;
    }

    java.text.CalendarBuilder addYear(int)
    {
        java.text.CalendarBuilder r0;
        int i0, $i2, $i3, $i5, $i6;
        byte $b1, $b4;
        int[] $r1, $r2;

        r0 := @this: java.text.CalendarBuilder;
        i0 := @parameter0: int;
        $r1 = r0.<java.text.CalendarBuilder: int[] field>;
        $b1 = 19;
        $i2 = $r1[$b1];
        $i3 = $i2 + i0;
        $r1[$b1] = $i3;
        $r2 = r0.<java.text.CalendarBuilder: int[] field>;
        $b4 = 35;
        $i5 = $r2[$b4];
        $i6 = $i5 + i0;
        $r2[$b4] = $i6;
        return r0;
    }

    boolean isSet(int)
    {
        java.text.CalendarBuilder r0;
        int i0, $i1;
        int[] $r1;
        boolean $z0;

        r0 := @this: java.text.CalendarBuilder;
        i0 := @parameter0: int;
        if i0 != 1000 goto label0;

        i0 = 7;

     label0:
        $r1 = r0.<java.text.CalendarBuilder: int[] field>;
        $i1 = $r1[i0];
        if $i1 <= 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    java.text.CalendarBuilder clear(int)
    {
        java.text.CalendarBuilder r0;
        int i0, $i1;
        int[] $r1, $r2;

        r0 := @this: java.text.CalendarBuilder;
        i0 := @parameter0: int;
        if i0 != 1000 goto label0;

        i0 = 7;

     label0:
        $r1 = r0.<java.text.CalendarBuilder: int[] field>;
        $r1[i0] = 0;
        $r2 = r0.<java.text.CalendarBuilder: int[] field>;
        $i1 = 18 + i0;
        $r2[$i1] = 0;
        return r0;
    }

    java.util.Calendar establish(java.util.Calendar)
    {
        java.text.CalendarBuilder r0;
        java.util.Calendar r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, i13, i14, $i15, $i16, $i17;
        int[] $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: java.text.CalendarBuilder;
        r1 := @parameter0: java.util.Calendar;
        $z1 = virtualinvoke r0.<java.text.CalendarBuilder: boolean isSet(int)>(17);
        if $z1 == 0 goto label0;

        $r2 = r0.<java.text.CalendarBuilder: int[] field>;
        $i2 = $r2[17];
        $r3 = r0.<java.text.CalendarBuilder: int[] field>;
        $i3 = $r3[1];
        if $i2 <= $i3 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        z0 = $z2;
        if z0 == 0 goto label3;

        $z3 = virtualinvoke r1.<java.util.Calendar: boolean isWeekDateSupported()>();
        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r0.<java.text.CalendarBuilder: boolean isSet(int)>(1);
        if $z4 != 0 goto label2;

        $r4 = r0.<java.text.CalendarBuilder: int[] field>;
        $i4 = $r4[35];
        virtualinvoke r0.<java.text.CalendarBuilder: java.text.CalendarBuilder set(int,int)>(1, $i4);

     label2:
        z0 = 0;

     label3:
        virtualinvoke r1.<java.util.Calendar: void clear()>();
        i0 = 2;

     label4:
        $i5 = r0.<java.text.CalendarBuilder: int nextStamp>;
        if i0 >= $i5 goto label8;

        i1 = 0;

     label5:
        $i6 = r0.<java.text.CalendarBuilder: int maxFieldIndex>;
        if i1 > $i6 goto label7;

        $r6 = r0.<java.text.CalendarBuilder: int[] field>;
        $i7 = $r6[i1];
        if $i7 != i0 goto label6;

        $r7 = r0.<java.text.CalendarBuilder: int[] field>;
        $i8 = 18 + i1;
        $i9 = $r7[$i8];
        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(i1, $i9);
        goto label7;

     label6:
        i1 = i1 + 1;
        goto label5;

     label7:
        i0 = i0 + 1;
        goto label4;

     label8:
        if z0 == 0 goto label16;

        $z5 = virtualinvoke r0.<java.text.CalendarBuilder: boolean isSet(int)>(3);
        if $z5 == 0 goto label9;

        $r8 = r0.<java.text.CalendarBuilder: int[] field>;
        $i10 = $r8[21];
        goto label10;

     label9:
        $i10 = 1;

     label10:
        i11 = $i10;
        $z6 = virtualinvoke r0.<java.text.CalendarBuilder: boolean isSet(int)>(7);
        if $z6 == 0 goto label11;

        $r9 = r0.<java.text.CalendarBuilder: int[] field>;
        $i12 = $r9[25];
        goto label12;

     label11:
        $i12 = virtualinvoke r1.<java.util.Calendar: int getFirstDayOfWeek()>();

     label12:
        i13 = $i12;
        $z7 = staticinvoke <java.text.CalendarBuilder: boolean isValidDayOfWeek(int)>(i13);
        if $z7 != 0 goto label15;

        $z8 = virtualinvoke r1.<java.util.Calendar: boolean isLenient()>();
        if $z8 == 0 goto label15;

        if i13 < 8 goto label13;

        i14 = i13 + -1;
        $i15 = i14 / 7;
        i11 = i11 + $i15;
        $i16 = i14 % 7;
        i13 = $i16 + 1;
        goto label14;

     label13:
        if i13 > 0 goto label14;

        i13 = i13 + 7;
        i11 = i11 + -1;
        goto label13;

     label14:
        i13 = staticinvoke <java.text.CalendarBuilder: int toCalendarDayOfWeek(int)>(i13);

     label15:
        $r10 = r0.<java.text.CalendarBuilder: int[] field>;
        $i17 = $r10[35];
        virtualinvoke r1.<java.util.Calendar: void setWeekDate(int,int,int)>($i17, i11, i13);

     label16:
        return r1;
    }

    public java.lang.String toString()
    {
        java.text.CalendarBuilder r0;
        java.lang.StringBuilder $r1, r2, $r5, $r6, $r8;
        int i0, $i1, $i2, $i3, $i4, i5;
        int[] $r4, $r7;
        boolean $z0;
        char $c6;
        java.lang.String $r11;

        r0 := @this: java.text.CalendarBuilder;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CalendarBuilder:[");
        i0 = 0;

     label0:
        $r4 = r0.<java.text.CalendarBuilder: int[] field>;
        $i1 = lengthof $r4;
        if i0 >= $i1 goto label2;

        $z0 = virtualinvoke r0.<java.text.CalendarBuilder: boolean isSet(int)>(i0);
        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
        $r7 = r0.<java.text.CalendarBuilder: int[] field>;
        $i2 = 18 + i0;
        $i3 = $r7[$i2];
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        $i4 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();
        i5 = $i4 - 1;
        $c6 = virtualinvoke r2.<java.lang.StringBuilder: char charAt(int)>(i5);
        if $c6 != 44 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>(i5);

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r11;
    }

    static int toISODayOfWeek(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;
        if i0 != 1 goto label0;

        $i1 = 7;
        goto label1;

     label0:
        $i1 = i0 - 1;

     label1:
        return $i1;
    }

    static int toCalendarDayOfWeek(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $z0 = staticinvoke <java.text.CalendarBuilder: boolean isValidDayOfWeek(int)>(i0);
        if $z0 != 0 goto label0;

        return i0;

     label0:
        if i0 != 7 goto label1;

        $i1 = 1;
        goto label2;

     label1:
        $i1 = i0 + 1;

     label2:
        return $i1;
    }

    static boolean isValidDayOfWeek(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;
        if i0 <= 0 goto label0;

        if i0 > 7 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }
}
