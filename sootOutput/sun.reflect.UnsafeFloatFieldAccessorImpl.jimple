class sun.reflect.UnsafeFloatFieldAccessorImpl extends sun.reflect.UnsafeFieldAccessorImpl
{

    void <init>(java.lang.reflect.Field)
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.reflect.Field r1;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.reflect.Field;
        specialinvoke r0.<sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>(r1);
        return;
    }

    public java.lang.Object get(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        java.lang.Float $r2;
        float $f0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        $r2 = new java.lang.Float;
        $f0 = virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: float getFloat(java.lang.Object)>(r1);
        specialinvoke $r2.<java.lang.Float: void <init>(float)>($f0);
        return $r2;
    }

    public boolean getBoolean(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: java.lang.IllegalArgumentException newGetBooleanIllegalArgumentException()>();
        throw $r2;
    }

    public byte getByte(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: java.lang.IllegalArgumentException newGetByteIllegalArgumentException()>();
        throw $r2;
    }

    public char getChar(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: java.lang.IllegalArgumentException newGetCharIllegalArgumentException()>();
        throw $r2;
    }

    public short getShort(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: java.lang.IllegalArgumentException newGetShortIllegalArgumentException()>();
        throw $r2;
    }

    public int getInt(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: java.lang.IllegalArgumentException newGetIntIllegalArgumentException()>();
        throw $r2;
    }

    public long getLong(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: java.lang.IllegalArgumentException newGetLongIllegalArgumentException()>();
        throw $r2;
    }

    public float getFloat(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        sun.misc.Unsafe $r2;
        int $i0;
        float $f0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void ensureObj(java.lang.Object)>(r1);
        $r2 = <sun.reflect.UnsafeFloatFieldAccessorImpl: sun.misc.Unsafe unsafe>;
        $i0 = r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: int fieldOffset>;
        $f0 = virtualinvoke $r2.<sun.misc.Unsafe: float getFloat(java.lang.Object,int)>(r1, $i0);
        return $f0;
    }

    public double getDouble(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        float $f0;
        double $d0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        $f0 = virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: float getFloat(java.lang.Object)>(r1);
        $d0 = (double) $f0;
        return $d0;
    }

    public void set(java.lang.Object, java.lang.Object) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        sun.misc.Unsafe $r3, $r5, $r7, $r9, $r11, $r13;
        int $i0, $i2, $i4, $i6, $i7, $i8, $i10;
        java.lang.Byte $r4;
        byte $b1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.Short $r6;
        short $s3;
        java.lang.Character $r8;
        char $c5;
        java.lang.Integer $r10;
        java.lang.Long $r12;
        long $l9;
        java.lang.Float $r14;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void ensureObj(java.lang.Object)>(r1);
        $z0 = r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: boolean isFinal>;
        if $z0 == 0 goto label0;

        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>(r2);

     label0:
        if r2 != null goto label1;

        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>(r2);

     label1:
        $z1 = r2 instanceof java.lang.Byte;
        if $z1 == 0 goto label2;

        $r3 = <sun.reflect.UnsafeFloatFieldAccessorImpl: sun.misc.Unsafe unsafe>;
        $i0 = r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: int fieldOffset>;
        $r4 = (java.lang.Byte) r2;
        $b1 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();
        $f0 = (float) $b1;
        virtualinvoke $r3.<sun.misc.Unsafe: void putFloat(java.lang.Object,int,float)>(r1, $i0, $f0);
        return;

     label2:
        $z2 = r2 instanceof java.lang.Short;
        if $z2 == 0 goto label3;

        $r5 = <sun.reflect.UnsafeFloatFieldAccessorImpl: sun.misc.Unsafe unsafe>;
        $i2 = r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: int fieldOffset>;
        $r6 = (java.lang.Short) r2;
        $s3 = virtualinvoke $r6.<java.lang.Short: short shortValue()>();
        $f1 = (float) $s3;
        virtualinvoke $r5.<sun.misc.Unsafe: void putFloat(java.lang.Object,int,float)>(r1, $i2, $f1);
        return;

     label3:
        $z3 = r2 instanceof java.lang.Character;
        if $z3 == 0 goto label4;

        $r7 = <sun.reflect.UnsafeFloatFieldAccessorImpl: sun.misc.Unsafe unsafe>;
        $i4 = r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: int fieldOffset>;
        $r8 = (java.lang.Character) r2;
        $c5 = virtualinvoke $r8.<java.lang.Character: char charValue()>();
        $f2 = (float) $c5;
        virtualinvoke $r7.<sun.misc.Unsafe: void putFloat(java.lang.Object,int,float)>(r1, $i4, $f2);
        return;

     label4:
        $z4 = r2 instanceof java.lang.Integer;
        if $z4 == 0 goto label5;

        $r9 = <sun.reflect.UnsafeFloatFieldAccessorImpl: sun.misc.Unsafe unsafe>;
        $i6 = r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: int fieldOffset>;
        $r10 = (java.lang.Integer) r2;
        $i7 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();
        $f3 = (float) $i7;
        virtualinvoke $r9.<sun.misc.Unsafe: void putFloat(java.lang.Object,int,float)>(r1, $i6, $f3);
        return;

     label5:
        $z5 = r2 instanceof java.lang.Long;
        if $z5 == 0 goto label6;

        $r11 = <sun.reflect.UnsafeFloatFieldAccessorImpl: sun.misc.Unsafe unsafe>;
        $i8 = r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: int fieldOffset>;
        $r12 = (java.lang.Long) r2;
        $l9 = virtualinvoke $r12.<java.lang.Long: long longValue()>();
        $f4 = (float) $l9;
        virtualinvoke $r11.<sun.misc.Unsafe: void putFloat(java.lang.Object,int,float)>(r1, $i8, $f4);
        return;

     label6:
        $z6 = r2 instanceof java.lang.Float;
        if $z6 == 0 goto label7;

        $r13 = <sun.reflect.UnsafeFloatFieldAccessorImpl: sun.misc.Unsafe unsafe>;
        $i10 = r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: int fieldOffset>;
        $r14 = (java.lang.Float) r2;
        $f5 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();
        virtualinvoke $r13.<sun.misc.Unsafe: void putFloat(java.lang.Object,int,float)>(r1, $i10, $f5);
        return;

     label7:
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>(r2);
        return;
    }

    public void setBoolean(java.lang.Object, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        z0 := @parameter1: boolean;
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void throwSetIllegalArgumentException(boolean)>(z0);
        return;
    }

    public void setByte(java.lang.Object, byte) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        byte b0;
        float $f0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        b0 := @parameter1: byte;
        $f0 = (float) b0;
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void setFloat(java.lang.Object,float)>(r1, $f0);
        return;
    }

    public void setChar(java.lang.Object, char) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        char c0;
        float $f0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        c0 := @parameter1: char;
        $f0 = (float) c0;
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void setFloat(java.lang.Object,float)>(r1, $f0);
        return;
    }

    public void setShort(java.lang.Object, short) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        short s0;
        float $f0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        s0 := @parameter1: short;
        $f0 = (float) s0;
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void setFloat(java.lang.Object,float)>(r1, $f0);
        return;
    }

    public void setInt(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        int i0;
        float $f0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        i0 := @parameter1: int;
        $f0 = (float) i0;
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void setFloat(java.lang.Object,float)>(r1, $f0);
        return;
    }

    public void setLong(java.lang.Object, long) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        long l0;
        float $f0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        l0 := @parameter1: long;
        $f0 = (float) l0;
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void setFloat(java.lang.Object,float)>(r1, $f0);
        return;
    }

    public void setFloat(java.lang.Object, float) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        float f0;
        boolean $z0;
        sun.misc.Unsafe $r2;
        int $i0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        f0 := @parameter1: float;
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void ensureObj(java.lang.Object)>(r1);
        $z0 = r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: boolean isFinal>;
        if $z0 == 0 goto label0;

        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void throwFinalFieldIllegalAccessException(float)>(f0);

     label0:
        $r2 = <sun.reflect.UnsafeFloatFieldAccessorImpl: sun.misc.Unsafe unsafe>;
        $i0 = r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: int fieldOffset>;
        virtualinvoke $r2.<sun.misc.Unsafe: void putFloat(java.lang.Object,int,float)>(r1, $i0, f0);
        return;
    }

    public void setDouble(java.lang.Object, double) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        sun.reflect.UnsafeFloatFieldAccessorImpl r0;
        java.lang.Object r1;
        double d0;

        r0 := @this: sun.reflect.UnsafeFloatFieldAccessorImpl;
        r1 := @parameter0: java.lang.Object;
        d0 := @parameter1: double;
        virtualinvoke r0.<sun.reflect.UnsafeFloatFieldAccessorImpl: void throwSetIllegalArgumentException(double)>(d0);
        return;
    }
}
