public class java.security.KeyStore$PasswordProtection extends java.lang.Object implements java.security.KeyStore$ProtectionParameter, javax.security.auth.Destroyable
{
    private final char[] password;
    private volatile boolean destroyed;

    public void <init>(char[])
    {
        java.security.KeyStore$PasswordProtection r0;
        char[] r1, $r3;
        java.lang.Object $r4;

        r0 := @this: java.security.KeyStore$PasswordProtection;
        r1 := @parameter0: char[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.security.KeyStore$PasswordProtection: boolean destroyed> = 0;
        if r1 != null goto label0;

        $r3 = null;
        goto label1;

     label0:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (char[]) $r4;

     label1:
        r0.<java.security.KeyStore$PasswordProtection: char[] password> = $r3;
        return;
    }

    public synchronized char[] getPassword()
    {
        java.security.KeyStore$PasswordProtection r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        char[] $r2;

        r0 := @this: java.security.KeyStore$PasswordProtection;
        $z0 = r0.<java.security.KeyStore$PasswordProtection: boolean destroyed>;
        if $z0 == 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("password has been cleared");
        throw $r1;

     label0:
        $r2 = r0.<java.security.KeyStore$PasswordProtection: char[] password>;
        return $r2;
    }

    public synchronized void destroy() throws javax.security.auth.DestroyFailedException
    {
        java.security.KeyStore$PasswordProtection r0;
        char[] $r1, $r2;

        r0 := @this: java.security.KeyStore$PasswordProtection;
        r0.<java.security.KeyStore$PasswordProtection: boolean destroyed> = 1;
        $r1 = r0.<java.security.KeyStore$PasswordProtection: char[] password>;
        if $r1 == null goto label0;

        $r2 = r0.<java.security.KeyStore$PasswordProtection: char[] password>;
        staticinvoke <java.util.Arrays: void fill(char[],char)>($r2, 32);

     label0:
        return;
    }

    public synchronized boolean isDestroyed()
    {
        java.security.KeyStore$PasswordProtection r0;
        boolean $z0;

        r0 := @this: java.security.KeyStore$PasswordProtection;
        $z0 = r0.<java.security.KeyStore$PasswordProtection: boolean destroyed>;
        return $z0;
    }
}
