public class sun.net.sdp.SdpProvider extends sun.net.NetHooks$Provider
{
    private static final int MAX_PORT;
    private final boolean enabled;
    private final java.util.List rules;
    private java.io.PrintStream log;

    public void <init>()
    {
        sun.net.sdp.SdpProvider r0;
        java.lang.String r1, r4, $r10;
        java.util.List r2;
        java.io.IOException r3, r5, $r8, $r15;
        sun.security.action.GetPropertyAction $r6, $r12;
        java.lang.Object $r7, $r13;
        java.lang.Object[] $r9;
        java.io.PrintStream r11, $r14;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: sun.net.sdp.SdpProvider;
        specialinvoke r0.<sun.net.NetHooks$Provider: void <init>()>();
        $r6 = new sun.security.action.GetPropertyAction;
        specialinvoke $r6.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>("com.sun.sdp.conf");
        $r7 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r6);
        r1 = (java.lang.String) $r7;
        if r1 != null goto label0;

        r0.<sun.net.sdp.SdpProvider: boolean enabled> = 0;
        r0.<sun.net.sdp.SdpProvider: java.util.List rules> = null;
        return;

     label0:
        r2 = null;
        if r1 == null goto label4;

     label1:
        r2 = staticinvoke <sun.net.sdp.SdpProvider: java.util.List loadRulesFromFile(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;
        r3 = $r8;
        $r9 = newarray (java.lang.Object)[2];
        $r9[0] = r1;
        $r10 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();
        $r9[1] = $r10;
        staticinvoke <sun.net.sdp.SdpProvider: void fail(java.lang.String,java.lang.Object[])>("Error reading %s: %s", $r9);

     label4:
        r11 = null;
        $r12 = new sun.security.action.GetPropertyAction;
        specialinvoke $r12.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>("com.sun.sdp.debug");
        $r13 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r12);
        r4 = (java.lang.String) $r13;
        if r4 == null goto label8;

        r11 = <java.lang.System: java.io.PrintStream out>;
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i0 <= 0 goto label8;

     label5:
        $r14 = new java.io.PrintStream;
        specialinvoke $r14.<java.io.PrintStream: void <init>(java.lang.String)>(r4);
        r11 = $r14;

     label6:
        goto label8;

     label7:
        $r15 := @caughtexception;
        r5 = $r15;

     label8:
        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();
        if $z0 != 0 goto label9;

        $z1 = 1;
        goto label10;

     label9:
        $z1 = 0;

     label10:
        r0.<sun.net.sdp.SdpProvider: boolean enabled> = $z1;
        r0.<sun.net.sdp.SdpProvider: java.util.List rules> = r2;
        r0.<sun.net.sdp.SdpProvider: java.io.PrintStream log> = r11;
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label7;
    }

    private static int[] parsePortRange(java.lang.String)
    {
        java.lang.String r0, r2, r5;
        int i0, $i2, $i4, $i5, $i6, $i7, $i9, $i11;
        int[] r1, $r11;
        boolean z0, $z1, $z2;
        byte $b1, $b3, $b8, $b10;
        java.lang.NumberFormatException $r9, r10;

        r0 := @parameter0: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(45);

     label0:
        r1 = newarray (int)[2];
        if i0 >= 0 goto label5;

        z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("*");
        $b1 = 0;
        if z0 == 0 goto label1;

        $i2 = 0;
        goto label2;

     label1:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label2:
        r1[$b1] = $i2;
        $b3 = 1;
        if z0 == 0 goto label3;

        $i4 = 65535;
        goto label4;

     label3:
        $i4 = r1[0];

     label4:
        r1[$b3] = $i4;
        goto label12;

     label5:
        r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        $i5 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i5 != 0 goto label6;

        r5 = "*";

     label6:
        $i6 = i0 + 1;
        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i6);
        $i7 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i7 != 0 goto label7;

        r2 = "*";

     label7:
        $b8 = 0;
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("*");
        if $z1 == 0 goto label8;

        $i9 = 0;
        goto label9;

     label8:
        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

     label9:
        r1[$b8] = $i9;
        $b10 = 1;
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("*");
        if $z2 == 0 goto label10;

        $i11 = 65535;
        goto label11;

     label10:
        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label11:
        r1[$b10] = $i11;

     label12:
        return r1;

     label13:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = newarray (int)[0];
        return $r11;

        catch java.lang.NumberFormatException from label0 to label12 with label13;
    }

    private static transient void fail(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r7;
        java.lang.Object[] r1;
        java.util.Formatter $r2, r3;
        java.lang.RuntimeException $r5;
        java.lang.Appendable $r6;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.Object[];
        $r2 = new java.util.Formatter;
        specialinvoke $r2.<java.util.Formatter: void <init>()>();
        r3 = $r2;
        virtualinvoke r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r0, r1);
        $r5 = new java.lang.RuntimeException;
        $r6 = virtualinvoke r3.<java.util.Formatter: java.lang.Appendable out()>();
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();
        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r5;
    }

    private static java.util.List loadRulesFromFile(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r5, $r13, $r15, $r16, $r18, $r19, $r22, $r23, $r25, $r26, $r30, $r31, $r33, $r34, $r39, $r43;
        java.util.Scanner $r1, r3;
        java.io.File $r2;
        java.util.ArrayList r4, $r12, r44;
        java.lang.String[] r6;
        sun.net.sdp.SdpProvider$Action r7, r9;
        sun.net.sdp.SdpProvider$Action[] r8;
        int i0, i1, i2, i3, $i5, $i7, $i8, $i9, $i10, i11, $i13, $i14, i15, $i16, $i17, $i18;
        java.net.InetAddress r10, r32;
        short s4, $s12;
        java.lang.Throwable r11, $r45;
        boolean $z0, $z1, $z2, $z4, $z6;
        char $c6;
        java.lang.Object[] $r14, $r17, $r21, $r38, $r42;
        int[] r20;
        sun.net.sdp.SdpProvider$PortRangeRule $r24;
        java.net.InetAddress[] r27, r28;
        sun.net.sdp.SdpProvider$AddressPortRangeRule $r29, $r37;
        java.lang.NumberFormatException $r35, r36;
        java.net.UnknownHostException $r40, r41;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.util.Scanner;
        $r2 = new java.io.File;
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r0);
        specialinvoke $r1.<java.util.Scanner: void <init>(java.io.File)>($r2);
        r3 = $r1;

     label0:
        $r12 = new java.util.ArrayList;
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();
        r4 = $r12;

     label1:
        $z0 = virtualinvoke r3.<java.util.Scanner: boolean hasNextLine()>();
        if $z0 == 0 goto label28;

        $r13 = virtualinvoke r3.<java.util.Scanner: java.lang.String nextLine()>();
        r5 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();
        $i5 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i5 == 0 goto label1;

        $c6 = virtualinvoke r5.<java.lang.String: char charAt(int)>(0);
        if $c6 != 35 goto label2;

        goto label1;

     label2:
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");
        $i7 = lengthof r6;
        if $i7 == 3 goto label3;

        $r14 = newarray (java.lang.Object)[1];
        $r14[0] = r5;
        staticinvoke <sun.net.sdp.SdpProvider: void fail(java.lang.String,java.lang.Object[])>("Malformed line \'%s\'", $r14);
        goto label1;

     label3:
        r7 = null;
        r8 = staticinvoke <sun.net.sdp.SdpProvider$Action: sun.net.sdp.SdpProvider$Action[] values()>();
        i0 = lengthof r8;
        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        r9 = r8[i1];
        $r15 = r6[0];
        $r16 = virtualinvoke r9.<sun.net.sdp.SdpProvider$Action: java.lang.String name()>();
        $z1 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r16);
        if $z1 == 0 goto label5;

        r7 = r9;
        goto label6;

     label5:
        i1 = i1 + 1;
        goto label4;

     label6:
        if r7 != null goto label7;

        $r17 = newarray (java.lang.Object)[1];
        $r18 = r6[0];
        $r17[0] = $r18;
        staticinvoke <sun.net.sdp.SdpProvider: void fail(java.lang.String,java.lang.Object[])>("Action \'%s\' not recognized", $r17);
        goto label1;

     label7:
        $r19 = r6[2];
        r20 = staticinvoke <sun.net.sdp.SdpProvider: int[] parsePortRange(java.lang.String)>($r19);
        $i8 = lengthof r20;
        if $i8 != 0 goto label8;

        $r21 = newarray (java.lang.Object)[1];
        $r22 = r6[2];
        $r21[0] = $r22;
        staticinvoke <sun.net.sdp.SdpProvider: void fail(java.lang.String,java.lang.Object[])>("Malformed port range \'%s\'", $r21);
        goto label1;

     label8:
        $r23 = r6[1];
        $z2 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("*");
        if $z2 == 0 goto label9;

        $r24 = new sun.net.sdp.SdpProvider$PortRangeRule;
        $i9 = r20[0];
        $i10 = r20[1];
        specialinvoke $r24.<sun.net.sdp.SdpProvider$PortRangeRule: void <init>(sun.net.sdp.SdpProvider$Action,int,int)>(r7, $i9, $i10);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r24);
        goto label1;

     label9:
        $r25 = r6[1];
        i11 = virtualinvoke $r25.<java.lang.String: int indexOf(int)>(47);

     label10:
        if i11 >= 0 goto label15;

        $r26 = r6[1];
        r27 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r26);
        r28 = r27;
        i2 = lengthof r28;
        i3 = 0;

     label11:
        if i3 >= i2 goto label14;

        r10 = r28[i3];
        $z4 = r10 instanceof java.net.Inet4Address;
        if $z4 == 0 goto label12;

        $s12 = 32;
        goto label13;

     label12:
        $s12 = 128;

     label13:
        s4 = $s12;
        $r29 = new sun.net.sdp.SdpProvider$AddressPortRangeRule;
        $i13 = r20[0];
        $i14 = r20[1];
        specialinvoke $r29.<sun.net.sdp.SdpProvider$AddressPortRangeRule: void <init>(sun.net.sdp.SdpProvider$Action,java.net.InetAddress,int,int,int)>(r7, r10, s4, $i13, $i14);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r29);
        i3 = i3 + 1;
        goto label11;

     label14:
        goto label25;

     label15:
        $r30 = r6[1];
        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String substring(int,int)>(0, i11);
        r32 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r31);
        i15 = -1;

     label16:
        $r33 = r6[1];
        $i16 = i11 + 1;
        $r34 = virtualinvoke $r33.<java.lang.String: java.lang.String substring(int)>($i16);
        i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r34);
        $z6 = r32 instanceof java.net.Inet4Address;
        if $z6 == 0 goto label18;

        if i15 < 0 goto label17;

        if i15 <= 32 goto label20;

     label17:
        i15 = -1;
        goto label20;

     label18:
        if i15 < 0 goto label19;

        if i15 <= 128 goto label20;

     label19:
        i15 = -1;

     label20:
        goto label22;

     label21:
        $r35 := @caughtexception;
        r36 = $r35;

     label22:
        if i15 <= 0 goto label23;

        $r37 = new sun.net.sdp.SdpProvider$AddressPortRangeRule;
        $i17 = r20[0];
        $i18 = r20[1];
        specialinvoke $r37.<sun.net.sdp.SdpProvider$AddressPortRangeRule: void <init>(sun.net.sdp.SdpProvider$Action,java.net.InetAddress,int,int,int)>(r7, r32, i15, $i17, $i18);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r37);
        goto label25;

     label23:
        $r38 = newarray (java.lang.Object)[1];
        $r39 = r6[1];
        $r38[0] = $r39;
        staticinvoke <sun.net.sdp.SdpProvider: void fail(java.lang.String,java.lang.Object[])>("Malformed prefix \'%s\'", $r38);

     label24:
        goto label1;

     label25:
        goto label27;

     label26:
        $r40 := @caughtexception;
        r41 = $r40;
        $r42 = newarray (java.lang.Object)[1];
        $r43 = r6[1];
        $r42[0] = $r43;
        staticinvoke <sun.net.sdp.SdpProvider: void fail(java.lang.String,java.lang.Object[])>("Unknown host or malformed IP address \'%s\'", $r42);
        goto label1;

     label27:
        goto label1;

     label28:
        r44 = r4;

     label29:
        virtualinvoke r3.<java.util.Scanner: void close()>();
        return r44;

     label30:
        $r45 := @caughtexception;

     label31:
        r11 = $r45;

     label32:
        virtualinvoke r3.<java.util.Scanner: void close()>();
        throw r11;

        catch java.lang.NumberFormatException from label16 to label20 with label21;
        catch java.net.UnknownHostException from label10 to label24 with label26;
        catch java.lang.Throwable from label0 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    private void convertTcpToSdpIfMatch(java.io.FileDescriptor, sun.net.sdp.SdpProvider$Action, java.net.InetAddress, int) throws java.io.IOException
    {
        sun.net.sdp.SdpProvider r0;
        java.io.FileDescriptor r1;
        sun.net.sdp.SdpProvider$Action r2;
        java.net.InetAddress r3;
        int i0;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r4;
        sun.net.sdp.SdpProvider$Rule r5;
        java.util.List $r6;
        java.lang.Object $r7;
        java.io.PrintStream $r8, $r16, $r20;
        java.lang.String $r9, $r12, r15;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;
        java.lang.Object[] $r17, $r21;
        java.lang.Integer $r18, $r22;

        r0 := @this: sun.net.sdp.SdpProvider;
        r1 := @parameter0: java.io.FileDescriptor;
        r2 := @parameter1: sun.net.sdp.SdpProvider$Action;
        r3 := @parameter2: java.net.InetAddress;
        i0 := @parameter3: int;
        z0 = 0;
        $r6 = r0.<sun.net.sdp.SdpProvider: java.util.List rules>;
        r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (sun.net.sdp.SdpProvider$Rule) $r7;
        $z2 = interfaceinvoke r5.<sun.net.sdp.SdpProvider$Rule: boolean match(sun.net.sdp.SdpProvider$Action,java.net.InetAddress,int)>(r2, r3, i0);
        if $z2 == 0 goto label1;

        staticinvoke <sun.net.sdp.SdpSupport: void convertSocket(java.io.FileDescriptor)>(r1);
        z0 = 1;
        goto label2;

     label1:
        goto label0;

     label2:
        $r8 = r0.<sun.net.sdp.SdpProvider: java.io.PrintStream log>;
        if $r8 == null goto label6;

        $z3 = r3 instanceof java.net.Inet4Address;
        if $z3 == 0 goto label3;

        $r9 = virtualinvoke r3.<java.net.InetAddress: java.lang.String getHostAddress()>();
        goto label4;

     label3:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r12 = virtualinvoke r3.<java.net.InetAddress: java.lang.String getHostAddress()>();
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r9 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r15 = $r9;
        if z0 == 0 goto label5;

        $r16 = r0.<sun.net.sdp.SdpProvider: java.io.PrintStream log>;
        $r17 = newarray (java.lang.Object)[3];
        $r17[0] = r2;
        $r17[1] = r15;
        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r17[2] = $r18;
        virtualinvoke $r16.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>("%s to %s:%d (socket converted to SDP protocol)\n", $r17);
        goto label6;

     label5:
        $r20 = r0.<sun.net.sdp.SdpProvider: java.io.PrintStream log>;
        $r21 = newarray (java.lang.Object)[3];
        $r21[0] = r2;
        $r21[1] = r15;
        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r21[2] = $r22;
        virtualinvoke $r20.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>("%s to %s:%d (no match)\n", $r21);

     label6:
        return;
    }

    public void implBeforeTcpBind(java.io.FileDescriptor, java.net.InetAddress, int) throws java.io.IOException
    {
        sun.net.sdp.SdpProvider r0;
        java.io.FileDescriptor r1;
        java.net.InetAddress r2;
        int i0;
        sun.net.sdp.SdpProvider$Action $r3;
        boolean $z0;

        r0 := @this: sun.net.sdp.SdpProvider;
        r1 := @parameter0: java.io.FileDescriptor;
        r2 := @parameter1: java.net.InetAddress;
        i0 := @parameter2: int;
        $z0 = r0.<sun.net.sdp.SdpProvider: boolean enabled>;
        if $z0 == 0 goto label0;

        $r3 = <sun.net.sdp.SdpProvider$Action: sun.net.sdp.SdpProvider$Action BIND>;
        specialinvoke r0.<sun.net.sdp.SdpProvider: void convertTcpToSdpIfMatch(java.io.FileDescriptor,sun.net.sdp.SdpProvider$Action,java.net.InetAddress,int)>(r1, $r3, r2, i0);

     label0:
        return;
    }

    public void implBeforeTcpConnect(java.io.FileDescriptor, java.net.InetAddress, int) throws java.io.IOException
    {
        sun.net.sdp.SdpProvider r0;
        java.io.FileDescriptor r1;
        java.net.InetAddress r2;
        int i0;
        sun.net.sdp.SdpProvider$Action $r3;
        boolean $z0;

        r0 := @this: sun.net.sdp.SdpProvider;
        r1 := @parameter0: java.io.FileDescriptor;
        r2 := @parameter1: java.net.InetAddress;
        i0 := @parameter2: int;
        $z0 = r0.<sun.net.sdp.SdpProvider: boolean enabled>;
        if $z0 == 0 goto label0;

        $r3 = <sun.net.sdp.SdpProvider$Action: sun.net.sdp.SdpProvider$Action CONNECT>;
        specialinvoke r0.<sun.net.sdp.SdpProvider: void convertTcpToSdpIfMatch(java.io.FileDescriptor,sun.net.sdp.SdpProvider$Action,java.net.InetAddress,int)>(r1, $r3, r2, i0);

     label0:
        return;
    }
}
