class sun.reflect.annotation.AnnotationType$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.Class val$annotationClass;
    final sun.reflect.annotation.AnnotationType this$0;

    void <init>(sun.reflect.annotation.AnnotationType, java.lang.Class)
    {
        sun.reflect.annotation.AnnotationType$1 r0;
        sun.reflect.annotation.AnnotationType r1;
        java.lang.Class r2;

        r0 := @this: sun.reflect.annotation.AnnotationType$1;
        r1 := @parameter0: sun.reflect.annotation.AnnotationType;
        r2 := @parameter1: java.lang.Class;
        r0.<sun.reflect.annotation.AnnotationType$1: sun.reflect.annotation.AnnotationType this$0> = r1;
        r0.<sun.reflect.annotation.AnnotationType$1: java.lang.Class val$annotationClass> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.reflect.Method[] run()
    {
        sun.reflect.annotation.AnnotationType$1 r0;
        java.lang.Class $r1;
        java.lang.reflect.Method[] $r2;

        r0 := @this: sun.reflect.annotation.AnnotationType$1;
        $r1 = r0.<sun.reflect.annotation.AnnotationType$1: java.lang.Class val$annotationClass>;
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
        return $r2;
    }

    public volatile java.lang.Object run()
    {
        sun.reflect.annotation.AnnotationType$1 r0;
        java.lang.reflect.Method[] $r1;

        r0 := @this: sun.reflect.annotation.AnnotationType$1;
        $r1 = virtualinvoke r0.<sun.reflect.annotation.AnnotationType$1: java.lang.reflect.Method[] run()>();
        return $r1;
    }
}
