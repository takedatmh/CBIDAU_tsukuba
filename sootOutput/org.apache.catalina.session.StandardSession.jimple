public class org.apache.catalina.session.StandardSession extends java.lang.Object implements javax.servlet.http.HttpSession, org.apache.catalina.Session, java.io.Serializable
{
    private static final long serialVersionUID;
    protected static final boolean STRICT_SERVLET_COMPLIANCE;
    protected static final boolean ACTIVITY_CHECK;
    protected static final boolean LAST_ACCESS_AT_START;
    protected static final java.lang.String[] EMPTY_ARRAY;
    protected java.util.concurrent.ConcurrentMap attributes;
    protected transient java.lang.String authType;
    protected long creationTime;
    protected static final java.lang.String[] excludedAttributes;
    protected transient volatile boolean expiring;
    protected transient org.apache.catalina.session.StandardSessionFacade facade;
    protected java.lang.String id;
    protected static final java.lang.String info;
    protected volatile long lastAccessedTime;
    protected transient java.util.ArrayList listeners;
    protected transient org.apache.catalina.Manager manager;
    protected int maxInactiveInterval;
    protected boolean isNew;
    protected volatile boolean isValid;
    protected transient java.util.Map notes;
    protected transient java.security.Principal principal;
    protected static final org.apache.tomcat.util.res.StringManager sm;
    protected static volatile javax.servlet.http.HttpSessionContext sessionContext;
    protected transient java.beans.PropertyChangeSupport support;
    protected volatile long thisAccessedTime;
    protected transient java.util.concurrent.atomic.AtomicInteger accessCount;

    static void <clinit>()
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String r0, r1;
        java.lang.String[] $r2, $r3;
        org.apache.tomcat.util.res.StringManager $r4;

        $z0 = <org.apache.catalina.Globals: boolean STRICT_SERVLET_COMPLIANCE>;
        <org.apache.catalina.session.StandardSession: boolean STRICT_SERVLET_COMPLIANCE> = $z0;
        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.catalina.session.StandardSession.ACTIVITY_CHECK");
        if r0 != null goto label0;

        $z1 = <org.apache.catalina.session.StandardSession: boolean STRICT_SERVLET_COMPLIANCE>;
        <org.apache.catalina.session.StandardSession: boolean ACTIVITY_CHECK> = $z1;
        goto label1;

     label0:
        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r0);
        <org.apache.catalina.session.StandardSession: boolean ACTIVITY_CHECK> = $z2;

     label1:
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.catalina.session.StandardSession.LAST_ACCESS_AT_START");
        if r1 != null goto label2;

        $z3 = <org.apache.catalina.session.StandardSession: boolean STRICT_SERVLET_COMPLIANCE>;
        <org.apache.catalina.session.StandardSession: boolean LAST_ACCESS_AT_START> = $z3;
        goto label3;

     label2:
        $z4 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r1);
        <org.apache.catalina.session.StandardSession: boolean LAST_ACCESS_AT_START> = $z4;

     label3:
        $r2 = newarray (java.lang.String)[0];
        <org.apache.catalina.session.StandardSession: java.lang.String[] EMPTY_ARRAY> = $r2;
        $r3 = newarray (java.lang.String)[2];
        $r3[0] = "javax.security.auth.subject";
        $r3[1] = "org.apache.catalina.realm.GSS_CREDENTIAL";
        <org.apache.catalina.session.StandardSession: java.lang.String[] excludedAttributes> = $r3;
        $r4 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.Class)>(class "org/apache/catalina/session/StandardSession");
        <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm> = $r4;
        <org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSessionContext sessionContext> = null;
        return;
    }

    public void <init>(org.apache.catalina.Manager)
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.catalina.Manager r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        long $l0, $l1;
        java.util.ArrayList $r3;
        java.util.Hashtable $r4;
        java.beans.PropertyChangeSupport $r5;
        boolean $z0;
        java.util.concurrent.atomic.AtomicInteger $r6;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: org.apache.catalina.Manager;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes> = $r2;
        r0.<org.apache.catalina.session.StandardSession: java.lang.String authType> = null;
        r0.<org.apache.catalina.session.StandardSession: long creationTime> = 0L;
        r0.<org.apache.catalina.session.StandardSession: boolean expiring> = 0;
        r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.session.StandardSessionFacade facade> = null;
        r0.<org.apache.catalina.session.StandardSession: java.lang.String id> = null;
        $l0 = r0.<org.apache.catalina.session.StandardSession: long creationTime>;
        r0.<org.apache.catalina.session.StandardSession: long lastAccessedTime> = $l0;
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.catalina.session.StandardSession: java.util.ArrayList listeners> = $r3;
        r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager> = null;
        r0.<org.apache.catalina.session.StandardSession: int maxInactiveInterval> = -1;
        r0.<org.apache.catalina.session.StandardSession: boolean isNew> = 0;
        r0.<org.apache.catalina.session.StandardSession: boolean isValid> = 0;
        $r4 = new java.util.Hashtable;
        specialinvoke $r4.<java.util.Hashtable: void <init>()>();
        r0.<org.apache.catalina.session.StandardSession: java.util.Map notes> = $r4;
        r0.<org.apache.catalina.session.StandardSession: java.security.Principal principal> = null;
        $r5 = new java.beans.PropertyChangeSupport;
        specialinvoke $r5.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);
        r0.<org.apache.catalina.session.StandardSession: java.beans.PropertyChangeSupport support> = $r5;
        $l1 = r0.<org.apache.catalina.session.StandardSession: long creationTime>;
        r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime> = $l1;
        r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.atomic.AtomicInteger accessCount> = null;
        r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager> = r1;
        $z0 = <org.apache.catalina.session.StandardSession: boolean ACTIVITY_CHECK>;
        if $z0 == 0 goto label0;

        $r6 = new java.util.concurrent.atomic.AtomicInteger;
        specialinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
        r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.atomic.AtomicInteger accessCount> = $r6;

     label0:
        return;
    }

    public java.lang.String getAuthType()
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r1 = r0.<org.apache.catalina.session.StandardSession: java.lang.String authType>;
        return $r1;
    }

    public void setAuthType(java.lang.String)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1, r2, $r4;
        java.beans.PropertyChangeSupport $r3;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        r2 = r0.<org.apache.catalina.session.StandardSession: java.lang.String authType>;
        r0.<org.apache.catalina.session.StandardSession: java.lang.String authType> = r1;
        $r3 = r0.<org.apache.catalina.session.StandardSession: java.beans.PropertyChangeSupport support>;
        $r4 = r0.<org.apache.catalina.session.StandardSession: java.lang.String authType>;
        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authType", r2, $r4);
        return;
    }

    public void setCreationTime(long)
    {
        org.apache.catalina.session.StandardSession r0;
        long l0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        l0 := @parameter0: long;
        r0.<org.apache.catalina.session.StandardSession: long creationTime> = l0;
        r0.<org.apache.catalina.session.StandardSession: long lastAccessedTime> = l0;
        r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime> = l0;
        return;
    }

    public java.lang.String getId()
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r1 = r0.<org.apache.catalina.session.StandardSession: java.lang.String id>;
        return $r1;
    }

    public java.lang.String getIdInternal()
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r1 = r0.<org.apache.catalina.session.StandardSession: java.lang.String id>;
        return $r1;
    }

    public void setId(java.lang.String)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void setId(java.lang.String,boolean)>(r1, 1);
        return;
    }

    public void setId(java.lang.String, boolean)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1, $r2;
        boolean z0;
        org.apache.catalina.Manager $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = r0.<org.apache.catalina.session.StandardSession: java.lang.String id>;
        if $r2 == null goto label0;

        $r3 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        interfaceinvoke $r4.<org.apache.catalina.Manager: void remove(org.apache.catalina.Session)>(r0);

     label0:
        r0.<org.apache.catalina.session.StandardSession: java.lang.String id> = r1;
        $r5 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        if $r5 == null goto label1;

        $r6 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        interfaceinvoke $r6.<org.apache.catalina.Manager: void add(org.apache.catalina.Session)>(r0);

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void tellNew()>();

     label2:
        return;
    }

    public void tellNew()
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.catalina.Context r1;
        java.lang.Object[] r2;
        javax.servlet.http.HttpSessionEvent r3, $r9;
        int i0, $i1;
        javax.servlet.http.HttpSessionListener r4;
        java.lang.Throwable r5, $r13;
        java.lang.Exception r6, $r14;
        org.apache.catalina.Manager $r7, $r15;
        org.apache.catalina.Container $r8, $r16;
        javax.servlet.http.HttpSession $r10;
        java.lang.Object $r11, $r12;
        boolean $z0;
        org.apache.juli.logging.Log $r17;
        org.apache.tomcat.util.res.StringManager $r18;
        java.lang.String $r19;

        r0 := @this: org.apache.catalina.session.StandardSession;
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void fireSessionEvent(java.lang.String,java.lang.Object)>("createSession", null);
        $r7 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r8 = interfaceinvoke $r7.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        r1 = (org.apache.catalina.Context) $r8;
        r2 = interfaceinvoke r1.<org.apache.catalina.Context: java.lang.Object[] getApplicationLifecycleListeners()>();
        if r2 == null goto label11;

        $r9 = new javax.servlet.http.HttpSessionEvent;
        $r10 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSession getSession()>();
        specialinvoke $r9.<javax.servlet.http.HttpSessionEvent: void <init>(javax.servlet.http.HttpSession)>($r10);
        r3 = $r9;
        i0 = 0;
        goto label10;

     label0:
        $r11 = r2[i0];
        $z0 = $r11 instanceof javax.servlet.http.HttpSessionListener;
        if $z0 != 0 goto label1;

        goto label9;

     label1:
        $r12 = r2[i0];
        r4 = (javax.servlet.http.HttpSessionListener) $r12;

     label2:
        interfaceinvoke r1.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("beforeSessionCreated", r4);
        interfaceinvoke r4.<javax.servlet.http.HttpSessionListener: void sessionCreated(javax.servlet.http.HttpSessionEvent)>(r3);
        interfaceinvoke r1.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("afterSessionCreated", r4);

     label3:
        goto label9;

     label4:
        $r13 := @caughtexception;
        r5 = $r13;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r5);

     label5:
        interfaceinvoke r1.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("afterSessionCreated", r4);

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;
        r6 = $r14;

     label8:
        $r15 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r16 = interfaceinvoke $r15.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r17 = interfaceinvoke $r16.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r18 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r19 = virtualinvoke $r18.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.sessionEvent");
        interfaceinvoke $r17.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r19, r5);

     label9:
        i0 = i0 + 1;

     label10:
        $i1 = lengthof r2;
        if i0 < $i1 goto label0;

     label11:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public java.lang.String getInfo()
    {
        org.apache.catalina.session.StandardSession r0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        return "StandardSession/1.0";
    }

    public long getThisAccessedTime()
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3;
        long $l0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $z0 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isValidInternal()>();
        if $z0 != 0 goto label0;

        $r2 = new java.lang.IllegalStateException;
        $r1 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.getThisAccessedTime.ise");
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $l0 = r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime>;
        return $l0;
    }

    public long getThisAccessedTimeInternal()
    {
        org.apache.catalina.session.StandardSession r0;
        long $l0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $l0 = r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime>;
        return $l0;
    }

    public long getLastAccessedTime()
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3;
        long $l0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $z0 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isValidInternal()>();
        if $z0 != 0 goto label0;

        $r2 = new java.lang.IllegalStateException;
        $r1 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.getLastAccessedTime.ise");
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $l0 = r0.<org.apache.catalina.session.StandardSession: long lastAccessedTime>;
        return $l0;
    }

    public long getLastAccessedTimeInternal()
    {
        org.apache.catalina.session.StandardSession r0;
        long $l0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $l0 = r0.<org.apache.catalina.session.StandardSession: long lastAccessedTime>;
        return $l0;
    }

    public org.apache.catalina.Manager getManager()
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.catalina.Manager $r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r1 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        return $r1;
    }

    public void setManager(org.apache.catalina.Manager)
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.catalina.Manager r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: org.apache.catalina.Manager;
        r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager> = r1;
        return;
    }

    public int getMaxInactiveInterval()
    {
        org.apache.catalina.session.StandardSession r0;
        int $i0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $i0 = r0.<org.apache.catalina.session.StandardSession: int maxInactiveInterval>;
        return $i0;
    }

    public void setMaxInactiveInterval(int)
    {
        org.apache.catalina.session.StandardSession r0;
        int i0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        i0 := @parameter0: int;
        r0.<org.apache.catalina.session.StandardSession: int maxInactiveInterval> = i0;
        return;
    }

    public void setNew(boolean)
    {
        org.apache.catalina.session.StandardSession r0;
        boolean z0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.session.StandardSession: boolean isNew> = z0;
        return;
    }

    public java.security.Principal getPrincipal()
    {
        org.apache.catalina.session.StandardSession r0;
        java.security.Principal $r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r1 = r0.<org.apache.catalina.session.StandardSession: java.security.Principal principal>;
        return $r1;
    }

    public void setPrincipal(java.security.Principal)
    {
        org.apache.catalina.session.StandardSession r0;
        java.security.Principal r1, r2, $r4;
        java.beans.PropertyChangeSupport $r3;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.security.Principal;
        r2 = r0.<org.apache.catalina.session.StandardSession: java.security.Principal principal>;
        r0.<org.apache.catalina.session.StandardSession: java.security.Principal principal> = r1;
        $r3 = r0.<org.apache.catalina.session.StandardSession: java.beans.PropertyChangeSupport support>;
        $r4 = r0.<org.apache.catalina.session.StandardSession: java.security.Principal principal>;
        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", r2, $r4);
        return;
    }

    public javax.servlet.http.HttpSession getSession()
    {
        org.apache.catalina.session.StandardSession r0, r1;
        org.apache.catalina.session.StandardSession$1 $r2;
        org.apache.catalina.session.StandardSessionFacade $r3, $r5, $r6, $r7;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r3 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.session.StandardSessionFacade facade>;
        if $r3 != null goto label1;

        $z0 = staticinvoke <org.apache.catalina.security.SecurityUtil: boolean isPackageProtectionEnabled()>();
        if $z0 == 0 goto label0;

        r1 = r0;
        $r2 = new org.apache.catalina.session.StandardSession$1;
        specialinvoke $r2.<org.apache.catalina.session.StandardSession$1: void <init>(org.apache.catalina.session.StandardSession,org.apache.catalina.session.StandardSession)>(r0, r1);
        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);
        $r5 = (org.apache.catalina.session.StandardSessionFacade) $r4;
        r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.session.StandardSessionFacade facade> = $r5;
        goto label1;

     label0:
        $r6 = new org.apache.catalina.session.StandardSessionFacade;
        specialinvoke $r6.<org.apache.catalina.session.StandardSessionFacade: void <init>(org.apache.catalina.session.StandardSession)>(r0);
        r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.session.StandardSessionFacade facade> = $r6;

     label1:
        $r7 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.session.StandardSessionFacade facade>;
        return $r7;
    }

    public boolean isValid()
    {
        org.apache.catalina.session.StandardSession r0;
        long l0, $l4, $l5, $l6, $l7, $l8, $l9;
        int i1, $i2, $i3, $i10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $z0 = r0.<org.apache.catalina.session.StandardSession: boolean isValid>;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $z1 = r0.<org.apache.catalina.session.StandardSession: boolean expiring>;
        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z2 = <org.apache.catalina.session.StandardSession: boolean ACTIVITY_CHECK>;
        if $z2 == 0 goto label2;

        $r1 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.atomic.AtomicInteger accessCount>;
        $i2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();
        if $i2 <= 0 goto label2;

        return 1;

     label2:
        $i3 = r0.<org.apache.catalina.session.StandardSession: int maxInactiveInterval>;
        if $i3 <= 0 goto label5;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $z3 = <org.apache.catalina.session.StandardSession: boolean LAST_ACCESS_AT_START>;
        if $z3 == 0 goto label3;

        $l4 = r0.<org.apache.catalina.session.StandardSession: long lastAccessedTime>;
        $l5 = l0 - $l4;
        $l6 = $l5 / 1000L;
        i1 = (int) $l6;
        goto label4;

     label3:
        $l7 = r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime>;
        $l8 = l0 - $l7;
        $l9 = $l8 / 1000L;
        i1 = (int) $l9;

     label4:
        $i10 = r0.<org.apache.catalina.session.StandardSession: int maxInactiveInterval>;
        if i1 < $i10 goto label5;

        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void expire(boolean)>(1);

     label5:
        $z4 = r0.<org.apache.catalina.session.StandardSession: boolean isValid>;
        return $z4;
    }

    public void setValid(boolean)
    {
        org.apache.catalina.session.StandardSession r0;
        boolean z0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.session.StandardSession: boolean isValid> = z0;
        return;
    }

    public void access()
    {
        org.apache.catalina.session.StandardSession r0;
        long $l0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime> = $l0;
        $z0 = <org.apache.catalina.session.StandardSession: boolean ACTIVITY_CHECK>;
        if $z0 == 0 goto label0;

        $r1 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.atomic.AtomicInteger accessCount>;
        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label0:
        return;
    }

    public void endAccess()
    {
        org.apache.catalina.session.StandardSession r0;
        boolean $z0, $z1;
        long $l0, $l1, $l2, $l3;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r0.<org.apache.catalina.session.StandardSession: boolean isNew> = 0;
        $z0 = <org.apache.catalina.session.StandardSession: boolean LAST_ACCESS_AT_START>;
        if $z0 == 0 goto label0;

        $l0 = r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime>;
        r0.<org.apache.catalina.session.StandardSession: long lastAccessedTime> = $l0;
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime> = $l1;
        goto label1;

     label0:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime> = $l2;
        $l3 = r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime>;
        r0.<org.apache.catalina.session.StandardSession: long lastAccessedTime> = $l3;

     label1:
        $z1 = <org.apache.catalina.session.StandardSession: boolean ACTIVITY_CHECK>;
        if $z1 == 0 goto label2;

        $r1 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.atomic.AtomicInteger accessCount>;
        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

     label2:
        return;
    }

    public void addSessionListener(org.apache.catalina.SessionListener)
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.catalina.SessionListener r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: org.apache.catalina.SessionListener;
        $r2 = r0.<org.apache.catalina.session.StandardSession: java.util.ArrayList listeners>;
        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);
        return;
    }

    public void expire()
    {
        org.apache.catalina.session.StandardSession r0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void expire(boolean)>(1);
        return;
    }

    public void expire(boolean)
    {
        org.apache.catalina.session.StandardSession r0, r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.apache.catalina.Context r2;
        java.lang.ClassLoader r3, $r17, $r21, $r25, $r61, $r66;
        org.apache.tomcat.util.security.PrivilegedSetTccl r4, r10, $r19, $r39, $r42, r43, $r59, r62, $r70, r71, $r74, r75;
        javax.servlet.http.HttpSessionEvent r5, $r27;
        int i0, i1, $i2, $i3, $i4, i5, $i6;
        javax.servlet.http.HttpSessionListener r6;
        java.lang.Throwable r7, r9, $r31, $r38, $r68, r69, $r78;
        java.lang.Exception r8, $r32, $r51, r52;
        org.apache.catalina.Manager $r12, $r13, $r33, $r47, $r53;
        org.apache.catalina.Container $r14, $r34, $r54;
        org.apache.catalina.Loader $r15, $r16, $r20, $r24, $r60, $r65;
        java.lang.Thread $r18, $r23, $r41, $r45, $r64, $r73, $r77;
        java.lang.Object[] r26;
        javax.servlet.http.HttpSession $r28;
        java.lang.Object $r29, $r30;
        org.apache.juli.logging.Log $r35, $r55;
        org.apache.tomcat.util.res.StringManager $r36, $r56;
        java.lang.String $r37, $r57, $r67;
        java.util.concurrent.atomic.AtomicInteger $r46;
        java.security.Principal $r48, $r49;
        org.apache.catalina.realm.GenericPrincipal r50;
        java.lang.String[] r58;

        r0 := @this: org.apache.catalina.session.StandardSession;
        z0 := @parameter0: boolean;
        $z1 = r0.<org.apache.catalina.session.StandardSession: boolean isValid>;
        if $z1 != 0 goto label0;

        return;

     label0:
        r1 = r0;
        entermonitor r0;

     label1:
        $z2 = r0.<org.apache.catalina.session.StandardSession: boolean expiring>;
        if $z2 != 0 goto label2;

        $z3 = r0.<org.apache.catalina.session.StandardSession: boolean isValid>;
        if $z3 != 0 goto label4;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r12 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        if $r12 != null goto label6;

        exitmonitor r1;

     label5:
        return;

     label6:
        r0.<org.apache.catalina.session.StandardSession: boolean expiring> = 1;
        $r13 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r14 = interfaceinvoke $r13.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        r2 = (org.apache.catalina.Context) $r14;
        r3 = null;
        $r15 = interfaceinvoke r2.<org.apache.catalina.Context: org.apache.catalina.Loader getLoader()>();
        if $r15 == null goto label8;

        $r16 = interfaceinvoke r2.<org.apache.catalina.Context: org.apache.catalina.Loader getLoader()>();
        $r17 = interfaceinvoke $r16.<org.apache.catalina.Loader: java.lang.ClassLoader getClassLoader()>();
        if $r17 == null goto label8;

        $r18 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r3 = virtualinvoke $r18.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        $z4 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z4 == 0 goto label7;

        $r19 = new org.apache.tomcat.util.security.PrivilegedSetTccl;
        $r20 = interfaceinvoke r2.<org.apache.catalina.Context: org.apache.catalina.Loader getLoader()>();
        $r21 = interfaceinvoke $r20.<org.apache.catalina.Loader: java.lang.ClassLoader getClassLoader()>();
        specialinvoke $r19.<org.apache.tomcat.util.security.PrivilegedSetTccl: void <init>(java.lang.ClassLoader)>($r21);
        r4 = $r19;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r4);
        goto label8;

     label7:
        $r23 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r24 = interfaceinvoke r2.<org.apache.catalina.Context: org.apache.catalina.Loader getLoader()>();
        $r25 = interfaceinvoke $r24.<org.apache.catalina.Loader: java.lang.ClassLoader getClassLoader()>();
        virtualinvoke $r23.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r25);

     label8:
        r26 = interfaceinvoke r2.<org.apache.catalina.Context: java.lang.Object[] getApplicationLifecycleListeners()>();
        if z0 == 0 goto label23;

        if r26 == null goto label23;

        $r27 = new javax.servlet.http.HttpSessionEvent;
        $r28 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSession getSession()>();
        specialinvoke $r27.<javax.servlet.http.HttpSessionEvent: void <init>(javax.servlet.http.HttpSession)>($r28);
        r5 = $r27;
        i0 = 0;
        goto label19;

     label9:
        $i2 = lengthof r26;
        $i3 = $i2 - 1;
        i1 = $i3 - i0;
        $r29 = r26[i1];
        $z5 = $r29 instanceof javax.servlet.http.HttpSessionListener;
        if $z5 != 0 goto label10;

        goto label18;

     label10:
        $r30 = r26[i1];
        r6 = (javax.servlet.http.HttpSessionListener) $r30;

     label11:
        interfaceinvoke r2.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("beforeSessionDestroyed", r6);
        interfaceinvoke r6.<javax.servlet.http.HttpSessionListener: void sessionDestroyed(javax.servlet.http.HttpSessionEvent)>(r5);
        interfaceinvoke r2.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("afterSessionDestroyed", r6);

     label12:
        goto label18;

     label13:
        $r31 := @caughtexception;
        r7 = $r31;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r7);

     label14:
        interfaceinvoke r2.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("afterSessionDestroyed", r6);

     label15:
        goto label17;

     label16:
        $r32 := @caughtexception;
        r8 = $r32;

     label17:
        $r33 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r34 = interfaceinvoke $r33.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r35 = interfaceinvoke $r34.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r36 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r37 = virtualinvoke $r36.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.sessionEvent");
        interfaceinvoke $r35.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r37, r7);

     label18:
        i0 = i0 + 1;

     label19:
        $i4 = lengthof r26;
        if i0 < $i4 goto label9;

        goto label23;

     label20:
        $r38 := @caughtexception;
        r9 = $r38;
        if r3 == null goto label22;

        $z6 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z6 == 0 goto label21;

        $r39 = new org.apache.tomcat.util.security.PrivilegedSetTccl;
        specialinvoke $r39.<org.apache.tomcat.util.security.PrivilegedSetTccl: void <init>(java.lang.ClassLoader)>(r3);
        r10 = $r39;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r10);
        goto label22;

     label21:
        $r41 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r41.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r3);

     label22:
        throw r9;

     label23:
        if r3 == null goto label25;

        $z7 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z7 == 0 goto label24;

        $r42 = new org.apache.tomcat.util.security.PrivilegedSetTccl;
        specialinvoke $r42.<org.apache.tomcat.util.security.PrivilegedSetTccl: void <init>(java.lang.ClassLoader)>(r3);
        r43 = $r42;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r43);
        goto label25;

     label24:
        $r45 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r45.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r3);

     label25:
        $z8 = <org.apache.catalina.session.StandardSession: boolean ACTIVITY_CHECK>;
        if $z8 == 0 goto label26;

        $r46 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.atomic.AtomicInteger accessCount>;
        virtualinvoke $r46.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

     label26:
        $r47 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        interfaceinvoke $r47.<org.apache.catalina.Manager: void remove(org.apache.catalina.Session,boolean)>(r0, 1);
        if z0 == 0 goto label27;

        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void fireSessionEvent(java.lang.String,java.lang.Object)>("destroySession", null);

     label27:
        $r48 = r0.<org.apache.catalina.session.StandardSession: java.security.Principal principal>;
        $z9 = $r48 instanceof org.apache.catalina.realm.GenericPrincipal;
        if $z9 == 0 goto label31;

        $r49 = r0.<org.apache.catalina.session.StandardSession: java.security.Principal principal>;
        r50 = (org.apache.catalina.realm.GenericPrincipal) $r49;

     label28:
        virtualinvoke r50.<org.apache.catalina.realm.GenericPrincipal: void logout()>();

     label29:
        goto label31;

     label30:
        $r51 := @caughtexception;
        r52 = $r51;
        $r53 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r54 = interfaceinvoke $r53.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r55 = interfaceinvoke $r54.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r56 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r57 = virtualinvoke $r56.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.logoutfail");
        interfaceinvoke $r55.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r57, r52);

     label31:
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void setValid(boolean)>(0);
        r0.<org.apache.catalina.session.StandardSession: boolean expiring> = 0;
        r58 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: java.lang.String[] keys()>();
        if r3 == null goto label33;

        $z10 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z10 == 0 goto label32;

        $r59 = new org.apache.tomcat.util.security.PrivilegedSetTccl;
        $r60 = interfaceinvoke r2.<org.apache.catalina.Context: org.apache.catalina.Loader getLoader()>();
        $r61 = interfaceinvoke $r60.<org.apache.catalina.Loader: java.lang.ClassLoader getClassLoader()>();
        specialinvoke $r59.<org.apache.tomcat.util.security.PrivilegedSetTccl: void <init>(java.lang.ClassLoader)>($r61);
        r62 = $r59;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r62);
        goto label33;

     label32:
        $r64 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r65 = interfaceinvoke r2.<org.apache.catalina.Context: org.apache.catalina.Loader getLoader()>();
        $r66 = interfaceinvoke $r65.<org.apache.catalina.Loader: java.lang.ClassLoader getClassLoader()>();
        virtualinvoke $r64.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r66);

     label33:
        i5 = 0;
        goto label35;

     label34:
        $r67 = r58[i5];
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void removeAttributeInternal(java.lang.String,boolean)>($r67, z0);
        i5 = i5 + 1;

     label35:
        $i6 = lengthof r58;
        if i5 < $i6 goto label34;

        goto label39;

     label36:
        $r68 := @caughtexception;
        r69 = $r68;
        if r3 == null goto label38;

        $z11 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z11 == 0 goto label37;

        $r70 = new org.apache.tomcat.util.security.PrivilegedSetTccl;
        specialinvoke $r70.<org.apache.tomcat.util.security.PrivilegedSetTccl: void <init>(java.lang.ClassLoader)>(r3);
        r71 = $r70;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r71);
        goto label38;

     label37:
        $r73 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r73.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r3);

     label38:
        throw r69;

     label39:
        if r3 == null goto label41;

        $z12 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z12 == 0 goto label40;

        $r74 = new org.apache.tomcat.util.security.PrivilegedSetTccl;
        specialinvoke $r74.<org.apache.tomcat.util.security.PrivilegedSetTccl: void <init>(java.lang.ClassLoader)>(r3);
        r75 = $r74;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r75);
        goto label41;

     label40:
        $r77 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        virtualinvoke $r77.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r3);

     label41:
        exitmonitor r1;

     label42:
        goto label46;

     label43:
        $r78 := @caughtexception;

     label44:
        exitmonitor r1;

     label45:
        throw $r78;

     label46:
        return;

        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Throwable from label8 to label20 with label20;
        catch java.lang.Exception from label28 to label29 with label30;
        catch java.lang.Throwable from label33 to label36 with label36;
        catch java.lang.Throwable from label1 to label3 with label43;
        catch java.lang.Throwable from label4 to label5 with label43;
        catch java.lang.Throwable from label6 to label42 with label43;
        catch java.lang.Throwable from label44 to label45 with label43;
    }

    public void passivate()
    {
        org.apache.catalina.session.StandardSession r0;
        javax.servlet.http.HttpSessionEvent r1, $r7;
        java.lang.String[] r2;
        int i0, $i1;
        java.lang.Object r3;
        java.lang.Throwable r4, $r10;
        java.util.concurrent.ConcurrentMap $r5;
        java.lang.String $r6, $r15;
        boolean $z0;
        javax.servlet.http.HttpSession $r8;
        javax.servlet.http.HttpSessionActivationListener $r9;
        org.apache.catalina.Manager $r11;
        org.apache.catalina.Container $r12;
        org.apache.juli.logging.Log $r13;
        org.apache.tomcat.util.res.StringManager $r14;

        r0 := @this: org.apache.catalina.session.StandardSession;
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void fireSessionEvent(java.lang.String,java.lang.Object)>("passivateSession", null);
        r1 = null;
        r2 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: java.lang.String[] keys()>();
        i0 = 0;
        goto label5;

     label0:
        $r5 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        $r6 = r2[i0];
        r3 = interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r6);
        $z0 = r3 instanceof javax.servlet.http.HttpSessionActivationListener;
        if $z0 == 0 goto label4;

        if r1 != null goto label1;

        $r7 = new javax.servlet.http.HttpSessionEvent;
        $r8 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSession getSession()>();
        specialinvoke $r7.<javax.servlet.http.HttpSessionEvent: void <init>(javax.servlet.http.HttpSession)>($r8);
        r1 = $r7;

     label1:
        $r9 = (javax.servlet.http.HttpSessionActivationListener) r3;
        interfaceinvoke $r9.<javax.servlet.http.HttpSessionActivationListener: void sessionWillPassivate(javax.servlet.http.HttpSessionEvent)>(r1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r4 = $r10;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r4);
        $r11 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r12 = interfaceinvoke $r11.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r13 = interfaceinvoke $r12.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r14 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r15 = virtualinvoke $r14.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.attributeEvent");
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r15, r4);

     label4:
        i0 = i0 + 1;

     label5:
        $i1 = lengthof r2;
        if i0 < $i1 goto label0;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void activate()
    {
        org.apache.catalina.session.StandardSession r0;
        boolean $z0, $z1;
        java.util.concurrent.atomic.AtomicInteger $r1;
        javax.servlet.http.HttpSessionEvent r2, $r8;
        java.lang.String[] r3;
        int i0, $i1;
        java.lang.Object r4;
        java.lang.Throwable r5, $r11;
        java.util.concurrent.ConcurrentMap $r6;
        java.lang.String $r7, $r16;
        javax.servlet.http.HttpSession $r9;
        javax.servlet.http.HttpSessionActivationListener $r10;
        org.apache.catalina.Manager $r12;
        org.apache.catalina.Container $r13;
        org.apache.juli.logging.Log $r14;
        org.apache.tomcat.util.res.StringManager $r15;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $z0 = <org.apache.catalina.session.StandardSession: boolean ACTIVITY_CHECK>;
        if $z0 == 0 goto label0;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;
        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
        r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.atomic.AtomicInteger accessCount> = $r1;

     label0:
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void fireSessionEvent(java.lang.String,java.lang.Object)>("activateSession", null);
        r2 = null;
        r3 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: java.lang.String[] keys()>();
        i0 = 0;
        goto label6;

     label1:
        $r6 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        $r7 = r3[i0];
        r4 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r7);
        $z1 = r4 instanceof javax.servlet.http.HttpSessionActivationListener;
        if $z1 == 0 goto label5;

        if r2 != null goto label2;

        $r8 = new javax.servlet.http.HttpSessionEvent;
        $r9 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSession getSession()>();
        specialinvoke $r8.<javax.servlet.http.HttpSessionEvent: void <init>(javax.servlet.http.HttpSession)>($r9);
        r2 = $r8;

     label2:
        $r10 = (javax.servlet.http.HttpSessionActivationListener) r4;
        interfaceinvoke $r10.<javax.servlet.http.HttpSessionActivationListener: void sessionDidActivate(javax.servlet.http.HttpSessionEvent)>(r2);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;
        r5 = $r11;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r5);
        $r12 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r13 = interfaceinvoke $r12.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r14 = interfaceinvoke $r13.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r15 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r16 = virtualinvoke $r15.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.attributeEvent");
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r16, r5);

     label5:
        i0 = i0 + 1;

     label6:
        $i1 = lengthof r3;
        if i0 < $i1 goto label1;

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public java.lang.Object getNote(java.lang.String)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.apache.catalina.session.StandardSession: java.util.Map notes>;
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        return $r3;
    }

    public java.util.Iterator getNoteNames()
    {
        org.apache.catalina.session.StandardSession r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r1 = r0.<org.apache.catalina.session.StandardSession: java.util.Map notes>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();
        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();
        return $r3;
    }

    public void recycle()
    {
        org.apache.catalina.session.StandardSession r0;
        java.util.concurrent.ConcurrentMap $r1;
        java.util.Map $r2;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r1 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: void clear()>();
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void setAuthType(java.lang.String)>(null);
        r0.<org.apache.catalina.session.StandardSession: long creationTime> = 0L;
        r0.<org.apache.catalina.session.StandardSession: boolean expiring> = 0;
        r0.<org.apache.catalina.session.StandardSession: java.lang.String id> = null;
        r0.<org.apache.catalina.session.StandardSession: long lastAccessedTime> = 0L;
        r0.<org.apache.catalina.session.StandardSession: int maxInactiveInterval> = -1;
        $r2 = r0.<org.apache.catalina.session.StandardSession: java.util.Map notes>;
        interfaceinvoke $r2.<java.util.Map: void clear()>();
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void setPrincipal(java.security.Principal)>(null);
        r0.<org.apache.catalina.session.StandardSession: boolean isNew> = 0;
        r0.<org.apache.catalina.session.StandardSession: boolean isValid> = 0;
        r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager> = null;
        return;
    }

    public void removeNote(java.lang.String)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.apache.catalina.session.StandardSession: java.util.Map notes>;
        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);
        return;
    }

    public void removeSessionListener(org.apache.catalina.SessionListener)
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.catalina.SessionListener r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: org.apache.catalina.SessionListener;
        $r2 = r0.<org.apache.catalina.session.StandardSession: java.util.ArrayList listeners>;
        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);
        return;
    }

    public void setNote(java.lang.String, java.lang.Object)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.util.Map $r3;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = r0.<org.apache.catalina.session.StandardSession: java.util.Map notes>;
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return;
    }

    public java.lang.String toString()
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r4, $r7;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StandardSession[");
        $r4 = r0.<org.apache.catalina.session.StandardSession: java.lang.String id>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    public void readObjectData(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        org.apache.catalina.session.StandardSession r0;
        java.io.ObjectInputStream r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.io.ObjectInputStream;
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void readObject(java.io.ObjectInputStream)>(r1);
        return;
    }

    public void writeObjectData(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.catalina.session.StandardSession r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.io.ObjectOutputStream;
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void writeObject(java.io.ObjectOutputStream)>(r1);
        return;
    }

    public long getCreationTime()
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3;
        long $l0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $z0 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isValidInternal()>();
        if $z0 != 0 goto label0;

        $r2 = new java.lang.IllegalStateException;
        $r1 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.getCreationTime.ise");
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $l0 = r0.<org.apache.catalina.session.StandardSession: long creationTime>;
        return $l0;
    }

    public long getCreationTimeInternal()
    {
        org.apache.catalina.session.StandardSession r0;
        long $l0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $l0 = r0.<org.apache.catalina.session.StandardSession: long creationTime>;
        return $l0;
    }

    public javax.servlet.ServletContext getServletContext()
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.catalina.Context r1;
        org.apache.catalina.Manager $r2, $r3;
        org.apache.catalina.Container $r4;
        javax.servlet.ServletContext $r5;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r2 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        if $r2 != null goto label0;

        return null;

     label0:
        $r3 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r4 = interfaceinvoke $r3.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        r1 = (org.apache.catalina.Context) $r4;
        $r5 = interfaceinvoke r1.<org.apache.catalina.Context: javax.servlet.ServletContext getServletContext()>();
        return $r5;
    }

    public javax.servlet.http.HttpSessionContext getSessionContext()
    {
        org.apache.catalina.session.StandardSession r0;
        javax.servlet.http.HttpSessionContext $r1, $r3;
        org.apache.catalina.session.StandardSessionContext $r2;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r1 = <org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSessionContext sessionContext>;
        if $r1 != null goto label0;

        $r2 = new org.apache.catalina.session.StandardSessionContext;
        specialinvoke $r2.<org.apache.catalina.session.StandardSessionContext: void <init>()>();
        <org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSessionContext sessionContext> = $r2;

     label0:
        $r3 = <org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSessionContext sessionContext>;
        return $r3;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1, $r4;
        org.apache.tomcat.util.res.StringManager $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.util.concurrent.ConcurrentMap $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isValidInternal()>();
        if $z0 != 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        $r2 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.getAttribute.ise");
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        if r1 != null goto label1;

        return null;

     label1:
        $r5 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        $r6 = interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1);
        return $r6;
    }

    public java.util.Enumeration getAttributeNames()
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.tomcat.util.res.StringManager $r1;
        java.util.HashSet r2, $r5;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.lang.String $r4;
        java.util.concurrent.ConcurrentMap $r6;
        java.util.Set $r7;
        java.util.Enumeration $r8;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $z0 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isValidInternal()>();
        if $z0 != 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        $r1 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.getAttributeNames.ise");
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        $r5 = new java.util.HashSet;
        specialinvoke $r5.<java.util.HashSet: void <init>()>();
        r2 = $r5;
        $r6 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        $r7 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.util.Set keySet()>();
        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>($r7);
        $r8 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>(r2);
        return $r8;
    }

    public java.lang.Object getValue(java.lang.String)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: java.lang.Object getAttribute(java.lang.String)>(r1);
        return $r2;
    }

    public java.lang.String[] getValueNames()
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $z0 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isValidInternal()>();
        if $z0 != 0 goto label0;

        $r2 = new java.lang.IllegalStateException;
        $r1 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.getValueNames.ise");
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $r4 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: java.lang.String[] keys()>();
        return $r4;
    }

    public void invalidate()
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $z0 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isValidInternal()>();
        if $z0 != 0 goto label0;

        $r2 = new java.lang.IllegalStateException;
        $r1 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.invalidate.ise");
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void expire()>();
        return;
    }

    public boolean isNew()
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $z0 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isValidInternal()>();
        if $z0 != 0 goto label0;

        $r2 = new java.lang.IllegalStateException;
        $r1 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.isNew.ise");
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $z1 = r0.<org.apache.catalina.session.StandardSession: boolean isNew>;
        return $z1;
    }

    public void putValue(java.lang.String, java.lang.Object)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;
        java.lang.Object r2;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void setAttribute(java.lang.String,java.lang.Object)>(r1, r2);
        return;
    }

    public void removeAttribute(java.lang.String)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void removeAttribute(java.lang.String,boolean)>(r1, 1);
        return;
    }

    public void removeAttribute(java.lang.String, boolean)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1, $r4;
        boolean z0, $z1;
        org.apache.tomcat.util.res.StringManager $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $z1 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isValidInternal()>();
        if $z1 != 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        $r2 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.removeAttribute.ise");
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void removeAttributeInternal(java.lang.String,boolean)>(r1, z0);
        return;
    }

    public void removeValue(java.lang.String)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void removeAttribute(java.lang.String)>(r1);
        return;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;
        java.lang.Object r2;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void setAttribute(java.lang.String,java.lang.Object,boolean)>(r1, r2, 1);
        return;
    }

    public void setAttribute(java.lang.String, java.lang.Object, boolean)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1, $r12, $r16, $r17, $r25, $r35, $r47, $r63;
        java.lang.Object r2, r5, r37, $r51, $r52;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.tomcat.util.res.StringManager $r3, $r14, $r23, $r34, $r46, $r62;
        javax.servlet.http.HttpSessionBindingEvent r4, $r27, $r39, $r53, $r55;
        java.lang.Throwable r6, r9, $r30, $r41, r42, $r57;
        java.lang.Object[] r7, $r15, $r24;
        int i0, $i1;
        javax.servlet.http.HttpSessionAttributeListener r8;
        java.lang.Exception r10, $r58;
        java.lang.IllegalArgumentException $r11, $r22;
        java.lang.IllegalStateException $r13;
        org.apache.catalina.Manager $r18, $r19, $r31, $r43, $r48, $r59;
        org.apache.catalina.Container $r20, $r32, $r44, $r49, $r60;
        org.apache.catalina.Context $r21, r50;
        java.util.concurrent.ConcurrentMap $r26, $r36;
        javax.servlet.http.HttpSession $r28, $r40, $r54, $r56;
        javax.servlet.http.HttpSessionBindingListener $r29, $r38;
        org.apache.juli.logging.Log $r33, $r45, $r61;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        z0 := @parameter2: boolean;
        if r1 != null goto label0;

        $r11 = new java.lang.IllegalArgumentException;
        $r3 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.setAttribute.namenull");
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);
        throw $r11;

     label0:
        if r2 != null goto label1;

        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void removeAttribute(java.lang.String)>(r1);
        return;

     label1:
        $z1 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isValidInternal()>();
        if $z1 != 0 goto label2;

        $r13 = new java.lang.IllegalStateException;
        $r14 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r15 = newarray (java.lang.Object)[1];
        $r16 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: java.lang.String getIdInternal()>();
        $r15[0] = $r16;
        $r17 = virtualinvoke $r14.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardSession.setAttribute.ise", $r15);
        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);
        throw $r13;

     label2:
        $r18 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        if $r18 == null goto label3;

        $r19 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r20 = interfaceinvoke $r19.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r21 = (org.apache.catalina.Context) $r20;
        $z2 = interfaceinvoke $r21.<org.apache.catalina.Context: boolean getDistributable()>();
        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isAttributeDistributable(java.lang.String,java.lang.Object)>(r1, r2);
        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean exclude(java.lang.String,java.lang.Object)>(r1, r2);
        if $z4 != 0 goto label3;

        $r22 = new java.lang.IllegalArgumentException;
        $r23 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r24 = newarray (java.lang.Object)[1];
        $r24[0] = r1;
        $r25 = virtualinvoke $r23.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardSession.setAttribute.iae", $r24);
        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);
        throw $r22;

     label3:
        r4 = null;
        if z0 == 0 goto label7;

        $z5 = r2 instanceof javax.servlet.http.HttpSessionBindingListener;
        if $z5 == 0 goto label7;

        $r26 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        r5 = interfaceinvoke $r26.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1);
        if r2 == r5 goto label7;

        $r27 = new javax.servlet.http.HttpSessionBindingEvent;
        $r28 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSession getSession()>();
        specialinvoke $r27.<javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)>($r28, r1, r2);
        r4 = $r27;

     label4:
        $r29 = (javax.servlet.http.HttpSessionBindingListener) r2;
        interfaceinvoke $r29.<javax.servlet.http.HttpSessionBindingListener: void valueBound(javax.servlet.http.HttpSessionBindingEvent)>(r4);

     label5:
        goto label7;

     label6:
        $r30 := @caughtexception;
        r6 = $r30;
        $r31 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r32 = interfaceinvoke $r31.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r33 = interfaceinvoke $r32.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r34 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r35 = virtualinvoke $r34.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.bindingEvent");
        interfaceinvoke $r33.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r35, r6);

     label7:
        $r36 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        r37 = interfaceinvoke $r36.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        if z0 == 0 goto label11;

        if r37 == null goto label11;

        if r37 == r2 goto label11;

        $z6 = r37 instanceof javax.servlet.http.HttpSessionBindingListener;
        if $z6 == 0 goto label11;

     label8:
        $r38 = (javax.servlet.http.HttpSessionBindingListener) r37;
        $r39 = new javax.servlet.http.HttpSessionBindingEvent;
        $r40 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSession getSession()>();
        specialinvoke $r39.<javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String)>($r40, r1);
        interfaceinvoke $r38.<javax.servlet.http.HttpSessionBindingListener: void valueUnbound(javax.servlet.http.HttpSessionBindingEvent)>($r39);

     label9:
        goto label11;

     label10:
        $r41 := @caughtexception;
        r42 = $r41;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r42);
        $r43 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r44 = interfaceinvoke $r43.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r45 = interfaceinvoke $r44.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r46 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r47 = virtualinvoke $r46.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.bindingEvent");
        interfaceinvoke $r45.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r47, r42);

     label11:
        if z0 != 0 goto label12;

        return;

     label12:
        $r48 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r49 = interfaceinvoke $r48.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        r50 = (org.apache.catalina.Context) $r49;
        r7 = interfaceinvoke r50.<org.apache.catalina.Context: java.lang.Object[] getApplicationEventListeners()>();
        if r7 != null goto label13;

        return;

     label13:
        i0 = 0;
        goto label28;

     label14:
        $r51 = r7[i0];
        $z7 = $r51 instanceof javax.servlet.http.HttpSessionAttributeListener;
        if $z7 != 0 goto label15;

        goto label27;

     label15:
        $r52 = r7[i0];
        r8 = (javax.servlet.http.HttpSessionAttributeListener) $r52;

     label16:
        if r37 == null goto label18;

        interfaceinvoke r50.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("beforeSessionAttributeReplaced", r8);
        if r4 != null goto label17;

        $r53 = new javax.servlet.http.HttpSessionBindingEvent;
        $r54 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSession getSession()>();
        specialinvoke $r53.<javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)>($r54, r1, r37);
        r4 = $r53;

     label17:
        interfaceinvoke r8.<javax.servlet.http.HttpSessionAttributeListener: void attributeReplaced(javax.servlet.http.HttpSessionBindingEvent)>(r4);
        interfaceinvoke r50.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("afterSessionAttributeReplaced", r8);
        goto label27;

     label18:
        interfaceinvoke r50.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("beforeSessionAttributeAdded", r8);
        if r4 != null goto label19;

        $r55 = new javax.servlet.http.HttpSessionBindingEvent;
        $r56 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSession getSession()>();
        specialinvoke $r55.<javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)>($r56, r1, r2);
        r4 = $r55;

     label19:
        interfaceinvoke r8.<javax.servlet.http.HttpSessionAttributeListener: void attributeAdded(javax.servlet.http.HttpSessionBindingEvent)>(r4);
        interfaceinvoke r50.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("afterSessionAttributeAdded", r8);

     label20:
        goto label27;

     label21:
        $r57 := @caughtexception;
        r9 = $r57;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r9);

     label22:
        if r37 == null goto label23;

        interfaceinvoke r50.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("afterSessionAttributeReplaced", r8);
        goto label26;

     label23:
        interfaceinvoke r50.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("afterSessionAttributeAdded", r8);

     label24:
        goto label26;

     label25:
        $r58 := @caughtexception;
        r10 = $r58;

     label26:
        $r59 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r60 = interfaceinvoke $r59.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r61 = interfaceinvoke $r60.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r62 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r63 = virtualinvoke $r62.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.attributeEvent");
        interfaceinvoke $r61.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r63, r9);

     label27:
        i0 = i0 + 1;

     label28:
        $i1 = lengthof r7;
        if i0 < $i1 goto label14;

        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label8 to label9 with label10;
        catch java.lang.Throwable from label16 to label20 with label21;
        catch java.lang.Exception from label22 to label24 with label25;
    }

    protected boolean isValidInternal()
    {
        org.apache.catalina.session.StandardSession r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $z0 = r0.<org.apache.catalina.session.StandardSession: boolean isValid>;
        return $z0;
    }

    public boolean isAttributeDistributable(java.lang.String, java.lang.Object)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $z0 = r2 instanceof java.io.Serializable;
        return $z0;
    }

    protected void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        org.apache.catalina.session.StandardSession r0;
        java.io.ObjectInputStream r1;
        int i0, i1, $i4;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String r2, r5, $r19, $r27, $r29, $r39, $r60;
        java.lang.Object r3, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r32, $r34;
        java.io.WriteAbortedException r4, $r35;
        java.lang.Long $r7, $r9, $r17;
        long $l2, $l3, $l5;
        java.lang.Integer $r11, $r33;
        java.lang.Boolean $r13, $r15;
        org.apache.catalina.Manager $r20, $r23, $r40, $r43, $r46, $r49, $r52;
        org.apache.catalina.Container $r21, $r24, $r41, $r44, $r47, $r50, $r53;
        org.apache.juli.logging.Log $r22, $r25, $r42, $r45, $r48, $r51, $r54;
        java.lang.StringBuilder $r26, $r28, $r55, $r56, $r57, $r58, $r59;
        java.util.concurrent.ConcurrentMap $r30, $r61;
        java.util.concurrent.ConcurrentHashMap $r31;
        java.lang.Throwable $r36;
        org.apache.tomcat.util.res.StringManager $r37;
        java.lang.Object[] $r38;
        java.util.ArrayList $r63, $r64;
        java.util.Map $r65;
        java.util.Hashtable $r66;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.io.ObjectInputStream;
        r0.<org.apache.catalina.session.StandardSession: java.lang.String authType> = null;
        $r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r7 = (java.lang.Long) $r6;
        $l2 = virtualinvoke $r7.<java.lang.Long: long longValue()>();
        r0.<org.apache.catalina.session.StandardSession: long creationTime> = $l2;
        $r8 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r9 = (java.lang.Long) $r8;
        $l3 = virtualinvoke $r9.<java.lang.Long: long longValue()>();
        r0.<org.apache.catalina.session.StandardSession: long lastAccessedTime> = $l3;
        $r10 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r11 = (java.lang.Integer) $r10;
        $i4 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();
        r0.<org.apache.catalina.session.StandardSession: int maxInactiveInterval> = $i4;
        $r12 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r13 = (java.lang.Boolean) $r12;
        $z1 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();
        r0.<org.apache.catalina.session.StandardSession: boolean isNew> = $z1;
        $r14 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r15 = (java.lang.Boolean) $r14;
        $z2 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();
        r0.<org.apache.catalina.session.StandardSession: boolean isValid> = $z2;
        $r16 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r17 = (java.lang.Long) $r16;
        $l5 = virtualinvoke $r17.<java.lang.Long: long longValue()>();
        r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime> = $l5;
        r0.<org.apache.catalina.session.StandardSession: java.security.Principal principal> = null;
        $r18 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r19 = (java.lang.String) $r18;
        r0.<org.apache.catalina.session.StandardSession: java.lang.String id> = $r19;
        $r20 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r21 = interfaceinvoke $r20.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r22 = interfaceinvoke $r21.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $z3 = interfaceinvoke $r22.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label0;

        $r23 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r24 = interfaceinvoke $r23.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r25 = interfaceinvoke $r24.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("readObject() loading session ");
        $r27 = r0.<org.apache.catalina.session.StandardSession: java.lang.String id>;
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r25.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r29);

     label0:
        $r30 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        if $r30 != null goto label1;

        $r31 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r31.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes> = $r31;

     label1:
        $r32 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r33 = (java.lang.Integer) $r32;
        i0 = virtualinvoke $r33.<java.lang.Integer: int intValue()>();
        z0 = r0.<org.apache.catalina.session.StandardSession: boolean isValid>;
        r0.<org.apache.catalina.session.StandardSession: boolean isValid> = 1;
        i1 = 0;
        goto label12;

     label2:
        $r34 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        r2 = (java.lang.String) $r34;

     label3:
        r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label4:
        goto label8;

     label5:
        $r35 := @caughtexception;
        r4 = $r35;
        $r36 = virtualinvoke r4.<java.io.WriteAbortedException: java.lang.Throwable getCause()>();
        $z4 = $r36 instanceof java.io.NotSerializableException;
        if $z4 == 0 goto label7;

        $r37 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r38 = newarray (java.lang.Object)[2];
        $r38[0] = r2;
        $r39 = r0.<org.apache.catalina.session.StandardSession: java.lang.String id>;
        $r38[1] = $r39;
        r5 = virtualinvoke $r37.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardSession.notDeserializable", $r38);
        $r40 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r41 = interfaceinvoke $r40.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r42 = interfaceinvoke $r41.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $z5 = interfaceinvoke $r42.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z5 == 0 goto label6;

        $r43 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r44 = interfaceinvoke $r43.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r45 = interfaceinvoke $r44.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        interfaceinvoke $r45.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>(r5, r4);
        goto label11;

     label6:
        $r46 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r47 = interfaceinvoke $r46.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r48 = interfaceinvoke $r47.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        interfaceinvoke $r48.<org.apache.juli.logging.Log: void warn(java.lang.Object)>(r5);
        goto label11;

     label7:
        throw r4;

     label8:
        $r49 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r50 = interfaceinvoke $r49.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r51 = interfaceinvoke $r50.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $z6 = interfaceinvoke $r51.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z6 == 0 goto label9;

        $r52 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r53 = interfaceinvoke $r52.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r54 = interfaceinvoke $r53.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r55 = new java.lang.StringBuilder;
        specialinvoke $r55.<java.lang.StringBuilder: void <init>(java.lang.String)>("  loading attribute \'");
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' with value \'");
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r54.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r60);

     label9:
        $z7 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean exclude(java.lang.String,java.lang.Object)>(r2, r3);
        if $z7 == 0 goto label10;

        goto label11;

     label10:
        $r61 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        interfaceinvoke $r61.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label11:
        i1 = i1 + 1;

     label12:
        if i1 < i0 goto label2;

        r0.<org.apache.catalina.session.StandardSession: boolean isValid> = z0;
        $r63 = r0.<org.apache.catalina.session.StandardSession: java.util.ArrayList listeners>;
        if $r63 != null goto label13;

        $r64 = new java.util.ArrayList;
        specialinvoke $r64.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.catalina.session.StandardSession: java.util.ArrayList listeners> = $r64;

     label13:
        $r65 = r0.<org.apache.catalina.session.StandardSession: java.util.Map notes>;
        if $r65 != null goto label14;

        $r66 = new java.util.Hashtable;
        specialinvoke $r66.<java.util.Hashtable: void <init>()>();
        r0.<org.apache.catalina.session.StandardSession: java.util.Map notes> = $r66;

     label14:
        return;

        catch java.io.WriteAbortedException from label3 to label4 with label5;
    }

    protected void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.catalina.session.StandardSession r0;
        java.io.ObjectOutputStream r1;
        java.lang.String[] r2;
        java.util.ArrayList r3, r4, $r24, $r25;
        int i0, $i3, $i5, i6, i7;
        java.lang.Object r5, $r33, $r34, $r42, $r46, $r56;
        java.io.NotSerializableException r6, $r50;
        long $l1, $l2, $l4;
        java.lang.Long $r7, $r8, $r12;
        java.lang.Integer $r9, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z7;
        java.lang.Boolean $r10, $r11;
        java.lang.String $r13, $r21, $r23, $r27, $r28, $r29, $r30, $r31, $r43, $r49, $r57, $r58;
        org.apache.catalina.Manager $r14, $r17, $r35, $r38, $r51;
        org.apache.catalina.Container $r15, $r18, $r36, $r39, $r52;
        org.apache.juli.logging.Log $r16, $r19, $r37, $r40, $r53;
        java.lang.StringBuilder $r20, $r22, $r41, $r44, $r45, $r47, $r48;
        java.util.concurrent.ConcurrentMap $r26;
        org.apache.tomcat.util.res.StringManager $r54;
        java.lang.Object[] $r55;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.io.ObjectOutputStream;
        $l1 = r0.<org.apache.catalina.session.StandardSession: long creationTime>;
        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);
        $l2 = r0.<org.apache.catalina.session.StandardSession: long lastAccessedTime>;
        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r8);
        $i3 = r0.<org.apache.catalina.session.StandardSession: int maxInactiveInterval>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);
        $z0 = r0.<org.apache.catalina.session.StandardSession: boolean isNew>;
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r10);
        $z1 = r0.<org.apache.catalina.session.StandardSession: boolean isValid>;
        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r11);
        $l4 = r0.<org.apache.catalina.session.StandardSession: long thisAccessedTime>;
        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r12);
        $r13 = r0.<org.apache.catalina.session.StandardSession: java.lang.String id>;
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r13);
        $r14 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r15 = interfaceinvoke $r14.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r16 = interfaceinvoke $r15.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $z2 = interfaceinvoke $r16.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label0;

        $r17 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r18 = interfaceinvoke $r17.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r19 = interfaceinvoke $r18.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("writeObject() storing session ");
        $r21 = r0.<org.apache.catalina.session.StandardSession: java.lang.String id>;
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r19.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r23);

     label0:
        r2 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: java.lang.String[] keys()>();
        $r24 = new java.util.ArrayList;
        specialinvoke $r24.<java.util.ArrayList: void <init>()>();
        r3 = $r24;
        $r25 = new java.util.ArrayList;
        specialinvoke $r25.<java.util.ArrayList: void <init>()>();
        r4 = $r25;
        i0 = 0;
        goto label5;

     label1:
        $r26 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        $r27 = r2[i0];
        r5 = interfaceinvoke $r26.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r27);
        if r5 != null goto label2;

        goto label4;

     label2:
        $r28 = r2[i0];
        $z3 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean isAttributeDistributable(java.lang.String,java.lang.Object)>($r28, r5);
        if $z3 == 0 goto label3;

        $r29 = r2[i0];
        $z4 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean exclude(java.lang.String,java.lang.Object)>($r29, r5);
        if $z4 != 0 goto label3;

        $r30 = r2[i0];
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r30);
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        goto label4;

     label3:
        $r31 = r2[i0];
        virtualinvoke r0.<org.apache.catalina.session.StandardSession: void removeAttributeInternal(java.lang.String,boolean)>($r31, 1);

     label4:
        i0 = i0 + 1;

     label5:
        $i5 = lengthof r2;
        if i0 < $i5 goto label1;

        i6 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r32);
        i7 = 0;
        goto label11;

     label6:
        $r33 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i7);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r33);

     label7:
        $r34 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i7);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r34);
        $r35 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r36 = interfaceinvoke $r35.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r37 = interfaceinvoke $r36.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $z7 = interfaceinvoke $r37.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z7 == 0 goto label10;

        $r38 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r39 = interfaceinvoke $r38.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r40 = interfaceinvoke $r39.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r41 = new java.lang.StringBuilder;
        specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>("  storing attribute \'");
        $r42 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i7);
        $r43 = (java.lang.String) $r42;
        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' with value \'");
        $r46 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i7);
        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r40.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r49);

     label8:
        goto label10;

     label9:
        $r50 := @caughtexception;
        r6 = $r50;
        $r51 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r52 = interfaceinvoke $r51.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r53 = interfaceinvoke $r52.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r54 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r55 = newarray (java.lang.Object)[2];
        $r56 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i7);
        $r55[0] = $r56;
        $r57 = r0.<org.apache.catalina.session.StandardSession: java.lang.String id>;
        $r55[1] = $r57;
        $r58 = virtualinvoke $r54.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardSession.notSerializable", $r55);
        interfaceinvoke $r53.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r58, r6);

     label10:
        i7 = i7 + 1;

     label11:
        if i7 < i6 goto label6;

        return;

        catch java.io.NotSerializableException from label7 to label8 with label9;
    }

    protected boolean exclude(java.lang.String)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: boolean exclude(java.lang.String,java.lang.Object)>(r1, null);
        return $z0;
    }

    protected boolean exclude(java.lang.String, java.lang.Object)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.util.Set $r3;
        org.apache.catalina.Manager r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = <org.apache.catalina.session.Constants: java.util.Set excludedAttributeNames>;
        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        if $z0 == 0 goto label0;

        return 1;

     label0:
        r4 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager getManager()>();
        if r4 != null goto label1;

        return 0;

     label1:
        $z1 = interfaceinvoke r4.<org.apache.catalina.Manager: boolean willAttributeDistribute(java.lang.String,java.lang.Object)>(r1, r2);
        if $z1 == 0 goto label2;

        $z2 = 0;
        goto label3;

     label2:
        $z2 = 1;

     label3:
        return $z2;
    }

    protected void fireContainerEvent(org.apache.catalina.Context, java.lang.String, java.lang.Object) throws java.lang.Exception
    {
        org.apache.catalina.session.StandardSession r0;
        org.apache.catalina.Context r1;
        java.lang.String r2;
        java.lang.Object r3;
        boolean $z0;
        org.apache.catalina.core.StandardContext $r4;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: org.apache.catalina.Context;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Object;
        $z0 = r1 instanceof org.apache.catalina.core.StandardContext;
        if $z0 == 0 goto label0;

        $r4 = (org.apache.catalina.core.StandardContext) r1;
        virtualinvoke $r4.<org.apache.catalina.core.StandardContext: void fireContainerEvent(java.lang.String,java.lang.Object)>(r2, r3);

     label0:
        return;
    }

    public void fireSessionEvent(java.lang.String, java.lang.Object)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.apache.catalina.SessionEvent r3, $r7;
        org.apache.catalina.SessionListener[] r4, r11;
        java.util.ArrayList r5, $r6, $r8, $r9;
        int $i0, i1, $i2;
        java.lang.Object[] $r10;
        java.lang.Throwable $r12;
        org.apache.catalina.SessionListener $r13;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r6 = r0.<org.apache.catalina.session.StandardSession: java.util.ArrayList listeners>;
        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();
        if $i0 >= 1 goto label0;

        return;

     label0:
        $r7 = new org.apache.catalina.SessionEvent;
        specialinvoke $r7.<org.apache.catalina.SessionEvent: void <init>(org.apache.catalina.Session,java.lang.String,java.lang.Object)>(r0, r1, r2);
        r3 = $r7;
        r4 = newarray (org.apache.catalina.SessionListener)[0];
        $r8 = r0.<org.apache.catalina.session.StandardSession: java.util.ArrayList listeners>;
        r5 = $r8;
        entermonitor $r8;

     label1:
        $r9 = r0.<org.apache.catalina.session.StandardSession: java.util.ArrayList listeners>;
        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r4);
        r11 = (org.apache.catalina.SessionListener[]) $r10;
        exitmonitor r5;

     label2:
        goto label6;

     label3:
        $r12 := @caughtexception;

     label4:
        exitmonitor r5;

     label5:
        throw $r12;

     label6:
        i1 = 0;
        goto label8;

     label7:
        $r13 = r11[i1];
        interfaceinvoke $r13.<org.apache.catalina.SessionListener: void sessionEvent(org.apache.catalina.SessionEvent)>(r3);
        i1 = i1 + 1;

     label8:
        $i2 = lengthof r11;
        if i1 < $i2 goto label7;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected java.lang.String[] keys()
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String[] $r1, $r5;
        java.util.concurrent.ConcurrentMap $r2;
        java.util.Set $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.catalina.session.StandardSession;
        $r2 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Set keySet()>();
        $r1 = <org.apache.catalina.session.StandardSession: java.lang.String[] EMPTY_ARRAY>;
        $r4 = interfaceinvoke $r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r1);
        $r5 = (java.lang.String[]) $r4;
        return $r5;
    }

    protected void removeAttributeInternal(java.lang.String, boolean)
    {
        org.apache.catalina.session.StandardSession r0;
        java.lang.String r1, $r25;
        boolean z0, $z1, $z2;
        java.lang.Object r2, $r15, $r16;
        javax.servlet.http.HttpSessionBindingEvent r3, $r10, $r17;
        org.apache.catalina.Context r4;
        java.lang.Object[] r5;
        int i0, $i1;
        javax.servlet.http.HttpSessionAttributeListener r6;
        java.lang.Throwable r7, $r19;
        java.lang.Exception r8, $r20;
        java.util.concurrent.ConcurrentMap $r9;
        javax.servlet.http.HttpSession $r11, $r18;
        javax.servlet.http.HttpSessionBindingListener $r12;
        org.apache.catalina.Manager $r13, $r21;
        org.apache.catalina.Container $r14, $r22;
        org.apache.juli.logging.Log $r23;
        org.apache.tomcat.util.res.StringManager $r24;

        r0 := @this: org.apache.catalina.session.StandardSession;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        if r1 != null goto label0;

        return;

     label0:
        $r9 = r0.<org.apache.catalina.session.StandardSession: java.util.concurrent.ConcurrentMap attributes>;
        r2 = interfaceinvoke $r9.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(r1);
        if z0 == 0 goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        r3 = null;
        $z1 = r2 instanceof javax.servlet.http.HttpSessionBindingListener;
        if $z1 == 0 goto label3;

        $r10 = new javax.servlet.http.HttpSessionBindingEvent;
        $r11 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSession getSession()>();
        specialinvoke $r10.<javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)>($r11, r1, r2);
        r3 = $r10;
        $r12 = (javax.servlet.http.HttpSessionBindingListener) r2;
        interfaceinvoke $r12.<javax.servlet.http.HttpSessionBindingListener: void valueUnbound(javax.servlet.http.HttpSessionBindingEvent)>(r3);

     label3:
        $r13 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r14 = interfaceinvoke $r13.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        r4 = (org.apache.catalina.Context) $r14;
        r5 = interfaceinvoke r4.<org.apache.catalina.Context: java.lang.Object[] getApplicationEventListeners()>();
        if r5 != null goto label4;

        return;

     label4:
        i0 = 0;
        goto label16;

     label5:
        $r15 = r5[i0];
        $z2 = $r15 instanceof javax.servlet.http.HttpSessionAttributeListener;
        if $z2 != 0 goto label6;

        goto label15;

     label6:
        $r16 = r5[i0];
        r6 = (javax.servlet.http.HttpSessionAttributeListener) $r16;

     label7:
        interfaceinvoke r4.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("beforeSessionAttributeRemoved", r6);
        if r3 != null goto label8;

        $r17 = new javax.servlet.http.HttpSessionBindingEvent;
        $r18 = virtualinvoke r0.<org.apache.catalina.session.StandardSession: javax.servlet.http.HttpSession getSession()>();
        specialinvoke $r17.<javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)>($r18, r1, r2);
        r3 = $r17;

     label8:
        interfaceinvoke r6.<javax.servlet.http.HttpSessionAttributeListener: void attributeRemoved(javax.servlet.http.HttpSessionBindingEvent)>(r3);
        interfaceinvoke r4.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("afterSessionAttributeRemoved", r6);

     label9:
        goto label15;

     label10:
        $r19 := @caughtexception;
        r7 = $r19;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r7);

     label11:
        interfaceinvoke r4.<org.apache.catalina.Context: void fireContainerEvent(java.lang.String,java.lang.Object)>("afterSessionAttributeRemoved", r6);

     label12:
        goto label14;

     label13:
        $r20 := @caughtexception;
        r8 = $r20;

     label14:
        $r21 = r0.<org.apache.catalina.session.StandardSession: org.apache.catalina.Manager manager>;
        $r22 = interfaceinvoke $r21.<org.apache.catalina.Manager: org.apache.catalina.Container getContainer()>();
        $r23 = interfaceinvoke $r22.<org.apache.catalina.Container: org.apache.juli.logging.Log getLogger()>();
        $r24 = <org.apache.catalina.session.StandardSession: org.apache.tomcat.util.res.StringManager sm>;
        $r25 = virtualinvoke $r24.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardSession.attributeEvent");
        interfaceinvoke $r23.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r25, r7);

     label15:
        i0 = i0 + 1;

     label16:
        $i1 = lengthof r5;
        if i0 < $i1 goto label5;

        return;

        catch java.lang.Throwable from label7 to label9 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
    }
}
