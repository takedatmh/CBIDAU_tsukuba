public class javax.naming.spi.ResolveResult extends java.lang.Object implements java.io.Serializable
{
    protected java.lang.Object resolvedObj;
    protected javax.naming.Name remainingName;
    private static final long serialVersionUID;

    protected void <init>()
    {
        javax.naming.spi.ResolveResult r0;

        r0 := @this: javax.naming.spi.ResolveResult;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<javax.naming.spi.ResolveResult: java.lang.Object resolvedObj> = null;
        r0.<javax.naming.spi.ResolveResult: javax.naming.Name remainingName> = null;
        return;
    }

    public void <init>(java.lang.Object, java.lang.String)
    {
        javax.naming.spi.ResolveResult r0;
        java.lang.Object r1;
        java.lang.String r2;
        javax.naming.InvalidNameException r3, $r5;
        javax.naming.CompositeName $r4;

        r0 := @this: javax.naming.spi.ResolveResult;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<javax.naming.spi.ResolveResult: java.lang.Object resolvedObj> = r1;

     label0:
        $r4 = new javax.naming.CompositeName;
        specialinvoke $r4.<javax.naming.CompositeName: void <init>(java.lang.String)>(r2);
        r0.<javax.naming.spi.ResolveResult: javax.naming.Name remainingName> = $r4;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;

     label3:
        return;

        catch javax.naming.InvalidNameException from label0 to label1 with label2;
    }

    public void <init>(java.lang.Object, javax.naming.Name)
    {
        javax.naming.spi.ResolveResult r0;
        java.lang.Object r1;
        javax.naming.Name r2;

        r0 := @this: javax.naming.spi.ResolveResult;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: javax.naming.Name;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<javax.naming.spi.ResolveResult: java.lang.Object resolvedObj> = r1;
        virtualinvoke r0.<javax.naming.spi.ResolveResult: void setRemainingName(javax.naming.Name)>(r2);
        return;
    }

    public javax.naming.Name getRemainingName()
    {
        javax.naming.spi.ResolveResult r0;
        javax.naming.Name $r1;

        r0 := @this: javax.naming.spi.ResolveResult;
        $r1 = r0.<javax.naming.spi.ResolveResult: javax.naming.Name remainingName>;
        return $r1;
    }

    public java.lang.Object getResolvedObj()
    {
        javax.naming.spi.ResolveResult r0;
        java.lang.Object $r1;

        r0 := @this: javax.naming.spi.ResolveResult;
        $r1 = r0.<javax.naming.spi.ResolveResult: java.lang.Object resolvedObj>;
        return $r1;
    }

    public void setRemainingName(javax.naming.Name)
    {
        javax.naming.spi.ResolveResult r0;
        javax.naming.Name r1, $r3, $r4;
        java.lang.Object $r2;

        r0 := @this: javax.naming.spi.ResolveResult;
        r1 := @parameter0: javax.naming.Name;
        if r1 == null goto label0;

        $r2 = interfaceinvoke r1.<javax.naming.Name: java.lang.Object clone()>();
        $r3 = (javax.naming.Name) $r2;
        $r4 = (javax.naming.Name) $r3;
        r0.<javax.naming.spi.ResolveResult: javax.naming.Name remainingName> = $r4;
        goto label1;

     label0:
        r0.<javax.naming.spi.ResolveResult: javax.naming.Name remainingName> = null;

     label1:
        return;
    }

    public void appendRemainingName(javax.naming.Name)
    {
        javax.naming.spi.ResolveResult r0;
        javax.naming.Name r1, $r3, $r4, $r8, $r9;
        javax.naming.InvalidNameException r2, $r6;
        java.lang.Object $r7;

        r0 := @this: javax.naming.spi.ResolveResult;
        r1 := @parameter0: javax.naming.Name;
        if r1 == null goto label4;

        $r3 = r0.<javax.naming.spi.ResolveResult: javax.naming.Name remainingName>;
        if $r3 == null goto label3;

     label0:
        $r4 = r0.<javax.naming.spi.ResolveResult: javax.naming.Name remainingName>;
        interfaceinvoke $r4.<javax.naming.Name: javax.naming.Name addAll(javax.naming.Name)>(r1);

     label1:
        goto label4;

     label2:
        $r6 := @caughtexception;
        r2 = $r6;
        goto label4;

     label3:
        $r7 = interfaceinvoke r1.<javax.naming.Name: java.lang.Object clone()>();
        $r8 = (javax.naming.Name) $r7;
        $r9 = (javax.naming.Name) $r8;
        r0.<javax.naming.spi.ResolveResult: javax.naming.Name remainingName> = $r9;

     label4:
        return;

        catch javax.naming.InvalidNameException from label0 to label1 with label2;
    }

    public void appendRemainingComponent(java.lang.String)
    {
        javax.naming.spi.ResolveResult r0;
        java.lang.String r1;
        javax.naming.CompositeName r2, $r4;
        javax.naming.InvalidNameException r3, $r6;

        r0 := @this: javax.naming.spi.ResolveResult;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label4;

        $r4 = new javax.naming.CompositeName;
        specialinvoke $r4.<javax.naming.CompositeName: void <init>()>();
        r2 = $r4;

     label0:
        virtualinvoke r2.<javax.naming.CompositeName: javax.naming.Name add(java.lang.String)>(r1);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;

     label3:
        virtualinvoke r0.<javax.naming.spi.ResolveResult: void appendRemainingName(javax.naming.Name)>(r2);

     label4:
        return;

        catch javax.naming.InvalidNameException from label0 to label1 with label2;
    }

    public void setResolvedObj(java.lang.Object)
    {
        javax.naming.spi.ResolveResult r0;
        java.lang.Object r1;

        r0 := @this: javax.naming.spi.ResolveResult;
        r1 := @parameter0: java.lang.Object;
        r0.<javax.naming.spi.ResolveResult: java.lang.Object resolvedObj> = r1;
        return;
    }
}
