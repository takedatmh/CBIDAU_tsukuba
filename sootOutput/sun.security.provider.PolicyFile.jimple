public class sun.security.provider.PolicyFile extends java.security.Policy
{
    private static final sun.security.util.Debug debug;
    private static final java.lang.String NONE;
    private static final java.lang.String P11KEYSTORE;
    private static final java.lang.String SELF;
    private static final java.lang.String X500PRINCIPAL;
    private static final java.lang.String POLICY;
    private static final java.lang.String SECURITY_MANAGER;
    private static final java.lang.String POLICY_URL;
    private static final java.lang.String AUTH_POLICY;
    private static final java.lang.String AUTH_POLICY_URL;
    private static final int DEFAULT_CACHE_SIZE;
    private java.util.concurrent.atomic.AtomicReference policyInfo;
    private boolean constructed;
    private boolean expandProperties;
    private boolean ignoreIdentityScope;
    private boolean allowSystemProperties;
    private boolean notUtf8;
    private java.net.URL url;
    private static final java.lang.Class[] PARAMS0;
    private static final java.lang.Class[] PARAMS1;
    private static final java.lang.Class[] PARAMS2;

    public void <init>()
    {
        sun.security.provider.PolicyFile r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.net.URL $r2;

        r0 := @this: sun.security.provider.PolicyFile;
        specialinvoke r0.<java.security.Policy: void <init>()>();
        $r1 = new java.util.concurrent.atomic.AtomicReference;
        specialinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
        r0.<sun.security.provider.PolicyFile: java.util.concurrent.atomic.AtomicReference policyInfo> = $r1;
        r0.<sun.security.provider.PolicyFile: boolean constructed> = 0;
        r0.<sun.security.provider.PolicyFile: boolean expandProperties> = 1;
        r0.<sun.security.provider.PolicyFile: boolean ignoreIdentityScope> = 1;
        r0.<sun.security.provider.PolicyFile: boolean allowSystemProperties> = 1;
        r0.<sun.security.provider.PolicyFile: boolean notUtf8> = 0;
        $r2 = (java.net.URL) null;
        specialinvoke r0.<sun.security.provider.PolicyFile: void init(java.net.URL)>($r2);
        return;
    }

    public void <init>(java.net.URL)
    {
        sun.security.provider.PolicyFile r0;
        java.net.URL r1;
        java.util.concurrent.atomic.AtomicReference $r2;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.net.URL;
        specialinvoke r0.<java.security.Policy: void <init>()>();
        $r2 = new java.util.concurrent.atomic.AtomicReference;
        specialinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
        r0.<sun.security.provider.PolicyFile: java.util.concurrent.atomic.AtomicReference policyInfo> = $r2;
        r0.<sun.security.provider.PolicyFile: boolean constructed> = 0;
        r0.<sun.security.provider.PolicyFile: boolean expandProperties> = 1;
        r0.<sun.security.provider.PolicyFile: boolean ignoreIdentityScope> = 1;
        r0.<sun.security.provider.PolicyFile: boolean allowSystemProperties> = 1;
        r0.<sun.security.provider.PolicyFile: boolean notUtf8> = 0;
        r0.<sun.security.provider.PolicyFile: java.net.URL url> = r1;
        specialinvoke r0.<sun.security.provider.PolicyFile: void init(java.net.URL)>(r1);
        return;
    }

    private void init(java.net.URL)
    {
        sun.security.provider.PolicyFile r0;
        java.net.URL r1;
        sun.security.provider.PolicyFile$1 $r2;
        java.lang.String r3;
        int i0;
        java.lang.NumberFormatException r4, $r6;
        java.lang.Object $r5;
        sun.security.provider.PolicyFile$PolicyInfo $r7, r8;
        java.util.concurrent.atomic.AtomicReference $r9;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.net.URL;
        $r2 = new sun.security.provider.PolicyFile$1;
        specialinvoke $r2.<sun.security.provider.PolicyFile$1: void <init>(sun.security.provider.PolicyFile)>(r0);
        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);
        r3 = (java.lang.String) $r5;
        if r3 == null goto label3;

     label0:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label1:
        goto label4;

     label2:
        $r6 := @caughtexception;
        r4 = $r6;
        i0 = 1;
        goto label4;

     label3:
        i0 = 1;

     label4:
        $r7 = new sun.security.provider.PolicyFile$PolicyInfo;
        specialinvoke $r7.<sun.security.provider.PolicyFile$PolicyInfo: void <init>(int)>(i0);
        r8 = $r7;
        specialinvoke r0.<sun.security.provider.PolicyFile: void initPolicyFile(sun.security.provider.PolicyFile$PolicyInfo,java.net.URL)>(r8, r1);
        $r9 = r0.<sun.security.provider.PolicyFile: java.util.concurrent.atomic.AtomicReference policyInfo>;
        virtualinvoke $r9.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r8);
        return;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    private void initPolicyFile(sun.security.provider.PolicyFile$PolicyInfo, java.net.URL)
    {
        sun.security.provider.PolicyFile r0;
        sun.security.provider.PolicyFile$PolicyInfo r1;
        java.net.URL r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        boolean z0;
        sun.security.util.Debug $r4, $r5;
        java.lang.String $r8;
        sun.security.provider.PolicyFile$2 $r9;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: sun.security.provider.PolicyFile$PolicyInfo;
        r2 := @parameter1: java.net.URL;
        if r2 == null goto label1;

        $r4 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r4 == null goto label0;

        $r5 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reading ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<sun.security.util.Debug: void println(java.lang.String)>($r8);

     label0:
        $r9 = new sun.security.provider.PolicyFile$2;
        specialinvoke $r9.<sun.security.provider.PolicyFile$2: void <init>(sun.security.provider.PolicyFile,java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>(r0, r2, r1);
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r9);
        goto label3;

     label1:
        z0 = specialinvoke r0.<sun.security.provider.PolicyFile: boolean initPolicyFile(java.lang.String,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>("java.security.policy", "policy.url.", r1);
        if z0 != 0 goto label2;

        specialinvoke r0.<sun.security.provider.PolicyFile: void initStaticPolicy(sun.security.provider.PolicyFile$PolicyInfo)>(r1);

     label2:
        specialinvoke r0.<sun.security.provider.PolicyFile: boolean initPolicyFile(java.lang.String,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>("java.security.auth.policy", "auth.policy.url.", r1);

     label3:
        return;
    }

    private boolean initPolicyFile(java.lang.String, java.lang.String, sun.security.provider.PolicyFile$PolicyInfo)
    {
        sun.security.provider.PolicyFile r0;
        java.lang.String r1, r2;
        sun.security.provider.PolicyFile$PolicyInfo r3;
        sun.security.provider.PolicyFile$3 $r4;
        java.lang.Boolean r5;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: sun.security.provider.PolicyFile$PolicyInfo;
        $r4 = new sun.security.provider.PolicyFile$3;
        specialinvoke $r4.<sun.security.provider.PolicyFile$3: void <init>(sun.security.provider.PolicyFile,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo,java.lang.String)>(r0, r1, r3, r2);
        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r4);
        r5 = (java.lang.Boolean) $r6;
        $z0 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();
        return $z0;
    }

    private boolean init(java.net.URL, sun.security.provider.PolicyFile$PolicyInfo)
    {
        sun.security.provider.PolicyFile r0;
        java.net.URL r1;
        sun.security.provider.PolicyFile$PolicyInfo r2;
        boolean z0, $z1, $z2, $z3, z4, z5;
        sun.security.provider.PolicyParser r3, $r11;
        java.io.InputStreamReader r4, $r12, $r14;
        java.security.KeyStore r5;
        sun.security.util.Debug $r6, $r21, $r36, $r41, $r42, $r47;
        java.lang.Exception r7, $r20, $r39, r40;
        sun.security.provider.PolicyParser$GrantEntry r8;
        java.lang.Throwable r9, $r51;
        java.io.IOException r10, $r24, r25, $r37, r38, $r49, r50, $r52;
        java.io.InputStream $r13, $r15;
        java.lang.String $r16, $r17, $r18, $r19, $r29, $r32, $r35, $r46, $r48;
        java.util.Enumeration r22;
        java.lang.Object $r23;
        sun.security.provider.PolicyParser$ParsingException $r26, r27;
        java.text.MessageFormat $r28, r30;
        java.lang.Object[] $r31, r33;
        java.io.PrintStream $r34;
        java.lang.StringBuilder $r43, $r44, $r45;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: sun.security.provider.PolicyFile$PolicyInfo;
        z0 = 0;
        $r11 = new sun.security.provider.PolicyParser;
        $z1 = r0.<sun.security.provider.PolicyFile: boolean expandProperties>;
        specialinvoke $r11.<sun.security.provider.PolicyParser: void <init>(boolean)>($z1);
        r3 = $r11;
        r4 = null;

     label0:
        $z2 = r0.<sun.security.provider.PolicyFile: boolean notUtf8>;
        if $z2 == 0 goto label1;

        $r12 = new java.io.InputStreamReader;
        $r13 = staticinvoke <sun.security.util.PolicyUtil: java.io.InputStream getInputStream(java.net.URL)>(r1);
        specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r13);
        r4 = $r12;
        goto label2;

     label1:
        $r14 = new java.io.InputStreamReader;
        $r15 = staticinvoke <sun.security.util.PolicyUtil: java.io.InputStream getInputStream(java.net.URL)>(r1);
        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r15, "UTF-8");
        r4 = $r14;

     label2:
        virtualinvoke r3.<sun.security.provider.PolicyParser: void read(java.io.Reader)>(r4);
        r5 = null;

     label3:
        $r16 = virtualinvoke r3.<sun.security.provider.PolicyParser: java.lang.String getKeyStoreUrl()>();
        $r17 = virtualinvoke r3.<sun.security.provider.PolicyParser: java.lang.String getKeyStoreType()>();
        $r18 = virtualinvoke r3.<sun.security.provider.PolicyParser: java.lang.String getKeyStoreProvider()>();
        $r19 = virtualinvoke r3.<sun.security.provider.PolicyParser: java.lang.String getStorePassURL()>();
        $r6 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        r5 = staticinvoke <sun.security.util.PolicyUtil: java.security.KeyStore getKeyStore(java.net.URL,java.lang.String,java.lang.String,java.lang.String,java.lang.String,sun.security.util.Debug)>(r1, $r16, $r17, $r18, $r19, $r6);

     label4:
        goto label6;

     label5:
        $r20 := @caughtexception;
        r7 = $r20;
        $r21 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r21 == null goto label6;

        virtualinvoke r7.<java.lang.Exception: void printStackTrace()>();

     label6:
        r22 = virtualinvoke r3.<sun.security.provider.PolicyParser: java.util.Enumeration grantElements()>();

     label7:
        $z3 = interfaceinvoke r22.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z3 == 0 goto label8;

        $r23 = interfaceinvoke r22.<java.util.Enumeration: java.lang.Object nextElement()>();
        r8 = (sun.security.provider.PolicyParser$GrantEntry) $r23;
        specialinvoke r0.<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>(r8, r5, r2);
        goto label7;

     label8:
        if r4 == null goto label12;

     label9:
        virtualinvoke r4.<java.io.InputStreamReader: void close()>();
        z0 = 1;

     label10:
        goto label35;

     label11:
        $r24 := @caughtexception;
        r25 = $r24;
        goto label35;

     label12:
        z0 = 1;
        goto label35;

     label13:
        $r26 := @caughtexception;

     label14:
        r27 = $r26;
        $r28 = new java.text.MessageFormat;
        $r29 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("java.security.policy.error.parsing.policy.message");
        specialinvoke $r28.<java.text.MessageFormat: void <init>(java.lang.String)>($r29);
        r30 = $r28;
        $r31 = newarray (java.lang.Object)[2];
        $r31[0] = r1;
        $r32 = virtualinvoke r27.<sun.security.provider.PolicyParser$ParsingException: java.lang.String getLocalizedMessage()>();
        $r31[1] = $r32;
        r33 = $r31;
        $r34 = <java.lang.System: java.io.PrintStream err>;
        $r35 = virtualinvoke r30.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r33);
        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r35);
        $r36 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r36 == null goto label15;

        virtualinvoke r27.<sun.security.provider.PolicyParser$ParsingException: void printStackTrace()>();

     label15:
        if r4 == null goto label19;

     label16:
        virtualinvoke r4.<java.io.InputStreamReader: void close()>();
        z0 = 1;

     label17:
        goto label35;

     label18:
        $r37 := @caughtexception;
        r38 = $r37;
        goto label35;

     label19:
        z0 = 1;
        goto label35;

     label20:
        $r39 := @caughtexception;

     label21:
        r40 = $r39;
        $r41 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r41 == null goto label22;

        $r42 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r43 = new java.lang.StringBuilder;
        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error parsing ");
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r42.<sun.security.util.Debug: void println(java.lang.String)>($r46);
        $r47 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r48 = virtualinvoke r40.<java.lang.Exception: java.lang.String toString()>();
        virtualinvoke $r47.<sun.security.util.Debug: void println(java.lang.String)>($r48);
        virtualinvoke r40.<java.lang.Exception: void printStackTrace()>();

     label22:
        if r4 == null goto label26;

     label23:
        virtualinvoke r4.<java.io.InputStreamReader: void close()>();
        z0 = 1;

     label24:
        goto label35;

     label25:
        $r49 := @caughtexception;
        r50 = $r49;
        goto label35;

     label26:
        z0 = 1;
        goto label35;

     label27:
        $r51 := @caughtexception;

     label28:
        r9 = $r51;

     label29:
        if r4 == null goto label33;

     label30:
        virtualinvoke r4.<java.io.InputStreamReader: void close()>();
        z4 = 1;

     label31:
        goto label34;

     label32:
        $r52 := @caughtexception;
        r10 = $r52;
        goto label34;

     label33:
        z5 = 1;

     label34:
        throw r9;

     label35:
        return z0;

        catch java.lang.Exception from label3 to label4 with label5;
        catch java.io.IOException from label9 to label10 with label11;
        catch sun.security.provider.PolicyParser$ParsingException from label0 to label8 with label13;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Exception from label0 to label8 with label20;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.lang.Throwable from label0 to label8 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label21 to label22 with label27;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    private void initStaticPolicy(sun.security.provider.PolicyFile$PolicyInfo)
    {
        sun.security.provider.PolicyFile r0;
        sun.security.provider.PolicyFile$PolicyInfo r1;
        sun.security.provider.PolicyFile$4 $r2;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: sun.security.provider.PolicyFile$PolicyInfo;
        $r2 = new sun.security.provider.PolicyFile$4;
        specialinvoke $r2.<sun.security.provider.PolicyFile$4: void <init>(sun.security.provider.PolicyFile,sun.security.provider.PolicyFile$PolicyInfo)>(r0, r1);
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);
        return;
    }

    private java.security.CodeSource getCodeSource(sun.security.provider.PolicyParser$GrantEntry, java.security.KeyStore, sun.security.provider.PolicyFile$PolicyInfo) throws java.net.MalformedURLException
    {
        sun.security.provider.PolicyFile r0;
        sun.security.provider.PolicyParser$GrantEntry r1;
        java.security.KeyStore r2;
        sun.security.provider.PolicyFile$PolicyInfo r3;
        java.security.cert.Certificate[] r4;
        java.net.URL r5, $r17;
        java.lang.String $r6, $r7, $r12, $r15, $r16, $r18;
        sun.security.util.Debug $r8, $r9;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;
        java.security.CodeSource $r19, $r20;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: sun.security.provider.PolicyParser$GrantEntry;
        r2 := @parameter1: java.security.KeyStore;
        r3 := @parameter2: sun.security.provider.PolicyFile$PolicyInfo;
        r4 = null;
        $r6 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String signedBy>;
        if $r6 == null goto label1;

        $r7 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String signedBy>;
        r4 = specialinvoke r0.<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>(r2, $r7, r3);
        if r4 != null goto label1;

        $r8 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r8 == null goto label0;

        $r9 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  -- No certs for alias \'");
        $r12 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String signedBy>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' - ignoring entry");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r9.<sun.security.util.Debug: void println(java.lang.String)>($r15);

     label0:
        return null;

     label1:
        $r16 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase>;
        if $r16 == null goto label2;

        $r17 = new java.net.URL;
        $r18 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase>;
        specialinvoke $r17.<java.net.URL: void <init>(java.lang.String)>($r18);
        r5 = $r17;
        goto label3;

     label2:
        r5 = null;

     label3:
        $r19 = new java.security.CodeSource;
        specialinvoke $r19.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>(r5, r4);
        $r20 = specialinvoke r0.<sun.security.provider.PolicyFile: java.security.CodeSource canonicalizeCodebase(java.security.CodeSource,boolean)>($r19, 0);
        return $r20;
    }

    private void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry, java.security.KeyStore, sun.security.provider.PolicyFile$PolicyInfo)
    {
        sun.security.provider.PolicyFile r0;
        sun.security.provider.PolicyParser$GrantEntry r1;
        java.security.KeyStore r2;
        sun.security.provider.PolicyFile$PolicyInfo r3;
        sun.security.util.Debug $r4, $r12, $r13, $r19, $r29, $r61, $r62, $r77, $r78, $r117, $r118;
        java.util.ListIterator r5;
        sun.security.provider.PolicyParser$PrincipalEntry r6;
        java.util.Enumeration r7;
        sun.security.provider.PolicyParser$PermissionEntry r8;
        java.security.cert.Certificate[] r9, r71;
        java.security.Permission r10;
        java.security.UnresolvedPermission r11, $r73;
        java.lang.StringBuilder $r14, $r15, $r17, $r20, $r21, $r23, $r30, $r31, $r33, $r43, $r47, $r48, $r63, $r64, $r65, $r79, $r80, $r81;
        java.lang.String $r16, $r18, $r22, $r24, $r32, $r34, $r41, $r42, $r44, $r45, $r46, $r49, $r50, $r51, $r52, $r53, $r55, $r56, $r57, $r58, $r59, $r60, $r66, $r69, $r70, $r72, $r74, $r75, $r76, $r82, $r86, $r89, $r91, $r94, $r98, $r101, $r102, $r105, $r110, $r113, $r116;
        java.util.LinkedList $r25, $r26, $r27, $r36, $r38;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r28, $r40;
        java.security.CodeSource r35;
        sun.security.provider.PolicyFile$PolicyEntry $r37, r39;
        sun.security.provider.PolicyFile$SelfPermission $r54;
        java.lang.ClassNotFoundException $r67, r68;
        java.lang.reflect.InvocationTargetException $r83, r84;
        java.text.MessageFormat $r85, r87, $r97, r99, $r109, r111;
        java.lang.Object[] $r88, r92, $r100, r103, $r112, r114;
        java.lang.Throwable $r90;
        java.io.PrintStream $r93, $r104, $r115;
        java.lang.Exception $r95, r96, $r107, r108;
        java.util.List $r106;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: sun.security.provider.PolicyParser$GrantEntry;
        r2 := @parameter1: java.security.KeyStore;
        r3 := @parameter2: sun.security.provider.PolicyFile$PolicyInfo;
        $r4 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r4 == null goto label1;

        $r12 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        virtualinvoke $r12.<sun.security.util.Debug: void println(java.lang.String)>("Adding policy entry: ");
        $r13 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  signedBy ");
        $r16 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String signedBy>;
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r13.<sun.security.util.Debug: void println(java.lang.String)>($r18);
        $r19 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  codeBase ");
        $r22 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.lang.String codeBase>;
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r19.<sun.security.util.Debug: void println(java.lang.String)>($r24);
        $r25 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.util.LinkedList principals>;
        if $r25 == null goto label1;

        $r26 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.util.LinkedList principals>;
        $i0 = virtualinvoke $r26.<java.util.LinkedList: int size()>();
        if $i0 <= 0 goto label1;

        $r27 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.util.LinkedList principals>;
        r5 = virtualinvoke $r27.<java.util.LinkedList: java.util.ListIterator listIterator()>();

     label0:
        $z0 = interfaceinvoke r5.<java.util.ListIterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r28 = interfaceinvoke r5.<java.util.ListIterator: java.lang.Object next()>();
        r6 = (sun.security.provider.PolicyParser$PrincipalEntry) $r28;
        $r29 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");
        $r32 = virtualinvoke r6.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String toString()>();
        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r29.<sun.security.util.Debug: void println(java.lang.String)>($r34);
        goto label0;

     label1:
        r35 = specialinvoke r0.<sun.security.provider.PolicyFile: java.security.CodeSource getCodeSource(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>(r1, r2, r3);
        if r35 != null goto label3;

     label2:
        return;

     label3:
        $r36 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.util.LinkedList principals>;
        $z1 = specialinvoke r0.<sun.security.provider.PolicyFile: boolean replacePrincipals(java.util.List,java.security.KeyStore)>($r36, r2);
        if $z1 != 0 goto label5;

     label4:
        return;

     label5:
        $r37 = new sun.security.provider.PolicyFile$PolicyEntry;
        $r38 = r1.<sun.security.provider.PolicyParser$GrantEntry: java.util.LinkedList principals>;
        specialinvoke $r37.<sun.security.provider.PolicyFile$PolicyEntry: void <init>(java.security.CodeSource,java.util.List)>(r35, $r38);
        r39 = $r37;
        r7 = virtualinvoke r1.<sun.security.provider.PolicyParser$GrantEntry: java.util.Enumeration permissionElements()>();

     label6:
        $z2 = interfaceinvoke r7.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z2 == 0 goto label22;

        $r40 = interfaceinvoke r7.<java.util.Enumeration: java.lang.Object nextElement()>();
        r8 = (sun.security.provider.PolicyParser$PermissionEntry) $r40;

     label7:
        specialinvoke r0.<sun.security.provider.PolicyFile: void expandPermissionName(sun.security.provider.PolicyParser$PermissionEntry,java.security.KeyStore)>(r8, r2);
        $r41 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String permission>;
        $z3 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>("javax.security.auth.PrivateCredentialPermission");
        if $z3 == 0 goto label8;

        $r42 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $z4 = virtualinvoke $r42.<java.lang.String: boolean endsWith(java.lang.String)>(" self");
        if $z4 == 0 goto label8;

        $r43 = new java.lang.StringBuilder;
        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
        $r44 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $r45 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $i1 = virtualinvoke $r45.<java.lang.String: int indexOf(java.lang.String)>("self");
        $r46 = virtualinvoke $r44.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);
        $r47 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("${{self}}");
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();
        r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name> = $r49;

     label8:
        $r50 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        if $r50 == null goto label11;

        $r51 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $i2 = virtualinvoke $r51.<java.lang.String: int indexOf(java.lang.String)>("${{self}}");
        if $i2 == -1 goto label11;

        $r52 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String signedBy>;
        if $r52 == null goto label9;

        $r53 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String signedBy>;
        r9 = specialinvoke r0.<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>(r2, $r53, r3);
        goto label10;

     label9:
        r9 = null;

     label10:
        $r54 = new sun.security.provider.PolicyFile$SelfPermission;
        $r55 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String permission>;
        $r56 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $r57 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String action>;
        specialinvoke $r54.<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>($r55, $r56, $r57, r9);
        r10 = $r54;
        goto label12;

     label11:
        $r58 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String permission>;
        $r59 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $r60 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String action>;
        r10 = staticinvoke <sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>($r58, $r59, $r60);

     label12:
        virtualinvoke r39.<sun.security.provider.PolicyFile$PolicyEntry: void add(java.security.Permission)>(r10);
        $r61 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r61 == null goto label13;

        $r62 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r63 = new java.lang.StringBuilder;
        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r62.<sun.security.util.Debug: void println(java.lang.String)>($r66);

     label13:
        goto label21;

     label14:
        $r67 := @caughtexception;
        r68 = $r67;
        $r69 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String signedBy>;
        if $r69 == null goto label15;

        $r70 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String signedBy>;
        r71 = specialinvoke r0.<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>(r2, $r70, r3);
        goto label16;

     label15:
        r71 = null;

     label16:
        if r71 != null goto label17;

        $r72 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String signedBy>;
        if $r72 != null goto label18;

     label17:
        $r73 = new java.security.UnresolvedPermission;
        $r74 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String permission>;
        $r75 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $r76 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String action>;
        specialinvoke $r73.<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>($r74, $r75, $r76, r71);
        r11 = $r73;
        virtualinvoke r39.<sun.security.provider.PolicyFile$PolicyEntry: void add(java.security.Permission)>(r11);
        $r77 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r77 == null goto label18;

        $r78 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r79 = new java.lang.StringBuilder;
        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r78.<sun.security.util.Debug: void println(java.lang.String)>($r82);

     label18:
        goto label21;

     label19:
        $r83 := @caughtexception;
        r84 = $r83;
        $r85 = new java.text.MessageFormat;
        $r86 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("java.security.policy.error.adding.Permission.perm.message");
        specialinvoke $r85.<java.text.MessageFormat: void <init>(java.lang.String)>($r86);
        r87 = $r85;
        $r88 = newarray (java.lang.Object)[2];
        $r89 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String permission>;
        $r88[0] = $r89;
        $r90 = virtualinvoke r84.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();
        $r91 = virtualinvoke $r90.<java.lang.Throwable: java.lang.String toString()>();
        $r88[1] = $r91;
        r92 = $r88;
        $r93 = <java.lang.System: java.io.PrintStream err>;
        $r94 = virtualinvoke r87.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r92);
        virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>($r94);
        goto label21;

     label20:
        $r95 := @caughtexception;
        r96 = $r95;
        $r97 = new java.text.MessageFormat;
        $r98 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("java.security.policy.error.adding.Permission.perm.message");
        specialinvoke $r97.<java.text.MessageFormat: void <init>(java.lang.String)>($r98);
        r99 = $r97;
        $r100 = newarray (java.lang.Object)[2];
        $r101 = r8.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String permission>;
        $r100[0] = $r101;
        $r102 = virtualinvoke r96.<java.lang.Exception: java.lang.String toString()>();
        $r100[1] = $r102;
        r103 = $r100;
        $r104 = <java.lang.System: java.io.PrintStream err>;
        $r105 = virtualinvoke r99.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r103);
        virtualinvoke $r104.<java.io.PrintStream: void println(java.lang.String)>($r105);

     label21:
        goto label6;

     label22:
        $r106 = r3.<sun.security.provider.PolicyFile$PolicyInfo: java.util.List policyEntries>;
        interfaceinvoke $r106.<java.util.List: boolean add(java.lang.Object)>(r39);

     label23:
        goto label25;

     label24:
        $r107 := @caughtexception;
        r108 = $r107;
        $r109 = new java.text.MessageFormat;
        $r110 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("java.security.policy.error.adding.Entry.message");
        specialinvoke $r109.<java.text.MessageFormat: void <init>(java.lang.String)>($r110);
        r111 = $r109;
        $r112 = newarray (java.lang.Object)[1];
        $r113 = virtualinvoke r108.<java.lang.Exception: java.lang.String toString()>();
        $r112[0] = $r113;
        r114 = $r112;
        $r115 = <java.lang.System: java.io.PrintStream err>;
        $r116 = virtualinvoke r111.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r114);
        virtualinvoke $r115.<java.io.PrintStream: void println(java.lang.String)>($r116);

     label25:
        $r117 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r117 == null goto label26;

        $r118 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        virtualinvoke $r118.<sun.security.util.Debug: void println()>();

     label26:
        return;

        catch java.lang.ClassNotFoundException from label7 to label13 with label14;
        catch java.lang.reflect.InvocationTargetException from label7 to label13 with label19;
        catch java.lang.Exception from label7 to label13 with label20;
        catch java.lang.Exception from label1 to label2 with label24;
        catch java.lang.Exception from label3 to label4 with label24;
        catch java.lang.Exception from label5 to label23 with label24;
    }

    private static final java.security.Permission getInstance(java.lang.String, java.lang.String, java.lang.String) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException
    {
        java.lang.String r0, r1, r2;
        java.lang.Class r3;
        java.security.Permission r4, $r11, $r17, $r23, $r28, $r35, $r40;
        java.lang.reflect.Constructor r5, r6, r7, r25, r32, r37;
        java.lang.Class[] $r8, $r14, $r20, $r24, $r31, $r36;
        java.lang.Object[] $r9, $r15, $r21, $r26, $r33, $r38;
        java.lang.Object $r10, $r16, $r22, $r27, $r34, $r39;
        java.lang.NoSuchMethodException $r12, r13, $r18, r19, $r29, r30;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);
        r4 = staticinvoke <sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>(r3, r1, r2);
        if r4 == null goto label0;

        return r4;

     label0:
        if r1 != null goto label7;

        if r2 != null goto label7;

     label1:
        $r8 = <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS0>;
        r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r8);
        $r9 = newarray (java.lang.Object)[0];
        $r10 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r9);
        $r11 = (java.security.Permission) $r10;

     label2:
        return $r11;

     label3:
        $r12 := @caughtexception;
        r13 = $r12;

     label4:
        $r14 = <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS1>;
        r6 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r14);
        $r15 = newarray (java.lang.Object)[1];
        $r15[0] = r1;
        $r16 = virtualinvoke r6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r15);
        $r17 = (java.security.Permission) $r16;

     label5:
        return $r17;

     label6:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS2>;
        r7 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r20);
        $r21 = newarray (java.lang.Object)[2];
        $r21[0] = r1;
        $r21[1] = r2;
        $r22 = virtualinvoke r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r21);
        $r23 = (java.security.Permission) $r22;
        return $r23;

     label7:
        if r1 == null goto label11;

        if r2 != null goto label11;

     label8:
        $r24 = <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS1>;
        r25 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r24);
        $r26 = newarray (java.lang.Object)[1];
        $r26[0] = r1;
        $r27 = virtualinvoke r25.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r26);
        $r28 = (java.security.Permission) $r27;

     label9:
        return $r28;

     label10:
        $r29 := @caughtexception;
        r30 = $r29;
        $r31 = <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS2>;
        r32 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r31);
        $r33 = newarray (java.lang.Object)[2];
        $r33[0] = r1;
        $r33[1] = r2;
        $r34 = virtualinvoke r32.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r33);
        $r35 = (java.security.Permission) $r34;
        return $r35;

     label11:
        $r36 = <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS2>;
        r37 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r36);
        $r38 = newarray (java.lang.Object)[2];
        $r38[0] = r1;
        $r38[1] = r2;
        $r39 = virtualinvoke r37.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r38);
        $r40 = (java.security.Permission) $r39;
        return $r40;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label4 to label5 with label6;
        catch java.lang.NoSuchMethodException from label8 to label9 with label10;
    }

    private static final java.security.Permission getKnownInstance(java.lang.Class, java.lang.String, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.FilePermission $r3;
        java.net.SocketPermission $r4;
        java.lang.RuntimePermission $r5;
        java.util.PropertyPermission $r6;
        java.net.NetPermission $r7;
        java.security.AllPermission $r8;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/io/FilePermission");
        if $z0 == 0 goto label0;

        $r3 = new java.io.FilePermission;
        specialinvoke $r3.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return $r3;

     label0:
        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/net/SocketPermission");
        if $z1 == 0 goto label1;

        $r4 = new java.net.SocketPermission;
        specialinvoke $r4.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return $r4;

     label1:
        $z2 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/RuntimePermission");
        if $z2 == 0 goto label2;

        $r5 = new java.lang.RuntimePermission;
        specialinvoke $r5.<java.lang.RuntimePermission: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return $r5;

     label2:
        $z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/PropertyPermission");
        if $z3 == 0 goto label3;

        $r6 = new java.util.PropertyPermission;
        specialinvoke $r6.<java.util.PropertyPermission: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return $r6;

     label3:
        $z4 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/net/NetPermission");
        if $z4 == 0 goto label4;

        $r7 = new java.net.NetPermission;
        specialinvoke $r7.<java.net.NetPermission: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return $r7;

     label4:
        $z5 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/security/AllPermission");
        if $z5 == 0 goto label5;

        $r8 = <sun.security.util.SecurityConstants: java.security.AllPermission ALL_PERMISSION>;
        return $r8;

     label5:
        return null;
    }

    private java.security.cert.Certificate[] getCertificates(java.security.KeyStore, java.lang.String, sun.security.provider.PolicyFile$PolicyInfo)
    {
        sun.security.provider.PolicyFile r0;
        java.security.KeyStore r1;
        java.lang.String r2, r6, $r11;
        sun.security.provider.PolicyFile$PolicyInfo r3;
        java.util.ArrayList r4, $r22;
        java.util.StringTokenizer r5, $r10;
        int i0, $i1, $i2;
        null_type n0;
        java.util.Map r7, $r12, $r13, $r17, $r19;
        java.security.KeyStoreException r8, $r16;
        java.lang.Throwable r9, $r21;
        boolean $z0;
        java.lang.Object $r14;
        java.security.cert.Certificate r15;
        java.security.cert.Certificate[] r23;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.KeyStore;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: sun.security.provider.PolicyFile$PolicyInfo;
        r4 = null;
        $r10 = new java.util.StringTokenizer;
        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, ",");
        r5 = $r10;
        i0 = 0;

     label0:
        $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label14;

        $r11 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r6 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();
        i0 = i0 + 1;
        n0 = null;
        $r12 = r3.<sun.security.provider.PolicyFile$PolicyInfo: java.util.Map aliasMapping>;
        r7 = $r12;
        entermonitor $r12;

     label1:
        $r13 = r3.<sun.security.provider.PolicyFile$PolicyInfo: java.util.Map aliasMapping>;
        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);
        r15 = (java.security.cert.Certificate) $r14;
        if r15 != null goto label6;

        if r1 == null goto label6;

     label2:
        r15 = virtualinvoke r1.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r6);

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;
        r8 = $r16;

     label5:
        if r15 == null goto label6;

        $r17 = r3.<sun.security.provider.PolicyFile$PolicyInfo: java.util.Map aliasMapping>;
        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r15);
        $r19 = r3.<sun.security.provider.PolicyFile$PolicyInfo: java.util.Map aliasMapping>;
        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r6);

     label6:
        exitmonitor r7;

     label7:
        goto label11;

     label8:
        $r21 := @caughtexception;

     label9:
        r9 = $r21;
        exitmonitor r7;

     label10:
        throw r9;

     label11:
        if r15 == null goto label13;

        if r4 != null goto label12;

        $r22 = new java.util.ArrayList;
        specialinvoke $r22.<java.util.ArrayList: void <init>()>();
        r4 = $r22;

     label12:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r15);

     label13:
        goto label0;

     label14:
        if r4 == null goto label15;

        $i1 = interfaceinvoke r4.<java.util.List: int size()>();
        if i0 != $i1 goto label15;

        $i2 = interfaceinvoke r4.<java.util.List: int size()>();
        r23 = newarray (java.security.cert.Certificate)[$i2];
        interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r23);
        return r23;

     label15:
        return null;

        catch java.security.KeyStoreException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
    }

    public void refresh()
    {
        sun.security.provider.PolicyFile r0;
        java.net.URL $r1;

        r0 := @this: sun.security.provider.PolicyFile;
        $r1 = r0.<sun.security.provider.PolicyFile: java.net.URL url>;
        specialinvoke r0.<sun.security.provider.PolicyFile: void init(java.net.URL)>($r1);
        return;
    }

    public boolean implies(java.security.ProtectionDomain, java.security.Permission)
    {
        sun.security.provider.PolicyFile r0;
        java.security.ProtectionDomain r1;
        java.security.Permission r2;
        sun.security.provider.PolicyFile$PolicyInfo r3;
        sun.misc.JavaSecurityProtectionDomainAccess$ProtectionDomainCache r4;
        java.security.PermissionCollection r5, r8;
        java.util.concurrent.atomic.AtomicReference $r6;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.ProtectionDomain;
        r2 := @parameter1: java.security.Permission;
        $r6 = r0.<sun.security.provider.PolicyFile: java.util.concurrent.atomic.AtomicReference policyInfo>;
        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
        r3 = (sun.security.provider.PolicyFile$PolicyInfo) $r7;
        r4 = virtualinvoke r3.<sun.security.provider.PolicyFile$PolicyInfo: sun.misc.JavaSecurityProtectionDomainAccess$ProtectionDomainCache getPdMapping()>();
        r5 = interfaceinvoke r4.<sun.misc.JavaSecurityProtectionDomainAccess$ProtectionDomainCache: java.security.PermissionCollection get(java.security.ProtectionDomain)>(r1);
        if r5 == null goto label0;

        $z0 = virtualinvoke r5.<java.security.PermissionCollection: boolean implies(java.security.Permission)>(r2);
        return $z0;

     label0:
        r8 = virtualinvoke r0.<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>(r1);
        if r8 != null goto label1;

        return 0;

     label1:
        interfaceinvoke r4.<sun.misc.JavaSecurityProtectionDomainAccess$ProtectionDomainCache: void put(java.security.ProtectionDomain,java.security.PermissionCollection)>(r1, r8);
        $z1 = virtualinvoke r8.<java.security.PermissionCollection: boolean implies(java.security.Permission)>(r2);
        return $z1;
    }

    public java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)
    {
        sun.security.provider.PolicyFile r0;
        java.security.ProtectionDomain r1;
        java.security.Permissions $r2, r3;
        java.security.PermissionCollection r4, r5;
        java.util.Enumeration r6;
        java.lang.Throwable r7, $r12;
        boolean $z0;
        java.lang.Object $r10;
        java.security.Permission $r11;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.ProtectionDomain;
        $r2 = new java.security.Permissions;
        specialinvoke $r2.<java.security.Permissions: void <init>()>();
        r3 = $r2;
        if r1 != null goto label0;

        return r3;

     label0:
        specialinvoke r0.<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.Permissions,java.security.ProtectionDomain)>(r3, r1);
        r4 = virtualinvoke r1.<java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()>();
        if r4 == null goto label8;

        r5 = r4;
        entermonitor r4;

     label1:
        r6 = virtualinvoke r4.<java.security.PermissionCollection: java.util.Enumeration elements()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r6.<java.util.Enumeration: java.lang.Object nextElement()>();
        $r11 = (java.security.Permission) $r10;
        virtualinvoke r3.<java.security.Permissions: void add(java.security.Permission)>($r11);
        goto label2;

     label3:
        exitmonitor r5;

     label4:
        goto label8;

     label5:
        $r12 := @caughtexception;

     label6:
        r7 = $r12;
        exitmonitor r5;

     label7:
        throw r7;

     label8:
        return r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.security.PermissionCollection getPermissions(java.security.CodeSource)
    {
        sun.security.provider.PolicyFile r0;
        java.security.CodeSource r1;
        java.security.Permissions $r2;
        java.security.PermissionCollection $r3;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.CodeSource;
        $r2 = new java.security.Permissions;
        specialinvoke $r2.<java.security.Permissions: void <init>()>();
        $r3 = specialinvoke r0.<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.Permissions,java.security.CodeSource)>($r2, r1);
        return $r3;
    }

    private java.security.PermissionCollection getPermissions(java.security.Permissions, java.security.ProtectionDomain)
    {
        sun.security.provider.PolicyFile r0;
        java.security.Permissions r1, $r15;
        java.security.ProtectionDomain r2;
        sun.security.util.Debug $r3, $r7;
        java.lang.StringBuilder $r4, $r8, $r10;
        java.security.CodeSource r5, r6;
        java.lang.String $r9, $r11;
        sun.security.provider.PolicyFile$5 $r12;
        java.lang.Object $r13;
        java.security.Principal[] $r14;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.Permissions;
        r2 := @parameter1: java.security.ProtectionDomain;
        $r3 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r3 == null goto label0;

        $r7 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getPermissions:\n\t");
        $r9 = specialinvoke r0.<sun.security.provider.PolicyFile: java.lang.String printPD(java.security.ProtectionDomain)>(r2);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<sun.security.util.Debug: void println(java.lang.String)>($r11);

     label0:
        r5 = virtualinvoke r2.<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>();
        if r5 != null goto label1;

        return r1;

     label1:
        $r12 = new sun.security.provider.PolicyFile$5;
        specialinvoke $r12.<sun.security.provider.PolicyFile$5: void <init>(sun.security.provider.PolicyFile,java.security.CodeSource)>(r0, r5);
        $r13 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r12);
        r6 = (java.security.CodeSource) $r13;
        $r14 = virtualinvoke r2.<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>();
        $r15 = specialinvoke r0.<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>(r1, r6, $r14);
        return $r15;
    }

    private java.security.PermissionCollection getPermissions(java.security.Permissions, java.security.CodeSource)
    {
        sun.security.provider.PolicyFile r0;
        java.security.Permissions r1, $r6;
        java.security.CodeSource r2, r4;
        sun.security.provider.PolicyFile$6 $r3;
        java.lang.Object $r5;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.Permissions;
        r2 := @parameter1: java.security.CodeSource;
        $r3 = new sun.security.provider.PolicyFile$6;
        specialinvoke $r3.<sun.security.provider.PolicyFile$6: void <init>(sun.security.provider.PolicyFile,java.security.CodeSource)>(r0, r2);
        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);
        r4 = (java.security.CodeSource) $r5;
        $r6 = specialinvoke r0.<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>(r1, r4, null);
        return $r6;
    }

    private java.security.Permissions getPermissions(java.security.Permissions, java.security.CodeSource, java.security.Principal[])
    {
        sun.security.provider.PolicyFile r0;
        java.security.Permissions r1;
        java.security.CodeSource r2;
        java.security.Principal[] r3;
        sun.security.provider.PolicyFile$PolicyInfo r4;
        java.util.Iterator r5, r16;
        sun.security.provider.PolicyFile$PolicyEntry r6, r7;
        java.lang.Throwable r8, $r18;
        java.util.concurrent.atomic.AtomicReference $r9;
        java.lang.Object $r10, $r12, $r17, r22;
        java.util.List $r11, $r13, r14, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.security.cert.Certificate[] r19;
        int i0, $i1;
        java.util.Map $r20;
        java.security.cert.Certificate $r21, $r23;
        java.security.AllPermission $r24;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.Permissions;
        r2 := @parameter1: java.security.CodeSource;
        r3 := @parameter2: java.security.Principal[];
        $r9 = r0.<sun.security.provider.PolicyFile: java.util.concurrent.atomic.AtomicReference policyInfo>;
        $r10 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
        r4 = (sun.security.provider.PolicyFile$PolicyInfo) $r10;
        $r11 = r4.<sun.security.provider.PolicyFile$PolicyInfo: java.util.List policyEntries>;
        r5 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (sun.security.provider.PolicyFile$PolicyEntry) $r12;
        specialinvoke r0.<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>(r1, r2, r3, r6);
        goto label0;

     label1:
        $r13 = r4.<sun.security.provider.PolicyFile$PolicyInfo: java.util.List identityPolicyEntries>;
        r14 = $r13;
        entermonitor $r13;

     label2:
        $r15 = r4.<sun.security.provider.PolicyFile$PolicyInfo: java.util.List identityPolicyEntries>;
        r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label4;

        $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();
        r7 = (sun.security.provider.PolicyFile$PolicyEntry) $r17;
        specialinvoke r0.<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>(r1, r2, r3, r7);
        goto label3;

     label4:
        exitmonitor r14;

     label5:
        goto label9;

     label6:
        $r18 := @caughtexception;

     label7:
        r8 = $r18;
        exitmonitor r14;

     label8:
        throw r8;

     label9:
        $z2 = r0.<sun.security.provider.PolicyFile: boolean ignoreIdentityScope>;
        if $z2 != 0 goto label12;

        r19 = virtualinvoke r2.<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>();
        if r19 == null goto label12;

        i0 = 0;

     label10:
        $i1 = lengthof r19;
        if i0 >= $i1 goto label12;

        $r20 = r4.<sun.security.provider.PolicyFile$PolicyInfo: java.util.Map aliasMapping>;
        $r21 = r19[i0];
        r22 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21);
        if r22 != null goto label11;

        $r23 = r19[i0];
        $z3 = specialinvoke r0.<sun.security.provider.PolicyFile: boolean checkForTrustedIdentity(java.security.cert.Certificate,sun.security.provider.PolicyFile$PolicyInfo)>($r23, r4);
        if $z3 == 0 goto label11;

        $r24 = <sun.security.util.SecurityConstants: java.security.AllPermission ALL_PERMISSION>;
        virtualinvoke r1.<java.security.Permissions: void add(java.security.Permission)>($r24);

     label11:
        i0 = i0 + 1;
        goto label10;

     label12:
        return r1;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void addPermissions(java.security.Permissions, java.security.CodeSource, java.security.Principal[], sun.security.provider.PolicyFile$PolicyEntry)
    {
        sun.security.provider.PolicyFile r0;
        java.security.Permissions r1;
        java.security.CodeSource r2, $r16;
        java.security.Principal[] r3;
        sun.security.provider.PolicyFile$PolicyEntry r4;
        sun.security.util.Debug $r5, $r14, $r24, $r25, $r26, $r34, $r42, $r43, $r44, $r45, $r52, $r53, $r58, $r59, $r72, $r73, $r76, $r77, $r78, $r79, $r80;
        java.lang.StringBuilder $r6, $r15, $r17, $r18, $r19, $r20, $r35, $r36, $r37, $r38, $r39, $r40, $r60, $r61, $r64;
        java.lang.Boolean r7;
        java.util.List r8;
        java.util.ArrayList r9, $r27;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, $i8;
        java.lang.Class r10, $r30, $r51, $r62;
        java.lang.reflect.Constructor r11;
        com.sun.security.auth.PrincipalComparator r12;
        java.util.HashSet r13, $r66;
        java.lang.String $r21, $r31, $r33, $r41, $r48, $r56, $r63, $r65;
        sun.security.provider.PolicyFile$7 $r22;
        java.lang.Object $r23, $r46, $r57;
        boolean $z0, $z2, $z3, $z5, $z6;
        sun.security.provider.PolicyParser$PrincipalEntry $r28, r47;
        java.security.Principal $r29, $r32, $r67;
        java.lang.Thread $r49;
        java.lang.ClassLoader $r50;
        java.lang.Class[] $r54;
        java.lang.Object[] $r55;
        javax.security.auth.Subject $r68, r71;
        java.util.Set $r69, $r70;
        java.lang.Exception $r74, r75;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.Permissions;
        r2 := @parameter1: java.security.CodeSource;
        r3 := @parameter2: java.security.Principal[];
        r4 := @parameter3: sun.security.provider.PolicyFile$PolicyEntry;
        $r5 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r5 == null goto label0;

        $r14 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("evaluate codesources:\n\tPolicy CodeSource: ");
        $r16 = virtualinvoke r4.<sun.security.provider.PolicyFile$PolicyEntry: java.security.CodeSource getCodeSource()>();
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tActive CodeSource: ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r14.<sun.security.util.Debug: void println(java.lang.String)>($r21);

     label0:
        $r22 = new sun.security.provider.PolicyFile$7;
        specialinvoke $r22.<sun.security.provider.PolicyFile$7: void <init>(sun.security.provider.PolicyFile,sun.security.provider.PolicyFile$PolicyEntry,java.security.CodeSource)>(r0, r4, r2);
        $r23 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r22);
        r7 = (java.lang.Boolean) $r23;
        $z0 = virtualinvoke r7.<java.lang.Boolean: boolean booleanValue()>();
        if $z0 != 0 goto label2;

        $r24 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r24 == null goto label1;

        $r25 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        virtualinvoke $r25.<sun.security.util.Debug: void println(java.lang.String)>("evaluation (codesource) failed");

     label1:
        return;

     label2:
        r8 = virtualinvoke r4.<sun.security.provider.PolicyFile$PolicyEntry: java.util.List getPrincipals()>();
        $r26 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r26 == null goto label5;

        $r27 = new java.util.ArrayList;
        specialinvoke $r27.<java.util.ArrayList: void <init>()>();
        r9 = $r27;
        if r3 == null goto label4;

        i0 = 0;

     label3:
        $i2 = lengthof r3;
        if i0 >= $i2 goto label4;

        $r28 = new sun.security.provider.PolicyParser$PrincipalEntry;
        $r29 = r3[i0];
        $r30 = virtualinvoke $r29.<java.lang.Object: java.lang.Class getClass()>();
        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();
        $r32 = r3[i0];
        $r33 = interfaceinvoke $r32.<java.security.Principal: java.lang.String getName()>();
        specialinvoke $r28.<sun.security.provider.PolicyParser$PrincipalEntry: void <init>(java.lang.String,java.lang.String)>($r31, $r33);
        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);
        i0 = i0 + 1;
        goto label3;

     label4:
        $r34 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r35 = new java.lang.StringBuilder;
        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("evaluate principals:\n\tPolicy Principals: ");
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tActive Principals: ");
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r34.<sun.security.util.Debug: void println(java.lang.String)>($r41);

     label5:
        if r8 == null goto label6;

        $i3 = interfaceinvoke r8.<java.util.List: int size()>();
        if $i3 != 0 goto label8;

     label6:
        specialinvoke r0.<sun.security.provider.PolicyFile: void addPerms(java.security.Permissions,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>(r1, r3, r4);
        $r42 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r42 == null goto label7;

        $r43 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        virtualinvoke $r43.<sun.security.util.Debug: void println(java.lang.String)>("evaluation (codesource/principals) passed");

     label7:
        return;

     label8:
        if r3 == null goto label9;

        $i4 = lengthof r3;
        if $i4 != 0 goto label11;

     label9:
        $r44 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r44 == null goto label10;

        $r45 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        virtualinvoke $r45.<sun.security.util.Debug: void println(java.lang.String)>("evaluation (principals) failed");

     label10:
        return;

     label11:
        i5 = 0;

     label12:
        $i6 = interfaceinvoke r8.<java.util.List: int size()>();
        if i5 >= $i6 goto label25;

        $r46 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i5);
        r47 = (sun.security.provider.PolicyParser$PrincipalEntry) $r46;

     label13:
        $r48 = r47.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalClass>;
        $r49 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r50 = virtualinvoke $r49.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r48, 1, $r50);
        $r51 = class "com/sun/security/auth/PrincipalComparator";
        $z2 = virtualinvoke $r51.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r10);
        if $z2 != 0 goto label15;

        $z3 = specialinvoke r0.<sun.security.provider.PolicyFile: boolean checkEntryPs(java.security.Principal[],sun.security.provider.PolicyParser$PrincipalEntry)>(r3, r47);
        if $z3 != 0 goto label20;

        $r52 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r52 == null goto label14;

        $r53 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        virtualinvoke $r53.<sun.security.util.Debug: void println(java.lang.String)>("evaluation (principals) failed");

     label14:
        return;

     label15:
        $r54 = <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS1>;
        r11 = virtualinvoke r10.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r54);
        $r55 = newarray (java.lang.Object)[1];
        $r56 = r47.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalName>;
        $r55[0] = $r56;
        $r57 = virtualinvoke r11.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r55);
        r12 = (com.sun.security.auth.PrincipalComparator) $r57;
        $r58 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r58 == null goto label16;

        $r59 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r60 = new java.lang.StringBuilder;
        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found PrincipalComparator ");
        $r62 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();
        $r63 = virtualinvoke $r62.<java.lang.Class: java.lang.String getName()>();
        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r59.<sun.security.util.Debug: void println(java.lang.String)>($r65);

     label16:
        $r66 = new java.util.HashSet;
        $i7 = lengthof r3;
        specialinvoke $r66.<java.util.HashSet: void <init>(int)>($i7);
        r13 = $r66;
        i1 = 0;

     label17:
        $i8 = lengthof r3;
        if i1 >= $i8 goto label18;

        $r67 = r3[i1];
        interfaceinvoke r13.<java.util.Set: boolean add(java.lang.Object)>($r67);
        i1 = i1 + 1;
        goto label17;

     label18:
        $r68 = new javax.security.auth.Subject;
        $r69 = <java.util.Collections: java.util.Set EMPTY_SET>;
        $r70 = <java.util.Collections: java.util.Set EMPTY_SET>;
        specialinvoke $r68.<javax.security.auth.Subject: void <init>(boolean,java.util.Set,java.util.Set,java.util.Set)>(1, r13, $r69, $r70);
        r71 = $r68;
        $z5 = interfaceinvoke r12.<com.sun.security.auth.PrincipalComparator: boolean implies(javax.security.auth.Subject)>(r71);
        if $z5 != 0 goto label20;

        $r72 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r72 == null goto label19;

        $r73 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        virtualinvoke $r73.<sun.security.util.Debug: void println(java.lang.String)>("evaluation (principal comparator) failed");

     label19:
        return;

     label20:
        goto label24;

     label21:
        $r74 := @caughtexception;
        r75 = $r74;
        $r76 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r76 == null goto label22;

        virtualinvoke r75.<java.lang.Exception: void printStackTrace()>();

     label22:
        $z6 = specialinvoke r0.<sun.security.provider.PolicyFile: boolean checkEntryPs(java.security.Principal[],sun.security.provider.PolicyParser$PrincipalEntry)>(r3, r47);
        if $z6 != 0 goto label24;

        $r77 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r77 == null goto label23;

        $r78 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        virtualinvoke $r78.<sun.security.util.Debug: void println(java.lang.String)>("evaluation (principals) failed");

     label23:
        return;

     label24:
        i5 = i5 + 1;
        goto label12;

     label25:
        $r79 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r79 == null goto label26;

        $r80 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        virtualinvoke $r80.<sun.security.util.Debug: void println(java.lang.String)>("evaluation (codesource/principals) passed");

     label26:
        specialinvoke r0.<sun.security.provider.PolicyFile: void addPerms(java.security.Permissions,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>(r1, r3, r4);
        return;

        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label19 with label21;
    }

    private void addPerms(java.security.Permissions, java.security.Principal[], sun.security.provider.PolicyFile$PolicyEntry)
    {
        sun.security.provider.PolicyFile r0;
        java.security.Permissions r1;
        java.security.Principal[] r2;
        sun.security.provider.PolicyFile$PolicyEntry r3;
        int i0, $i1;
        java.security.Permission r4;
        java.util.List $r5, $r6, $r15;
        java.lang.Object $r7;
        sun.security.util.Debug $r8, $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;
        boolean $z0;
        sun.security.provider.PolicyFile$SelfPermission $r14;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.Permissions;
        r2 := @parameter1: java.security.Principal[];
        r3 := @parameter2: sun.security.provider.PolicyFile$PolicyEntry;
        i0 = 0;

     label0:
        $r5 = r3.<sun.security.provider.PolicyFile$PolicyEntry: java.util.List permissions>;
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        if i0 >= $i1 goto label4;

        $r6 = r3.<sun.security.provider.PolicyFile$PolicyEntry: java.util.List permissions>;
        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);
        r4 = (java.security.Permission) $r7;
        $r8 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r8 == null goto label1;

        $r9 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  granting ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r9.<sun.security.util.Debug: void println(java.lang.String)>($r13);

     label1:
        $z0 = r4 instanceof sun.security.provider.PolicyFile$SelfPermission;
        if $z0 == 0 goto label2;

        $r14 = (sun.security.provider.PolicyFile$SelfPermission) r4;
        $r15 = virtualinvoke r3.<sun.security.provider.PolicyFile$PolicyEntry: java.util.List getPrincipals()>();
        specialinvoke r0.<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>($r14, $r15, r2, r1);
        goto label3;

     label2:
        virtualinvoke r1.<java.security.Permissions: void add(java.security.Permission)>(r4);

     label3:
        i0 = i0 + 1;
        goto label0;

     label4:
        return;
    }

    private boolean checkEntryPs(java.security.Principal[], sun.security.provider.PolicyParser$PrincipalEntry)
    {
        sun.security.provider.PolicyFile r0;
        java.security.Principal[] r1;
        sun.security.provider.PolicyParser$PrincipalEntry r2;
        int i0, $i1;
        java.lang.String $r3, $r4, $r7, $r8, $r9, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.security.Principal $r5, $r10;
        java.lang.Class $r6;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.Principal[];
        r2 := @parameter1: sun.security.provider.PolicyParser$PrincipalEntry;
        i0 = 0;

     label0:
        $i1 = lengthof r1;
        if i0 >= $i1 goto label4;

        $r3 = r2.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalClass>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("WILDCARD_PRINCIPAL_CLASS");
        if $z0 != 0 goto label1;

        $r4 = r2.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalClass>;
        $r5 = r1[i0];
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();
        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);
        if $z1 == 0 goto label3;

     label1:
        $r8 = r2.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalName>;
        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("WILDCARD_PRINCIPAL_NAME");
        if $z2 != 0 goto label2;

        $r9 = r2.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalName>;
        $r10 = r1[i0];
        $r11 = interfaceinvoke $r10.<java.security.Principal: java.lang.String getName()>();
        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11);
        if $z3 == 0 goto label3;

     label2:
        return 1;

     label3:
        i0 = i0 + 1;
        goto label0;

     label4:
        return 0;
    }

    private void expandSelf(sun.security.provider.PolicyFile$SelfPermission, java.util.List, java.security.Principal[], java.security.Permissions)
    {
        sun.security.provider.PolicyFile r0;
        sun.security.provider.PolicyFile$SelfPermission r1;
        java.util.List r2;
        java.security.Principal[] r3;
        java.security.Permissions r4, r69;
        java.lang.StringBuilder $r5, r6, $r14, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r34, $r37, $r38, $r39, $r42, $r43, $r53, $r54, $r56, $r57, $r59, $r108, $r109, $r111;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.util.ListIterator r7;
        sun.security.provider.PolicyParser$PrincipalEntry r8;
        java.lang.String[][] r9;
        java.security.Permission r10, $r64, $r87, $r96, $r103;
        java.lang.Throwable r11, $r75;
        sun.security.util.Debug $r12, $r13, $r51, $r52, $r106, $r107, $r115, $r116;
        java.lang.String $r15, $r18, $r26, $r28, $r29, $r30, $r36, $r41, $r44, $r47, $r48, $r49, $r55, $r58, $r60, $r61, $r62, $r63, $r73, $r74, $r77, $r78, $r79, $r81, $r85, $r93, $r94, $r100, $r101, $r110, $r112, $r117;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r32, $r71, $r86, $r95, $r102;
        java.lang.String[] $r35, $r40;
        java.lang.ClassNotFoundException $r65, r66;
        java.lang.Class r67, $r72;
        java.util.Enumeration r70;
        java.security.UnresolvedPermission $r76;
        java.security.cert.Certificate[] $r80;
        java.lang.Class[] $r82, $r90, $r97;
        java.lang.reflect.Constructor r83, r91, r98;
        java.lang.Object[] $r84, $r92, $r99;
        java.lang.NoSuchMethodException $r88, r89;
        java.lang.Exception $r104, r105, $r113, r114;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: sun.security.provider.PolicyFile$SelfPermission;
        r2 := @parameter1: java.util.List;
        r3 := @parameter2: java.security.Principal[];
        r4 := @parameter3: java.security.Permissions;
        if r2 == null goto label0;

        $i3 = interfaceinvoke r2.<java.util.List: int size()>();
        if $i3 != 0 goto label2;

     label0:
        $r12 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r12 == null goto label1;

        $r13 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring permission ");
        $r15 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfType()>();
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with target name (");
        $r18 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfName()>();
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").  ");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Principal(s) specified ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in the grant clause.  ");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELF-based target names are ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("only valid in the context ");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("of a Principal-based grant entry.");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r13.<sun.security.util.Debug: void println(java.lang.String)>($r26);

     label1:
        return;

     label2:
        i0 = 0;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        r6 = $r27;

     label3:
        $r28 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfName()>();
        $i4 = virtualinvoke $r28.<java.lang.String: int indexOf(java.lang.String,int)>("${{self}}", i0);
        i1 = $i4;
        if $i4 == -1 goto label10;

        $r29 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfName()>();
        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        r7 = interfaceinvoke r2.<java.util.List: java.util.ListIterator listIterator()>();

     label4:
        $z0 = interfaceinvoke r7.<java.util.ListIterator: boolean hasNext()>();
        if $z0 == 0 goto label9;

        $r32 = interfaceinvoke r7.<java.util.ListIterator: java.lang.Object next()>();
        r8 = (sun.security.provider.PolicyParser$PrincipalEntry) $r32;
        r9 = specialinvoke r0.<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])>(r8, r3);
        i2 = 0;

     label5:
        $i5 = lengthof r9;
        if i2 >= $i5 goto label7;

        if i2 == 0 goto label6;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label6:
        $r34 = new java.lang.StringBuilder;
        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
        $r35 = r9[i2];
        $r36 = $r35[0];
        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r40 = r9[i2];
        $r41 = $r40[1];
        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
        i2 = i2 + 1;
        goto label5;

     label7:
        $z1 = interfaceinvoke r7.<java.util.ListIterator: boolean hasNext()>();
        if $z1 == 0 goto label8;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label8:
        goto label4;

     label9:
        $r47 = "${{self}}";
        $i6 = virtualinvoke $r47.<java.lang.String: int length()>();
        i0 = i1 + $i6;
        goto label3;

     label10:
        $r48 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfName()>();
        $r49 = virtualinvoke $r48.<java.lang.String: java.lang.String substring(int)>(i0);
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);
        $r51 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r51 == null goto label11;

        $r52 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r53 = new java.lang.StringBuilder;
        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  expanded:\n\t");
        $r55 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfName()>();
        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  into:\n\t");
        $r58 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r52.<sun.security.util.Debug: void println(java.lang.String)>($r60);

     label11:
        $r61 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfType()>();
        $r62 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r63 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfActions()>();
        $r64 = staticinvoke <sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>($r61, $r62, $r63);
        virtualinvoke r4.<java.security.Permissions: void add(java.security.Permission)>($r64);

     label12:
        goto label32;

     label13:
        $r65 := @caughtexception;
        r66 = $r65;
        r67 = null;
        r69 = r4;
        entermonitor r4;

     label14:
        r70 = virtualinvoke r4.<java.security.Permissions: java.util.Enumeration elements()>();

     label15:
        $z2 = interfaceinvoke r70.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z2 == 0 goto label17;

        $r71 = interfaceinvoke r70.<java.util.Enumeration: java.lang.Object nextElement()>();
        r10 = (java.security.Permission) $r71;
        $r72 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();
        $r73 = virtualinvoke $r72.<java.lang.Class: java.lang.String getName()>();
        $r74 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfType()>();
        $z3 = virtualinvoke $r73.<java.lang.String: boolean equals(java.lang.Object)>($r74);
        if $z3 == 0 goto label16;

        r67 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();
        goto label17;

     label16:
        goto label15;

     label17:
        exitmonitor r69;

     label18:
        goto label22;

     label19:
        $r75 := @caughtexception;

     label20:
        r11 = $r75;
        exitmonitor r69;

     label21:
        throw r11;

     label22:
        if r67 != null goto label23;

        $r76 = new java.security.UnresolvedPermission;
        $r77 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfType()>();
        $r78 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r79 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfActions()>();
        $r80 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.security.cert.Certificate[] getCerts()>();
        specialinvoke $r76.<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>($r77, $r78, $r79, $r80);
        virtualinvoke r4.<java.security.Permissions: void add(java.security.Permission)>($r76);
        goto label30;

     label23:
        $r81 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfActions()>();
        if $r81 != null goto label27;

     label24:
        $r82 = <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS1>;
        r83 = virtualinvoke r67.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r82);
        $r84 = newarray (java.lang.Object)[1];
        $r85 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r84[0] = $r85;
        $r86 = virtualinvoke r83.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r84);
        $r87 = (java.security.Permission) $r86;
        virtualinvoke r4.<java.security.Permissions: void add(java.security.Permission)>($r87);

     label25:
        goto label28;

     label26:
        $r88 := @caughtexception;
        r89 = $r88;
        $r90 = <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS2>;
        r91 = virtualinvoke r67.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r90);
        $r92 = newarray (java.lang.Object)[2];
        $r93 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r92[0] = $r93;
        $r94 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfActions()>();
        $r92[1] = $r94;
        $r95 = virtualinvoke r91.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r92);
        $r96 = (java.security.Permission) $r95;
        virtualinvoke r4.<java.security.Permissions: void add(java.security.Permission)>($r96);
        goto label28;

     label27:
        $r97 = <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS2>;
        r98 = virtualinvoke r67.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r97);
        $r99 = newarray (java.lang.Object)[2];
        $r100 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r99[0] = $r100;
        $r101 = virtualinvoke r1.<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfActions()>();
        $r99[1] = $r101;
        $r102 = virtualinvoke r98.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r99);
        $r103 = (java.security.Permission) $r102;
        virtualinvoke r4.<java.security.Permissions: void add(java.security.Permission)>($r103);

     label28:
        goto label30;

     label29:
        $r104 := @caughtexception;
        r105 = $r104;
        $r106 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r106 == null goto label30;

        $r107 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r108 = new java.lang.StringBuilder;
        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();
        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("self entry expansion  instantiation failed: ");
        $r110 = virtualinvoke r105.<java.lang.Exception: java.lang.String toString()>();
        $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);
        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r107.<sun.security.util.Debug: void println(java.lang.String)>($r112);

     label30:
        goto label32;

     label31:
        $r113 := @caughtexception;
        r114 = $r113;
        $r115 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r115 == null goto label32;

        $r116 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r117 = virtualinvoke r114.<java.lang.Exception: java.lang.String toString()>();
        virtualinvoke $r116.<sun.security.util.Debug: void println(java.lang.String)>($r117);

     label32:
        return;

        catch java.lang.ClassNotFoundException from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.NoSuchMethodException from label24 to label25 with label26;
        catch java.lang.Exception from label23 to label28 with label29;
        catch java.lang.Exception from label11 to label12 with label31;
    }

    private java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry, java.security.Principal[])
    {
        sun.security.provider.PolicyFile r0;
        sun.security.provider.PolicyParser$PrincipalEntry r1;
        java.security.Principal[] r2;
        java.lang.String[][] r3, r21, r28;
        int i0, i1, $i2, $i3, $i4, i5, $i6;
        java.util.Iterator r4;
        java.security.Principal r5, $r17, $r20, $r30, $r34;
        java.lang.String $r6, $r7, $r9, $r11, $r12, $r13, $r16, $r19, $r25, $r27, $r32, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        java.lang.String[] $r8, $r10, $r23, $r26, $r29, $r33;
        java.util.ArrayList $r14, r15;
        java.lang.Class $r18, $r24, $r31;
        java.lang.Object $r22;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: sun.security.provider.PolicyParser$PrincipalEntry;
        r2 := @parameter1: java.security.Principal[];
        $r6 = r1.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalClass>;
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("WILDCARD_PRINCIPAL_CLASS");
        if $z0 != 0 goto label0;

        $r7 = r1.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalName>;
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("WILDCARD_PRINCIPAL_NAME");
        if $z1 != 0 goto label0;

        r3 = newmultiarray (java.lang.String)[1][2];
        $r8 = r3[0];
        $r9 = r1.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalClass>;
        $r8[0] = $r9;
        $r10 = r3[0];
        $r11 = r1.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalName>;
        $r10[1] = $r11;
        return r3;

     label0:
        $r12 = r1.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalClass>;
        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("WILDCARD_PRINCIPAL_CLASS");
        if $z2 != 0 goto label6;

        $r13 = r1.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalName>;
        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("WILDCARD_PRINCIPAL_NAME");
        if $z3 == 0 goto label6;

        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        r15 = $r14;
        i0 = 0;

     label1:
        $i2 = lengthof r2;
        if i0 >= $i2 goto label3;

        $r16 = r1.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalClass>;
        $r17 = r2[i0];
        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.Class getClass()>();
        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();
        $z4 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r19);
        if $z4 == 0 goto label2;

        $r20 = r2[i0];
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r20);

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        $i3 = interfaceinvoke r15.<java.util.List: int size()>();
        r21 = newmultiarray (java.lang.String)[$i3][2];
        i1 = 0;
        r4 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z6 == 0 goto label5;

        $r22 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.security.Principal) $r22;
        $r23 = r21[i1];
        $r24 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();
        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();
        $r23[0] = $r25;
        $r26 = r21[i1];
        $r27 = interfaceinvoke r5.<java.security.Principal: java.lang.String getName()>();
        $r26[1] = $r27;
        i1 = i1 + 1;
        goto label4;

     label5:
        return r21;

     label6:
        $i4 = lengthof r2;
        r28 = newmultiarray (java.lang.String)[$i4][2];
        i5 = 0;

     label7:
        $i6 = lengthof r2;
        if i5 >= $i6 goto label8;

        $r29 = r28[i5];
        $r30 = r2[i5];
        $r31 = virtualinvoke $r30.<java.lang.Object: java.lang.Class getClass()>();
        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();
        $r29[0] = $r32;
        $r33 = r28[i5];
        $r34 = r2[i5];
        $r35 = interfaceinvoke $r34.<java.security.Principal: java.lang.String getName()>();
        $r33[1] = $r35;
        i5 = i5 + 1;
        goto label7;

     label8:
        return r28;
    }

    protected java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)
    {
        sun.security.provider.PolicyFile r0;
        java.security.CodeSource r1;
        null_type n0;
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14;
        java.util.ArrayList r2, $r14;
        java.security.cert.Certificate[] r3, $r4, r5, $r7;
        java.security.cert.Certificate $r6, $r8, $r11, $r15, $r16, $r19;
        boolean $z0, $z1, $z3;
        java.security.cert.X509Certificate $r9, $r12, $r17, $r20;
        java.security.Principal $r10, $r13, $r18, $r21;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.CodeSource;
        n0 = null;
        $r4 = virtualinvoke r1.<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>();
        r5 = $r4;
        if $r4 != null goto label0;

        return null;

     label0:
        i0 = 0;

     label1:
        $i2 = lengthof r5;
        if i0 >= $i2 goto label3;

        $r6 = r5[i0];
        $z0 = $r6 instanceof java.security.cert.X509Certificate;
        if $z0 != 0 goto label2;

        $r7 = virtualinvoke r1.<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>();
        return $r7;

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        i3 = 0;
        i1 = 0;

     label4:
        $i4 = lengthof r5;
        if i3 >= $i4 goto label7;

        i1 = i1 + 1;

     label5:
        $i5 = i3 + 1;
        $i6 = lengthof r5;
        if $i5 >= $i6 goto label6;

        $r8 = r5[i3];
        $r9 = (java.security.cert.X509Certificate) $r8;
        $r10 = virtualinvoke $r9.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();
        $i7 = i3 + 1;
        $r11 = r5[$i7];
        $r12 = (java.security.cert.X509Certificate) $r11;
        $r13 = virtualinvoke $r12.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();
        $z1 = interfaceinvoke $r10.<java.security.Principal: boolean equals(java.lang.Object)>($r13);
        if $z1 == 0 goto label6;

        i3 = i3 + 1;
        goto label5;

     label6:
        i3 = i3 + 1;
        goto label4;

     label7:
        $i8 = lengthof r5;
        if i1 != $i8 goto label8;

        return r5;

     label8:
        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        r2 = $r14;
        i9 = 0;

     label9:
        $i10 = lengthof r5;
        if i9 >= $i10 goto label12;

        $r15 = r5[i9];
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label10:
        $i11 = i9 + 1;
        $i12 = lengthof r5;
        if $i11 >= $i12 goto label11;

        $r16 = r5[i9];
        $r17 = (java.security.cert.X509Certificate) $r16;
        $r18 = virtualinvoke $r17.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();
        $i13 = i9 + 1;
        $r19 = r5[$i13];
        $r20 = (java.security.cert.X509Certificate) $r19;
        $r21 = virtualinvoke $r20.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();
        $z3 = interfaceinvoke $r18.<java.security.Principal: boolean equals(java.lang.Object)>($r21);
        if $z3 == 0 goto label11;

        i9 = i9 + 1;
        goto label10;

     label11:
        i9 = i9 + 1;
        goto label9;

     label12:
        $i14 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        r3 = newarray (java.security.cert.Certificate)[$i14];
        virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);
        return r3;
    }

    private java.security.CodeSource canonicalizeCodebase(java.security.CodeSource, boolean)
    {
        sun.security.provider.PolicyFile r0;
        java.security.CodeSource r1, r3, $r18, $r20, $r24, $r27;
        boolean z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, z8;
        java.lang.String r2, r5, $r7, $r9, $r11, r12, $r13, r14, r15;
        java.net.URL r4, $r8, r17, $r25, $r28;
        int i0;
        java.net.MalformedURLException r6, $r10;
        char $c1;
        null_type n0;
        java.io.File $r16;
        java.security.cert.Certificate[] $r19, $r21, $r26, $r29;
        java.io.IOException $r22, r23;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.CodeSource;
        z0 := @parameter1: boolean;
        r2 = null;
        r3 = r1;
        r4 = virtualinvoke r1.<java.security.CodeSource: java.net.URL getLocation()>();
        if r4 == null goto label7;

        $r7 = virtualinvoke r4.<java.net.URL: java.lang.String getProtocol()>();
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("jar");
        if $z1 == 0 goto label3;

        r5 = virtualinvoke r4.<java.net.URL: java.lang.String getFile()>();
        i0 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>("!/");
        if i0 == -1 goto label3;

     label0:
        $r8 = new java.net.URL;
        $r9 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        specialinvoke $r8.<java.net.URL: void <init>(java.lang.String)>($r9);
        r4 = $r8;

     label1:
        goto label3;

     label2:
        $r10 := @caughtexception;
        r6 = $r10;

     label3:
        $r11 = virtualinvoke r4.<java.net.URL: java.lang.String getProtocol()>();
        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("file");
        if $z2 == 0 goto label7;

        z3 = 0;
        r12 = virtualinvoke r4.<java.net.URL: java.lang.String getHost()>();
        if r12 == null goto label4;

        $z4 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z4 != 0 goto label4;

        $z5 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("~");
        if $z5 != 0 goto label4;

        $z6 = virtualinvoke r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("localhost");
        if $z6 == 0 goto label5;

     label4:
        $z7 = 1;
        goto label6;

     label5:
        $z7 = 0;

     label6:
        z8 = $z7;
        if z8 == 0 goto label7;

        $r13 = virtualinvoke r4.<java.net.URL: java.lang.String getFile()>();
        $c1 = <java.io.File: char separatorChar>;
        r14 = virtualinvoke $r13.<java.lang.String: java.lang.String replace(char,char)>(47, $c1);
        r2 = staticinvoke <sun.net.www.ParseUtil: java.lang.String decode(java.lang.String)>(r14);

     label7:
        if r2 == null goto label13;

     label8:
        n0 = null;
        r15 = staticinvoke <sun.security.provider.PolicyFile: java.lang.String canonPath(java.lang.String)>(r2);
        $r16 = new java.io.File;
        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>(r15);
        r17 = staticinvoke <sun.net.www.ParseUtil: java.net.URL fileToEncodedURL(java.io.File)>($r16);
        if z0 == 0 goto label9;

        $r18 = new java.security.CodeSource;
        $r19 = virtualinvoke r0.<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>(r1);
        specialinvoke $r18.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>(r17, $r19);
        r3 = $r18;
        goto label10;

     label9:
        $r20 = new java.security.CodeSource;
        $r21 = virtualinvoke r1.<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>();
        specialinvoke $r20.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>(r17, $r21);
        r3 = $r20;

     label10:
        goto label14;

     label11:
        $r22 := @caughtexception;
        r23 = $r22;
        if z0 == 0 goto label12;

        $r24 = new java.security.CodeSource;
        $r25 = virtualinvoke r1.<java.security.CodeSource: java.net.URL getLocation()>();
        $r26 = virtualinvoke r0.<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>(r1);
        specialinvoke $r24.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>($r25, $r26);
        r3 = $r24;

     label12:
        goto label14;

     label13:
        if z0 == 0 goto label14;

        $r27 = new java.security.CodeSource;
        $r28 = virtualinvoke r1.<java.security.CodeSource: java.net.URL getLocation()>();
        $r29 = virtualinvoke r0.<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>(r1);
        specialinvoke $r27.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>($r28, $r29);
        r3 = $r27;

     label14:
        return r3;

        catch java.net.MalformedURLException from label0 to label1 with label2;
        catch java.io.IOException from label8 to label10 with label11;
    }

    private static java.lang.String canonPath(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r2, r5, r7, $r9, $r12, $r14;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4, $r8, $r10, $r11;
        int $i0, $i1, $i2, $i3;
        java.io.File $r6, $r13;

        r0 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("*");
        if $z0 == 0 goto label0;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();
        $i1 = $i0 - 1;
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        $r6 = new java.io.File;
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r5);
        r7 = virtualinvoke $r6.<java.io.File: java.lang.String getCanonicalPath()>();
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $i2 = virtualinvoke r7.<java.lang.String: int length()>();
        $i3 = $i2 - 1;
        $r9 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r12;

     label0:
        $r13 = new java.io.File;
        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>(r0);
        $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getCanonicalPath()>();
        return $r14;
    }

    private java.lang.String printPD(java.security.ProtectionDomain)
    {
        sun.security.provider.PolicyFile r0;
        java.security.ProtectionDomain r1;
        java.security.Principal[] r2;
        java.lang.String r3, $r9, $r13, $r16, $r31;
        java.lang.StringBuilder r4, $r5, $r6, $r10, $r11, $r14, $r15, $r20, $r21, $r23, $r24, $r25, $r27, $r28, $r29, $r30;
        int i0, $i1, $i2, $i3, $i4;
        java.security.Principal $r7, $r12;
        java.lang.Class $r8;
        java.security.CodeSource $r22;
        java.lang.ClassLoader $r26;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.ProtectionDomain;
        r2 = virtualinvoke r1.<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>();
        r3 = "<no principals>";
        if r2 == null goto label4;

        $i1 = lengthof r2;
        if $i1 <= 0 goto label4;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("(principals ");
        r4 = $r5;
        i0 = 0;

     label0:
        $i2 = lengthof r2;
        if i0 >= $i2 goto label3;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = r2[i0];
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();
        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();
        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");
        $r12 = r2[i0];
        $r13 = interfaceinvoke $r12.<java.security.Principal: java.lang.String getName()>();
        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $i3 = lengthof r2;
        $i4 = $i3 - 1;
        if i0 >= $i4 goto label1;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        goto label2;

     label1:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label2:
        i0 = i0 + 1;
        goto label0;

     label3:
        r3 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PD CodeSource: ");
        $r22 = virtualinvoke r1.<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>();
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PD ClassLoader: ");
        $r26 = virtualinvoke r1.<java.security.ProtectionDomain: java.lang.ClassLoader getClassLoader()>();
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PD Principals: ");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r31;
    }

    private boolean replacePrincipals(java.util.List, java.security.KeyStore)
    {
        sun.security.provider.PolicyFile r0;
        java.util.List r1;
        java.security.KeyStore r2;
        java.util.ListIterator r3;
        sun.security.provider.PolicyParser$PrincipalEntry r4;
        java.lang.String r5, $r7, $r8, $r9, $r14, $r21;
        int $i0;
        boolean $z0, $z1;
        java.lang.Object $r6;
        sun.security.util.Debug $r10, $r11;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: java.security.KeyStore;
        if r1 == null goto label0;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();
        if $i0 == 0 goto label0;

        if r2 != null goto label1;

     label0:
        return 1;

     label1:
        r3 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();
        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();
        r4 = (sun.security.provider.PolicyParser$PrincipalEntry) $r6;
        $r7 = r4.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalClass>;
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("PolicyParser.REPLACE_NAME");
        if $z1 == 0 goto label5;

        $r8 = r4.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalName>;
        $r9 = specialinvoke r0.<sun.security.provider.PolicyFile: java.lang.String getDN(java.lang.String,java.security.KeyStore)>($r8, r2);
        r5 = $r9;
        if $r9 != null goto label3;

        return 0;

     label3:
        $r10 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r10 == null goto label4;

        $r11 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Replacing \"");
        $r14 = r4.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalName>;
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" with ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("javax.security.auth.x500.X500Principal");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/\"");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<sun.security.util.Debug: void println(java.lang.String)>($r21);

     label4:
        r4.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalClass> = "javax.security.auth.x500.X500Principal";
        r4.<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String principalName> = r5;

     label5:
        goto label2;

     label6:
        return 1;
    }

    private void expandPermissionName(sun.security.provider.PolicyParser$PermissionEntry, java.security.KeyStore) throws java.lang.Exception
    {
        sun.security.provider.PolicyFile r0;
        sun.security.provider.PolicyParser$PermissionEntry r1;
        java.security.KeyStore r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.StringBuilder r3, $r11, $r37, $r38, $r39, $r40, $r55, $r56, $r58, $r59, $r61;
        java.lang.String r4, r5, r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r22, $r24, $r26, $r27, r28, $r30, $r33, $r36, $r41, $r44, $r49, $r50, $r51, $r57, $r60, $r62, $r63;
        java.text.MessageFormat r6, $r21, $r29, r31, $r43, r45;
        java.lang.Object[] r7, $r23, $r32, r34, $r46, r47;
        boolean $z0, $z1;
        java.lang.Exception $r25, $r35, $r48;
        sun.security.util.Debug $r53, $r54;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: sun.security.provider.PolicyParser$PermissionEntry;
        r2 := @parameter1: java.security.KeyStore;
        $r9 = r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        if $r9 == null goto label0;

        $r10 = r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $i4 = virtualinvoke $r10.<java.lang.String: int indexOf(java.lang.String,int)>("${{", 0);
        if $i4 != -1 goto label1;

     label0:
        return;

     label1:
        i0 = 0;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        r3 = $r11;

     label2:
        $r12 = r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $i5 = virtualinvoke $r12.<java.lang.String: int indexOf(java.lang.String,int)>("${{", i0);
        i1 = $i5;
        if $i5 == -1 goto label10;

        $r13 = r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        i2 = virtualinvoke $r13.<java.lang.String: int indexOf(java.lang.String,int)>("}}", i1);
        if i2 >= 1 goto label3;

        goto label10;

     label3:
        $r14 = r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $i6 = i1 + 3;
        r4 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int,int)>($i6, i2);
        r5 = r4;
        $i7 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>(":");
        i3 = $i7;
        if $i7 == -1 goto label4;

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

     label4:
        $z0 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("self");
        if $z0 == 0 goto label5;

        $r18 = r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $i8 = i2 + 2;
        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String substring(int,int)>(i1, $i8);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        i0 = i2 + 2;
        goto label2;

     label5:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("alias");
        if $z1 == 0 goto label8;

        if i3 != -1 goto label6;

        $r21 = new java.text.MessageFormat;
        $r22 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("alias.name.not.provided.pe.name.");
        specialinvoke $r21.<java.text.MessageFormat: void <init>(java.lang.String)>($r22);
        r6 = $r21;
        $r23 = newarray (java.lang.Object)[1];
        $r24 = r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $r23[0] = $r24;
        r7 = $r23;
        $r25 = new java.lang.Exception;
        $r26 = virtualinvoke r6.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r7);
        specialinvoke $r25.<java.lang.Exception: void <init>(java.lang.String)>($r26);
        throw $r25;

     label6:
        $i9 = i3 + 1;
        r8 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i9);
        $r27 = specialinvoke r0.<sun.security.provider.PolicyFile: java.lang.String getDN(java.lang.String,java.security.KeyStore)>(r8, r2);
        r28 = $r27;
        if $r27 != null goto label7;

        $r29 = new java.text.MessageFormat;
        $r30 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("unable.to.perform.substitution.on.alias.suffix");
        specialinvoke $r29.<java.text.MessageFormat: void <init>(java.lang.String)>($r30);
        r31 = $r29;
        $r32 = newarray (java.lang.Object)[1];
        $i10 = i3 + 1;
        $r33 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i10);
        $r32[0] = $r33;
        r34 = $r32;
        $r35 = new java.lang.Exception;
        $r36 = virtualinvoke r31.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r34);
        specialinvoke $r35.<java.lang.Exception: void <init>(java.lang.String)>($r36);
        throw $r35;

     label7:
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("javax.security.auth.x500.X500Principal \"");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);
        i0 = i2 + 2;
        goto label9;

     label8:
        $r43 = new java.text.MessageFormat;
        $r44 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("substitution.value.prefix.unsupported");
        specialinvoke $r43.<java.text.MessageFormat: void <init>(java.lang.String)>($r44);
        r45 = $r43;
        $r46 = newarray (java.lang.Object)[1];
        $r46[0] = r5;
        r47 = $r46;
        $r48 = new java.lang.Exception;
        $r49 = virtualinvoke r45.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r47);
        specialinvoke $r48.<java.lang.Exception: void <init>(java.lang.String)>($r49);
        throw $r48;

     label9:
        goto label2;

     label10:
        $r50 = r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $r51 = virtualinvoke $r50.<java.lang.String: java.lang.String substring(int)>(i0);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);
        $r53 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r53 == null goto label11;

        $r54 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r55 = new java.lang.StringBuilder;
        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Permission name expanded from:\n\t");
        $r57 = r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name>;
        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nto\n\t");
        $r60 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r54.<sun.security.util.Debug: void println(java.lang.String)>($r62);

     label11:
        $r63 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r1.<sun.security.provider.PolicyParser$PermissionEntry: java.lang.String name> = $r63;
        return;
    }

    private java.lang.String getDN(java.lang.String, java.security.KeyStore)
    {
        sun.security.provider.PolicyFile r0;
        java.lang.String r1, $r13, $r15, $r22, $r26, $r27;
        java.security.KeyStore r2;
        null_type n0;
        java.lang.Exception r3, $r6;
        javax.security.auth.x500.X500Principal r4, $r24, $r25;
        java.security.cert.Certificate r5;
        sun.security.util.Debug $r7, $r8, $r16, $r17;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14, $r18, $r19, $r20, $r21;
        boolean $z0;
        java.security.cert.X509Certificate r23;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.security.KeyStore;
        n0 = null;

     label0:
        r5 = virtualinvoke r2.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r1);

     label1:
        goto label4;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;
        $r7 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r7 == null goto label3;

        $r8 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Error retrieving certificate for \'");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");
        $r13 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r8.<sun.security.util.Debug: void println(java.lang.String)>($r15);

     label3:
        return null;

     label4:
        if r5 == null goto label5;

        $z0 = r5 instanceof java.security.cert.X509Certificate;
        if $z0 != 0 goto label7;

     label5:
        $r16 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        if $r16 == null goto label6;

        $r17 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  -- No certificate for \'");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' - ignoring entry");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r17.<sun.security.util.Debug: void println(java.lang.String)>($r22);

     label6:
        return null;

     label7:
        r23 = (java.security.cert.X509Certificate) r5;
        $r24 = new javax.security.auth.x500.X500Principal;
        $r25 = virtualinvoke r23.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();
        $r26 = virtualinvoke $r25.<javax.security.auth.x500.X500Principal: java.lang.String toString()>();
        specialinvoke $r24.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r26);
        r4 = $r24;
        $r27 = virtualinvoke r4.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();
        return $r27;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    private boolean checkForTrustedIdentity(java.security.cert.Certificate, sun.security.provider.PolicyFile$PolicyInfo)
    {
        sun.security.provider.PolicyFile r0;
        java.security.cert.Certificate r1;
        sun.security.provider.PolicyFile$PolicyInfo r2;

        r0 := @this: sun.security.provider.PolicyFile;
        r1 := @parameter0: java.security.cert.Certificate;
        r2 := @parameter1: sun.security.provider.PolicyFile$PolicyInfo;
        return 0;
    }

    static boolean access$002(sun.security.provider.PolicyFile, boolean)
    {
        sun.security.provider.PolicyFile r0;
        boolean z0;

        r0 := @parameter0: sun.security.provider.PolicyFile;
        z0 := @parameter1: boolean;
        r0.<sun.security.provider.PolicyFile: boolean expandProperties> = z0;
        return z0;
    }

    static boolean access$102(sun.security.provider.PolicyFile, boolean)
    {
        sun.security.provider.PolicyFile r0;
        boolean z0;

        r0 := @parameter0: sun.security.provider.PolicyFile;
        z0 := @parameter1: boolean;
        r0.<sun.security.provider.PolicyFile: boolean ignoreIdentityScope> = z0;
        return z0;
    }

    static boolean access$202(sun.security.provider.PolicyFile, boolean)
    {
        sun.security.provider.PolicyFile r0;
        boolean z0;

        r0 := @parameter0: sun.security.provider.PolicyFile;
        z0 := @parameter1: boolean;
        r0.<sun.security.provider.PolicyFile: boolean allowSystemProperties> = z0;
        return z0;
    }

    static boolean access$302(sun.security.provider.PolicyFile, boolean)
    {
        sun.security.provider.PolicyFile r0;
        boolean z0;

        r0 := @parameter0: sun.security.provider.PolicyFile;
        z0 := @parameter1: boolean;
        r0.<sun.security.provider.PolicyFile: boolean notUtf8> = z0;
        return z0;
    }

    static boolean access$400(sun.security.provider.PolicyFile, java.net.URL, sun.security.provider.PolicyFile$PolicyInfo)
    {
        sun.security.provider.PolicyFile r0;
        java.net.URL r1;
        sun.security.provider.PolicyFile$PolicyInfo r2;
        boolean $z0;

        r0 := @parameter0: sun.security.provider.PolicyFile;
        r1 := @parameter1: java.net.URL;
        r2 := @parameter2: sun.security.provider.PolicyFile$PolicyInfo;
        $z0 = specialinvoke r0.<sun.security.provider.PolicyFile: boolean init(java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>(r1, r2);
        return $z0;
    }

    static void access$500(sun.security.provider.PolicyFile, sun.security.provider.PolicyFile$PolicyInfo)
    {
        sun.security.provider.PolicyFile r0;
        sun.security.provider.PolicyFile$PolicyInfo r1;

        r0 := @parameter0: sun.security.provider.PolicyFile;
        r1 := @parameter1: sun.security.provider.PolicyFile$PolicyInfo;
        specialinvoke r0.<sun.security.provider.PolicyFile: void initStaticPolicy(sun.security.provider.PolicyFile$PolicyInfo)>(r1);
        return;
    }

    static boolean access$200(sun.security.provider.PolicyFile)
    {
        sun.security.provider.PolicyFile r0;
        boolean $z0;

        r0 := @parameter0: sun.security.provider.PolicyFile;
        $z0 = r0.<sun.security.provider.PolicyFile: boolean allowSystemProperties>;
        return $z0;
    }

    static sun.security.util.Debug access$600()
    {
        sun.security.util.Debug $r0;

        $r0 = <sun.security.provider.PolicyFile: sun.security.util.Debug debug>;
        return $r0;
    }

    static java.security.CodeSource access$700(sun.security.provider.PolicyFile, java.security.CodeSource, boolean)
    {
        sun.security.provider.PolicyFile r0;
        java.security.CodeSource r1, $r2;
        boolean z0;

        r0 := @parameter0: sun.security.provider.PolicyFile;
        r1 := @parameter1: java.security.CodeSource;
        z0 := @parameter2: boolean;
        $r2 = specialinvoke r0.<sun.security.provider.PolicyFile: java.security.CodeSource canonicalizeCodebase(java.security.CodeSource,boolean)>(r1, z0);
        return $r2;
    }

    static void <clinit>()
    {
        sun.security.util.Debug $r0;
        java.lang.Class[] $r1, $r2, $r3;

        $r0 = staticinvoke <sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String)>("policy");
        <sun.security.provider.PolicyFile: sun.security.util.Debug debug> = $r0;
        $r1 = newarray (java.lang.Class)[0];
        <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS0> = $r1;
        $r2 = newarray (java.lang.Class)[1];
        $r2[0] = class "java/lang/String";
        <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS1> = $r2;
        $r3 = newarray (java.lang.Class)[2];
        $r3[0] = class "java/lang/String";
        $r3[1] = class "java/lang/String";
        <sun.security.provider.PolicyFile: java.lang.Class[] PARAMS2> = $r3;
        return;
    }
}
