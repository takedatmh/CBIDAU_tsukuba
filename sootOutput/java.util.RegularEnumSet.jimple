class java.util.RegularEnumSet extends java.util.EnumSet
{
    private static final long serialVersionUID;
    private long elements;

    void <init>(java.lang.Class, java.lang.Enum[])
    {
        java.util.RegularEnumSet r0;
        java.lang.Class r1;
        java.lang.Enum[] r2;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.Enum[];
        specialinvoke r0.<java.util.EnumSet: void <init>(java.lang.Class,java.lang.Enum[])>(r1, r2);
        r0.<java.util.RegularEnumSet: long elements> = 0L;
        return;
    }

    void addRange(java.lang.Enum, java.lang.Enum)
    {
        java.util.RegularEnumSet r0;
        java.lang.Enum r1, r2;
        int $i0, $i1, $i2, $i3, $i5;
        long $l4, $l6;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.lang.Enum;
        r2 := @parameter1: java.lang.Enum;
        $i0 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();
        $i1 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();
        $i2 = $i0 - $i1;
        $i3 = $i2 - 1;
        $l4 = -1L >>> $i3;
        $i5 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();
        $l6 = $l4 << $i5;
        r0.<java.util.RegularEnumSet: long elements> = $l6;
        return;
    }

    void addAll()
    {
        java.util.RegularEnumSet r0;
        java.lang.Enum[] $r1, $r2;
        int $i0, $i1, $i2;
        long $l3;

        r0 := @this: java.util.RegularEnumSet;
        $r1 = r0.<java.util.RegularEnumSet: java.lang.Enum[] universe>;
        $i0 = lengthof $r1;
        if $i0 == 0 goto label0;

        $r2 = r0.<java.util.RegularEnumSet: java.lang.Enum[] universe>;
        $i1 = lengthof $r2;
        $i2 = neg $i1;
        $l3 = -1L >>> $i2;
        r0.<java.util.RegularEnumSet: long elements> = $l3;

     label0:
        return;
    }

    void complement()
    {
        java.util.RegularEnumSet r0;
        java.lang.Enum[] $r1, $r3;
        int $i0, $i4, $i5;
        long $l1, $l2, $l3, $l6, $l7;

        r0 := @this: java.util.RegularEnumSet;
        $r1 = r0.<java.util.RegularEnumSet: java.lang.Enum[] universe>;
        $i0 = lengthof $r1;
        if $i0 == 0 goto label0;

        $l1 = r0.<java.util.RegularEnumSet: long elements>;
        $l2 = $l1 ^ -1L;
        r0.<java.util.RegularEnumSet: long elements> = $l2;
        $l3 = r0.<java.util.RegularEnumSet: long elements>;
        $r3 = r0.<java.util.RegularEnumSet: java.lang.Enum[] universe>;
        $i4 = lengthof $r3;
        $i5 = neg $i4;
        $l6 = -1L >>> $i5;
        $l7 = $l3 & $l6;
        r0.<java.util.RegularEnumSet: long elements> = $l7;

     label0:
        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.RegularEnumSet r0;
        java.util.RegularEnumSet$EnumSetIterator $r1;

        r0 := @this: java.util.RegularEnumSet;
        $r1 = new java.util.RegularEnumSet$EnumSetIterator;
        specialinvoke $r1.<java.util.RegularEnumSet$EnumSetIterator: void <init>(java.util.RegularEnumSet)>(r0);
        return $r1;
    }

    public int size()
    {
        java.util.RegularEnumSet r0;
        long $l0;
        int $i1;

        r0 := @this: java.util.RegularEnumSet;
        $l0 = r0.<java.util.RegularEnumSet: long elements>;
        $i1 = staticinvoke <java.lang.Long: int bitCount(long)>($l0);
        return $i1;
    }

    public boolean isEmpty()
    {
        java.util.RegularEnumSet r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: java.util.RegularEnumSet;
        $l0 = r0.<java.util.RegularEnumSet: long elements>;
        $b1 = $l0 cmp 0L;
        if $b1 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.RegularEnumSet r0;
        java.lang.Object r1;
        java.lang.Class r2, $r3, $r4, $r5;
        long $l0, $l2, $l3;
        java.lang.Enum $r6;
        int $i1;
        byte $b4;
        boolean $z0;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        return 0;

     label0:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = r0.<java.util.RegularEnumSet: java.lang.Class elementType>;
        if r2 == $r3 goto label1;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();
        $r5 = r0.<java.util.RegularEnumSet: java.lang.Class elementType>;
        if $r4 == $r5 goto label1;

        return 0;

     label1:
        $l0 = r0.<java.util.RegularEnumSet: long elements>;
        $r6 = (java.lang.Enum) r1;
        $i1 = virtualinvoke $r6.<java.lang.Enum: int ordinal()>();
        $l2 = 1L << $i1;
        $l3 = $l0 & $l2;
        $b4 = $l3 cmp 0L;
        if $b4 == 0 goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean add(java.lang.Enum)
    {
        java.util.RegularEnumSet r0;
        java.lang.Enum r1;
        long l0, $l1, $l3, $l4, $l5;
        int $i2;
        byte $b6;
        boolean $z0;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.lang.Enum;
        virtualinvoke r0.<java.util.RegularEnumSet: void typeCheck(java.lang.Enum)>(r1);
        l0 = r0.<java.util.RegularEnumSet: long elements>;
        $l1 = r0.<java.util.RegularEnumSet: long elements>;
        $i2 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();
        $l3 = 1L << $i2;
        $l4 = $l1 | $l3;
        r0.<java.util.RegularEnumSet: long elements> = $l4;
        $l5 = r0.<java.util.RegularEnumSet: long elements>;
        $b6 = $l5 cmp l0;
        if $b6 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.RegularEnumSet r0;
        java.lang.Object r1;
        java.lang.Class r2, $r3, $r4, $r5;
        long l0, $l1, $l3, $l4, $l5, $l6;
        java.lang.Enum $r7;
        int $i2;
        byte $b7;
        boolean $z0;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        return 0;

     label0:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = r0.<java.util.RegularEnumSet: java.lang.Class elementType>;
        if r2 == $r3 goto label1;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();
        $r5 = r0.<java.util.RegularEnumSet: java.lang.Class elementType>;
        if $r4 == $r5 goto label1;

        return 0;

     label1:
        l0 = r0.<java.util.RegularEnumSet: long elements>;
        $l1 = r0.<java.util.RegularEnumSet: long elements>;
        $r7 = (java.lang.Enum) r1;
        $i2 = virtualinvoke $r7.<java.lang.Enum: int ordinal()>();
        $l3 = 1L << $i2;
        $l4 = $l3 ^ -1L;
        $l5 = $l1 & $l4;
        r0.<java.util.RegularEnumSet: long elements> = $l5;
        $l6 = r0.<java.util.RegularEnumSet: long elements>;
        $b7 = $l6 cmp l0;
        if $b7 == 0 goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.RegularEnumSet r0, r2;
        java.util.Collection r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r3, $r4;
        long $l0, $l1, $l2, $l3;
        byte $b4;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.util.Collection;
        $z0 = r1 instanceof java.util.RegularEnumSet;
        if $z0 != 0 goto label0;

        $z1 = specialinvoke r0.<java.util.EnumSet: boolean containsAll(java.util.Collection)>(r1);
        return $z1;

     label0:
        r2 = (java.util.RegularEnumSet) r1;
        $r3 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;
        $r4 = r0.<java.util.RegularEnumSet: java.lang.Class elementType>;
        if $r3 == $r4 goto label1;

        $z2 = virtualinvoke r2.<java.util.RegularEnumSet: boolean isEmpty()>();
        return $z2;

     label1:
        $l0 = r2.<java.util.RegularEnumSet: long elements>;
        $l1 = r0.<java.util.RegularEnumSet: long elements>;
        $l2 = $l1 ^ -1L;
        $l3 = $l0 & $l2;
        $b4 = $l3 cmp 0L;
        if $b4 != 0 goto label2;

        $z3 = 1;
        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.RegularEnumSet r0, r2;
        java.util.Collection r1;
        java.lang.StringBuilder $r3, $r8, $r9, $r11;
        long l0, $l1, $l2, $l3, $l4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r4, $r5, $r7, $r10;
        java.lang.ClassCastException $r6;
        java.lang.String $r12;
        byte $b5;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.util.Collection;
        $z0 = r1 instanceof java.util.RegularEnumSet;
        if $z0 != 0 goto label0;

        $z1 = specialinvoke r0.<java.util.EnumSet: boolean addAll(java.util.Collection)>(r1);
        return $z1;

     label0:
        r2 = (java.util.RegularEnumSet) r1;
        $r4 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;
        $r5 = r0.<java.util.RegularEnumSet: java.lang.Class elementType>;
        if $r4 == $r5 goto label2;

        $z2 = virtualinvoke r2.<java.util.RegularEnumSet: boolean isEmpty()>();
        if $z2 == 0 goto label1;

        return 0;

     label1:
        $r6 = new java.lang.ClassCastException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r7 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");
        $r10 = r0.<java.util.RegularEnumSet: java.lang.Class elementType>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.ClassCastException: void <init>(java.lang.String)>($r12);
        throw $r6;

     label2:
        l0 = r0.<java.util.RegularEnumSet: long elements>;
        $l1 = r0.<java.util.RegularEnumSet: long elements>;
        $l2 = r2.<java.util.RegularEnumSet: long elements>;
        $l3 = $l1 | $l2;
        r0.<java.util.RegularEnumSet: long elements> = $l3;
        $l4 = r0.<java.util.RegularEnumSet: long elements>;
        $b5 = $l4 cmp l0;
        if $b5 == 0 goto label3;

        $z3 = 1;
        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.RegularEnumSet r0, r2;
        java.util.Collection r1;
        long l0, $l1, $l2, $l3, $l4, $l5;
        boolean $z0, $z1, $z2;
        java.lang.Class $r3, $r4;
        byte $b6;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.util.Collection;
        $z0 = r1 instanceof java.util.RegularEnumSet;
        if $z0 != 0 goto label0;

        $z1 = specialinvoke r0.<java.util.EnumSet: boolean removeAll(java.util.Collection)>(r1);
        return $z1;

     label0:
        r2 = (java.util.RegularEnumSet) r1;
        $r3 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;
        $r4 = r0.<java.util.RegularEnumSet: java.lang.Class elementType>;
        if $r3 == $r4 goto label1;

        return 0;

     label1:
        l0 = r0.<java.util.RegularEnumSet: long elements>;
        $l1 = r0.<java.util.RegularEnumSet: long elements>;
        $l2 = r2.<java.util.RegularEnumSet: long elements>;
        $l3 = $l2 ^ -1L;
        $l4 = $l1 & $l3;
        r0.<java.util.RegularEnumSet: long elements> = $l4;
        $l5 = r0.<java.util.RegularEnumSet: long elements>;
        $b6 = $l5 cmp l0;
        if $b6 == 0 goto label2;

        $z2 = 1;
        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.RegularEnumSet r0, r2;
        java.util.Collection r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Class $r3, $r4;
        long $l0, l2, $l3, $l4, $l5, $l6;
        byte $b1, $b7;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.util.Collection;
        $z1 = r1 instanceof java.util.RegularEnumSet;
        if $z1 != 0 goto label0;

        $z2 = specialinvoke r0.<java.util.EnumSet: boolean retainAll(java.util.Collection)>(r1);
        return $z2;

     label0:
        r2 = (java.util.RegularEnumSet) r1;
        $r3 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;
        $r4 = r0.<java.util.RegularEnumSet: java.lang.Class elementType>;
        if $r3 == $r4 goto label3;

        $l0 = r0.<java.util.RegularEnumSet: long elements>;
        $b1 = $l0 cmp 0L;
        if $b1 == 0 goto label1;

        $z3 = 1;
        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;
        r0.<java.util.RegularEnumSet: long elements> = 0L;
        return z0;

     label3:
        l2 = r0.<java.util.RegularEnumSet: long elements>;
        $l3 = r0.<java.util.RegularEnumSet: long elements>;
        $l4 = r2.<java.util.RegularEnumSet: long elements>;
        $l5 = $l3 & $l4;
        r0.<java.util.RegularEnumSet: long elements> = $l5;
        $l6 = r0.<java.util.RegularEnumSet: long elements>;
        $b7 = $l6 cmp l2;
        if $b7 == 0 goto label4;

        $z4 = 1;
        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    public void clear()
    {
        java.util.RegularEnumSet r0;

        r0 := @this: java.util.RegularEnumSet;
        r0.<java.util.RegularEnumSet: long elements> = 0L;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.RegularEnumSet r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r3, $r4;
        long $l0, $l2, $l4, $l5;
        byte $b1, $b3, $b6;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.util.RegularEnumSet;
        if $z0 != 0 goto label0;

        $z1 = specialinvoke r0.<java.util.EnumSet: boolean equals(java.lang.Object)>(r1);
        return $z1;

     label0:
        r2 = (java.util.RegularEnumSet) r1;
        $r3 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;
        $r4 = r0.<java.util.RegularEnumSet: java.lang.Class elementType>;
        if $r3 == $r4 goto label3;

        $l0 = r0.<java.util.RegularEnumSet: long elements>;
        $b1 = $l0 cmp 0L;
        if $b1 != 0 goto label1;

        $l2 = r2.<java.util.RegularEnumSet: long elements>;
        $b3 = $l2 cmp 0L;
        if $b3 != 0 goto label1;

        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        $l4 = r2.<java.util.RegularEnumSet: long elements>;
        $l5 = r0.<java.util.RegularEnumSet: long elements>;
        $b6 = $l4 cmp $l5;
        if $b6 != 0 goto label4;

        $z3 = 1;
        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public volatile boolean add(java.lang.Object)
    {
        java.util.RegularEnumSet r0;
        java.lang.Object r1;
        java.lang.Enum $r2;
        boolean $z0;

        r0 := @this: java.util.RegularEnumSet;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.lang.Enum) r1;
        $z0 = virtualinvoke r0.<java.util.RegularEnumSet: boolean add(java.lang.Enum)>($r2);
        return $z0;
    }

    static long access$000(java.util.RegularEnumSet)
    {
        java.util.RegularEnumSet r0;
        long $l0;

        r0 := @parameter0: java.util.RegularEnumSet;
        $l0 = r0.<java.util.RegularEnumSet: long elements>;
        return $l0;
    }

    static long access$074(java.util.RegularEnumSet, long)
    {
        java.util.RegularEnumSet r0;
        long l0, $l1, $l2;

        r0 := @parameter0: java.util.RegularEnumSet;
        l0 := @parameter1: long;
        $l1 = r0.<java.util.RegularEnumSet: long elements>;
        $l2 = $l1 & l0;
        r0.<java.util.RegularEnumSet: long elements> = $l2;
        return $l2;
    }
}
