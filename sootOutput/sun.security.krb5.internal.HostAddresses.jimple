public class sun.security.krb5.internal.HostAddresses extends java.lang.Object implements java.lang.Cloneable
{
    private static boolean DEBUG;
    private sun.security.krb5.internal.HostAddress[] addresses;
    private volatile int hashCode;

    public void <init>(sun.security.krb5.internal.HostAddress[]) throws java.io.IOException
    {
        sun.security.krb5.internal.HostAddresses r0;
        sun.security.krb5.internal.HostAddress[] r1, $r2, $r5;
        int i0, $i1, $i2;
        sun.security.krb5.internal.HostAddress $r3, $r6, $r8;
        java.io.IOException $r4;
        java.lang.Object $r7;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        r1 := @parameter0: sun.security.krb5.internal.HostAddress[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = null;
        r0.<sun.security.krb5.internal.HostAddresses: int hashCode> = 0;
        if r1 == null goto label2;

        $i1 = lengthof r1;
        $r2 = newarray (sun.security.krb5.internal.HostAddress)[$i1];
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = $r2;
        i0 = 0;

     label0:
        $i2 = lengthof r1;
        if i0 >= $i2 goto label2;

        $r3 = r1[i0];
        if $r3 != null goto label1;

        $r4 = new java.io.IOException;
        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Cannot create a HostAddress");
        throw $r4;

     label1:
        $r5 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r6 = r1[i0];
        $r7 = virtualinvoke $r6.<sun.security.krb5.internal.HostAddress: java.lang.Object clone()>();
        $r8 = (sun.security.krb5.internal.HostAddress) $r7;
        $r5[i0] = $r8;
        i0 = i0 + 1;
        goto label0;

     label2:
        return;
    }

    public void <init>() throws java.net.UnknownHostException
    {
        sun.security.krb5.internal.HostAddresses r0;
        sun.security.krb5.internal.HostAddress $r1;
        sun.security.krb5.internal.HostAddress[] $r2, $r3;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = null;
        r0.<sun.security.krb5.internal.HostAddresses: int hashCode> = 0;
        $r2 = newarray (sun.security.krb5.internal.HostAddress)[1];
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = $r2;
        $r3 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r1 = new sun.security.krb5.internal.HostAddress;
        specialinvoke $r1.<sun.security.krb5.internal.HostAddress: void <init>()>();
        $r3[0] = $r1;
        return;
    }

    private void <init>(int)
    {
        sun.security.krb5.internal.HostAddresses r0;
        int i0;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = null;
        r0.<sun.security.krb5.internal.HostAddresses: int hashCode> = 0;
        return;
    }

    public void <init>(sun.security.krb5.PrincipalName) throws java.net.UnknownHostException, sun.security.krb5.KrbException
    {
        sun.security.krb5.internal.HostAddresses r0;
        sun.security.krb5.PrincipalName r1;
        java.lang.String[] r2;
        java.lang.String r3;
        java.net.InetAddress[] r4;
        sun.security.krb5.internal.HostAddress[] r5;
        int i0, $i1, $i2, $i3, $i4;
        sun.security.krb5.KrbException $r6;
        sun.security.krb5.internal.HostAddress $r7;
        java.net.InetAddress $r8;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        r1 := @parameter0: sun.security.krb5.PrincipalName;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = null;
        r0.<sun.security.krb5.internal.HostAddresses: int hashCode> = 0;
        r2 = virtualinvoke r1.<sun.security.krb5.PrincipalName: java.lang.String[] getNameStrings()>();
        $i1 = virtualinvoke r1.<sun.security.krb5.PrincipalName: int getNameType()>();
        if $i1 != 3 goto label0;

        $i2 = lengthof r2;
        if $i2 >= 2 goto label1;

     label0:
        $r6 = new sun.security.krb5.KrbException;
        specialinvoke $r6.<sun.security.krb5.KrbException: void <init>(int,java.lang.String)>(60, "Bad name");
        throw $r6;

     label1:
        r3 = r2[1];
        r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>(r3);
        $i3 = lengthof r4;
        r5 = newarray (sun.security.krb5.internal.HostAddress)[$i3];
        i0 = 0;

     label2:
        $i4 = lengthof r4;
        if i0 >= $i4 goto label3;

        $r7 = new sun.security.krb5.internal.HostAddress;
        $r8 = r4[i0];
        specialinvoke $r7.<sun.security.krb5.internal.HostAddress: void <init>(java.net.InetAddress)>($r8);
        r5[i0] = $r7;
        i0 = i0 + 1;
        goto label2;

     label3:
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = r5;
        return;
    }

    public java.lang.Object clone()
    {
        sun.security.krb5.internal.HostAddresses r0, $r1, r2;
        int i0, $i1, $i2;
        sun.security.krb5.internal.HostAddress[] $r3, $r4, $r5, $r6, $r7, $r8;
        sun.security.krb5.internal.HostAddress $r9, $r11;
        java.lang.Object $r10;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        $r1 = new sun.security.krb5.internal.HostAddresses;
        specialinvoke $r1.<sun.security.krb5.internal.HostAddresses: void <init>(int)>(0);
        r2 = $r1;
        $r3 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r3 == null goto label1;

        $r4 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i1 = lengthof $r4;
        $r5 = newarray (sun.security.krb5.internal.HostAddress)[$i1];
        r2.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = $r5;
        i0 = 0;

     label0:
        $r6 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i2 = lengthof $r6;
        if i0 >= $i2 goto label1;

        $r7 = r2.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r8 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r9 = $r8[i0];
        $r10 = virtualinvoke $r9.<sun.security.krb5.internal.HostAddress: java.lang.Object clone()>();
        $r11 = (sun.security.krb5.internal.HostAddress) $r10;
        $r7[i0] = $r11;
        i0 = i0 + 1;
        goto label0;

     label1:
        return r2;
    }

    public boolean inList(sun.security.krb5.internal.HostAddress)
    {
        sun.security.krb5.internal.HostAddresses r0;
        sun.security.krb5.internal.HostAddress r1, $r5;
        int i0, $i1;
        sun.security.krb5.internal.HostAddress[] $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        r1 := @parameter0: sun.security.krb5.internal.HostAddress;
        $r2 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r2 == null goto label2;

        i0 = 0;

     label0:
        $r3 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i1 = lengthof $r3;
        if i0 >= $i1 goto label2;

        $r4 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r5 = $r4[i0];
        $z0 = virtualinvoke $r5.<sun.security.krb5.internal.HostAddress: boolean equals(java.lang.Object)>(r1);
        if $z0 == 0 goto label1;

        return 1;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return 0;
    }

    public int hashCode()
    {
        sun.security.krb5.internal.HostAddresses r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        sun.security.krb5.internal.HostAddress[] $r1, $r2, $r3;
        sun.security.krb5.internal.HostAddress $r4;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        $i2 = r0.<sun.security.krb5.internal.HostAddresses: int hashCode>;
        if $i2 != 0 goto label2;

        i0 = 17;
        $r1 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r1 == null goto label1;

        i1 = 0;

     label0:
        $r2 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i3 = lengthof $r2;
        if i1 >= $i3 goto label1;

        $i4 = 37 * i0;
        $r3 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r4 = $r3[i1];
        $i5 = virtualinvoke $r4.<sun.security.krb5.internal.HostAddress: int hashCode()>();
        i0 = $i4 + $i5;
        i1 = i1 + 1;
        goto label0;

     label1:
        r0.<sun.security.krb5.internal.HostAddresses: int hashCode> = i0;

     label2:
        $i6 = r0.<sun.security.krb5.internal.HostAddresses: int hashCode>;
        return $i6;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.krb5.internal.HostAddresses r0, r2;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        sun.security.krb5.internal.HostAddress[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        sun.security.krb5.internal.HostAddress $r13, $r15;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.security.krb5.internal.HostAddresses;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (sun.security.krb5.internal.HostAddresses) r1;
        $r3 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r3 != null goto label2;

        $r4 = r2.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r4 != null goto label3;

     label2:
        $r5 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r5 == null goto label4;

        $r6 = r2.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r6 != null goto label4;

     label3:
        return 0;

     label4:
        $r7 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r7 == null goto label8;

        $r8 = r2.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r8 == null goto label8;

        $r9 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i1 = lengthof $r9;
        $r10 = r2.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i2 = lengthof $r10;
        if $i1 == $i2 goto label5;

        return 0;

     label5:
        i0 = 0;

     label6:
        $r11 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i3 = lengthof $r11;
        if i0 >= $i3 goto label8;

        $r12 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r13 = $r12[i0];
        $r14 = r2.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r15 = $r14[i0];
        $z1 = virtualinvoke $r13.<sun.security.krb5.internal.HostAddress: boolean equals(java.lang.Object)>($r15);
        if $z1 != 0 goto label7;

        return 0;

     label7:
        i0 = i0 + 1;
        goto label6;

     label8:
        return 1;
    }

    public void <init>(sun.security.util.DerValue) throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.internal.HostAddresses r0;
        sun.security.util.DerValue r1, r6;
        java.util.Vector r2, $r3;
        null_type n0;
        sun.security.util.DerInputStream $r4, $r5;
        int $i0, $i1, $i2;
        sun.security.krb5.internal.HostAddress $r7;
        sun.security.krb5.internal.HostAddress[] $r8, $r9;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = null;
        r0.<sun.security.krb5.internal.HostAddresses: int hashCode> = 0;
        $r3 = new java.util.Vector;
        specialinvoke $r3.<java.util.Vector: void <init>()>();
        r2 = $r3;
        n0 = null;

     label0:
        $r4 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i0 = virtualinvoke $r4.<sun.security.util.DerInputStream: int available()>();
        if $i0 <= 0 goto label1;

        $r5 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r6 = virtualinvoke $r5.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r7 = new sun.security.krb5.internal.HostAddress;
        specialinvoke $r7.<sun.security.krb5.internal.HostAddress: void <init>(sun.security.util.DerValue)>(r6);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r7);
        goto label0;

     label1:
        $i1 = virtualinvoke r2.<java.util.Vector: int size()>();
        if $i1 <= 0 goto label2;

        $i2 = virtualinvoke r2.<java.util.Vector: int size()>();
        $r8 = newarray (sun.security.krb5.internal.HostAddress)[$i2];
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = $r8;
        $r9 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        virtualinvoke r2.<java.util.Vector: void copyInto(java.lang.Object[])>($r9);

     label2:
        return;
    }

    public byte[] asn1Encode() throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.internal.HostAddresses r0;
        sun.security.util.DerOutputStream $r1, r2, r3, $r4;
        int i0, $i1, $i2;
        sun.security.krb5.internal.HostAddress[] $r5, $r6, $r7, $r8;
        sun.security.krb5.internal.HostAddress $r9;
        byte[] $r10, $r11;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        $r1 = new sun.security.util.DerOutputStream;
        specialinvoke $r1.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r1;
        $r4 = new sun.security.util.DerOutputStream;
        specialinvoke $r4.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r4;
        $r5 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r5 == null goto label1;

        $r6 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i1 = lengthof $r6;
        if $i1 <= 0 goto label1;

        i0 = 0;

     label0:
        $r7 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i2 = lengthof $r7;
        if i0 >= $i2 goto label1;

        $r8 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r9 = $r8[i0];
        $r10 = virtualinvoke $r9.<sun.security.krb5.internal.HostAddress: byte[] asn1Encode()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte[])>($r10);
        i0 = i0 + 1;
        goto label0;

     label1:
        virtualinvoke r3.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r2);
        $r11 = virtualinvoke r3.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        return $r11;
    }

    public static sun.security.krb5.internal.HostAddresses parse(sun.security.util.DerInputStream, byte, boolean) throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.util.DerInputStream r0, $r4;
        byte b0, $b2, $b3, $b4, $b5;
        boolean z0;
        sun.security.util.DerValue r1, r2;
        int $i1;
        sun.security.krb5.Asn1Exception $r3;
        sun.security.krb5.internal.HostAddresses $r5;

        r0 := @parameter0: sun.security.util.DerInputStream;
        b0 := @parameter1: byte;
        z0 := @parameter2: boolean;
        if z0 == 0 goto label0;

        $i1 = virtualinvoke r0.<sun.security.util.DerInputStream: int peekByte()>();
        $b2 = (byte) $i1;
        $b3 = $b2 & 31;
        if $b3 == b0 goto label0;

        return null;

     label0:
        r1 = virtualinvoke r0.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b4 = virtualinvoke r1.<sun.security.util.DerValue: byte getTag()>();
        $b5 = $b4 & 31;
        if b0 == $b5 goto label1;

        $r3 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r3.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r3;

     label1:
        $r4 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r2 = virtualinvoke $r4.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r5 = new sun.security.krb5.internal.HostAddresses;
        specialinvoke $r5.<sun.security.krb5.internal.HostAddresses: void <init>(sun.security.util.DerValue)>(r2);
        return $r5;
    }

    public void writeAddrs(sun.security.krb5.internal.ccache.CCacheOutputStream) throws java.io.IOException
    {
        sun.security.krb5.internal.HostAddresses r0;
        sun.security.krb5.internal.ccache.CCacheOutputStream r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        sun.security.krb5.internal.HostAddress[] $r2, $r3, $r4, $r6, $r9, $r12;
        sun.security.krb5.internal.HostAddress $r5, $r7, $r10, $r13;
        byte[] $r8, $r11, $r14;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        r1 := @parameter0: sun.security.krb5.internal.ccache.CCacheOutputStream;
        $r2 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i1 = lengthof $r2;
        virtualinvoke r1.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>($i1);
        i0 = 0;

     label0:
        $r3 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i2 = lengthof $r3;
        if i0 >= $i2 goto label1;

        $r4 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r5 = $r4[i0];
        $i3 = $r5.<sun.security.krb5.internal.HostAddress: int addrType>;
        virtualinvoke r1.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write16(int)>($i3);
        $r6 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r7 = $r6[i0];
        $r8 = $r7.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $i4 = lengthof $r8;
        virtualinvoke r1.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write32(int)>($i4);
        $r9 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r10 = $r9[i0];
        $r11 = $r10.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $r12 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r13 = $r12[i0];
        $r14 = $r13.<sun.security.krb5.internal.HostAddress: byte[] address>;
        $i5 = lengthof $r14;
        virtualinvoke r1.<sun.security.krb5.internal.ccache.CCacheOutputStream: void write(byte[],int,int)>($r11, 0, $i5);
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }

    public java.net.InetAddress[] getInetAddresses()
    {
        sun.security.krb5.internal.HostAddresses r0;
        java.util.ArrayList r1, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.net.UnknownHostException r2, $r15;
        sun.security.krb5.internal.HostAddress[] $r3, $r4, $r6, $r7, $r8, $r10, $r12;
        sun.security.krb5.internal.HostAddress $r9, $r11, $r13;
        java.net.InetAddress $r14;
        java.net.InetAddress[] r16, $r18;
        java.lang.Object[] $r17;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        $r3 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        if $r3 == null goto label0;

        $r4 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i1 = lengthof $r4;
        if $i1 != 0 goto label1;

     label0:
        return null;

     label1:
        $r5 = new java.util.ArrayList;
        $r6 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i2 = lengthof $r6;
        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i2);
        r1 = $r5;
        i0 = 0;

     label2:
        $r7 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $i3 = lengthof $r7;
        if i0 >= $i3 goto label8;

     label3:
        $r8 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r9 = $r8[i0];
        $i4 = $r9.<sun.security.krb5.internal.HostAddress: int addrType>;
        if $i4 == 2 goto label4;

        $r10 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r11 = $r10[i0];
        $i5 = $r11.<sun.security.krb5.internal.HostAddress: int addrType>;
        if $i5 != 24 goto label5;

     label4:
        $r12 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r13 = $r12[i0];
        $r14 = virtualinvoke $r13.<sun.security.krb5.internal.HostAddress: java.net.InetAddress getInetAddress()>();
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;
        r2 = $r15;
        return null;

     label7:
        i0 = i0 + 1;
        goto label2;

     label8:
        $i6 = virtualinvoke r1.<java.util.ArrayList: int size()>();
        r16 = newarray (java.net.InetAddress)[$i6];
        $r17 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r16);
        $r18 = (java.net.InetAddress[]) $r17;
        return $r18;

        catch java.net.UnknownHostException from label3 to label5 with label6;
    }

    public static sun.security.krb5.internal.HostAddresses getLocalAddresses() throws java.io.IOException
    {
        null_type n0, n1;
        java.net.InetAddress r0, $r5, $r15, $r18, $r20;
        sun.security.krb5.internal.HostAddress[] r1;
        int i0, $i1, $i2, i3, $i4;
        sun.security.krb5.internal.HostAddress $r2;
        java.lang.String r3, $r11, $r17, $r26;
        java.net.InetAddress[] r4;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r6, $r12, $r19, $r21;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r13, $r14, $r16;
        sun.security.krb5.internal.HostAddresses $r22;
        java.lang.Exception $r23, r24;
        java.io.IOException $r25;

        n0 = null;
        n1 = null;

     label0:
        r0 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();
        r3 = virtualinvoke r0.<java.net.InetAddress: java.lang.String getHostName()>();
        r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>(r3);
        $i1 = lengthof r4;
        r1 = newarray (sun.security.krb5.internal.HostAddress)[$i1];
        i0 = 0;

     label1:
        $i2 = lengthof r4;
        if i0 >= $i2 goto label2;

        $r2 = new sun.security.krb5.internal.HostAddress;
        $r5 = r4[i0];
        specialinvoke $r2.<sun.security.krb5.internal.HostAddress: void <init>(java.net.InetAddress)>($r5);
        r1[i0] = $r2;
        i0 = i0 + 1;
        goto label1;

     label2:
        $z0 = <sun.security.krb5.internal.HostAddresses: boolean DEBUG>;
        if $z0 == 0 goto label6;

        $r6 = <java.lang.System: java.io.PrintStream out>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> KrbKdcReq local addresses for ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" are: ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11);
        i3 = 0;

     label3:
        $i4 = lengthof r4;
        if i3 >= $i4 goto label6;

        $r12 = <java.lang.System: java.io.PrintStream out>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t");
        $r15 = r4[i3];
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);
        $r18 = r4[i3];
        $z1 = $r18 instanceof java.net.Inet4Address;
        if $z1 == 0 goto label4;

        $r19 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("IPv4 address");

     label4:
        $r20 = r4[i3];
        $z2 = $r20 instanceof java.net.Inet6Address;
        if $z2 == 0 goto label5;

        $r21 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("IPv6 address");

     label5:
        i3 = i3 + 1;
        goto label3;

     label6:
        $r22 = new sun.security.krb5.internal.HostAddresses;
        specialinvoke $r22.<sun.security.krb5.internal.HostAddresses: void <init>(sun.security.krb5.internal.HostAddress[])>(r1);

     label7:
        return $r22;

     label8:
        $r23 := @caughtexception;
        r24 = $r23;
        $r25 = new java.io.IOException;
        $r26 = virtualinvoke r24.<java.lang.Exception: java.lang.String toString()>();
        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>($r26);
        throw $r25;

        catch java.lang.Exception from label0 to label7 with label8;
    }

    public void <init>(java.net.InetAddress[])
    {
        sun.security.krb5.internal.HostAddresses r0;
        java.net.InetAddress[] r1;
        int i0, $i1, $i2;
        sun.security.krb5.internal.HostAddress $r2;
        sun.security.krb5.internal.HostAddress[] $r3, $r4;
        java.net.InetAddress $r5;

        r0 := @this: sun.security.krb5.internal.HostAddresses;
        r1 := @parameter0: java.net.InetAddress[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = null;
        r0.<sun.security.krb5.internal.HostAddresses: int hashCode> = 0;
        if r1 != null goto label0;

        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = null;
        return;

     label0:
        $i1 = lengthof r1;
        $r3 = newarray (sun.security.krb5.internal.HostAddress)[$i1];
        r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses> = $r3;
        i0 = 0;

     label1:
        $i2 = lengthof r1;
        if i0 >= $i2 goto label2;

        $r4 = r0.<sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddress[] addresses>;
        $r2 = new sun.security.krb5.internal.HostAddress;
        $r5 = r1[i0];
        specialinvoke $r2.<sun.security.krb5.internal.HostAddress: void <init>(java.net.InetAddress)>($r5);
        $r4[i0] = $r2;
        i0 = i0 + 1;
        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        <sun.security.krb5.internal.HostAddresses: boolean DEBUG> = $z0;
        return;
    }
}
