class sun.misc.Launcher$Factory extends java.lang.Object implements java.net.URLStreamHandlerFactory
{
    private static java.lang.String PREFIX;

    private void <init>()
    {
        sun.misc.Launcher$Factory r0;

        r0 := @this: sun.misc.Launcher$Factory;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.net.URLStreamHandler createURLStreamHandler(java.lang.String)
    {
        sun.misc.Launcher$Factory r0;
        java.lang.String r1, r3, $r6, $r23;
        java.lang.StringBuilder $r2, $r5, $r7, $r8, $r9, $r10, $r20, $r21, $r22;
        java.lang.Class r4;
        java.lang.Object $r11;
        java.net.URLStreamHandler $r12;
        java.lang.ClassNotFoundException $r13, r14;
        java.lang.InstantiationException $r15, r16;
        java.lang.IllegalAccessException $r17, r18;
        java.lang.InternalError $r19;

        r0 := @this: sun.misc.Launcher$Factory;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r6 = <sun.misc.Launcher$Factory: java.lang.String PREFIX>;
        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".Handler");
        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r3);
        $r11 = virtualinvoke r4.<java.lang.Class: java.lang.Object newInstance()>();
        $r12 = (java.net.URLStreamHandler) $r11;

     label1:
        return $r12;

     label2:
        $r13 := @caughtexception;
        r14 = $r13;
        virtualinvoke r14.<java.lang.ClassNotFoundException: void printStackTrace()>();
        goto label5;

     label3:
        $r15 := @caughtexception;
        r16 = $r15;
        virtualinvoke r16.<java.lang.InstantiationException: void printStackTrace()>();
        goto label5;

     label4:
        $r17 := @caughtexception;
        r18 = $r17;
        virtualinvoke r18.<java.lang.IllegalAccessException: void printStackTrace()>();

     label5:
        $r19 = new java.lang.InternalError;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not load ");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("system protocol handler");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r19.<java.lang.InternalError: void <init>(java.lang.String)>($r23);
        throw $r19;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
        catch java.lang.InstantiationException from label0 to label1 with label3;
        catch java.lang.IllegalAccessException from label0 to label1 with label4;
    }

    void <init>(sun.misc.Launcher$1)
    {
        sun.misc.Launcher$Factory r0;
        sun.misc.Launcher$1 r1;

        r0 := @this: sun.misc.Launcher$Factory;
        r1 := @parameter0: sun.misc.Launcher$1;
        specialinvoke r0.<sun.misc.Launcher$Factory: void <init>()>();
        return;
    }

    static void <clinit>()
    {
        <sun.misc.Launcher$Factory: java.lang.String PREFIX> = "sun.net.www.protocol";
        return;
    }
}
