public class org.apache.catalina.connector.OutputBuffer extends java.io.Writer implements org.apache.tomcat.util.buf.ByteChunk$ByteOutputChannel, org.apache.tomcat.util.buf.CharChunk$CharOutputChannel
{
    public static final java.lang.String DEFAULT_ENCODING;
    public static final int DEFAULT_BUFFER_SIZE;
    private final org.apache.tomcat.util.buf.ByteChunk bb;
    private final org.apache.tomcat.util.buf.CharChunk cb;
    private boolean initial;
    private long bytesWritten;
    private long charsWritten;
    private boolean closed;
    private boolean doFlush;
    private final org.apache.tomcat.util.buf.ByteChunk outputChunk;
    private org.apache.tomcat.util.buf.CharChunk outputCharChunk;
    private java.lang.String enc;
    private boolean gotEnc;
    protected final java.util.concurrent.ConcurrentHashMap encoders;
    protected org.apache.tomcat.util.buf.C2BConverter conv;
    private org.apache.coyote.Response coyoteResponse;
    private boolean suspended;

    public void <init>()
    {
        org.apache.catalina.connector.OutputBuffer r0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        specialinvoke r0.<org.apache.catalina.connector.OutputBuffer: void <init>(int)>(8192);
        return;
    }

    public void <init>(int)
    {
        org.apache.catalina.connector.OutputBuffer r0;
        int i0;
        org.apache.tomcat.util.buf.ByteChunk $r1, $r4, $r5, $r6;
        org.apache.tomcat.util.buf.CharChunk $r2, $r7, $r8, $r9, $r10;
        java.util.concurrent.ConcurrentHashMap $r3;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        i0 := @parameter0: int;
        specialinvoke r0.<java.io.Writer: void <init>()>();
        r0.<org.apache.catalina.connector.OutputBuffer: boolean initial> = 1;
        r0.<org.apache.catalina.connector.OutputBuffer: long bytesWritten> = 0L;
        r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten> = 0L;
        r0.<org.apache.catalina.connector.OutputBuffer: boolean closed> = 0;
        r0.<org.apache.catalina.connector.OutputBuffer: boolean doFlush> = 0;
        $r1 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: void <init>()>();
        r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk outputChunk> = $r1;
        $r2 = new org.apache.tomcat.util.buf.CharChunk;
        specialinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: void <init>()>();
        r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk outputCharChunk> = $r2;
        r0.<org.apache.catalina.connector.OutputBuffer: boolean gotEnc> = 0;
        $r3 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        r0.<org.apache.catalina.connector.OutputBuffer: java.util.concurrent.ConcurrentHashMap encoders> = $r3;
        r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended> = 0;
        $r4 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: void <init>(int)>(i0);
        r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb> = $r4;
        $r5 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: void setLimit(int)>(i0);
        $r6 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r6.<org.apache.tomcat.util.buf.ByteChunk: void setByteOutputChannel(org.apache.tomcat.util.buf.ByteChunk$ByteOutputChannel)>(r0);
        $r7 = new org.apache.tomcat.util.buf.CharChunk;
        specialinvoke $r7.<org.apache.tomcat.util.buf.CharChunk: void <init>(int)>(i0);
        r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb> = $r7;
        $r8 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r8.<org.apache.tomcat.util.buf.CharChunk: void setLimit(int)>(i0);
        $r9 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r9.<org.apache.tomcat.util.buf.CharChunk: void setOptimizedWrite(boolean)>(0);
        $r10 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r10.<org.apache.tomcat.util.buf.CharChunk: void setCharOutputChannel(org.apache.tomcat.util.buf.CharChunk$CharOutputChannel)>(r0);
        return;
    }

    public void setResponse(org.apache.coyote.Response)
    {
        org.apache.catalina.connector.OutputBuffer r0;
        org.apache.coyote.Response r1;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r1 := @parameter0: org.apache.coyote.Response;
        r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse> = r1;
        return;
    }

    public org.apache.coyote.Response getResponse()
    {
        org.apache.catalina.connector.OutputBuffer r0;
        org.apache.coyote.Response $r1;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        $r1 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        return $r1;
    }

    public boolean isSuspended()
    {
        org.apache.catalina.connector.OutputBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended>;
        return $z0;
    }

    public void setSuspended(boolean)
    {
        org.apache.catalina.connector.OutputBuffer r0;
        boolean z0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended> = z0;
        return;
    }

    public boolean isClosed()
    {
        org.apache.catalina.connector.OutputBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean closed>;
        return $z0;
    }

    public void recycle()
    {
        org.apache.catalina.connector.OutputBuffer r0;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        org.apache.tomcat.util.buf.CharChunk $r2, $r3;
        org.apache.tomcat.util.buf.C2BConverter $r4, $r5;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r0.<org.apache.catalina.connector.OutputBuffer: boolean initial> = 1;
        r0.<org.apache.catalina.connector.OutputBuffer: long bytesWritten> = 0L;
        r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten> = 0L;
        $r1 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: void recycle()>();
        $r2 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: void recycle()>();
        $r3 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk outputCharChunk>;
        virtualinvoke $r3.<org.apache.tomcat.util.buf.CharChunk: void setChars(char[],int,int)>(null, 0, 0);
        r0.<org.apache.catalina.connector.OutputBuffer: boolean closed> = 0;
        r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended> = 0;
        r0.<org.apache.catalina.connector.OutputBuffer: boolean doFlush> = 0;
        $r4 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.C2BConverter conv>;
        if $r4 == null goto label0;

        $r5 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.C2BConverter conv>;
        virtualinvoke $r5.<org.apache.tomcat.util.buf.C2BConverter: void recycle()>();

     label0:
        r0.<org.apache.catalina.connector.OutputBuffer: boolean gotEnc> = 0;
        r0.<org.apache.catalina.connector.OutputBuffer: java.lang.String enc> = null;
        return;
    }

    public void clearEncoders()
    {
        org.apache.catalina.connector.OutputBuffer r0;
        java.util.concurrent.ConcurrentHashMap $r1;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        $r1 = r0.<org.apache.catalina.connector.OutputBuffer: java.util.concurrent.ConcurrentHashMap encoders>;
        virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void clear()>();
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        org.apache.catalina.connector.Request r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.tomcat.util.buf.CharChunk $r2, $r3;
        int $i0, $i3, $i5;
        org.apache.coyote.Response $r4, $r5, $r6, $r9, $r10, $r12, $r13, $r17;
        long $l1, $l4;
        byte $b2;
        org.apache.coyote.Request $r7, $r14;
        org.apache.tomcat.util.buf.MessageBytes $r8;
        org.apache.tomcat.util.buf.ByteChunk $r11;
        java.lang.Object $r15;
        org.apache.catalina.connector.InputBuffer $r16;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $z1 = r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended>;
        if $z1 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i0 = virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        if $i0 <= 0 goto label2;

        $r3 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r3.<org.apache.tomcat.util.buf.CharChunk: void flushBuffer()>();

     label2:
        $r4 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $z2 = virtualinvoke $r4.<org.apache.coyote.Response: boolean isCommitted()>();
        if $z2 != 0 goto label3;

        $r5 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $l1 = virtualinvoke $r5.<org.apache.coyote.Response: long getContentLengthLong()>();
        $b2 = $l1 cmp -1L;
        if $b2 != 0 goto label3;

        $r6 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $r7 = virtualinvoke $r6.<org.apache.coyote.Response: org.apache.coyote.Request getRequest()>();
        $r8 = virtualinvoke $r7.<org.apache.coyote.Request: org.apache.tomcat.util.buf.MessageBytes method()>();
        $z3 = virtualinvoke $r8.<org.apache.tomcat.util.buf.MessageBytes: boolean equals(java.lang.String)>("HEAD");
        if $z3 != 0 goto label3;

        $r9 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $z4 = virtualinvoke $r9.<org.apache.coyote.Response: boolean isCommitted()>();
        if $z4 != 0 goto label3;

        $r10 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $r11 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i3 = virtualinvoke $r11.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        $l4 = (long) $i3;
        virtualinvoke $r10.<org.apache.coyote.Response: void setContentLength(long)>($l4);

     label3:
        $r12 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $i5 = virtualinvoke $r12.<org.apache.coyote.Response: int getStatus()>();
        if $i5 != 101 goto label4;

        virtualinvoke r0.<org.apache.catalina.connector.OutputBuffer: void doFlush(boolean)>(1);
        goto label5;

     label4:
        virtualinvoke r0.<org.apache.catalina.connector.OutputBuffer: void doFlush(boolean)>(0);

     label5:
        r0.<org.apache.catalina.connector.OutputBuffer: boolean closed> = 1;
        $r13 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $r14 = virtualinvoke $r13.<org.apache.coyote.Response: org.apache.coyote.Request getRequest()>();
        $r15 = virtualinvoke $r14.<org.apache.coyote.Request: java.lang.Object getNote(int)>(1);
        r1 = (org.apache.catalina.connector.Request) $r15;
        $r16 = r1.<org.apache.catalina.connector.Request: org.apache.catalina.connector.InputBuffer inputBuffer>;
        virtualinvoke $r16.<org.apache.catalina.connector.InputBuffer: void close()>();
        $r17 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        virtualinvoke $r17.<org.apache.coyote.Response: void finish()>();
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        virtualinvoke r0.<org.apache.catalina.connector.OutputBuffer: void doFlush(boolean)>(1);
        return;
    }

    protected void doFlush(boolean) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.Throwable r1, $r7;
        org.apache.coyote.Response $r2, $r8, $r10, $r12;
        org.apache.tomcat.util.buf.CharChunk $r3, $r4;
        int $i0, $i1;
        org.apache.tomcat.util.buf.ByteChunk $r5, $r6;
        org.apache.coyote.ActionCode $r9;
        org.apache.catalina.connector.ClientAbortException $r11;
        java.lang.Exception $r13;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        z0 := @parameter0: boolean;
        $z1 = r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended>;
        if $z1 == 0 goto label0;

        return;

     label0:
        r0.<org.apache.catalina.connector.OutputBuffer: boolean doFlush> = 1;
        $z2 = r0.<org.apache.catalina.connector.OutputBuffer: boolean initial>;
        if $z2 == 0 goto label1;

        $r2 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        virtualinvoke $r2.<org.apache.coyote.Response: void sendHeaders()>();
        r0.<org.apache.catalina.connector.OutputBuffer: boolean initial> = 0;

     label1:
        $r3 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $i0 = virtualinvoke $r3.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        if $i0 <= 0 goto label2;

        $r4 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r4.<org.apache.tomcat.util.buf.CharChunk: void flushBuffer()>();

     label2:
        $r5 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i1 = virtualinvoke $r5.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        if $i1 <= 0 goto label4;

        $r6 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r6.<org.apache.tomcat.util.buf.ByteChunk: void flushBuffer()>();
        goto label4;

     label3:
        $r7 := @caughtexception;
        r1 = $r7;
        r0.<org.apache.catalina.connector.OutputBuffer: boolean doFlush> = 0;
        throw r1;

     label4:
        r0.<org.apache.catalina.connector.OutputBuffer: boolean doFlush> = 0;
        if z0 == 0 goto label5;

        $r8 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $r9 = <org.apache.coyote.ActionCode: org.apache.coyote.ActionCode CLIENT_FLUSH>;
        virtualinvoke $r8.<org.apache.coyote.Response: void action(org.apache.coyote.ActionCode,java.lang.Object)>($r9, null);
        $r10 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $z3 = virtualinvoke $r10.<org.apache.coyote.Response: boolean isExceptionPresent()>();
        if $z3 == 0 goto label5;

        $r11 = new org.apache.catalina.connector.ClientAbortException;
        $r12 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $r13 = virtualinvoke $r12.<org.apache.coyote.Response: java.lang.Exception getErrorException()>();
        specialinvoke $r11.<org.apache.catalina.connector.ClientAbortException: void <init>(java.lang.Throwable)>($r13);
        throw $r11;

     label5:
        return;

        catch java.lang.Throwable from label0 to label3 with label3;
    }

    public void realWriteBytes(byte[], int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        byte[] r1;
        int i0, i1;
        java.io.IOException r2, $r7;
        boolean $z0;
        org.apache.coyote.Response $r3, $r5;
        org.apache.tomcat.util.buf.ByteChunk $r4, $r6;
        org.apache.catalina.connector.ClientAbortException $r8;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r3 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        if $r3 != null goto label1;

        return;

     label1:
        if i1 <= 0 goto label5;

        $r4 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk outputChunk>;
        virtualinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>(r1, i0, i1);

     label2:
        $r5 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $r6 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk outputChunk>;
        virtualinvoke $r5.<org.apache.coyote.Response: void doWrite(org.apache.tomcat.util.buf.ByteChunk)>($r6);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;
        r2 = $r7;
        $r8 = new org.apache.catalina.connector.ClientAbortException;
        specialinvoke $r8.<org.apache.catalina.connector.ClientAbortException: void <init>(java.lang.Throwable)>(r2);
        throw $r8;

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        byte[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended>;
        if $z0 == 0 goto label0;

        return;

     label0:
        specialinvoke r0.<org.apache.catalina.connector.OutputBuffer: void writeBytes(byte[],int,int)>(r1, i0, i1);
        return;
    }

    private void writeBytes(byte[], int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        byte[] r1;
        int i0, i1;
        boolean $z0, $z1;
        org.apache.tomcat.util.buf.ByteChunk $r2, $r4;
        long $l2, $l3, $l4;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean closed>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r2 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.ByteChunk: void append(byte[],int,int)>(r1, i0, i1);
        $l2 = r0.<org.apache.catalina.connector.OutputBuffer: long bytesWritten>;
        $l3 = (long) i1;
        $l4 = $l2 + $l3;
        r0.<org.apache.catalina.connector.OutputBuffer: long bytesWritten> = $l4;
        $z1 = r0.<org.apache.catalina.connector.OutputBuffer: boolean doFlush>;
        if $z1 == 0 goto label1;

        $r4 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r4.<org.apache.tomcat.util.buf.ByteChunk: void flushBuffer()>();

     label1:
        return;
    }

    public void writeByte(int) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        int i0;
        boolean $z0;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        byte $b1;
        long $l2, $l3;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        i0 := @parameter0: int;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $b1 = (byte) i0;
        virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: void append(byte)>($b1);
        $l2 = r0.<org.apache.catalina.connector.OutputBuffer: long bytesWritten>;
        $l3 = $l2 + 1L;
        r0.<org.apache.catalina.connector.OutputBuffer: long bytesWritten> = $l3;
        return;
    }

    public void realWriteChars(char[], int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.apache.tomcat.util.buf.CharChunk $r2, $r4, $r7, $r14, $r20;
        org.apache.tomcat.util.buf.C2BConverter $r3, $r16;
        org.apache.tomcat.util.buf.ByteChunk $r5, $r6, $r8, $r10, $r11, $r12, $r13, $r15, $r17, $r18, $r19;
        byte[] $r9;
        boolean $z0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk outputCharChunk>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: void setChars(char[],int,int)>(r1, i0, i1);
        goto label4;

     label0:
        $r3 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.C2BConverter conv>;
        $r4 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk outputCharChunk>;
        $r5 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r3.<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>($r4, $r5);
        $r6 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i2 = virtualinvoke $r6.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        if $i2 != 0 goto label1;

        goto label5;

     label1:
        $r7 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk outputCharChunk>;
        $i3 = virtualinvoke $r7.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        if $i3 <= 0 goto label3;

        $r8 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $r9 = virtualinvoke $r8.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBuffer()>();
        $i4 = lengthof $r9;
        $r10 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i5 = virtualinvoke $r10.<org.apache.tomcat.util.buf.ByteChunk: int getEnd()>();
        if $i4 != $i5 goto label2;

        $r11 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i6 = virtualinvoke $r11.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        $r12 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i7 = virtualinvoke $r12.<org.apache.tomcat.util.buf.ByteChunk: int getLimit()>();
        if $i6 >= $i7 goto label2;

        $r13 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $r14 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk outputCharChunk>;
        $i8 = virtualinvoke $r14.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        virtualinvoke $r13.<org.apache.tomcat.util.buf.ByteChunk: void makeSpace(int)>($i8);
        goto label4;

     label2:
        $r15 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r15.<org.apache.tomcat.util.buf.ByteChunk: void flushBuffer()>();
        goto label4;

     label3:
        $r16 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.C2BConverter conv>;
        $z0 = virtualinvoke $r16.<org.apache.tomcat.util.buf.C2BConverter: boolean isUndeflow()>();
        if $z0 == 0 goto label4;

        $r17 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i9 = virtualinvoke $r17.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        $i10 = $i9 - 4;
        $r18 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i11 = virtualinvoke $r18.<org.apache.tomcat.util.buf.ByteChunk: int getLimit()>();
        if $i10 >= $i11 goto label4;

        $r19 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r19.<org.apache.tomcat.util.buf.ByteChunk: void flushBuffer()>();

     label4:
        $r20 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk outputCharChunk>;
        $i12 = virtualinvoke $r20.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        if $i12 > 0 goto label0;

     label5:
        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        int i0;
        boolean $z0;
        org.apache.tomcat.util.buf.CharChunk $r1;
        char $c1;
        long $l2, $l3;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        i0 := @parameter0: int;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        $c1 = (char) i0;
        virtualinvoke $r1.<org.apache.tomcat.util.buf.CharChunk: void append(char)>($c1);
        $l2 = r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten>;
        $l3 = $l2 + 1L;
        r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten> = $l3;
        return;
    }

    public void write(char[]) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        char[] r1;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r1 := @parameter0: char[];
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $i0 = lengthof r1;
        virtualinvoke r0.<org.apache.catalina.connector.OutputBuffer: void write(char[],int,int)>(r1, 0, $i0);
        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        char[] r1;
        int i0, i1;
        boolean $z0;
        org.apache.tomcat.util.buf.CharChunk $r2;
        long $l2, $l3, $l4;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r2 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: void append(char[],int,int)>(r1, i0, i1);
        $l2 = r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten>;
        $l3 = (long) i1;
        $l4 = $l2 + $l3;
        r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten> = $l4;
        return;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        java.lang.String r1;
        int i0, i1;
        boolean $z0;
        long $l2, $l3, $l4, $l5, $l6, $l7;
        org.apache.tomcat.util.buf.CharChunk $r3;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $l2 = r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten>;
        $l3 = (long) i1;
        $l4 = $l2 + $l3;
        r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten> = $l4;
        if r1 != null goto label1;

        r1 = "null";

     label1:
        $r3 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r3.<org.apache.tomcat.util.buf.CharChunk: void append(java.lang.String,int,int)>(r1, i0, i1);
        $l5 = r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten>;
        $l6 = (long) i1;
        $l7 = $l5 + $l6;
        r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten> = $l7;
        return;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        java.lang.String r1;
        boolean $z0;
        org.apache.tomcat.util.buf.CharChunk $r2;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r1 := @parameter0: java.lang.String;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean suspended>;
        if $z0 == 0 goto label0;

        return;

     label0:
        if r1 != null goto label1;

        r1 = "null";

     label1:
        $r2 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: void append(java.lang.String)>(r1);
        $l0 = r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten>;
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $l2 = (long) $i1;
        $l3 = $l0 + $l2;
        r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten> = $l3;
        return;
    }

    public void setEncoding(java.lang.String)
    {
        org.apache.catalina.connector.OutputBuffer r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.connector.OutputBuffer: java.lang.String enc> = r1;
        return;
    }

    public void checkConverter() throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        $z0 = r0.<org.apache.catalina.connector.OutputBuffer: boolean gotEnc>;
        if $z0 != 0 goto label0;

        virtualinvoke r0.<org.apache.catalina.connector.OutputBuffer: void setConverter()>();

     label0:
        return;
    }

    protected void setConverter() throws java.io.IOException
    {
        org.apache.catalina.connector.OutputBuffer r0;
        java.security.PrivilegedActionException r1, $r15;
        java.lang.Exception r2;
        org.apache.coyote.Response $r3, $r4;
        java.lang.String $r5, $r6, $r8, $r19, $r21;
        java.util.concurrent.ConcurrentHashMap $r7, $r20;
        java.lang.Object $r9, $r13;
        org.apache.tomcat.util.buf.C2BConverter $r10, $r11, $r14, $r18, $r22;
        boolean $z0, $z1;
        org.apache.catalina.connector.OutputBuffer$1 $r12;
        java.io.IOException $r16, $r17;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        $r3 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.coyote.Response coyoteResponse>;
        $r5 = virtualinvoke $r4.<org.apache.coyote.Response: java.lang.String getCharacterEncoding()>();
        r0.<org.apache.catalina.connector.OutputBuffer: java.lang.String enc> = $r5;

     label0:
        r0.<org.apache.catalina.connector.OutputBuffer: boolean gotEnc> = 1;
        $r6 = r0.<org.apache.catalina.connector.OutputBuffer: java.lang.String enc>;
        if $r6 != null goto label1;

        r0.<org.apache.catalina.connector.OutputBuffer: java.lang.String enc> = "ISO-8859-1";

     label1:
        $r7 = r0.<org.apache.catalina.connector.OutputBuffer: java.util.concurrent.ConcurrentHashMap encoders>;
        $r8 = r0.<org.apache.catalina.connector.OutputBuffer: java.lang.String enc>;
        $r9 = virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r8);
        $r10 = (org.apache.tomcat.util.buf.C2BConverter) $r9;
        r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.C2BConverter conv> = $r10;
        $r11 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.C2BConverter conv>;
        if $r11 != null goto label8;

        $z0 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z0 == 0 goto label6;

     label2:
        $r12 = new org.apache.catalina.connector.OutputBuffer$1;
        specialinvoke $r12.<org.apache.catalina.connector.OutputBuffer$1: void <init>(org.apache.catalina.connector.OutputBuffer)>(r0);
        $r13 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r12);
        $r14 = (org.apache.tomcat.util.buf.C2BConverter) $r13;
        r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.C2BConverter conv> = $r14;

     label3:
        goto label7;

     label4:
        $r15 := @caughtexception;
        r1 = $r15;
        r2 = virtualinvoke r1.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $z1 = r2 instanceof java.io.IOException;
        if $z1 == 0 goto label5;

        $r16 = (java.io.IOException) r2;
        throw $r16;

     label5:
        $r17 = new java.io.IOException;
        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.Throwable)>(r1);
        throw $r17;

     label6:
        $r18 = new org.apache.tomcat.util.buf.C2BConverter;
        $r19 = r0.<org.apache.catalina.connector.OutputBuffer: java.lang.String enc>;
        specialinvoke $r18.<org.apache.tomcat.util.buf.C2BConverter: void <init>(java.lang.String)>($r19);
        r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.C2BConverter conv> = $r18;

     label7:
        $r20 = r0.<org.apache.catalina.connector.OutputBuffer: java.util.concurrent.ConcurrentHashMap encoders>;
        $r21 = r0.<org.apache.catalina.connector.OutputBuffer: java.lang.String enc>;
        $r22 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.C2BConverter conv>;
        virtualinvoke $r20.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

     label8:
        return;

        catch java.security.PrivilegedActionException from label2 to label3 with label4;
    }

    public long getContentWritten()
    {
        org.apache.catalina.connector.OutputBuffer r0;
        long $l0, $l1, $l2;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        $l0 = r0.<org.apache.catalina.connector.OutputBuffer: long bytesWritten>;
        $l1 = r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten>;
        $l2 = $l0 + $l1;
        return $l2;
    }

    public boolean isNew()
    {
        org.apache.catalina.connector.OutputBuffer r0;
        long $l0, $l2;
        byte $b1, $b3;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        $l0 = r0.<org.apache.catalina.connector.OutputBuffer: long bytesWritten>;
        $b1 = $l0 cmp 0L;
        if $b1 != 0 goto label0;

        $l2 = r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten>;
        $b3 = $l2 cmp 0L;
        if $b3 != 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public void setBufferSize(int)
    {
        org.apache.catalina.connector.OutputBuffer r0;
        int i0, $i1;
        org.apache.tomcat.util.buf.ByteChunk $r1, $r2;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i1 = virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: int getLimit()>();
        if i0 <= $i1 goto label0;

        $r2 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.ByteChunk: void setLimit(int)>(i0);

     label0:
        return;
    }

    public void reset()
    {
        org.apache.catalina.connector.OutputBuffer r0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        virtualinvoke r0.<org.apache.catalina.connector.OutputBuffer: void reset(boolean)>(0);
        return;
    }

    public void reset(boolean)
    {
        org.apache.catalina.connector.OutputBuffer r0;
        boolean z0;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        org.apache.tomcat.util.buf.CharChunk $r2;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        z0 := @parameter0: boolean;
        $r1 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: void recycle()>();
        $r2 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.CharChunk cb>;
        virtualinvoke $r2.<org.apache.tomcat.util.buf.CharChunk: void recycle()>();
        r0.<org.apache.catalina.connector.OutputBuffer: long bytesWritten> = 0L;
        r0.<org.apache.catalina.connector.OutputBuffer: long charsWritten> = 0L;
        if z0 == 0 goto label0;

        r0.<org.apache.catalina.connector.OutputBuffer: boolean gotEnc> = 0;
        r0.<org.apache.catalina.connector.OutputBuffer: java.lang.String enc> = null;

     label0:
        r0.<org.apache.catalina.connector.OutputBuffer: boolean initial> = 1;
        return;
    }

    public int getBufferSize()
    {
        org.apache.catalina.connector.OutputBuffer r0;
        org.apache.tomcat.util.buf.ByteChunk $r1;
        int $i0;

        r0 := @this: org.apache.catalina.connector.OutputBuffer;
        $r1 = r0.<org.apache.catalina.connector.OutputBuffer: org.apache.tomcat.util.buf.ByteChunk bb>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.buf.ByteChunk: int getLimit()>();
        return $i0;
    }

    static java.lang.String access$0(org.apache.catalina.connector.OutputBuffer)
    {
        org.apache.catalina.connector.OutputBuffer r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.catalina.connector.OutputBuffer;
        $r1 = r0.<org.apache.catalina.connector.OutputBuffer: java.lang.String enc>;
        return $r1;
    }
}
