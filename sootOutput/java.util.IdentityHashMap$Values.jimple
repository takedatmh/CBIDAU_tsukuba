class java.util.IdentityHashMap$Values extends java.util.AbstractCollection
{
    final java.util.IdentityHashMap this$0;

    private void <init>(java.util.IdentityHashMap)
    {
        java.util.IdentityHashMap$Values r0;
        java.util.IdentityHashMap r1;

        r0 := @this: java.util.IdentityHashMap$Values;
        r1 := @parameter0: java.util.IdentityHashMap;
        r0.<java.util.IdentityHashMap$Values: java.util.IdentityHashMap this$0> = r1;
        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();
        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.IdentityHashMap$Values r0;
        java.util.IdentityHashMap$ValueIterator $r1;
        java.util.IdentityHashMap $r2;

        r0 := @this: java.util.IdentityHashMap$Values;
        $r1 = new java.util.IdentityHashMap$ValueIterator;
        $r2 = r0.<java.util.IdentityHashMap$Values: java.util.IdentityHashMap this$0>;
        specialinvoke $r1.<java.util.IdentityHashMap$ValueIterator: void <init>(java.util.IdentityHashMap,java.util.IdentityHashMap$1)>($r2, null);
        return $r1;
    }

    public int size()
    {
        java.util.IdentityHashMap$Values r0;
        java.util.IdentityHashMap $r1;
        int $i0;

        r0 := @this: java.util.IdentityHashMap$Values;
        $r1 = r0.<java.util.IdentityHashMap$Values: java.util.IdentityHashMap this$0>;
        $i0 = staticinvoke <java.util.IdentityHashMap: int access$000(java.util.IdentityHashMap)>($r1);
        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.IdentityHashMap$Values r0;
        java.lang.Object r1;
        java.util.IdentityHashMap $r2;
        boolean $z0;

        r0 := @this: java.util.IdentityHashMap$Values;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.IdentityHashMap$Values: java.util.IdentityHashMap this$0>;
        $z0 = virtualinvoke $r2.<java.util.IdentityHashMap: boolean containsValue(java.lang.Object)>(r1);
        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.IdentityHashMap$Values r0;
        java.lang.Object r1, $r3;
        java.util.Iterator r2;
        boolean $z0;

        r0 := @this: java.util.IdentityHashMap$Values;
        r1 := @parameter0: java.lang.Object;
        r2 = virtualinvoke r0.<java.util.IdentityHashMap$Values: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        if $r3 != r1 goto label0;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        return 1;

     label1:
        return 0;
    }

    public void clear()
    {
        java.util.IdentityHashMap$Values r0;
        java.util.IdentityHashMap $r1;

        r0 := @this: java.util.IdentityHashMap$Values;
        $r1 = r0.<java.util.IdentityHashMap$Values: java.util.IdentityHashMap this$0>;
        virtualinvoke $r1.<java.util.IdentityHashMap: void clear()>();
        return;
    }

    void <init>(java.util.IdentityHashMap, java.util.IdentityHashMap$1)
    {
        java.util.IdentityHashMap$Values r0;
        java.util.IdentityHashMap r1;
        java.util.IdentityHashMap$1 r2;

        r0 := @this: java.util.IdentityHashMap$Values;
        r1 := @parameter0: java.util.IdentityHashMap;
        r2 := @parameter1: java.util.IdentityHashMap$1;
        specialinvoke r0.<java.util.IdentityHashMap$Values: void <init>(java.util.IdentityHashMap)>(r1);
        return;
    }
}
