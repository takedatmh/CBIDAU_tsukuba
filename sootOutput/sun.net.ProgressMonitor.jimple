public class sun.net.ProgressMonitor extends java.lang.Object
{
    private static sun.net.ProgressMeteringPolicy meteringPolicy;
    private static sun.net.ProgressMonitor pm;
    private java.util.ArrayList progressSourceList;
    private java.util.ArrayList progressListenerList;

    public void <init>()
    {
        sun.net.ProgressMonitor r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: sun.net.ProgressMonitor;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList> = $r1;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList> = $r2;
        return;
    }

    public static synchronized sun.net.ProgressMonitor getDefault()
    {
        sun.net.ProgressMonitor $r0;

        $r0 = <sun.net.ProgressMonitor: sun.net.ProgressMonitor pm>;
        return $r0;
    }

    public static synchronized void setDefault(sun.net.ProgressMonitor)
    {
        sun.net.ProgressMonitor r0;

        r0 := @parameter0: sun.net.ProgressMonitor;
        if r0 == null goto label0;

        <sun.net.ProgressMonitor: sun.net.ProgressMonitor pm> = r0;

     label0:
        return;
    }

    public static synchronized void setMeteringPolicy(sun.net.ProgressMeteringPolicy)
    {
        sun.net.ProgressMeteringPolicy r0;

        r0 := @parameter0: sun.net.ProgressMeteringPolicy;
        if r0 == null goto label0;

        <sun.net.ProgressMonitor: sun.net.ProgressMeteringPolicy meteringPolicy> = r0;

     label0:
        return;
    }

    public java.util.ArrayList getProgressSources()
    {
        sun.net.ProgressMonitor r0;
        java.util.ArrayList $r1, r2, r3, $r7, $r8;
        java.util.Iterator r4;
        sun.net.ProgressSource r5, $r11;
        java.lang.Throwable r6, $r12;
        boolean $z0;
        java.lang.Object $r9, $r10;
        java.lang.CloneNotSupportedException $r13, r14;

        r0 := @this: sun.net.ProgressMonitor;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;

     label0:
        $r7 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList>;
        r3 = $r7;
        entermonitor $r7;

     label1:
        $r8 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList>;
        r4 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (sun.net.ProgressSource) $r9;
        $r10 = virtualinvoke r5.<sun.net.ProgressSource: java.lang.Object clone()>();
        $r11 = (sun.net.ProgressSource) $r10;
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);
        goto label2;

     label3:
        exitmonitor r3;

     label4:
        goto label8;

     label5:
        $r12 := @caughtexception;

     label6:
        r6 = $r12;
        exitmonitor r3;

     label7:
        throw r6;

     label8:
        goto label10;

     label9:
        $r13 := @caughtexception;
        r14 = $r13;
        virtualinvoke r14.<java.lang.CloneNotSupportedException: void printStackTrace()>();

     label10:
        return r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.CloneNotSupportedException from label0 to label8 with label9;
    }

    public synchronized int getProgressUpdateThreshold()
    {
        sun.net.ProgressMonitor r0;
        sun.net.ProgressMeteringPolicy $r1;
        int $i0;

        r0 := @this: sun.net.ProgressMonitor;
        $r1 = <sun.net.ProgressMonitor: sun.net.ProgressMeteringPolicy meteringPolicy>;
        $i0 = interfaceinvoke $r1.<sun.net.ProgressMeteringPolicy: int getProgressUpdateThreshold()>();
        return $i0;
    }

    public boolean shouldMeterInput(java.net.URL, java.lang.String)
    {
        sun.net.ProgressMonitor r0;
        java.net.URL r1;
        java.lang.String r2;
        sun.net.ProgressMeteringPolicy $r3;
        boolean $z0;

        r0 := @this: sun.net.ProgressMonitor;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        $r3 = <sun.net.ProgressMonitor: sun.net.ProgressMeteringPolicy meteringPolicy>;
        $z0 = interfaceinvoke $r3.<sun.net.ProgressMeteringPolicy: boolean shouldMeterInput(java.net.URL,java.lang.String)>(r1, r2);
        return $z0;
    }

    public void registerSource(sun.net.ProgressSource)
    {
        sun.net.ProgressMonitor r0;
        sun.net.ProgressSource r1;
        java.util.ArrayList r2, $r6, $r7, $r8, $r10, $r11, r12, $r13, r14, $r15;
        java.lang.Throwable r3, r5, $r9, $r17;
        java.util.Iterator r4, r18;
        boolean $z0, $z2, $z4;
        int $i0;
        java.lang.Object $r16, $r19;
        sun.net.ProgressListener r20;
        sun.net.ProgressEvent $r21, r26;
        java.net.URL $r22;
        java.lang.String $r23, $r24;
        sun.net.ProgressSource$State $r25;
        long $l1, $l2;

        r0 := @this: sun.net.ProgressMonitor;
        r1 := @parameter0: sun.net.ProgressSource;
        $r6 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList>;
        r2 = $r6;
        entermonitor $r6;

     label0:
        $r7 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList>;
        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);
        if $z0 == 0 goto label2;

        exitmonitor r2;

     label1:
        return;

     label2:
        $r8 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList>;
        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);
        exitmonitor r2;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        r3 = $r9;
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r10 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();
        if $i0 <= 0 goto label17;

        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r12 = $r11;
        $r13 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        r14 = $r13;
        entermonitor $r13;

     label8:
        $r15 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        r4 = virtualinvoke $r15.<java.util.ArrayList: java.util.Iterator iterator()>();

     label9:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label10;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);
        goto label9;

     label10:
        exitmonitor r14;

     label11:
        goto label15;

     label12:
        $r17 := @caughtexception;

     label13:
        r5 = $r17;
        exitmonitor r14;

     label14:
        throw r5;

     label15:
        r18 = virtualinvoke r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z4 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();
        if $z4 == 0 goto label17;

        $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();
        r20 = (sun.net.ProgressListener) $r19;
        $r21 = new sun.net.ProgressEvent;
        $r22 = virtualinvoke r1.<sun.net.ProgressSource: java.net.URL getURL()>();
        $r23 = virtualinvoke r1.<sun.net.ProgressSource: java.lang.String getMethod()>();
        $r24 = virtualinvoke r1.<sun.net.ProgressSource: java.lang.String getContentType()>();
        $r25 = virtualinvoke r1.<sun.net.ProgressSource: sun.net.ProgressSource$State getState()>();
        $l1 = virtualinvoke r1.<sun.net.ProgressSource: long getProgress()>();
        $l2 = virtualinvoke r1.<sun.net.ProgressSource: long getExpected()>();
        specialinvoke $r21.<sun.net.ProgressEvent: void <init>(sun.net.ProgressSource,java.net.URL,java.lang.String,java.lang.String,sun.net.ProgressSource$State,long,long)>(r1, $r22, $r23, $r24, $r25, $l1, $l2);
        r26 = $r21;
        interfaceinvoke r20.<sun.net.ProgressListener: void progressStart(sun.net.ProgressEvent)>(r26);
        goto label16;

     label17:
        return;

        catch java.lang.Throwable from label0 to label1 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label8 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void unregisterSource(sun.net.ProgressSource)
    {
        sun.net.ProgressMonitor r0;
        sun.net.ProgressSource r1;
        java.util.ArrayList r2, $r6, $r7, $r8, $r10, $r11, r12, $r13, r14, $r15;
        java.lang.Throwable r3, r5, $r9, $r17;
        java.util.Iterator r4, r18;
        boolean $z0, $z2, $z4;
        int $i0;
        java.lang.Object $r16, $r19;
        sun.net.ProgressListener r20;
        sun.net.ProgressEvent $r21, r26;
        java.net.URL $r22;
        java.lang.String $r23, $r24;
        sun.net.ProgressSource$State $r25;
        long $l1, $l2;

        r0 := @this: sun.net.ProgressMonitor;
        r1 := @parameter0: sun.net.ProgressSource;
        $r6 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList>;
        r2 = $r6;
        entermonitor $r6;

     label0:
        $r7 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList>;
        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);
        if $z0 != 0 goto label2;

        exitmonitor r2;

     label1:
        return;

     label2:
        virtualinvoke r1.<sun.net.ProgressSource: void close()>();
        $r8 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList>;
        virtualinvoke $r8.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);
        exitmonitor r2;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        r3 = $r9;
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r10 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();
        if $i0 <= 0 goto label17;

        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r12 = $r11;
        $r13 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        r14 = $r13;
        entermonitor $r13;

     label8:
        $r15 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        r4 = virtualinvoke $r15.<java.util.ArrayList: java.util.Iterator iterator()>();

     label9:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label10;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);
        goto label9;

     label10:
        exitmonitor r14;

     label11:
        goto label15;

     label12:
        $r17 := @caughtexception;

     label13:
        r5 = $r17;
        exitmonitor r14;

     label14:
        throw r5;

     label15:
        r18 = virtualinvoke r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z4 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();
        if $z4 == 0 goto label17;

        $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();
        r20 = (sun.net.ProgressListener) $r19;
        $r21 = new sun.net.ProgressEvent;
        $r22 = virtualinvoke r1.<sun.net.ProgressSource: java.net.URL getURL()>();
        $r23 = virtualinvoke r1.<sun.net.ProgressSource: java.lang.String getMethod()>();
        $r24 = virtualinvoke r1.<sun.net.ProgressSource: java.lang.String getContentType()>();
        $r25 = virtualinvoke r1.<sun.net.ProgressSource: sun.net.ProgressSource$State getState()>();
        $l1 = virtualinvoke r1.<sun.net.ProgressSource: long getProgress()>();
        $l2 = virtualinvoke r1.<sun.net.ProgressSource: long getExpected()>();
        specialinvoke $r21.<sun.net.ProgressEvent: void <init>(sun.net.ProgressSource,java.net.URL,java.lang.String,java.lang.String,sun.net.ProgressSource$State,long,long)>(r1, $r22, $r23, $r24, $r25, $l1, $l2);
        r26 = $r21;
        interfaceinvoke r20.<sun.net.ProgressListener: void progressFinish(sun.net.ProgressEvent)>(r26);
        goto label16;

     label17:
        return;

        catch java.lang.Throwable from label0 to label1 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label8 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void updateProgress(sun.net.ProgressSource)
    {
        sun.net.ProgressMonitor r0;
        sun.net.ProgressSource r1;
        java.util.ArrayList r2, $r6, $r7, $r9, $r10, r11, $r12, r13, $r14;
        java.lang.Throwable r3, r5, $r8, $r16;
        java.util.Iterator r4, r17;
        boolean $z0, $z1, $z3;
        int $i0;
        java.lang.Object $r15, $r18;
        sun.net.ProgressListener r19;
        sun.net.ProgressEvent $r20, r25;
        java.net.URL $r21;
        java.lang.String $r22, $r23;
        sun.net.ProgressSource$State $r24;
        long $l1, $l2;

        r0 := @this: sun.net.ProgressMonitor;
        r1 := @parameter0: sun.net.ProgressSource;
        $r6 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList>;
        r2 = $r6;
        entermonitor $r6;

     label0:
        $r7 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressSourceList>;
        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);
        if $z0 != 0 goto label2;

        exitmonitor r2;

     label1:
        return;

     label2:
        exitmonitor r2;

     label3:
        goto label7;

     label4:
        $r8 := @caughtexception;

     label5:
        r3 = $r8;
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r9 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();
        if $i0 <= 0 goto label17;

        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r11 = $r10;
        $r12 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        r13 = $r12;
        entermonitor $r12;

     label8:
        $r14 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        r4 = virtualinvoke $r14.<java.util.ArrayList: java.util.Iterator iterator()>();

     label9:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label10;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);
        goto label9;

     label10:
        exitmonitor r13;

     label11:
        goto label15;

     label12:
        $r16 := @caughtexception;

     label13:
        r5 = $r16;
        exitmonitor r13;

     label14:
        throw r5;

     label15:
        r17 = virtualinvoke r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z3 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label17;

        $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();
        r19 = (sun.net.ProgressListener) $r18;
        $r20 = new sun.net.ProgressEvent;
        $r21 = virtualinvoke r1.<sun.net.ProgressSource: java.net.URL getURL()>();
        $r22 = virtualinvoke r1.<sun.net.ProgressSource: java.lang.String getMethod()>();
        $r23 = virtualinvoke r1.<sun.net.ProgressSource: java.lang.String getContentType()>();
        $r24 = virtualinvoke r1.<sun.net.ProgressSource: sun.net.ProgressSource$State getState()>();
        $l1 = virtualinvoke r1.<sun.net.ProgressSource: long getProgress()>();
        $l2 = virtualinvoke r1.<sun.net.ProgressSource: long getExpected()>();
        specialinvoke $r20.<sun.net.ProgressEvent: void <init>(sun.net.ProgressSource,java.net.URL,java.lang.String,java.lang.String,sun.net.ProgressSource$State,long,long)>(r1, $r21, $r22, $r23, $r24, $l1, $l2);
        r25 = $r20;
        interfaceinvoke r19.<sun.net.ProgressListener: void progressUpdate(sun.net.ProgressEvent)>(r25);
        goto label16;

     label17:
        return;

        catch java.lang.Throwable from label0 to label1 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label8 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void addProgressListener(sun.net.ProgressListener)
    {
        sun.net.ProgressMonitor r0;
        sun.net.ProgressListener r1;
        java.util.ArrayList r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: sun.net.ProgressMonitor;
        r1 := @parameter0: sun.net.ProgressListener;
        $r4 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r6 := @caughtexception;

     label3:
        r3 = $r6;
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void removeProgressListener(sun.net.ProgressListener)
    {
        sun.net.ProgressMonitor r0;
        sun.net.ProgressListener r1;
        java.util.ArrayList r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: sun.net.ProgressMonitor;
        r1 := @parameter0: sun.net.ProgressListener;
        $r4 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<sun.net.ProgressMonitor: java.util.ArrayList progressListenerList>;
        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r6 := @caughtexception;

     label3:
        r3 = $r6;
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    static void <clinit>()
    {
        sun.net.DefaultProgressMeteringPolicy $r0;
        sun.net.ProgressMonitor $r1;

        $r0 = new sun.net.DefaultProgressMeteringPolicy;
        specialinvoke $r0.<sun.net.DefaultProgressMeteringPolicy: void <init>()>();
        <sun.net.ProgressMonitor: sun.net.ProgressMeteringPolicy meteringPolicy> = $r0;
        $r1 = new sun.net.ProgressMonitor;
        specialinvoke $r1.<sun.net.ProgressMonitor: void <init>()>();
        <sun.net.ProgressMonitor: sun.net.ProgressMonitor pm> = $r1;
        return;
    }
}
