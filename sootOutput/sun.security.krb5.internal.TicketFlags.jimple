public class sun.security.krb5.internal.TicketFlags extends sun.security.krb5.internal.util.KerberosFlags
{

    public void <init>()
    {
        sun.security.krb5.internal.TicketFlags r0;

        r0 := @this: sun.security.krb5.internal.TicketFlags;
        specialinvoke r0.<sun.security.krb5.internal.util.KerberosFlags: void <init>(int)>(32);
        return;
    }

    public void <init>(boolean[]) throws sun.security.krb5.Asn1Exception
    {
        sun.security.krb5.internal.TicketFlags r0;
        boolean[] r1;
        int $i0;
        sun.security.krb5.Asn1Exception $r2;

        r0 := @this: sun.security.krb5.internal.TicketFlags;
        r1 := @parameter0: boolean[];
        specialinvoke r0.<sun.security.krb5.internal.util.KerberosFlags: void <init>(boolean[])>(r1);
        $i0 = lengthof r1;
        if $i0 <= 32 goto label0;

        $r2 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r2.<sun.security.krb5.Asn1Exception: void <init>(int)>(502);
        throw $r2;

     label0:
        return;
    }

    public void <init>(int, byte[]) throws sun.security.krb5.Asn1Exception
    {
        sun.security.krb5.internal.TicketFlags r0;
        int i0, $i1, $i2;
        byte[] r1;
        sun.security.krb5.Asn1Exception $r2;

        r0 := @this: sun.security.krb5.internal.TicketFlags;
        i0 := @parameter0: int;
        r1 := @parameter1: byte[];
        specialinvoke r0.<sun.security.krb5.internal.util.KerberosFlags: void <init>(int,byte[])>(i0, r1);
        $i1 = lengthof r1;
        $i2 = $i1 * 8;
        if i0 > $i2 goto label0;

        if i0 <= 32 goto label1;

     label0:
        $r2 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r2.<sun.security.krb5.Asn1Exception: void <init>(int)>(502);
        throw $r2;

     label1:
        return;
    }

    public void <init>(sun.security.util.DerValue) throws java.io.IOException, sun.security.krb5.Asn1Exception
    {
        sun.security.krb5.internal.TicketFlags r0;
        sun.security.util.DerValue r1;
        sun.security.util.BitArray $r2;
        boolean[] $r3;

        r0 := @this: sun.security.krb5.internal.TicketFlags;
        r1 := @parameter0: sun.security.util.DerValue;
        $r2 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.BitArray getUnalignedBitString(boolean)>(1);
        $r3 = virtualinvoke $r2.<sun.security.util.BitArray: boolean[] toBooleanArray()>();
        specialinvoke r0.<sun.security.krb5.internal.TicketFlags: void <init>(boolean[])>($r3);
        return;
    }

    public static sun.security.krb5.internal.TicketFlags parse(sun.security.util.DerInputStream, byte, boolean) throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.util.DerInputStream r0, $r4;
        byte b0, $b2, $b3, $b4, $b5;
        boolean z0;
        sun.security.util.DerValue r1, r2;
        int $i1;
        sun.security.krb5.Asn1Exception $r3;
        sun.security.krb5.internal.TicketFlags $r5;

        r0 := @parameter0: sun.security.util.DerInputStream;
        b0 := @parameter1: byte;
        z0 := @parameter2: boolean;
        if z0 == 0 goto label0;

        $i1 = virtualinvoke r0.<sun.security.util.DerInputStream: int peekByte()>();
        $b2 = (byte) $i1;
        $b3 = $b2 & 31;
        if $b3 == b0 goto label0;

        return null;

     label0:
        r1 = virtualinvoke r0.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b4 = virtualinvoke r1.<sun.security.util.DerValue: byte getTag()>();
        $b5 = $b4 & 31;
        if b0 == $b5 goto label1;

        $r3 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r3.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r3;

     label1:
        $r4 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r2 = virtualinvoke $r4.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r5 = new sun.security.krb5.internal.TicketFlags;
        specialinvoke $r5.<sun.security.krb5.internal.TicketFlags: void <init>(sun.security.util.DerValue)>(r2);
        return $r5;
    }

    public java.lang.Object clone()
    {
        sun.security.krb5.internal.TicketFlags r0, $r1;
        java.lang.Exception r2, $r4;
        boolean[] $r3;

        r0 := @this: sun.security.krb5.internal.TicketFlags;

     label0:
        $r1 = new sun.security.krb5.internal.TicketFlags;
        $r3 = virtualinvoke r0.<sun.security.krb5.internal.TicketFlags: boolean[] toBooleanArray()>();
        specialinvoke $r1.<sun.security.krb5.internal.TicketFlags: void <init>(boolean[])>($r3);

     label1:
        return $r1;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;
        return null;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public boolean match(sun.security.krb5.internal.LoginOptions)
    {
        sun.security.krb5.internal.TicketFlags r0;
        sun.security.krb5.internal.LoginOptions r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: sun.security.krb5.internal.TicketFlags;
        r1 := @parameter0: sun.security.krb5.internal.LoginOptions;
        z0 = 0;
        $z1 = virtualinvoke r0.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(1);
        $z2 = virtualinvoke r1.<sun.security.krb5.internal.LoginOptions: boolean get(int)>(1);
        if $z1 != $z2 goto label0;

        $z3 = virtualinvoke r0.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(3);
        $z4 = virtualinvoke r1.<sun.security.krb5.internal.LoginOptions: boolean get(int)>(3);
        if $z3 != $z4 goto label0;

        $z5 = virtualinvoke r0.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(8);
        $z6 = virtualinvoke r1.<sun.security.krb5.internal.LoginOptions: boolean get(int)>(8);
        if $z5 != $z6 goto label0;

        z0 = 1;

     label0:
        return z0;
    }

    public boolean match(sun.security.krb5.internal.TicketFlags)
    {
        sun.security.krb5.internal.TicketFlags r0, r1;
        boolean z0, $z1, $z2;
        int i0;

        r0 := @this: sun.security.krb5.internal.TicketFlags;
        r1 := @parameter0: sun.security.krb5.internal.TicketFlags;
        z0 = 1;
        i0 = 0;

     label0:
        if i0 > 31 goto label2;

        $z1 = virtualinvoke r0.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(i0);
        $z2 = virtualinvoke r1.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(i0);
        if $z1 == $z2 goto label1;

        return 0;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return z0;
    }

    public java.lang.String toString()
    {
        sun.security.krb5.internal.TicketFlags r0;
        java.lang.StringBuffer $r1, r2;
        boolean[] r3;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.lang.String r16;

        r0 := @this: sun.security.krb5.internal.TicketFlags;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        r3 = virtualinvoke r0.<sun.security.krb5.internal.TicketFlags: boolean[] toBooleanArray()>();
        i0 = 0;

     label0:
        $i1 = lengthof r3;
        if i0 >= $i1 goto label14;

        $z0 = r3[i0];
        if $z0 != 1 goto label13;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            case 8: goto label9;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            default: goto label13;
        };

     label1:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RESERVED;");
        goto label13;

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("FORWARDABLE;");
        goto label13;

     label3:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("FORWARDED;");
        goto label13;

     label4:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PROXIABLE;");
        goto label13;

     label5:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PROXY;");
        goto label13;

     label6:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MAY-POSTDATE;");
        goto label13;

     label7:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("POSTDATED;");
        goto label13;

     label8:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("INVALID;");
        goto label13;

     label9:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RENEWABLE;");
        goto label13;

     label10:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("INITIAL;");
        goto label13;

     label11:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PRE-AUTHENT;");
        goto label13;

     label12:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("HW-AUTHENT;");

     label13:
        i0 = i0 + 1;
        goto label0;

     label14:
        r16 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        $i2 = virtualinvoke r16.<java.lang.String: int length()>();
        if $i2 <= 0 goto label15;

        $i3 = virtualinvoke r16.<java.lang.String: int length()>();
        $i4 = $i3 - 1;
        r16 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

     label15:
        return r16;
    }
}
