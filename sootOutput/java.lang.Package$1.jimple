final class java.lang.Package$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.String val$iname;
    final java.lang.String val$fn;

    void <init>(java.lang.String, java.lang.String)
    {
        java.lang.Package$1 r0;
        java.lang.String r1, r2;

        r0 := @this: java.lang.Package$1;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r0.<java.lang.Package$1: java.lang.String val$iname> = r1;
        r0.<java.lang.Package$1: java.lang.String val$fn> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Package run()
    {
        java.lang.Package$1 r0;
        java.lang.String r1, $r6, $r9, $r12, $r15, $r16, $r19, r20, $r22;
        java.net.URL r2;
        java.io.File r3, $r8;
        java.net.MalformedURLException r4, $r10;
        java.util.Map $r5, $r11, $r14, $r21, $r28;
        java.lang.Object $r7, $r23;
        boolean $z0;
        java.util.jar.Manifest $r17, r24;
        int $i0, $i1;
        java.lang.Package $r25, r26, $r27;

        r0 := @this: java.lang.Package$1;
        r1 = r0.<java.lang.Package$1: java.lang.String val$iname>;
        $r5 = staticinvoke <java.lang.Package: java.util.Map access$000()>();
        $r6 = r0.<java.lang.Package$1: java.lang.String val$fn>;
        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);
        r2 = (java.net.URL) $r7;
        if r2 != null goto label4;

        $r8 = new java.io.File;
        $r9 = r0.<java.lang.Package$1: java.lang.String val$fn>;
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9);
        r3 = $r8;

     label0:
        r2 = staticinvoke <sun.net.www.ParseUtil: java.net.URL fileToEncodedURL(java.io.File)>(r3);

     label1:
        goto label3;

     label2:
        $r10 := @caughtexception;
        r4 = $r10;

     label3:
        if r2 == null goto label4;

        $r11 = staticinvoke <java.lang.Package: java.util.Map access$000()>();
        $r12 = r0.<java.lang.Package$1: java.lang.String val$fn>;
        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r2);
        $z0 = virtualinvoke r3.<java.io.File: boolean isFile()>();
        if $z0 == 0 goto label4;

        $r14 = staticinvoke <java.lang.Package: java.util.Map access$200()>();
        $r15 = r0.<java.lang.Package$1: java.lang.String val$fn>;
        $r16 = r0.<java.lang.Package$1: java.lang.String val$fn>;
        $r17 = staticinvoke <java.lang.Package: java.util.jar.Manifest access$100(java.lang.String)>($r16);
        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r17);

     label4:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i1 = $i0 - 1;
        $r19 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);
        r20 = virtualinvoke $r19.<java.lang.String: java.lang.String replace(char,char)>(47, 46);
        $r21 = staticinvoke <java.lang.Package: java.util.Map access$200()>();
        $r22 = r0.<java.lang.Package$1: java.lang.String val$fn>;
        $r23 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22);
        r24 = (java.util.jar.Manifest) $r23;
        if r24 == null goto label5;

        $r25 = new java.lang.Package;
        specialinvoke $r25.<java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL,java.lang.ClassLoader,java.lang.Package$1)>(r20, r24, r2, null, null);
        r26 = $r25;
        goto label6;

     label5:
        $r27 = new java.lang.Package;
        specialinvoke $r27.<java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.lang.ClassLoader)>(r20, null, null, null, null, null, null, null, null);
        r26 = $r27;

     label6:
        $r28 = staticinvoke <java.lang.Package: java.util.Map access$400()>();
        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, r26);
        return r26;

        catch java.net.MalformedURLException from label0 to label1 with label2;
    }

    public volatile java.lang.Object run()
    {
        java.lang.Package$1 r0;
        java.lang.Package $r1;

        r0 := @this: java.lang.Package$1;
        $r1 = virtualinvoke r0.<java.lang.Package$1: java.lang.Package run()>();
        return $r1;
    }
}
