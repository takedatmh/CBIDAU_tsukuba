public final enum class java.security.cert.PKIXReason extends java.lang.Enum implements java.security.cert.CertPathValidatorException$Reason
{
    public static final enum java.security.cert.PKIXReason NAME_CHAINING;
    public static final enum java.security.cert.PKIXReason INVALID_KEY_USAGE;
    public static final enum java.security.cert.PKIXReason INVALID_POLICY;
    public static final enum java.security.cert.PKIXReason NO_TRUST_ANCHOR;
    public static final enum java.security.cert.PKIXReason UNRECOGNIZED_CRIT_EXT;
    public static final enum java.security.cert.PKIXReason NOT_CA_CERT;
    public static final enum java.security.cert.PKIXReason PATH_TOO_LONG;
    public static final enum java.security.cert.PKIXReason INVALID_NAME;
    private static final java.security.cert.PKIXReason[] $VALUES;

    public static java.security.cert.PKIXReason[] values()
    {
        java.security.cert.PKIXReason[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <java.security.cert.PKIXReason: java.security.cert.PKIXReason[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (java.security.cert.PKIXReason[]) $r1;
        return $r2;
    }

    public static java.security.cert.PKIXReason valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        java.security.cert.PKIXReason $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "java/security/cert/PKIXReason", r0);
        $r2 = (java.security.cert.PKIXReason) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        java.security.cert.PKIXReason r0;
        java.lang.String r1;
        int i0;

        r0 := @this: java.security.cert.PKIXReason;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        java.security.cert.PKIXReason $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.security.cert.PKIXReason[] $r8;

        $r0 = new java.security.cert.PKIXReason;
        specialinvoke $r0.<java.security.cert.PKIXReason: void <init>(java.lang.String,int)>("NAME_CHAINING", 0);
        <java.security.cert.PKIXReason: java.security.cert.PKIXReason NAME_CHAINING> = $r0;
        $r1 = new java.security.cert.PKIXReason;
        specialinvoke $r1.<java.security.cert.PKIXReason: void <init>(java.lang.String,int)>("INVALID_KEY_USAGE", 1);
        <java.security.cert.PKIXReason: java.security.cert.PKIXReason INVALID_KEY_USAGE> = $r1;
        $r2 = new java.security.cert.PKIXReason;
        specialinvoke $r2.<java.security.cert.PKIXReason: void <init>(java.lang.String,int)>("INVALID_POLICY", 2);
        <java.security.cert.PKIXReason: java.security.cert.PKIXReason INVALID_POLICY> = $r2;
        $r3 = new java.security.cert.PKIXReason;
        specialinvoke $r3.<java.security.cert.PKIXReason: void <init>(java.lang.String,int)>("NO_TRUST_ANCHOR", 3);
        <java.security.cert.PKIXReason: java.security.cert.PKIXReason NO_TRUST_ANCHOR> = $r3;
        $r4 = new java.security.cert.PKIXReason;
        specialinvoke $r4.<java.security.cert.PKIXReason: void <init>(java.lang.String,int)>("UNRECOGNIZED_CRIT_EXT", 4);
        <java.security.cert.PKIXReason: java.security.cert.PKIXReason UNRECOGNIZED_CRIT_EXT> = $r4;
        $r5 = new java.security.cert.PKIXReason;
        specialinvoke $r5.<java.security.cert.PKIXReason: void <init>(java.lang.String,int)>("NOT_CA_CERT", 5);
        <java.security.cert.PKIXReason: java.security.cert.PKIXReason NOT_CA_CERT> = $r5;
        $r6 = new java.security.cert.PKIXReason;
        specialinvoke $r6.<java.security.cert.PKIXReason: void <init>(java.lang.String,int)>("PATH_TOO_LONG", 6);
        <java.security.cert.PKIXReason: java.security.cert.PKIXReason PATH_TOO_LONG> = $r6;
        $r7 = new java.security.cert.PKIXReason;
        specialinvoke $r7.<java.security.cert.PKIXReason: void <init>(java.lang.String,int)>("INVALID_NAME", 7);
        <java.security.cert.PKIXReason: java.security.cert.PKIXReason INVALID_NAME> = $r7;
        $r8 = newarray (java.security.cert.PKIXReason)[8];
        $r9 = <java.security.cert.PKIXReason: java.security.cert.PKIXReason NAME_CHAINING>;
        $r8[0] = $r9;
        $r10 = <java.security.cert.PKIXReason: java.security.cert.PKIXReason INVALID_KEY_USAGE>;
        $r8[1] = $r10;
        $r11 = <java.security.cert.PKIXReason: java.security.cert.PKIXReason INVALID_POLICY>;
        $r8[2] = $r11;
        $r12 = <java.security.cert.PKIXReason: java.security.cert.PKIXReason NO_TRUST_ANCHOR>;
        $r8[3] = $r12;
        $r13 = <java.security.cert.PKIXReason: java.security.cert.PKIXReason UNRECOGNIZED_CRIT_EXT>;
        $r8[4] = $r13;
        $r14 = <java.security.cert.PKIXReason: java.security.cert.PKIXReason NOT_CA_CERT>;
        $r8[5] = $r14;
        $r15 = <java.security.cert.PKIXReason: java.security.cert.PKIXReason PATH_TOO_LONG>;
        $r8[6] = $r15;
        $r16 = <java.security.cert.PKIXReason: java.security.cert.PKIXReason INVALID_NAME>;
        $r8[7] = $r16;
        <java.security.cert.PKIXReason: java.security.cert.PKIXReason[] $VALUES> = $r8;
        return;
    }
}
