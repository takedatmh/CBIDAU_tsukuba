public interface  sun.reflect.generics.visitor.TypeTreeVisitor extends java.lang.Object
{

    public abstract java.lang.Object getResult();

    public abstract void visitFormalTypeParameter(sun.reflect.generics.tree.FormalTypeParameter);

    public abstract void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature);

    public abstract void visitArrayTypeSignature(sun.reflect.generics.tree.ArrayTypeSignature);

    public abstract void visitTypeVariableSignature(sun.reflect.generics.tree.TypeVariableSignature);

    public abstract void visitWildcard(sun.reflect.generics.tree.Wildcard);

    public abstract void visitSimpleClassTypeSignature(sun.reflect.generics.tree.SimpleClassTypeSignature);

    public abstract void visitBottomSignature(sun.reflect.generics.tree.BottomSignature);

    public abstract void visitByteSignature(sun.reflect.generics.tree.ByteSignature);

    public abstract void visitBooleanSignature(sun.reflect.generics.tree.BooleanSignature);

    public abstract void visitShortSignature(sun.reflect.generics.tree.ShortSignature);

    public abstract void visitCharSignature(sun.reflect.generics.tree.CharSignature);

    public abstract void visitIntSignature(sun.reflect.generics.tree.IntSignature);

    public abstract void visitLongSignature(sun.reflect.generics.tree.LongSignature);

    public abstract void visitFloatSignature(sun.reflect.generics.tree.FloatSignature);

    public abstract void visitDoubleSignature(sun.reflect.generics.tree.DoubleSignature);

    public abstract void visitVoidDescriptor(sun.reflect.generics.tree.VoidDescriptor);
}
