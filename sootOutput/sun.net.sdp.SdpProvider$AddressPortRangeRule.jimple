class sun.net.sdp.SdpProvider$AddressPortRangeRule extends sun.net.sdp.SdpProvider$PortRangeRule
{
    private final byte[] addressAsBytes;
    private final int prefixByteCount;
    private final byte mask;

    void <init>(sun.net.sdp.SdpProvider$Action, java.net.InetAddress, int, int, int)
    {
        sun.net.sdp.SdpProvider$AddressPortRangeRule r0;
        sun.net.sdp.SdpProvider$Action r1;
        java.net.InetAddress r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        byte[] $r3;
        byte $b7;

        r0 := @this: sun.net.sdp.SdpProvider$AddressPortRangeRule;
        r1 := @parameter0: sun.net.sdp.SdpProvider$Action;
        r2 := @parameter1: java.net.InetAddress;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        specialinvoke r0.<sun.net.sdp.SdpProvider$PortRangeRule: void <init>(sun.net.sdp.SdpProvider$Action,int,int)>(r1, i1, i2);
        $r3 = virtualinvoke r2.<java.net.InetAddress: byte[] getAddress()>();
        r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: byte[] addressAsBytes> = $r3;
        $i3 = i0 >> 3;
        r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: int prefixByteCount> = $i3;
        $i4 = i0 % 8;
        $i5 = 8 - $i4;
        $i6 = 255 << $i5;
        $b7 = (byte) $i6;
        r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: byte mask> = $b7;
        return;
    }

    public boolean match(sun.net.sdp.SdpProvider$Action, java.net.InetAddress, int)
    {
        sun.net.sdp.SdpProvider$AddressPortRangeRule r0;
        sun.net.sdp.SdpProvider$Action r1, $r4;
        java.net.InetAddress r2;
        int i0, i1, $i2, $i3, $i4, $i7, $i8, $i9, $i13;
        byte[] r3, $r5, $r6, $r7, $r8;
        byte $b5, $b6, $b10, $b11, $b12, $b14, $b15, $b16;
        boolean $z0;

        r0 := @this: sun.net.sdp.SdpProvider$AddressPortRangeRule;
        r1 := @parameter0: sun.net.sdp.SdpProvider$Action;
        r2 := @parameter1: java.net.InetAddress;
        i0 := @parameter2: int;
        $r4 = virtualinvoke r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: sun.net.sdp.SdpProvider$Action action()>();
        if r1 == $r4 goto label0;

        return 0;

     label0:
        r3 = virtualinvoke r2.<java.net.InetAddress: byte[] getAddress()>();
        $i2 = lengthof r3;
        $r5 = r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: byte[] addressAsBytes>;
        $i3 = lengthof $r5;
        if $i2 == $i3 goto label1;

        return 0;

     label1:
        i1 = 0;

     label2:
        $i4 = r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: int prefixByteCount>;
        if i1 >= $i4 goto label4;

        $b5 = r3[i1];
        $r6 = r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: byte[] addressAsBytes>;
        $b6 = $r6[i1];
        if $b5 == $b6 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;
        goto label2;

     label4:
        $i7 = r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: int prefixByteCount>;
        $r7 = r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: byte[] addressAsBytes>;
        $i8 = lengthof $r7;
        if $i7 >= $i8 goto label5;

        $i9 = r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: int prefixByteCount>;
        $b10 = r3[$i9];
        $b11 = r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: byte mask>;
        $b12 = $b10 & $b11;
        $r8 = r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: byte[] addressAsBytes>;
        $i13 = r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: int prefixByteCount>;
        $b14 = $r8[$i13];
        $b15 = r0.<sun.net.sdp.SdpProvider$AddressPortRangeRule: byte mask>;
        $b16 = $b14 & $b15;
        if $b12 == $b16 goto label5;

        return 0;

     label5:
        $z0 = specialinvoke r0.<sun.net.sdp.SdpProvider$PortRangeRule: boolean match(sun.net.sdp.SdpProvider$Action,java.net.InetAddress,int)>(r1, r2, i0);
        return $z0;
    }
}
