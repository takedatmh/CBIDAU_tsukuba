public class org.apache.tomcat.util.ExceptionUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.tomcat.util.ExceptionUtils r0;

        r0 := @this: org.apache.tomcat.util.ExceptionUtils;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void handleThrowable(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        boolean $z0, $z1, $z2;
        java.lang.ThreadDeath $r1;
        java.lang.VirtualMachineError $r2;

        r0 := @parameter0: java.lang.Throwable;
        $z0 = r0 instanceof java.lang.ThreadDeath;
        if $z0 == 0 goto label0;

        $r1 = (java.lang.ThreadDeath) r0;
        throw $r1;

     label0:
        $z1 = r0 instanceof java.lang.StackOverflowError;
        if $z1 == 0 goto label1;

        return;

     label1:
        $z2 = r0 instanceof java.lang.VirtualMachineError;
        if $z2 == 0 goto label2;

        $r2 = (java.lang.VirtualMachineError) r0;
        throw $r2;

     label2:
        return;
    }

    public static java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)
    {
        java.lang.Throwable r0, $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Throwable;
        $z0 = r0 instanceof java.lang.reflect.InvocationTargetException;
        if $z0 == 0 goto label0;

        $r1 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();
        if $r1 == null goto label0;

        $r2 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();
        return $r2;

     label0:
        return r0;
    }

    public static void preload()
    {
        return;
    }
}
