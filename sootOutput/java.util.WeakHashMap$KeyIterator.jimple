class java.util.WeakHashMap$KeyIterator extends java.util.WeakHashMap$HashIterator
{
    final java.util.WeakHashMap this$0;

    private void <init>(java.util.WeakHashMap)
    {
        java.util.WeakHashMap$KeyIterator r0;
        java.util.WeakHashMap r1;

        r0 := @this: java.util.WeakHashMap$KeyIterator;
        r1 := @parameter0: java.util.WeakHashMap;
        r0.<java.util.WeakHashMap$KeyIterator: java.util.WeakHashMap this$0> = r1;
        specialinvoke r0.<java.util.WeakHashMap$HashIterator: void <init>(java.util.WeakHashMap)>(r1);
        return;
    }

    public java.lang.Object next()
    {
        java.util.WeakHashMap$KeyIterator r0;
        java.util.WeakHashMap$Entry $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.WeakHashMap$KeyIterator;
        $r1 = virtualinvoke r0.<java.util.WeakHashMap$KeyIterator: java.util.WeakHashMap$Entry nextEntry()>();
        $r2 = virtualinvoke $r1.<java.util.WeakHashMap$Entry: java.lang.Object getKey()>();
        return $r2;
    }

    void <init>(java.util.WeakHashMap, java.util.WeakHashMap$1)
    {
        java.util.WeakHashMap$KeyIterator r0;
        java.util.WeakHashMap r1;
        java.util.WeakHashMap$1 r2;

        r0 := @this: java.util.WeakHashMap$KeyIterator;
        r1 := @parameter0: java.util.WeakHashMap;
        r2 := @parameter1: java.util.WeakHashMap$1;
        specialinvoke r0.<java.util.WeakHashMap$KeyIterator: void <init>(java.util.WeakHashMap)>(r1);
        return;
    }
}
