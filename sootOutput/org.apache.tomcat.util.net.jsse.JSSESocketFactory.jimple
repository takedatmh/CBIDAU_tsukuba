public class org.apache.tomcat.util.net.jsse.JSSESocketFactory extends java.lang.Object implements org.apache.tomcat.util.net.ServerSocketFactory, org.apache.tomcat.util.net.SSLUtil
{
    private static final org.apache.juli.logging.Log log;
    private static final org.apache.tomcat.util.res.StringManager sm;
    private static final java.lang.String defaultProtocol;
    private static final java.lang.String defaultKeystoreType;
    private static final java.lang.String defaultKeystoreFile;
    private static final int defaultSessionCacheSize;
    private static final int defaultSessionTimeout;
    private static final java.lang.String ALLOW_ALL_SUPPORTED_CIPHERS;
    public static final java.lang.String DEFAULT_KEY_PASS;
    private org.apache.tomcat.util.net.AbstractEndpoint endpoint;
    private final boolean rfc5746Supported;
    private final java.lang.String[] defaultServerProtocols;
    private final java.lang.String[] defaultServerCipherSuites;
    protected javax.net.ssl.SSLServerSocketFactory sslProxy;
    protected java.lang.String[] enabledCiphers;
    protected java.lang.String[] enabledProtocols;
    protected boolean allowUnsafeLegacyRenegotiation;
    protected boolean requireClientAuth;
    protected boolean wantClientAuth;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        org.apache.tomcat.util.res.StringManager $r1;
        java.lang.StringBuilder $r2, $r5;
        java.lang.String $r3, $r4, $r6;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/tomcat/util/net/jsse/JSSESocketFactory");
        <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log> = $r0;
        $r1 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.tomcat.util.net.jsse.res");
        <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm> = $r1;
        $r2 = new java.lang.StringBuilder;
        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.keystore");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        <org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String defaultKeystoreFile> = $r6;
        return;
    }

    public void <init>(org.apache.tomcat.util.net.AbstractEndpoint)
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        org.apache.tomcat.util.net.AbstractEndpoint r1;
        java.lang.String r2, r7, $r19, $r29, $r30, $r34, $r35, r39, $r41, $r45, $r47, $r51, $r53, $r57, $r59, $r63, $r65, $r67, $r71, $r79, $r80, r84, $r86, $r90, $r98, $r99, $r104, $r109;
        javax.net.ssl.SSLContext r3;
        java.security.NoSuchAlgorithmException r4, $r12;
        java.lang.String[] r5, r6, r8, r9, $r24, $r25, $r38, $r72, $r74, $r75, $r83, $r91, $r93, $r94;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11;
        int i0, i1, i2, i3, $i4, $i5, i6, i7, $i8, $i9;
        java.lang.Throwable r10, $r100;
        java.io.IOException r11, $r22, r23, $r101, $r105, r106;
        java.lang.IllegalArgumentException $r13, $r16;
        java.security.KeyManagementException $r14, r15;
        javax.net.ssl.SSLServerSocketFactory r17;
        java.net.ServerSocket $r20;
        javax.net.ssl.SSLServerSocket r21;
        org.apache.juli.logging.Log $r26, $r31, $r42, $r48, $r54, $r60, $r68, $r76, $r87, $r95, $r102, $r107;
        org.apache.tomcat.util.res.StringManager $r27, $r32, $r43, $r49, $r55, $r61, $r69, $r77, $r88, $r96, $r103, $r108;
        java.lang.Object[] $r28, $r33, $r44, $r50, $r56, $r62, $r70, $r73, $r78, $r89, $r92, $r97;
        java.util.ArrayList $r36, r37, $r81, r82;
        java.util.Locale $r40, $r46, $r52, $r58, $r64, $r66, $r85;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: org.apache.tomcat.util.net.AbstractEndpoint;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.SSLServerSocketFactory sslProxy> = null;
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean allowUnsafeLegacyRenegotiation> = 0;
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean requireClientAuth> = 0;
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean wantClientAuth> = 0;
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint> = r1;
        r2 = virtualinvoke r1.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getSslProtocol()>();
        if r2 != null goto label0;

        r2 = "TLS";

     label0:
        r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r2);
        virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, null, null);

     label1:
        goto label4;

     label2:
        $r12 := @caughtexception;
        r4 = $r12;
        $r13 = new java.lang.IllegalArgumentException;
        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r4);
        throw $r13;

     label3:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = new java.lang.IllegalArgumentException;
        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r15);
        throw $r16;

     label4:
        r17 = virtualinvoke r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLServerSocketFactory getServerSocketFactory()>();
        r5 = virtualinvoke r17.<javax.net.ssl.SSLServerSocketFactory: java.lang.String[] getSupportedCipherSuites()>();
        z0 = 0;
        r6 = r5;
        i0 = lengthof r5;
        i1 = 0;
        goto label7;

     label5:
        r7 = r6[i1];
        $r19 = "TLS_EMPTY_RENEGOTIATION_INFO_SCSV";
        $z1 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        if $z1 == 0 goto label6;

        z0 = 1;
        goto label8;

     label6:
        i1 = i1 + 1;

     label7:
        if i1 < i0 goto label5;

     label8:
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean rfc5746Supported> = z0;

     label9:
        $r20 = virtualinvoke r17.<javax.net.ssl.SSLServerSocketFactory: java.net.ServerSocket createServerSocket()>();
        r21 = (javax.net.ssl.SSLServerSocket) $r20;

     label10:
        goto label12;

     label11:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = newarray (java.lang.String)[0];
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] defaultServerCipherSuites> = $r24;
        $r25 = newarray (java.lang.String)[0];
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] defaultServerProtocols> = $r25;
        $r26 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r27 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r28 = newarray (java.lang.Object)[1];
        $r29 = virtualinvoke r1.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getName()>();
        $r28[0] = $r29;
        $r30 = virtualinvoke $r27.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.noDefaultCiphers", $r28);
        interfaceinvoke $r26.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r30);
        $r31 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r32 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r33 = newarray (java.lang.Object)[1];
        $r34 = virtualinvoke r1.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getName()>();
        $r33[0] = $r34;
        $r35 = virtualinvoke $r32.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.noDefaultProtocols", $r33);
        interfaceinvoke $r31.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r35);
        return;

     label12:
        $r36 = new java.util.ArrayList;
        specialinvoke $r36.<java.util.ArrayList: void <init>()>();
        r37 = $r36;
        $r38 = virtualinvoke r21.<javax.net.ssl.SSLServerSocket: java.lang.String[] getEnabledCipherSuites()>();
        r8 = $r38;
        i2 = lengthof $r38;
        i3 = 0;
        goto label21;

     label13:
        r39 = r8[i3];
        $r40 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r41 = virtualinvoke r39.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r40);
        $z2 = virtualinvoke $r41.<java.lang.String: boolean contains(java.lang.CharSequence)>("EXP");
        if $z2 == 0 goto label14;

        $r42 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r43 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r44 = newarray (java.lang.Object)[1];
        $r44[0] = r39;
        $r45 = virtualinvoke $r43.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.excludeDefaultCipher", $r44);
        interfaceinvoke $r42.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r45);
        goto label20;

     label14:
        $r46 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r47 = virtualinvoke r39.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r46);
        $z3 = virtualinvoke $r47.<java.lang.String: boolean contains(java.lang.CharSequence)>("_DES_");
        if $z3 == 0 goto label15;

        $r48 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r49 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r50 = newarray (java.lang.Object)[1];
        $r50[0] = r39;
        $r51 = virtualinvoke $r49.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.excludeDefaultCipher", $r50);
        interfaceinvoke $r48.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r51);
        goto label20;

     label15:
        $r52 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r53 = virtualinvoke r39.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r52);
        $z4 = virtualinvoke $r53.<java.lang.String: boolean contains(java.lang.CharSequence)>("_RC4_");
        if $z4 == 0 goto label16;

        $r54 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r55 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r56 = newarray (java.lang.Object)[1];
        $r56[0] = r39;
        $r57 = virtualinvoke $r55.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.excludeDefaultCipher", $r56);
        interfaceinvoke $r54.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r57);
        goto label20;

     label16:
        $z5 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: boolean isJre8Available()>();
        if $z5 != 0 goto label17;

        $r58 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r59 = virtualinvoke r39.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r58);
        $z6 = virtualinvoke $r59.<java.lang.String: boolean contains(java.lang.CharSequence)>("_DHE_");
        if $z6 == 0 goto label17;

        $r60 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r61 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r62 = newarray (java.lang.Object)[1];
        $r62[0] = r39;
        $r63 = virtualinvoke $r61.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.excludeDefaultCipher", $r62);
        interfaceinvoke $r60.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r63);
        goto label20;

     label17:
        $z7 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: boolean isJre7Available()>();
        if $z7 == 0 goto label19;

        $r64 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r65 = virtualinvoke r39.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r64);
        $z8 = virtualinvoke $r65.<java.lang.String: boolean startsWith(java.lang.String)>("TLS_RSA_");
        if $z8 != 0 goto label18;

        $r66 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r67 = virtualinvoke r39.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r66);
        $z9 = virtualinvoke $r67.<java.lang.String: boolean startsWith(java.lang.String)>("SSL_RSA_");
        if $z9 == 0 goto label19;

     label18:
        $r68 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r69 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r70 = newarray (java.lang.Object)[1];
        $r70[0] = r39;
        $r71 = virtualinvoke $r69.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.excludeDefaultCipher", $r70);
        interfaceinvoke $r68.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r71);
        goto label20;

     label19:
        interfaceinvoke r37.<java.util.List: boolean add(java.lang.Object)>(r39);

     label20:
        i3 = i3 + 1;

     label21:
        if i3 < i2 goto label13;

        $i4 = interfaceinvoke r37.<java.util.List: int size()>();
        $r72 = newarray (java.lang.String)[$i4];
        $r73 = interfaceinvoke r37.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r72);
        $r74 = (java.lang.String[]) $r73;
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] defaultServerCipherSuites> = $r74;
        $r75 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] defaultServerCipherSuites>;
        $i5 = lengthof $r75;
        if $i5 != 0 goto label22;

        $r76 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r77 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r78 = newarray (java.lang.Object)[1];
        $r79 = virtualinvoke r1.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getName()>();
        $r78[0] = $r79;
        $r80 = virtualinvoke $r77.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.noDefaultCiphers", $r78);
        interfaceinvoke $r76.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r80);

     label22:
        $r81 = new java.util.ArrayList;
        specialinvoke $r81.<java.util.ArrayList: void <init>()>();
        r82 = $r81;
        $r83 = virtualinvoke r21.<javax.net.ssl.SSLServerSocket: java.lang.String[] getEnabledProtocols()>();
        r9 = $r83;
        i6 = lengthof $r83;
        i7 = 0;
        goto label26;

     label23:
        r84 = r9[i7];
        $r85 = <java.util.Locale: java.util.Locale ENGLISH>;
        $r86 = virtualinvoke r84.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r85);
        $z11 = virtualinvoke $r86.<java.lang.String: boolean contains(java.lang.CharSequence)>("SSL");
        if $z11 == 0 goto label24;

        $r87 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r88 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r89 = newarray (java.lang.Object)[1];
        $r89[0] = r84;
        $r90 = virtualinvoke $r88.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.excludeDefaultProtocol", $r89);
        interfaceinvoke $r87.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r90);
        goto label25;

     label24:
        interfaceinvoke r82.<java.util.List: boolean add(java.lang.Object)>(r84);

     label25:
        i7 = i7 + 1;

     label26:
        if i7 < i6 goto label23;

        $i8 = interfaceinvoke r82.<java.util.List: int size()>();
        $r91 = newarray (java.lang.String)[$i8];
        $r92 = interfaceinvoke r82.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r91);
        $r93 = (java.lang.String[]) $r92;
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] defaultServerProtocols> = $r93;
        $r94 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] defaultServerProtocols>;
        $i9 = lengthof $r94;
        if $i9 != 0 goto label32;

        $r95 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r96 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r97 = newarray (java.lang.Object)[1];
        $r98 = virtualinvoke r1.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getName()>();
        $r97[0] = $r98;
        $r99 = virtualinvoke $r96.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.noDefaultProtocols", $r97);
        interfaceinvoke $r95.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r99);
        goto label32;

     label27:
        $r100 := @caughtexception;
        r10 = $r100;

     label28:
        virtualinvoke r21.<javax.net.ssl.SSLServerSocket: void close()>();

     label29:
        goto label31;

     label30:
        $r101 := @caughtexception;
        r11 = $r101;
        $r102 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r103 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r104 = virtualinvoke $r103.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jsse.exceptionOnClose");
        interfaceinvoke $r102.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r104, r11);

     label31:
        throw r10;

     label32:
        virtualinvoke r21.<javax.net.ssl.SSLServerSocket: void close()>();

     label33:
        goto label35;

     label34:
        $r105 := @caughtexception;
        r106 = $r105;
        $r107 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r108 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r109 = virtualinvoke $r108.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jsse.exceptionOnClose");
        interfaceinvoke $r107.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r109, r106);

     label35:
        return;

        catch java.security.NoSuchAlgorithmException from label0 to label1 with label2;
        catch java.security.KeyManagementException from label0 to label1 with label3;
        catch java.io.IOException from label9 to label10 with label11;
        catch java.lang.Throwable from label12 to label27 with label27;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.io.IOException from label32 to label33 with label34;
    }

    public java.net.ServerSocket createSocket(int) throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        int i0;
        java.net.ServerSocket r1;
        javax.net.ssl.SSLServerSocketFactory $r2;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        i0 := @parameter0: int;
        virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void init()>();
        $r2 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.SSLServerSocketFactory sslProxy>;
        r1 = virtualinvoke $r2.<javax.net.ssl.SSLServerSocketFactory: java.net.ServerSocket createServerSocket(int)>(i0);
        specialinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void initServerSocket(java.net.ServerSocket)>(r1);
        return r1;
    }

    public java.net.ServerSocket createSocket(int, int) throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        int i0, i1;
        java.net.ServerSocket r1;
        javax.net.ssl.SSLServerSocketFactory $r2;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void init()>();
        $r2 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.SSLServerSocketFactory sslProxy>;
        r1 = virtualinvoke $r2.<javax.net.ssl.SSLServerSocketFactory: java.net.ServerSocket createServerSocket(int,int)>(i0, i1);
        specialinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void initServerSocket(java.net.ServerSocket)>(r1);
        return r1;
    }

    public java.net.ServerSocket createSocket(int, int, java.net.InetAddress) throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        int i0, i1;
        java.net.InetAddress r1;
        java.net.ServerSocket r2;
        javax.net.ssl.SSLServerSocketFactory $r3;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.net.InetAddress;
        virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void init()>();
        $r3 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.SSLServerSocketFactory sslProxy>;
        r2 = virtualinvoke $r3.<javax.net.ssl.SSLServerSocketFactory: java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress)>(i0, i1, r1);
        specialinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void initServerSocket(java.net.ServerSocket)>(r2);
        return r2;
    }

    public java.net.Socket acceptSocket(java.net.ServerSocket) throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.net.ServerSocket r1;
        null_type n0;
        javax.net.ssl.SSLException r2, $r6;
        java.lang.StringBuilder $r3, $r9;
        java.net.Socket $r4;
        javax.net.ssl.SSLSocket r5;
        java.net.SocketException $r7;
        java.lang.String $r8, $r10;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: java.net.ServerSocket;
        n0 = null;

     label0:
        $r4 = virtualinvoke r1.<java.net.ServerSocket: java.net.Socket accept()>();
        r5 = (javax.net.ssl.SSLSocket) $r4;

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = new java.net.SocketException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("SSL handshake error");
        $r8 = virtualinvoke r2.<javax.net.ssl.SSLException: java.lang.String toString()>();
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.net.SocketException: void <init>(java.lang.String)>($r10);
        throw $r7;

     label3:
        return r5;

        catch javax.net.ssl.SSLException from label0 to label1 with label2;
    }

    public void handshake(java.net.Socket) throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.net.Socket r1;
        javax.net.ssl.SSLSession r2;
        javax.net.ssl.SSLSocket $r3, $r6;
        java.lang.String $r4;
        boolean $z0, $z1, $z2;
        java.io.IOException $r5;
        java.lang.String[] $r7;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: java.net.Socket;
        $r3 = (javax.net.ssl.SSLSocket) r1;
        r2 = virtualinvoke $r3.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();
        $r4 = interfaceinvoke r2.<javax.net.ssl.SSLSession: java.lang.String getCipherSuite()>();
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("SSL_NULL_WITH_NULL_NULL");
        if $z0 == 0 goto label0;

        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("SSL handshake failed. Ciper suite in SSL Session is SSL_NULL_WITH_NULL_NULL");
        throw $r5;

     label0:
        $z1 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean allowUnsafeLegacyRenegotiation>;
        if $z1 != 0 goto label1;

        $z2 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean rfc5746Supported>;
        if $z2 != 0 goto label1;

        $r6 = (javax.net.ssl.SSLSocket) r1;
        $r7 = newarray (java.lang.String)[0];
        virtualinvoke $r6.<javax.net.ssl.SSLSocket: void setEnabledCipherSuites(java.lang.String[])>($r7);

     label1:
        return;
    }

    public java.lang.String[] getEnableableCiphers(javax.net.ssl.SSLContext)
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        javax.net.ssl.SSLContext r1;
        java.lang.String r2, r5, r6, $r9, $r12, r24, $r26, $r28, $r32, $r37, $r43;
        java.util.ArrayList r3, $r14, $r17, r18, $r21, $r38, r39;
        java.lang.String[] r4, r7, $r11, $r13, $r15, $r16, r20, $r44, $r46;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10;
        org.apache.tomcat.util.net.AbstractEndpoint $r8;
        boolean $z0, $z2, $z3, $z5, $z8, $z9;
        javax.net.ssl.SSLParameters $r10, $r19;
        java.util.List r22;
        java.lang.StringBuilder $r25, $r27;
        org.apache.juli.logging.Log $r29, $r33, $r34, $r40;
        org.apache.tomcat.util.res.StringManager $r30, $r35, $r41;
        java.lang.Object[] $r31, $r36, $r42, $r45;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: javax.net.ssl.SSLContext;
        $r8 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r2 = virtualinvoke $r8.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getCiphers()>();
        $r9 = "ALL";
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z0 == 0 goto label0;

        $r10 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()>();
        $r11 = virtualinvoke $r10.<javax.net.ssl.SSLParameters: java.lang.String[] getCipherSuites()>();
        return $r11;

     label0:
        if r2 == null goto label1;

        $r12 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();
        $i3 = virtualinvoke $r12.<java.lang.String: int length()>();
        if $i3 != 0 goto label2;

     label1:
        $r13 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] defaultServerCipherSuites>;
        return $r13;

     label2:
        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        r3 = $r14;
        $r15 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");
        r4 = $r15;
        i0 = lengthof $r15;
        i1 = 0;
        goto label5;

     label3:
        r5 = r4[i1];
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();
        $i4 = virtualinvoke r6.<java.lang.String: int length()>();
        if $i4 <= 0 goto label4;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label3;

        $z2 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();
        if $z2 == 0 goto label6;

        $r16 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] defaultServerCipherSuites>;
        return $r16;

     label6:
        $r17 = new java.util.ArrayList;
        specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);
        r18 = $r17;
        $r19 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()>();
        r20 = virtualinvoke $r19.<javax.net.ssl.SSLParameters: java.lang.String[] getCipherSuites()>();
        $z3 = <org.apache.tomcat.util.compat.JreVendor: boolean IS_IBM_JVM>;
        if $z3 == 0 goto label10;

        $r21 = new java.util.ArrayList;
        $i5 = lengthof r20;
        $i6 = $i5 * 2;
        specialinvoke $r21.<java.util.ArrayList: void <init>(int)>($i6);
        r22 = $r21;
        r7 = r20;
        i2 = lengthof r20;
        i7 = 0;
        goto label9;

     label7:
        r24 = r7[i7];
        interfaceinvoke r22.<java.util.List: boolean add(java.lang.Object)>(r24);
        $z5 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("SSL");
        if $z5 == 0 goto label8;

        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("TLS");
        $r26 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int)>(3);
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke r22.<java.util.List: boolean add(java.lang.Object)>($r28);

     label8:
        i7 = i7 + 1;

     label9:
        if i7 < i2 goto label7;

        goto label11;

     label10:
        r22 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r20);

     label11:
        interfaceinvoke r18.<java.util.List: boolean retainAll(java.util.Collection)>(r22);
        $z8 = interfaceinvoke r18.<java.util.List: boolean isEmpty()>();
        if $z8 == 0 goto label12;

        $r29 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r30 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r31 = newarray (java.lang.Object)[1];
        $r31[0] = r2;
        $r32 = virtualinvoke $r30.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.requested_ciphers_not_supported", $r31);
        interfaceinvoke $r29.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r32);

     label12:
        $r33 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $z9 = interfaceinvoke $r33.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z9 == 0 goto label13;

        $r34 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r35 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r36 = newarray (java.lang.Object)[1];
        $r36[0] = r18;
        $r37 = virtualinvoke $r35.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.enableable_ciphers", $r36);
        interfaceinvoke $r34.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r37);
        $i8 = interfaceinvoke r18.<java.util.List: int size()>();
        $i9 = interfaceinvoke r3.<java.util.List: int size()>();
        if $i8 == $i9 goto label13;

        $r38 = new java.util.ArrayList;
        specialinvoke $r38.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);
        r39 = $r38;
        interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r18);
        $r40 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r41 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r42 = newarray (java.lang.Object)[1];
        $r42[0] = r39;
        $r43 = virtualinvoke $r41.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.unsupported_ciphers", $r42);
        interfaceinvoke $r40.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r43);

     label13:
        $i10 = interfaceinvoke r18.<java.util.List: int size()>();
        $r44 = newarray (java.lang.String)[$i10];
        $r45 = interfaceinvoke r18.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r44);
        $r46 = (java.lang.String[]) $r45;
        return $r46;
    }

    protected java.lang.String getKeystorePassword()
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1;
        org.apache.tomcat.util.net.AbstractEndpoint $r2, $r3;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        $r2 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r1 = virtualinvoke $r2.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getKeystorePass()>();
        if r1 != null goto label0;

        $r3 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r1 = virtualinvoke $r3.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getKeyPass()>();

     label0:
        if r1 != null goto label1;

        r1 = "changeit";

     label1:
        return r1;
    }

    protected java.security.KeyStore getKeystore(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1, r2, r3, r4;
        org.apache.tomcat.util.net.AbstractEndpoint $r5;
        java.security.KeyStore $r6;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r5 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r4 = virtualinvoke $r5.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getKeystoreFile()>();
        if r4 != null goto label0;

        r4 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String defaultKeystoreFile>;

     label0:
        $r6 = specialinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.security.KeyStore getStore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r4, r3);
        return $r6;
    }

    protected java.security.KeyStore getTrustStore(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1, r2, r4, r6, r7, r8, $r15, $r21, $r27, $r33, $r37;
        java.security.KeyStore r3;
        java.lang.StringBuilder $r5, $r14, $r19, $r20, $r25, $r26, $r31, $r32;
        java.io.IOException r9, $r34;
        java.lang.Throwable r10;
        org.apache.tomcat.util.net.AbstractEndpoint $r11, $r16, $r22, $r28;
        org.apache.juli.logging.Log $r12, $r13, $r17, $r18, $r23, $r24, $r29, $r30, $r35;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.tomcat.util.res.StringManager $r36;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = null;
        $r11 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r4 = virtualinvoke $r11.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getTruststoreFile()>();
        if r4 != null goto label0;

        r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.trustStore");

     label0:
        $r12 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r12.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label1;

        $r13 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Truststore = ");
        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r15);

     label1:
        $r16 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r6 = virtualinvoke $r16.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getTruststorePass()>();
        if r6 != null goto label2;

        r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.trustStorePassword");

     label2:
        $r17 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r17.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label3;

        $r18 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("TrustPass = ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r21);

     label3:
        $r22 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r7 = virtualinvoke $r22.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getTruststoreType()>();
        if r7 != null goto label4;

        r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.trustStoreType");

     label4:
        if r7 != null goto label5;

        r7 = r1;

     label5:
        $r23 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r23.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label6;

        $r24 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("trustType = ");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r24.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r27);

     label6:
        $r28 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r8 = virtualinvoke $r28.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getTruststoreProvider()>();
        if r8 != null goto label7;

        r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.trustStoreProvider");

     label7:
        if r8 != null goto label8;

        r8 = r2;

     label8:
        $r29 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r29.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label9;

        $r30 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>("trustProvider = ");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r30.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r33);

     label9:
        if r4 == null goto label14;

     label10:
        r3 = specialinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.security.KeyStore getStore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r7, r8, r4, r6);

     label11:
        goto label14;

     label12:
        $r34 := @caughtexception;
        r9 = $r34;
        r10 = virtualinvoke r9.<java.io.IOException: java.lang.Throwable getCause()>();
        $z4 = r10 instanceof java.security.UnrecoverableKeyException;
        if $z4 == 0 goto label13;

        $r35 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r36 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r37 = virtualinvoke $r36.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jsse.invalid_truststore_password");
        interfaceinvoke $r35.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r37, r10);
        r3 = specialinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.security.KeyStore getStore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r7, r8, r4, null);
        goto label14;

     label13:
        throw r9;

     label14:
        return r3;

        catch java.io.IOException from label10 to label11 with label12;
    }

    private java.security.KeyStore getStore(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1, r2, r3, r4, r7, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r25, $r26, $r33;
        null_type n0;
        java.io.InputStream r5;
        char[] r6;
        java.lang.Throwable r8, $r36;
        java.io.IOException r9, $r27, r28, $r35, $r37, $r38, r39;
        java.security.KeyStore r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0;
        org.apache.juli.logging.Log $r14, $r22, $r34;
        org.apache.tomcat.util.res.StringManager $r15, $r23, $r31;
        java.io.FileNotFoundException $r20, r21;
        java.lang.Object[] $r24, $r32;
        java.lang.Exception $r29, r30;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        n0 = null;
        r5 = null;

     label0:
        if r2 != null goto label1;

        r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1);
        goto label2;

     label1:
        r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        $r11 = "PKCS11";
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z0 != 0 goto label3;

        $r12 = "";
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);
        if $z1 != 0 goto label3;

        r5 = staticinvoke <org.apache.tomcat.util.file.ConfigFileLoader: java.io.InputStream getInputStream(java.lang.String)>(r3);

     label3:
        $r13 = "PKCS12";
        $z2 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z2 == 0 goto label4;

        if r4 == null goto label4;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i0 != 0 goto label4;

        $z3 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: boolean isJre7Available()>();
        if $z3 != 0 goto label4;

        $r14 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r15 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r16 = virtualinvoke $r15.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jsse.java6.emptyPass");
        interfaceinvoke $r14.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r16);

     label4:
        r6 = null;
        if r4 == null goto label6;

        $r17 = "";
        $z4 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        if $z4 == 0 goto label5;

        $r18 = "JKS";
        $z5 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z5 != 0 goto label5;

        $r19 = "PKCS12";
        $z6 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z6 == 0 goto label6;

     label5:
        r6 = virtualinvoke r4.<java.lang.String: char[] toCharArray()>();

     label6:
        virtualinvoke r10.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r5, r6);

     label7:
        goto label16;

     label8:
        $r20 := @caughtexception;
        r21 = $r20;
        $r22 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r23 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r24 = newarray (java.lang.Object)[3];
        $r24[0] = r1;
        $r24[1] = r3;
        $r25 = virtualinvoke r21.<java.io.FileNotFoundException: java.lang.String getMessage()>();
        $r24[2] = $r25;
        $r26 = virtualinvoke $r23.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.keystore_load_failed", $r24);
        interfaceinvoke $r22.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r26, r21);
        throw r21;

     label9:
        $r27 := @caughtexception;
        r28 = $r27;
        throw r28;

     label10:
        $r29 := @caughtexception;
        r30 = $r29;
        $r31 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r32 = newarray (java.lang.Object)[3];
        $r32[0] = r1;
        $r32[1] = r3;
        $r33 = virtualinvoke r30.<java.lang.Exception: java.lang.String getMessage()>();
        $r32[2] = $r33;
        r7 = virtualinvoke $r31.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.keystore_load_failed", $r32);
        $r34 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        interfaceinvoke $r34.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>(r7, r30);
        $r35 = new java.io.IOException;
        specialinvoke $r35.<java.io.IOException: void <init>(java.lang.String)>(r7);
        throw $r35;

     label11:
        $r36 := @caughtexception;
        r8 = $r36;
        if r5 == null goto label15;

     label12:
        virtualinvoke r5.<java.io.InputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r37 := @caughtexception;
        r9 = $r37;

     label15:
        throw r8;

     label16:
        if r5 == null goto label20;

     label17:
        virtualinvoke r5.<java.io.InputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r38 := @caughtexception;
        r39 = $r38;

     label20:
        return r10;

        catch java.io.FileNotFoundException from label0 to label7 with label8;
        catch java.io.IOException from label0 to label7 with label9;
        catch java.lang.Exception from label0 to label7 with label10;
        catch java.lang.Throwable from label0 to label11 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label17 to label18 with label19;
    }

    void init() throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1, $r5, $r6, $r7, $r13, $r15, $r20;
        javax.net.ssl.SSLContext r2;
        javax.net.ssl.SSLSessionContext r3;
        org.apache.tomcat.util.net.AbstractEndpoint $r4, $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.net.ssl.KeyManager[] $r8;
        javax.net.ssl.TrustManager[] $r9;
        javax.net.ssl.SSLServerSocketFactory $r10;
        java.lang.String[] $r11, $r12;
        java.lang.Exception $r16, r17;
        java.io.IOException $r18, $r19;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;

     label0:
        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r1 = virtualinvoke $r4.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getClientAuth()>();
        $r5 = "true";
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z0 != 0 goto label1;

        $r6 = "yes";
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z1 == 0 goto label2;

     label1:
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean requireClientAuth> = 1;
        goto label3;

     label2:
        $r7 = "want";
        $z2 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z2 == 0 goto label3;

        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean wantClientAuth> = 1;

     label3:
        r2 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.SSLContext createSSLContext()>();
        $r8 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();
        $r9 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();
        virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r8, $r9, null);
        r3 = virtualinvoke r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getServerSessionContext()>();
        if r3 == null goto label4;

        virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void configureSessionContext(javax.net.ssl.SSLSessionContext)>(r3);

     label4:
        $r10 = virtualinvoke r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLServerSocketFactory getServerSocketFactory()>();
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.SSLServerSocketFactory sslProxy> = $r10;
        $r11 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] getEnableableCiphers(javax.net.ssl.SSLContext)>(r2);
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] enabledCiphers> = $r11;
        $r12 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] getEnableableProtocols(javax.net.ssl.SSLContext)>(r2);
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] enabledProtocols> = $r12;
        $r13 = "true";
        $r14 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r15 = virtualinvoke $r14.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getAllowUnsafeLegacyRenegotiation()>();
        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r15);
        r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean allowUnsafeLegacyRenegotiation> = $z3;
        specialinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void checkConfig()>();

     label5:
        goto label8;

     label6:
        $r16 := @caughtexception;
        r17 = $r16;
        $z4 = r17 instanceof java.io.IOException;
        if $z4 == 0 goto label7;

        $r18 = (java.io.IOException) r17;
        throw $r18;

     label7:
        $r19 = new java.io.IOException;
        $r20 = virtualinvoke r17.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r20, r17);
        throw $r19;

     label8:
        return;

        catch java.lang.Exception from label0 to label5 with label6;
    }

    public javax.net.ssl.SSLContext createSSLContext() throws java.lang.Exception
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1;
        javax.net.ssl.SSLContext r2;
        org.apache.tomcat.util.net.AbstractEndpoint $r3;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        $r3 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r1 = virtualinvoke $r3.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getSslProtocol()>();
        if r1 != null goto label0;

        r1 = "TLS";

     label0:
        r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1);
        return r2;
    }

    public javax.net.ssl.KeyManager[] getKeyManagers() throws java.lang.Exception
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1, r2, $r6, $r8;
        org.apache.tomcat.util.net.AbstractEndpoint $r3, $r4, $r5, $r7;
        javax.net.ssl.KeyManager[] $r9;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        $r3 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r1 = virtualinvoke $r3.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getKeystoreType()>();
        if r1 != null goto label0;

        r1 = "JKS";

     label0:
        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r2 = virtualinvoke $r4.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getAlgorithm()>();
        if r2 != null goto label1;

        r2 = staticinvoke <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>();

     label1:
        $r5 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r6 = virtualinvoke $r5.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getKeystoreProvider()>();
        $r7 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r8 = virtualinvoke $r7.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getKeyAlias()>();
        $r9 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.KeyManager[] getKeyManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, $r6, r2, $r8);
        return $r9;
    }

    public javax.net.ssl.TrustManager[] getTrustManagers() throws java.lang.Exception
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1, r2, $r7;
        org.apache.tomcat.util.net.AbstractEndpoint $r3, $r4, $r5, $r6;
        javax.net.ssl.TrustManager[] $r8;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        $r3 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r1 = virtualinvoke $r3.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getTruststoreType()>();
        if r1 != null goto label0;

        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.trustStoreType");

     label0:
        if r1 != null goto label1;

        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r1 = virtualinvoke $r4.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getKeystoreType()>();

     label1:
        if r1 != null goto label2;

        r1 = "JKS";

     label2:
        $r5 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getTruststoreAlgorithm()>();
        if r2 != null goto label3;

        r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

     label3:
        $r6 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r7 = virtualinvoke $r6.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getKeystoreProvider()>();
        $r8 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.lang.String,java.lang.String,java.lang.String)>(r1, $r7, r2);
        return $r8;
    }

    public void configureSessionContext(javax.net.ssl.SSLSessionContext)
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        javax.net.ssl.SSLSessionContext r1;
        int i0, i1;
        org.apache.tomcat.util.net.AbstractEndpoint $r2, $r4, $r6, $r8;
        java.lang.String $r3, $r5, $r7, $r9;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: javax.net.ssl.SSLSessionContext;
        $r2 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getSessionCacheSize()>();
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r5 = virtualinvoke $r4.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getSessionCacheSize()>();
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
        goto label1;

     label0:
        i0 = 0;

     label1:
        $r6 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r7 = virtualinvoke $r6.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getSessionTimeout()>();
        if $r7 == null goto label2;

        $r8 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r9 = virtualinvoke $r8.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getSessionTimeout()>();
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);
        goto label3;

     label2:
        i1 = 86400;

     label3:
        interfaceinvoke r1.<javax.net.ssl.SSLSessionContext: void setSessionCacheSize(int)>(i0);
        interfaceinvoke r1.<javax.net.ssl.SSLSessionContext: void setSessionTimeout(int)>(i1);
        return;
    }

    protected javax.net.ssl.KeyManager[] getKeyManagers(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1, r2, r3, r4, r5, r8, r9, $r13, $r17;
        null_type n0;
        java.security.KeyStore r6;
        javax.net.ssl.KeyManagerFactory r7;
        int i0, $i1;
        boolean $z0, $z1;
        java.io.IOException $r10;
        org.apache.tomcat.util.res.StringManager $r11;
        java.lang.Object[] $r12;
        org.apache.tomcat.util.net.AbstractEndpoint $r14;
        char[] $r15;
        javax.net.ssl.KeyManager[] r16;
        java.util.Locale $r18;
        org.apache.tomcat.util.net.jsse.JSSEKeyManager $r19;
        javax.net.ssl.KeyManager $r20;
        javax.net.ssl.X509KeyManager $r21;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        n0 = null;
        r5 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String getKeystorePassword()>();
        r6 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.security.KeyStore getKeystore(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r5);
        if r4 == null goto label0;

        $z0 = virtualinvoke r6.<java.security.KeyStore: boolean isKeyEntry(java.lang.String)>(r4);
        if $z0 != 0 goto label0;

        $r10 = new java.io.IOException;
        $r11 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = newarray (java.lang.Object)[1];
        $r12[0] = r4;
        $r13 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.alias_no_key_entry", $r12);
        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r13);
        throw $r10;

     label0:
        r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r3);
        $r14 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r8 = virtualinvoke $r14.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getKeyPass()>();
        if r8 != null goto label1;

        r8 = r5;

     label1:
        $r15 = virtualinvoke r8.<java.lang.String: char[] toCharArray()>();
        virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r6, $r15);
        r16 = virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();
        if r4 == null goto label5;

        r9 = r4;
        $r17 = "JKS";
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label2;

        $r18 = <java.util.Locale: java.util.Locale ENGLISH>;
        r9 = virtualinvoke r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r18);

     label2:
        i0 = 0;
        goto label4;

     label3:
        $r19 = new org.apache.tomcat.util.net.jsse.JSSEKeyManager;
        $r20 = r16[i0];
        $r21 = (javax.net.ssl.X509KeyManager) $r20;
        specialinvoke $r19.<org.apache.tomcat.util.net.jsse.JSSEKeyManager: void <init>(javax.net.ssl.X509KeyManager,java.lang.String)>($r21, r9);
        r16[i0] = $r19;
        i0 = i0 + 1;

     label4:
        $i1 = lengthof r16;
        if i0 < $i1 goto label3;

     label5:
        return r16;
    }

    protected javax.net.ssl.TrustManager[] getTrustManagers(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1, r2, r3, r4, r5, $r18, $r23;
        java.lang.ClassLoader r6;
        java.lang.Class r7, $r14, $r15;
        org.apache.tomcat.util.res.StringManager $r8;
        java.lang.Object r9;
        javax.net.ssl.TrustManager r10;
        javax.net.ssl.CertPathTrustManagerParameters r11, $r27;
        org.apache.tomcat.util.net.AbstractEndpoint $r12, $r13, $r22;
        int $i0;
        boolean $z0;
        java.lang.InstantiationException $r16;
        java.lang.Object[] $r17;
        javax.net.ssl.TrustManager[] $r19, r20;
        java.security.KeyStore r21;
        javax.net.ssl.TrustManagerFactory r24, r25;
        java.security.cert.CertPathParameters r26;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r12 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r4 = virtualinvoke $r12.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getCrlFile()>();
        $r13 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r5 = virtualinvoke $r13.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getTrustManagerClassName()>();
        if r5 == null goto label1;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();
        if $i0 <= 0 goto label1;

        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        r6 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        r7 = virtualinvoke r6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r5);
        $r15 = class "javax/net/ssl/TrustManager";
        $z0 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r7);
        if $z0 != 0 goto label0;

        $r16 = new java.lang.InstantiationException;
        $r8 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r17 = newarray (java.lang.Object)[1];
        $r17[0] = r5;
        $r18 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.invalidTrustManagerClassName", $r17);
        specialinvoke $r16.<java.lang.InstantiationException: void <init>(java.lang.String)>($r18);
        throw $r16;

     label0:
        r9 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>();
        r10 = (javax.net.ssl.TrustManager) r9;
        $r19 = newarray (javax.net.ssl.TrustManager)[1];
        $r19[0] = r10;
        return $r19;

     label1:
        r20 = null;
        r21 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.security.KeyStore getTrustStore(java.lang.String,java.lang.String)>(r1, r2);
        if r21 != null goto label2;

        $r22 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r23 = virtualinvoke $r22.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getTrustManagerClassName()>();
        if $r23 == null goto label4;

     label2:
        if r4 != null goto label3;

        r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r3);
        virtualinvoke r24.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r21);
        r20 = virtualinvoke r24.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();
        goto label4;

     label3:
        r25 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r3);
        r26 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.security.cert.CertPathParameters getParameters(java.lang.String,java.lang.String,java.security.KeyStore)>(r3, r4, r21);
        $r27 = new javax.net.ssl.CertPathTrustManagerParameters;
        specialinvoke $r27.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>(r26);
        r11 = $r27;
        virtualinvoke r25.<javax.net.ssl.TrustManagerFactory: void init(javax.net.ssl.ManagerFactoryParameters)>(r11);
        r20 = virtualinvoke r25.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label4:
        return r20;
    }

    protected java.security.cert.CertPathParameters getParameters(java.lang.String, java.lang.String, java.security.KeyStore) throws java.lang.Exception
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1, r2, r9, $r11, $r19, $r24;
        java.security.KeyStore r3;
        null_type n0;
        java.security.cert.X509CertSelector $r4;
        java.security.cert.PKIXBuilderParameters r5, $r12, r20;
        java.util.Collection r6;
        java.security.cert.CollectionCertStoreParameters r7, $r13;
        java.security.cert.CertStore r8;
        java.lang.Exception r10, $r15;
        boolean $z0;
        org.apache.tomcat.util.net.AbstractEndpoint $r14;
        int $i0;
        org.apache.juli.logging.Log $r16;
        java.lang.StringBuilder $r17, $r18, $r22, $r23;
        java.security.cert.CRLException $r21;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.security.KeyStore;
        n0 = null;
        $r11 = "PKIX";
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z0 == 0 goto label4;

        $r12 = new java.security.cert.PKIXBuilderParameters;
        $r4 = new java.security.cert.X509CertSelector;
        specialinvoke $r4.<java.security.cert.X509CertSelector: void <init>()>();
        specialinvoke $r12.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>(r3, $r4);
        r5 = $r12;
        r6 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.util.Collection getCRLs(java.lang.String)>(r2);
        $r13 = new java.security.cert.CollectionCertStoreParameters;
        specialinvoke $r13.<java.security.cert.CollectionCertStoreParameters: void <init>(java.util.Collection)>(r6);
        r7 = $r13;
        r8 = staticinvoke <java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters)>("Collection", r7);
        virtualinvoke r5.<java.security.cert.PKIXBuilderParameters: void addCertStore(java.security.cert.CertStore)>(r8);
        virtualinvoke r5.<java.security.cert.PKIXBuilderParameters: void setRevocationEnabled(boolean)>(1);
        $r14 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r9 = virtualinvoke $r14.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getTrustMaxCertLength()>();
        if r9 == null goto label3;

     label0:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9);
        virtualinvoke r5.<java.security.cert.PKIXBuilderParameters: void setMaxPathLength(int)>($i0);

     label1:
        goto label3;

     label2:
        $r15 := @caughtexception;
        r10 = $r15;
        $r16 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bad maxCertLength: ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r16.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r19);

     label3:
        r20 = r5;
        goto label5;

     label4:
        $r21 = new java.security.cert.CRLException;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("CRLs not supported for type: ");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r21.<java.security.cert.CRLException: void <init>(java.lang.String)>($r24);
        throw $r21;

     label5:
        return r20;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    protected java.util.Collection getCRLs(java.lang.String) throws java.io.IOException, java.security.cert.CRLException, java.security.cert.CertificateException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.lang.String r1;
        null_type n0;
        java.io.InputStream r2;
        java.security.cert.CertificateFactory r3;
        java.lang.Throwable r4, $r13;
        java.lang.Exception r5, $r14, $r15, r16;
        java.util.Collection r6;
        java.io.IOException $r7, r8;
        java.security.cert.CRLException $r9, r10;
        java.security.cert.CertificateException $r11, r12;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: java.lang.String;
        n0 = null;
        r2 = null;

     label0:
        r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");
        r2 = staticinvoke <org.apache.tomcat.util.file.ConfigFileLoader: java.io.InputStream getInputStream(java.lang.String)>(r1);
        r6 = virtualinvoke r3.<java.security.cert.CertificateFactory: java.util.Collection generateCRLs(java.io.InputStream)>(r2);

     label1:
        goto label10;

     label2:
        $r7 := @caughtexception;
        r8 = $r7;
        throw r8;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;
        throw r10;

     label4:
        $r11 := @caughtexception;
        r12 = $r11;
        throw r12;

     label5:
        $r13 := @caughtexception;
        r4 = $r13;
        if r2 == null goto label9;

     label6:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label7:
        goto label9;

     label8:
        $r14 := @caughtexception;
        r5 = $r14;

     label9:
        throw r4;

     label10:
        if r2 == null goto label14;

     label11:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;
        r16 = $r15;

     label14:
        return r6;

        catch java.io.IOException from label0 to label1 with label2;
        catch java.security.cert.CRLException from label0 to label1 with label3;
        catch java.security.cert.CertificateException from label0 to label1 with label4;
        catch java.lang.Throwable from label0 to label5 with label5;
        catch java.lang.Exception from label6 to label7 with label8;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public java.lang.String[] getEnableableProtocols(javax.net.ssl.SSLContext)
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        javax.net.ssl.SSLContext r1;
        java.lang.String[] r2, $r6, $r10, $r28, $r30;
        java.util.ArrayList r3, r4, $r7, $r22;
        org.apache.tomcat.util.net.AbstractEndpoint $r5;
        int $i0, $i1, $i2, $i3;
        java.util.List $r8, $r11, $r15, $r23;
        javax.net.ssl.SSLParameters $r9;
        boolean $z1, $z2;
        org.apache.juli.logging.Log $r12, $r17, $r18, $r24;
        org.apache.tomcat.util.res.StringManager $r13, $r19, $r25;
        java.lang.Object[] $r14, $r20, $r26, $r29;
        java.lang.String $r16, $r21, $r27;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: javax.net.ssl.SSLContext;
        $r5 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        r2 = virtualinvoke $r5.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String[] getSslEnabledProtocolsArray()>();
        if r2 == null goto label0;

        $i0 = lengthof r2;
        if $i0 != 0 goto label1;

     label0:
        $r6 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] defaultServerProtocols>;
        return $r6;

     label1:
        $r7 = new java.util.ArrayList;
        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);
        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);
        r3 = $r7;
        $r9 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()>();
        $r10 = virtualinvoke $r9.<javax.net.ssl.SSLParameters: java.lang.String[] getProtocols()>();
        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);
        interfaceinvoke r3.<java.util.List: boolean retainAll(java.util.Collection)>($r11);
        $z1 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();
        if $z1 == 0 goto label2;

        $r12 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r13 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r14 = newarray (java.lang.Object)[1];
        $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);
        $r14[0] = $r15;
        $r16 = virtualinvoke $r13.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.requested_protocols_not_supported", $r14);
        interfaceinvoke $r12.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r16);

     label2:
        $r17 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r17.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label3;

        $r18 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r19 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = newarray (java.lang.Object)[1];
        $r20[0] = r3;
        $r21 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.enableable_protocols", $r20);
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r21);
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();
        $i2 = lengthof r2;
        if $i1 == $i2 goto label3;

        $r22 = new java.util.ArrayList;
        $r23 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);
        specialinvoke $r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r23);
        r4 = $r22;
        interfaceinvoke r4.<java.util.List: boolean removeAll(java.util.Collection)>(r3);
        $r24 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.juli.logging.Log log>;
        $r25 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r26 = newarray (java.lang.Object)[1];
        $r26[0] = r4;
        $r27 = virtualinvoke $r25.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.unsupported_protocols", $r26);
        interfaceinvoke $r24.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r27);

     label3:
        $i3 = interfaceinvoke r3.<java.util.List: int size()>();
        $r28 = newarray (java.lang.String)[$i3];
        $r29 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r28);
        $r30 = (java.lang.String[]) $r29;
        return $r30;
    }

    protected void configureClientAuth(javax.net.ssl.SSLServerSocket)
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        javax.net.ssl.SSLServerSocket r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: javax.net.ssl.SSLServerSocket;
        $z0 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean wantClientAuth>;
        if $z0 == 0 goto label0;

        $z1 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean wantClientAuth>;
        virtualinvoke r1.<javax.net.ssl.SSLServerSocket: void setWantClientAuth(boolean)>($z1);
        goto label1;

     label0:
        $z2 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: boolean requireClientAuth>;
        virtualinvoke r1.<javax.net.ssl.SSLServerSocket: void setNeedClientAuth(boolean)>($z2);

     label1:
        return;
    }

    protected void configureUseServerCipherSuitesOrder(javax.net.ssl.SSLServerSocket)
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        javax.net.ssl.SSLServerSocket r1;
        java.lang.String r2, $r5, $r6, $r7, $r8;
        boolean z0, $z1, $z2, $z3, $z4;
        org.apache.tomcat.util.compat.JreCompat r3;
        org.apache.tomcat.util.net.AbstractEndpoint $r4;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: javax.net.ssl.SSLServerSocket;
        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r5 = virtualinvoke $r4.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getUseServerCipherSuitesOrder()>();
        r2 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();
        $r6 = "";
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z1 != 0 goto label2;

        $r7 = "true";
        $z2 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        if $z2 != 0 goto label0;

        $r8 = "yes";
        $z3 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        if $z3 != 0 goto label0;

        $z4 = 0;
        goto label1;

     label0:
        $z4 = 1;

     label1:
        z0 = $z4;
        r3 = staticinvoke <org.apache.tomcat.util.compat.JreCompat: org.apache.tomcat.util.compat.JreCompat getInstance()>();
        virtualinvoke r3.<org.apache.tomcat.util.compat.JreCompat: void setUseServerCipherSuitesOrder(javax.net.ssl.SSLServerSocket,boolean)>(r1, z0);

     label2:
        return;
    }

    private void initServerSocket(java.net.ServerSocket)
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.net.ServerSocket r1;
        javax.net.ssl.SSLServerSocket r2;
        java.lang.String[] $r3, $r4;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        r1 := @parameter0: java.net.ServerSocket;
        r2 = (javax.net.ssl.SSLServerSocket) r1;
        $r3 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] enabledCiphers>;
        virtualinvoke r2.<javax.net.ssl.SSLServerSocket: void setEnabledCipherSuites(java.lang.String[])>($r3);
        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: java.lang.String[] enabledProtocols>;
        virtualinvoke r2.<javax.net.ssl.SSLServerSocket: void setEnabledProtocols(java.lang.String[])>($r4);
        virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void configureClientAuth(javax.net.ssl.SSLServerSocket)>(r2);
        virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void configureUseServerCipherSuitesOrder(javax.net.ssl.SSLServerSocket)>(r2);
        return;
    }

    private void checkConfig() throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESocketFactory r0;
        java.net.ServerSocket r1;
        javax.net.ssl.SSLException r2, $r8;
        org.apache.tomcat.util.res.StringManager $r3;
        java.io.IOException r4, $r9;
        java.lang.Throwable r5, $r16;
        javax.net.ssl.SSLServerSocketFactory $r6;
        java.lang.Object[] $r10;
        java.lang.String $r11, $r12;
        java.lang.Exception $r14, r15;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESocketFactory;
        $r6 = r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: javax.net.ssl.SSLServerSocketFactory sslProxy>;
        r1 = virtualinvoke $r6.<javax.net.ssl.SSLServerSocketFactory: java.net.ServerSocket createServerSocket()>();
        specialinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESocketFactory: void initServerSocket(java.net.ServerSocket)>(r1);

     label0:
        virtualinvoke r1.<java.net.ServerSocket: void setSoTimeout(int)>(1);
        virtualinvoke r1.<java.net.ServerSocket: java.net.Socket accept()>();

     label1:
        goto label7;

     label2:
        $r8 := @caughtexception;
        r2 = $r8;
        $r9 = new java.io.IOException;
        $r3 = <org.apache.tomcat.util.net.jsse.JSSESocketFactory: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = newarray (java.lang.Object)[1];
        $r11 = virtualinvoke r2.<javax.net.ssl.SSLException: java.lang.String getMessage()>();
        $r10[0] = $r11;
        $r12 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jsse.invalid_ssl_conf", $r10);
        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r12);
        r4 = $r9;
        virtualinvoke r4.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);
        throw r4;

     label3:
        $r14 := @caughtexception;
        r15 = $r14;

     label4:
        $z0 = virtualinvoke r1.<java.net.ServerSocket: boolean isClosed()>();
        if $z0 != 0 goto label8;

        virtualinvoke r1.<java.net.ServerSocket: void close()>();
        goto label8;

     label5:
        $r16 := @caughtexception;
        r5 = $r16;
        $z1 = virtualinvoke r1.<java.net.ServerSocket: boolean isClosed()>();
        if $z1 != 0 goto label6;

        virtualinvoke r1.<java.net.ServerSocket: void close()>();

     label6:
        throw r5;

     label7:
        $z2 = virtualinvoke r1.<java.net.ServerSocket: boolean isClosed()>();
        if $z2 != 0 goto label8;

        virtualinvoke r1.<java.net.ServerSocket: void close()>();

     label8:
        return;

        catch javax.net.ssl.SSLException from label0 to label1 with label2;
        catch java.lang.Exception from label0 to label1 with label3;
        catch java.lang.Throwable from label0 to label4 with label5;
    }
}
