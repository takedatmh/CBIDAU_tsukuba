public abstract class javax.xml.parsers.DocumentBuilderFactory extends java.lang.Object
{
    private static final java.lang.String DEFAULT_PROPERTY_NAME;
    private boolean validating;
    private boolean namespaceAware;
    private boolean whitespace;
    private boolean expandEntityRef;
    private boolean ignoreComments;
    private boolean coalescing;
    private boolean canonicalState;

    protected void <init>()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean validating> = 0;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean namespaceAware> = 0;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean whitespace> = 0;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean expandEntityRef> = 1;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean ignoreComments> = 0;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean coalescing> = 0;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean canonicalState> = 0;
        return;
    }

    public static javax.xml.parsers.DocumentBuilderFactory newInstance()
    {
        javax.xml.parsers.FactoryFinder$ConfigurationError r0, $r3;
        java.lang.Object $r1;
        javax.xml.parsers.DocumentBuilderFactory $r2;
        javax.xml.parsers.FactoryConfigurationError $r4;
        java.lang.Exception $r5;
        java.lang.String $r6;

     label0:
        $r1 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object find(java.lang.String,java.lang.String)>("javax.xml.parsers.DocumentBuilderFactory", "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl");
        $r2 = (javax.xml.parsers.DocumentBuilderFactory) $r1;

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r0 = $r3;
        $r4 = new javax.xml.parsers.FactoryConfigurationError;
        $r5 = virtualinvoke r0.<javax.xml.parsers.FactoryFinder$ConfigurationError: java.lang.Exception getException()>();
        $r6 = virtualinvoke r0.<javax.xml.parsers.FactoryFinder$ConfigurationError: java.lang.String getMessage()>();
        specialinvoke $r4.<javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.Exception,java.lang.String)>($r5, $r6);
        throw $r4;

        catch javax.xml.parsers.FactoryFinder$ConfigurationError from label0 to label1 with label2;
    }

    public static javax.xml.parsers.DocumentBuilderFactory newInstance(java.lang.String, java.lang.ClassLoader)
    {
        java.lang.String r0, $r8;
        java.lang.ClassLoader r1;
        javax.xml.parsers.FactoryFinder$ConfigurationError r2, $r5;
        java.lang.Object $r3;
        javax.xml.parsers.DocumentBuilderFactory $r4;
        javax.xml.parsers.FactoryConfigurationError $r6;
        java.lang.Exception $r7;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.ClassLoader;

     label0:
        $r3 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(r0, r1, 0);
        $r4 = (javax.xml.parsers.DocumentBuilderFactory) $r3;

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        $r6 = new javax.xml.parsers.FactoryConfigurationError;
        $r7 = virtualinvoke r2.<javax.xml.parsers.FactoryFinder$ConfigurationError: java.lang.Exception getException()>();
        $r8 = virtualinvoke r2.<javax.xml.parsers.FactoryFinder$ConfigurationError: java.lang.String getMessage()>();
        specialinvoke $r6.<javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.Exception,java.lang.String)>($r7, $r8);
        throw $r6;

        catch javax.xml.parsers.FactoryFinder$ConfigurationError from label0 to label1 with label2;
    }

    public abstract javax.xml.parsers.DocumentBuilder newDocumentBuilder() throws javax.xml.parsers.ParserConfigurationException;

    public void setNamespaceAware(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        z0 := @parameter0: boolean;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean namespaceAware> = z0;
        return;
    }

    public void setValidating(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        z0 := @parameter0: boolean;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean validating> = z0;
        return;
    }

    public void setIgnoringElementContentWhitespace(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        z0 := @parameter0: boolean;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean whitespace> = z0;
        return;
    }

    public void setExpandEntityReferences(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        z0 := @parameter0: boolean;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean expandEntityRef> = z0;
        return;
    }

    public void setIgnoringComments(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        z0 := @parameter0: boolean;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean ignoreComments> = z0;
        return;
    }

    public void setCoalescing(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        z0 := @parameter0: boolean;
        r0.<javax.xml.parsers.DocumentBuilderFactory: boolean coalescing> = z0;
        return;
    }

    public boolean isNamespaceAware()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean namespaceAware>;
        return $z0;
    }

    public boolean isValidating()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean validating>;
        return $z0;
    }

    public boolean isIgnoringElementContentWhitespace()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean whitespace>;
        return $z0;
    }

    public boolean isExpandEntityReferences()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean expandEntityRef>;
        return $z0;
    }

    public boolean isIgnoringComments()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean ignoreComments>;
        return $z0;
    }

    public boolean isCoalescing()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        $z0 = r0.<javax.xml.parsers.DocumentBuilderFactory: boolean coalescing>;
        return $z0;
    }

    public abstract void setAttribute(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException;

    public abstract java.lang.Object getAttribute(java.lang.String) throws java.lang.IllegalArgumentException;

    public abstract void setFeature(java.lang.String, boolean) throws javax.xml.parsers.ParserConfigurationException;

    public abstract boolean getFeature(java.lang.String) throws javax.xml.parsers.ParserConfigurationException;

    public javax.xml.validation.Schema getSchema()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r12, $r13;
        java.lang.Class $r4, $r9;
        java.lang.Package $r5, $r10;
        java.lang.String $r6, $r11, $r14;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        $r1 = new java.lang.UnsupportedOperationException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();
        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();
        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");
        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();
        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();
        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);
        throw $r1;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        javax.xml.validation.Schema r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3, $r4, $r8, $r9, $r13, $r14;
        java.lang.Class $r5, $r10;
        java.lang.Package $r6, $r11;
        java.lang.String $r7, $r12, $r15;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        r1 := @parameter0: javax.xml.validation.Schema;
        $r2 = new java.lang.UnsupportedOperationException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Package getPackage()>();
        $r7 = virtualinvoke $r6.<java.lang.Package: java.lang.String getSpecificationTitle()>();
        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");
        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Package getPackage()>();
        $r12 = virtualinvoke $r11.<java.lang.Package: java.lang.String getSpecificationVersion()>();
        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r15);
        throw $r2;
    }

    public void setXIncludeAware(boolean)
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        boolean z0;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.UnsupportedOperationException $r2;
        java.lang.Class $r4;
        java.lang.String $r6;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        z0 := @parameter0: boolean;
        if z0 == 0 goto label0;

        $r2 = new java.lang.UnsupportedOperationException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" setXIncludeAware is not supported on this JAXP implementation or earlier: ");
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6);
        throw $r2;

     label0:
        return;
    }

    public boolean isXIncludeAware()
    {
        javax.xml.parsers.DocumentBuilderFactory r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r12, $r13;
        java.lang.Class $r4, $r9;
        java.lang.Package $r5, $r10;
        java.lang.String $r6, $r11, $r14;

        r0 := @this: javax.xml.parsers.DocumentBuilderFactory;
        $r1 = new java.lang.UnsupportedOperationException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();
        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();
        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");
        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();
        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();
        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);
        throw $r1;
    }
}
