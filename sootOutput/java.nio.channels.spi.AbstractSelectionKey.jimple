public abstract class java.nio.channels.spi.AbstractSelectionKey extends java.nio.channels.SelectionKey
{
    private volatile boolean valid;

    protected void <init>()
    {
        java.nio.channels.spi.AbstractSelectionKey r0;

        r0 := @this: java.nio.channels.spi.AbstractSelectionKey;
        specialinvoke r0.<java.nio.channels.SelectionKey: void <init>()>();
        r0.<java.nio.channels.spi.AbstractSelectionKey: boolean valid> = 1;
        return;
    }

    public final boolean isValid()
    {
        java.nio.channels.spi.AbstractSelectionKey r0;
        boolean $z0;

        r0 := @this: java.nio.channels.spi.AbstractSelectionKey;
        $z0 = r0.<java.nio.channels.spi.AbstractSelectionKey: boolean valid>;
        return $z0;
    }

    void invalidate()
    {
        java.nio.channels.spi.AbstractSelectionKey r0;

        r0 := @this: java.nio.channels.spi.AbstractSelectionKey;
        r0.<java.nio.channels.spi.AbstractSelectionKey: boolean valid> = 0;
        return;
    }

    public final void cancel()
    {
        java.nio.channels.spi.AbstractSelectionKey r0, r2;
        java.lang.Throwable r3, $r6;
        boolean $z0;
        java.nio.channels.Selector $r4;
        java.nio.channels.spi.AbstractSelector $r5;

        r0 := @this: java.nio.channels.spi.AbstractSelectionKey;
        r2 = r0;
        entermonitor r0;

     label0:
        $z0 = r0.<java.nio.channels.spi.AbstractSelectionKey: boolean valid>;
        if $z0 == 0 goto label1;

        r0.<java.nio.channels.spi.AbstractSelectionKey: boolean valid> = 0;
        $r4 = virtualinvoke r0.<java.nio.channels.spi.AbstractSelectionKey: java.nio.channels.Selector selector()>();
        $r5 = (java.nio.channels.spi.AbstractSelector) $r4;
        virtualinvoke $r5.<java.nio.channels.spi.AbstractSelector: void cancel(java.nio.channels.SelectionKey)>(r0);

     label1:
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

     label4:
        r3 = $r6;
        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
