class java.util.Collections$EmptyList extends java.util.AbstractList implements java.util.RandomAccess, java.io.Serializable
{
    private static final long serialVersionUID;

    private void <init>()
    {
        java.util.Collections$EmptyList r0;

        r0 := @this: java.util.Collections$EmptyList;
        specialinvoke r0.<java.util.AbstractList: void <init>()>();
        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Collections$EmptyList r0;
        java.util.Iterator $r1;

        r0 := @this: java.util.Collections$EmptyList;
        $r1 = staticinvoke <java.util.Collections: java.util.Iterator emptyIterator()>();
        return $r1;
    }

    public java.util.ListIterator listIterator()
    {
        java.util.Collections$EmptyList r0;
        java.util.ListIterator $r1;

        r0 := @this: java.util.Collections$EmptyList;
        $r1 = staticinvoke <java.util.Collections: java.util.ListIterator emptyListIterator()>();
        return $r1;
    }

    public int size()
    {
        java.util.Collections$EmptyList r0;

        r0 := @this: java.util.Collections$EmptyList;
        return 0;
    }

    public boolean isEmpty()
    {
        java.util.Collections$EmptyList r0;

        r0 := @this: java.util.Collections$EmptyList;
        return 1;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Collections$EmptyList r0;
        java.lang.Object r1;

        r0 := @this: java.util.Collections$EmptyList;
        r1 := @parameter0: java.lang.Object;
        return 0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.Collections$EmptyList r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: java.util.Collections$EmptyList;
        r1 := @parameter0: java.util.Collection;
        $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();
        return $z0;
    }

    public java.lang.Object[] toArray()
    {
        java.util.Collections$EmptyList r0;
        java.lang.Object[] $r1;

        r0 := @this: java.util.Collections$EmptyList;
        $r1 = newarray (java.lang.Object)[0];
        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.Collections$EmptyList r0;
        java.lang.Object[] r1;
        int $i0;

        r0 := @this: java.util.Collections$EmptyList;
        r1 := @parameter0: java.lang.Object[];
        $i0 = lengthof r1;
        if $i0 <= 0 goto label0;

        r1[0] = null;

     label0:
        return r1;
    }

    public java.lang.Object get(int)
    {
        java.util.Collections$EmptyList r0;
        int i0;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: java.util.Collections$EmptyList;
        i0 := @parameter0: int;
        $r1 = new java.lang.IndexOutOfBoundsException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r5);
        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Collections$EmptyList r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.util.List $r2;

        r0 := @this: java.util.Collections$EmptyList;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.util.List;
        if $z0 == 0 goto label0;

        $r2 = (java.util.List) r1;
        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public int hashCode()
    {
        java.util.Collections$EmptyList r0;

        r0 := @this: java.util.Collections$EmptyList;
        return 1;
    }

    private java.lang.Object readResolve()
    {
        java.util.Collections$EmptyList r0;
        java.util.List $r1;

        r0 := @this: java.util.Collections$EmptyList;
        $r1 = <java.util.Collections: java.util.List EMPTY_LIST>;
        return $r1;
    }

    void <init>(java.util.Collections$1)
    {
        java.util.Collections$EmptyList r0;
        java.util.Collections$1 r1;

        r0 := @this: java.util.Collections$EmptyList;
        r1 := @parameter0: java.util.Collections$1;
        specialinvoke r0.<java.util.Collections$EmptyList: void <init>()>();
        return;
    }
}
