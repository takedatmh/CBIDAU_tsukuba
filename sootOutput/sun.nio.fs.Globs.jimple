public class sun.nio.fs.Globs extends java.lang.Object
{
    private static final java.lang.String regexMetaChars;
    private static final java.lang.String globMetaChars;
    private static char EOL;

    private void <init>()
    {
        sun.nio.fs.Globs r0;

        r0 := @this: sun.nio.fs.Globs;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static boolean isRegexMeta(char)
    {
        char c0;
        java.lang.String $r0;
        int $i1;
        boolean $z0;

        c0 := @parameter0: char;
        $r0 = ".^$+{[]|()";
        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(c0);
        if $i1 == -1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private static boolean isGlobMeta(char)
    {
        char c0;
        java.lang.String $r0;
        int $i1;
        boolean $z0;

        c0 := @parameter0: char;
        $r0 = "\\*?[{";
        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(c0);
        if $i1 == -1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private static char next(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;
        char $c2, $c3;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        if i0 >= $i1 goto label0;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        return $c2;

     label0:
        $c3 = <sun.nio.fs.Globs: char EOL>;
        return $c3;
    }

    private static java.lang.String toRegexPattern(java.lang.String, boolean)
    {
        java.lang.String r0, $r36;
        boolean z0, z1, z2, $z3, $z4, $z5;
        java.lang.StringBuilder r1, $r2, $r35;
        int i0, $i4, $i5, $i6, $i7, $i8, $i12, $i13, $i14, $i16, $i17, $i20, $i21, $i22, $i24;
        char c1, c2, c3, $c9, $c10, $c11, $c15, $c18, $c19, $c23;
        java.util.regex.PatternSyntaxException $r3, $r13, $r16, $r17, $r19, $r21, $r34;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        z1 = 0;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("^");
        r1 = $r2;
        i0 = 0;

     label0:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();
        if i0 >= $i4 goto label39;

        $i5 = i0;
        i0 = i0 + 1;
        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);
        lookupswitch(c1)
        {
            case 42: goto label31;
            case 44: goto label29;
            case 47: goto label5;
            case 63: goto label34;
            case 91: goto label7;
            case 92: goto label1;
            case 123: goto label25;
            case 125: goto label27;
            default: goto label36;
        };

     label1:
        $i6 = virtualinvoke r0.<java.lang.String: int length()>();
        if i0 != $i6 goto label2;

        $r3 = new java.util.regex.PatternSyntaxException;
        $i7 = i0 - 1;
        specialinvoke $r3.<java.util.regex.PatternSyntaxException: void <init>(java.lang.String,java.lang.String,int)>("No character to escape", r0, $i7);
        throw $r3;

     label2:
        $i8 = i0;
        i0 = i0 + 1;
        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);
        $z3 = staticinvoke <sun.nio.fs.Globs: boolean isGlobMeta(char)>(c2);
        if $z3 != 0 goto label3;

        $z4 = staticinvoke <sun.nio.fs.Globs: boolean isRegexMeta(char)>(c2);
        if $z4 == 0 goto label4;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);
        goto label38;

     label5:
        if z0 == 0 goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\\");
        goto label38;

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);
        goto label38;

     label7:
        if z0 == 0 goto label8;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[[^\\\\]&&[");
        goto label9;

     label8:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[[^/]&&[");

     label9:
        $c9 = staticinvoke <sun.nio.fs.Globs: char next(java.lang.String,int)>(r0, i0);
        if $c9 != 94 goto label10;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\^");
        i0 = i0 + 1;
        goto label12;

     label10:
        $c10 = staticinvoke <sun.nio.fs.Globs: char next(java.lang.String,int)>(r0, i0);
        if $c10 != 33 goto label11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(94);
        i0 = i0 + 1;

     label11:
        $c11 = staticinvoke <sun.nio.fs.Globs: char next(java.lang.String,int)>(r0, i0);
        if $c11 != 45 goto label12;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
        i0 = i0 + 1;

     label12:
        z2 = 0;
        c3 = 0;

     label13:
        $i12 = virtualinvoke r0.<java.lang.String: int length()>();
        if i0 >= $i12 goto label23;

        $i13 = i0;
        i0 = i0 + 1;
        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i13);
        if c1 != 93 goto label14;

        goto label23;

     label14:
        if c1 == 47 goto label15;

        if z0 == 0 goto label16;

        if c1 != 92 goto label16;

     label15:
        $r13 = new java.util.regex.PatternSyntaxException;
        $i14 = i0 - 1;
        specialinvoke $r13.<java.util.regex.PatternSyntaxException: void <init>(java.lang.String,java.lang.String,int)>("Explicit \'name separator\' in class", r0, $i14);
        throw $r13;

     label16:
        if c1 == 92 goto label17;

        if c1 == 91 goto label17;

        if c1 != 38 goto label18;

        $c15 = staticinvoke <sun.nio.fs.Globs: char next(java.lang.String,int)>(r0, i0);
        if $c15 != 38 goto label18;

     label17:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label18:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);
        if c1 != 45 goto label22;

        if z2 != 0 goto label19;

        $r16 = new java.util.regex.PatternSyntaxException;
        $i16 = i0 - 1;
        specialinvoke $r16.<java.util.regex.PatternSyntaxException: void <init>(java.lang.String,java.lang.String,int)>("Invalid range", r0, $i16);
        throw $r16;

     label19:
        $i17 = i0;
        i0 = i0 + 1;
        $c18 = staticinvoke <sun.nio.fs.Globs: char next(java.lang.String,int)>(r0, $i17);
        c1 = $c18;
        $c19 = <sun.nio.fs.Globs: char EOL>;
        if $c18 == $c19 goto label23;

        if c1 != 93 goto label20;

        goto label23;

     label20:
        if c1 >= c3 goto label21;

        $r17 = new java.util.regex.PatternSyntaxException;
        $i20 = i0 - 3;
        specialinvoke $r17.<java.util.regex.PatternSyntaxException: void <init>(java.lang.String,java.lang.String,int)>("Invalid range", r0, $i20);
        throw $r17;

     label21:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);
        z2 = 0;
        goto label13;

     label22:
        z2 = 1;
        c3 = c1;
        goto label13;

     label23:
        if c1 == 93 goto label24;

        $r19 = new java.util.regex.PatternSyntaxException;
        $i21 = i0 - 1;
        specialinvoke $r19.<java.util.regex.PatternSyntaxException: void <init>(java.lang.String,java.lang.String,int)>("Missing \']", r0, $i21);
        throw $r19;

     label24:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]]");
        goto label38;

     label25:
        if z1 == 0 goto label26;

        $r21 = new java.util.regex.PatternSyntaxException;
        $i22 = i0 - 1;
        specialinvoke $r21.<java.util.regex.PatternSyntaxException: void <init>(java.lang.String,java.lang.String,int)>("Cannot nest groups", r0, $i22);
        throw $r21;

     label26:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?:(?:");
        z1 = 1;
        goto label38;

     label27:
        if z1 == 0 goto label28;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("))");
        z1 = 0;
        goto label38;

     label28:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);
        goto label38;

     label29:
        if z1 == 0 goto label30;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")|(?:");
        goto label38;

     label30:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
        goto label38;

     label31:
        $c23 = staticinvoke <sun.nio.fs.Globs: char next(java.lang.String,int)>(r0, i0);
        if $c23 != 42 goto label32;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".*");
        i0 = i0 + 1;
        goto label38;

     label32:
        if z0 == 0 goto label33;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^\\\\]*");
        goto label38;

     label33:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^/]*");
        goto label38;

     label34:
        if z0 == 0 goto label35;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^\\\\]");
        goto label38;

     label35:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^/]");
        goto label38;

     label36:
        $z5 = staticinvoke <sun.nio.fs.Globs: boolean isRegexMeta(char)>(c1);
        if $z5 == 0 goto label37;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label37:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label38:
        goto label0;

     label39:
        if z1 == 0 goto label40;

        $r34 = new java.util.regex.PatternSyntaxException;
        $i24 = i0 - 1;
        specialinvoke $r34.<java.util.regex.PatternSyntaxException: void <init>(java.lang.String,java.lang.String,int)>("Missing \'}", r0, $i24);
        throw $r34;

     label40:
        $r35 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(36);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r36;
    }

    static java.lang.String toUnixRegexPattern(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <sun.nio.fs.Globs: java.lang.String toRegexPattern(java.lang.String,boolean)>(r0, 0);
        return $r1;
    }

    static java.lang.String toWindowsRegexPattern(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <sun.nio.fs.Globs: java.lang.String toRegexPattern(java.lang.String,boolean)>(r0, 1);
        return $r1;
    }

    static void <clinit>()
    {
        <sun.nio.fs.Globs: char EOL> = 0;
        return;
    }
}
