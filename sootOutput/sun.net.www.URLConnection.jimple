public abstract class sun.net.www.URLConnection extends java.net.URLConnection
{
    private java.lang.String contentType;
    private int contentLength;
    protected sun.net.www.MessageHeader properties;
    private static java.util.HashMap proxiedHosts;

    public void <init>(java.net.URL)
    {
        sun.net.www.URLConnection r0;
        java.net.URL r1;
        sun.net.www.MessageHeader $r2;

        r0 := @this: sun.net.www.URLConnection;
        r1 := @parameter0: java.net.URL;
        specialinvoke r0.<java.net.URLConnection: void <init>(java.net.URL)>(r1);
        r0.<sun.net.www.URLConnection: int contentLength> = -1;
        $r2 = new sun.net.www.MessageHeader;
        specialinvoke $r2.<sun.net.www.MessageHeader: void <init>()>();
        r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties> = $r2;
        return;
    }

    public sun.net.www.MessageHeader getProperties()
    {
        sun.net.www.URLConnection r0;
        sun.net.www.MessageHeader $r1;

        r0 := @this: sun.net.www.URLConnection;
        $r1 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        return $r1;
    }

    public void setProperties(sun.net.www.MessageHeader)
    {
        sun.net.www.URLConnection r0;
        sun.net.www.MessageHeader r1;

        r0 := @this: sun.net.www.URLConnection;
        r1 := @parameter0: sun.net.www.MessageHeader;
        r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties> = r1;
        return;
    }

    public void setRequestProperty(java.lang.String, java.lang.String)
    {
        sun.net.www.URLConnection r0;
        java.lang.String r1, r2;
        boolean $z0;
        java.lang.IllegalAccessError $r3;
        java.lang.NullPointerException $r4;
        sun.net.www.MessageHeader $r5;

        r0 := @this: sun.net.www.URLConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $z0 = r0.<sun.net.www.URLConnection: boolean connected>;
        if $z0 == 0 goto label0;

        $r3 = new java.lang.IllegalAccessError;
        specialinvoke $r3.<java.lang.IllegalAccessError: void <init>(java.lang.String)>("Already connected");
        throw $r3;

     label0:
        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("key cannot be null");
        throw $r4;

     label1:
        $r5 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        virtualinvoke $r5.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    public void addRequestProperty(java.lang.String, java.lang.String)
    {
        sun.net.www.URLConnection r0;
        java.lang.String r1, r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: sun.net.www.URLConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $z0 = r0.<sun.net.www.URLConnection: boolean connected>;
        if $z0 == 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected");
        throw $r3;

     label0:
        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("key is null");
        throw $r4;

     label1:
        return;
    }

    public java.lang.String getRequestProperty(java.lang.String)
    {
        sun.net.www.URLConnection r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: sun.net.www.URLConnection;
        r1 := @parameter0: java.lang.String;
        $z0 = r0.<sun.net.www.URLConnection: boolean connected>;
        if $z0 == 0 goto label0;

        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected");
        throw $r2;

     label0:
        return null;
    }

    public java.util.Map getRequestProperties()
    {
        sun.net.www.URLConnection r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        java.util.Map $r2;

        r0 := @this: sun.net.www.URLConnection;
        $z0 = r0.<sun.net.www.URLConnection: boolean connected>;
        if $z0 == 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected");
        throw $r1;

     label0:
        $r2 = <java.util.Collections: java.util.Map EMPTY_MAP>;
        return $r2;
    }

    public java.lang.String getHeaderField(java.lang.String)
    {
        sun.net.www.URLConnection r0;
        java.lang.String r1, $r6;
        java.lang.Exception r2, $r4;
        sun.net.www.MessageHeader $r5, $r7;

        r0 := @this: sun.net.www.URLConnection;
        r1 := @parameter0: java.lang.String;

     label0:
        virtualinvoke r0.<sun.net.www.URLConnection: java.io.InputStream getInputStream()>();

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;
        return null;

     label3:
        $r5 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        if $r5 != null goto label4;

        $r6 = null;
        goto label5;

     label4:
        $r7 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        $r6 = virtualinvoke $r7.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>(r1);

     label5:
        return $r6;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public java.lang.String getHeaderFieldKey(int)
    {
        sun.net.www.URLConnection r0;
        int i0;
        java.lang.Exception r1, $r3;
        sun.net.www.MessageHeader r4;
        java.lang.String $r5;

        r0 := @this: sun.net.www.URLConnection;
        i0 := @parameter0: int;

     label0:
        virtualinvoke r0.<sun.net.www.URLConnection: java.io.InputStream getInputStream()>();

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        return null;

     label3:
        r4 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        if r4 != null goto label4;

        $r5 = null;
        goto label5;

     label4:
        $r5 = virtualinvoke r4.<sun.net.www.MessageHeader: java.lang.String getKey(int)>(i0);

     label5:
        return $r5;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public java.lang.String getHeaderField(int)
    {
        sun.net.www.URLConnection r0;
        int i0;
        java.lang.Exception r1, $r3;
        sun.net.www.MessageHeader r4;
        java.lang.String $r5;

        r0 := @this: sun.net.www.URLConnection;
        i0 := @parameter0: int;

     label0:
        virtualinvoke r0.<sun.net.www.URLConnection: java.io.InputStream getInputStream()>();

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        return null;

     label3:
        r4 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        if r4 != null goto label4;

        $r5 = null;
        goto label5;

     label4:
        $r5 = virtualinvoke r4.<sun.net.www.MessageHeader: java.lang.String getValue(int)>(i0);

     label5:
        return $r5;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public java.lang.String getContentType()
    {
        sun.net.www.URLConnection r0;
        java.lang.String r1, $r3, $r4, $r5, r9, $r12, $r14, $r15;
        java.io.IOException r2, $r7;
        java.io.InputStream $r6;
        sun.net.www.MessageHeader $r8, $r10;
        java.net.URL $r11, $r13;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: sun.net.www.URLConnection;
        $r3 = r0.<sun.net.www.URLConnection: java.lang.String contentType>;
        if $r3 != null goto label0;

        $r4 = virtualinvoke r0.<sun.net.www.URLConnection: java.lang.String getHeaderField(java.lang.String)>("content-type");
        r0.<sun.net.www.URLConnection: java.lang.String contentType> = $r4;

     label0:
        $r5 = r0.<sun.net.www.URLConnection: java.lang.String contentType>;
        if $r5 != null goto label9;

        r1 = null;

     label1:
        $r6 = virtualinvoke r0.<sun.net.www.URLConnection: java.io.InputStream getInputStream()>();
        r1 = staticinvoke <sun.net.www.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r2 = $r7;

     label4:
        $r8 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        r9 = virtualinvoke $r8.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("content-encoding");
        if r1 != null goto label6;

        $r10 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        r1 = virtualinvoke $r10.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("content-type");
        if r1 != null goto label6;

        $r11 = r0.<sun.net.www.URLConnection: java.net.URL url>;
        $r12 = virtualinvoke $r11.<java.net.URL: java.lang.String getFile()>();
        $z0 = virtualinvoke $r12.<java.lang.String: boolean endsWith(java.lang.String)>("/");
        if $z0 == 0 goto label5;

        r1 = "text/html";
        goto label6;

     label5:
        $r13 = r0.<sun.net.www.URLConnection: java.net.URL url>;
        $r14 = virtualinvoke $r13.<java.net.URL: java.lang.String getFile()>();
        r1 = staticinvoke <sun.net.www.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>($r14);

     label6:
        if r1 == null goto label7;

        if r9 == null goto label8;

        $z1 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("7bit");
        if $z1 != 0 goto label8;

        $z2 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("8bit");
        if $z2 != 0 goto label8;

        $z3 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("binary");
        if $z3 != 0 goto label8;

     label7:
        r1 = "content/unknown";

     label8:
        virtualinvoke r0.<sun.net.www.URLConnection: void setContentType(java.lang.String)>(r1);

     label9:
        $r15 = r0.<sun.net.www.URLConnection: java.lang.String contentType>;
        return $r15;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setContentType(java.lang.String)
    {
        sun.net.www.URLConnection r0;
        java.lang.String r1;
        sun.net.www.MessageHeader $r2;

        r0 := @this: sun.net.www.URLConnection;
        r1 := @parameter0: java.lang.String;
        r0.<sun.net.www.URLConnection: java.lang.String contentType> = r1;
        $r2 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        virtualinvoke $r2.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("content-type", r1);
        return;
    }

    public int getContentLength()
    {
        sun.net.www.URLConnection r0;
        java.lang.Exception r1, r2, $r4, $r7;
        int i0;
        sun.net.www.MessageHeader $r5;
        java.lang.String $r6;

        r0 := @this: sun.net.www.URLConnection;

     label0:
        virtualinvoke r0.<sun.net.www.URLConnection: java.io.InputStream getInputStream()>();

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        return -1;

     label3:
        i0 = r0.<sun.net.www.URLConnection: int contentLength>;
        if i0 >= 0 goto label7;

     label4:
        $r5 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        $r6 = virtualinvoke $r5.<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>("content-length");
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);
        virtualinvoke r0.<sun.net.www.URLConnection: void setContentLength(int)>(i0);

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;
        r2 = $r7;

     label7:
        return i0;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    protected void setContentLength(int)
    {
        sun.net.www.URLConnection r0;
        int i0;
        sun.net.www.MessageHeader $r1;
        java.lang.String $r2;

        r0 := @this: sun.net.www.URLConnection;
        i0 := @parameter0: int;
        r0.<sun.net.www.URLConnection: int contentLength> = i0;
        $r1 = r0.<sun.net.www.URLConnection: sun.net.www.MessageHeader properties>;
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        virtualinvoke $r1.<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>("content-length", $r2);
        return;
    }

    public boolean canCache()
    {
        sun.net.www.URLConnection r0;
        java.net.URL $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;

        r0 := @this: sun.net.www.URLConnection;
        $r1 = r0.<sun.net.www.URLConnection: java.net.URL url>;
        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String getFile()>();
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(63);
        if $i0 >= 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void close()
    {
        sun.net.www.URLConnection r0;

        r0 := @this: sun.net.www.URLConnection;
        r0.<sun.net.www.URLConnection: java.net.URL url> = null;
        return;
    }

    public static synchronized void setProxiedHost(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.util.HashMap $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = <sun.net.www.URLConnection: java.util.HashMap proxiedHosts>;
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, null);
        return;
    }

    public static synchronized boolean isProxiedHost(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.util.HashMap $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = <sun.net.www.URLConnection: java.util.HashMap proxiedHosts>;
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);
        return $z0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <sun.net.www.URLConnection: java.util.HashMap proxiedHosts> = $r0;
        return;
    }
}
