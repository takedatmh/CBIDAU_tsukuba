final class java.io.ObjectStreamClass$3 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        java.io.ObjectStreamClass$3 r0;

        r0 := @this: java.io.ObjectStreamClass$3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public int compare(java.io.ObjectStreamClass$MemberSignature, java.io.ObjectStreamClass$MemberSignature)
    {
        java.io.ObjectStreamClass$3 r0;
        java.io.ObjectStreamClass$MemberSignature r1, r2;
        java.lang.String $r3, $r4;
        int $i0;

        r0 := @this: java.io.ObjectStreamClass$3;
        r1 := @parameter0: java.io.ObjectStreamClass$MemberSignature;
        r2 := @parameter1: java.io.ObjectStreamClass$MemberSignature;
        $r3 = r1.<java.io.ObjectStreamClass$MemberSignature: java.lang.String name>;
        $r4 = r2.<java.io.ObjectStreamClass$MemberSignature: java.lang.String name>;
        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);
        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        java.io.ObjectStreamClass$3 r0;
        java.lang.Object r1, r2;
        java.io.ObjectStreamClass$MemberSignature $r3, $r4;
        int $i0;

        r0 := @this: java.io.ObjectStreamClass$3;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (java.io.ObjectStreamClass$MemberSignature) r1;
        $r4 = (java.io.ObjectStreamClass$MemberSignature) r2;
        $i0 = virtualinvoke r0.<java.io.ObjectStreamClass$3: int compare(java.io.ObjectStreamClass$MemberSignature,java.io.ObjectStreamClass$MemberSignature)>($r3, $r4);
        return $i0;
    }
}
