class sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint extends java.lang.Object
{
    private int minSize;
    private int maxSize;
    private int prohibitedSize;

    public void <init>(sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator, int)
    {
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint r0;
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator r1;
        int i0, $i1, $i2, $i3, $i4;
        int[] $r2;

        r0 := @this: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint;
        r1 := @parameter0: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int prohibitedSize> = -1;
        $r2 = <sun.security.util.DisabledAlgorithmConstraints$2: int[] $SwitchMap$sun$security$util$DisabledAlgorithmConstraints$KeySizeConstraint$Operator>;
        $i1 = virtualinvoke r1.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: int ordinal()>();
        $i2 = $r2[$i1];
        tableswitch($i2)
        {
            case 1: goto label0;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label5;
            default: goto label8;
        };

     label0:
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int minSize> = 0;
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int maxSize> = 2147483647;
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int prohibitedSize> = i0;
        goto label9;

     label1:
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int minSize> = i0;
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int maxSize> = i0;
        goto label9;

     label2:
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int minSize> = i0;
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int maxSize> = 2147483647;
        goto label9;

     label3:
        $i3 = i0 + 1;
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int minSize> = $i3;
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int maxSize> = 2147483647;
        goto label9;

     label4:
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int minSize> = 0;
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int maxSize> = i0;
        goto label9;

     label5:
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int minSize> = 0;
        if i0 <= 1 goto label6;

        $i4 = i0 - 1;
        goto label7;

     label6:
        $i4 = 0;

     label7:
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int maxSize> = $i4;
        goto label9;

     label8:
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int minSize> = 2147483647;
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int maxSize> = -1;

     label9:
        return;
    }

    public boolean disables(java.security.Key)
    {
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint r0;
        java.security.Key r1;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint;
        r1 := @parameter0: java.security.Key;
        i0 = staticinvoke <sun.security.util.KeyUtil: int getKeySize(java.security.Key)>(r1);
        if i0 != 0 goto label0;

        return 1;

     label0:
        if i0 <= 0 goto label4;

        $i1 = r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int minSize>;
        if i0 < $i1 goto label1;

        $i2 = r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int maxSize>;
        if i0 > $i2 goto label1;

        $i3 = r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: int prohibitedSize>;
        if $i3 != i0 goto label2;

     label1:
        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        return 0;
    }
}
