abstract class java.util.regex.Pattern$CharPropertyNames$CloneableProperty extends java.util.regex.Pattern$CharProperty implements java.lang.Cloneable
{

    private void <init>()
    {
        java.util.regex.Pattern$CharPropertyNames$CloneableProperty r0;

        r0 := @this: java.util.regex.Pattern$CharPropertyNames$CloneableProperty;
        specialinvoke r0.<java.util.regex.Pattern$CharProperty: void <init>(java.util.regex.Pattern$1)>(null);
        return;
    }

    public java.util.regex.Pattern$CharPropertyNames$CloneableProperty clone()
    {
        java.util.regex.Pattern$CharPropertyNames$CloneableProperty r0, $r3;
        java.lang.CloneNotSupportedException r1, $r4;
        java.lang.Object $r2;
        java.lang.AssertionError $r5;

        r0 := @this: java.util.regex.Pattern$CharPropertyNames$CloneableProperty;

     label0:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (java.util.regex.Pattern$CharPropertyNames$CloneableProperty) $r2;

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);
        throw $r5;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.util.regex.Pattern$CharPropertyNames$CloneableProperty r0, $r1;

        r0 := @this: java.util.regex.Pattern$CharPropertyNames$CloneableProperty;
        $r1 = virtualinvoke r0.<java.util.regex.Pattern$CharPropertyNames$CloneableProperty: java.util.regex.Pattern$CharPropertyNames$CloneableProperty clone()>();
        return $r1;
    }

    void <init>(java.util.regex.Pattern$1)
    {
        java.util.regex.Pattern$CharPropertyNames$CloneableProperty r0;
        java.util.regex.Pattern$1 r1;

        r0 := @this: java.util.regex.Pattern$CharPropertyNames$CloneableProperty;
        r1 := @parameter0: java.util.regex.Pattern$1;
        specialinvoke r0.<java.util.regex.Pattern$CharPropertyNames$CloneableProperty: void <init>()>();
        return;
    }
}
