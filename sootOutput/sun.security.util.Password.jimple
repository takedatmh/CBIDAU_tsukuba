public class sun.security.util.Password extends java.lang.Object
{
    private static volatile java.nio.charset.CharsetEncoder enc;

    public void <init>()
    {
        sun.security.util.Password r0;

        r0 := @this: sun.security.util.Password;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static char[] readPassword(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        char[] $r1;

        r0 := @parameter0: java.io.InputStream;
        $r1 = staticinvoke <sun.security.util.Password: char[] readPassword(java.io.InputStream,boolean)>(r0, 0);
        return $r1;
    }

    public static char[] readPassword(java.io.InputStream, boolean) throws java.io.IOException
    {
        java.io.InputStream r0, $r3;
        boolean z0, z1, $z2;
        char[] r1, r4, r5, $r10, r11, r14;
        byte[] r2;
        null_type n0, n1, n2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Throwable r6, $r15;
        java.io.Console $r7, r8;
        java.io.ByteArrayInputStream $r9;
        java.io.PushbackInputStream $r12, $r13;
        char $c10;

        r0 := @parameter0: java.io.InputStream;
        z0 := @parameter1: boolean;
        r1 = null;
        r2 = null;

     label0:
        n0 = null;
        if z0 != 0 goto label5;

        $r3 = <java.lang.System: java.io.InputStream in>;
        if r0 != $r3 goto label5;

        $r7 = staticinvoke <java.lang.System: java.io.Console console()>();
        r8 = $r7;
        if $r7 == null goto label5;

        r1 = virtualinvoke r8.<java.io.Console: char[] readPassword()>();
        if r1 == null goto label4;

        $i4 = lengthof r1;
        if $i4 != 0 goto label4;

        n1 = null;

     label1:
        if r1 == null goto label2;

        staticinvoke <java.util.Arrays: void fill(char[],char)>(r1, 32);

     label2:
        if r2 == null goto label3;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r2, 0);

     label3:
        return n1;

     label4:
        r2 = staticinvoke <sun.security.util.Password: byte[] convertToBytes(char[])>(r1);
        $r9 = new java.io.ByteArrayInputStream;
        specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);
        r0 = $r9;

     label5:
        $r10 = newarray (char)[128];
        r11 = $r10;
        r4 = $r10;
        i0 = lengthof r4;
        i1 = 0;
        z1 = 0;

     label6:
        if z1 != 0 goto label14;

        $i5 = virtualinvoke r0.<java.io.InputStream: int read()>();
        i2 = $i5;
        lookupswitch($i5)
        {
            case -1: goto label7;
            case 10: goto label7;
            case 13: goto label8;
            default: goto label11;
        };

     label7:
        z1 = 1;
        goto label13;

     label8:
        i3 = virtualinvoke r0.<java.io.InputStream: int read()>();
        if i3 == 10 goto label10;

        if i3 == -1 goto label10;

        $z2 = r0 instanceof java.io.PushbackInputStream;
        if $z2 != 0 goto label9;

        $r12 = new java.io.PushbackInputStream;
        specialinvoke $r12.<java.io.PushbackInputStream: void <init>(java.io.InputStream)>(r0);
        r0 = $r12;

     label9:
        $r13 = (java.io.PushbackInputStream) r0;
        virtualinvoke $r13.<java.io.PushbackInputStream: void unread(int)>(i3);
        goto label11;

     label10:
        z1 = 1;
        goto label13;

     label11:
        i0 = i0 + -1;
        if i0 >= 0 goto label12;

        $i6 = i1 + 128;
        r4 = newarray (char)[$i6];
        $i7 = lengthof r4;
        $i8 = $i7 - i1;
        i0 = $i8 - 1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r11, 0, r4, 0, i1);
        staticinvoke <java.util.Arrays: void fill(char[],char)>(r11, 32);
        r11 = r4;

     label12:
        $i9 = i1;
        i1 = i1 + 1;
        $c10 = (char) i2;
        r4[$i9] = $c10;

     label13:
        goto label6;

     label14:
        if i1 != 0 goto label18;

        n2 = null;

     label15:
        if r1 == null goto label16;

        staticinvoke <java.util.Arrays: void fill(char[],char)>(r1, 32);

     label16:
        if r2 == null goto label17;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r2, 0);

     label17:
        return n2;

     label18:
        r14 = newarray (char)[i1];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r14, 0, i1);
        staticinvoke <java.util.Arrays: void fill(char[],char)>(r4, 32);
        r5 = r14;

     label19:
        if r1 == null goto label20;

        staticinvoke <java.util.Arrays: void fill(char[],char)>(r1, 32);

     label20:
        if r2 == null goto label21;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r2, 0);

     label21:
        return r5;

     label22:
        $r15 := @caughtexception;

     label23:
        r6 = $r15;

     label24:
        if r1 == null goto label25;

        staticinvoke <java.util.Arrays: void fill(char[],char)>(r1, 32);

     label25:
        if r2 == null goto label26;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r2, 0);

     label26:
        throw r6;

        catch java.lang.Throwable from label0 to label1 with label22;
        catch java.lang.Throwable from label4 to label15 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    private static byte[] convertToBytes(char[])
    {
        char[] r0;
        java.nio.charset.CharsetEncoder $r1, r4, $r9, $r11, $r13, $r15, $r18, $r19, $r20;
        java.lang.Class r2, $r6;
        java.lang.Throwable r3, r5, $r14, $r23;
        sun.misc.JavaIOAccess $r7;
        java.nio.charset.Charset $r8;
        java.nio.charset.CodingErrorAction $r10, $r12;
        float $f0, $f1, $f2;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] r16;
        java.nio.ByteBuffer r17;
        java.nio.CharBuffer $r21;

        r0 := @parameter0: char[];
        $r1 = <sun.security.util.Password: java.nio.charset.CharsetEncoder enc>;
        if $r1 != null goto label5;

        $r6 = class "sun/security/util/Password";
        r2 = $r6;
        entermonitor $r6;

     label0:
        $r7 = staticinvoke <sun.misc.SharedSecrets: sun.misc.JavaIOAccess getJavaIOAccess()>();
        $r8 = interfaceinvoke $r7.<sun.misc.JavaIOAccess: java.nio.charset.Charset charset()>();
        $r9 = virtualinvoke $r8.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();
        $r10 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
        $r11 = virtualinvoke $r9.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r10);
        $r12 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
        $r13 = virtualinvoke $r11.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r12);
        <sun.security.util.Password: java.nio.charset.CharsetEncoder enc> = $r13;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r14 := @caughtexception;

     label3:
        r3 = $r14;
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        $r15 = <sun.security.util.Password: java.nio.charset.CharsetEncoder enc>;
        $f0 = virtualinvoke $r15.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>();
        $i0 = lengthof r0;
        $f1 = (float) $i0;
        $f2 = $f0 * $f1;
        $i1 = (int) $f2;
        r16 = newarray (byte)[$i1];
        r17 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r16);
        $r18 = <sun.security.util.Password: java.nio.charset.CharsetEncoder enc>;
        r4 = $r18;
        entermonitor $r18;

     label6:
        $r19 = <sun.security.util.Password: java.nio.charset.CharsetEncoder enc>;
        $r20 = virtualinvoke $r19.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>();
        $r21 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>(r0);
        virtualinvoke $r20.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>($r21, r17, 1);
        exitmonitor r4;

     label7:
        goto label11;

     label8:
        $r23 := @caughtexception;

     label9:
        r5 = $r23;
        exitmonitor r4;

     label10:
        throw r5;

     label11:
        $i2 = virtualinvoke r17.<java.nio.ByteBuffer: int position()>();
        $i3 = lengthof r16;
        if $i2 >= $i3 goto label12;

        $i4 = virtualinvoke r17.<java.nio.ByteBuffer: int position()>();
        r16[$i4] = 10;

     label12:
        return r16;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
    }
}
