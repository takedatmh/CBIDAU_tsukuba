public class org.apache.coyote.ContainerThreadMarker extends java.lang.Object
{
    private static final java.lang.ThreadLocal marker;

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        $r0 = new java.lang.ThreadLocal;
        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();
        <org.apache.coyote.ContainerThreadMarker: java.lang.ThreadLocal marker> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.coyote.ContainerThreadMarker r0;

        r0 := @this: org.apache.coyote.ContainerThreadMarker;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static boolean isContainerThread()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Boolean r1;
        java.lang.Object $r2;
        boolean $z0;

        $r0 = <org.apache.coyote.ContainerThreadMarker: java.lang.ThreadLocal marker>;
        $r2 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();
        r1 = (java.lang.Boolean) $r2;
        if r1 != null goto label0;

        return 0;

     label0:
        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();
        return $z0;
    }

    public static void markAsContainerThread()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Boolean $r1;

        $r0 = <org.apache.coyote.ContainerThreadMarker: java.lang.ThreadLocal marker>;
        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;
        virtualinvoke $r0.<java.lang.ThreadLocal: void set(java.lang.Object)>($r1);
        return;
    }
}
