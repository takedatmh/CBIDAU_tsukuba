public class sun.security.krb5.internal.ccache.CCacheInputStream extends sun.security.krb5.internal.util.KrbDataInputStream implements sun.security.krb5.internal.ccache.FileCCacheConstants
{
    private static boolean DEBUG;

    public void <init>(java.io.InputStream)
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        java.io.InputStream r1;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        r1 := @parameter0: java.io.InputStream;
        specialinvoke r0.<sun.security.krb5.internal.util.KrbDataInputStream: void <init>(java.io.InputStream)>(r1);
        return;
    }

    public sun.security.krb5.internal.ccache.Tag readTag() throws java.io.IOException
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        char[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Integer r2, r3, $r8, $r9;
        byte[] r4;
        sun.security.krb5.internal.ccache.Tag r5, $r10;
        java.io.IOException $r6, $r7;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        r1 = newarray (char)[1024];
        i0 = -1;
        r2 = null;
        r3 = null;
        i1 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(2);
        if i1 >= 0 goto label0;

        $r6 = new java.io.IOException;
        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("stop.");
        throw $r6;

     label0:
        $i3 = i1 + 2;
        r4 = newarray (byte)[$i3];
        $i4 = lengthof r1;
        if i1 <= $i4 goto label1;

        $r7 = new java.io.IOException;
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Invalid tag length.");
        throw $r7;

     label1:
        if i1 <= 0 goto label4;

        i0 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(2);
        i2 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(2);
        lookupswitch(i0)
        {
            case 1: goto label2;
            default: goto label3;
        };

     label2:
        $r8 = new java.lang.Integer;
        $i5 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(4);
        specialinvoke $r8.<java.lang.Integer: void <init>(int)>($i5);
        r2 = $r8;
        $r9 = new java.lang.Integer;
        $i6 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(4);
        specialinvoke $r9.<java.lang.Integer: void <init>(int)>($i6);
        r3 = $r9;
        goto label3;

     label3:
        $i7 = 4 + i2;
        i1 = i1 - $i7;
        goto label1;

     label4:
        if i0 != -1 goto label5;

     label5:
        $r10 = new sun.security.krb5.internal.ccache.Tag;
        specialinvoke $r10.<sun.security.krb5.internal.ccache.Tag: void <init>(int,int,java.lang.Integer,java.lang.Integer)>(i1, i0, r2, r3);
        r5 = $r10;
        return r5;
    }

    public sun.security.krb5.PrincipalName readPrincipal(int) throws java.io.IOException, sun.security.krb5.RealmException
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        int i0, i1, i2, i3, i4, $i5;
        null_type n0;
        java.lang.String[] r1, r8;
        byte[] r2;
        java.lang.String r3, $r6, $r7;
        sun.security.krb5.PrincipalName r4, $r9, $r10;
        java.io.IOException $r5;
        boolean $z0;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        i0 := @parameter0: int;
        n0 = null;
        if i0 != 1281 goto label0;

        i1 = 0;
        goto label1;

     label0:
        i1 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(4);

     label1:
        i2 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int readLength4()>();
        $i5 = i2 + 1;
        r1 = newarray (java.lang.String)[$i5];
        if i0 != 1281 goto label2;

        i2 = i2 + -1;

     label2:
        i3 = 0;

     label3:
        if i3 > i2 goto label5;

        i4 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int readLength4()>();
        if i4 <= 1024 goto label4;

        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Invalid name length in principal name.");
        throw $r5;

     label4:
        r2 = newarray (byte)[i4];
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(byte[],int,int)>(r2, 0, i4);
        $r6 = new java.lang.String;
        specialinvoke $r6.<java.lang.String: void <init>(byte[])>(r2);
        r1[i3] = $r6;
        i3 = i3 + 1;
        goto label3;

     label5:
        $r7 = r1[0];
        $z0 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: boolean isRealm(java.lang.String)>($r7);
        if $z0 == 0 goto label6;

        r3 = r1[0];
        r8 = newarray (java.lang.String)[i2];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 1, r8, 0, i2);
        $r9 = new sun.security.krb5.PrincipalName;
        specialinvoke $r9.<sun.security.krb5.PrincipalName: void <init>(java.lang.String[],int)>(r8, i1);
        r4 = $r9;
        virtualinvoke r4.<sun.security.krb5.PrincipalName: void setRealm(java.lang.String)>(r3);
        goto label7;

     label6:
        $r10 = new sun.security.krb5.PrincipalName;
        specialinvoke $r10.<sun.security.krb5.PrincipalName: void <init>(java.lang.String[],int)>(r1, i1);
        r4 = $r10;

     label7:
        return r4;
    }

    boolean isRealm(java.lang.String)
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        java.lang.String r1, r4;
        sun.security.krb5.Realm $r2, r3;
        int i0, $i1;
        java.lang.Exception $r5, r6;
        java.util.StringTokenizer $r7, r8;
        boolean $z0;
        char $c2;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        r1 := @parameter0: java.lang.String;

     label0:
        $r2 = new sun.security.krb5.Realm;
        specialinvoke $r2.<sun.security.krb5.Realm: void <init>(java.lang.String)>(r1);
        r3 = $r2;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r6 = $r5;
        return 0;

     label3:
        $r7 = new java.util.StringTokenizer;
        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ".");
        r8 = $r7;

     label4:
        $z0 = virtualinvoke r8.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label8;

        r4 = virtualinvoke r8.<java.util.StringTokenizer: java.lang.String nextToken()>();
        i0 = 0;

     label5:
        $i1 = virtualinvoke r4.<java.lang.String: int length()>();
        if i0 >= $i1 goto label7;

        $c2 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i0);
        if $c2 < 141 goto label6;

        return 0;

     label6:
        i0 = i0 + 1;
        goto label5;

     label7:
        goto label4;

     label8:
        return 1;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    sun.security.krb5.EncryptionKey readKey(int) throws java.io.IOException
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        int i0, i1, i2, i3, $i5;
        byte[] r1;
        java.lang.Integer $r2;
        byte $b6;
        sun.security.krb5.EncryptionKey $r3;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        i0 := @parameter0: int;
        i1 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(2);
        if i0 != 1283 goto label0;

        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(2);

     label0:
        i2 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int readLength4()>();
        r1 = newarray (byte)[i2];
        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $i5 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read()>();
        $b6 = (byte) $i5;
        r1[i3] = $b6;
        i3 = i3 + 1;
        goto label1;

     label2:
        $r3 = new sun.security.krb5.EncryptionKey;
        $r2 = new java.lang.Integer;
        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);
        specialinvoke $r3.<sun.security.krb5.EncryptionKey: void <init>(byte[],int,java.lang.Integer)>(r1, i1, $r2);
        return $r3;
    }

    long[] readTimes() throws java.io.IOException
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        long[] r1;
        int $i0, $i3, $i6, $i9;
        long $l1, $l2, $l4, $l5, $l7, $l8, $l10, $l11;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        r1 = newarray (long)[4];
        $i0 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(4);
        $l1 = (long) $i0;
        $l2 = $l1 * 1000L;
        r1[0] = $l2;
        $i3 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(4);
        $l4 = (long) $i3;
        $l5 = $l4 * 1000L;
        r1[1] = $l5;
        $i6 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(4);
        $l7 = (long) $i6;
        $l8 = $l7 * 1000L;
        r1[2] = $l8;
        $i9 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(4);
        $l10 = (long) $i9;
        $l11 = $l10 * 1000L;
        r1[3] = $l11;
        return r1;
    }

    boolean readskey() throws java.io.IOException
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        int $i0;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        $i0 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read()>();
        if $i0 != 0 goto label0;

        return 0;

     label0:
        return 1;
    }

    sun.security.krb5.internal.HostAddress[] readAddr() throws java.io.IOException, sun.security.krb5.internal.KrbApErrException
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        int i0, i1, i2, i3, i4, $i5;
        sun.security.krb5.internal.HostAddress[] r1;
        byte[] r2;
        boolean $z0;
        java.io.PrintStream $r3;
        byte $b6;
        sun.security.krb5.internal.HostAddress $r4;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        i0 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int readLength4()>();
        if i0 <= 0 goto label6;

        r1 = newarray (sun.security.krb5.internal.HostAddress)[i0];
        i1 = 0;

     label0:
        if i1 >= i0 goto label5;

        i2 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(2);
        i3 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int readLength4()>();
        if i3 == 4 goto label2;

        if i3 == 16 goto label2;

        $z0 = <sun.security.krb5.internal.ccache.CCacheInputStream: boolean DEBUG>;
        if $z0 == 0 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Incorrect address format.");

     label1:
        return null;

     label2:
        r2 = newarray (byte)[i3];
        i4 = 0;

     label3:
        if i4 >= i3 goto label4;

        $i5 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(1);
        $b6 = (byte) $i5;
        r2[i4] = $b6;
        i4 = i4 + 1;
        goto label3;

     label4:
        $r4 = new sun.security.krb5.internal.HostAddress;
        specialinvoke $r4.<sun.security.krb5.internal.HostAddress: void <init>(int,byte[])>(i2, r2);
        r1[i1] = $r4;
        i1 = i1 + 1;
        goto label0;

     label5:
        return r1;

     label6:
        return null;
    }

    sun.security.krb5.internal.AuthorizationDataEntry[] readAuth() throws java.io.IOException
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        int i0, i1, i2, i3, i4, $i5;
        sun.security.krb5.internal.AuthorizationDataEntry[] r1;
        null_type n0;
        byte[] r2;
        byte $b6;
        sun.security.krb5.internal.AuthorizationDataEntry $r3;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        i0 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int readLength4()>();
        if i0 <= 0 goto label4;

        r1 = newarray (sun.security.krb5.internal.AuthorizationDataEntry)[i0];
        n0 = null;
        i1 = 0;

     label0:
        if i1 >= i0 goto label3;

        i2 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(2);
        i3 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int readLength4()>();
        r2 = newarray (byte)[i3];
        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        $i5 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read()>();
        $b6 = (byte) $i5;
        r2[i4] = $b6;
        i4 = i4 + 1;
        goto label1;

     label2:
        $r3 = new sun.security.krb5.internal.AuthorizationDataEntry;
        specialinvoke $r3.<sun.security.krb5.internal.AuthorizationDataEntry: void <init>(int,byte[])>(i2, r2);
        r1[i1] = $r3;
        i1 = i1 + 1;
        goto label0;

     label3:
        return r1;

     label4:
        return null;
    }

    byte[] readData() throws java.io.IOException
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        int i0;
        byte[] r1;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        i0 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int readLength4()>();
        if i0 != 0 goto label0;

        return null;

     label0:
        r1 = newarray (byte)[i0];
        virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(byte[],int,int)>(r1, 0, i0);
        return r1;
    }

    boolean[] readFlags() throws java.io.IOException
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        boolean[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        java.io.PrintStream $r36;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        r1 = newarray (boolean)[32];
        i0 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: int read(int)>(4);
        $i1 = i0 & 1073741824;
        if $i1 != 1073741824 goto label0;

        r1[1] = 1;

     label0:
        $i2 = i0 & 536870912;
        if $i2 != 536870912 goto label1;

        r1[2] = 1;

     label1:
        $i3 = i0 & 268435456;
        if $i3 != 268435456 goto label2;

        r1[3] = 1;

     label2:
        $i4 = i0 & 134217728;
        if $i4 != 134217728 goto label3;

        r1[4] = 1;

     label3:
        $i5 = i0 & 67108864;
        if $i5 != 67108864 goto label4;

        r1[5] = 1;

     label4:
        $i6 = i0 & 33554432;
        if $i6 != 33554432 goto label5;

        r1[6] = 1;

     label5:
        $i7 = i0 & 16777216;
        if $i7 != 16777216 goto label6;

        r1[7] = 1;

     label6:
        $i8 = i0 & 8388608;
        if $i8 != 8388608 goto label7;

        r1[8] = 1;

     label7:
        $i9 = i0 & 4194304;
        if $i9 != 4194304 goto label8;

        r1[9] = 1;

     label8:
        $i10 = i0 & 2097152;
        if $i10 != 2097152 goto label9;

        r1[10] = 1;

     label9:
        $i11 = i0 & 1048576;
        if $i11 != 1048576 goto label10;

        r1[11] = 1;

     label10:
        $z0 = <sun.security.krb5.internal.ccache.CCacheInputStream: boolean DEBUG>;
        if $z0 == 0 goto label22;

        r2 = ">>> CCacheInputStream: readFlags() ";
        $z1 = r1[1];
        if $z1 != 1 goto label11;

        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FORWARDABLE;");
        r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $z2 = r1[2];
        if $z2 != 1 goto label12;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FORWARDED;");
        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $z3 = r1[3];
        if $z3 != 1 goto label13;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PROXIABLE;");
        r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        $z4 = r1[4];
        if $z4 != 1 goto label14;

        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PROXY;");
        r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        $z5 = r1[5];
        if $z5 != 1 goto label15;

        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MAY_POSTDATE;");
        r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        $z6 = r1[6];
        if $z6 != 1 goto label16;

        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" POSTDATED;");
        r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        $z7 = r1[7];
        if $z7 != 1 goto label17;

        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" INVALID;");
        r2 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label17:
        $z8 = r1[8];
        if $z8 != 1 goto label18;

        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" RENEWABLE;");
        r2 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        $z9 = r1[9];
        if $z9 != 1 goto label19;

        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" INITIAL;");
        r2 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        $z10 = r1[10];
        if $z10 != 1 goto label20;

        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PRE_AUTH;");
        r2 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        $z11 = r1[11];
        if $z11 != 1 goto label21;

        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" HW_AUTH;");
        r2 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        $r36 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>(r2);

     label22:
        return r1;
    }

    sun.security.krb5.internal.ccache.Credentials readCred(int) throws java.io.IOException, sun.security.krb5.RealmException, sun.security.krb5.internal.KrbApErrException, sun.security.krb5.Asn1Exception
    {
        sun.security.krb5.internal.ccache.CCacheInputStream r0;
        int i0, $i1;
        sun.security.krb5.PrincipalName r1, r2;
        sun.security.krb5.EncryptionKey r3;
        long[] r4;
        sun.security.krb5.internal.KerberosTime r5, r6, r7, r8, $r43, $r44, $r45, $r46;
        boolean z0, $z2, $z3, $z4, $z5;
        boolean[] r9;
        sun.security.krb5.internal.TicketFlags r10, $r75;
        sun.security.krb5.internal.HostAddress[] r11;
        sun.security.krb5.internal.HostAddresses r12, $r23, $r76;
        sun.security.krb5.internal.AuthorizationDataEntry[] r13;
        sun.security.krb5.internal.AuthorizationData r14, $r24, $r77;
        byte[] r15, r16;
        java.lang.Exception r25, $r84;
        java.io.PrintStream $r26, $r32, $r38, $r47, $r54, $r61, $r68;
        java.lang.StringBuilder $r27, $r28, $r30, $r33, $r34, $r36, $r39, $r40, $r41, $r48, $r49, $r52, $r55, $r56, $r59, $r62, $r63, $r66, $r69, $r70, $r73;
        java.lang.String $r29, $r31, $r35, $r37, $r42, $r51, $r53, $r57, $r60, $r65, $r67, $r71, $r74;
        long $l2, $l3, $l5, $l6, $l7, $l9;
        byte $b4, $b8;
        java.util.Date $r50, $r58, $r64, $r72;
        sun.security.krb5.internal.ccache.Credentials $r78;
        sun.security.krb5.internal.Ticket $r82, $r83;

        r0 := @this: sun.security.krb5.internal.ccache.CCacheInputStream;
        i0 := @parameter0: int;
        r1 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: sun.security.krb5.PrincipalName readPrincipal(int)>(i0);
        $z2 = <sun.security.krb5.internal.ccache.CCacheInputStream: boolean DEBUG>;
        if $z2 == 0 goto label0;

        $r26 = <java.lang.System: java.io.PrintStream out>;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>DEBUG <CCacheInputStream>  client principal is ");
        $r29 = virtualinvoke r1.<sun.security.krb5.PrincipalName: java.lang.String toString()>();
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31);

     label0:
        r2 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: sun.security.krb5.PrincipalName readPrincipal(int)>(i0);
        $z3 = <sun.security.krb5.internal.ccache.CCacheInputStream: boolean DEBUG>;
        if $z3 == 0 goto label1;

        $r32 = <java.lang.System: java.io.PrintStream out>;
        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>DEBUG <CCacheInputStream> server principal is ");
        $r35 = virtualinvoke r2.<sun.security.krb5.PrincipalName: java.lang.String toString()>();
        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r37);

     label1:
        r3 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: sun.security.krb5.EncryptionKey readKey(int)>(i0);
        $z4 = <sun.security.krb5.internal.ccache.CCacheInputStream: boolean DEBUG>;
        if $z4 == 0 goto label2;

        $r38 = <java.lang.System: java.io.PrintStream out>;
        $r39 = new java.lang.StringBuilder;
        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>DEBUG <CCacheInputStream> key type: ");
        $i1 = virtualinvoke r3.<sun.security.krb5.EncryptionKey: int getEType()>();
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r42);

     label2:
        r4 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: long[] readTimes()>();
        $r43 = new sun.security.krb5.internal.KerberosTime;
        $l2 = r4[0];
        specialinvoke $r43.<sun.security.krb5.internal.KerberosTime: void <init>(long)>($l2);
        r5 = $r43;
        $l3 = r4[1];
        $b4 = $l3 cmp 0L;
        if $b4 != 0 goto label3;

        $r44 = null;
        goto label4;

     label3:
        $r44 = new sun.security.krb5.internal.KerberosTime;
        $l5 = r4[1];
        specialinvoke $r44.<sun.security.krb5.internal.KerberosTime: void <init>(long)>($l5);

     label4:
        r6 = $r44;
        $r45 = new sun.security.krb5.internal.KerberosTime;
        $l6 = r4[2];
        specialinvoke $r45.<sun.security.krb5.internal.KerberosTime: void <init>(long)>($l6);
        r7 = $r45;
        $l7 = r4[3];
        $b8 = $l7 cmp 0L;
        if $b8 != 0 goto label5;

        $r46 = null;
        goto label6;

     label5:
        $r46 = new sun.security.krb5.internal.KerberosTime;
        $l9 = r4[3];
        specialinvoke $r46.<sun.security.krb5.internal.KerberosTime: void <init>(long)>($l9);

     label6:
        r8 = $r46;
        $z5 = <sun.security.krb5.internal.ccache.CCacheInputStream: boolean DEBUG>;
        if $z5 == 0 goto label11;

        $r47 = <java.lang.System: java.io.PrintStream out>;
        $r48 = new java.lang.StringBuilder;
        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>DEBUG <CCacheInputStream> auth time: ");
        $r50 = virtualinvoke r5.<sun.security.krb5.internal.KerberosTime: java.util.Date toDate()>();
        $r51 = virtualinvoke $r50.<java.util.Date: java.lang.String toString()>();
        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r53);
        $r54 = <java.lang.System: java.io.PrintStream out>;
        $r55 = new java.lang.StringBuilder;
        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>DEBUG <CCacheInputStream> start time: ");
        if r6 != null goto label7;

        $r57 = "null";
        goto label8;

     label7:
        $r58 = virtualinvoke r6.<sun.security.krb5.internal.KerberosTime: java.util.Date toDate()>();
        $r57 = virtualinvoke $r58.<java.util.Date: java.lang.String toString()>();

     label8:
        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r60);
        $r61 = <java.lang.System: java.io.PrintStream out>;
        $r62 = new java.lang.StringBuilder;
        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>DEBUG <CCacheInputStream> end time: ");
        $r64 = virtualinvoke r7.<sun.security.krb5.internal.KerberosTime: java.util.Date toDate()>();
        $r65 = virtualinvoke $r64.<java.util.Date: java.lang.String toString()>();
        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r67);
        $r68 = <java.lang.System: java.io.PrintStream out>;
        $r69 = new java.lang.StringBuilder;
        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>DEBUG <CCacheInputStream> renew_till time: ");
        if r8 != null goto label9;

        $r71 = "null";
        goto label10;

     label9:
        $r72 = virtualinvoke r8.<sun.security.krb5.internal.KerberosTime: java.util.Date toDate()>();
        $r71 = virtualinvoke $r72.<java.util.Date: java.lang.String toString()>();

     label10:
        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);
        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>($r74);

     label11:
        z0 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: boolean readskey()>();
        r9 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: boolean[] readFlags()>();
        $r75 = new sun.security.krb5.internal.TicketFlags;
        specialinvoke $r75.<sun.security.krb5.internal.TicketFlags: void <init>(boolean[])>(r9);
        r10 = $r75;
        r11 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: sun.security.krb5.internal.HostAddress[] readAddr()>();
        r12 = null;
        if r11 == null goto label12;

        $r76 = new sun.security.krb5.internal.HostAddresses;
        specialinvoke $r76.<sun.security.krb5.internal.HostAddresses: void <init>(sun.security.krb5.internal.HostAddress[])>(r11);
        r12 = $r76;

     label12:
        r13 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: sun.security.krb5.internal.AuthorizationDataEntry[] readAuth()>();
        r14 = null;
        if r14 == null goto label13;

        $r77 = new sun.security.krb5.internal.AuthorizationData;
        specialinvoke $r77.<sun.security.krb5.internal.AuthorizationData: void <init>(sun.security.krb5.internal.AuthorizationDataEntry[])>(r13);
        r14 = $r77;

     label13:
        r15 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: byte[] readData()>();
        r16 = virtualinvoke r0.<sun.security.krb5.internal.ccache.CCacheInputStream: byte[] readData()>();

     label14:
        $r78 = new sun.security.krb5.internal.ccache.Credentials;
        $r23 = r12;
        $r24 = r14;
        if r15 == null goto label15;

        $r82 = new sun.security.krb5.internal.Ticket;
        specialinvoke $r82.<sun.security.krb5.internal.Ticket: void <init>(byte[])>(r15);
        goto label16;

     label15:
        $r82 = null;

     label16:
        if r16 == null goto label17;

        $r83 = new sun.security.krb5.internal.Ticket;
        specialinvoke $r83.<sun.security.krb5.internal.Ticket: void <init>(byte[])>(r16);
        goto label18;

     label17:
        $r83 = null;

     label18:
        specialinvoke $r78.<sun.security.krb5.internal.ccache.Credentials: void <init>(sun.security.krb5.PrincipalName,sun.security.krb5.PrincipalName,sun.security.krb5.EncryptionKey,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,boolean,sun.security.krb5.internal.TicketFlags,sun.security.krb5.internal.HostAddresses,sun.security.krb5.internal.AuthorizationData,sun.security.krb5.internal.Ticket,sun.security.krb5.internal.Ticket)>(r1, r2, r3, r5, r6, r7, r8, z0, r10, $r23, $r24, $r82, $r83);

     label19:
        return $r78;

     label20:
        $r84 := @caughtexception;
        r25 = $r84;
        return null;

        catch java.lang.Exception from label14 to label19 with label20;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        <sun.security.krb5.internal.ccache.CCacheInputStream: boolean DEBUG> = $z0;
        return;
    }
}
