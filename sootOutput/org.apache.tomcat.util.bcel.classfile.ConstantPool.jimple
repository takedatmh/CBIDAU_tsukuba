public class org.apache.tomcat.util.bcel.classfile.ConstantPool extends java.lang.Object
{
    private final org.apache.tomcat.util.bcel.classfile.Constant[] constant_pool;

    void <init>(java.io.DataInput) throws java.io.IOException, org.apache.tomcat.util.bcel.classfile.ClassFormatException
    {
        org.apache.tomcat.util.bcel.classfile.ConstantPool r0;
        java.io.DataInput r1;
        int i0, i1;
        byte b2;
        org.apache.tomcat.util.bcel.classfile.Constant[] $r2, $r3, $r5, $r7;
        org.apache.tomcat.util.bcel.classfile.Constant $r4, $r6, $r8;

        r0 := @this: org.apache.tomcat.util.bcel.classfile.ConstantPool;
        r1 := @parameter0: java.io.DataInput;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        i0 = interfaceinvoke r1.<java.io.DataInput: int readUnsignedShort()>();
        $r2 = newarray (org.apache.tomcat.util.bcel.classfile.Constant)[i0];
        r0.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant[] constant_pool> = $r2;
        i1 = 1;
        goto label3;

     label0:
        $r3 = r0.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant[] constant_pool>;
        $r4 = staticinvoke <org.apache.tomcat.util.bcel.classfile.Constant: org.apache.tomcat.util.bcel.classfile.Constant readConstant(java.io.DataInput)>(r1);
        $r3[i1] = $r4;
        $r5 = r0.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant[] constant_pool>;
        $r6 = $r5[i1];
        if $r6 == null goto label2;

        $r7 = r0.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant[] constant_pool>;
        $r8 = $r7[i1];
        b2 = virtualinvoke $r8.<org.apache.tomcat.util.bcel.classfile.Constant: byte getTag()>();
        if b2 == 6 goto label1;

        if b2 != 5 goto label2;

     label1:
        i1 = i1 + 1;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label0;

        return;
    }

    public org.apache.tomcat.util.bcel.classfile.Constant getConstant(int)
    {
        org.apache.tomcat.util.bcel.classfile.ConstantPool r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r4, $r5, $r7;
        org.apache.tomcat.util.bcel.classfile.Constant[] $r2, $r6, $r9;
        org.apache.tomcat.util.bcel.classfile.ClassFormatException $r3;
        java.lang.String $r8;
        org.apache.tomcat.util.bcel.classfile.Constant $r10;

        r0 := @this: org.apache.tomcat.util.bcel.classfile.ConstantPool;
        i0 := @parameter0: int;
        $r2 = r0.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant[] constant_pool>;
        $i1 = lengthof $r2;
        if i0 >= $i1 goto label0;

        if i0 >= 0 goto label1;

     label0:
        $r3 = new org.apache.tomcat.util.bcel.classfile.ClassFormatException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid constant pool reference: ");
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Constant pool size is: ");
        $r6 = r0.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant[] constant_pool>;
        $i2 = lengthof $r6;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<org.apache.tomcat.util.bcel.classfile.ClassFormatException: void <init>(java.lang.String)>($r8);
        throw $r3;

     label1:
        $r9 = r0.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant[] constant_pool>;
        $r10 = $r9[i0];
        return $r10;
    }

    public org.apache.tomcat.util.bcel.classfile.Constant getConstant(int, byte) throws org.apache.tomcat.util.bcel.classfile.ClassFormatException
    {
        org.apache.tomcat.util.bcel.classfile.ConstantPool r0;
        int i0;
        byte b1, $b2;
        org.apache.tomcat.util.bcel.classfile.Constant r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r10, $r11, $r12, $r13, $r14;
        org.apache.tomcat.util.bcel.classfile.ClassFormatException $r3, $r7;
        java.lang.String $r6, $r9, $r15;

        r0 := @this: org.apache.tomcat.util.bcel.classfile.ConstantPool;
        i0 := @parameter0: int;
        b1 := @parameter1: byte;
        r1 = virtualinvoke r0.<org.apache.tomcat.util.bcel.classfile.ConstantPool: org.apache.tomcat.util.bcel.classfile.Constant getConstant(int)>(i0);
        if r1 != null goto label0;

        $r3 = new org.apache.tomcat.util.bcel.classfile.ClassFormatException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Constant pool at index ");
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null.");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<org.apache.tomcat.util.bcel.classfile.ClassFormatException: void <init>(java.lang.String)>($r6);
        throw $r3;

     label0:
        $b2 = virtualinvoke r1.<org.apache.tomcat.util.bcel.classfile.Constant: byte getTag()>();
        if $b2 == b1 goto label1;

        $r7 = new org.apache.tomcat.util.bcel.classfile.ClassFormatException;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected class `");
        $r9 = staticinvoke <org.apache.tomcat.util.bcel.Const: java.lang.String getConstantName(int)>(b1);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' at index ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and got ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<org.apache.tomcat.util.bcel.classfile.ClassFormatException: void <init>(java.lang.String)>($r15);
        throw $r7;

     label1:
        return r1;
    }
}
