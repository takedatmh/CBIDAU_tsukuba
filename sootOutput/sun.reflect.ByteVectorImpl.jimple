class sun.reflect.ByteVectorImpl extends java.lang.Object implements sun.reflect.ByteVector
{
    private byte[] data;
    private int pos;

    public void <init>()
    {
        sun.reflect.ByteVectorImpl r0;

        r0 := @this: sun.reflect.ByteVectorImpl;
        specialinvoke r0.<sun.reflect.ByteVectorImpl: void <init>(int)>(100);
        return;
    }

    public void <init>(int)
    {
        sun.reflect.ByteVectorImpl r0;
        int i0;
        byte[] $r1;

        r0 := @this: sun.reflect.ByteVectorImpl;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (byte)[i0];
        r0.<sun.reflect.ByteVectorImpl: byte[] data> = $r1;
        r0.<sun.reflect.ByteVectorImpl: int pos> = -1;
        return;
    }

    public int getLength()
    {
        sun.reflect.ByteVectorImpl r0;
        int $i0, $i1;

        r0 := @this: sun.reflect.ByteVectorImpl;
        $i0 = r0.<sun.reflect.ByteVectorImpl: int pos>;
        $i1 = $i0 + 1;
        return $i1;
    }

    public byte get(int)
    {
        sun.reflect.ByteVectorImpl r0;
        int i0, $i1;
        byte[] $r1, $r2;
        byte $b2;

        r0 := @this: sun.reflect.ByteVectorImpl;
        i0 := @parameter0: int;
        $r1 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $i1 = lengthof $r1;
        if i0 < $i1 goto label0;

        specialinvoke r0.<sun.reflect.ByteVectorImpl: void resize(int)>(i0);
        r0.<sun.reflect.ByteVectorImpl: int pos> = i0;

     label0:
        $r2 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $b2 = $r2[i0];
        return $b2;
    }

    public void put(int, byte)
    {
        sun.reflect.ByteVectorImpl r0;
        int i0, $i2;
        byte b1;
        byte[] $r1, $r2;

        r0 := @this: sun.reflect.ByteVectorImpl;
        i0 := @parameter0: int;
        b1 := @parameter1: byte;
        $r1 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $i2 = lengthof $r1;
        if i0 < $i2 goto label0;

        specialinvoke r0.<sun.reflect.ByteVectorImpl: void resize(int)>(i0);
        r0.<sun.reflect.ByteVectorImpl: int pos> = i0;

     label0:
        $r2 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $r2[i0] = b1;
        return;
    }

    public void add(byte)
    {
        sun.reflect.ByteVectorImpl r0;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5;
        byte[] $r2, $r3;

        r0 := @this: sun.reflect.ByteVectorImpl;
        b0 := @parameter0: byte;
        $i1 = r0.<sun.reflect.ByteVectorImpl: int pos>;
        $i2 = $i1 + 1;
        r0.<sun.reflect.ByteVectorImpl: int pos> = $i2;
        $r2 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $i3 = lengthof $r2;
        if $i2 < $i3 goto label0;

        $i4 = r0.<sun.reflect.ByteVectorImpl: int pos>;
        specialinvoke r0.<sun.reflect.ByteVectorImpl: void resize(int)>($i4);

     label0:
        $r3 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $i5 = r0.<sun.reflect.ByteVectorImpl: int pos>;
        $r3[$i5] = b0;
        return;
    }

    public void trim()
    {
        sun.reflect.ByteVectorImpl r0;
        byte[] r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: sun.reflect.ByteVectorImpl;
        $i0 = r0.<sun.reflect.ByteVectorImpl: int pos>;
        $r2 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $i1 = lengthof $r2;
        $i2 = $i1 - 1;
        if $i0 == $i2 goto label0;

        $i3 = r0.<sun.reflect.ByteVectorImpl: int pos>;
        $i4 = $i3 + 1;
        r1 = newarray (byte)[$i4];
        $r3 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $i5 = r0.<sun.reflect.ByteVectorImpl: int pos>;
        $i6 = $i5 + 1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i6);
        r0.<sun.reflect.ByteVectorImpl: byte[] data> = r1;

     label0:
        return;
    }

    public byte[] getData()
    {
        sun.reflect.ByteVectorImpl r0;
        byte[] $r1;

        r0 := @this: sun.reflect.ByteVectorImpl;
        $r1 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        return $r1;
    }

    private void resize(int)
    {
        sun.reflect.ByteVectorImpl r0;
        int i0, $i1, $i2, $i3, $i4;
        byte[] r1, $r2, $r3, $r4, $r5;

        r0 := @this: sun.reflect.ByteVectorImpl;
        i0 := @parameter0: int;
        $r2 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $i1 = lengthof $r2;
        $i2 = 2 * $i1;
        if i0 > $i2 goto label0;

        $r3 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $i3 = lengthof $r3;
        i0 = 2 * $i3;

     label0:
        r1 = newarray (byte)[i0];
        $r4 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $r5 = r0.<sun.reflect.ByteVectorImpl: byte[] data>;
        $i4 = lengthof $r5;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 0, $i4);
        r0.<sun.reflect.ByteVectorImpl: byte[] data> = r1;
        return;
    }
}
