public class java.security.cert.PKIXCertPathValidatorResult extends java.lang.Object implements java.security.cert.CertPathValidatorResult
{
    private java.security.cert.TrustAnchor trustAnchor;
    private java.security.cert.PolicyNode policyTree;
    private java.security.PublicKey subjectPublicKey;

    public void <init>(java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey)
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.security.cert.TrustAnchor r1;
        java.security.cert.PolicyNode r2;
        java.security.PublicKey r3;
        java.lang.NullPointerException $r4, $r5;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;
        r1 := @parameter0: java.security.cert.TrustAnchor;
        r2 := @parameter1: java.security.cert.PolicyNode;
        r3 := @parameter2: java.security.PublicKey;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r3 != null goto label0;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("subjectPublicKey must be non-null");
        throw $r4;

     label0:
        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("trustAnchor must be non-null");
        throw $r5;

     label1:
        r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor trustAnchor> = r1;
        r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode policyTree> = r2;
        r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey subjectPublicKey> = r3;
        return;
    }

    public java.security.cert.TrustAnchor getTrustAnchor()
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.security.cert.TrustAnchor $r1;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;
        $r1 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor trustAnchor>;
        return $r1;
    }

    public java.security.cert.PolicyNode getPolicyTree()
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.security.cert.PolicyNode $r1;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;
        $r1 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode policyTree>;
        return $r1;
    }

    public java.security.PublicKey getPublicKey()
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.security.PublicKey $r1;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;
        $r1 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey subjectPublicKey>;
        return $r1;
    }

    public java.lang.Object clone()
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.lang.CloneNotSupportedException r1, $r3;
        java.lang.Object $r2;
        java.lang.InternalError $r4;
        java.lang.String $r5;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;

     label0:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        $r4 = new java.lang.InternalError;
        $r5 = virtualinvoke r1.<java.lang.CloneNotSupportedException: java.lang.String toString()>();
        specialinvoke $r4.<java.lang.InternalError: void <init>(java.lang.String)>($r5);
        throw $r4;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public java.lang.String toString()
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.lang.StringBuffer $r1, r2;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r12, $r13, $r16, $r17, $r20, $r21, $r23, $r24;
        java.security.cert.TrustAnchor $r6;
        java.lang.String $r7, $r10, $r15, $r18, $r25, $r28;
        java.security.cert.PolicyNode $r14;
        java.security.PublicKey $r22;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PKIXCertPathValidatorResult: [\n");
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Trust Anchor: ");
        $r6 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor trustAnchor>;
        $r7 = virtualinvoke $r6.<java.security.cert.TrustAnchor: java.lang.String toString()>();
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Policy Tree: ");
        $r14 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode policyTree>;
        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14);
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Subject Public Key: ");
        $r22 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey subjectPublicKey>;
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r28 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r28;
    }
}
