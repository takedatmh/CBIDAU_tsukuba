public class org.apache.naming.resources.RecyclableNamingEnumeration extends java.lang.Object implements javax.naming.NamingEnumeration
{
    protected java.util.Vector entries;
    protected java.util.Enumeration enumeration;

    public void <init>(java.util.Vector)
    {
        org.apache.naming.resources.RecyclableNamingEnumeration r0;
        java.util.Vector r1;

        r0 := @this: org.apache.naming.resources.RecyclableNamingEnumeration;
        r1 := @parameter0: java.util.Vector;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.naming.resources.RecyclableNamingEnumeration: java.util.Vector entries> = r1;
        virtualinvoke r0.<org.apache.naming.resources.RecyclableNamingEnumeration: void recycle()>();
        return;
    }

    public java.lang.Object next() throws javax.naming.NamingException
    {
        org.apache.naming.resources.RecyclableNamingEnumeration r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.naming.resources.RecyclableNamingEnumeration;
        $r1 = virtualinvoke r0.<org.apache.naming.resources.RecyclableNamingEnumeration: java.lang.Object nextElement()>();
        return $r1;
    }

    public boolean hasMore() throws javax.naming.NamingException
    {
        org.apache.naming.resources.RecyclableNamingEnumeration r0;
        java.util.Enumeration $r1;
        boolean $z0;

        r0 := @this: org.apache.naming.resources.RecyclableNamingEnumeration;
        $r1 = r0.<org.apache.naming.resources.RecyclableNamingEnumeration: java.util.Enumeration enumeration>;
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();
        return $z0;
    }

    public void close() throws javax.naming.NamingException
    {
        org.apache.naming.resources.RecyclableNamingEnumeration r0;

        r0 := @this: org.apache.naming.resources.RecyclableNamingEnumeration;
        return;
    }

    public boolean hasMoreElements()
    {
        org.apache.naming.resources.RecyclableNamingEnumeration r0;
        java.util.Enumeration $r1;
        boolean $z0;

        r0 := @this: org.apache.naming.resources.RecyclableNamingEnumeration;
        $r1 = r0.<org.apache.naming.resources.RecyclableNamingEnumeration: java.util.Enumeration enumeration>;
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();
        return $z0;
    }

    public java.lang.Object nextElement()
    {
        org.apache.naming.resources.RecyclableNamingEnumeration r0;
        java.util.Enumeration $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.naming.resources.RecyclableNamingEnumeration;
        $r1 = r0.<org.apache.naming.resources.RecyclableNamingEnumeration: java.util.Enumeration enumeration>;
        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();
        return $r2;
    }

    void recycle()
    {
        org.apache.naming.resources.RecyclableNamingEnumeration r0;
        java.util.Vector $r1;
        java.util.Enumeration $r2;

        r0 := @this: org.apache.naming.resources.RecyclableNamingEnumeration;
        $r1 = r0.<org.apache.naming.resources.RecyclableNamingEnumeration: java.util.Vector entries>;
        $r2 = virtualinvoke $r1.<java.util.Vector: java.util.Enumeration elements()>();
        r0.<org.apache.naming.resources.RecyclableNamingEnumeration: java.util.Enumeration enumeration> = $r2;
        return;
    }
}
