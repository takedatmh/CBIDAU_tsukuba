class sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.ThreadGroup[] val$finalsg;
    final sun.security.provider.SeedGenerator$ThreadedSeedGenerator this$0;

    void <init>(sun.security.provider.SeedGenerator$ThreadedSeedGenerator, java.lang.ThreadGroup[])
    {
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1 r0;
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator r1;
        java.lang.ThreadGroup[] r2;

        r0 := @this: sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1;
        r1 := @parameter0: sun.security.provider.SeedGenerator$ThreadedSeedGenerator;
        r2 := @parameter1: java.lang.ThreadGroup[];
        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: sun.security.provider.SeedGenerator$ThreadedSeedGenerator this$0> = r1;
        r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.ThreadGroup[] val$finalsg> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Thread run()
    {
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1 r0;
        java.lang.Thread $r1, r5, $r8;
        java.lang.ThreadGroup r2, r3, $r4, $r6, $r10;
        java.lang.ThreadGroup[] $r7, $r9;
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator $r11;

        r0 := @this: sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();

     label0:
        $r6 = virtualinvoke r2.<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>();
        r3 = $r6;
        if $r6 == null goto label1;

        r2 = r3;
        goto label0;

     label1:
        $r7 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.ThreadGroup[] val$finalsg>;
        $r4 = new java.lang.ThreadGroup;
        specialinvoke $r4.<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>(r2, "SeedGenerator ThreadGroup");
        $r7[0] = $r4;
        $r8 = new java.lang.Thread;
        $r9 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.ThreadGroup[] val$finalsg>;
        $r10 = $r9[0];
        $r11 = r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: sun.security.provider.SeedGenerator$ThreadedSeedGenerator this$0>;
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>($r10, $r11, "SeedGenerator Thread");
        r5 = $r8;
        virtualinvoke r5.<java.lang.Thread: void setPriority(int)>(1);
        virtualinvoke r5.<java.lang.Thread: void setDaemon(boolean)>(1);
        return r5;
    }

    public volatile java.lang.Object run()
    {
        sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1 r0;
        java.lang.Thread $r1;

        r0 := @this: sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1;
        $r1 = virtualinvoke r0.<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>();
        return $r1;
    }
}
