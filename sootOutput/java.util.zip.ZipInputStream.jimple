public class java.util.zip.ZipInputStream extends java.util.zip.InflaterInputStream implements java.util.zip.ZipConstants
{
    private java.util.zip.ZipEntry entry;
    private int flag;
    private java.util.zip.CRC32 crc;
    private long remaining;
    private byte[] tmpbuf;
    private static final int STORED;
    private static final int DEFLATED;
    private boolean closed;
    private boolean entryEOF;
    private java.util.zip.ZipCoder zc;
    private byte[] b;

    private void ensureOpen() throws java.io.IOException
    {
        java.util.zip.ZipInputStream r0;
        boolean $z0;
        java.io.IOException $r1;

        r0 := @this: java.util.zip.ZipInputStream;
        $z0 = r0.<java.util.zip.ZipInputStream: boolean closed>;
        if $z0 == 0 goto label0;

        $r1 = new java.io.IOException;
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Stream closed");
        throw $r1;

     label0:
        return;
    }

    public void <init>(java.io.InputStream)
    {
        java.util.zip.ZipInputStream r0;
        java.io.InputStream r1;
        java.nio.charset.Charset $r2;

        r0 := @this: java.util.zip.ZipInputStream;
        r1 := @parameter0: java.io.InputStream;
        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
        specialinvoke r0.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r1, $r2);
        return;
    }

    public void <init>(java.io.InputStream, java.nio.charset.Charset)
    {
        java.util.zip.ZipInputStream r0;
        java.io.InputStream r1;
        java.nio.charset.Charset r2;
        java.io.PushbackInputStream $r3;
        java.util.zip.Inflater $r4;
        java.util.zip.CRC32 $r5;
        byte[] $r6, $r7;
        java.lang.NullPointerException $r8, $r9;
        java.util.zip.ZipCoder $r10;

        r0 := @this: java.util.zip.ZipInputStream;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.nio.charset.Charset;
        $r3 = new java.io.PushbackInputStream;
        specialinvoke $r3.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(r1, 512);
        $r4 = new java.util.zip.Inflater;
        specialinvoke $r4.<java.util.zip.Inflater: void <init>(boolean)>(1);
        specialinvoke r0.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>($r3, $r4, 512);
        $r5 = new java.util.zip.CRC32;
        specialinvoke $r5.<java.util.zip.CRC32: void <init>()>();
        r0.<java.util.zip.ZipInputStream: java.util.zip.CRC32 crc> = $r5;
        $r6 = newarray (byte)[512];
        r0.<java.util.zip.ZipInputStream: byte[] tmpbuf> = $r6;
        r0.<java.util.zip.ZipInputStream: boolean closed> = 0;
        r0.<java.util.zip.ZipInputStream: boolean entryEOF> = 0;
        $r7 = newarray (byte)[256];
        r0.<java.util.zip.ZipInputStream: byte[] b> = $r7;
        r0.<java.util.zip.ZipInputStream: boolean usesDefaultInflater> = 1;
        if r1 != null goto label0;

        $r8 = new java.lang.NullPointerException;
        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("in is null");
        throw $r8;

     label0:
        if r2 != null goto label1;

        $r9 = new java.lang.NullPointerException;
        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("charset is null");
        throw $r9;

     label1:
        $r10 = staticinvoke <java.util.zip.ZipCoder: java.util.zip.ZipCoder get(java.nio.charset.Charset)>(r2);
        r0.<java.util.zip.ZipInputStream: java.util.zip.ZipCoder zc> = $r10;
        return;
    }

    public java.util.zip.ZipEntry getNextEntry() throws java.io.IOException
    {
        java.util.zip.ZipInputStream r0;
        java.util.zip.ZipEntry $r1, $r2, $r5, $r6, $r7;
        java.util.zip.CRC32 $r3;
        java.util.zip.Inflater $r4;
        int $i0;
        long $l1;

        r0 := @this: java.util.zip.ZipInputStream;
        specialinvoke r0.<java.util.zip.ZipInputStream: void ensureOpen()>();
        $r2 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry>;
        if $r2 == null goto label0;

        virtualinvoke r0.<java.util.zip.ZipInputStream: void closeEntry()>();

     label0:
        $r3 = r0.<java.util.zip.ZipInputStream: java.util.zip.CRC32 crc>;
        virtualinvoke $r3.<java.util.zip.CRC32: void reset()>();
        $r4 = r0.<java.util.zip.ZipInputStream: java.util.zip.Inflater inf>;
        virtualinvoke $r4.<java.util.zip.Inflater: void reset()>();
        $r1 = specialinvoke r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry readLOC()>();
        r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry> = $r1;
        if $r1 != null goto label1;

        return null;

     label1:
        $r5 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry>;
        $i0 = $r5.<java.util.zip.ZipEntry: int method>;
        if $i0 != 0 goto label2;

        $r6 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry>;
        $l1 = $r6.<java.util.zip.ZipEntry: long size>;
        r0.<java.util.zip.ZipInputStream: long remaining> = $l1;

     label2:
        r0.<java.util.zip.ZipInputStream: boolean entryEOF> = 0;
        $r7 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry>;
        return $r7;
    }

    public void closeEntry() throws java.io.IOException
    {
        java.util.zip.ZipInputStream r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        r0 := @this: java.util.zip.ZipInputStream;
        specialinvoke r0.<java.util.zip.ZipInputStream: void ensureOpen()>();

     label0:
        $r1 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $r2 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $i0 = lengthof $r2;
        $i1 = virtualinvoke r0.<java.util.zip.ZipInputStream: int read(byte[],int,int)>($r1, 0, $i0);
        if $i1 == -1 goto label1;

        goto label0;

     label1:
        r0.<java.util.zip.ZipInputStream: boolean entryEOF> = 1;
        return;
    }

    public int available() throws java.io.IOException
    {
        java.util.zip.ZipInputStream r0;
        boolean $z0;

        r0 := @this: java.util.zip.ZipInputStream;
        specialinvoke r0.<java.util.zip.ZipInputStream: void ensureOpen()>();
        $z0 = r0.<java.util.zip.ZipInputStream: boolean entryEOF>;
        if $z0 == 0 goto label0;

        return 0;

     label0:
        return 1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.util.zip.ZipInputStream r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4, i5, i12;
        java.lang.IndexOutOfBoundsException $r2;
        java.util.zip.ZipEntry $r3, $r4, $r5, $r11, $r16;
        java.util.zip.CRC32 $r6, $r9, $r12, $r20;
        long $l6, $l8, $l9, $l11, $l13, $l14, $l15, $l16, $l18, $l19, $l21, $l22;
        byte $b7, $b10, $b17, $b20;
        java.io.InputStream $r7;
        java.util.zip.ZipException $r8, $r13, $r25;
        java.lang.StringBuilder $r14, $r15, $r18, $r19, $r22, $r23;
        java.lang.String $r17, $r21, $r24;

        r0 := @this: java.util.zip.ZipInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<java.util.zip.ZipInputStream: void ensureOpen()>();
        if i0 < 0 goto label0;

        if i1 < 0 goto label0;

        $i2 = lengthof r1;
        $i3 = $i2 - i1;
        if i0 <= $i3 goto label1;

     label0:
        $r2 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label1:
        if i1 != 0 goto label2;

        return 0;

     label2:
        $r3 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry>;
        if $r3 != null goto label3;

        return -1;

     label3:
        $r4 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry>;
        $i4 = $r4.<java.util.zip.ZipEntry: int method>;
        lookupswitch($i4)
        {
            case 0: goto label7;
            case 8: goto label4;
            default: goto label12;
        };

     label4:
        i5 = specialinvoke r0.<java.util.zip.InflaterInputStream: int read(byte[],int,int)>(r1, i0, i1);
        if i5 != -1 goto label5;

        $r5 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry>;
        specialinvoke r0.<java.util.zip.ZipInputStream: void readEnd(java.util.zip.ZipEntry)>($r5);
        r0.<java.util.zip.ZipInputStream: boolean entryEOF> = 1;
        r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry> = null;
        goto label6;

     label5:
        $r6 = r0.<java.util.zip.ZipInputStream: java.util.zip.CRC32 crc>;
        virtualinvoke $r6.<java.util.zip.CRC32: void update(byte[],int,int)>(r1, i0, i5);

     label6:
        return i5;

     label7:
        $l6 = r0.<java.util.zip.ZipInputStream: long remaining>;
        $b7 = $l6 cmp 0L;
        if $b7 > 0 goto label8;

        r0.<java.util.zip.ZipInputStream: boolean entryEOF> = 1;
        r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry> = null;
        return -1;

     label8:
        $l8 = (long) i1;
        $l9 = r0.<java.util.zip.ZipInputStream: long remaining>;
        $b10 = $l8 cmp $l9;
        if $b10 <= 0 goto label9;

        $l11 = r0.<java.util.zip.ZipInputStream: long remaining>;
        i1 = (int) $l11;

     label9:
        $r7 = r0.<java.util.zip.ZipInputStream: java.io.InputStream in>;
        i12 = virtualinvoke $r7.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);
        if i12 != -1 goto label10;

        $r8 = new java.util.zip.ZipException;
        specialinvoke $r8.<java.util.zip.ZipException: void <init>(java.lang.String)>("unexpected EOF");
        throw $r8;

     label10:
        $r9 = r0.<java.util.zip.ZipInputStream: java.util.zip.CRC32 crc>;
        virtualinvoke $r9.<java.util.zip.CRC32: void update(byte[],int,int)>(r1, i0, i12);
        $l13 = r0.<java.util.zip.ZipInputStream: long remaining>;
        $l14 = (long) i12;
        $l15 = $l13 - $l14;
        r0.<java.util.zip.ZipInputStream: long remaining> = $l15;
        $l16 = r0.<java.util.zip.ZipInputStream: long remaining>;
        $b17 = $l16 cmp 0L;
        if $b17 != 0 goto label11;

        $r11 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry>;
        $l18 = $r11.<java.util.zip.ZipEntry: long crc>;
        $r12 = r0.<java.util.zip.ZipInputStream: java.util.zip.CRC32 crc>;
        $l19 = virtualinvoke $r12.<java.util.zip.CRC32: long getValue()>();
        $b20 = $l18 cmp $l19;
        if $b20 == 0 goto label11;

        $r13 = new java.util.zip.ZipException;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid entry CRC (expected 0x");
        $r16 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry>;
        $l21 = $r16.<java.util.zip.ZipEntry: long crc>;
        $r17 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l21);
        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got 0x");
        $r20 = r0.<java.util.zip.ZipInputStream: java.util.zip.CRC32 crc>;
        $l22 = virtualinvoke $r20.<java.util.zip.CRC32: long getValue()>();
        $r21 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l22);
        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r13.<java.util.zip.ZipException: void <init>(java.lang.String)>($r24);
        throw $r13;

     label11:
        return i12;

     label12:
        $r25 = new java.util.zip.ZipException;
        specialinvoke $r25.<java.util.zip.ZipException: void <init>(java.lang.String)>("invalid compression method");
        throw $r25;
    }

    public long skip(long) throws java.io.IOException
    {
        java.util.zip.ZipInputStream r0;
        long l0, $l5, $l8;
        int i1, i2, i3, $i6, i7;
        byte $b4;
        java.lang.IllegalArgumentException $r1;
        byte[] $r2, $r3, $r4;

        r0 := @this: java.util.zip.ZipInputStream;
        l0 := @parameter0: long;
        $b4 = l0 cmp 0L;
        if $b4 >= 0 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("negative skip length");
        throw $r1;

     label0:
        specialinvoke r0.<java.util.zip.ZipInputStream: void ensureOpen()>();
        $l5 = staticinvoke <java.lang.Math: long min(long,long)>(l0, 2147483647L);
        i1 = (int) $l5;
        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        i3 = i1 - i2;
        $r2 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $i6 = lengthof $r2;
        if i3 <= $i6 goto label2;

        $r3 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        i3 = lengthof $r3;

     label2:
        $r4 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        i7 = virtualinvoke r0.<java.util.zip.ZipInputStream: int read(byte[],int,int)>($r4, 0, i3);
        if i7 != -1 goto label3;

        r0.<java.util.zip.ZipInputStream: boolean entryEOF> = 1;
        goto label4;

     label3:
        i2 = i2 + i7;
        goto label1;

     label4:
        $l8 = (long) i2;
        return $l8;
    }

    public void close() throws java.io.IOException
    {
        java.util.zip.ZipInputStream r0;
        boolean $z0;

        r0 := @this: java.util.zip.ZipInputStream;
        $z0 = r0.<java.util.zip.ZipInputStream: boolean closed>;
        if $z0 != 0 goto label0;

        specialinvoke r0.<java.util.zip.InflaterInputStream: void close()>();
        r0.<java.util.zip.ZipInputStream: boolean closed> = 1;

     label0:
        return;
    }

    private java.util.zip.ZipEntry readLOC() throws java.io.IOException
    {
        java.util.zip.ZipInputStream r0;
        java.io.EOFException r1, $r5;
        int i0, i1, i2, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, i19, $i24, $i25, $i26, i27, $i28, $i30, $i32;
        java.util.zip.ZipEntry r2;
        byte[] r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r14, $r17, $r19, $r20, $r22, $r23, $r24, $r25;
        long $l3, $l12, $l16, $l17, $l18, $l20, $l22, $l29, $l31;
        byte $b4, $b21, $b23;
        java.util.zip.ZipCoder $r13, $r16;
        java.lang.String $r15;
        java.util.zip.ZipException $r18, $r21;

        r0 := @this: java.util.zip.ZipInputStream;

     label0:
        $r4 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        specialinvoke r0.<java.util.zip.ZipInputStream: void readFully(byte[],int,int)>($r4, 0, 30);

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r1 = $r5;
        return null;

     label3:
        $r6 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l3 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r6, 0);
        $b4 = $l3 cmp 67324752L;
        if $b4 == 0 goto label4;

        return null;

     label4:
        $r7 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $i5 = staticinvoke <java.util.zip.ZipInputStream: int get16(byte[],int)>($r7, 6);
        r0.<java.util.zip.ZipInputStream: int flag> = $i5;
        $r8 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        i6 = staticinvoke <java.util.zip.ZipInputStream: int get16(byte[],int)>($r8, 26);
        $r9 = r0.<java.util.zip.ZipInputStream: byte[] b>;
        i0 = lengthof $r9;
        if i6 <= i0 goto label6;

     label5:
        i0 = i0 * 2;
        if i6 > i0 goto label5;

        $r10 = newarray (byte)[i0];
        r0.<java.util.zip.ZipInputStream: byte[] b> = $r10;

     label6:
        $r11 = r0.<java.util.zip.ZipInputStream: byte[] b>;
        specialinvoke r0.<java.util.zip.ZipInputStream: void readFully(byte[],int,int)>($r11, 0, i6);
        $i7 = r0.<java.util.zip.ZipInputStream: int flag>;
        $i8 = $i7 & 2048;
        if $i8 == 0 goto label7;

        $r13 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipCoder zc>;
        $r14 = r0.<java.util.zip.ZipInputStream: byte[] b>;
        $r15 = virtualinvoke $r13.<java.util.zip.ZipCoder: java.lang.String toStringUTF8(byte[],int)>($r14, i6);
        goto label8;

     label7:
        $r16 = r0.<java.util.zip.ZipInputStream: java.util.zip.ZipCoder zc>;
        $r17 = r0.<java.util.zip.ZipInputStream: byte[] b>;
        $r15 = virtualinvoke $r16.<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)>($r17, i6);

     label8:
        r2 = virtualinvoke r0.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry createZipEntry(java.lang.String)>($r15);
        $i9 = r0.<java.util.zip.ZipInputStream: int flag>;
        $i10 = $i9 & 1;
        if $i10 != 1 goto label9;

        $r18 = new java.util.zip.ZipException;
        specialinvoke $r18.<java.util.zip.ZipException: void <init>(java.lang.String)>("encrypted ZIP entry not supported");
        throw $r18;

     label9:
        $r19 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $i11 = staticinvoke <java.util.zip.ZipInputStream: int get16(byte[],int)>($r19, 8);
        r2.<java.util.zip.ZipEntry: int method> = $i11;
        $r20 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l12 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r20, 10);
        r2.<java.util.zip.ZipEntry: long time> = $l12;
        $i13 = r0.<java.util.zip.ZipInputStream: int flag>;
        $i14 = $i13 & 8;
        if $i14 != 8 goto label10;

        $i15 = r2.<java.util.zip.ZipEntry: int method>;
        if $i15 == 8 goto label11;

        $r21 = new java.util.zip.ZipException;
        specialinvoke $r21.<java.util.zip.ZipException: void <init>(java.lang.String)>("only DEFLATED entries can have EXT descriptor");
        throw $r21;

     label10:
        $r22 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l16 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r22, 14);
        r2.<java.util.zip.ZipEntry: long crc> = $l16;
        $r23 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l17 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r23, 18);
        r2.<java.util.zip.ZipEntry: long csize> = $l17;
        $r24 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l18 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r24, 22);
        r2.<java.util.zip.ZipEntry: long size> = $l18;

     label11:
        $r25 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        i19 = staticinvoke <java.util.zip.ZipInputStream: int get16(byte[],int)>($r25, 28);
        if i19 <= 0 goto label17;

        r3 = newarray (byte)[i19];
        specialinvoke r0.<java.util.zip.ZipInputStream: void readFully(byte[],int,int)>(r3, 0, i19);
        virtualinvoke r2.<java.util.zip.ZipEntry: void setExtra(byte[])>(r3);
        $l20 = r2.<java.util.zip.ZipEntry: long csize>;
        $b21 = $l20 cmp 4294967295L;
        if $b21 == 0 goto label12;

        $l22 = r2.<java.util.zip.ZipEntry: long size>;
        $b23 = $l22 cmp 4294967295L;
        if $b23 != 0 goto label17;

     label12:
        i1 = 0;

     label13:
        $i24 = i1 + 4;
        if $i24 >= i19 goto label17;

        $i25 = i1 + 2;
        i2 = staticinvoke <java.util.zip.ZipInputStream: int get16(byte[],int)>(r3, $i25);
        $i26 = staticinvoke <java.util.zip.ZipInputStream: int get16(byte[],int)>(r3, i1);
        if $i26 != 1 goto label16;

        i27 = i1 + 4;
        if i2 < 16 goto label14;

        $i28 = i27 + i2;
        if $i28 <= i19 goto label15;

     label14:
        return r2;

     label15:
        $l29 = staticinvoke <java.util.zip.ZipInputStream: long get64(byte[],int)>(r3, i27);
        r2.<java.util.zip.ZipEntry: long size> = $l29;
        $i30 = i27 + 8;
        $l31 = staticinvoke <java.util.zip.ZipInputStream: long get64(byte[],int)>(r3, $i30);
        r2.<java.util.zip.ZipEntry: long csize> = $l31;
        goto label17;

     label16:
        $i32 = i2 + 4;
        i1 = i1 + $i32;
        goto label13;

     label17:
        return r2;

        catch java.io.EOFException from label0 to label1 with label2;
    }

    protected java.util.zip.ZipEntry createZipEntry(java.lang.String)
    {
        java.util.zip.ZipInputStream r0;
        java.lang.String r1;
        java.util.zip.ZipEntry $r2;

        r0 := @this: java.util.zip.ZipInputStream;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.zip.ZipEntry;
        specialinvoke $r2.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r1);
        return $r2;
    }

    private void readEnd(java.util.zip.ZipEntry) throws java.io.IOException
    {
        java.util.zip.ZipInputStream r0;
        java.util.zip.ZipEntry r1;
        int i0, $i2, $i3, $i4, $i5;
        long l1, $l6, $l8, $l11, $l12, $l13, $l14, $l15, l16, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l26, $l27, $l28, $l29, $l31, $l32, $l33, $l34, $l36, $l37;
        java.util.zip.Inflater $r2, $r6, $r7, $r28, $r34, $r38, $r44;
        java.io.InputStream $r3, $r12, $r22;
        java.io.PushbackInputStream $r4, $r13, $r23;
        byte[] $r5, $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r24, $r25, $r26, $r27;
        byte $b7, $b9, $b10, $b17, $b25, $b30, $b35;
        java.util.zip.ZipException $r29, $r39, $r49;
        java.lang.StringBuilder $r30, $r31, $r32, $r33, $r35, $r36, $r40, $r41, $r42, $r43, $r45, $r46, $r50, $r51, $r53, $r54, $r57, $r58;
        java.lang.String $r37, $r47, $r52, $r56, $r59;
        java.util.zip.CRC32 $r48, $r55;

        r0 := @this: java.util.zip.ZipInputStream;
        r1 := @parameter0: java.util.zip.ZipEntry;
        $r2 = r0.<java.util.zip.ZipInputStream: java.util.zip.Inflater inf>;
        i0 = virtualinvoke $r2.<java.util.zip.Inflater: int getRemaining()>();
        if i0 <= 0 goto label0;

        $r3 = r0.<java.util.zip.ZipInputStream: java.io.InputStream in>;
        $r4 = (java.io.PushbackInputStream) $r3;
        $r5 = r0.<java.util.zip.ZipInputStream: byte[] buf>;
        $i2 = r0.<java.util.zip.ZipInputStream: int len>;
        $i3 = $i2 - i0;
        virtualinvoke $r4.<java.io.PushbackInputStream: void unread(byte[],int,int)>($r5, $i3, i0);

     label0:
        $i4 = r0.<java.util.zip.ZipInputStream: int flag>;
        $i5 = $i4 & 8;
        if $i5 != 8 goto label6;

        $r6 = r0.<java.util.zip.ZipInputStream: java.util.zip.Inflater inf>;
        $l6 = virtualinvoke $r6.<java.util.zip.Inflater: long getBytesWritten()>();
        $b7 = $l6 cmp 4294967295L;
        if $b7 > 0 goto label1;

        $r7 = r0.<java.util.zip.ZipInputStream: java.util.zip.Inflater inf>;
        $l8 = virtualinvoke $r7.<java.util.zip.Inflater: long getBytesRead()>();
        $b9 = $l8 cmp 4294967295L;
        if $b9 <= 0 goto label4;

     label1:
        $r8 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        specialinvoke r0.<java.util.zip.ZipInputStream: void readFully(byte[],int,int)>($r8, 0, 24);
        $r9 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        l1 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r9, 0);
        $b10 = l1 cmp 134695760L;
        if $b10 == 0 goto label2;

        r1.<java.util.zip.ZipEntry: long crc> = l1;
        $r10 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l11 = staticinvoke <java.util.zip.ZipInputStream: long get64(byte[],int)>($r10, 4);
        r1.<java.util.zip.ZipEntry: long csize> = $l11;
        $r11 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l12 = staticinvoke <java.util.zip.ZipInputStream: long get64(byte[],int)>($r11, 12);
        r1.<java.util.zip.ZipEntry: long size> = $l12;
        $r12 = r0.<java.util.zip.ZipInputStream: java.io.InputStream in>;
        $r13 = (java.io.PushbackInputStream) $r12;
        $r14 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        virtualinvoke $r13.<java.io.PushbackInputStream: void unread(byte[],int,int)>($r14, 19, 4);
        goto label3;

     label2:
        $r15 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l13 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r15, 4);
        r1.<java.util.zip.ZipEntry: long crc> = $l13;
        $r16 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l14 = staticinvoke <java.util.zip.ZipInputStream: long get64(byte[],int)>($r16, 8);
        r1.<java.util.zip.ZipEntry: long csize> = $l14;
        $r17 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l15 = staticinvoke <java.util.zip.ZipInputStream: long get64(byte[],int)>($r17, 16);
        r1.<java.util.zip.ZipEntry: long size> = $l15;

     label3:
        goto label6;

     label4:
        $r18 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        specialinvoke r0.<java.util.zip.ZipInputStream: void readFully(byte[],int,int)>($r18, 0, 16);
        $r19 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        l16 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r19, 0);
        $b17 = l16 cmp 134695760L;
        if $b17 == 0 goto label5;

        r1.<java.util.zip.ZipEntry: long crc> = l16;
        $r20 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l18 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r20, 4);
        r1.<java.util.zip.ZipEntry: long csize> = $l18;
        $r21 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l19 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r21, 8);
        r1.<java.util.zip.ZipEntry: long size> = $l19;
        $r22 = r0.<java.util.zip.ZipInputStream: java.io.InputStream in>;
        $r23 = (java.io.PushbackInputStream) $r22;
        $r24 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        virtualinvoke $r23.<java.io.PushbackInputStream: void unread(byte[],int,int)>($r24, 11, 4);
        goto label6;

     label5:
        $r25 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l20 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r25, 4);
        r1.<java.util.zip.ZipEntry: long crc> = $l20;
        $r26 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l21 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r26, 8);
        r1.<java.util.zip.ZipEntry: long csize> = $l21;
        $r27 = r0.<java.util.zip.ZipInputStream: byte[] tmpbuf>;
        $l22 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>($r27, 12);
        r1.<java.util.zip.ZipEntry: long size> = $l22;

     label6:
        $l23 = r1.<java.util.zip.ZipEntry: long size>;
        $r28 = r0.<java.util.zip.ZipInputStream: java.util.zip.Inflater inf>;
        $l24 = virtualinvoke $r28.<java.util.zip.Inflater: long getBytesWritten()>();
        $b25 = $l23 cmp $l24;
        if $b25 == 0 goto label7;

        $r29 = new java.util.zip.ZipException;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid entry size (expected ");
        $l26 = r1.<java.util.zip.ZipEntry: long size>;
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l26);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got ");
        $r34 = r0.<java.util.zip.ZipInputStream: java.util.zip.Inflater inf>;
        $l27 = virtualinvoke $r34.<java.util.zip.Inflater: long getBytesWritten()>();
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l27);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)");
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r29.<java.util.zip.ZipException: void <init>(java.lang.String)>($r37);
        throw $r29;

     label7:
        $l28 = r1.<java.util.zip.ZipEntry: long csize>;
        $r38 = r0.<java.util.zip.ZipInputStream: java.util.zip.Inflater inf>;
        $l29 = virtualinvoke $r38.<java.util.zip.Inflater: long getBytesRead()>();
        $b30 = $l28 cmp $l29;
        if $b30 == 0 goto label8;

        $r39 = new java.util.zip.ZipException;
        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid entry compressed size (expected ");
        $l31 = r1.<java.util.zip.ZipEntry: long csize>;
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l31);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got ");
        $r44 = r0.<java.util.zip.ZipInputStream: java.util.zip.Inflater inf>;
        $l32 = virtualinvoke $r44.<java.util.zip.Inflater: long getBytesRead()>();
        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l32);
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)");
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r39.<java.util.zip.ZipException: void <init>(java.lang.String)>($r47);
        throw $r39;

     label8:
        $l33 = r1.<java.util.zip.ZipEntry: long crc>;
        $r48 = r0.<java.util.zip.ZipInputStream: java.util.zip.CRC32 crc>;
        $l34 = virtualinvoke $r48.<java.util.zip.CRC32: long getValue()>();
        $b35 = $l33 cmp $l34;
        if $b35 == 0 goto label9;

        $r49 = new java.util.zip.ZipException;
        $r50 = new java.lang.StringBuilder;
        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid entry CRC (expected 0x");
        $l36 = r1.<java.util.zip.ZipEntry: long crc>;
        $r52 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l36);
        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got 0x");
        $r55 = r0.<java.util.zip.ZipInputStream: java.util.zip.CRC32 crc>;
        $l37 = virtualinvoke $r55.<java.util.zip.CRC32: long getValue()>();
        $r56 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l37);
        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r49.<java.util.zip.ZipException: void <init>(java.lang.String)>($r59);
        throw $r49;

     label9:
        return;
    }

    private void readFully(byte[], int, int) throws java.io.IOException
    {
        java.util.zip.ZipInputStream r0;
        byte[] r1;
        int i0, i1, i2;
        java.io.InputStream $r2;
        java.io.EOFException $r3;

        r0 := @this: java.util.zip.ZipInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;

     label0:
        if i1 <= 0 goto label2;

        $r2 = r0.<java.util.zip.ZipInputStream: java.io.InputStream in>;
        i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);
        if i2 != -1 goto label1;

        $r3 = new java.io.EOFException;
        specialinvoke $r3.<java.io.EOFException: void <init>()>();
        throw $r3;

     label1:
        i0 = i0 + i2;
        i1 = i1 - i2;
        goto label0;

     label2:
        return;
    }

    private static final int get16(byte[], int)
    {
        byte[] r0;
        int i0, $i3, $i6, $i7;
        byte $b1, $b4;
        short $s2, $s5;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        $b1 = r0[i0];
        $s2 = $b1 & 255;
        $i3 = i0 + 1;
        $b4 = r0[$i3];
        $s5 = $b4 & 255;
        $i6 = $s5 << 8;
        $i7 = $s2 | $i6;
        return $i7;
    }

    private static final long get32(byte[], int)
    {
        byte[] r0;
        int i0, $i1, $i3, $i4;
        long $l2, $l5, $l6, $l7, $l8;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        $i1 = staticinvoke <java.util.zip.ZipInputStream: int get16(byte[],int)>(r0, i0);
        $l2 = (long) $i1;
        $i3 = i0 + 2;
        $i4 = staticinvoke <java.util.zip.ZipInputStream: int get16(byte[],int)>(r0, $i3);
        $l5 = (long) $i4;
        $l6 = $l5 << 16;
        $l7 = $l2 | $l6;
        $l8 = $l7 & 4294967295L;
        return $l8;
    }

    private static final long get64(byte[], int)
    {
        byte[] r0;
        int i0, $i2;
        long $l1, $l3, $l4, $l5;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        $l1 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>(r0, i0);
        $i2 = i0 + 4;
        $l3 = staticinvoke <java.util.zip.ZipInputStream: long get32(byte[],int)>(r0, $i2);
        $l4 = $l3 << 32;
        $l5 = $l1 | $l4;
        return $l5;
    }
}
