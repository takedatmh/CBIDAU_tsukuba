public class org.apache.catalina.util.ServerInfo extends java.lang.Object
{
    private static java.lang.String serverInfo;
    private static java.lang.String serverBuilt;
    private static java.lang.String serverNumber;

    static void <clinit>()
    {
        java.util.Properties r0, $r5;
        java.io.InputStream r1;
        java.lang.Throwable r2, r4, $r10, $r12;
        java.io.IOException r3, $r11, $r13, r14, $r15, r16;
        java.lang.Class $r6;
        java.lang.String $r7, $r8, $r9, $r17, $r18, $r19;

        <org.apache.catalina.util.ServerInfo: java.lang.String serverInfo> = null;
        <org.apache.catalina.util.ServerInfo: java.lang.String serverBuilt> = null;
        <org.apache.catalina.util.ServerInfo: java.lang.String serverNumber> = null;
        $r5 = new java.util.Properties;
        specialinvoke $r5.<java.util.Properties: void <init>()>();
        r0 = $r5;
        r1 = null;

     label0:
        $r6 = class "org/apache/catalina/util/ServerInfo";
        r1 = virtualinvoke $r6.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/org/apache/catalina/util/ServerInfo.properties");
        virtualinvoke r0.<java.util.Properties: void load(java.io.InputStream)>(r1);
        $r7 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("server.info");
        <org.apache.catalina.util.ServerInfo: java.lang.String serverInfo> = $r7;
        $r8 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("server.built");
        <org.apache.catalina.util.ServerInfo: java.lang.String serverBuilt> = $r8;
        $r9 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("server.number");
        <org.apache.catalina.util.ServerInfo: java.lang.String serverNumber> = $r9;

     label1:
        goto label12;

     label2:
        $r10 := @caughtexception;
        r2 = $r10;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r2);

     label3:
        if r1 == null goto label16;

     label4:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label5:
        goto label16;

     label6:
        $r11 := @caughtexception;
        r3 = $r11;
        goto label16;

     label7:
        $r12 := @caughtexception;
        r4 = $r12;
        if r1 == null goto label11;

     label8:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label9:
        goto label11;

     label10:
        $r13 := @caughtexception;
        r14 = $r13;

     label11:
        throw r4;

     label12:
        if r1 == null goto label16;

     label13:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r15 := @caughtexception;
        r16 = $r15;

     label16:
        $r17 = <org.apache.catalina.util.ServerInfo: java.lang.String serverInfo>;
        if $r17 != null goto label17;

        <org.apache.catalina.util.ServerInfo: java.lang.String serverInfo> = "Apache Tomcat 7.0.x-dev";

     label17:
        $r18 = <org.apache.catalina.util.ServerInfo: java.lang.String serverBuilt>;
        if $r18 != null goto label18;

        <org.apache.catalina.util.ServerInfo: java.lang.String serverBuilt> = "unknown";

     label18:
        $r19 = <org.apache.catalina.util.ServerInfo: java.lang.String serverNumber>;
        if $r19 != null goto label19;

        <org.apache.catalina.util.ServerInfo: java.lang.String serverNumber> = "7.0.x";

     label19:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.io.IOException from label4 to label5 with label6;
        catch java.lang.Throwable from label0 to label3 with label7;
        catch java.io.IOException from label8 to label9 with label10;
        catch java.io.IOException from label13 to label14 with label15;
    }

    public void <init>()
    {
        org.apache.catalina.util.ServerInfo r0;

        r0 := @this: org.apache.catalina.util.ServerInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String getServerInfo()
    {
        java.lang.String $r0;

        $r0 = <org.apache.catalina.util.ServerInfo: java.lang.String serverInfo>;
        return $r0;
    }

    public static java.lang.String getServerBuilt()
    {
        java.lang.String $r0;

        $r0 = <org.apache.catalina.util.ServerInfo: java.lang.String serverBuilt>;
        return $r0;
    }

    public static java.lang.String getServerNumber()
    {
        java.lang.String $r0;

        $r0 = <org.apache.catalina.util.ServerInfo: java.lang.String serverNumber>;
        return $r0;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.io.PrintStream $r1, $r6, $r11, $r16, $r21, $r26, $r31, $r36;
        java.lang.StringBuilder $r2, $r4, $r7, $r9, $r12, $r14, $r17, $r19, $r22, $r24, $r27, $r29, $r32, $r34, $r37, $r39;
        java.lang.String $r3, $r5, $r8, $r10, $r13, $r15, $r18, $r20, $r23, $r25, $r28, $r30, $r33, $r35, $r38, $r40;

        r0 := @parameter0: java.lang.String[];
        $r1 = <java.lang.System: java.io.PrintStream out>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Server version: ");
        $r3 = staticinvoke <org.apache.catalina.util.ServerInfo: java.lang.String getServerInfo()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
        $r6 = <java.lang.System: java.io.PrintStream out>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Server built:   ");
        $r8 = staticinvoke <org.apache.catalina.util.ServerInfo: java.lang.String getServerBuilt()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);
        $r11 = <java.lang.System: java.io.PrintStream out>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Server number:  ");
        $r13 = staticinvoke <org.apache.catalina.util.ServerInfo: java.lang.String getServerNumber()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);
        $r16 = <java.lang.System: java.io.PrintStream out>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("OS Name:        ");
        $r18 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);
        $r21 = <java.lang.System: java.io.PrintStream out>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("OS Version:     ");
        $r23 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.version");
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r25);
        $r26 = <java.lang.System: java.io.PrintStream out>;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Architecture:   ");
        $r28 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.arch");
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r30);
        $r31 = <java.lang.System: java.io.PrintStream out>;
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("JVM Version:    ");
        $r33 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.runtime.version");
        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r35);
        $r36 = <java.lang.System: java.io.PrintStream out>;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("JVM Vendor:     ");
        $r38 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor");
        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r40);
        return;
    }
}
