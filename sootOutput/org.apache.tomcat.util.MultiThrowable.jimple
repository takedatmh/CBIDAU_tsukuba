public class org.apache.tomcat.util.MultiThrowable extends java.lang.Throwable
{
    private static final long serialVersionUID;
    private java.util.List throwables;

    public void <init>()
    {
        org.apache.tomcat.util.MultiThrowable r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.tomcat.util.MultiThrowable;
        specialinvoke r0.<java.lang.Throwable: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.tomcat.util.MultiThrowable: java.util.List throwables> = $r1;
        return;
    }

    public void add(java.lang.Throwable)
    {
        org.apache.tomcat.util.MultiThrowable r0;
        java.lang.Throwable r1;
        java.util.List $r2;

        r0 := @this: org.apache.tomcat.util.MultiThrowable;
        r1 := @parameter0: java.lang.Throwable;
        $r2 = r0.<org.apache.tomcat.util.MultiThrowable: java.util.List throwables>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    public java.util.List getThrowables()
    {
        org.apache.tomcat.util.MultiThrowable r0;
        java.util.List $r1, $r2;

        r0 := @this: org.apache.tomcat.util.MultiThrowable;
        $r1 = r0.<org.apache.tomcat.util.MultiThrowable: java.util.List throwables>;
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);
        return $r2;
    }

    public java.lang.Throwable getThrowable()
    {
        org.apache.tomcat.util.MultiThrowable r0;
        int $i0, $i1;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.tomcat.util.MultiThrowable;
        $i0 = virtualinvoke r0.<org.apache.tomcat.util.MultiThrowable: int size()>();
        if $i0 != 0 goto label0;

        return null;

     label0:
        $i1 = virtualinvoke r0.<org.apache.tomcat.util.MultiThrowable: int size()>();
        if $i1 != 1 goto label1;

        $r1 = r0.<org.apache.tomcat.util.MultiThrowable: java.util.List throwables>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);
        $r3 = (java.lang.Throwable) $r2;
        return $r3;

     label1:
        return r0;
    }

    public int size()
    {
        org.apache.tomcat.util.MultiThrowable r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: org.apache.tomcat.util.MultiThrowable;
        $r1 = r0.<org.apache.tomcat.util.MultiThrowable: java.util.List throwables>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.tomcat.util.MultiThrowable r0;
        java.lang.StringBuilder $r1, r2;
        java.util.Iterator r3;
        java.lang.Throwable r4;
        java.lang.String $r5, $r13, $r16;
        int $i0;
        java.util.List $r10;
        java.lang.Object $r11;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.MultiThrowable;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r5 = specialinvoke r0.<java.lang.Throwable: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $i0 = virtualinvoke r0.<org.apache.tomcat.util.MultiThrowable: int size()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" wrapped Throwables: ");
        $r10 = r0.<org.apache.tomcat.util.MultiThrowable: java.util.List throwables>;
        r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.lang.Throwable) $r11;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r13 = virtualinvoke r4.<java.lang.Throwable: java.lang.String getMessage()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r16;
    }
}
