final class java.lang.reflect.Proxy$KeyX extends java.lang.Object
{
    private final int hash;
    private final java.lang.ref.WeakReference[] refs;

    void <init>(java.lang.Class[])
    {
        java.lang.reflect.Proxy$KeyX r0;
        java.lang.Class[] r1;
        int i0, $i1, $i2, $i3;
        java.lang.ref.WeakReference $r2;
        java.lang.ref.WeakReference[] $r3, $r4;
        java.lang.Class $r5;

        r0 := @this: java.lang.reflect.Proxy$KeyX;
        r1 := @parameter0: java.lang.Class[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $i1 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>(r1);
        r0.<java.lang.reflect.Proxy$KeyX: int hash> = $i1;
        $i2 = lengthof r1;
        $r3 = newarray (java.lang.ref.WeakReference)[$i2];
        r0.<java.lang.reflect.Proxy$KeyX: java.lang.ref.WeakReference[] refs> = $r3;
        i0 = 0;

     label0:
        $i3 = lengthof r1;
        if i0 >= $i3 goto label1;

        $r4 = r0.<java.lang.reflect.Proxy$KeyX: java.lang.ref.WeakReference[] refs>;
        $r2 = new java.lang.ref.WeakReference;
        $r5 = r1[i0];
        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r5);
        $r4[i0] = $r2;
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }

    public int hashCode()
    {
        java.lang.reflect.Proxy$KeyX r0;
        int $i0;

        r0 := @this: java.lang.reflect.Proxy$KeyX;
        $i0 = r0.<java.lang.reflect.Proxy$KeyX: int hash>;
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.reflect.Proxy$KeyX r0, $r4;
        java.lang.Object r1;
        java.lang.Class $r2;
        java.lang.ref.WeakReference[] $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: java.lang.reflect.Proxy$KeyX;
        r1 := @parameter0: java.lang.Object;
        if r0 == r1 goto label0;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        if $r2 != class "java/lang/reflect/Proxy$KeyX" goto label1;

        $r3 = r0.<java.lang.reflect.Proxy$KeyX: java.lang.ref.WeakReference[] refs>;
        $r4 = (java.lang.reflect.Proxy$KeyX) r1;
        $r5 = $r4.<java.lang.reflect.Proxy$KeyX: java.lang.ref.WeakReference[] refs>;
        $z0 = staticinvoke <java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.ref.WeakReference[],java.lang.ref.WeakReference[])>($r3, $r5);
        if $z0 == 0 goto label1;

     label0:
        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static boolean equals(java.lang.ref.WeakReference[], java.lang.ref.WeakReference[])
    {
        java.lang.ref.WeakReference[] r0, r1;
        int i0, $i1, $i2, $i3;
        java.lang.Class r2;
        java.lang.ref.WeakReference $r3, $r5;
        java.lang.Object $r4, $r6;

        r0 := @parameter0: java.lang.ref.WeakReference[];
        r1 := @parameter1: java.lang.ref.WeakReference[];
        $i1 = lengthof r0;
        $i2 = lengthof r1;
        if $i1 == $i2 goto label0;

        return 0;

     label0:
        i0 = 0;

     label1:
        $i3 = lengthof r0;
        if i0 >= $i3 goto label4;

        $r3 = r0[i0];
        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();
        r2 = (java.lang.Class) $r4;
        if r2 == null goto label2;

        $r5 = r1[i0];
        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();
        if r2 == $r6 goto label3;

     label2:
        return 0;

     label3:
        i0 = i0 + 1;
        goto label1;

     label4:
        return 1;
    }
}
