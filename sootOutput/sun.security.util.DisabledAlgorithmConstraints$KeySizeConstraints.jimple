class sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints extends java.lang.Object
{
    private static final java.util.regex.Pattern pattern;
    private java.util.Map constraintsMap;

    public void <init>(java.lang.String[])
    {
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints r0;
        java.lang.String[] r1, r3;
        java.util.HashMap $r2;
        int i0, i1, i2;
        java.lang.String r4, r6, $r14, $r15, r17;
        java.util.regex.Matcher r5;
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator r7;
        java.util.Map r8, $r12, $r18, $r19, $r20, $r23;
        java.util.Set r9;
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint r10, $r25;
        java.lang.Throwable r11, $r26;
        boolean $z0, $z1, $z2;
        java.util.regex.Pattern $r13;
        java.util.Locale $r16;
        java.util.HashSet $r21;
        java.lang.Object $r24;

        r0 := @this: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints;
        r1 := @parameter0: java.lang.String[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        $r12 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);
        r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints: java.util.Map constraintsMap> = $r12;
        r3 = r1;
        i0 = lengthof r3;
        i1 = 0;

     label0:
        if i1 >= i0 goto label9;

        r4 = r3[i1];
        if r4 == null goto label8;

        $z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();
        if $z0 == 0 goto label1;

        goto label8;

     label1:
        $r13 = <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints: java.util.regex.Pattern pattern>;
        r5 = virtualinvoke $r13.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);
        $z1 = virtualinvoke r5.<java.util.regex.Matcher: boolean matches()>();
        if $z1 == 0 goto label8;

        r6 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $r14 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(2);
        r7 = staticinvoke <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator of(java.lang.String)>($r14);
        $r15 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(3);
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);
        $r16 = <java.util.Locale: java.util.Locale ENGLISH>;
        r17 = virtualinvoke r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r16);
        $r18 = r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints: java.util.Map constraintsMap>;
        r8 = $r18;
        entermonitor $r18;

     label2:
        $r19 = r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints: java.util.Map constraintsMap>;
        $z2 = interfaceinvoke $r19.<java.util.Map: boolean containsKey(java.lang.Object)>(r17);
        if $z2 != 0 goto label3;

        $r20 = r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints: java.util.Map constraintsMap>;
        $r21 = new java.util.HashSet;
        specialinvoke $r21.<java.util.HashSet: void <init>()>();
        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r21);

     label3:
        $r23 = r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints: java.util.Map constraintsMap>;
        $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17);
        r9 = (java.util.Set) $r24;
        $r25 = new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint;
        specialinvoke $r25.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: void <init>(sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator,int)>(r7, i2);
        r10 = $r25;
        interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10);
        exitmonitor r8;

     label4:
        goto label8;

     label5:
        $r26 := @caughtexception;

     label6:
        r11 = $r26;
        exitmonitor r8;

     label7:
        throw r11;

     label8:
        i1 = i1 + 1;
        goto label0;

     label9:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean disables(java.security.Key)
    {
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints r0;
        java.security.Key r1;
        java.util.Locale $r2;
        java.lang.String r3, $r9;
        java.util.Map r4, $r10, $r11, $r12;
        java.util.Set r5;
        java.util.Iterator r6;
        sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint r7;
        java.lang.Throwable r8, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r13, $r14;

        r0 := @this: sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints;
        r1 := @parameter0: java.security.Key;
        $r9 = interfaceinvoke r1.<java.security.Key: java.lang.String getAlgorithm()>();
        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;
        r3 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);
        $r10 = r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints: java.util.Map constraintsMap>;
        r4 = $r10;
        entermonitor $r10;

     label0:
        $r11 = r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints: java.util.Map constraintsMap>;
        $z0 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);
        if $z0 == 0 goto label4;

        $r12 = r0.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints: java.util.Map constraintsMap>;
        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);
        r5 = (java.util.Set) $r13;
        r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label4;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint) $r14;
        $z2 = virtualinvoke r7.<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: boolean disables(java.security.Key)>(r1);
        if $z2 == 0 goto label3;

        $z3 = 1;
        exitmonitor r4;

     label2:
        return $z3;

     label3:
        goto label1;

     label4:
        exitmonitor r4;

     label5:
        goto label9;

     label6:
        $r15 := @caughtexception;

     label7:
        r8 = $r15;
        exitmonitor r4;

     label8:
        throw r8;

     label9:
        return 0;

        catch java.lang.Throwable from label0 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\S+)\\s+keySize\\s*(<=|<|==|!=|>|>=)\\s*(\\d+)");
        <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints: java.util.regex.Pattern pattern> = $r0;
        return;
    }
}
