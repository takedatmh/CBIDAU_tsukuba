public class sun.security.x509.CertificateVersion extends java.lang.Object implements sun.security.x509.CertAttrSet
{
    public static final int V1;
    public static final int V2;
    public static final int V3;
    public static final java.lang.String IDENT;
    public static final java.lang.String NAME;
    public static final java.lang.String VERSION;
    int version;

    private int getVersion()
    {
        sun.security.x509.CertificateVersion r0;
        int $i0;

        r0 := @this: sun.security.x509.CertificateVersion;
        $i0 = r0.<sun.security.x509.CertificateVersion: int version>;
        return $i0;
    }

    private void construct(sun.security.util.DerValue) throws java.io.IOException
    {
        sun.security.x509.CertificateVersion r0;
        sun.security.util.DerValue r1, r3;
        boolean $z0, $z1;
        sun.security.util.DerInputStream $r2, $r4;
        int $i0, $i1;
        java.io.IOException $r5;

        r0 := @this: sun.security.x509.CertificateVersion;
        r1 := @parameter0: sun.security.util.DerValue;
        $z0 = virtualinvoke r1.<sun.security.util.DerValue: boolean isConstructed()>();
        if $z0 == 0 goto label0;

        $z1 = virtualinvoke r1.<sun.security.util.DerValue: boolean isContextSpecific()>();
        if $z1 == 0 goto label0;

        $r2 = r1.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        r3 = virtualinvoke $r2.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $i0 = virtualinvoke r3.<sun.security.util.DerValue: int getInteger()>();
        r0.<sun.security.x509.CertificateVersion: int version> = $i0;
        $r4 = r3.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        $i1 = virtualinvoke $r4.<sun.security.util.DerInputStream: int available()>();
        if $i1 == 0 goto label0;

        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("X.509 version, bad format");
        throw $r5;

     label0:
        return;
    }

    public void <init>()
    {
        sun.security.x509.CertificateVersion r0;

        r0 := @this: sun.security.x509.CertificateVersion;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.CertificateVersion: int version> = 0;
        r0.<sun.security.x509.CertificateVersion: int version> = 0;
        return;
    }

    public void <init>(int) throws java.io.IOException
    {
        sun.security.x509.CertificateVersion r0;
        int i0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5;
        java.io.IOException $r2;
        java.lang.String $r6;

        r0 := @this: sun.security.x509.CertificateVersion;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.CertificateVersion: int version> = 0;
        if i0 == 0 goto label0;

        if i0 == 1 goto label0;

        if i0 != 2 goto label1;

     label0:
        r0.<sun.security.x509.CertificateVersion: int version> = i0;
        goto label2;

     label1:
        $r2 = new java.io.IOException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X.509 Certificate version ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported.\n");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);
        throw $r2;

     label2:
        return;
    }

    public void <init>(sun.security.util.DerInputStream) throws java.io.IOException
    {
        sun.security.x509.CertificateVersion r0;
        sun.security.util.DerInputStream r1;
        sun.security.util.DerValue r2;

        r0 := @this: sun.security.x509.CertificateVersion;
        r1 := @parameter0: sun.security.util.DerInputStream;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.CertificateVersion: int version> = 0;
        r0.<sun.security.x509.CertificateVersion: int version> = 0;
        r2 = virtualinvoke r1.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        specialinvoke r0.<sun.security.x509.CertificateVersion: void construct(sun.security.util.DerValue)>(r2);
        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        sun.security.x509.CertificateVersion r0;
        java.io.InputStream r1;
        sun.security.util.DerValue r2, $r3;

        r0 := @this: sun.security.x509.CertificateVersion;
        r1 := @parameter0: java.io.InputStream;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.CertificateVersion: int version> = 0;
        r0.<sun.security.x509.CertificateVersion: int version> = 0;
        $r3 = new sun.security.util.DerValue;
        specialinvoke $r3.<sun.security.util.DerValue: void <init>(java.io.InputStream)>(r1);
        r2 = $r3;
        specialinvoke r0.<sun.security.x509.CertificateVersion: void construct(sun.security.util.DerValue)>(r2);
        return;
    }

    public void <init>(sun.security.util.DerValue) throws java.io.IOException
    {
        sun.security.x509.CertificateVersion r0;
        sun.security.util.DerValue r1;

        r0 := @this: sun.security.x509.CertificateVersion;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.CertificateVersion: int version> = 0;
        r0.<sun.security.x509.CertificateVersion: int version> = 0;
        specialinvoke r0.<sun.security.x509.CertificateVersion: void construct(sun.security.util.DerValue)>(r1);
        return;
    }

    public java.lang.String toString()
    {
        sun.security.x509.CertificateVersion r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: sun.security.x509.CertificateVersion;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version: V");
        $i0 = r0.<sun.security.x509.CertificateVersion: int version>;
        $i1 = $i0 + 1;
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r4;
    }

    public void encode(java.io.OutputStream) throws java.io.IOException
    {
        sun.security.x509.CertificateVersion r0;
        java.io.OutputStream r1;
        sun.security.util.DerOutputStream r2, r3, $r4, $r5;
        int $i0, $i1;
        byte $b2;
        byte[] $r6;

        r0 := @this: sun.security.x509.CertificateVersion;
        r1 := @parameter0: java.io.OutputStream;
        $i0 = r0.<sun.security.x509.CertificateVersion: int version>;
        if $i0 != 0 goto label0;

        return;

     label0:
        $r4 = new sun.security.util.DerOutputStream;
        specialinvoke $r4.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r4;
        $i1 = r0.<sun.security.x509.CertificateVersion: int version>;
        virtualinvoke r2.<sun.security.util.DerOutputStream: void putInteger(int)>($i1);
        $r5 = new sun.security.util.DerOutputStream;
        specialinvoke $r5.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r5;
        $b2 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 0);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>($b2, r2);
        $r6 = virtualinvoke r3.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r6);
        return;
    }

    public void set(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        sun.security.x509.CertificateVersion r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0, $z1;
        java.io.IOException $r3, $r5;
        java.lang.Integer $r4;
        int $i0;

        r0 := @this: sun.security.x509.CertificateVersion;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $z0 = r2 instanceof java.lang.Integer;
        if $z0 != 0 goto label0;

        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Attribute must be of type Integer.");
        throw $r3;

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("number");
        if $z1 == 0 goto label1;

        $r4 = (java.lang.Integer) r2;
        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
        r0.<sun.security.x509.CertificateVersion: int version> = $i0;
        goto label2;

     label1:
        $r5 = new java.io.IOException;
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Attribute name not recognized by CertAttrSet: CertificateVersion.");
        throw $r5;

     label2:
        return;
    }

    public java.lang.Object get(java.lang.String) throws java.io.IOException
    {
        sun.security.x509.CertificateVersion r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0;
        java.io.IOException $r3;

        r0 := @this: sun.security.x509.CertificateVersion;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("number");
        if $z0 == 0 goto label0;

        $r2 = new java.lang.Integer;
        $i0 = specialinvoke r0.<sun.security.x509.CertificateVersion: int getVersion()>();
        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i0);
        return $r2;

     label0:
        $r3 = new java.io.IOException;
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Attribute name not recognized by CertAttrSet: CertificateVersion.");
        throw $r3;
    }

    public void delete(java.lang.String) throws java.io.IOException
    {
        sun.security.x509.CertificateVersion r0;
        java.lang.String r1;
        boolean $z0;
        java.io.IOException $r2;

        r0 := @this: sun.security.x509.CertificateVersion;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("number");
        if $z0 == 0 goto label0;

        r0.<sun.security.x509.CertificateVersion: int version> = 0;
        goto label1;

     label0:
        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Attribute name not recognized by CertAttrSet: CertificateVersion.");
        throw $r2;

     label1:
        return;
    }

    public java.util.Enumeration getElements()
    {
        sun.security.x509.CertificateVersion r0;
        sun.security.x509.AttributeNameEnumeration $r1, r2;
        java.util.Enumeration $r3;

        r0 := @this: sun.security.x509.CertificateVersion;
        $r1 = new sun.security.x509.AttributeNameEnumeration;
        specialinvoke $r1.<sun.security.x509.AttributeNameEnumeration: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: void addElement(java.lang.Object)>("number");
        $r3 = virtualinvoke r2.<sun.security.x509.AttributeNameEnumeration: java.util.Enumeration elements()>();
        return $r3;
    }

    public java.lang.String getName()
    {
        sun.security.x509.CertificateVersion r0;

        r0 := @this: sun.security.x509.CertificateVersion;
        return "version";
    }

    public int compare(int)
    {
        sun.security.x509.CertificateVersion r0;
        int i0, $i1, $i2;

        r0 := @this: sun.security.x509.CertificateVersion;
        i0 := @parameter0: int;
        $i1 = r0.<sun.security.x509.CertificateVersion: int version>;
        $i2 = $i1 - i0;
        return $i2;
    }
}
