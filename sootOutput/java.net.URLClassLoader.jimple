public class java.net.URLClassLoader extends java.security.SecureClassLoader implements java.io.Closeable
{
    private final sun.misc.URLClassPath ucp;
    private final java.security.AccessControlContext acc;
    private java.util.WeakHashMap closeables;

    public void <init>(java.net.URL[], java.lang.ClassLoader)
    {
        java.net.URLClassLoader r0;
        java.net.URL[] r1;
        java.lang.ClassLoader r2;
        java.lang.SecurityManager r3;
        java.util.WeakHashMap $r4;
        sun.misc.URLClassPath $r5;
        java.security.AccessControlContext $r6;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.net.URL[];
        r2 := @parameter1: java.lang.ClassLoader;
        specialinvoke r0.<java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)>(r2);
        $r4 = new java.util.WeakHashMap;
        specialinvoke $r4.<java.util.WeakHashMap: void <init>()>();
        r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables> = $r4;
        r3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r3 == null goto label0;

        virtualinvoke r3.<java.lang.SecurityManager: void checkCreateClassLoader()>();

     label0:
        $r5 = new sun.misc.URLClassPath;
        specialinvoke $r5.<sun.misc.URLClassPath: void <init>(java.net.URL[])>(r1);
        r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp> = $r5;
        $r6 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();
        r0.<java.net.URLClassLoader: java.security.AccessControlContext acc> = $r6;
        return;
    }

    void <init>(java.net.URL[], java.lang.ClassLoader, java.security.AccessControlContext)
    {
        java.net.URLClassLoader r0;
        java.net.URL[] r1;
        java.lang.ClassLoader r2;
        java.security.AccessControlContext r3;
        java.lang.SecurityManager r4;
        java.util.WeakHashMap $r5;
        sun.misc.URLClassPath $r6;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.net.URL[];
        r2 := @parameter1: java.lang.ClassLoader;
        r3 := @parameter2: java.security.AccessControlContext;
        specialinvoke r0.<java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)>(r2);
        $r5 = new java.util.WeakHashMap;
        specialinvoke $r5.<java.util.WeakHashMap: void <init>()>();
        r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables> = $r5;
        r4 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r4 == null goto label0;

        virtualinvoke r4.<java.lang.SecurityManager: void checkCreateClassLoader()>();

     label0:
        $r6 = new sun.misc.URLClassPath;
        specialinvoke $r6.<sun.misc.URLClassPath: void <init>(java.net.URL[])>(r1);
        r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp> = $r6;
        r0.<java.net.URLClassLoader: java.security.AccessControlContext acc> = r3;
        return;
    }

    public void <init>(java.net.URL[])
    {
        java.net.URLClassLoader r0;
        java.net.URL[] r1;
        java.util.WeakHashMap $r2;
        java.lang.SecurityManager r3;
        sun.misc.URLClassPath $r4;
        java.security.AccessControlContext $r5;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.net.URL[];
        specialinvoke r0.<java.security.SecureClassLoader: void <init>()>();
        $r2 = new java.util.WeakHashMap;
        specialinvoke $r2.<java.util.WeakHashMap: void <init>()>();
        r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables> = $r2;
        r3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r3 == null goto label0;

        virtualinvoke r3.<java.lang.SecurityManager: void checkCreateClassLoader()>();

     label0:
        $r4 = new sun.misc.URLClassPath;
        specialinvoke $r4.<sun.misc.URLClassPath: void <init>(java.net.URL[])>(r1);
        r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp> = $r4;
        $r5 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();
        r0.<java.net.URLClassLoader: java.security.AccessControlContext acc> = $r5;
        return;
    }

    void <init>(java.net.URL[], java.security.AccessControlContext)
    {
        java.net.URLClassLoader r0;
        java.net.URL[] r1;
        java.security.AccessControlContext r2;
        java.util.WeakHashMap $r3;
        java.lang.SecurityManager r4;
        sun.misc.URLClassPath $r5;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.net.URL[];
        r2 := @parameter1: java.security.AccessControlContext;
        specialinvoke r0.<java.security.SecureClassLoader: void <init>()>();
        $r3 = new java.util.WeakHashMap;
        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();
        r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables> = $r3;
        r4 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r4 == null goto label0;

        virtualinvoke r4.<java.lang.SecurityManager: void checkCreateClassLoader()>();

     label0:
        $r5 = new sun.misc.URLClassPath;
        specialinvoke $r5.<sun.misc.URLClassPath: void <init>(java.net.URL[])>(r1);
        r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp> = $r5;
        r0.<java.net.URLClassLoader: java.security.AccessControlContext acc> = r2;
        return;
    }

    public void <init>(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory)
    {
        java.net.URLClassLoader r0;
        java.net.URL[] r1;
        java.lang.ClassLoader r2;
        java.net.URLStreamHandlerFactory r3;
        java.lang.SecurityManager r4;
        java.util.WeakHashMap $r5;
        sun.misc.URLClassPath $r6;
        java.security.AccessControlContext $r7;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.net.URL[];
        r2 := @parameter1: java.lang.ClassLoader;
        r3 := @parameter2: java.net.URLStreamHandlerFactory;
        specialinvoke r0.<java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)>(r2);
        $r5 = new java.util.WeakHashMap;
        specialinvoke $r5.<java.util.WeakHashMap: void <init>()>();
        r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables> = $r5;
        r4 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r4 == null goto label0;

        virtualinvoke r4.<java.lang.SecurityManager: void checkCreateClassLoader()>();

     label0:
        $r6 = new sun.misc.URLClassPath;
        specialinvoke $r6.<sun.misc.URLClassPath: void <init>(java.net.URL[],java.net.URLStreamHandlerFactory)>(r1, r3);
        r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp> = $r6;
        $r7 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();
        r0.<java.net.URLClassLoader: java.security.AccessControlContext acc> = $r7;
        return;
    }

    public java.io.InputStream getResourceAsStream(java.lang.String)
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        java.net.URL r2;
        java.net.URLConnection r3;
        java.io.InputStream r4;
        java.net.JarURLConnection r5;
        java.util.jar.JarFile r6;
        java.util.WeakHashMap r7, $r10, $r11, $r12, $r15, r16, $r17;
        java.lang.Throwable r8, r9, $r14, $r19;
        null_type $n0;
        boolean $z0, $z1, $z2;
        java.io.IOException $r21, r22;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<java.net.URLClassLoader: java.net.URL getResource(java.lang.String)>(r1);

     label0:
        if r2 != null goto label2;

        $n0 = null;

     label1:
        return $n0;

     label2:
        r3 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>();
        r4 = virtualinvoke r3.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        $z0 = r3 instanceof java.net.JarURLConnection;
        if $z0 == 0 goto label10;

        r5 = (java.net.JarURLConnection) r3;
        r6 = virtualinvoke r5.<java.net.JarURLConnection: java.util.jar.JarFile getJarFile()>();
        $r10 = r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables>;
        r7 = $r10;
        entermonitor $r10;

     label3:
        $r11 = r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables>;
        $z1 = virtualinvoke $r11.<java.util.WeakHashMap: boolean containsKey(java.lang.Object)>(r6);
        if $z1 != 0 goto label4;

        $r12 = r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables>;
        virtualinvoke $r12.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, null);

     label4:
        exitmonitor r7;

     label5:
        goto label9;

     label6:
        $r14 := @caughtexception;

     label7:
        r8 = $r14;
        exitmonitor r7;

     label8:
        throw r8;

     label9:
        goto label16;

     label10:
        $z2 = r3 instanceof sun.net.www.protocol.file.FileURLConnection;
        if $z2 == 0 goto label16;

        $r15 = r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables>;
        r16 = $r15;
        entermonitor $r15;

     label11:
        $r17 = r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables>;
        virtualinvoke $r17.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, null);
        exitmonitor r16;

     label12:
        goto label16;

     label13:
        $r19 := @caughtexception;

     label14:
        r9 = $r19;
        exitmonitor r16;

     label15:
        throw r9;

     label16:
        return r4;

     label17:
        $r21 := @caughtexception;
        r22 = $r21;
        return null;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.io.IOException from label0 to label1 with label17;
        catch java.io.IOException from label2 to label16 with label17;
    }

    public void close() throws java.io.IOException
    {
        java.net.URLClassLoader r0;
        java.lang.SecurityManager r1;
        java.lang.RuntimePermission $r2;
        java.util.List r3;
        java.util.WeakHashMap r4, $r11, $r12, $r15;
        java.util.Set r5;
        java.util.Iterator r6, r19;
        java.io.Closeable r7;
        java.io.IOException r8, $r14, r18, r21;
        java.lang.Throwable r9, $r16;
        sun.misc.URLClassPath $r10;
        boolean $z0, $z2, $z3;
        java.lang.Object $r13, $r17, $r20;

        r0 := @this: java.net.URLClassLoader;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = new java.lang.RuntimePermission;
        specialinvoke $r2.<java.lang.RuntimePermission: void <init>(java.lang.String)>("closeClassLoader");
        virtualinvoke r1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);

     label0:
        $r10 = r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp>;
        r3 = virtualinvoke $r10.<sun.misc.URLClassPath: java.util.List closeLoaders()>();
        $r11 = r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables>;
        r4 = $r11;
        entermonitor $r11;

     label1:
        $r12 = r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables>;
        r5 = virtualinvoke $r12.<java.util.WeakHashMap: java.util.Set keySet()>();
        r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label7;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.io.Closeable) $r13;

     label3:
        interfaceinvoke r7.<java.io.Closeable: void close()>();

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;
        r8 = $r14;
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r8);

     label6:
        goto label2;

     label7:
        $r15 = r0.<java.net.URLClassLoader: java.util.WeakHashMap closeables>;
        virtualinvoke $r15.<java.util.WeakHashMap: void clear()>();
        exitmonitor r4;

     label8:
        goto label12;

     label9:
        $r16 := @caughtexception;

     label10:
        r9 = $r16;
        exitmonitor r4;

     label11:
        throw r9;

     label12:
        $z2 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();
        if $z2 == 0 goto label13;

        return;

     label13:
        $r17 = interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(0);
        r18 = (java.io.IOException) $r17;
        r19 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label15;

        $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();
        r21 = (java.io.IOException) $r20;
        virtualinvoke r18.<java.io.IOException: void addSuppressed(java.lang.Throwable)>(r21);
        goto label14;

     label15:
        throw r18;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    protected void addURL(java.net.URL)
    {
        java.net.URLClassLoader r0;
        java.net.URL r1;
        sun.misc.URLClassPath $r2;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.net.URL;
        $r2 = r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp>;
        virtualinvoke $r2.<sun.misc.URLClassPath: void addURL(java.net.URL)>(r1);
        return;
    }

    public java.net.URL[] getURLs()
    {
        java.net.URLClassLoader r0;
        sun.misc.URLClassPath $r1;
        java.net.URL[] $r2;

        r0 := @this: java.net.URLClassLoader;
        $r1 = r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp>;
        $r2 = virtualinvoke $r1.<sun.misc.URLClassPath: java.net.URL[] getURLs()>();
        return $r2;
    }

    protected java.lang.Class findClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        java.net.URLClassLoader$1 $r2;
        java.security.PrivilegedActionException r3, $r7;
        java.security.AccessControlContext $r4;
        java.lang.Object $r5;
        java.lang.Class $r6;
        java.lang.Exception $r8;
        java.lang.ClassNotFoundException $r9;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.lang.String;

     label0:
        $r2 = new java.net.URLClassLoader$1;
        specialinvoke $r2.<java.net.URLClassLoader$1: void <init>(java.net.URLClassLoader,java.lang.String)>(r0, r1);
        $r4 = r0.<java.net.URLClassLoader: java.security.AccessControlContext acc>;
        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>($r2, $r4);
        $r6 = (java.lang.Class) $r5;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;
        r3 = $r7;
        $r8 = virtualinvoke r3.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $r9 = (java.lang.ClassNotFoundException) $r8;
        throw $r9;

        catch java.security.PrivilegedActionException from label0 to label1 with label2;
    }

    private java.lang.Package getAndVerifyPackage(java.lang.String, java.util.jar.Manifest, java.net.URL)
    {
        java.net.URLClassLoader r0;
        java.lang.String r1, $r10, $r16;
        java.util.jar.Manifest r2;
        java.net.URL r3;
        java.lang.Package r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r12, $r13, $r14, $r15;
        boolean $z0, $z1, $z2;
        java.lang.SecurityException $r6, $r11;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.Manifest;
        r3 := @parameter2: java.net.URL;
        r4 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Package getPackage(java.lang.String)>(r1);
        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.Package: boolean isSealed()>();
        if $z0 == 0 goto label0;

        $z1 = virtualinvoke r4.<java.lang.Package: boolean isSealed(java.net.URL)>(r3);
        if $z1 != 0 goto label1;

        $r6 = new java.lang.SecurityException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sealing violation: package ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is sealed");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);
        throw $r6;

     label0:
        if r2 == null goto label1;

        $z2 = specialinvoke r0.<java.net.URLClassLoader: boolean isSealed(java.lang.String,java.util.jar.Manifest)>(r1, r2);
        if $z2 == 0 goto label1;

        $r11 = new java.lang.SecurityException;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sealing violation: can\'t seal package ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": already loaded");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);
        throw $r11;

     label1:
        return r4;
    }

    private java.lang.Class defineClass(java.lang.String, sun.misc.Resource) throws java.io.IOException
    {
        java.net.URLClassLoader r0;
        java.lang.String r1, r4, $r17;
        sun.misc.Resource r2;
        long l0;
        int i1, $i2;
        java.net.URL r3;
        java.util.jar.Manifest r5;
        java.lang.IllegalArgumentException r6, $r11;
        java.security.CodeSource r7, $r20, r21, $r26;
        java.lang.Package $r8, $r12;
        java.lang.AssertionError $r13;
        java.lang.StringBuilder $r14, $r15, $r16;
        java.nio.ByteBuffer r18;
        java.security.CodeSigner[] r19, r25;
        sun.misc.PerfCounter $r22, $r27;
        java.lang.Class $r23, $r28;
        byte[] r24;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: sun.misc.Resource;
        l0 = staticinvoke <java.lang.System: long nanoTime()>();
        i1 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);
        r3 = virtualinvoke r2.<sun.misc.Resource: java.net.URL getCodeSourceURL()>();
        if i1 == -1 goto label4;

        r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i1);
        r5 = virtualinvoke r2.<sun.misc.Resource: java.util.jar.Manifest getManifest()>();
        $r8 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Package getAndVerifyPackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>(r4, r5, r3);
        if $r8 != null goto label4;

     label0:
        if r5 == null goto label1;

        virtualinvoke r0.<java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>(r4, r5, r3);
        goto label2;

     label1:
        virtualinvoke r0.<java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>(r4, null, null, null, null, null, null, null);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;
        r6 = $r11;
        $r12 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Package getAndVerifyPackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>(r4, r5, r3);
        if $r12 != null goto label4;

        $r13 = new java.lang.AssertionError;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find package ");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r17);
        throw $r13;

     label4:
        r18 = virtualinvoke r2.<sun.misc.Resource: java.nio.ByteBuffer getByteBuffer()>();
        if r18 == null goto label5;

        r19 = virtualinvoke r2.<sun.misc.Resource: java.security.CodeSigner[] getCodeSigners()>();
        $r20 = new java.security.CodeSource;
        specialinvoke $r20.<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>(r3, r19);
        r21 = $r20;
        $r22 = staticinvoke <sun.misc.PerfCounter: sun.misc.PerfCounter getReadClassBytesTime()>();
        virtualinvoke $r22.<sun.misc.PerfCounter: void addElapsedTimeFrom(long)>(l0);
        $r23 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.CodeSource)>(r1, r18, r21);
        return $r23;

     label5:
        r24 = virtualinvoke r2.<sun.misc.Resource: byte[] getBytes()>();
        r25 = virtualinvoke r2.<sun.misc.Resource: java.security.CodeSigner[] getCodeSigners()>();
        $r26 = new java.security.CodeSource;
        specialinvoke $r26.<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>(r3, r25);
        r7 = $r26;
        $r27 = staticinvoke <sun.misc.PerfCounter: sun.misc.PerfCounter getReadClassBytesTime()>();
        virtualinvoke $r27.<sun.misc.PerfCounter: void addElapsedTimeFrom(long)>(l0);
        $i2 = lengthof r24;
        $r28 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>(r1, r24, 0, $i2, r7);
        return $r28;

        catch java.lang.IllegalArgumentException from label0 to label2 with label3;
    }

    protected java.lang.Package definePackage(java.lang.String, java.util.jar.Manifest, java.net.URL) throws java.lang.IllegalArgumentException
    {
        java.net.URLClassLoader r0;
        java.lang.String r1, r4, r5, r6, r7, r8, r9, r10, r11, $r14, $r30;
        java.util.jar.Manifest r2;
        java.net.URL r3, r12;
        java.util.jar.Attributes r13, r22;
        java.util.jar.Attributes$Name $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        boolean $z0;
        java.lang.Package $r31;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.Manifest;
        r3 := @parameter2: java.net.URL;
        $r14 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
        r4 = virtualinvoke $r14.<java.lang.String: java.lang.String concat(java.lang.String)>("/");
        r5 = null;
        r6 = null;
        r7 = null;
        r8 = null;
        r9 = null;
        r10 = null;
        r11 = null;
        r12 = null;
        r13 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>(r4);
        if r13 == null goto label0;

        $r15 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_TITLE>;
        r5 = virtualinvoke r13.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r15);
        $r16 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VERSION>;
        r6 = virtualinvoke r13.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r16);
        $r17 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VENDOR>;
        r7 = virtualinvoke r13.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r17);
        $r18 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_TITLE>;
        r8 = virtualinvoke r13.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r18);
        $r19 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VERSION>;
        r9 = virtualinvoke r13.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r19);
        $r20 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VENDOR>;
        r10 = virtualinvoke r13.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r20);
        $r21 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;
        r11 = virtualinvoke r13.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r21);

     label0:
        r22 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();
        if r22 == null goto label7;

        if r5 != null goto label1;

        $r23 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_TITLE>;
        r5 = virtualinvoke r22.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r23);

     label1:
        if r6 != null goto label2;

        $r24 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VERSION>;
        r6 = virtualinvoke r22.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r24);

     label2:
        if r7 != null goto label3;

        $r25 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VENDOR>;
        r7 = virtualinvoke r22.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r25);

     label3:
        if r8 != null goto label4;

        $r26 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_TITLE>;
        r8 = virtualinvoke r22.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r26);

     label4:
        if r9 != null goto label5;

        $r27 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VERSION>;
        r9 = virtualinvoke r22.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r27);

     label5:
        if r10 != null goto label6;

        $r28 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VENDOR>;
        r10 = virtualinvoke r22.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r28);

     label6:
        if r11 != null goto label7;

        $r29 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;
        r11 = virtualinvoke r22.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r29);

     label7:
        $r30 = "true";
        $z0 = virtualinvoke $r30.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r11);
        if $z0 == 0 goto label8;

        r12 = r3;

     label8:
        $r31 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>(r1, r5, r6, r7, r8, r9, r10, r12);
        return $r31;
    }

    private boolean isSealed(java.lang.String, java.util.jar.Manifest)
    {
        java.net.URLClassLoader r0;
        java.lang.String r1, r3, r5, $r6, $r11;
        java.util.jar.Manifest r2;
        java.util.jar.Attributes r4, $r8, r9;
        java.util.jar.Attributes$Name $r7, $r10;
        boolean $z0;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.jar.Manifest;
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);
        r3 = virtualinvoke $r6.<java.lang.String: java.lang.String concat(java.lang.String)>("/");
        r4 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>(r3);
        r5 = null;
        if r4 == null goto label0;

        $r7 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;
        r5 = virtualinvoke r4.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r7);

     label0:
        if r5 != null goto label1;

        $r8 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();
        r9 = $r8;
        if $r8 == null goto label1;

        $r10 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;
        r5 = virtualinvoke r9.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r10);

     label1:
        $r11 = "true";
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);
        return $z0;
    }

    public java.net.URL findResource(java.lang.String)
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        java.net.URLClassLoader$2 $r2;
        java.net.URL r3, $r7;
        java.security.AccessControlContext $r4;
        java.lang.Object $r5;
        sun.misc.URLClassPath $r6;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.net.URLClassLoader$2;
        specialinvoke $r2.<java.net.URLClassLoader$2: void <init>(java.net.URLClassLoader,java.lang.String)>(r0, r1);
        $r4 = r0.<java.net.URLClassLoader: java.security.AccessControlContext acc>;
        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r2, $r4);
        r3 = (java.net.URL) $r5;
        if r3 == null goto label0;

        $r6 = r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp>;
        $r7 = virtualinvoke $r6.<sun.misc.URLClassPath: java.net.URL checkURL(java.net.URL)>(r3);
        goto label1;

     label0:
        $r7 = null;

     label1:
        return $r7;
    }

    public java.util.Enumeration findResources(java.lang.String) throws java.io.IOException
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        java.util.Enumeration r2;
        sun.misc.URLClassPath $r3;
        java.net.URLClassLoader$3 $r4;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp>;
        r2 = virtualinvoke $r3.<sun.misc.URLClassPath: java.util.Enumeration findResources(java.lang.String,boolean)>(r1, 1);
        $r4 = new java.net.URLClassLoader$3;
        specialinvoke $r4.<java.net.URLClassLoader$3: void <init>(java.net.URLClassLoader,java.util.Enumeration)>(r0, r2);
        return $r4;
    }

    protected java.security.PermissionCollection getPermissions(java.security.CodeSource)
    {
        java.net.URLClassLoader r0;
        java.security.CodeSource r1;
        java.security.PermissionCollection r2;
        java.net.URL r3, r25;
        java.net.URLConnection r4;
        java.security.Permission r5, r29;
        java.io.IOException r6, $r8;
        java.lang.String r7, r9, $r10, r14, $r16, $r17, r18, r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r11, $r12, $r13, $r21, $r22, $r23;
        java.io.FilePermission $r15, $r24;
        char $c0;
        java.net.JarURLConnection $r26;
        int $i1;
        java.net.SocketPermission $r27;
        java.lang.SecurityManager r28;
        java.net.URLClassLoader$4 $r30;
        java.security.AccessControlContext $r31;

        r0 := @this: java.net.URLClassLoader;
        r1 := @parameter0: java.security.CodeSource;
        r2 = specialinvoke r0.<java.security.SecureClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>(r1);
        r3 = virtualinvoke r1.<java.security.CodeSource: java.net.URL getLocation()>();

     label0:
        r4 = virtualinvoke r3.<java.net.URL: java.net.URLConnection openConnection()>();
        r5 = virtualinvoke r4.<java.net.URLConnection: java.security.Permission getPermission()>();

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r6 = $r8;
        r5 = null;
        r4 = null;

     label3:
        $z0 = r5 instanceof java.io.FilePermission;
        if $z0 == 0 goto label5;

        r9 = virtualinvoke r5.<java.security.Permission: java.lang.String getName()>();
        $r10 = <java.io.File: java.lang.String separator>;
        $z1 = virtualinvoke r9.<java.lang.String: boolean endsWith(java.lang.String)>($r10);
        if $z1 == 0 goto label4;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = new java.io.FilePermission;
        specialinvoke $r15.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r14, "read");
        r5 = $r15;

     label4:
        goto label9;

     label5:
        if r5 != null goto label7;

        $r16 = virtualinvoke r3.<java.net.URL: java.lang.String getProtocol()>();
        $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("file");
        if $z2 == 0 goto label7;

        $r17 = virtualinvoke r3.<java.net.URL: java.lang.String getFile()>();
        $c0 = <java.io.File: char separatorChar>;
        r18 = virtualinvoke $r17.<java.lang.String: java.lang.String replace(char,char)>(47, $c0);
        r19 = staticinvoke <sun.net.www.ParseUtil: java.lang.String decode(java.lang.String)>(r18);
        $r20 = <java.io.File: java.lang.String separator>;
        $z3 = virtualinvoke r19.<java.lang.String: boolean endsWith(java.lang.String)>($r20);
        if $z3 == 0 goto label6;

        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        r19 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r24 = new java.io.FilePermission;
        specialinvoke $r24.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r19, "read");
        r5 = $r24;
        goto label9;

     label7:
        r25 = r3;
        $z4 = r4 instanceof java.net.JarURLConnection;
        if $z4 == 0 goto label8;

        $r26 = (java.net.JarURLConnection) r4;
        r25 = virtualinvoke $r26.<java.net.JarURLConnection: java.net.URL getJarFileURL()>();

     label8:
        r7 = virtualinvoke r25.<java.net.URL: java.lang.String getHost()>();
        if r7 == null goto label9;

        $i1 = virtualinvoke r7.<java.lang.String: int length()>();
        if $i1 <= 0 goto label9;

        $r27 = new java.net.SocketPermission;
        specialinvoke $r27.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(r7, "connect,accept");
        r5 = $r27;

     label9:
        if r5 == null goto label11;

        r28 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r28 == null goto label10;

        r29 = r5;
        $r30 = new java.net.URLClassLoader$4;
        specialinvoke $r30.<java.net.URLClassLoader$4: void <init>(java.net.URLClassLoader,java.lang.SecurityManager,java.security.Permission)>(r0, r28, r29);
        $r31 = r0.<java.net.URLClassLoader: java.security.AccessControlContext acc>;
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r30, $r31);

     label10:
        virtualinvoke r2.<java.security.PermissionCollection: void add(java.security.Permission)>(r5);

     label11:
        return r2;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public static java.net.URLClassLoader newInstance(java.net.URL[], java.lang.ClassLoader)
    {
        java.net.URL[] r0;
        java.lang.ClassLoader r1;
        java.security.AccessControlContext r2;
        java.net.URLClassLoader r3;
        java.net.URLClassLoader$5 $r4;
        java.lang.Object $r5;

        r0 := @parameter0: java.net.URL[];
        r1 := @parameter1: java.lang.ClassLoader;
        r2 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();
        $r4 = new java.net.URLClassLoader$5;
        specialinvoke $r4.<java.net.URLClassLoader$5: void <init>(java.net.URL[],java.lang.ClassLoader,java.security.AccessControlContext)>(r0, r1, r2);
        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r4);
        r3 = (java.net.URLClassLoader) $r5;
        return r3;
    }

    public static java.net.URLClassLoader newInstance(java.net.URL[])
    {
        java.net.URL[] r0;
        java.security.AccessControlContext r1;
        java.net.URLClassLoader r2;
        java.net.URLClassLoader$6 $r3;
        java.lang.Object $r4;

        r0 := @parameter0: java.net.URL[];
        r1 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();
        $r3 = new java.net.URLClassLoader$6;
        specialinvoke $r3.<java.net.URLClassLoader$6: void <init>(java.net.URL[],java.security.AccessControlContext)>(r0, r1);
        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);
        r2 = (java.net.URLClassLoader) $r4;
        return r2;
    }

    static sun.misc.URLClassPath access$000(java.net.URLClassLoader)
    {
        java.net.URLClassLoader r0;
        sun.misc.URLClassPath $r1;

        r0 := @parameter0: java.net.URLClassLoader;
        $r1 = r0.<java.net.URLClassLoader: sun.misc.URLClassPath ucp>;
        return $r1;
    }

    static java.lang.Class access$100(java.net.URLClassLoader, java.lang.String, sun.misc.Resource) throws java.io.IOException
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        sun.misc.Resource r2;
        java.lang.Class $r3;

        r0 := @parameter0: java.net.URLClassLoader;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: sun.misc.Resource;
        $r3 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,sun.misc.Resource)>(r1, r2);
        return $r3;
    }

    static java.security.AccessControlContext access$200(java.net.URLClassLoader)
    {
        java.net.URLClassLoader r0;
        java.security.AccessControlContext $r1;

        r0 := @parameter0: java.net.URLClassLoader;
        $r1 = r0.<java.net.URLClassLoader: java.security.AccessControlContext acc>;
        return $r1;
    }

    static void <clinit>()
    {
        java.net.URLClassLoader$7 $r0;

        $r0 = new java.net.URLClassLoader$7;
        specialinvoke $r0.<java.net.URLClassLoader$7: void <init>()>();
        staticinvoke <sun.misc.SharedSecrets: void setJavaNetAccess(sun.misc.JavaNetAccess)>($r0);
        staticinvoke <java.lang.ClassLoader: boolean registerAsParallelCapable()>();
        return;
    }
}
