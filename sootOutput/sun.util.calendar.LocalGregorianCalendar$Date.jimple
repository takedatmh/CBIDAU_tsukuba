public class sun.util.calendar.LocalGregorianCalendar$Date extends sun.util.calendar.BaseCalendar$Date
{
    private int gregorianYear;

    protected void <init>()
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        specialinvoke r0.<sun.util.calendar.BaseCalendar$Date: void <init>()>();
        r0.<sun.util.calendar.LocalGregorianCalendar$Date: int gregorianYear> = -2147483648;
        return;
    }

    protected void <init>(java.util.TimeZone)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        java.util.TimeZone r1;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        r1 := @parameter0: java.util.TimeZone;
        specialinvoke r0.<sun.util.calendar.BaseCalendar$Date: void <init>(java.util.TimeZone)>(r1);
        r0.<sun.util.calendar.LocalGregorianCalendar$Date: int gregorianYear> = -2147483648;
        return;
    }

    public sun.util.calendar.LocalGregorianCalendar$Date setEra(sun.util.calendar.Era)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        sun.util.calendar.Era r1, $r2;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        r1 := @parameter0: sun.util.calendar.Era;
        $r2 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        if $r2 == r1 goto label0;

        specialinvoke r0.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setEra(sun.util.calendar.Era)>(r1);
        r0.<sun.util.calendar.LocalGregorianCalendar$Date: int gregorianYear> = -2147483648;

     label0:
        return r0;
    }

    public sun.util.calendar.LocalGregorianCalendar$Date addYear(int)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        int i0, $i1, $i2;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        i0 := @parameter0: int;
        specialinvoke r0.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate addYear(int)>(i0);
        $i1 = r0.<sun.util.calendar.LocalGregorianCalendar$Date: int gregorianYear>;
        $i2 = $i1 + i0;
        r0.<sun.util.calendar.LocalGregorianCalendar$Date: int gregorianYear> = $i2;
        return r0;
    }

    public sun.util.calendar.LocalGregorianCalendar$Date setYear(int)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        int i0, $i1;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        i0 := @parameter0: int;
        $i1 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        if $i1 == i0 goto label0;

        specialinvoke r0.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setYear(int)>(i0);
        r0.<sun.util.calendar.LocalGregorianCalendar$Date: int gregorianYear> = -2147483648;

     label0:
        return r0;
    }

    public int getNormalizedYear()
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        int $i0;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        $i0 = r0.<sun.util.calendar.LocalGregorianCalendar$Date: int gregorianYear>;
        return $i0;
    }

    public void setNormalizedYear(int)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        int i0;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        i0 := @parameter0: int;
        r0.<sun.util.calendar.LocalGregorianCalendar$Date: int gregorianYear> = i0;
        return;
    }

    void setLocalEra(sun.util.calendar.Era)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        sun.util.calendar.Era r1;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        r1 := @parameter0: sun.util.calendar.Era;
        specialinvoke r0.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setEra(sun.util.calendar.Era)>(r1);
        return;
    }

    void setLocalYear(int)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        int i0;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        i0 := @parameter0: int;
        specialinvoke r0.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setYear(int)>(i0);
        return;
    }

    public java.lang.String toString()
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0;
        java.lang.String r1, r4, r5, $r14;
        java.lang.StringBuffer r2, $r6, $r8, $r10;
        sun.util.calendar.Era r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        r1 = specialinvoke r0.<sun.util.calendar.BaseCalendar$Date: java.lang.String toString()>();
        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(84);
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        r2 = $r6;
        r3 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();
        if r3 == null goto label0;

        r4 = virtualinvoke r3.<sun.util.calendar.Era: java.lang.String getAbbreviation()>();
        if r4 == null goto label0;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label0:
        $i1 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();
        $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);
        $i2 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();
        $r10 = staticinvoke <sun.util.calendar.CalendarUtils: java.lang.StringBuffer sprintf0d(java.lang.StringBuffer,int,int)>(r2, $i2, 2);
        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);
        $i3 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();
        staticinvoke <sun.util.calendar.CalendarUtils: java.lang.StringBuffer sprintf0d(java.lang.StringBuffer,int,int)>(r2, $i3, 2);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);
        $r14 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r14;
    }

    public volatile sun.util.calendar.CalendarDate addYear(int)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0, $r1;
        int i0;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date addYear(int)>(i0);
        return $r1;
    }

    public volatile sun.util.calendar.CalendarDate setYear(int)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0, $r1;
        int i0;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setYear(int)>(i0);
        return $r1;
    }

    public volatile sun.util.calendar.CalendarDate setEra(sun.util.calendar.Era)
    {
        sun.util.calendar.LocalGregorianCalendar$Date r0, $r2;
        sun.util.calendar.Era r1;

        r0 := @this: sun.util.calendar.LocalGregorianCalendar$Date;
        r1 := @parameter0: sun.util.calendar.Era;
        $r2 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setEra(sun.util.calendar.Era)>(r1);
        return $r2;
    }
}
