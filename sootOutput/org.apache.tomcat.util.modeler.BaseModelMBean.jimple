public class org.apache.tomcat.util.modeler.BaseModelMBean extends java.lang.Object implements javax.management.DynamicMBean, javax.management.MBeanRegistration, javax.management.modelmbean.ModelMBeanNotificationBroadcaster
{
    private static final org.apache.juli.logging.Log log;
    protected javax.management.ObjectName oname;
    protected org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster;
    protected org.apache.tomcat.util.modeler.BaseNotificationBroadcaster generalBroadcaster;
    protected org.apache.tomcat.util.modeler.ManagedBean managedBean;
    protected java.lang.Object resource;
    static final java.lang.Object[] NO_ARGS_PARAM;
    static final java.lang.Class[] NO_ARGS_PARAM_SIG;
    protected java.lang.String resourceType;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        java.lang.Object[] $r1;
        java.lang.Class[] $r2;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/tomcat/util/modeler/BaseModelMBean");
        <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log> = $r0;
        $r1 = newarray (java.lang.Object)[0];
        <org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object[] NO_ARGS_PARAM> = $r1;
        $r2 = newarray (java.lang.Class)[0];
        <org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Class[] NO_ARGS_PARAM_SIG> = $r2;
        return;
    }

    protected void <init>() throws javax.management.MBeanException, javax.management.RuntimeOperationsException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: javax.management.ObjectName oname> = null;
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster> = null;
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster generalBroadcaster> = null;
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.ManagedBean managedBean> = null;
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource> = null;
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.String resourceType> = null;
        return;
    }

    public java.lang.Object getAttribute(java.lang.String) throws javax.management.AttributeNotFoundException, javax.management.MBeanException, javax.management.ReflectionException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.String r1, $r25, $r30, $r34, $r40;
        java.lang.IllegalArgumentException $r2;
        java.lang.reflect.Method r3;
        null_type n0;
        java.lang.Class r4, $r14;
        java.lang.Throwable r5;
        javax.management.RuntimeOperationsException $r6, $r21;
        java.lang.Object $r7, $r8, $r9, $r11, $r13, r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.management.DynamicMBean $r10;
        org.apache.tomcat.util.modeler.ManagedBean $r12;
        java.lang.Object[] $r15, $r18;
        java.lang.reflect.InvocationTargetException $r19, r20;
        java.lang.RuntimeException $r22;
        java.lang.StringBuilder $r23, $r24, $r28, $r29, $r32, $r33, $r38, $r39;
        javax.management.RuntimeErrorException $r26;
        java.lang.Error $r27;
        javax.management.MBeanException $r31, $r37;
        java.lang.Exception $r35, r36;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r6 = new javax.management.RuntimeOperationsException;
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute name is null");
        specialinvoke $r6.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r2, "Attribute name is null");
        throw $r6;

     label0:
        $r7 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $z0 = $r7 instanceof javax.management.DynamicMBean;
        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $z1 = $r8 instanceof org.apache.tomcat.util.modeler.BaseModelMBean;
        if $z1 != 0 goto label1;

        $r9 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r10 = (javax.management.DynamicMBean) $r9;
        $r11 = interfaceinvoke $r10.<javax.management.DynamicMBean: java.lang.Object getAttribute(java.lang.String)>(r1);
        return $r11;

     label1:
        $r12 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.ManagedBean managedBean>;
        $r13 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        r3 = virtualinvoke $r12.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.reflect.Method getGetter(java.lang.String,org.apache.tomcat.util.modeler.BaseModelMBean,java.lang.Object)>(r1, r0, $r13);
        n0 = null;

     label2:
        r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $z2 = virtualinvoke r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r14);
        if $z2 == 0 goto label3;

        $r15 = <org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object[] NO_ARGS_PARAM>;
        r16 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r15);
        goto label10;

     label3:
        $r17 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r18 = <org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object[] NO_ARGS_PARAM>;
        r16 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r17, $r18);

     label4:
        goto label10;

     label5:
        $r19 := @caughtexception;
        r20 = $r19;
        r5 = virtualinvoke r20.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();
        if r5 != null goto label6;

        r5 = r20;

     label6:
        $z3 = r5 instanceof java.lang.RuntimeException;
        if $z3 == 0 goto label7;

        $r21 = new javax.management.RuntimeOperationsException;
        $r22 = (java.lang.RuntimeException) r5;
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r21.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r22, $r25);
        throw $r21;

     label7:
        $z4 = r5 instanceof java.lang.Error;
        if $z4 == 0 goto label8;

        $r26 = new javax.management.RuntimeErrorException;
        $r27 = (java.lang.Error) r5;
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error invoking method ");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r26.<javax.management.RuntimeErrorException: void <init>(java.lang.Error,java.lang.String)>($r27, $r30);
        throw $r26;

     label8:
        $r31 = new javax.management.MBeanException;
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r31.<javax.management.MBeanException: void <init>(java.lang.Exception,java.lang.String)>(r20, $r34);
        throw $r31;

     label9:
        $r35 := @caughtexception;
        r36 = $r35;
        $r37 = new javax.management.MBeanException;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r37.<javax.management.MBeanException: void <init>(java.lang.Exception,java.lang.String)>(r36, $r40);
        throw $r37;

     label10:
        return r16;

        catch java.lang.reflect.InvocationTargetException from label2 to label4 with label5;
        catch java.lang.Exception from label2 to label4 with label9;
    }

    public javax.management.AttributeList getAttributes(java.lang.String[])
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.String[] r1;
        java.lang.IllegalArgumentException $r2;
        javax.management.AttributeList r3, $r6;
        int i0, $i1;
        java.lang.Exception r4, $r11;
        javax.management.RuntimeOperationsException $r5;
        javax.management.Attribute $r7;
        java.lang.String $r8, $r9;
        java.lang.Object $r10;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: java.lang.String[];
        if r1 != null goto label0;

        $r5 = new javax.management.RuntimeOperationsException;
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute names list is null");
        specialinvoke $r5.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r2, "Attribute names list is null");
        throw $r5;

     label0:
        $r6 = new javax.management.AttributeList;
        specialinvoke $r6.<javax.management.AttributeList: void <init>()>();
        r3 = $r6;
        i0 = 0;
        goto label5;

     label1:
        $r7 = new javax.management.Attribute;
        $r8 = r1[i0];
        $r9 = r1[i0];
        $r10 = virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object getAttribute(java.lang.String)>($r9);
        specialinvoke $r7.<javax.management.Attribute: void <init>(java.lang.String,java.lang.Object)>($r8, $r10);
        virtualinvoke r3.<javax.management.AttributeList: void add(javax.management.Attribute)>($r7);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;
        r4 = $r11;

     label4:
        i0 = i0 + 1;

     label5:
        $i1 = lengthof r1;
        if i0 < $i1 goto label1;

        return r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setManagedBean(org.apache.tomcat.util.modeler.ManagedBean)
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        org.apache.tomcat.util.modeler.ManagedBean r1;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: org.apache.tomcat.util.modeler.ManagedBean;
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.ManagedBean managedBean> = r1;
        return;
    }

    public javax.management.MBeanInfo getMBeanInfo()
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        org.apache.tomcat.util.modeler.ManagedBean $r1;
        javax.management.MBeanInfo $r2;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.ManagedBean managedBean>;
        $r2 = virtualinvoke $r1.<org.apache.tomcat.util.modeler.ManagedBean: javax.management.MBeanInfo getMBeanInfo()>();
        return $r2;
    }

    public java.lang.Object invoke(java.lang.String, java.lang.Object[], java.lang.String[]) throws javax.management.MBeanException, javax.management.ReflectionException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.String r1, $r18, $r29, $r34, $r39, $r44, $r50, $r54;
        java.lang.Object[] r2;
        java.lang.String[] r3;
        java.lang.reflect.Method r4;
        null_type n0;
        java.lang.reflect.InvocationTargetException r5, $r25;
        java.lang.Throwable r6;
        java.lang.Object $r7, $r8, $r9, $r11, $r20, r23, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.management.DynamicMBean $r10;
        javax.management.RuntimeOperationsException $r12, $r30;
        java.lang.IllegalArgumentException $r13;
        org.apache.juli.logging.Log $r14, $r15, $r26, $r47;
        java.lang.StringBuilder $r16, $r17, $r27, $r28, $r32, $r33, $r37, $r38, $r42, $r43, $r48, $r49, $r52, $r53;
        org.apache.tomcat.util.modeler.ManagedBean $r19;
        java.lang.Class $r21, $r22;
        java.lang.RuntimeException $r31;
        javax.management.RuntimeErrorException $r35;
        java.lang.Error $r36;
        javax.management.MBeanException $r40, $r51;
        java.lang.Exception $r41, $r45, r46;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object[];
        r3 := @parameter2: java.lang.String[];
        $r7 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $z0 = $r7 instanceof javax.management.DynamicMBean;
        if $z0 == 0 goto label0;

        $r8 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $z1 = $r8 instanceof org.apache.tomcat.util.modeler.BaseModelMBean;
        if $z1 != 0 goto label0;

        $r9 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r10 = (javax.management.DynamicMBean) $r9;
        $r11 = interfaceinvoke $r10.<javax.management.DynamicMBean: java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[])>(r1, r2, r3);
        return $r11;

     label0:
        if r1 != null goto label1;

        $r12 = new javax.management.RuntimeOperationsException;
        $r13 = new java.lang.IllegalArgumentException;
        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Method name is null");
        specialinvoke $r12.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r13, "Method name is null");
        throw $r12;

     label1:
        $r14 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $z2 = interfaceinvoke $r14.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z2 == 0 goto label2;

        $r15 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invoke ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r15.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r18);

     label2:
        $r19 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.ManagedBean managedBean>;
        $r20 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        r4 = virtualinvoke $r19.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.reflect.Method getInvoke(java.lang.String,java.lang.Object[],java.lang.String[],org.apache.tomcat.util.modeler.BaseModelMBean,java.lang.Object)>(r1, r2, r3, r0, $r20);
        n0 = null;

     label3:
        $r21 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
        $r22 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $z3 = virtualinvoke $r21.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r22);
        if $z3 == 0 goto label4;

        r23 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r2);
        goto label11;

     label4:
        $r24 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        r23 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r24, r2);

     label5:
        goto label11;

     label6:
        $r25 := @caughtexception;
        r5 = $r25;
        r6 = virtualinvoke r5.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();
        $r26 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r26.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r29, r6);
        if r6 != null goto label7;

        r6 = r5;

     label7:
        $z4 = r6 instanceof java.lang.RuntimeException;
        if $z4 == 0 goto label8;

        $r30 = new javax.management.RuntimeOperationsException;
        $r31 = (java.lang.RuntimeException) r6;
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r30.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r31, $r34);
        throw $r30;

     label8:
        $z5 = r6 instanceof java.lang.Error;
        if $z5 == 0 goto label9;

        $r35 = new javax.management.RuntimeErrorException;
        $r36 = (java.lang.Error) r6;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error invoking method ");
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r35.<javax.management.RuntimeErrorException: void <init>(java.lang.Error,java.lang.String)>($r36, $r39);
        throw $r35;

     label9:
        $r40 = new javax.management.MBeanException;
        $r41 = (java.lang.Exception) r6;
        $r42 = new java.lang.StringBuilder;
        specialinvoke $r42.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r40.<javax.management.MBeanException: void <init>(java.lang.Exception,java.lang.String)>($r41, $r44);
        throw $r40;

     label10:
        $r45 := @caughtexception;
        r46 = $r45;
        $r47 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r48 = new java.lang.StringBuilder;
        specialinvoke $r48.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r47.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r50, r46);
        $r51 = new javax.management.MBeanException;
        $r52 = new java.lang.StringBuilder;
        specialinvoke $r52.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r51.<javax.management.MBeanException: void <init>(java.lang.Exception,java.lang.String)>(r46, $r54);
        throw $r51;

     label11:
        return r23;

        catch java.lang.reflect.InvocationTargetException from label3 to label5 with label6;
        catch java.lang.Exception from label3 to label5 with label10;
    }

    static java.lang.Class getAttributeClass(java.lang.String) throws javax.management.ReflectionException
    {
        java.lang.String r0, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r36;
        java.lang.Class $r1, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r28, $r31;
        java.lang.ClassLoader r2;
        java.lang.StringBuilder $r3, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Thread $r27;
        java.lang.ClassNotFoundException $r29, r30, $r32, r33;
        javax.management.ReflectionException $r34;

        r0 := @parameter0: java.lang.String;
        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z0 == 0 goto label0;

        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;
        return $r5;

     label0:
        $r6 = <java.lang.Byte: java.lang.Class TYPE>;
        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r7);
        if $z1 == 0 goto label1;

        $r8 = <java.lang.Byte: java.lang.Class TYPE>;
        return $r8;

     label1:
        $r9 = <java.lang.Character: java.lang.Class TYPE>;
        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if $z2 == 0 goto label2;

        $r11 = <java.lang.Character: java.lang.Class TYPE>;
        return $r11;

     label2:
        $r12 = <java.lang.Double: java.lang.Class TYPE>;
        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r13);
        if $z3 == 0 goto label3;

        $r14 = <java.lang.Double: java.lang.Class TYPE>;
        return $r14;

     label3:
        $r15 = <java.lang.Float: java.lang.Class TYPE>;
        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r16);
        if $z4 == 0 goto label4;

        $r17 = <java.lang.Float: java.lang.Class TYPE>;
        return $r17;

     label4:
        $r18 = <java.lang.Integer: java.lang.Class TYPE>;
        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r19);
        if $z5 == 0 goto label5;

        $r20 = <java.lang.Integer: java.lang.Class TYPE>;
        return $r20;

     label5:
        $r21 = <java.lang.Long: java.lang.Class TYPE>;
        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r22);
        if $z6 == 0 goto label6;

        $r23 = <java.lang.Long: java.lang.Class TYPE>;
        return $r23;

     label6:
        $r24 = <java.lang.Short: java.lang.Class TYPE>;
        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r25);
        if $z7 == 0 goto label7;

        $r26 = <java.lang.Short: java.lang.Class TYPE>;
        return $r26;

     label7:
        $r27 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r2 = virtualinvoke $r27.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        if r2 == null goto label10;

        $r28 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label8:
        return $r28;

     label9:
        $r29 := @caughtexception;
        r30 = $r29;

     label10:
        $r31 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label11:
        return $r31;

     label12:
        $r32 := @caughtexception;
        r33 = $r32;
        $r34 = new javax.management.ReflectionException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot find Class for ");
        $r35 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r34.<javax.management.ReflectionException: void <init>(java.lang.Exception,java.lang.String)>(r33, $r36);
        throw $r34;

        catch java.lang.ClassNotFoundException from label7 to label8 with label9;
        catch java.lang.ClassNotFoundException from label10 to label11 with label12;
    }

    public void setAttribute(javax.management.Attribute) throws javax.management.AttributeNotFoundException, javax.management.MBeanException, javax.management.ReflectionException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.Attribute r1, $r59;
        org.apache.juli.logging.Log $r2, $r9, $r51, $r62;
        java.lang.StringBuilder $r3, $r10, $r11, $r12, $r37, $r38, $r42, $r43, $r46, $r47, $r52, $r53, $r56, $r57, $r63, $r64;
        javax.management.InvalidAttributeValueException r4, $r18;
        java.lang.Object r5, $r14, $r15, $r16, $r26, $r31;
        null_type n0;
        java.lang.reflect.Method r6;
        java.lang.reflect.InvocationTargetException r7, $r34;
        java.lang.Throwable r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r13, r22, $r39, $r44, $r48, $r54, $r58, $r65;
        javax.management.DynamicMBean $r17;
        javax.management.MBeanException $r19, $r45, $r55;
        javax.management.RuntimeOperationsException $r20, $r23, $r35;
        java.lang.IllegalArgumentException $r21, $r24;
        org.apache.tomcat.util.modeler.ManagedBean $r25;
        java.lang.Class $r27, $r28;
        java.lang.Object[] $r29, $r32;
        java.lang.RuntimeException $r36;
        javax.management.RuntimeErrorException $r40;
        java.lang.Error $r41;
        java.lang.Exception $r49, r50, $r60, r61;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.Attribute;
        $r2 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r9 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Setting attribute ");
        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r13);

     label0:
        $r14 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $z1 = $r14 instanceof javax.management.DynamicMBean;
        if $z1 == 0 goto label5;

        $r15 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $z2 = $r15 instanceof org.apache.tomcat.util.modeler.BaseModelMBean;
        if $z2 != 0 goto label5;

     label1:
        $r16 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r17 = (javax.management.DynamicMBean) $r16;
        interfaceinvoke $r17.<javax.management.DynamicMBean: void setAttribute(javax.management.Attribute)>(r1);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;
        r4 = $r18;
        $r19 = new javax.management.MBeanException;
        specialinvoke $r19.<javax.management.MBeanException: void <init>(java.lang.Exception)>(r4);
        throw $r19;

     label4:
        return;

     label5:
        if r1 != null goto label6;

        $r20 = new javax.management.RuntimeOperationsException;
        $r21 = new java.lang.IllegalArgumentException;
        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute is null");
        specialinvoke $r20.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r21, "Attribute is null");
        throw $r20;

     label6:
        r22 = virtualinvoke r1.<javax.management.Attribute: java.lang.String getName()>();
        r5 = virtualinvoke r1.<javax.management.Attribute: java.lang.Object getValue()>();
        if r22 != null goto label7;

        $r23 = new javax.management.RuntimeOperationsException;
        $r24 = new java.lang.IllegalArgumentException;
        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute name is null");
        specialinvoke $r23.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r24, "Attribute name is null");
        throw $r23;

     label7:
        n0 = null;
        $r25 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.ManagedBean managedBean>;
        $r26 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        r6 = virtualinvoke $r25.<org.apache.tomcat.util.modeler.ManagedBean: java.lang.reflect.Method getSetter(java.lang.String,org.apache.tomcat.util.modeler.BaseModelMBean,java.lang.Object)>(r22, r0, $r26);

     label8:
        $r27 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
        $r28 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $z3 = virtualinvoke $r27.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r28);
        if $z3 == 0 goto label9;

        $r29 = newarray (java.lang.Object)[1];
        $r29[0] = r5;
        virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r29);
        goto label16;

     label9:
        $r31 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r32 = newarray (java.lang.Object)[1];
        $r32[0] = r5;
        virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r31, $r32);

     label10:
        goto label16;

     label11:
        $r34 := @caughtexception;
        r7 = $r34;
        r8 = virtualinvoke r7.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();
        if r8 != null goto label12;

        r8 = r7;

     label12:
        $z4 = r8 instanceof java.lang.RuntimeException;
        if $z4 == 0 goto label13;

        $r35 = new javax.management.RuntimeOperationsException;
        $r36 = (java.lang.RuntimeException) r8;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r35.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r36, $r39);
        throw $r35;

     label13:
        $z5 = r8 instanceof java.lang.Error;
        if $z5 == 0 goto label14;

        $r40 = new javax.management.RuntimeErrorException;
        $r41 = (java.lang.Error) r8;
        $r42 = new java.lang.StringBuilder;
        specialinvoke $r42.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error invoking method ");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r40.<javax.management.RuntimeErrorException: void <init>(java.lang.Error,java.lang.String)>($r41, $r44);
        throw $r40;

     label14:
        $r45 = new javax.management.MBeanException;
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r45.<javax.management.MBeanException: void <init>(java.lang.Exception,java.lang.String)>(r7, $r48);
        throw $r45;

     label15:
        $r49 := @caughtexception;
        r50 = $r49;
        $r51 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r52 = new java.lang.StringBuilder;
        specialinvoke $r52.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r51.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r54, r50);
        $r55 = new javax.management.MBeanException;
        $r56 = new java.lang.StringBuilder;
        specialinvoke $r56.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception invoking method ");
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r55.<javax.management.MBeanException: void <init>(java.lang.Exception,java.lang.String)>(r50, $r58);
        throw $r55;

     label16:
        $r59 = new javax.management.Attribute;
        specialinvoke $r59.<javax.management.Attribute: void <init>(java.lang.String,java.lang.Object)>(r22, n0);
        virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: void sendAttributeChangeNotification(javax.management.Attribute,javax.management.Attribute)>($r59, r1);

     label17:
        goto label19;

     label18:
        $r60 := @caughtexception;
        r61 = $r60;
        $r62 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r63 = new java.lang.StringBuilder;
        specialinvoke $r63.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error sending notification ");
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r62.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r65, r61);

     label19:
        return;

        catch javax.management.InvalidAttributeValueException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label8 to label10 with label11;
        catch java.lang.Exception from label8 to label10 with label15;
        catch java.lang.Exception from label16 to label17 with label18;
    }

    public java.lang.String toString()
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.Object $r1, $r7;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r3, $r6, $r8;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        if $r1 != null goto label0;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("BaseModelMbean[");
        $r3 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.String resourceType>;
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;

     label0:
        $r7 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();
        return $r8;
    }

    public javax.management.AttributeList setAttributes(javax.management.AttributeList)
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.AttributeList r1, $r2, r3, $r11;
        java.lang.String[] r4;
        int i0, $i1, $i2;
        java.util.Iterator r5;
        javax.management.Attribute r6;
        java.lang.Exception r7, $r10;
        java.lang.Object $r8;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.AttributeList;
        $r2 = new javax.management.AttributeList;
        specialinvoke $r2.<javax.management.AttributeList: void <init>()>();
        r3 = $r2;
        if r1 != null goto label0;

        return r3;

     label0:
        $i1 = virtualinvoke r1.<javax.management.AttributeList: int size()>();
        r4 = newarray (java.lang.String)[$i1];
        i0 = 0;
        r5 = virtualinvoke r1.<javax.management.AttributeList: java.util.Iterator iterator()>();
        goto label5;

     label1:
        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (javax.management.Attribute) $r8;
        $i2 = i0;
        i0 = i0 + 1;
        $r9 = virtualinvoke r6.<javax.management.Attribute: java.lang.String getName()>();
        r4[$i2] = $r9;

     label2:
        virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: void setAttribute(javax.management.Attribute)>(r6);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;
        r7 = $r10;

     label5:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label1;

        $r11 = virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: javax.management.AttributeList getAttributes(java.lang.String[])>(r4);
        return $r11;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.lang.Object getManagedResource() throws javax.management.InstanceNotFoundException, javax.management.modelmbean.InvalidTargetObjectTypeException, javax.management.MBeanException, javax.management.RuntimeOperationsException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2, $r4;
        javax.management.RuntimeOperationsException $r3;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        $r2 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        if $r2 != null goto label0;

        $r3 = new javax.management.RuntimeOperationsException;
        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Managed resource is null");
        specialinvoke $r3.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r1, "Managed resource is null");
        throw $r3;

     label0:
        $r4 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        return $r4;
    }

    public void setManagedResource(java.lang.Object, java.lang.String) throws javax.management.InstanceNotFoundException, javax.management.MBeanException, javax.management.RuntimeOperationsException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.Object r1;
        java.lang.String r2, $r6;
        java.lang.IllegalArgumentException $r3;
        javax.management.RuntimeOperationsException $r4;
        java.lang.Class $r5;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.String;
        if r1 != null goto label0;

        $r4 = new javax.management.RuntimeOperationsException;
        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Managed resource is null");
        specialinvoke $r4.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r3, "Managed resource is null");
        throw $r4;

     label0:
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource> = r1;
        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.String resourceType> = $r6;
        return;
    }

    public void addAttributeChangeNotificationListener(javax.management.NotificationListener, java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.NotificationListener r1;
        java.lang.String r2, $r12;
        java.lang.Object r3;
        org.apache.tomcat.util.modeler.BaseAttributeFilter r4, $r13;
        java.lang.IllegalArgumentException $r5;
        org.apache.tomcat.util.modeler.BaseNotificationBroadcaster $r6, $r7, $r14;
        org.apache.juli.logging.Log $r8, $r9;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.NotificationListener;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Object;
        if r1 != null goto label0;

        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener is null");
        throw $r5;

     label0:
        $r6 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster>;
        if $r6 != null goto label1;

        $r7 = new org.apache.tomcat.util.modeler.BaseNotificationBroadcaster;
        specialinvoke $r7.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void <init>()>();
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster> = $r7;

     label1:
        $r8 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r8.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label2;

        $r9 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("addAttributeNotificationListener ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r12);

     label2:
        $r13 = new org.apache.tomcat.util.modeler.BaseAttributeFilter;
        specialinvoke $r13.<org.apache.tomcat.util.modeler.BaseAttributeFilter: void <init>(java.lang.String)>(r2);
        r4 = $r13;
        $r14 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster>;
        virtualinvoke $r14.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)>(r1, r4, r3);
        return;
    }

    public void removeAttributeChangeNotificationListener(javax.management.NotificationListener, java.lang.String) throws javax.management.ListenerNotFoundException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.NotificationListener r1;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.tomcat.util.modeler.BaseNotificationBroadcaster $r4, $r5;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.NotificationListener;
        r2 := @parameter1: java.lang.String;
        if r1 != null goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener is null");
        throw $r3;

     label0:
        $r4 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster>;
        if $r4 == null goto label1;

        $r5 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster>;
        virtualinvoke $r5.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void removeNotificationListener(javax.management.NotificationListener)>(r1);

     label1:
        return;
    }

    public void removeAttributeChangeNotificationListener(javax.management.NotificationListener, java.lang.String, java.lang.Object) throws javax.management.ListenerNotFoundException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.NotificationListener r1;
        java.lang.String r2;
        java.lang.Object r3;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.NotificationListener;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Object;
        virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: void removeAttributeChangeNotificationListener(javax.management.NotificationListener,java.lang.String)>(r1, r2);
        return;
    }

    public void sendAttributeChangeNotification(javax.management.AttributeChangeNotification) throws javax.management.MBeanException, javax.management.RuntimeOperationsException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.AttributeChangeNotification r1;
        java.lang.IllegalArgumentException $r2;
        javax.management.RuntimeOperationsException $r3;
        org.apache.tomcat.util.modeler.BaseNotificationBroadcaster $r4, $r10;
        org.apache.juli.logging.Log $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8;
        java.lang.String $r9;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.AttributeChangeNotification;
        if r1 != null goto label0;

        $r3 = new javax.management.RuntimeOperationsException;
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Notification is null");
        specialinvoke $r3.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r2, "Notification is null");
        throw $r3;

     label0:
        $r4 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster>;
        if $r4 != null goto label1;

        return;

     label1:
        $r5 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label2;

        $r6 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("AttributeChangeNotification ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r9);

     label2:
        $r10 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster>;
        virtualinvoke $r10.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void sendNotification(javax.management.Notification)>(r1);
        return;
    }

    public void sendAttributeChangeNotification(javax.management.Attribute, javax.management.Attribute) throws javax.management.MBeanException, javax.management.RuntimeOperationsException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.Attribute r1, r2;
        null_type n0;
        long $l0;
        javax.management.AttributeChangeNotification r3, $r11;
        java.lang.Object $r4, $r5, $r8, $r9, $r13, $r14;
        java.lang.Class $r6, $r10;
        java.lang.String r7, $r12;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.Attribute;
        r2 := @parameter1: javax.management.Attribute;
        n0 = null;
        $r4 = virtualinvoke r2.<javax.management.Attribute: java.lang.Object getValue()>();
        if $r4 == null goto label0;

        $r5 = virtualinvoke r2.<javax.management.Attribute: java.lang.Object getValue()>();
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();
        r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();
        goto label2;

     label0:
        $r8 = virtualinvoke r1.<javax.management.Attribute: java.lang.Object getValue()>();
        if $r8 == null goto label1;

        $r9 = virtualinvoke r1.<javax.management.Attribute: java.lang.Object getValue()>();
        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();
        r7 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();
        goto label2;

     label1:
        return;

     label2:
        $r11 = new javax.management.AttributeChangeNotification;
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r12 = virtualinvoke r1.<javax.management.Attribute: java.lang.String getName()>();
        $r13 = virtualinvoke r1.<javax.management.Attribute: java.lang.Object getValue()>();
        $r14 = virtualinvoke r2.<javax.management.Attribute: java.lang.Object getValue()>();
        specialinvoke $r11.<javax.management.AttributeChangeNotification: void <init>(java.lang.Object,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>(r0, 1L, $l0, "Attribute value has changed", $r12, r7, $r13, $r14);
        r3 = $r11;
        virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: void sendAttributeChangeNotification(javax.management.AttributeChangeNotification)>(r3);
        return;
    }

    public void sendNotification(javax.management.Notification) throws javax.management.MBeanException, javax.management.RuntimeOperationsException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.Notification r1;
        java.lang.IllegalArgumentException $r2;
        javax.management.RuntimeOperationsException $r3;
        org.apache.tomcat.util.modeler.BaseNotificationBroadcaster $r4, $r5;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.Notification;
        if r1 != null goto label0;

        $r3 = new javax.management.RuntimeOperationsException;
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Notification is null");
        specialinvoke $r3.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r2, "Notification is null");
        throw $r3;

     label0:
        $r4 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster generalBroadcaster>;
        if $r4 != null goto label1;

        return;

     label1:
        $r5 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster generalBroadcaster>;
        virtualinvoke $r5.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void sendNotification(javax.management.Notification)>(r1);
        return;
    }

    public void sendNotification(java.lang.String) throws javax.management.MBeanException, javax.management.RuntimeOperationsException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        javax.management.Notification r3, $r5;
        javax.management.RuntimeOperationsException $r4;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r4 = new javax.management.RuntimeOperationsException;
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Message is null");
        specialinvoke $r4.<javax.management.RuntimeOperationsException: void <init>(java.lang.RuntimeException,java.lang.String)>($r2, "Message is null");
        throw $r4;

     label0:
        $r5 = new javax.management.Notification;
        specialinvoke $r5.<javax.management.Notification: void <init>(java.lang.String,java.lang.Object,long,java.lang.String)>("jmx.modelmbean.generic", r0, 1L, r1);
        r3 = $r5;
        virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: void sendNotification(javax.management.Notification)>(r3);
        return;
    }

    public void addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.NotificationListener r1;
        javax.management.NotificationFilter r2;
        java.lang.Object r3;
        java.lang.IllegalArgumentException $r4;
        org.apache.juli.logging.Log $r5, $r6, $r15, $r16;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r8, $r17, $r18;
        java.lang.String $r9, $r19;
        org.apache.tomcat.util.modeler.BaseNotificationBroadcaster $r10, $r11, $r12, $r13, $r14, $r20;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.NotificationListener;
        r2 := @parameter1: javax.management.NotificationFilter;
        r3 := @parameter2: java.lang.Object;
        if r1 != null goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener is null");
        throw $r4;

     label0:
        $r5 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label1;

        $r6 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("addNotificationListener ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r9);

     label1:
        $r10 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster generalBroadcaster>;
        if $r10 != null goto label2;

        $r11 = new org.apache.tomcat.util.modeler.BaseNotificationBroadcaster;
        specialinvoke $r11.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void <init>()>();
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster generalBroadcaster> = $r11;

     label2:
        $r12 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster generalBroadcaster>;
        virtualinvoke $r12.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)>(r1, r2, r3);
        $r13 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster>;
        if $r13 != null goto label3;

        $r14 = new org.apache.tomcat.util.modeler.BaseNotificationBroadcaster;
        specialinvoke $r14.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void <init>()>();
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster> = $r14;

     label3:
        $r15 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r15.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label4;

        $r16 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("addAttributeNotificationListener ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r16.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r19);

     label4:
        $r20 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster>;
        virtualinvoke $r20.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)>(r1, r2, r3);
        return;
    }

    public javax.management.MBeanNotificationInfo[] getNotificationInfo()
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.MBeanNotificationInfo[] r1, r2;
        javax.management.MBeanNotificationInfo $r3, $r6;
        javax.management.MBeanInfo $r4;
        int $i0, $i1, $i2;
        java.lang.String[] $r5, $r7;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        $r4 = virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: javax.management.MBeanInfo getMBeanInfo()>();
        r1 = virtualinvoke $r4.<javax.management.MBeanInfo: javax.management.MBeanNotificationInfo[] getNotifications()>();
        $i0 = lengthof r1;
        $i1 = $i0 + 2;
        r2 = newarray (javax.management.MBeanNotificationInfo)[$i1];
        $r3 = new javax.management.MBeanNotificationInfo;
        $r5 = newarray (java.lang.String)[1];
        $r5[0] = "jmx.modelmbean.generic";
        specialinvoke $r3.<javax.management.MBeanNotificationInfo: void <init>(java.lang.String[],java.lang.String,java.lang.String)>($r5, "GENERIC", "Text message notification from the managed resource");
        r2[0] = $r3;
        $r6 = new javax.management.MBeanNotificationInfo;
        $r7 = newarray (java.lang.String)[1];
        $r7[0] = "jmx.attribute.change";
        specialinvoke $r6.<javax.management.MBeanNotificationInfo: void <init>(java.lang.String[],java.lang.String,java.lang.String)>($r7, "ATTRIBUTE_CHANGE", "Observed MBean attribute value has changed");
        r2[1] = $r6;
        $i2 = lengthof r1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 2, $i2);
        return r2;
    }

    public void removeNotificationListener(javax.management.NotificationListener) throws javax.management.ListenerNotFoundException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.NotificationListener r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.tomcat.util.modeler.BaseNotificationBroadcaster $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.NotificationListener;
        if r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener is null");
        throw $r2;

     label0:
        $r3 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster generalBroadcaster>;
        if $r3 == null goto label1;

        $r4 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster generalBroadcaster>;
        virtualinvoke $r4.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void removeNotificationListener(javax.management.NotificationListener)>(r1);

     label1:
        $r5 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster>;
        if $r5 == null goto label2;

        $r6 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.tomcat.util.modeler.BaseNotificationBroadcaster attributeBroadcaster>;
        virtualinvoke $r6.<org.apache.tomcat.util.modeler.BaseNotificationBroadcaster: void removeNotificationListener(javax.management.NotificationListener)>(r1);

     label2:
        return;
    }

    public void removeNotificationListener(javax.management.NotificationListener, java.lang.Object) throws javax.management.ListenerNotFoundException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.NotificationListener r1;
        java.lang.Object r2;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.NotificationListener;
        r2 := @parameter1: java.lang.Object;
        virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: void removeNotificationListener(javax.management.NotificationListener)>(r1);
        return;
    }

    public void removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) throws javax.management.ListenerNotFoundException
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.NotificationListener r1;
        javax.management.NotificationFilter r2;
        java.lang.Object r3;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.NotificationListener;
        r2 := @parameter1: javax.management.NotificationFilter;
        r3 := @parameter2: java.lang.Object;
        virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: void removeNotificationListener(javax.management.NotificationListener)>(r1);
        return;
    }

    public java.lang.String getModelerType()
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.String resourceType>;
        return $r1;
    }

    public java.lang.String getClassName()
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.String getModelerType()>();
        return $r1;
    }

    public javax.management.ObjectName getJmxName()
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.ObjectName $r1;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: javax.management.ObjectName oname>;
        return $r1;
    }

    public java.lang.String getObjectName()
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.ObjectName $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: javax.management.ObjectName oname>;
        if $r1 == null goto label0;

        $r2 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: javax.management.ObjectName oname>;
        $r3 = virtualinvoke $r2.<javax.management.ObjectName: java.lang.String toString()>();
        return $r3;

     label0:
        return null;
    }

    public javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName) throws java.lang.Exception
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        javax.management.MBeanServer r1;
        javax.management.ObjectName r2, $r14, $r15;
        org.apache.juli.logging.Log $r3, $r5;
        java.lang.StringBuilder $r4, $r7, $r8, $r9;
        boolean $z0, $z1;
        java.lang.Object $r6, $r11, $r12;
        java.lang.String $r10;
        javax.management.MBeanRegistration $r13;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: javax.management.MBeanServer;
        r2 := @parameter1: javax.management.ObjectName;
        $r3 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r5 = <org.apache.tomcat.util.modeler.BaseModelMBean: org.apache.juli.logging.Log log>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("preRegister ");
        $r6 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r10);

     label0:
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: javax.management.ObjectName oname> = r2;
        $r11 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $z1 = $r11 instanceof javax.management.MBeanRegistration;
        if $z1 == 0 goto label1;

        $r12 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r13 = (javax.management.MBeanRegistration) $r12;
        $r14 = interfaceinvoke $r13.<javax.management.MBeanRegistration: javax.management.ObjectName preRegister(javax.management.MBeanServer,javax.management.ObjectName)>(r1, r2);
        r0.<org.apache.tomcat.util.modeler.BaseModelMBean: javax.management.ObjectName oname> = $r14;

     label1:
        $r15 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: javax.management.ObjectName oname>;
        return $r15;
    }

    public void postRegister(java.lang.Boolean)
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.Boolean r1;
        java.lang.Object $r2, $r3;
        boolean $z0;
        javax.management.MBeanRegistration $r4;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        r1 := @parameter0: java.lang.Boolean;
        $r2 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $z0 = $r2 instanceof javax.management.MBeanRegistration;
        if $z0 == 0 goto label0;

        $r3 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r4 = (javax.management.MBeanRegistration) $r3;
        interfaceinvoke $r4.<javax.management.MBeanRegistration: void postRegister(java.lang.Boolean)>(r1);

     label0:
        return;
    }

    public void preDeregister() throws java.lang.Exception
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.Object $r1, $r2;
        boolean $z0;
        javax.management.MBeanRegistration $r3;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $z0 = $r1 instanceof javax.management.MBeanRegistration;
        if $z0 == 0 goto label0;

        $r2 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r3 = (javax.management.MBeanRegistration) $r2;
        interfaceinvoke $r3.<javax.management.MBeanRegistration: void preDeregister()>();

     label0:
        return;
    }

    public void postDeregister()
    {
        org.apache.tomcat.util.modeler.BaseModelMBean r0;
        java.lang.Object $r1, $r2;
        boolean $z0;
        javax.management.MBeanRegistration $r3;

        r0 := @this: org.apache.tomcat.util.modeler.BaseModelMBean;
        $r1 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $z0 = $r1 instanceof javax.management.MBeanRegistration;
        if $z0 == 0 goto label0;

        $r2 = r0.<org.apache.tomcat.util.modeler.BaseModelMBean: java.lang.Object resource>;
        $r3 = (javax.management.MBeanRegistration) $r2;
        interfaceinvoke $r3.<javax.management.MBeanRegistration: void postDeregister()>();

     label0:
        return;
    }
}
