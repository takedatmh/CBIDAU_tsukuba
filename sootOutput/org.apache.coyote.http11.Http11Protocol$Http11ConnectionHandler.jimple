public class org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler extends org.apache.coyote.AbstractProtocol$AbstractConnectionHandler implements org.apache.tomcat.util.net.JIoEndpoint$Handler
{
    protected org.apache.coyote.http11.Http11Protocol proto;

    void <init>(org.apache.coyote.http11.Http11Protocol)
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.coyote.http11.Http11Protocol r1;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        r1 := @parameter0: org.apache.coyote.http11.Http11Protocol;
        specialinvoke r0.<org.apache.coyote.AbstractProtocol$AbstractConnectionHandler: void <init>()>();
        r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto> = r1;
        return;
    }

    protected org.apache.coyote.AbstractProtocol getProtocol()
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.coyote.http11.Http11Protocol $r1;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        $r1 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        return $r1;
    }

    protected org.apache.juli.logging.Log getLog()
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.juli.logging.Log $r1;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        $r1 = staticinvoke <org.apache.coyote.http11.Http11Protocol: org.apache.juli.logging.Log access$0()>();
        return $r1;
    }

    public org.apache.tomcat.util.net.SSLImplementation getSslImplementation()
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.coyote.http11.Http11Protocol $r1;
        org.apache.tomcat.util.net.SSLImplementation $r2;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        $r1 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r2 = $r1.<org.apache.coyote.http11.Http11Protocol: org.apache.tomcat.util.net.SSLImplementation sslImplementation>;
        return $r2;
    }

    public void release(org.apache.tomcat.util.net.SocketWrapper, org.apache.coyote.Processor, boolean, boolean)
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        org.apache.coyote.Processor r2;
        boolean z0, z1;
        org.apache.coyote.AbstractProtocol$RecycledProcessors $r3;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        r2 := @parameter1: org.apache.coyote.Processor;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        interfaceinvoke r2.<org.apache.coyote.Processor: void recycle(boolean)>(z0);
        $r3 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.AbstractProtocol$RecycledProcessors recycledProcessors>;
        virtualinvoke $r3.<org.apache.coyote.AbstractProtocol$RecycledProcessors: boolean offer(org.apache.coyote.Processor)>(r2);
        return;
    }

    protected void initSsl(org.apache.tomcat.util.net.SocketWrapper, org.apache.coyote.Processor)
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        org.apache.coyote.Processor r2;
        org.apache.coyote.http11.Http11Protocol $r3, $r4, $r6;
        boolean $z0;
        org.apache.tomcat.util.net.SSLImplementation $r5, $r7;
        java.lang.Object $r8;
        java.net.Socket $r9;
        org.apache.tomcat.util.net.SSLSupport $r10;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        r2 := @parameter1: org.apache.coyote.Processor;
        $r3 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $z0 = virtualinvoke $r3.<org.apache.coyote.http11.Http11Protocol: boolean isSSLEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r5 = $r4.<org.apache.coyote.http11.Http11Protocol: org.apache.tomcat.util.net.SSLImplementation sslImplementation>;
        if $r5 == null goto label0;

        $r6 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r7 = $r6.<org.apache.coyote.http11.Http11Protocol: org.apache.tomcat.util.net.SSLImplementation sslImplementation>;
        $r8 = virtualinvoke r1.<org.apache.tomcat.util.net.SocketWrapper: java.lang.Object getSocket()>();
        $r9 = (java.net.Socket) $r8;
        $r10 = virtualinvoke $r7.<org.apache.tomcat.util.net.SSLImplementation: org.apache.tomcat.util.net.SSLSupport getSSLSupport(java.net.Socket)>($r9);
        interfaceinvoke r2.<org.apache.coyote.Processor: void setSslSupport(org.apache.tomcat.util.net.SSLSupport)>($r10);
        goto label1;

     label0:
        interfaceinvoke r2.<org.apache.coyote.Processor: void setSslSupport(org.apache.tomcat.util.net.SSLSupport)>(null);

     label1:
        return;
    }

    protected void longPoll(org.apache.tomcat.util.net.SocketWrapper, org.apache.coyote.Processor)
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        org.apache.coyote.Processor r2;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        r2 := @parameter1: org.apache.coyote.Processor;
        return;
    }

    protected org.apache.coyote.http11.Http11Processor createProcessor()
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.coyote.http11.Http11Processor $r1, r2;
        org.apache.coyote.http11.Http11Protocol $r3, $r4, $r5, $r8, $r9, $r11, $r12, $r13, $r15, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r28, $r30, $r32, $r33, $r34, $r36, $r37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1;
        org.apache.tomcat.util.net.AbstractEndpoint $r6;
        org.apache.tomcat.util.net.JIoEndpoint $r7;
        java.util.Set $r10;
        java.lang.String $r14, $r16, $r25, $r27, $r29, $r31, $r35;
        org.apache.coyote.Adapter $r18;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        $r1 = new org.apache.coyote.http11.Http11Processor;
        $r3 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i0 = virtualinvoke $r3.<org.apache.coyote.http11.Http11Protocol: int getMaxHttpHeaderSize()>();
        $r4 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $z0 = virtualinvoke $r4.<org.apache.coyote.http11.Http11Protocol: boolean getRejectIllegalHeaderName()>();
        $r5 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r6 = staticinvoke <org.apache.coyote.http11.Http11Protocol: org.apache.tomcat.util.net.AbstractEndpoint access$1(org.apache.coyote.http11.Http11Protocol)>($r5);
        $r7 = (org.apache.tomcat.util.net.JIoEndpoint) $r6;
        $r8 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i1 = virtualinvoke $r8.<org.apache.coyote.http11.Http11Protocol: int getMaxTrailerSize()>();
        $r9 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r10 = virtualinvoke $r9.<org.apache.coyote.http11.Http11Protocol: java.util.Set getAllowedTrailerHeadersAsSet()>();
        $r11 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i2 = virtualinvoke $r11.<org.apache.coyote.http11.Http11Protocol: int getMaxExtensionSize()>();
        $r12 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i3 = virtualinvoke $r12.<org.apache.coyote.http11.Http11Protocol: int getMaxSwallowSize()>();
        $r13 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r14 = virtualinvoke $r13.<org.apache.coyote.http11.Http11Protocol: java.lang.String getRelaxedPathChars()>();
        $r15 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r16 = virtualinvoke $r15.<org.apache.coyote.http11.Http11Protocol: java.lang.String getRelaxedQueryChars()>();
        specialinvoke $r1.<org.apache.coyote.http11.Http11Processor: void <init>(int,boolean,org.apache.tomcat.util.net.JIoEndpoint,int,java.util.Set,int,int,java.lang.String,java.lang.String)>($i0, $z0, $r7, $i1, $r10, $i2, $i3, $r14, $r16);
        r2 = $r1;
        $r17 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r18 = staticinvoke <org.apache.coyote.http11.Http11Protocol: org.apache.coyote.Adapter access$2(org.apache.coyote.http11.Http11Protocol)>($r17);
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setAdapter(org.apache.coyote.Adapter)>($r18);
        $r19 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i4 = virtualinvoke $r19.<org.apache.coyote.http11.Http11Protocol: int getMaxKeepAliveRequests()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setMaxKeepAliveRequests(int)>($i4);
        $r20 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i5 = virtualinvoke $r20.<org.apache.coyote.http11.Http11Protocol: int getKeepAliveTimeout()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setKeepAliveTimeout(int)>($i5);
        $r21 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i6 = virtualinvoke $r21.<org.apache.coyote.http11.Http11Protocol: int getConnectionUploadTimeout()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setConnectionUploadTimeout(int)>($i6);
        $r22 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $z1 = virtualinvoke $r22.<org.apache.coyote.http11.Http11Protocol: boolean getDisableUploadTimeout()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setDisableUploadTimeout(boolean)>($z1);
        $r23 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i7 = virtualinvoke $r23.<org.apache.coyote.http11.Http11Protocol: int getCompressionMinSize()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setCompressionMinSize(int)>($i7);
        $r24 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r25 = virtualinvoke $r24.<org.apache.coyote.http11.Http11Protocol: java.lang.String getCompression()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setCompression(java.lang.String)>($r25);
        $r26 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r27 = virtualinvoke $r26.<org.apache.coyote.http11.Http11Protocol: java.lang.String getNoCompressionUserAgents()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setNoCompressionUserAgents(java.lang.String)>($r27);
        $r28 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r29 = virtualinvoke $r28.<org.apache.coyote.http11.Http11Protocol: java.lang.String getCompressableMimeTypes()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setCompressableMimeTypes(java.lang.String)>($r29);
        $r30 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r31 = virtualinvoke $r30.<org.apache.coyote.http11.Http11Protocol: java.lang.String getRestrictedUserAgents()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setRestrictedUserAgents(java.lang.String)>($r31);
        $r32 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i8 = virtualinvoke $r32.<org.apache.coyote.http11.Http11Protocol: int getSocketBuffer()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setSocketBuffer(int)>($i8);
        $r33 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i9 = virtualinvoke $r33.<org.apache.coyote.http11.Http11Protocol: int getMaxSavePostSize()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setMaxSavePostSize(int)>($i9);
        $r34 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $r35 = virtualinvoke $r34.<org.apache.coyote.http11.Http11Protocol: java.lang.String getServer()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setServer(java.lang.String)>($r35);
        $r36 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i10 = virtualinvoke $r36.<org.apache.coyote.http11.Http11Protocol: int getDisableKeepAlivePercentage()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setDisableKeepAlivePercentage(int)>($i10);
        $r37 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i11 = virtualinvoke $r37.<org.apache.coyote.http11.Http11Protocol: int getMaxCookieCount()>();
        virtualinvoke r2.<org.apache.coyote.http11.Http11Processor: void setMaxCookieCount(int)>($i11);
        virtualinvoke r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: void register(org.apache.coyote.AbstractProcessor)>(r2);
        return r2;
    }

    protected org.apache.coyote.Processor createUpgradeProcessor(org.apache.tomcat.util.net.SocketWrapper, org.apache.coyote.http11.upgrade.UpgradeInbound) throws java.io.IOException
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        org.apache.coyote.http11.upgrade.UpgradeInbound r2;
        org.apache.coyote.http11.upgrade.UpgradeBioProcessor $r3;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        r2 := @parameter1: org.apache.coyote.http11.upgrade.UpgradeInbound;
        $r3 = new org.apache.coyote.http11.upgrade.UpgradeBioProcessor;
        specialinvoke $r3.<org.apache.coyote.http11.upgrade.UpgradeBioProcessor: void <init>(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.http11.upgrade.UpgradeInbound)>(r1, r2);
        return $r3;
    }

    protected org.apache.coyote.Processor createUpgradeProcessor(org.apache.tomcat.util.net.SocketWrapper, org.apache.coyote.http11.upgrade.servlet31.HttpUpgradeHandler) throws java.io.IOException
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        org.apache.coyote.http11.upgrade.servlet31.HttpUpgradeHandler r2;
        org.apache.coyote.http11.upgrade.BioProcessor $r3;
        org.apache.coyote.http11.Http11Protocol $r4;
        int $i0;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        r2 := @parameter1: org.apache.coyote.http11.upgrade.servlet31.HttpUpgradeHandler;
        $r3 = new org.apache.coyote.http11.upgrade.BioProcessor;
        $r4 = r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Protocol proto>;
        $i0 = virtualinvoke $r4.<org.apache.coyote.http11.Http11Protocol: int getUpgradeAsyncWriteBufferSize()>();
        specialinvoke $r3.<org.apache.coyote.http11.upgrade.BioProcessor: void <init>(org.apache.tomcat.util.net.SocketWrapper,org.apache.coyote.http11.upgrade.servlet31.HttpUpgradeHandler,int)>(r1, r2, $i0);
        return $r3;
    }

    protected volatile org.apache.coyote.Processor createProcessor()
    {
        org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler r0;
        org.apache.coyote.http11.Http11Processor $r1;

        r0 := @this: org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler;
        $r1 = virtualinvoke r0.<org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler: org.apache.coyote.http11.Http11Processor createProcessor()>();
        return $r1;
    }
}
