final class java.lang.UNIXProcess$1 extends java.lang.Object implements java.security.PrivilegedAction
{

    void <init>()
    {
        java.lang.UNIXProcess$1 r0;

        r0 := @this: java.lang.UNIXProcess$1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.UNIXProcess$LaunchMechanism run()
    {
        java.lang.UNIXProcess$1 r0;
        java.lang.String r1, r2, $r8, $r11, $r18;
        java.lang.IllegalArgumentException r3, $r13;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r15, $r16, $r17;
        byte[] $r9;
        java.lang.UNIXProcess$LaunchMechanism $r12;
        java.lang.Error $r14;

        r0 := @this: java.lang.UNIXProcess$1;
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/lib/jspawnhelper");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = staticinvoke <java.lang.UNIXProcess: byte[] access$100(java.lang.String)>($r8);
        staticinvoke <java.lang.UNIXProcess: byte[] access$002(byte[])>($r9);
        r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("jdk.lang.Process.launchMechanism", "posix_spawn");

     label0:
        $r11 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>();
        $r12 = staticinvoke <java.lang.UNIXProcess$LaunchMechanism: java.lang.UNIXProcess$LaunchMechanism valueOf(java.lang.String)>($r11);

     label1:
        return $r12;

     label2:
        $r13 := @caughtexception;
        r3 = $r13;
        $r14 = new java.lang.Error;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a supported ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("process launch mechanism on this platform.");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<java.lang.Error: void <init>(java.lang.String)>($r18);
        throw $r14;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
    }

    public volatile java.lang.Object run()
    {
        java.lang.UNIXProcess$1 r0;
        java.lang.UNIXProcess$LaunchMechanism $r1;

        r0 := @this: java.lang.UNIXProcess$1;
        $r1 = virtualinvoke r0.<java.lang.UNIXProcess$1: java.lang.UNIXProcess$LaunchMechanism run()>();
        return $r1;
    }
}
