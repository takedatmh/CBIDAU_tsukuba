final class java.lang.reflect.Proxy$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.reflect.Constructor val$cons;
    final java.lang.reflect.InvocationHandler val$ih;

    void <init>(java.lang.reflect.Constructor, java.lang.reflect.InvocationHandler)
    {
        java.lang.reflect.Proxy$1 r0;
        java.lang.reflect.Constructor r1;
        java.lang.reflect.InvocationHandler r2;

        r0 := @this: java.lang.reflect.Proxy$1;
        r1 := @parameter0: java.lang.reflect.Constructor;
        r2 := @parameter1: java.lang.reflect.InvocationHandler;
        r0.<java.lang.reflect.Proxy$1: java.lang.reflect.Constructor val$cons> = r1;
        r0.<java.lang.reflect.Proxy$1: java.lang.reflect.InvocationHandler val$ih> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Object run()
    {
        java.lang.reflect.Proxy$1 r0;
        java.lang.reflect.Constructor $r1;
        java.lang.reflect.InvocationHandler $r2;
        java.lang.Object $r3;

        r0 := @this: java.lang.reflect.Proxy$1;
        $r1 = r0.<java.lang.reflect.Proxy$1: java.lang.reflect.Constructor val$cons>;
        $r2 = r0.<java.lang.reflect.Proxy$1: java.lang.reflect.InvocationHandler val$ih>;
        $r3 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object access$400(java.lang.reflect.Constructor,java.lang.reflect.InvocationHandler)>($r1, $r2);
        return $r3;
    }
}
