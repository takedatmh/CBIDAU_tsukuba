class sun.security.util.NullCache extends sun.security.util.Cache
{
    static final sun.security.util.Cache INSTANCE;

    private void <init>()
    {
        sun.security.util.NullCache r0;

        r0 := @this: sun.security.util.NullCache;
        specialinvoke r0.<sun.security.util.Cache: void <init>()>();
        return;
    }

    public int size()
    {
        sun.security.util.NullCache r0;

        r0 := @this: sun.security.util.NullCache;
        return 0;
    }

    public void clear()
    {
        sun.security.util.NullCache r0;

        r0 := @this: sun.security.util.NullCache;
        return;
    }

    public void put(java.lang.Object, java.lang.Object)
    {
        sun.security.util.NullCache r0;
        java.lang.Object r1, r2;

        r0 := @this: sun.security.util.NullCache;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        sun.security.util.NullCache r0;
        java.lang.Object r1;

        r0 := @this: sun.security.util.NullCache;
        r1 := @parameter0: java.lang.Object;
        return null;
    }

    public void remove(java.lang.Object)
    {
        sun.security.util.NullCache r0;
        java.lang.Object r1;

        r0 := @this: sun.security.util.NullCache;
        r1 := @parameter0: java.lang.Object;
        return;
    }

    public void setCapacity(int)
    {
        sun.security.util.NullCache r0;
        int i0;

        r0 := @this: sun.security.util.NullCache;
        i0 := @parameter0: int;
        return;
    }

    public void setTimeout(int)
    {
        sun.security.util.NullCache r0;
        int i0;

        r0 := @this: sun.security.util.NullCache;
        i0 := @parameter0: int;
        return;
    }

    public void accept(sun.security.util.Cache$CacheVisitor)
    {
        sun.security.util.NullCache r0;
        sun.security.util.Cache$CacheVisitor r1;

        r0 := @this: sun.security.util.NullCache;
        r1 := @parameter0: sun.security.util.Cache$CacheVisitor;
        return;
    }

    static void <clinit>()
    {
        sun.security.util.NullCache $r0;

        $r0 = new sun.security.util.NullCache;
        specialinvoke $r0.<sun.security.util.NullCache: void <init>()>();
        <sun.security.util.NullCache: sun.security.util.Cache INSTANCE> = $r0;
        return;
    }
}
