public class sun.security.krb5.Config extends java.lang.Object
{
    private static sun.security.krb5.Config singleton;
    private java.util.Hashtable stanzaTable;
    private static boolean DEBUG;
    private static final int BASE16_0;
    private static final int BASE16_1;
    private static final int BASE16_2;
    private static final int BASE16_3;
    private final java.lang.String defaultRealm;
    private final java.lang.String defaultKDC;

    private static native java.lang.String getWindowsDirectory(boolean);

    public static synchronized sun.security.krb5.Config getInstance() throws sun.security.krb5.KrbException
    {
        sun.security.krb5.Config $r0, $r1, $r2;

        $r0 = <sun.security.krb5.Config: sun.security.krb5.Config singleton>;
        if $r0 != null goto label0;

        $r1 = new sun.security.krb5.Config;
        specialinvoke $r1.<sun.security.krb5.Config: void <init>()>();
        <sun.security.krb5.Config: sun.security.krb5.Config singleton> = $r1;

     label0:
        $r2 = <sun.security.krb5.Config: sun.security.krb5.Config singleton>;
        return $r2;
    }

    public static synchronized void refresh() throws sun.security.krb5.KrbException
    {
        sun.security.krb5.Config $r0;

        $r0 = new sun.security.krb5.Config;
        specialinvoke $r0.<sun.security.krb5.Config: void <init>()>();
        <sun.security.krb5.Config: sun.security.krb5.Config singleton> = $r0;
        staticinvoke <sun.security.krb5.KdcComm: void initStatic()>();
        return;
    }

    private static boolean isMacosLionOrBetter()
    {
        java.lang.String r0, r1, $r3, $r4;
        java.lang.String[] r2;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        java.lang.NumberFormatException $r5, r6;

        r0 = staticinvoke <sun.security.krb5.Config: java.lang.String getProperty(java.lang.String)>("os.name");
        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("OS X");
        if $z0 != 0 goto label0;

        return 0;

     label0:
        r1 = staticinvoke <sun.security.krb5.Config: java.lang.String getProperty(java.lang.String)>("os.version");
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
        $r3 = r2[0];
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("10");
        if $z1 != 0 goto label1;

        return 0;

     label1:
        $i1 = lengthof r2;
        if $i1 >= 2 goto label2;

        return 0;

     label2:
        $r4 = r2[1];
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
        if i0 < 7 goto label4;

        $z2 = 1;

     label3:
        return $z2;

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;
        r6 = $r5;

     label6:
        return 0;

        catch java.lang.NumberFormatException from label2 to label3 with label5;
    }

    private void <init>() throws sun.security.krb5.KrbException
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2, $r5, $r6, $r7, $r8, $r9, $r10, r17;
        java.util.Vector r3, r18;
        boolean z0, $z1, $z2, $z3, $z4;
        java.io.IOException r4, $r16, $r21, r22;
        sun.security.krb5.KrbException $r11;
        java.util.Hashtable $r12, $r14, $r19;
        java.io.PrintStream $r13, $r15, $r20;

        r0 := @this: sun.security.krb5.Config;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r1 = staticinvoke <sun.security.krb5.Config: java.lang.String getProperty(java.lang.String)>("java.security.krb5.kdc");
        if r1 == null goto label0;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(58, 32);
        r0.<sun.security.krb5.Config: java.lang.String defaultKDC> = $r5;
        goto label1;

     label0:
        r0.<sun.security.krb5.Config: java.lang.String defaultKDC> = null;

     label1:
        $r6 = staticinvoke <sun.security.krb5.Config: java.lang.String getProperty(java.lang.String)>("java.security.krb5.realm");
        r0.<sun.security.krb5.Config: java.lang.String defaultRealm> = $r6;
        $r7 = r0.<sun.security.krb5.Config: java.lang.String defaultKDC>;
        if $r7 != null goto label2;

        $r8 = r0.<sun.security.krb5.Config: java.lang.String defaultRealm>;
        if $r8 != null goto label3;

     label2:
        $r9 = r0.<sun.security.krb5.Config: java.lang.String defaultRealm>;
        if $r9 != null goto label4;

        $r10 = r0.<sun.security.krb5.Config: java.lang.String defaultKDC>;
        if $r10 == null goto label4;

     label3:
        $r11 = new sun.security.krb5.KrbException;
        specialinvoke $r11.<sun.security.krb5.KrbException: void <init>(java.lang.String)>("System property java.security.krb5.kdc and java.security.krb5.realm both must be set or neither must be set.");
        throw $r11;

     label4:
        r2 = specialinvoke r0.<sun.security.krb5.Config: java.lang.String getJavaFileName()>();
        if r2 == null goto label5;

        r3 = specialinvoke r0.<sun.security.krb5.Config: java.util.Vector loadConfigFile(java.lang.String)>(r2);
        $r12 = specialinvoke r0.<sun.security.krb5.Config: java.util.Hashtable parseStanzaTable(java.util.Vector)>(r3);
        r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable> = $r12;
        $z1 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z1 == 0 goto label11;

        $r13 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("Loaded from Java config");
        goto label11;

     label5:
        z0 = 0;
        $z2 = staticinvoke <sun.security.krb5.Config: boolean isMacosLionOrBetter()>();
        if $z2 == 0 goto label10;

     label6:
        $r14 = staticinvoke <sun.security.krb5.SCDynamicStoreConfig: java.util.Hashtable getConfig()>();
        r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable> = $r14;
        $z3 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z3 == 0 goto label7;

        $r15 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Loaded from SCDynamicStoreConfig");

     label7:
        z0 = 1;

     label8:
        goto label10;

     label9:
        $r16 := @caughtexception;
        r4 = $r16;

     label10:
        if z0 != 0 goto label11;

        r17 = specialinvoke r0.<sun.security.krb5.Config: java.lang.String getNativeFileName()>();
        r18 = specialinvoke r0.<sun.security.krb5.Config: java.util.Vector loadConfigFile(java.lang.String)>(r17);
        $r19 = specialinvoke r0.<sun.security.krb5.Config: java.util.Hashtable parseStanzaTable(java.util.Vector)>(r18);
        r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable> = $r19;
        $z4 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z4 == 0 goto label11;

        $r20 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("Loaded from native config");

     label11:
        goto label13;

     label12:
        $r21 := @caughtexception;
        r22 = $r21;

     label13:
        return;

        catch java.io.IOException from label6 to label8 with label9;
        catch java.io.IOException from label4 to label11 with label12;
    }

    public int getDefaultIntValue(java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r3, $r10, $r12, $r18;
        null_type n0;
        int i0;
        java.lang.NumberFormatException r2, $r4;
        boolean $z0;
        java.io.PrintStream $r5, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r14, $r15, $r16, $r17;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        n0 = null;
        i0 = -2147483648;
        r3 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String)>(r1);
        if r3 == null goto label4;

     label0:
        i0 = specialinvoke r0.<sun.security.krb5.Config: int parseIntValue(java.lang.String)>(r3);

     label1:
        goto label4;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;
        $z0 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z0 == 0 goto label3;

        $r5 = <java.lang.System: java.io.PrintStream out>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in getting value of ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r10 = virtualinvoke r2.<java.lang.NumberFormatException: java.lang.String getMessage()>();
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r12);
        $r13 = <java.lang.System: java.io.PrintStream out>;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to minimum value");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label3:
        i0 = -2147483648;

     label4:
        return i0;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public int getDefaultIntValue(java.lang.String, java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2, r4, $r13, $r15, $r21;
        null_type n0;
        int i0;
        java.lang.NumberFormatException r3, $r5;
        boolean $z0;
        java.io.PrintStream $r6, $r16;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r17, $r18, $r19, $r20;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        n0 = null;
        i0 = -2147483648;
        r4 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>(r1, r2);
        if r4 == null goto label4;

     label0:
        i0 = specialinvoke r0.<sun.security.krb5.Config: int parseIntValue(java.lang.String)>(r4);

     label1:
        goto label4;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        $z0 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z0 == 0 goto label3;

        $r6 = <java.lang.System: java.io.PrintStream out>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in getting value of ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in section ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r13 = virtualinvoke r3.<java.lang.NumberFormatException: java.lang.String getMessage()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r15);
        $r16 = <java.lang.System: java.io.PrintStream out>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to minimum value");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label3:
        i0 = -2147483648;

     label4:
        return i0;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public java.lang.String getDefault(java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, $r4;
        java.util.Hashtable $r2, $r3;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        if $r2 != null goto label0;

        return null;

     label0:
        $r3 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        $r4 = specialinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.util.Hashtable)>(r1, $r3);
        return $r4;
    }

    private java.lang.String getDefault(java.lang.String, java.util.Hashtable)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r3, r5, $r11, $r12, r13, $r19, $r20, $r26, $r27;
        java.util.Hashtable r2, $r7, $r9;
        java.util.Enumeration r4;
        java.lang.Object r6, $r8, $r10, $r18, $r25;
        int i0, i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Vector $r14, $r17, $r24;
        java.lang.StringBuilder $r15, $r16, $r21, $r22, $r23, $r28, $r29;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Hashtable;
        r3 = null;
        $r7 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        if $r7 == null goto label8;

        r4 = virtualinvoke r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label8;

        $r8 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();
        r5 = (java.lang.String) $r8;
        r6 = virtualinvoke r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);
        $z1 = r6 instanceof java.util.Hashtable;
        if $z1 == 0 goto label1;

        $r9 = (java.util.Hashtable) r6;
        r3 = specialinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.util.Hashtable)>(r1, $r9);
        if r3 == null goto label7;

        return r3;

     label1:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z2 == 0 goto label7;

        $z3 = r6 instanceof java.lang.String;
        if $z3 == 0 goto label2;

        $r10 = virtualinvoke r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);
        $r11 = (java.lang.String) $r10;
        $r12 = (java.lang.String) $r11;
        return $r12;

     label2:
        $z4 = r6 instanceof java.util.Vector;
        if $z4 == 0 goto label7;

        r13 = "";
        $r14 = (java.util.Vector) r6;
        i0 = virtualinvoke $r14.<java.util.Vector: int size()>();
        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        $i2 = i0 - 1;
        if i1 != $i2 goto label4;

        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
        $r17 = (java.util.Vector) r6;
        $r18 = virtualinvoke $r17.<java.util.Vector: java.lang.Object elementAt(int)>(i1);
        $r19 = (java.lang.String) $r18;
        $r20 = (java.lang.String) $r19;
        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        r13 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label5;

     label4:
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
        $r24 = (java.util.Vector) r6;
        $r25 = virtualinvoke $r24.<java.util.Vector: java.lang.Object elementAt(int)>(i1);
        $r26 = (java.lang.String) $r25;
        $r27 = (java.lang.String) $r26;
        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        r13 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        i1 = i1 + 1;
        goto label3;

     label6:
        return r13;

     label7:
        goto label0;

     label8:
        return r3;
    }

    public java.lang.String getDefault(java.lang.String, java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2, r3, r5, $r16, $r17, $r23, $r24, $r30, $r31;
        java.util.Enumeration r4;
        java.util.Hashtable r6, r8, $r10, $r11, $r13;
        java.lang.Object r7, r9, $r12, $r14, $r15, $r22, $r29;
        int i0, i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Vector $r18, $r21, $r28;
        java.lang.StringBuilder $r19, $r20, $r25, $r26, $r27, $r32, $r33;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = null;
        $r10 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        if $r10 == null goto label8;

        $r11 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        r4 = virtualinvoke $r11.<java.util.Hashtable: java.util.Enumeration keys()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label8;

        $r12 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();
        r5 = (java.lang.String) $r12;
        $r13 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        $r14 = virtualinvoke $r13.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);
        r6 = (java.util.Hashtable) $r14;
        $z1 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r6.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);
        if $z2 == 0 goto label0;

        $r15 = virtualinvoke r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        $r16 = (java.lang.String) $r15;
        $r17 = (java.lang.String) $r16;
        return $r17;

     label1:
        $z3 = virtualinvoke r6.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r2);
        if $z3 == 0 goto label0;

        r7 = virtualinvoke r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);
        $z4 = r7 instanceof java.util.Hashtable;
        if $z4 == 0 goto label7;

        r8 = (java.util.Hashtable) r7;
        $z5 = virtualinvoke r8.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);
        if $z5 == 0 goto label7;

        r9 = virtualinvoke r8.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        $z6 = r9 instanceof java.util.Vector;
        if $z6 == 0 goto label6;

        r3 = "";
        $r18 = (java.util.Vector) r9;
        i0 = virtualinvoke $r18.<java.util.Vector: int size()>();
        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $i2 = i0 - 1;
        if i1 != $i2 goto label3;

        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r21 = (java.util.Vector) r9;
        $r22 = virtualinvoke $r21.<java.util.Vector: java.lang.Object elementAt(int)>(i1);
        $r23 = (java.lang.String) $r22;
        $r24 = (java.lang.String) $r23;
        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        r3 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label4;

     label3:
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r28 = (java.util.Vector) r9;
        $r29 = virtualinvoke $r28.<java.util.Vector: java.lang.Object elementAt(int)>(i1);
        $r30 = (java.lang.String) $r29;
        $r31 = (java.lang.String) $r30;
        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        r3 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        i1 = i1 + 1;
        goto label2;

     label5:
        goto label7;

     label6:
        r3 = (java.lang.String) r9;

     label7:
        goto label0;

     label8:
        return r3;
    }

    public boolean getDefaultBooleanValue(java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r3;
        null_type n0;
        java.util.Hashtable $r2, $r4;
        boolean $z0;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        n0 = null;
        $r2 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        if $r2 != null goto label0;

        r3 = null;
        goto label1;

     label0:
        $r4 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        r3 = specialinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.util.Hashtable)>(r1, $r4);

     label1:
        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");
        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean getDefaultBooleanValue(java.lang.String, java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>(r1, r2);
        if r3 == null goto label0;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");
        if $z0 == 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    private int parseIntValue(java.lang.String) throws java.lang.NumberFormatException
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2, r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        char[] r3;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r5, $r6, $r7;
        char $c8;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        i0 = 0;
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("+");
        if $z0 == 0 goto label0;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
        return $i3;

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("0x");
        if $z1 == 0 goto label23;

        r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2);
        r3 = virtualinvoke r4.<java.lang.String: char[] toCharArray()>();
        $i4 = lengthof r3;
        if $i4 <= 8 goto label1;

        $r5 = new java.lang.NumberFormatException;
        specialinvoke $r5.<java.lang.NumberFormatException: void <init>()>();
        throw $r5;

     label1:
        i1 = 0;

     label2:
        $i5 = lengthof r3;
        if i1 >= $i5 goto label21;

        $i6 = lengthof r3;
        $i7 = $i6 - i1;
        i2 = $i7 - 1;
        $c8 = r3[i1];
        tableswitch($c8)
        {
            case 48: goto label3;
            case 49: goto label4;
            case 50: goto label5;
            case 51: goto label6;
            case 52: goto label7;
            case 53: goto label8;
            case 54: goto label9;
            case 55: goto label10;
            case 56: goto label11;
            case 57: goto label12;
            case 58: goto label19;
            case 59: goto label19;
            case 60: goto label19;
            case 61: goto label19;
            case 62: goto label19;
            case 63: goto label19;
            case 64: goto label19;
            case 65: goto label13;
            case 66: goto label14;
            case 67: goto label15;
            case 68: goto label16;
            case 69: goto label17;
            case 70: goto label18;
            case 71: goto label19;
            case 72: goto label19;
            case 73: goto label19;
            case 74: goto label19;
            case 75: goto label19;
            case 76: goto label19;
            case 77: goto label19;
            case 78: goto label19;
            case 79: goto label19;
            case 80: goto label19;
            case 81: goto label19;
            case 82: goto label19;
            case 83: goto label19;
            case 84: goto label19;
            case 85: goto label19;
            case 86: goto label19;
            case 87: goto label19;
            case 88: goto label19;
            case 89: goto label19;
            case 90: goto label19;
            case 91: goto label19;
            case 92: goto label19;
            case 93: goto label19;
            case 94: goto label19;
            case 95: goto label19;
            case 96: goto label19;
            case 97: goto label13;
            case 98: goto label14;
            case 99: goto label15;
            case 100: goto label16;
            case 101: goto label17;
            case 102: goto label18;
            default: goto label19;
        };

     label3:
        i0 = i0 + 0;
        goto label20;

     label4:
        $i9 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i10 = 1 * $i9;
        i0 = i0 + $i10;
        goto label20;

     label5:
        $i11 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i12 = 2 * $i11;
        i0 = i0 + $i12;
        goto label20;

     label6:
        $i13 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i14 = 3 * $i13;
        i0 = i0 + $i14;
        goto label20;

     label7:
        $i15 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i16 = 4 * $i15;
        i0 = i0 + $i16;
        goto label20;

     label8:
        $i17 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i18 = 5 * $i17;
        i0 = i0 + $i18;
        goto label20;

     label9:
        $i19 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i20 = 6 * $i19;
        i0 = i0 + $i20;
        goto label20;

     label10:
        $i21 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i22 = 7 * $i21;
        i0 = i0 + $i22;
        goto label20;

     label11:
        $i23 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i24 = 8 * $i23;
        i0 = i0 + $i24;
        goto label20;

     label12:
        $i25 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i26 = 9 * $i25;
        i0 = i0 + $i26;
        goto label20;

     label13:
        $i27 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i28 = 10 * $i27;
        i0 = i0 + $i28;
        goto label20;

     label14:
        $i29 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i30 = 11 * $i29;
        i0 = i0 + $i30;
        goto label20;

     label15:
        $i31 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i32 = 12 * $i31;
        i0 = i0 + $i32;
        goto label20;

     label16:
        $i33 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i34 = 13 * $i33;
        i0 = i0 + $i34;
        goto label20;

     label17:
        $i35 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i36 = 14 * $i35;
        i0 = i0 + $i36;
        goto label20;

     label18:
        $i37 = specialinvoke r0.<sun.security.krb5.Config: int getBase(int)>(i2);
        $i38 = 15 * $i37;
        i0 = i0 + $i38;
        goto label20;

     label19:
        $r6 = new java.lang.NumberFormatException;
        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Invalid numerical format");
        throw $r6;

     label20:
        i1 = i1 + 1;
        goto label2;

     label21:
        if i0 >= 0 goto label22;

        $r7 = new java.lang.NumberFormatException;
        specialinvoke $r7.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Data overflow.");
        throw $r7;

     label22:
        goto label24;

     label23:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label24:
        return i0;
    }

    private int getBase(int)
    {
        sun.security.krb5.Config r0;
        int i0, i1, i2;

        r0 := @this: sun.security.krb5.Config;
        i0 := @parameter0: int;
        i1 = 16;
        tableswitch(i0)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label0:
        i1 = 1;
        goto label6;

     label1:
        i1 = 16;
        goto label6;

     label2:
        i1 = 256;
        goto label6;

     label3:
        i1 = 4096;
        goto label6;

     label4:
        i2 = 1;

     label5:
        if i2 >= i0 goto label6;

        i1 = i1 * 16;
        i2 = i2 + 1;
        goto label5;

     label6:
        return i1;
    }

    private java.lang.String find(java.lang.String, java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2, r3, $r10, $r11;
        java.util.Hashtable $r4, $r5, $r7, $r8;
        java.lang.Object $r6, $r9;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r4 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        if $r4 == null goto label0;

        $r5 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);
        $r7 = (java.util.Hashtable) $r6;
        $r8 = (java.util.Hashtable) $r7;
        $r9 = virtualinvoke $r8.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);
        $r10 = (java.lang.String) $r9;
        $r11 = (java.lang.String) $r10;
        r3 = $r11;
        if $r11 == null goto label0;

        return r3;

     label0:
        return "";
    }

    private java.util.Vector loadConfigFile(java.lang.String) throws java.io.IOException
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r6, r7, r8, $r13, $r14;
        java.io.InputStreamReader $r2;
        sun.security.krb5.Config$1 $r3;
        java.io.BufferedReader r4, $r9;
        java.util.Vector r5, $r12;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r10;
        java.io.InputStream $r11;
        java.io.IOException $r15, $r24;
        java.lang.StringBuilder $r16, $r17, $r18, $r19;
        null_type $n0;
        java.security.PrivilegedActionException $r21, r22;
        java.lang.Exception $r23;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 != 0 goto label9;

        $r9 = new java.io.BufferedReader;
        $r2 = new java.io.InputStreamReader;
        $r3 = new sun.security.krb5.Config$1;
        specialinvoke $r3.<sun.security.krb5.Config$1: void <init>(sun.security.krb5.Config,java.lang.String)>(r0, r1);
        $r10 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r3);
        $r11 = (java.io.InputStream) $r10;
        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11);
        specialinvoke $r9.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);
        r4 = $r9;
        $r12 = new java.util.Vector;
        specialinvoke $r12.<java.util.Vector: void <init>()>();
        r5 = $r12;
        r6 = null;

     label1:
        $r13 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();
        r7 = $r13;
        if $r13 == null goto label6;

        $z1 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z1 != 0 goto label1;

        $r14 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();
        $z2 = virtualinvoke $r14.<java.lang.String: boolean isEmpty()>();
        if $z2 != 0 goto label1;

        r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();
        $z3 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("{");
        if $z3 == 0 goto label3;

        if r6 != null goto label2;

        $r15 = new java.io.IOException;
        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Config file should not start with \"{\"");
        throw $r15;

     label2:
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label5;

     label3:
        if r6 == null goto label4;

        virtualinvoke r5.<java.util.Vector: void addElement(java.lang.Object)>(r6);

     label4:
        r6 = r8;

     label5:
        goto label1;

     label6:
        if r6 == null goto label7;

        virtualinvoke r5.<java.util.Vector: void addElement(java.lang.Object)>(r6);

     label7:
        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label8:
        return r5;

     label9:
        $n0 = null;

     label10:
        return $n0;

     label11:
        $r21 := @caughtexception;
        r22 = $r21;
        $r23 = virtualinvoke r22.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $r24 = (java.io.IOException) $r23;
        throw $r24;

        catch java.security.PrivilegedActionException from label0 to label8 with label11;
        catch java.security.PrivilegedActionException from label9 to label10 with label11;
    }

    private java.util.Hashtable parseStanzaTable(java.util.Vector) throws sun.security.krb5.KrbException
    {
        sun.security.krb5.Config r0;
        java.util.Vector r1;
        java.util.Hashtable r2, r4, r5, $r7, $r12, r13, $r17, r18, r19;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18;
        java.lang.String r3, $r9, $r11, $r16, r21, $r23;
        sun.security.krb5.KrbException $r6;
        java.lang.Object $r8, $r10, $r15, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.util.Vector;
        if r1 != null goto label0;

        $r6 = new sun.security.krb5.KrbException;
        specialinvoke $r6.<sun.security.krb5.KrbException: void <init>(java.lang.String)>("I/O error while reading configuration file.");
        throw $r6;

     label0:
        $r7 = new java.util.Hashtable;
        specialinvoke $r7.<java.util.Hashtable: void <init>()>();
        r2 = $r7;
        i0 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.util.Vector: int size()>();
        if i0 >= $i2 goto label16;

        $r8 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i0);
        $r9 = (java.lang.String) $r8;
        r3 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("[realms]");
        if $z0 == 0 goto label6;

        i1 = i0 + 1;

     label2:
        $i3 = virtualinvoke r1.<java.util.Vector: int size()>();
        $i4 = $i3 + 1;
        if i1 >= $i4 goto label5;

        $i5 = virtualinvoke r1.<java.util.Vector: int size()>();
        if i1 == $i5 goto label3;

        $r10 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i1);
        $r11 = (java.lang.String) $r10;
        $z1 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if $z1 == 0 goto label4;

     label3:
        $r12 = new java.util.Hashtable;
        specialinvoke $r12.<java.util.Hashtable: void <init>()>();
        r4 = $r12;
        $i6 = i0 + 1;
        r13 = specialinvoke r0.<sun.security.krb5.Config: java.util.Hashtable parseRealmField(java.util.Vector,int,int)>(r1, $i6, i1);
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("realms", r13);
        i0 = i1 - 1;
        goto label5;

     label4:
        i1 = i1 + 1;
        goto label2;

     label5:
        goto label15;

     label6:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("[capaths]");
        if $z2 == 0 goto label11;

        i7 = i0 + 1;

     label7:
        $i8 = virtualinvoke r1.<java.util.Vector: int size()>();
        $i9 = $i8 + 1;
        if i7 >= $i9 goto label10;

        $i10 = virtualinvoke r1.<java.util.Vector: int size()>();
        if i7 == $i10 goto label8;

        $r15 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i7);
        $r16 = (java.lang.String) $r15;
        $z3 = virtualinvoke $r16.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if $z3 == 0 goto label9;

     label8:
        $r17 = new java.util.Hashtable;
        specialinvoke $r17.<java.util.Hashtable: void <init>()>();
        r18 = $r17;
        $i11 = i0 + 1;
        r19 = specialinvoke r0.<sun.security.krb5.Config: java.util.Hashtable parseRealmField(java.util.Vector,int,int)>(r1, $i11, i7);
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("capaths", r19);
        i0 = i7 - 1;
        goto label10;

     label9:
        i7 = i7 + 1;
        goto label7;

     label10:
        goto label15;

     label11:
        $z4 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if $z4 == 0 goto label15;

        $z5 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>("]");
        if $z5 == 0 goto label15;

        $i12 = virtualinvoke r3.<java.lang.String: int length()>();
        $i13 = $i12 - 1;
        r21 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i13);
        i14 = i0 + 1;

     label12:
        $i15 = virtualinvoke r1.<java.util.Vector: int size()>();
        $i16 = $i15 + 1;
        if i14 >= $i16 goto label15;

        $i17 = virtualinvoke r1.<java.util.Vector: int size()>();
        if i14 == $i17 goto label13;

        $r22 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i14);
        $r23 = (java.lang.String) $r22;
        $z6 = virtualinvoke $r23.<java.lang.String: boolean startsWith(java.lang.String)>("[");
        if $z6 == 0 goto label14;

     label13:
        $i18 = i0 + 1;
        r5 = specialinvoke r0.<sun.security.krb5.Config: java.util.Hashtable parseField(java.util.Vector,int,int)>(r1, $i18, i14);
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r21, r5);
        i0 = i14 - 1;
        goto label15;

     label14:
        i14 = i14 + 1;
        goto label12;

     label15:
        i0 = i0 + 1;
        goto label1;

     label16:
        return r2;
    }

    private java.lang.String getJavaFileName()
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, $r3, $r5, $r8, $r11, $r18;
        java.lang.StringBuilder $r2, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r17;
        boolean $z0, $z1;
        java.io.PrintStream $r14;

        r0 := @this: sun.security.krb5.Config;
        r1 = staticinvoke <sun.security.krb5.Config: java.lang.String getProperty(java.lang.String)>("java.security.krb5.conf");
        if r1 != null goto label0;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = staticinvoke <sun.security.krb5.Config: java.lang.String getProperty(java.lang.String)>("java.home");
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = <java.io.File: java.lang.String separator>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");
        $r8 = <java.io.File: java.lang.String separator>;
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("security");
        $r11 = <java.io.File: java.lang.String separator>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("krb5.conf");
        r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $z0 = specialinvoke r0.<sun.security.krb5.Config: boolean fileExists(java.lang.String)>(r1);
        if $z0 != 0 goto label0;

        r1 = null;

     label0:
        $z1 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z1 == 0 goto label1;

        $r14 = <java.lang.System: java.io.PrintStream out>;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Java config name: ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label1:
        return r1;
    }

    private java.lang.String getNativeFileName()
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2, r5, r9, r13, r17, $r25;
        java.lang.Exception r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r20, $r22, $r23, $r24;
        java.io.PrintStream $r21;

        r0 := @this: sun.security.krb5.Config;
        r1 = null;
        r2 = staticinvoke <sun.security.krb5.Config: java.lang.String getProperty(java.lang.String)>("os.name");
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("Windows");
        if $z0 == 0 goto label10;

     label0:
        staticinvoke <sun.security.krb5.Credentials: void ensureLoaded()>();

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r3 = $r4;

     label3:
        $z1 = <sun.security.krb5.Credentials: boolean alreadyLoaded>;
        if $z1 == 0 goto label9;

        r5 = staticinvoke <sun.security.krb5.Config: java.lang.String getWindowsDirectory(boolean)>(0);
        if r5 == null goto label6;

        $z2 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("\\");
        if $z2 == 0 goto label4;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("krb5.ini");
        r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label5;

     label4:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\krb5.ini");
        r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $z3 = specialinvoke r0.<sun.security.krb5.Config: boolean fileExists(java.lang.String)>(r9);
        if $z3 == 0 goto label6;

        r1 = r9;

     label6:
        if r1 != null goto label9;

        r13 = staticinvoke <sun.security.krb5.Config: java.lang.String getWindowsDirectory(boolean)>(1);
        if r13 == null goto label9;

        $z4 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>("\\");
        if $z4 == 0 goto label7;

        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("krb5.ini");
        r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label8;

     label7:
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\krb5.ini");
        r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        r1 = r17;

     label9:
        if r1 != null goto label13;

        r1 = "c:\\winnt\\krb5.ini";
        goto label13;

     label10:
        $z5 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("SunOS");
        if $z5 == 0 goto label11;

        r1 = "/etc/krb5/krb5.conf";
        goto label13;

     label11:
        $z6 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("OS X");
        if $z6 == 0 goto label12;

        r1 = specialinvoke r0.<sun.security.krb5.Config: java.lang.String findMacosConfigFile()>();
        goto label13;

     label12:
        r1 = "/etc/krb5.conf";

     label13:
        $z7 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z7 == 0 goto label14;

        $r21 = <java.lang.System: java.io.PrintStream out>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Native config name: ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label14:
        return r1;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    private static java.lang.String getProperty(java.lang.String)
    {
        java.lang.String r0, $r3;
        sun.security.action.GetPropertyAction $r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = new sun.security.action.GetPropertyAction;
        specialinvoke $r1.<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>(r0);
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        $r3 = (java.lang.String) $r2;
        return $r3;
    }

    private java.lang.String findMacosConfigFile()
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: sun.security.krb5.Config;
        r1 = staticinvoke <sun.security.krb5.Config: java.lang.String getProperty(java.lang.String)>("user.home");
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Library/Preferences/edu.mit.Kerberos");
        r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $z0 = specialinvoke r0.<sun.security.krb5.Config: boolean fileExists(java.lang.String)>(r2);
        if $z0 == 0 goto label0;

        return r2;

     label0:
        $z1 = specialinvoke r0.<sun.security.krb5.Config: boolean fileExists(java.lang.String)>("/Library/Preferences/edu.mit.Kerberos");
        if $z1 == 0 goto label1;

        return "/Library/Preferences/edu.mit.Kerberos";

     label1:
        return "/etc/krb5.conf";
    }

    private static java.lang.String trimmed(java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        char $c0, $c3, $c4, $c7;
        int $i1, $i2, $i5, $i6, $i8, $i9;

        r0 := @parameter0: java.lang.String;
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        if $c0 != 34 goto label0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $i2 = $i1 - 1;
        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);
        if $c3 == 34 goto label1;

     label0:
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        if $c4 != 39 goto label2;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();
        $i6 = $i5 - 1;
        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);
        if $c7 != 39 goto label2;

     label1:
        $i8 = virtualinvoke r1.<java.lang.String: int length()>();
        $i9 = $i8 - 1;
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i9);
        r1 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

     label2:
        return r1;
    }

    private java.util.Hashtable parseField(java.util.Vector, int, int)
    {
        sun.security.krb5.Config r0;
        java.util.Vector r1;
        int i0, i1, i2, i3, $i4, $i6;
        java.util.Hashtable $r2, r3;
        java.lang.String r4, r5, r6, $r8, $r9;
        java.lang.Object $r7;
        char $c5;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.util.Vector;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = new java.util.Hashtable;
        specialinvoke $r2.<java.util.Hashtable: void <init>()>();
        r3 = $r2;
        i2 = i0;

     label0:
        if i2 >= i1 goto label4;

        $r7 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i2);
        r4 = (java.lang.String) $r7;
        i3 = 0;

     label1:
        $i4 = virtualinvoke r4.<java.lang.String: int length()>();
        if i3 >= $i4 goto label3;

        $c5 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i3);
        if $c5 != 61 goto label2;

        $r8 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i3);
        r5 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();
        $i6 = i3 + 1;
        $r9 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i6);
        r6 = staticinvoke <sun.security.krb5.Config: java.lang.String trimmed(java.lang.String)>($r9);
        virtualinvoke r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);
        goto label3;

     label2:
        i3 = i3 + 1;
        goto label1;

     label3:
        i2 = i2 + 1;
        goto label0;

     label4:
        return r3;
    }

    private java.util.Hashtable parseRealmField(java.util.Vector, int, int)
    {
        sun.security.krb5.Config r0;
        java.util.Vector r1;
        int i0, i1, i2, i3, i4, $i5, i7, $i8, $i10;
        java.util.Hashtable $r2, r3, r12;
        java.lang.String r4, r5, $r7, $r8, $r10, r11;
        boolean z0, $z1, z2;
        java.lang.Object $r6, $r9;
        char $c6, $c9;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.util.Vector;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = new java.util.Hashtable;
        specialinvoke $r2.<java.util.Hashtable: void <init>()>();
        r3 = $r2;
        i2 = i0;

     label0:
        if i2 >= i1 goto label10;

        $r6 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i2);
        $r7 = (java.lang.String) $r6;
        r4 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();
        $z1 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>("{");
        if $z1 == 0 goto label9;

        r5 = "";
        i3 = 0;

     label1:
        $i5 = virtualinvoke r4.<java.lang.String: int length()>();
        if i3 >= $i5 goto label3;

        $c6 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i3);
        if $c6 != 61 goto label2;

        $r8 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i3);
        r5 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();
        goto label3;

     label2:
        i3 = i3 + 1;
        goto label1;

     label3:
        i7 = i2 + 1;

     label4:
        if i7 >= i1 goto label9;

        z0 = 0;
        $r9 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i7);
        $r10 = (java.lang.String) $r9;
        r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();
        i4 = 0;

     label5:
        $i8 = virtualinvoke r11.<java.lang.String: int length()>();
        if i4 >= $i8 goto label7;

        $c9 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i4);
        if $c9 != 125 goto label6;

        z0 = 1;
        goto label7;

     label6:
        i4 = i4 + 1;
        goto label5;

     label7:
        if z0 != 1 goto label8;

        $i10 = i2 + 1;
        r12 = specialinvoke r0.<sun.security.krb5.Config: java.util.Hashtable parseRealmFieldEx(java.util.Vector,int,int)>(r1, $i10, i7);
        virtualinvoke r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r12);
        i2 = i7;
        z2 = 0;
        goto label9;

     label8:
        i7 = i7 + 1;
        goto label4;

     label9:
        i2 = i2 + 1;
        goto label0;

     label10:
        return r3;
    }

    private java.util.Hashtable parseRealmFieldEx(java.util.Vector, int, int)
    {
        sun.security.krb5.Config r0;
        java.util.Vector r1, r4, r5, $r8, $r9, $r13, r14;
        int i0, i1, i2, i3, $i4, $i6;
        java.util.Hashtable $r2, r3;
        java.lang.String r6, r7, r11, $r12, $r16, $r17;
        java.lang.Object $r10, $r15;
        char $c5;
        boolean $z0;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.util.Vector;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = new java.util.Hashtable;
        specialinvoke $r2.<java.util.Hashtable: void <init>()>();
        r3 = $r2;
        $r8 = new java.util.Vector;
        specialinvoke $r8.<java.util.Vector: void <init>()>();
        r4 = $r8;
        $r9 = new java.util.Vector;
        specialinvoke $r9.<java.util.Vector: void <init>()>();
        r5 = $r9;
        r6 = "";
        i2 = i0;

     label0:
        if i2 >= i1 goto label6;

        $r10 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i2);
        r11 = (java.lang.String) $r10;
        i3 = 0;

     label1:
        $i4 = virtualinvoke r11.<java.lang.String: int length()>();
        if i3 >= $i4 goto label5;

        $c5 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i3);
        if $c5 != 61 goto label4;

        $r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int,int)>(0, i3);
        r7 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();
        $z0 = specialinvoke r0.<sun.security.krb5.Config: boolean exists(java.lang.String,java.util.Vector)>(r7, r4);
        if $z0 != 0 goto label2;

        virtualinvoke r4.<java.util.Vector: void addElement(java.lang.Object)>(r7);
        $r13 = new java.util.Vector;
        specialinvoke $r13.<java.util.Vector: void <init>()>();
        r14 = $r13;
        goto label3;

     label2:
        $r15 = virtualinvoke r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r7);
        r14 = (java.util.Vector) $r15;

     label3:
        $i6 = i3 + 1;
        $r16 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>($i6);
        $r17 = staticinvoke <sun.security.krb5.Config: java.lang.String trimmed(java.lang.String)>($r16);
        virtualinvoke r14.<java.util.Vector: void addElement(java.lang.Object)>($r17);
        virtualinvoke r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r14);
        goto label5;

     label4:
        i3 = i3 + 1;
        goto label1;

     label5:
        i2 = i2 + 1;
        goto label0;

     label6:
        return r3;
    }

    private boolean exists(java.lang.String, java.util.Vector)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, $r4, $r5;
        java.util.Vector r2;
        boolean z0, $z1;
        int i0, $i1;
        java.lang.Object $r3;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Vector;
        z0 = 0;
        i0 = 0;

     label0:
        $i1 = virtualinvoke r2.<java.util.Vector: int size()>();
        if i0 >= $i1 goto label2;

        $r3 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);
        $r4 = (java.lang.String) $r3;
        $r5 = (java.lang.String) $r4;
        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label1;

        z0 = 1;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return z0;
    }

    public void listTable()
    {
        sun.security.krb5.Config r0;
        java.util.Hashtable $r1;

        r0 := @this: sun.security.krb5.Config;
        $r1 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        specialinvoke r0.<sun.security.krb5.Config: void listTable(java.util.Hashtable)>($r1);
        return;
    }

    private void listTable(java.util.Hashtable)
    {
        sun.security.krb5.Config r0;
        java.util.Hashtable r1, $r7, $r9, $r16, $r23, $r24;
        java.util.Vector $r2, r3, r35;
        java.util.Enumeration r4;
        java.lang.String r5, $r15, $r22, $r32, $r34, $r42, $r44;
        java.lang.Object r6, $r8, $r31, $r41;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream $r10, $r17, $r25, $r26, $r36, $r45;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r27, $r28, $r29, $r30, $r33, $r37, $r38, $r39, $r40, $r43;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.util.Hashtable;
        $r2 = new java.util.Vector;
        specialinvoke $r2.<java.util.Vector: void <init>()>();
        r3 = $r2;
        $r7 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        if $r7 == null goto label8;

        r4 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration keys()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();
        r5 = (java.lang.String) $r8;
        r6 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);
        $r9 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        if r1 != $r9 goto label1;

        $r10 = <java.lang.System: java.io.PrintStream out>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label1:
        $z1 = r6 instanceof java.util.Hashtable;
        if $z1 == 0 goto label3;

        $r16 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        if r1 == $r16 goto label2;

        $r17 = <java.lang.System: java.io.PrintStream out>;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = {");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r22);

     label2:
        $r23 = (java.util.Hashtable) r6;
        specialinvoke r0.<sun.security.krb5.Config: void listTable(java.util.Hashtable)>($r23);
        $r24 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        if r1 == $r24 goto label6;

        $r25 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("\t}");
        goto label6;

     label3:
        $z2 = r6 instanceof java.lang.String;
        if $z2 == 0 goto label4;

        $r26 = <java.lang.System: java.io.PrintStream out>;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");
        $r31 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);
        $r32 = (java.lang.String) $r31;
        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r34);
        goto label6;

     label4:
        $z3 = r6 instanceof java.util.Vector;
        if $z3 == 0 goto label6;

        r35 = (java.util.Vector) r6;
        i0 = 0;

     label5:
        $i1 = virtualinvoke r35.<java.util.Vector: int size()>();
        if i0 >= $i1 goto label6;

        $r36 = <java.lang.System: java.io.PrintStream out>;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");
        $r41 = virtualinvoke r35.<java.util.Vector: java.lang.Object elementAt(int)>(i0);
        $r42 = (java.lang.String) $r41;
        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r44);
        i0 = i0 + 1;
        goto label5;

     label6:
        goto label0;

     label7:
        goto label9;

     label8:
        $r45 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>("Configuration file not found.");

     label9:
        return;
    }

    public int[] defaultEtype(java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2, r3, $r11, $r12, $r15, $r21, $r29, $r34;
        int[] r4;
        int i0, i1, i2, $i3, $i4, i5, $i6, $i7, i8, $i9, $i10, i11, $i12, $i13;
        java.util.StringTokenizer r5, $r13;
        java.util.ArrayList r6, $r14;
        boolean $z0, $z1, $z2, $z4, $z5;
        java.io.PrintStream $r7, $r17, $r24, $r30, $r35;
        java.lang.StringBuilder $r8, $r9, $r10, $r18, $r19, $r20, $r25, $r26, $r27, $r28, $r31, $r32, $r33;
        java.lang.Integer $r16, $r23;
        java.lang.Object $r22;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>(r1, "libdefaults");
        r3 = " ";
        if r2 != null goto label1;

        $z0 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z0 == 0 goto label0;

        $r7 = <java.lang.System: java.io.PrintStream out>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using builtin default etypes for ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label0:
        r4 = staticinvoke <sun.security.krb5.internal.crypto.EType: int[] getBuiltInDefaults()>();
        goto label11;

     label1:
        i0 = 0;

     label2:
        $i3 = virtualinvoke r2.<java.lang.String: int length()>();
        if i0 >= $i3 goto label4;

        $i4 = i0 + 1;
        $r12 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i0, $i4);
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(",");
        if $z1 == 0 goto label3;

        r3 = ",";
        goto label4;

     label3:
        i0 = i0 + 1;
        goto label2;

     label4:
        $r13 = new java.util.StringTokenizer;
        specialinvoke $r13.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, r3);
        r5 = $r13;
        i5 = virtualinvoke r5.<java.util.StringTokenizer: int countTokens()>();
        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>(i5);
        r6 = $r14;
        i1 = 0;

     label5:
        if i1 >= i5 goto label7;

        $r15 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>();
        i2 = virtualinvoke r0.<sun.security.krb5.Config: int getType(java.lang.String)>($r15);
        if i2 == -1 goto label6;

        $z2 = staticinvoke <sun.security.krb5.internal.crypto.EType: boolean isSupported(int)>(i2);
        if $z2 == 0 goto label6;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label6:
        i1 = i1 + 1;
        goto label5;

     label7:
        $i6 = virtualinvoke r6.<java.util.ArrayList: int size()>();
        if $i6 != 0 goto label9;

        $z4 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z4 == 0 goto label8;

        $r17 = <java.lang.System: java.io.PrintStream out>;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no supported default etypes for ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label8:
        return null;

     label9:
        $i7 = virtualinvoke r6.<java.util.ArrayList: int size()>();
        r4 = newarray (int)[$i7];
        i8 = 0;

     label10:
        $i9 = lengthof r4;
        if i8 >= $i9 goto label11;

        $r22 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i8);
        $r23 = (java.lang.Integer) $r22;
        $i10 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();
        r4[i8] = $i10;
        i8 = i8 + 1;
        goto label10;

     label11:
        $z5 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z5 == 0 goto label14;

        $r24 = <java.lang.System: java.io.PrintStream out>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("default etypes for ");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r24.<java.io.PrintStream: void print(java.lang.String)>($r29);
        i11 = 0;

     label12:
        $i12 = lengthof r4;
        if i11 >= $i12 goto label13;

        $r30 = <java.lang.System: java.io.PrintStream out>;
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $i13 = r4[i11];
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r30.<java.io.PrintStream: void print(java.lang.String)>($r34);
        i11 = i11 + 1;
        goto label12;

     label13:
        $r35 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>(".");

     label14:
        return r4;
    }

    public int getType(java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1;
        short s0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        s0 = -1;
        if r1 != null goto label0;

        return s0;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("d");
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("D");
        if $z1 == 0 goto label8;

     label1:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("des-cbc-crc");
        if $z2 == 0 goto label2;

        s0 = 1;
        goto label26;

     label2:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("des-cbc-md5");
        if $z3 == 0 goto label3;

        s0 = 3;
        goto label26;

     label3:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("des-mac");
        if $z4 == 0 goto label4;

        s0 = 4;
        goto label26;

     label4:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("des-mac-k");
        if $z5 == 0 goto label5;

        s0 = 5;
        goto label26;

     label5:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("des-cbc-md4");
        if $z6 == 0 goto label6;

        s0 = 2;
        goto label26;

     label6:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("des3-cbc-sha1");
        if $z7 != 0 goto label7;

        $z8 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("des3-hmac-sha1");
        if $z8 != 0 goto label7;

        $z9 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("des3-cbc-sha1-kd");
        if $z9 != 0 goto label7;

        $z10 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("des3-cbc-hmac-sha1-kd");
        if $z10 == 0 goto label26;

     label7:
        s0 = 16;
        goto label26;

     label8:
        $z11 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("a");
        if $z11 != 0 goto label9;

        $z12 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("A");
        if $z12 == 0 goto label15;

     label9:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("aes128-cts");
        if $z13 != 0 goto label10;

        $z14 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("aes128-cts-hmac-sha1-96");
        if $z14 == 0 goto label11;

     label10:
        s0 = 17;
        goto label26;

     label11:
        $z15 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("aes256-cts");
        if $z15 != 0 goto label12;

        $z16 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("aes256-cts-hmac-sha1-96");
        if $z16 == 0 goto label13;

     label12:
        s0 = 18;
        goto label26;

     label13:
        $z17 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("arcfour-hmac");
        if $z17 != 0 goto label14;

        $z18 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("arcfour-hmac-md5");
        if $z18 == 0 goto label26;

     label14:
        s0 = 23;
        goto label26;

     label15:
        $z19 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("rc4-hmac");
        if $z19 == 0 goto label16;

        s0 = 23;
        goto label26;

     label16:
        $z20 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("CRC32");
        if $z20 == 0 goto label17;

        s0 = 1;
        goto label26;

     label17:
        $z21 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("r");
        if $z21 != 0 goto label18;

        $z22 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("R");
        if $z22 == 0 goto label20;

     label18:
        $z23 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("rsa-md5");
        if $z23 == 0 goto label19;

        s0 = 7;
        goto label26;

     label19:
        $z24 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("rsa-md5-des");
        if $z24 == 0 goto label26;

        s0 = 8;
        goto label26;

     label20:
        $z25 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hmac-sha1-des3-kd");
        if $z25 == 0 goto label21;

        s0 = 12;
        goto label26;

     label21:
        $z26 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hmac-sha1-96-aes128");
        if $z26 == 0 goto label22;

        s0 = 15;
        goto label26;

     label22:
        $z27 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hmac-sha1-96-aes256");
        if $z27 == 0 goto label23;

        s0 = 16;
        goto label26;

     label23:
        $z28 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hmac-md5-rc4");
        if $z28 != 0 goto label24;

        $z29 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hmac-md5-arcfour");
        if $z29 != 0 goto label24;

        $z30 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hmac-md5-enc");
        if $z30 == 0 goto label25;

     label24:
        s0 = -138;
        goto label26;

     label25:
        $z31 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NULL");
        if $z31 == 0 goto label26;

        s0 = 0;

     label26:
        return s0;
    }

    public void resetDefaultRealm(java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, $r6;
        boolean $z0;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.io.PrintStream $r3;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        $z0 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z0 == 0 goto label0;

        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> Config try resetting default kdc ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label0:
        return;
    }

    public boolean useAddresses()
    {
        sun.security.krb5.Config r0;
        boolean z0, $z1, $z2, z3, $z4, $z5;
        java.lang.String r1, r2;

        r0 := @this: sun.security.krb5.Config;
        z0 = 0;
        r1 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>("no_addresses", "libdefaults");
        if r1 == null goto label0;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        z3 = $z2;
        if z3 != 0 goto label4;

        r2 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>("noaddresses", "libdefaults");
        if r2 == null goto label2;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");
        if $z4 == 0 goto label2;

        $z5 = 1;
        goto label3;

     label2:
        $z5 = 0;

     label3:
        z3 = $z5;

     label4:
        return z3;
    }

    public boolean useDNS(java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2, r3, $r4;
        boolean $z0, $z1;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>(r1, "libdefaults");
        if r2 != null goto label1;

        r3 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>("dns_fallback", "libdefaults");
        $r4 = "false";
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);
        if $z0 == 0 goto label0;

        return 0;

     label0:
        return 1;

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");
        return $z1;
    }

    public boolean useDNS_KDC()
    {
        sun.security.krb5.Config r0;
        boolean $z0;

        r0 := @this: sun.security.krb5.Config;
        $z0 = virtualinvoke r0.<sun.security.krb5.Config: boolean useDNS(java.lang.String)>("dns_lookup_kdc");
        return $z0;
    }

    public boolean useDNS_Realm()
    {
        sun.security.krb5.Config r0;
        boolean $z0;

        r0 := @this: sun.security.krb5.Config;
        $z0 = virtualinvoke r0.<sun.security.krb5.Config: boolean useDNS(java.lang.String)>("dns_lookup_realm");
        return $z0;
    }

    public java.lang.String getDefaultRealm() throws sun.security.krb5.KrbException
    {
        sun.security.krb5.Config r0;
        sun.security.krb5.KrbException r1, r3, $r6, $r9, r10;
        java.lang.String r2, $r4, $r5;
        boolean $z0;
        sun.security.krb5.Config$2 $r7;
        java.lang.Object $r8;

        r0 := @this: sun.security.krb5.Config;
        $r4 = r0.<sun.security.krb5.Config: java.lang.String defaultRealm>;
        if $r4 == null goto label0;

        $r5 = r0.<sun.security.krb5.Config: java.lang.String defaultRealm>;
        return $r5;

     label0:
        r1 = null;
        r2 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>("default_realm", "libdefaults");
        if r2 != null goto label4;

        $z0 = virtualinvoke r0.<sun.security.krb5.Config: boolean useDNS_Realm()>();
        if $z0 == 0 goto label4;

     label1:
        r2 = specialinvoke r0.<sun.security.krb5.Config: java.lang.String getRealmFromDNS()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        r1 = r3;

     label4:
        if r2 != null goto label5;

        $r7 = new sun.security.krb5.Config$2;
        specialinvoke $r7.<sun.security.krb5.Config$2: void <init>(sun.security.krb5.Config)>(r0);
        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r7);
        r2 = (java.lang.String) $r8;

     label5:
        if r2 != null goto label7;

        $r9 = new sun.security.krb5.KrbException;
        specialinvoke $r9.<sun.security.krb5.KrbException: void <init>(java.lang.String)>("Cannot locate default realm");
        r10 = $r9;
        if r1 == null goto label6;

        virtualinvoke r10.<sun.security.krb5.KrbException: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

     label6:
        throw r10;

     label7:
        return r2;

        catch sun.security.krb5.KrbException from label1 to label2 with label3;
    }

    public java.lang.String getKDCList(java.lang.String) throws sun.security.krb5.KrbException
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r3, $r5, $r6, $r10, $r11;
        sun.security.krb5.KrbException r2, r4, $r7, $r12, r13;
        boolean $z0, $z1;
        sun.security.krb5.Config$3 $r8;
        java.lang.Object $r9;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        r1 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefaultRealm()>();

     label0:
        $r5 = r0.<sun.security.krb5.Config: java.lang.String defaultRealm>;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);
        if $z0 == 0 goto label1;

        $r6 = r0.<sun.security.krb5.Config: java.lang.String defaultKDC>;
        return $r6;

     label1:
        r2 = null;
        r3 = virtualinvoke r0.<sun.security.krb5.Config: java.lang.String getDefault(java.lang.String,java.lang.String)>("kdc", r1);
        if r3 != null goto label5;

        $z1 = virtualinvoke r0.<sun.security.krb5.Config: boolean useDNS_KDC()>();
        if $z1 == 0 goto label5;

     label2:
        r3 = specialinvoke r0.<sun.security.krb5.Config: java.lang.String getKDCFromDNS(java.lang.String)>(r1);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;
        r4 = $r7;
        r2 = r4;

     label5:
        if r3 != null goto label6;

        $r8 = new sun.security.krb5.Config$3;
        specialinvoke $r8.<sun.security.krb5.Config$3: void <init>(sun.security.krb5.Config)>(r0);
        $r9 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r8);
        r3 = (java.lang.String) $r9;

     label6:
        if r3 != null goto label9;

        $r10 = r0.<sun.security.krb5.Config: java.lang.String defaultKDC>;
        if $r10 == null goto label7;

        $r11 = r0.<sun.security.krb5.Config: java.lang.String defaultKDC>;
        return $r11;

     label7:
        $r12 = new sun.security.krb5.KrbException;
        specialinvoke $r12.<sun.security.krb5.KrbException: void <init>(java.lang.String)>("Cannot locate KDC");
        r13 = $r12;
        if r2 == null goto label8;

        virtualinvoke r13.<sun.security.krb5.KrbException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

     label8:
        throw r13;

     label9:
        return r3;

        catch sun.security.krb5.KrbException from label2 to label3 with label4;
    }

    private java.lang.String getRealmFromDNS() throws sun.security.krb5.KrbException
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r6, r8, $r12, $r14, r16;
        null_type n0;
        java.net.UnknownHostException r2, $r9;
        java.lang.StringBuilder $r3, $r11, $r13;
        sun.security.krb5.KrbException r4, $r10, $r20;
        java.util.Iterator r5;
        java.net.InetAddress $r7;
        sun.net.dns.ResolverConfiguration $r17;
        java.util.List r18;
        boolean $z0;
        java.lang.Object $r19;

        r0 := @this: sun.security.krb5.Config;
        r1 = null;
        n0 = null;

     label0:
        $r7 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();
        r8 = virtualinvoke $r7.<java.net.InetAddress: java.lang.String getCanonicalHostName()>();

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r2 = $r9;
        $r10 = new sun.security.krb5.KrbException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate Kerberos realm: ");
        $r12 = virtualinvoke r2.<java.net.UnknownHostException: java.lang.String getMessage()>();
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<sun.security.krb5.KrbException: void <init>(int,java.lang.String)>(60, $r14);
        r4 = $r10;
        virtualinvoke r4.<sun.security.krb5.KrbException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);
        throw r4;

     label3:
        r16 = staticinvoke <sun.security.krb5.PrincipalName: java.lang.String mapHostToRealm(java.lang.String)>(r8);
        if r16 != null goto label7;

        $r17 = staticinvoke <sun.net.dns.ResolverConfiguration: sun.net.dns.ResolverConfiguration open()>();
        r18 = virtualinvoke $r17.<sun.net.dns.ResolverConfiguration: java.util.List searchlist()>();
        r5 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label6;

        $r19 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.lang.String) $r19;
        r1 = staticinvoke <sun.security.krb5.Config: java.lang.String checkRealm(java.lang.String)>(r6);
        if r1 == null goto label5;

        goto label6;

     label5:
        goto label4;

     label6:
        goto label8;

     label7:
        r1 = staticinvoke <sun.security.krb5.Config: java.lang.String checkRealm(java.lang.String)>(r16);

     label8:
        if r1 != null goto label9;

        $r20 = new sun.security.krb5.KrbException;
        specialinvoke $r20.<sun.security.krb5.KrbException: void <init>(int,java.lang.String)>(60, "Unable to locate Kerberos realm");
        throw $r20;

     label9:
        return r1;

        catch java.net.UnknownHostException from label0 to label1 with label2;
    }

    private static java.lang.String checkRealm(java.lang.String)
    {
        java.lang.String r0, r3, $r7, $r8, $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r5, $r6;
        java.lang.String[] r2;
        int i0, $i1;
        java.io.PrintStream $r4;

        r0 := @parameter0: java.lang.String;
        $z0 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z0 == 0 goto label0;

        $r4 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRealmFromDNS: trying ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label0:
        r2 = null;
        r3 = r0;

     label1:
        if r2 != null goto label2;

        if r3 == null goto label2;

        r2 = staticinvoke <sun.security.krb5.KrbServiceLocator: java.lang.String[] getKerberosService(java.lang.String)>(r3);
        r3 = staticinvoke <sun.security.krb5.Realm: java.lang.String parseRealmComponent(java.lang.String)>(r3);
        goto label1;

     label2:
        if r2 == null goto label5;

        i0 = 0;

     label3:
        $i1 = lengthof r2;
        if i0 >= $i1 goto label5;

        $r8 = r2[i0];
        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);
        if $z1 == 0 goto label4;

        $r9 = r2[i0];
        return $r9;

     label4:
        i0 = i0 + 1;
        goto label3;

     label5:
        return null;
    }

    private java.lang.String getKDCFromDNS(java.lang.String) throws sun.security.krb5.KrbException
    {
        sun.security.krb5.Config r0;
        java.lang.String r1, r2, $r10, $r13, $r14, r17;
        null_type n0;
        java.lang.StringBuilder $r3, $r8, $r9, $r11, $r12, $r15, $r16;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r4, $r6;
        java.lang.String[] r5;
        sun.security.krb5.KrbException $r7;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        r2 = "";
        n0 = null;
        $z0 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z0 == 0 goto label0;

        $r4 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("getKDCFromDNS using UDP");

     label0:
        r5 = staticinvoke <sun.security.krb5.KrbServiceLocator: java.lang.String[] getKerberosService(java.lang.String,java.lang.String)>(r1, "_udp");
        if r5 != null goto label2;

        $z1 = <sun.security.krb5.Config: boolean DEBUG>;
        if $z1 == 0 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("getKDCFromDNS using TCP");

     label1:
        r5 = staticinvoke <sun.security.krb5.KrbServiceLocator: java.lang.String[] getKerberosService(java.lang.String,java.lang.String)>(r1, "_tcp");

     label2:
        if r5 != null goto label3;

        $r7 = new sun.security.krb5.KrbException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to locate KDC for realm ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<sun.security.krb5.KrbException: void <init>(int,java.lang.String)>(60, $r10);
        throw $r7;

     label3:
        $i1 = lengthof r5;
        if $i1 != 0 goto label4;

        return null;

     label4:
        i0 = 0;

     label5:
        $i2 = lengthof r5;
        if i0 >= $i2 goto label6;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r13 = r5[i0];
        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();
        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        i0 = i0 + 1;
        goto label5;

     label6:
        r17 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();
        $z2 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z2 == 0 goto label7;

        return null;

     label7:
        return r17;
    }

    private boolean fileExists(java.lang.String)
    {
        sun.security.krb5.Config r0;
        java.lang.String r1;
        sun.security.krb5.Config$FileExistsAction $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: sun.security.krb5.Config;
        r1 := @parameter0: java.lang.String;
        $r2 = new sun.security.krb5.Config$FileExistsAction;
        specialinvoke $r2.<sun.security.krb5.Config$FileExistsAction: void <init>(java.lang.String)>(r1);
        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);
        $r4 = (java.lang.Boolean) $r3;
        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();
        return $z0;
    }

    public java.lang.String toString()
    {
        sun.security.krb5.Config r0;
        java.lang.StringBuffer $r1, r2;
        java.util.Hashtable $r3;
        java.lang.String $r4;

        r0 := @this: sun.security.krb5.Config;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        $r3 = r0.<sun.security.krb5.Config: java.util.Hashtable stanzaTable>;
        staticinvoke <sun.security.krb5.Config: void toStringInternal(java.lang.String,java.lang.Object,java.lang.StringBuffer)>("", $r3, r2);
        $r4 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r4;
    }

    private static void toStringInternal(java.lang.String, java.lang.Object, java.lang.StringBuffer)
    {
        java.lang.String r0, $r18;
        java.lang.Object r1, r5, r6, $r19;
        java.lang.StringBuffer r2, $r7, $r11, $r12, $r13, $r20;
        java.util.Hashtable r3;
        java.util.Iterator r4;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3, z4;
        java.util.Set $r10;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.util.Vector r22;
        java.lang.Object[] r24;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.Object;
        r2 := @parameter2: java.lang.StringBuffer;
        $z0 = r1 instanceof java.lang.String;
        if $z0 == 0 goto label0;

        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);
        goto label7;

     label0:
        $z1 = r1 instanceof java.util.Hashtable;
        if $z1 == 0 goto label3;

        r3 = (java.util.Hashtable) r1;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");
        $r10 = virtualinvoke r3.<java.util.Hashtable: java.util.Set keySet()>();
        r4 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label2;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $r11 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);
        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r5);
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        $r19 = virtualinvoke r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);
        staticinvoke <sun.security.krb5.Config: void toStringInternal(java.lang.String,java.lang.Object,java.lang.StringBuffer)>($r18, $r19, r2);
        goto label1;

     label2:
        $r20 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}\n");
        goto label7;

     label3:
        $z3 = r1 instanceof java.util.Vector;
        if $z3 == 0 goto label7;

        r22 = (java.util.Vector) r1;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");
        z4 = 1;
        r24 = virtualinvoke r22.<java.util.Vector: java.lang.Object[] toArray()>();
        i0 = lengthof r24;
        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        r6 = r24[i1];
        if z4 != 0 goto label5;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label5:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r6);
        z4 = 0;
        i1 = i1 + 1;
        goto label4;

     label6:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]\n");

     label7:
        return;
    }

    static void <clinit>()
    {
        boolean $z0;

        <sun.security.krb5.Config: sun.security.krb5.Config singleton> = null;
        $z0 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        <sun.security.krb5.Config: boolean DEBUG> = $z0;
        return;
    }
}
