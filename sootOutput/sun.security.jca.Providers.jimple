public class sun.security.jca.Providers extends java.lang.Object
{
    private static final java.lang.ThreadLocal threadLists;
    private static volatile int threadListsUsed;
    private static volatile sun.security.jca.ProviderList providerList;
    private static final java.lang.String BACKUP_PROVIDER_CLASSNAME;
    private static final java.lang.String[] jarVerificationProviders;

    private void <init>()
    {
        sun.security.jca.Providers r0;

        r0 := @this: sun.security.jca.Providers;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.security.Provider getSunProvider()
    {
        java.lang.String[] $r0;
        java.lang.Class r1, r2;
        java.lang.String $r3;
        java.lang.Object $r4, $r8;
        java.security.Provider $r5, $r9;
        java.lang.Exception $r6, r7, $r10, r11;
        java.lang.RuntimeException $r12;

     label0:
        $r0 = <sun.security.jca.Providers: java.lang.String[] jarVerificationProviders>;
        $r3 = $r0[0];
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);
        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>();
        $r5 = (java.security.Provider) $r4;

     label1:
        return $r5;

     label2:
        $r6 := @caughtexception;
        r7 = $r6;

     label3:
        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("sun.security.provider.VerificationProvider");
        $r8 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();
        $r9 = (java.security.Provider) $r8;

     label4:
        return $r9;

     label5:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = new java.lang.RuntimeException;
        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Sun provider not found", r7);
        throw $r12;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.Object startJarVerification()
    {
        sun.security.jca.ProviderList r0, r2, $r3;
        java.lang.String[] $r1;

        r0 = staticinvoke <sun.security.jca.Providers: sun.security.jca.ProviderList getProviderList()>();
        $r1 = <sun.security.jca.Providers: java.lang.String[] jarVerificationProviders>;
        r2 = virtualinvoke r0.<sun.security.jca.ProviderList: sun.security.jca.ProviderList getJarList(java.lang.String[])>($r1);
        $r3 = staticinvoke <sun.security.jca.Providers: sun.security.jca.ProviderList beginThreadProviderList(sun.security.jca.ProviderList)>(r2);
        return $r3;
    }

    public static void stopJarVerification(java.lang.Object)
    {
        java.lang.Object r0;
        sun.security.jca.ProviderList $r1;

        r0 := @parameter0: java.lang.Object;
        $r1 = (sun.security.jca.ProviderList) r0;
        staticinvoke <sun.security.jca.Providers: void endThreadProviderList(sun.security.jca.ProviderList)>($r1);
        return;
    }

    public static sun.security.jca.ProviderList getProviderList()
    {
        sun.security.jca.ProviderList r0;

        r0 = staticinvoke <sun.security.jca.Providers: sun.security.jca.ProviderList getThreadProviderList()>();
        if r0 != null goto label0;

        r0 = staticinvoke <sun.security.jca.Providers: sun.security.jca.ProviderList getSystemProviderList()>();

     label0:
        return r0;
    }

    public static void setProviderList(sun.security.jca.ProviderList)
    {
        sun.security.jca.ProviderList r0, $r1;

        r0 := @parameter0: sun.security.jca.ProviderList;
        $r1 = staticinvoke <sun.security.jca.Providers: sun.security.jca.ProviderList getThreadProviderList()>();
        if $r1 != null goto label0;

        staticinvoke <sun.security.jca.Providers: void setSystemProviderList(sun.security.jca.ProviderList)>(r0);
        goto label1;

     label0:
        staticinvoke <sun.security.jca.Providers: void changeThreadProviderList(sun.security.jca.ProviderList)>(r0);

     label1:
        return;
    }

    public static sun.security.jca.ProviderList getFullProviderList()
    {
        java.lang.Class $r0, r1;
        sun.security.jca.ProviderList r2, r3, r7, r8;
        java.lang.Throwable r4, $r6;

        $r0 = class "sun/security/jca/Providers";
        r1 = $r0;
        entermonitor $r0;

     label0:
        r2 = staticinvoke <sun.security.jca.Providers: sun.security.jca.ProviderList getThreadProviderList()>();
        if r2 == null goto label3;

        r3 = virtualinvoke r2.<sun.security.jca.ProviderList: sun.security.jca.ProviderList removeInvalid()>();
        if r3 == r2 goto label1;

        staticinvoke <sun.security.jca.Providers: void changeThreadProviderList(sun.security.jca.ProviderList)>(r3);
        r2 = r3;

     label1:
        exitmonitor r1;

     label2:
        return r2;

     label3:
        exitmonitor r1;

     label4:
        goto label8;

     label5:
        $r6 := @caughtexception;

     label6:
        r4 = $r6;
        exitmonitor r1;

     label7:
        throw r4;

     label8:
        r7 = staticinvoke <sun.security.jca.Providers: sun.security.jca.ProviderList getSystemProviderList()>();
        r8 = virtualinvoke r7.<sun.security.jca.ProviderList: sun.security.jca.ProviderList removeInvalid()>();
        if r8 == r7 goto label9;

        staticinvoke <sun.security.jca.Providers: void setSystemProviderList(sun.security.jca.ProviderList)>(r8);
        r7 = r8;

     label9:
        return r7;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private static sun.security.jca.ProviderList getSystemProviderList()
    {
        sun.security.jca.ProviderList $r0;

        $r0 = <sun.security.jca.Providers: sun.security.jca.ProviderList providerList>;
        return $r0;
    }

    private static void setSystemProviderList(sun.security.jca.ProviderList)
    {
        sun.security.jca.ProviderList r0;

        r0 := @parameter0: sun.security.jca.ProviderList;
        <sun.security.jca.Providers: sun.security.jca.ProviderList providerList> = r0;
        return;
    }

    public static sun.security.jca.ProviderList getThreadProviderList()
    {
        int $i0;
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        sun.security.jca.ProviderList $r2;

        $i0 = <sun.security.jca.Providers: int threadListsUsed>;
        if $i0 != 0 goto label0;

        return null;

     label0:
        $r0 = <sun.security.jca.Providers: java.lang.ThreadLocal threadLists>;
        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();
        $r2 = (sun.security.jca.ProviderList) $r1;
        return $r2;
    }

    private static void changeThreadProviderList(sun.security.jca.ProviderList)
    {
        sun.security.jca.ProviderList r0;
        java.lang.ThreadLocal $r1;

        r0 := @parameter0: sun.security.jca.ProviderList;
        $r1 = <sun.security.jca.Providers: java.lang.ThreadLocal threadLists>;
        virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>(r0);
        return;
    }

    public static synchronized sun.security.jca.ProviderList beginThreadProviderList(sun.security.jca.ProviderList)
    {
        sun.security.jca.ProviderList r0, r3;
        sun.security.util.Debug $r1, $r4;
        java.lang.StringBuilder $r2, $r5, $r6;
        java.lang.String $r7;
        java.lang.ThreadLocal $r8, $r10;
        java.lang.Object $r9;
        int $i0, $i1;

        r0 := @parameter0: sun.security.jca.ProviderList;
        $r1 = <sun.security.jca.ProviderList: sun.security.util.Debug debug>;
        if $r1 == null goto label0;

        $r4 = <sun.security.jca.ProviderList: sun.security.util.Debug debug>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreadLocal providers: ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<sun.security.util.Debug: void println(java.lang.String)>($r7);

     label0:
        $r8 = <sun.security.jca.Providers: java.lang.ThreadLocal threadLists>;
        $r9 = virtualinvoke $r8.<java.lang.ThreadLocal: java.lang.Object get()>();
        r3 = (sun.security.jca.ProviderList) $r9;
        $i0 = <sun.security.jca.Providers: int threadListsUsed>;
        $i1 = $i0 + 1;
        <sun.security.jca.Providers: int threadListsUsed> = $i1;
        $r10 = <sun.security.jca.Providers: java.lang.ThreadLocal threadLists>;
        virtualinvoke $r10.<java.lang.ThreadLocal: void set(java.lang.Object)>(r0);
        return r3;
    }

    public static synchronized void endThreadProviderList(sun.security.jca.ProviderList)
    {
        sun.security.jca.ProviderList r0;
        sun.security.util.Debug $r1, $r2, $r4, $r5;
        java.lang.ThreadLocal $r3, $r10;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        int $i0, $i1;

        r0 := @parameter0: sun.security.jca.ProviderList;
        if r0 != null goto label1;

        $r1 = <sun.security.jca.ProviderList: sun.security.util.Debug debug>;
        if $r1 == null goto label0;

        $r2 = <sun.security.jca.ProviderList: sun.security.util.Debug debug>;
        virtualinvoke $r2.<sun.security.util.Debug: void println(java.lang.String)>("Disabling ThreadLocal providers");

     label0:
        $r3 = <sun.security.jca.Providers: java.lang.ThreadLocal threadLists>;
        virtualinvoke $r3.<java.lang.ThreadLocal: void remove()>();
        goto label3;

     label1:
        $r4 = <sun.security.jca.ProviderList: sun.security.util.Debug debug>;
        if $r4 == null goto label2;

        $r5 = <sun.security.jca.ProviderList: sun.security.util.Debug debug>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restoring previous ThreadLocal providers: ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<sun.security.util.Debug: void println(java.lang.String)>($r9);

     label2:
        $r10 = <sun.security.jca.Providers: java.lang.ThreadLocal threadLists>;
        virtualinvoke $r10.<java.lang.ThreadLocal: void set(java.lang.Object)>(r0);

     label3:
        $i0 = <sun.security.jca.Providers: int threadListsUsed>;
        $i1 = $i0 - 1;
        <sun.security.jca.Providers: int threadListsUsed> = $i1;
        return;
    }

    static void <clinit>()
    {
        java.lang.InheritableThreadLocal $r0;
        sun.security.jca.ProviderList $r1, $r2;
        java.lang.String[] $r3;

        $r0 = new java.lang.InheritableThreadLocal;
        specialinvoke $r0.<java.lang.InheritableThreadLocal: void <init>()>();
        <sun.security.jca.Providers: java.lang.ThreadLocal threadLists> = $r0;
        $r1 = <sun.security.jca.ProviderList: sun.security.jca.ProviderList EMPTY>;
        <sun.security.jca.Providers: sun.security.jca.ProviderList providerList> = $r1;
        $r2 = staticinvoke <sun.security.jca.ProviderList: sun.security.jca.ProviderList fromSecurityProperties()>();
        <sun.security.jca.Providers: sun.security.jca.ProviderList providerList> = $r2;
        $r3 = newarray (java.lang.String)[4];
        $r3[0] = "sun.security.provider.Sun";
        $r3[1] = "sun.security.rsa.SunRsaSign";
        $r3[2] = "sun.security.ec.SunEC";
        $r3[3] = "sun.security.provider.VerificationProvider";
        <sun.security.jca.Providers: java.lang.String[] jarVerificationProviders> = $r3;
        return;
    }
}
