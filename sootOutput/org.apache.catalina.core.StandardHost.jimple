public class org.apache.catalina.core.StandardHost extends org.apache.catalina.core.ContainerBase implements org.apache.catalina.Host
{
    private static final org.apache.juli.logging.Log log;
    private java.lang.String[] aliases;
    private final java.lang.Object aliasesLock;
    private java.lang.String appBase;
    private java.lang.String xmlBase;
    private boolean autoDeploy;
    private java.lang.String configClass;
    private java.lang.String contextClass;
    private boolean deployOnStartup;
    private boolean deployXML;
    private boolean copyXML;
    private java.lang.String errorReportValveClass;
    private static final java.lang.String info;
    private boolean unpackWARs;
    private java.lang.String workDir;
    private boolean createDirs;
    private java.util.Map childClassLoaders;
    private java.util.regex.Pattern deployIgnore;
    private boolean undeployOldVersions;
    private boolean failCtxIfServletStartFails;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/core/StandardHost");
        <org.apache.catalina.core.StandardHost: org.apache.juli.logging.Log log> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String[] $r1;
        java.lang.Object $r2;
        boolean $z0, $z1;
        java.util.WeakHashMap $r4;
        org.apache.catalina.Pipeline $r5;
        org.apache.catalina.core.StandardHostValve $r6;

        r0 := @this: org.apache.catalina.core.StandardHost;
        specialinvoke r0.<org.apache.catalina.core.ContainerBase: void <init>()>();
        $r1 = newarray (java.lang.String)[0];
        r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases> = $r1;
        $r2 = new java.lang.Object;
        specialinvoke $r2.<java.lang.Object: void <init>()>();
        r0.<org.apache.catalina.core.StandardHost: java.lang.Object aliasesLock> = $r2;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String appBase> = "webapps";
        r0.<org.apache.catalina.core.StandardHost: java.lang.String xmlBase> = null;
        r0.<org.apache.catalina.core.StandardHost: boolean autoDeploy> = 1;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String configClass> = "org.apache.catalina.startup.ContextConfig";
        r0.<org.apache.catalina.core.StandardHost: java.lang.String contextClass> = "org.apache.catalina.core.StandardContext";
        r0.<org.apache.catalina.core.StandardHost: boolean deployOnStartup> = 1;
        $z0 = <org.apache.catalina.Globals: boolean IS_SECURITY_ENABLED>;
        if $z0 == 0 goto label0;

        $z1 = 0;
        goto label1;

     label0:
        $z1 = 1;

     label1:
        r0.<org.apache.catalina.core.StandardHost: boolean deployXML> = $z1;
        r0.<org.apache.catalina.core.StandardHost: boolean copyXML> = 0;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String errorReportValveClass> = "org.apache.catalina.valves.ErrorReportValve";
        r0.<org.apache.catalina.core.StandardHost: boolean unpackWARs> = 1;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String workDir> = null;
        r0.<org.apache.catalina.core.StandardHost: boolean createDirs> = 1;
        $r4 = new java.util.WeakHashMap;
        specialinvoke $r4.<java.util.WeakHashMap: void <init>()>();
        r0.<org.apache.catalina.core.StandardHost: java.util.Map childClassLoaders> = $r4;
        r0.<org.apache.catalina.core.StandardHost: java.util.regex.Pattern deployIgnore> = null;
        r0.<org.apache.catalina.core.StandardHost: boolean undeployOldVersions> = 0;
        r0.<org.apache.catalina.core.StandardHost: boolean failCtxIfServletStartFails> = 0;
        $r5 = r0.<org.apache.catalina.core.StandardHost: org.apache.catalina.Pipeline pipeline>;
        $r6 = new org.apache.catalina.core.StandardHostValve;
        specialinvoke $r6.<org.apache.catalina.core.StandardHostValve: void <init>()>();
        interfaceinvoke $r5.<org.apache.catalina.Pipeline: void setBasic(org.apache.catalina.Valve)>($r6);
        return;
    }

    public boolean getUndeployOldVersions()
    {
        org.apache.catalina.core.StandardHost r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $z0 = r0.<org.apache.catalina.core.StandardHost: boolean undeployOldVersions>;
        return $z0;
    }

    public void setUndeployOldVersions(boolean)
    {
        org.apache.catalina.core.StandardHost r0;
        boolean z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.core.StandardHost: boolean undeployOldVersions> = z0;
        return;
    }

    public java.util.concurrent.ExecutorService getStartStopExecutor()
    {
        org.apache.catalina.core.StandardHost r0;
        java.util.concurrent.ThreadPoolExecutor $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.util.concurrent.ThreadPoolExecutor startStopExecutor>;
        return $r1;
    }

    public java.lang.String getAppBase()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.lang.String appBase>;
        return $r1;
    }

    public void setAppBase(java.lang.String)
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1, r2, $r3, $r7, $r8, $r10;
        boolean $z0;
        org.apache.juli.logging.Log $r4;
        org.apache.tomcat.util.res.StringManager $r5;
        java.lang.Object[] $r6;
        java.beans.PropertyChangeSupport $r9;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: java.lang.String;
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 == 0 goto label0;

        $r4 = <org.apache.catalina.core.StandardHost: org.apache.juli.logging.Log log>;
        $r5 = <org.apache.catalina.core.StandardHost: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = newarray (java.lang.Object)[1];
        $r7 = virtualinvoke r0.<org.apache.catalina.core.StandardHost: java.lang.String getName()>();
        $r6[0] = $r7;
        $r8 = virtualinvoke $r5.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardHost.problematicAppBase", $r6);
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r8);

     label0:
        r2 = r0.<org.apache.catalina.core.StandardHost: java.lang.String appBase>;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String appBase> = r1;
        $r9 = r0.<org.apache.catalina.core.StandardHost: java.beans.PropertyChangeSupport support>;
        $r10 = r0.<org.apache.catalina.core.StandardHost: java.lang.String appBase>;
        virtualinvoke $r9.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("appBase", r2, $r10);
        return;
    }

    public java.lang.String getXmlBase()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.lang.String xmlBase>;
        return $r1;
    }

    public void setXmlBase(java.lang.String)
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1, r2, $r4;
        java.beans.PropertyChangeSupport $r3;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: java.lang.String;
        r2 = r0.<org.apache.catalina.core.StandardHost: java.lang.String xmlBase>;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String xmlBase> = r1;
        $r3 = r0.<org.apache.catalina.core.StandardHost: java.beans.PropertyChangeSupport support>;
        $r4 = r0.<org.apache.catalina.core.StandardHost: java.lang.String xmlBase>;
        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("xmlBase", r2, $r4);
        return;
    }

    public boolean getCreateDirs()
    {
        org.apache.catalina.core.StandardHost r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $z0 = r0.<org.apache.catalina.core.StandardHost: boolean createDirs>;
        return $z0;
    }

    public void setCreateDirs(boolean)
    {
        org.apache.catalina.core.StandardHost r0;
        boolean z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.core.StandardHost: boolean createDirs> = z0;
        return;
    }

    public boolean getAutoDeploy()
    {
        org.apache.catalina.core.StandardHost r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $z0 = r0.<org.apache.catalina.core.StandardHost: boolean autoDeploy>;
        return $z0;
    }

    public void setAutoDeploy(boolean)
    {
        org.apache.catalina.core.StandardHost r0;
        boolean z0, z1, $z2;
        java.beans.PropertyChangeSupport $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        z0 := @parameter0: boolean;
        z1 = r0.<org.apache.catalina.core.StandardHost: boolean autoDeploy>;
        r0.<org.apache.catalina.core.StandardHost: boolean autoDeploy> = z0;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.beans.PropertyChangeSupport support>;
        $z2 = r0.<org.apache.catalina.core.StandardHost: boolean autoDeploy>;
        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,boolean,boolean)>("autoDeploy", z1, $z2);
        return;
    }

    public java.lang.String getConfigClass()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.lang.String configClass>;
        return $r1;
    }

    public void setConfigClass(java.lang.String)
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1, r2, $r4;
        java.beans.PropertyChangeSupport $r3;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: java.lang.String;
        r2 = r0.<org.apache.catalina.core.StandardHost: java.lang.String configClass>;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String configClass> = r1;
        $r3 = r0.<org.apache.catalina.core.StandardHost: java.beans.PropertyChangeSupport support>;
        $r4 = r0.<org.apache.catalina.core.StandardHost: java.lang.String configClass>;
        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("configClass", r2, $r4);
        return;
    }

    public java.lang.String getContextClass()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.lang.String contextClass>;
        return $r1;
    }

    public void setContextClass(java.lang.String)
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1, r2, $r4;
        java.beans.PropertyChangeSupport $r3;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: java.lang.String;
        r2 = r0.<org.apache.catalina.core.StandardHost: java.lang.String contextClass>;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String contextClass> = r1;
        $r3 = r0.<org.apache.catalina.core.StandardHost: java.beans.PropertyChangeSupport support>;
        $r4 = r0.<org.apache.catalina.core.StandardHost: java.lang.String contextClass>;
        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("contextClass", r2, $r4);
        return;
    }

    public boolean getDeployOnStartup()
    {
        org.apache.catalina.core.StandardHost r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $z0 = r0.<org.apache.catalina.core.StandardHost: boolean deployOnStartup>;
        return $z0;
    }

    public void setDeployOnStartup(boolean)
    {
        org.apache.catalina.core.StandardHost r0;
        boolean z0, z1, $z2;
        java.beans.PropertyChangeSupport $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        z0 := @parameter0: boolean;
        z1 = r0.<org.apache.catalina.core.StandardHost: boolean deployOnStartup>;
        r0.<org.apache.catalina.core.StandardHost: boolean deployOnStartup> = z0;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.beans.PropertyChangeSupport support>;
        $z2 = r0.<org.apache.catalina.core.StandardHost: boolean deployOnStartup>;
        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,boolean,boolean)>("deployOnStartup", z1, $z2);
        return;
    }

    public boolean isDeployXML()
    {
        org.apache.catalina.core.StandardHost r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $z0 = r0.<org.apache.catalina.core.StandardHost: boolean deployXML>;
        return $z0;
    }

    public void setDeployXML(boolean)
    {
        org.apache.catalina.core.StandardHost r0;
        boolean z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.core.StandardHost: boolean deployXML> = z0;
        return;
    }

    public boolean isCopyXML()
    {
        org.apache.catalina.core.StandardHost r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $z0 = r0.<org.apache.catalina.core.StandardHost: boolean copyXML>;
        return $z0;
    }

    public void setCopyXML(boolean)
    {
        org.apache.catalina.core.StandardHost r0;
        boolean z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.core.StandardHost: boolean copyXML> = z0;
        return;
    }

    public java.lang.String getErrorReportValveClass()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.lang.String errorReportValveClass>;
        return $r1;
    }

    public void setErrorReportValveClass(java.lang.String)
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1, r2, $r4;
        java.beans.PropertyChangeSupport $r3;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: java.lang.String;
        r2 = r0.<org.apache.catalina.core.StandardHost: java.lang.String errorReportValveClass>;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String errorReportValveClass> = r1;
        $r3 = r0.<org.apache.catalina.core.StandardHost: java.beans.PropertyChangeSupport support>;
        $r4 = r0.<org.apache.catalina.core.StandardHost: java.lang.String errorReportValveClass>;
        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("errorReportValveClass", r2, $r4);
        return;
    }

    public java.lang.String getName()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.lang.String name>;
        return $r1;
    }

    public void setName(java.lang.String)
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1, r3, $r5, r7, $r9;
        org.apache.tomcat.util.res.StringManager $r2;
        java.lang.IllegalArgumentException $r4;
        java.util.Locale $r6;
        java.beans.PropertyChangeSupport $r8;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.catalina.core.StandardHost: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardHost.nullName");
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r4;

     label0:
        $r6 = <java.util.Locale: java.util.Locale ENGLISH>;
        r7 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);
        r3 = r0.<org.apache.catalina.core.StandardHost: java.lang.String name>;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String name> = r7;
        $r8 = r0.<org.apache.catalina.core.StandardHost: java.beans.PropertyChangeSupport support>;
        $r9 = r0.<org.apache.catalina.core.StandardHost: java.lang.String name>;
        virtualinvoke $r8.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", r3, $r9);
        return;
    }

    public boolean isUnpackWARs()
    {
        org.apache.catalina.core.StandardHost r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $z0 = r0.<org.apache.catalina.core.StandardHost: boolean unpackWARs>;
        return $z0;
    }

    public void setUnpackWARs(boolean)
    {
        org.apache.catalina.core.StandardHost r0;
        boolean z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.core.StandardHost: boolean unpackWARs> = z0;
        return;
    }

    public java.lang.String getWorkDir()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.lang.String workDir>;
        return $r1;
    }

    public void setWorkDir(java.lang.String)
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String workDir> = r1;
        return;
    }

    public java.lang.String getDeployIgnore()
    {
        org.apache.catalina.core.StandardHost r0;
        java.util.regex.Pattern $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.util.regex.Pattern deployIgnore>;
        if $r1 != null goto label0;

        return null;

     label0:
        $r2 = r0.<org.apache.catalina.core.StandardHost: java.util.regex.Pattern deployIgnore>;
        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.lang.String toString()>();
        return $r3;
    }

    public java.util.regex.Pattern getDeployIgnorePattern()
    {
        org.apache.catalina.core.StandardHost r0;
        java.util.regex.Pattern $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.util.regex.Pattern deployIgnore>;
        return $r1;
    }

    public void setDeployIgnore(java.lang.String)
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1, r2;
        java.util.regex.Pattern $r3, $r4, $r5;
        java.beans.PropertyChangeSupport $r6;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.catalina.core.StandardHost: java.util.regex.Pattern deployIgnore>;
        if $r3 != null goto label0;

        r2 = null;
        goto label1;

     label0:
        $r4 = r0.<org.apache.catalina.core.StandardHost: java.util.regex.Pattern deployIgnore>;
        r2 = virtualinvoke $r4.<java.util.regex.Pattern: java.lang.String toString()>();

     label1:
        if r1 != null goto label2;

        r0.<org.apache.catalina.core.StandardHost: java.util.regex.Pattern deployIgnore> = null;
        goto label3;

     label2:
        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        r0.<org.apache.catalina.core.StandardHost: java.util.regex.Pattern deployIgnore> = $r5;

     label3:
        $r6 = r0.<org.apache.catalina.core.StandardHost: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r6.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("deployIgnore", r2, r1);
        return;
    }

    public boolean isFailCtxIfServletStartFails()
    {
        org.apache.catalina.core.StandardHost r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $z0 = r0.<org.apache.catalina.core.StandardHost: boolean failCtxIfServletStartFails>;
        return $z0;
    }

    public void setFailCtxIfServletStartFails(boolean)
    {
        org.apache.catalina.core.StandardHost r0;
        boolean z0, z1;
        java.beans.PropertyChangeSupport $r1;

        r0 := @this: org.apache.catalina.core.StandardHost;
        z0 := @parameter0: boolean;
        z1 = r0.<org.apache.catalina.core.StandardHost: boolean failCtxIfServletStartFails>;
        r0.<org.apache.catalina.core.StandardHost: boolean failCtxIfServletStartFails> = z0;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.beans.PropertyChangeSupport support>;
        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,boolean,boolean)>("failCtxIfServletStartFails", z1, z0);
        return;
    }

    public void addAlias(java.lang.String)
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1, r4, $r7, $r12;
        java.util.Locale $r2;
        java.lang.Object r3, $r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String[] $r6, $r8, $r9, r10, $r11, $r13, $r14;
        boolean $z0;
        java.lang.Throwable $r15;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: java.lang.String;
        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;
        r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);
        $r5 = r0.<org.apache.catalina.core.StandardHost: java.lang.Object aliasesLock>;
        r3 = $r5;
        entermonitor $r5;

     label0:
        i0 = 0;
        goto label4;

     label1:
        $r6 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $r7 = $r6[i0];
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        if $z0 == 0 goto label3;

        exitmonitor r3;

     label2:
        return;

     label3:
        i0 = i0 + 1;

     label4:
        $r8 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $i2 = lengthof $r8;
        if i0 < $i2 goto label1;

        $r9 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $i3 = lengthof $r9;
        $i4 = $i3 + 1;
        r10 = newarray (java.lang.String)[$i4];
        i1 = 0;
        goto label6;

     label5:
        $r11 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $r12 = $r11[i1];
        r10[i1] = $r12;
        i1 = i1 + 1;

     label6:
        $r13 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $i5 = lengthof $r13;
        if i1 < $i5 goto label5;

        $r14 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $i6 = lengthof $r14;
        r10[$i6] = r4;
        r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases> = r10;
        exitmonitor r3;

     label7:
        goto label11;

     label8:
        $r15 := @caughtexception;

     label9:
        exitmonitor r3;

     label10:
        throw $r15;

     label11:
        virtualinvoke r0.<org.apache.catalina.core.StandardHost: void fireContainerEvent(java.lang.String,java.lang.Object)>("addAlias", r4);
        return;

        catch java.lang.Throwable from label0 to label2 with label8;
        catch java.lang.Throwable from label3 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
    }

    public void addChild(org.apache.catalina.Container)
    {
        org.apache.catalina.core.StandardHost r0;
        org.apache.catalina.Container r1;
        org.apache.catalina.core.StandardHost$MemoryLeakTrackingListener $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        org.apache.tomcat.util.res.StringManager $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: org.apache.catalina.Container;
        $r2 = new org.apache.catalina.core.StandardHost$MemoryLeakTrackingListener;
        specialinvoke $r2.<org.apache.catalina.core.StandardHost$MemoryLeakTrackingListener: void <init>(org.apache.catalina.core.StandardHost,org.apache.catalina.core.StandardHost$MemoryLeakTrackingListener)>(r0, null);
        interfaceinvoke r1.<org.apache.catalina.Container: void addLifecycleListener(org.apache.catalina.LifecycleListener)>($r2);
        $z0 = r1 instanceof org.apache.catalina.Context;
        if $z0 != 0 goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        $r4 = <org.apache.catalina.core.StandardHost: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = virtualinvoke $r4.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("standardHost.notContext");
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r3;

     label0:
        specialinvoke r0.<org.apache.catalina.core.ContainerBase: void addChild(org.apache.catalina.Container)>(r1);
        return;
    }

    public java.lang.String[] findReloadedContextMemoryLeaks()
    {
        org.apache.catalina.core.StandardHost r0;
        java.util.ArrayList $r1, r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.ClassLoader r5;
        java.util.Map $r6;
        java.util.Set $r7;
        java.lang.Object $r8, $r9, $r11;
        boolean $z0, $z1, $z3;
        org.apache.catalina.loader.WebappClassLoaderBase $r10;
        java.lang.String $r12;
        int $i0;
        java.lang.String[] $r13, $r15;
        java.lang.Object[] $r14;

        r0 := @this: org.apache.catalina.core.StandardHost;
        staticinvoke <java.lang.System: void gc()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r6 = r0.<org.apache.catalina.core.StandardHost: java.util.Map childClassLoaders>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r8;
        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        r5 = (java.lang.ClassLoader) $r9;
        $z0 = r5 instanceof org.apache.catalina.loader.WebappClassLoaderBase;
        if $z0 == 0 goto label1;

        $r10 = (org.apache.catalina.loader.WebappClassLoaderBase) r5;
        $z1 = virtualinvoke $r10.<org.apache.catalina.loader.WebappClassLoaderBase: boolean isStarted()>();
        if $z1 != 0 goto label1;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r12 = (java.lang.String) $r11;
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z3 != 0 goto label0;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();
        $r13 = newarray (java.lang.String)[$i0];
        $r14 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13);
        $r15 = (java.lang.String[]) $r14;
        return $r15;
    }

    public java.lang.String[] findAliases()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.Object r1, $r2;
        java.lang.String[] $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r2 = r0.<org.apache.catalina.core.StandardHost: java.lang.Object aliasesLock>;
        r1 = $r2;
        entermonitor $r2;

     label0:
        $r3 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        exitmonitor r1;

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.String getInfo()
    {
        org.apache.catalina.core.StandardHost r0;

        r0 := @this: org.apache.catalina.core.StandardHost;
        return "org.apache.catalina.core.StandardHost/1.0";
    }

    public void removeAlias(java.lang.String)
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1, r5, $r8, $r12;
        java.util.Locale $r2;
        java.lang.Object r3, $r6;
        int i0, i1, i2, $i3, i4, $i5, $i6, $i7, $i8;
        java.lang.String[] r4, $r7, $r9, $r10, $r11, $r13;
        boolean $z0;
        java.lang.Throwable $r14;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 := @parameter0: java.lang.String;
        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);
        $r6 = r0.<org.apache.catalina.core.StandardHost: java.lang.Object aliasesLock>;
        r3 = $r6;
        entermonitor $r6;

     label0:
        i0 = -1;
        i1 = 0;
        goto label3;

     label1:
        $r7 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $r8 = $r7[i1];
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z0 == 0 goto label2;

        i0 = i1;
        goto label4;

     label2:
        i1 = i1 + 1;

     label3:
        $r9 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $i3 = lengthof $r9;
        if i1 < $i3 goto label1;

     label4:
        if i0 >= 0 goto label6;

        exitmonitor r3;

     label5:
        return;

     label6:
        i4 = 0;
        $r10 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $i5 = lengthof $r10;
        $i6 = $i5 - 1;
        r4 = newarray (java.lang.String)[$i6];
        i2 = 0;
        goto label9;

     label7:
        if i2 == i0 goto label8;

        $i7 = i4;
        i4 = i4 + 1;
        $r11 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $r12 = $r11[i2];
        r4[$i7] = $r12;

     label8:
        i2 = i2 + 1;

     label9:
        $r13 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        $i8 = lengthof $r13;
        if i2 < $i8 goto label7;

        r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases> = r4;
        exitmonitor r3;

     label10:
        goto label14;

     label11:
        $r14 := @caughtexception;

     label12:
        exitmonitor r3;

     label13:
        throw $r14;

     label14:
        virtualinvoke r0.<org.apache.catalina.core.StandardHost: void fireContainerEvent(java.lang.String,java.lang.Object)>("removeAlias", r5);
        return;

        catch java.lang.Throwable from label0 to label5 with label11;
        catch java.lang.Throwable from label6 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public java.lang.String toString()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.StringBuilder $r1, r2;
        org.apache.catalina.Container $r3, $r4;
        java.lang.String $r5, $r9, $r12;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r3 = virtualinvoke r0.<org.apache.catalina.core.StandardHost: org.apache.catalina.Container getParent()>();
        if $r3 == null goto label0;

        $r4 = virtualinvoke r0.<org.apache.catalina.core.StandardHost: org.apache.catalina.Container getParent()>();
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label0:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StandardHost[");
        $r9 = virtualinvoke r0.<org.apache.catalina.core.StandardHost: java.lang.String getName()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r12;
    }

    protected synchronized void startInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.String r1, $r8, $r21;
        boolean z0, $z1, $z2;
        org.apache.catalina.Valve[] r2, r3;
        int i0, i1;
        org.apache.catalina.Valve r4, r14;
        org.apache.catalina.Pipeline $r5, $r15;
        java.lang.Class $r7, $r9;
        java.lang.Class[] $r10;
        java.lang.reflect.Constructor $r11;
        java.lang.Object[] $r12, $r20;
        java.lang.Object $r13;
        java.lang.Throwable $r16, r17;
        org.apache.juli.logging.Log $r18;
        org.apache.tomcat.util.res.StringManager $r19;

        r0 := @this: org.apache.catalina.core.StandardHost;
        r1 = virtualinvoke r0.<org.apache.catalina.core.StandardHost: java.lang.String getErrorReportValveClass()>();
        if r1 == null goto label7;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z1 != 0 goto label7;

     label0:
        z0 = 0;
        $r5 = virtualinvoke r0.<org.apache.catalina.core.StandardHost: org.apache.catalina.Pipeline getPipeline()>();
        r2 = interfaceinvoke $r5.<org.apache.catalina.Pipeline: org.apache.catalina.Valve[] getValves()>();
        r3 = r2;
        i0 = lengthof r2;
        i1 = 0;
        goto label3;

     label1:
        r4 = r3[i1];
        $r7 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        if $z2 == 0 goto label2;

        z0 = 1;
        goto label4;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

     label4:
        if z0 != 0 goto label7;

        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);
        $r10 = newarray (java.lang.Class)[0];
        $r11 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r10);
        $r12 = newarray (java.lang.Object)[0];
        $r13 = virtualinvoke $r11.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r12);
        r14 = (org.apache.catalina.Valve) $r13;
        $r15 = virtualinvoke r0.<org.apache.catalina.core.StandardHost: org.apache.catalina.Pipeline getPipeline()>();
        interfaceinvoke $r15.<org.apache.catalina.Pipeline: void addValve(org.apache.catalina.Valve)>(r14);

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;
        r17 = $r16;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r17);
        $r18 = <org.apache.catalina.core.StandardHost: org.apache.juli.logging.Log log>;
        $r19 = <org.apache.catalina.core.StandardHost: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = newarray (java.lang.Object)[1];
        $r20[0] = r1;
        $r21 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("standardHost.invalidErrorReportValveClass", $r20);
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r21, r17);

     label7:
        specialinvoke r0.<org.apache.catalina.core.ContainerBase: void startInternal()>();
        return;

        catch java.lang.Throwable from label0 to label5 with label6;
    }

    public java.lang.String[] getValveNames() throws java.lang.Exception
    {
        org.apache.catalina.core.StandardHost r0;
        org.apache.catalina.Valve[] r1;
        java.lang.String[] r2;
        int i0, $i1, $i2;
        org.apache.catalina.Pipeline $r3;
        org.apache.catalina.Valve $r4, $r5, $r8;
        org.apache.catalina.valves.ValveBase $r6, $r9;
        javax.management.ObjectName $r7, $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r3 = virtualinvoke r0.<org.apache.catalina.core.StandardHost: org.apache.catalina.Pipeline getPipeline()>();
        r1 = interfaceinvoke $r3.<org.apache.catalina.Pipeline: org.apache.catalina.Valve[] getValves()>();
        $i1 = lengthof r1;
        r2 = newarray (java.lang.String)[$i1];
        i0 = 0;
        goto label4;

     label0:
        $r4 = r1[i0];
        if $r4 != null goto label1;

        goto label3;

     label1:
        $r5 = r1[i0];
        $r6 = (org.apache.catalina.valves.ValveBase) $r5;
        $r7 = virtualinvoke $r6.<org.apache.catalina.valves.ValveBase: javax.management.ObjectName getObjectName()>();
        if $r7 != null goto label2;

        goto label3;

     label2:
        $r8 = r1[i0];
        $r9 = (org.apache.catalina.valves.ValveBase) $r8;
        $r10 = virtualinvoke $r9.<org.apache.catalina.valves.ValveBase: javax.management.ObjectName getObjectName()>();
        $r11 = virtualinvoke $r10.<javax.management.ObjectName: java.lang.String toString()>();
        r2[i0] = $r11;

     label3:
        i0 = i0 + 1;

     label4:
        $i2 = lengthof r1;
        if i0 < $i2 goto label0;

        return r2;
    }

    public java.lang.String[] getAliases()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.Object r1, $r2;
        java.lang.String[] $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r2 = r0.<org.apache.catalina.core.StandardHost: java.lang.Object aliasesLock>;
        r1 = $r2;
        entermonitor $r2;

     label0:
        $r3 = r0.<org.apache.catalina.core.StandardHost: java.lang.String[] aliases>;
        exitmonitor r1;

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    protected java.lang.String getObjectNameKeyProperties()
    {
        org.apache.catalina.core.StandardHost r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r3, $r5;

        r0 := @this: org.apache.catalina.core.StandardHost;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("type=Host");
        r2 = $r1;
        $r3 = staticinvoke <org.apache.catalina.mbeans.MBeanUtils: java.lang.String getContainerKeyProperties(org.apache.catalina.Container)>(r0);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;
    }

    static java.util.Map access$0(org.apache.catalina.core.StandardHost)
    {
        org.apache.catalina.core.StandardHost r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.catalina.core.StandardHost;
        $r1 = r0.<org.apache.catalina.core.StandardHost: java.util.Map childClassLoaders>;
        return $r1;
    }
}
