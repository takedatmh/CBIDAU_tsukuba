class java.util.Collections$UnmodifiableMap extends java.lang.Object implements java.util.Map, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.Map m;
    private transient java.util.Set keySet;
    private transient java.util.Set entrySet;
    private transient java.util.Collection values;

    void <init>(java.util.Map)
    {
        java.util.Collections$UnmodifiableMap r0;
        java.util.Map r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        r1 := @parameter0: java.util.Map;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.Collections$UnmodifiableMap: java.util.Set keySet> = null;
        r0.<java.util.Collections$UnmodifiableMap: java.util.Set entrySet> = null;
        r0.<java.util.Collections$UnmodifiableMap: java.util.Collection values> = null;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        r0.<java.util.Collections$UnmodifiableMap: java.util.Map m> = r1;
        return;
    }

    public int size()
    {
        java.util.Collections$UnmodifiableMap r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        $r1 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();
        return $i0;
    }

    public boolean isEmpty()
    {
        java.util.Collections$UnmodifiableMap r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        $r1 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();
        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Collections$UnmodifiableMap r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);
        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Collections$UnmodifiableMap r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);
        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.util.Collections$UnmodifiableMap r0;
        java.lang.Object r1, $r3;
        java.util.Map $r2;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        return $r3;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.Collections$UnmodifiableMap r0;
        java.lang.Object r1, r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r3;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.util.Collections$UnmodifiableMap r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        r1 := @parameter0: java.lang.Object;
        $r2 = new java.lang.UnsupportedOperationException;
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r2;
    }

    public void putAll(java.util.Map)
    {
        java.util.Collections$UnmodifiableMap r0;
        java.util.Map r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        r1 := @parameter0: java.util.Map;
        $r2 = new java.lang.UnsupportedOperationException;
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r2;
    }

    public void clear()
    {
        java.util.Collections$UnmodifiableMap r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r1;
    }

    public java.util.Set keySet()
    {
        java.util.Collections$UnmodifiableMap r0;
        java.util.Set $r1, $r3, $r4, $r5;
        java.util.Map $r2;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        $r1 = r0.<java.util.Collections$UnmodifiableMap: java.util.Set keySet>;
        if $r1 != null goto label0;

        $r2 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();
        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);
        r0.<java.util.Collections$UnmodifiableMap: java.util.Set keySet> = $r4;

     label0:
        $r5 = r0.<java.util.Collections$UnmodifiableMap: java.util.Set keySet>;
        return $r5;
    }

    public java.util.Set entrySet()
    {
        java.util.Collections$UnmodifiableMap r0;
        java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet $r1;
        java.util.Set $r2, $r4, $r5;
        java.util.Map $r3;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        $r2 = r0.<java.util.Collections$UnmodifiableMap: java.util.Set entrySet>;
        if $r2 != null goto label0;

        $r1 = new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet;
        $r3 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();
        specialinvoke $r1.<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void <init>(java.util.Set)>($r4);
        r0.<java.util.Collections$UnmodifiableMap: java.util.Set entrySet> = $r1;

     label0:
        $r5 = r0.<java.util.Collections$UnmodifiableMap: java.util.Set entrySet>;
        return $r5;
    }

    public java.util.Collection values()
    {
        java.util.Collections$UnmodifiableMap r0;
        java.util.Collection $r1, $r3, $r4, $r5;
        java.util.Map $r2;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        $r1 = r0.<java.util.Collections$UnmodifiableMap: java.util.Collection values>;
        if $r1 != null goto label0;

        $r2 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();
        $r4 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r3);
        r0.<java.util.Collections$UnmodifiableMap: java.util.Collection values> = $r4;

     label0:
        $r5 = r0.<java.util.Collections$UnmodifiableMap: java.util.Collection values>;
        return $r5;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Collections$UnmodifiableMap r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0, $z1;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        r1 := @parameter0: java.lang.Object;
        if r1 == r0 goto label0;

        $r2 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean equals(java.lang.Object)>(r1);
        if $z0 == 0 goto label1;

     label0:
        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        java.util.Collections$UnmodifiableMap r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        $r1 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();
        return $i0;
    }

    public java.lang.String toString()
    {
        java.util.Collections$UnmodifiableMap r0;
        java.util.Map $r1;
        java.lang.String $r2;

        r0 := @this: java.util.Collections$UnmodifiableMap;
        $r1 = r0.<java.util.Collections$UnmodifiableMap: java.util.Map m>;
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();
        return $r2;
    }
}
