class org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key extends java.lang.ref.WeakReference
{
    private final int hash;
    private boolean dead;

    public void <init>(java.lang.Object, java.lang.ref.ReferenceQueue)
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key r0;
        java.lang.Object r1;
        java.lang.ref.ReferenceQueue r2;
        int $i0;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.ref.ReferenceQueue;
        specialinvoke r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, r2);
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();
        r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key: int hash> = $i0;
        return;
    }

    public int hashCode()
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key r0;
        int $i0;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key;
        $i0 = r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key: int hash>;
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key r0;
        java.lang.Object r1, r2, r3;
        boolean $z0, $z1, $z2;
        java.lang.ref.Reference $r4;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key: boolean dead>;
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = r1 instanceof java.lang.ref.Reference;
        if $z1 != 0 goto label2;

        return 0;

     label2:
        r2 = virtualinvoke r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key: java.lang.Object get()>();
        $r4 = (java.lang.ref.Reference) r1;
        r3 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();
        if r2 != r3 goto label3;

        return 1;

     label3:
        if r2 == null goto label4;

        if r3 != null goto label5;

     label4:
        return 0;

     label5:
        $z2 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r3);
        return $z2;
    }

    public void ackDeath()
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key r0;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key;
        r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key: boolean dead> = 1;
        return;
    }

    public boolean isDead()
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key;
        $z0 = r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key: boolean dead>;
        return $z0;
    }
}
