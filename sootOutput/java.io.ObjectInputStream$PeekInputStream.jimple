class java.io.ObjectInputStream$PeekInputStream extends java.io.InputStream
{
    private final java.io.InputStream in;
    private int peekb;

    void <init>(java.io.InputStream)
    {
        java.io.ObjectInputStream$PeekInputStream r0;
        java.io.InputStream r1;

        r0 := @this: java.io.ObjectInputStream$PeekInputStream;
        r1 := @parameter0: java.io.InputStream;
        specialinvoke r0.<java.io.InputStream: void <init>()>();
        r0.<java.io.ObjectInputStream$PeekInputStream: int peekb> = -1;
        r0.<java.io.ObjectInputStream$PeekInputStream: java.io.InputStream in> = r1;
        return;
    }

    int peek() throws java.io.IOException
    {
        java.io.ObjectInputStream$PeekInputStream r0;
        int $i0, $i1, $i2;
        java.io.InputStream $r1;

        r0 := @this: java.io.ObjectInputStream$PeekInputStream;
        $i1 = r0.<java.io.ObjectInputStream$PeekInputStream: int peekb>;
        if $i1 < 0 goto label0;

        $i2 = r0.<java.io.ObjectInputStream$PeekInputStream: int peekb>;
        goto label1;

     label0:
        $r1 = r0.<java.io.ObjectInputStream$PeekInputStream: java.io.InputStream in>;
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();
        $i2 = $i0;
        r0.<java.io.ObjectInputStream$PeekInputStream: int peekb> = $i0;

     label1:
        return $i2;
    }

    public int read() throws java.io.IOException
    {
        java.io.ObjectInputStream$PeekInputStream r0;
        int i0, $i1, $i2;
        java.io.InputStream $r1;

        r0 := @this: java.io.ObjectInputStream$PeekInputStream;
        $i1 = r0.<java.io.ObjectInputStream$PeekInputStream: int peekb>;
        if $i1 < 0 goto label0;

        i0 = r0.<java.io.ObjectInputStream$PeekInputStream: int peekb>;
        r0.<java.io.ObjectInputStream$PeekInputStream: int peekb> = -1;
        return i0;

     label0:
        $r1 = r0.<java.io.ObjectInputStream$PeekInputStream: java.io.InputStream in>;
        $i2 = virtualinvoke $r1.<java.io.InputStream: int read()>();
        return $i2;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$PeekInputStream r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, i5, $i6, i8, $i9;
        java.io.InputStream $r2, $r3;
        byte $b7;

        r0 := @this: java.io.ObjectInputStream$PeekInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if i1 != 0 goto label0;

        return 0;

     label0:
        $i3 = r0.<java.io.ObjectInputStream$PeekInputStream: int peekb>;
        if $i3 >= 0 goto label1;

        $r2 = r0.<java.io.ObjectInputStream$PeekInputStream: java.io.InputStream in>;
        $i4 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);
        return $i4;

     label1:
        i5 = i0 + 1;
        $i6 = r0.<java.io.ObjectInputStream$PeekInputStream: int peekb>;
        $b7 = (byte) $i6;
        r1[i0] = $b7;
        i8 = i1 + -1;
        r0.<java.io.ObjectInputStream$PeekInputStream: int peekb> = -1;
        $r3 = r0.<java.io.ObjectInputStream$PeekInputStream: java.io.InputStream in>;
        i2 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>(r1, i5, i8);
        if i2 < 0 goto label2;

        $i9 = i2 + 1;
        goto label3;

     label2:
        $i9 = 1;

     label3:
        return $i9;
    }

    void readFully(byte[], int, int) throws java.io.IOException
    {
        java.io.ObjectInputStream$PeekInputStream r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4, $i5;
        java.io.EOFException $r2;

        r0 := @this: java.io.ObjectInputStream$PeekInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = 0;

     label0:
        if i2 >= i1 goto label2;

        $i4 = i0 + i2;
        $i5 = i1 - i2;
        i3 = virtualinvoke r0.<java.io.ObjectInputStream$PeekInputStream: int read(byte[],int,int)>(r1, $i4, $i5);
        if i3 >= 0 goto label1;

        $r2 = new java.io.EOFException;
        specialinvoke $r2.<java.io.EOFException: void <init>()>();
        throw $r2;

     label1:
        i2 = i2 + i3;
        goto label0;

     label2:
        return;
    }

    public long skip(long) throws java.io.IOException
    {
        java.io.ObjectInputStream$PeekInputStream r0;
        long l0, $l4, $l5, $l6;
        int i1, $i3;
        byte $b2;

        r0 := @this: java.io.ObjectInputStream$PeekInputStream;
        l0 := @parameter0: long;
        $b2 = l0 cmp 0L;
        if $b2 > 0 goto label0;

        return 0L;

     label0:
        i1 = 0;
        $i3 = r0.<java.io.ObjectInputStream$PeekInputStream: int peekb>;
        if $i3 < 0 goto label1;

        r0.<java.io.ObjectInputStream$PeekInputStream: int peekb> = -1;
        i1 = i1 + 1;
        l0 = l0 - 1L;

     label1:
        $l4 = (long) i1;
        $l5 = virtualinvoke r0.<java.io.ObjectInputStream$PeekInputStream: long skip(long)>(l0);
        $l6 = $l4 + $l5;
        return $l6;
    }

    public int available() throws java.io.IOException
    {
        java.io.ObjectInputStream$PeekInputStream r0;
        java.io.InputStream $r1;
        int $i0, $i1, $i3;
        byte $b2;

        r0 := @this: java.io.ObjectInputStream$PeekInputStream;
        $r1 = r0.<java.io.ObjectInputStream$PeekInputStream: java.io.InputStream in>;
        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();
        $i1 = r0.<java.io.ObjectInputStream$PeekInputStream: int peekb>;
        if $i1 < 0 goto label0;

        $b2 = 1;
        goto label1;

     label0:
        $b2 = 0;

     label1:
        $i3 = $i0 + $b2;
        return $i3;
    }

    public void close() throws java.io.IOException
    {
        java.io.ObjectInputStream$PeekInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: java.io.ObjectInputStream$PeekInputStream;
        $r1 = r0.<java.io.ObjectInputStream$PeekInputStream: java.io.InputStream in>;
        virtualinvoke $r1.<java.io.InputStream: void close()>();
        return;
    }
}
