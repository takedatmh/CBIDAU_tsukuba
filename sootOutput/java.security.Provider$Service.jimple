public class java.security.Provider$Service extends java.lang.Object
{
    private java.lang.String type;
    private java.lang.String algorithm;
    private java.lang.String className;
    private final java.security.Provider provider;
    private java.util.List aliases;
    private java.util.Map attributes;
    private volatile java.lang.ref.Reference classRef;
    private volatile java.lang.Boolean hasKeyAttributes;
    private java.lang.String[] supportedFormats;
    private java.lang.Class[] supportedClasses;
    private boolean registered;
    private static final java.lang.Class[] CLASS0;

    private void <init>(java.security.Provider)
    {
        java.security.Provider$Service r0;
        java.security.Provider r1;
        java.util.List $r2;
        java.util.Map $r3;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.security.Provider;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.security.Provider$Service: java.security.Provider provider> = r1;
        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r0.<java.security.Provider$Service: java.util.List aliases> = $r2;
        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
        r0.<java.security.Provider$Service: java.util.Map attributes> = $r3;
        return;
    }

    private boolean isValid()
    {
        java.security.Provider$Service r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: java.security.Provider$Service;
        $r1 = r0.<java.security.Provider$Service: java.lang.String type>;
        if $r1 == null goto label0;

        $r2 = r0.<java.security.Provider$Service: java.lang.String algorithm>;
        if $r2 == null goto label0;

        $r3 = r0.<java.security.Provider$Service: java.lang.String className>;
        if $r3 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private void addAlias(java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1;
        java.util.ArrayList $r2;
        java.util.List $r3, $r4;
        boolean $z0;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<java.security.Provider$Service: java.util.List aliases>;
        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(2);
        r0.<java.security.Provider$Service: java.util.List aliases> = $r2;

     label0:
        $r4 = r0.<java.security.Provider$Service: java.util.List aliases>;
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    void addAttribute(java.lang.String, java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1, r2;
        java.util.HashMap $r3;
        java.util.Map $r4, $r5;
        boolean $z0;
        java.security.Provider$UString $r6;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r4 = r0.<java.security.Provider$Service: java.util.Map attributes>;
        $z0 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(8);
        r0.<java.security.Provider$Service: java.util.Map attributes> = $r3;

     label0:
        $r5 = r0.<java.security.Provider$Service: java.util.Map attributes>;
        $r6 = new java.security.Provider$UString;
        specialinvoke $r6.<java.security.Provider$UString: void <init>(java.lang.String)>(r1);
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r2);
        return;
    }

    public void <init>(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.Map)
    {
        java.security.Provider$Service r0;
        java.security.Provider r1;
        java.lang.String r2, r3, r4, $r10, $r20;
        java.util.List r5, $r11;
        java.util.Map r6, $r13, $r17;
        java.util.Iterator r7;
        java.util.Map$Entry r8;
        java.lang.NullPointerException $r9;
        java.util.ArrayList $r12;
        java.util.HashMap $r14;
        java.util.Set $r15;
        boolean $z0;
        java.lang.Object $r16, $r19, $r21;
        java.security.Provider$UString $r18;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.security.Provider;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.util.List;
        r6 := @parameter5: java.util.Map;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 == null goto label0;

        if r2 == null goto label0;

        if r3 == null goto label0;

        if r4 != null goto label1;

     label0:
        $r9 = new java.lang.NullPointerException;
        specialinvoke $r9.<java.lang.NullPointerException: void <init>()>();
        throw $r9;

     label1:
        r0.<java.security.Provider$Service: java.security.Provider provider> = r1;
        $r10 = staticinvoke <java.security.Provider: java.lang.String access$900(java.lang.String)>(r2);
        r0.<java.security.Provider$Service: java.lang.String type> = $r10;
        r0.<java.security.Provider$Service: java.lang.String algorithm> = r3;
        r0.<java.security.Provider$Service: java.lang.String className> = r4;
        if r5 != null goto label2;

        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r0.<java.security.Provider$Service: java.util.List aliases> = $r11;
        goto label3;

     label2:
        $r12 = new java.util.ArrayList;
        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>(r5);
        r0.<java.security.Provider$Service: java.util.List aliases> = $r12;

     label3:
        if r6 != null goto label4;

        $r13 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
        r0.<java.security.Provider$Service: java.util.Map attributes> = $r13;
        goto label6;

     label4:
        $r14 = new java.util.HashMap;
        specialinvoke $r14.<java.util.HashMap: void <init>()>();
        r0.<java.security.Provider$Service: java.util.Map attributes> = $r14;
        $r15 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>();
        r7 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label6;

        $r16 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        r8 = (java.util.Map$Entry) $r16;
        $r17 = r0.<java.security.Provider$Service: java.util.Map attributes>;
        $r18 = new java.security.Provider$UString;
        $r19 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r20 = (java.lang.String) $r19;
        specialinvoke $r18.<java.security.Provider$UString: void <init>(java.lang.String)>($r20);
        $r21 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();
        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r21);
        goto label5;

     label6:
        return;
    }

    public final java.lang.String getType()
    {
        java.security.Provider$Service r0;
        java.lang.String $r1;

        r0 := @this: java.security.Provider$Service;
        $r1 = r0.<java.security.Provider$Service: java.lang.String type>;
        return $r1;
    }

    public final java.lang.String getAlgorithm()
    {
        java.security.Provider$Service r0;
        java.lang.String $r1;

        r0 := @this: java.security.Provider$Service;
        $r1 = r0.<java.security.Provider$Service: java.lang.String algorithm>;
        return $r1;
    }

    public final java.security.Provider getProvider()
    {
        java.security.Provider$Service r0;
        java.security.Provider $r1;

        r0 := @this: java.security.Provider$Service;
        $r1 = r0.<java.security.Provider$Service: java.security.Provider provider>;
        return $r1;
    }

    public final java.lang.String getClassName()
    {
        java.security.Provider$Service r0;
        java.lang.String $r1;

        r0 := @this: java.security.Provider$Service;
        $r1 = r0.<java.security.Provider$Service: java.lang.String className>;
        return $r1;
    }

    private final java.util.List getAliases()
    {
        java.security.Provider$Service r0;
        java.util.List $r1;

        r0 := @this: java.security.Provider$Service;
        $r1 = r0.<java.security.Provider$Service: java.util.List aliases>;
        return $r1;
    }

    public final java.lang.String getAttribute(java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1, $r6;
        java.lang.NullPointerException $r2;
        java.util.Map $r3;
        java.security.Provider$UString $r4;
        java.lang.Object $r5;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<java.security.Provider$Service: java.util.Map attributes>;
        $r4 = new java.security.Provider$UString;
        specialinvoke $r4.<java.security.Provider$UString: void <init>(java.lang.String)>(r1);
        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);
        $r6 = (java.lang.String) $r5;
        return $r6;
    }

    public java.lang.Object newInstance(java.lang.Object) throws java.security.NoSuchAlgorithmException
    {
        java.security.Provider$Service r0, $r9;
        java.lang.Object r1, $r21, $r22, $r32, $r49;
        java.security.Provider$EngineDescription r2;
        java.lang.Class r3, r33, r34, r45;
        java.lang.Class[] r4, $r46;
        java.lang.reflect.Constructor r5, r47;
        boolean $z0, $z1;
        java.security.Provider $r6, $r13, $r60, $r77;
        java.lang.String $r7, $r8, $r14, $r18, $r20, $r23, $r27, $r30, $r38, $r39, $r42, $r44, $r57, $r61, $r64, $r67, $r74, $r78, $r81, $r84;
        java.security.NoSuchAlgorithmException $r10, $r50, r51, $r54, $r71;
        java.lang.StringBuilder $r11, $r12, $r15, $r16, $r17, $r25, $r26, $r28, $r29, $r36, $r37, $r40, $r41, $r43, $r55, $r56, $r58, $r59, $r62, $r63, $r65, $r66, $r72, $r73, $r75, $r76, $r79, $r80, $r82, $r83;
        java.util.Map $r19;
        java.security.InvalidParameterException $r24, $r35;
        java.lang.Object[] $r31, $r48;
        java.lang.reflect.InvocationTargetException $r52, r53;
        java.lang.Throwable $r68;
        java.lang.Exception $r69, r70;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.lang.Object;
        $z0 = r0.<java.security.Provider$Service: boolean registered>;
        if $z0 != 0 goto label1;

        $r6 = r0.<java.security.Provider$Service: java.security.Provider provider>;
        $r7 = r0.<java.security.Provider$Service: java.lang.String type>;
        $r8 = r0.<java.security.Provider$Service: java.lang.String algorithm>;
        $r9 = virtualinvoke $r6.<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>($r7, $r8);
        if $r9 == r0 goto label0;

        $r10 = new java.security.NoSuchAlgorithmException;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service not registered with Provider ");
        $r13 = r0.<java.security.Provider$Service: java.security.Provider provider>;
        $r14 = virtualinvoke $r13.<java.security.Provider: java.lang.String getName()>();
        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r18);
        throw $r10;

     label0:
        r0.<java.security.Provider$Service: boolean registered> = 1;

     label1:
        $r19 = staticinvoke <java.security.Provider: java.util.Map access$1000()>();
        $r20 = r0.<java.security.Provider$Service: java.lang.String type>;
        $r21 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r20);
        r2 = (java.security.Provider$EngineDescription) $r21;
        if r2 != null goto label3;

        $r22 = specialinvoke r0.<java.security.Provider$Service: java.lang.Object newInstanceGeneric(java.lang.Object)>(r1);

     label2:
        return $r22;

     label3:
        $r23 = r2.<java.security.Provider$EngineDescription: java.lang.String constructorParameterClassName>;
        if $r23 != null goto label6;

        if r1 == null goto label4;

        $r24 = new java.security.InvalidParameterException;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("constructorParameter not used with ");
        $r27 = r0.<java.security.Provider$Service: java.lang.String type>;
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" engines");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r24.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r30);
        throw $r24;

     label4:
        r3 = specialinvoke r0.<java.security.Provider$Service: java.lang.Class getImplClass()>();
        r4 = newarray (java.lang.Class)[0];
        r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r4);
        $r31 = newarray (java.lang.Object)[0];
        $r32 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r31);

     label5:
        return $r32;

     label6:
        r33 = virtualinvoke r2.<java.security.Provider$EngineDescription: java.lang.Class getConstructorParameterClass()>();
        if r1 == null goto label7;

        r34 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $z1 = virtualinvoke r33.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r34);
        if $z1 != 0 goto label7;

        $r35 = new java.security.InvalidParameterException;
        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("constructorParameter must be instanceof ");
        $r38 = r2.<java.security.Provider$EngineDescription: java.lang.String constructorParameterClassName>;
        $r39 = virtualinvoke $r38.<java.lang.String: java.lang.String replace(char,char)>(36, 46);
        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for engine type ");
        $r42 = r0.<java.security.Provider$Service: java.lang.String type>;
        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r35.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r44);
        throw $r35;

     label7:
        r45 = specialinvoke r0.<java.security.Provider$Service: java.lang.Class getImplClass()>();
        $r46 = newarray (java.lang.Class)[1];
        $r46[0] = r33;
        r47 = virtualinvoke r45.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r46);
        $r48 = newarray (java.lang.Object)[1];
        $r48[0] = r1;
        $r49 = virtualinvoke r47.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r48);

     label8:
        return $r49;

     label9:
        $r50 := @caughtexception;
        r51 = $r50;
        throw r51;

     label10:
        $r52 := @caughtexception;
        r53 = $r52;
        $r54 = new java.security.NoSuchAlgorithmException;
        $r55 = new java.lang.StringBuilder;
        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error constructing implementation (algorithm: ");
        $r57 = r0.<java.security.Provider$Service: java.lang.String algorithm>;
        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", provider: ");
        $r60 = r0.<java.security.Provider$Service: java.security.Provider provider>;
        $r61 = virtualinvoke $r60.<java.security.Provider: java.lang.String getName()>();
        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", class: ");
        $r64 = r0.<java.security.Provider$Service: java.lang.String className>;
        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();
        $r68 = virtualinvoke r53.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();
        specialinvoke $r54.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String,java.lang.Throwable)>($r67, $r68);
        throw $r54;

     label11:
        $r69 := @caughtexception;
        r70 = $r69;
        $r71 = new java.security.NoSuchAlgorithmException;
        $r72 = new java.lang.StringBuilder;
        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error constructing implementation (algorithm: ");
        $r74 = r0.<java.security.Provider$Service: java.lang.String algorithm>;
        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);
        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", provider: ");
        $r77 = r0.<java.security.Provider$Service: java.security.Provider provider>;
        $r78 = virtualinvoke $r77.<java.security.Provider: java.lang.String getName()>();
        $r79 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", class: ");
        $r81 = r0.<java.security.Provider$Service: java.lang.String className>;
        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r71.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String,java.lang.Throwable)>($r84, r70);
        throw $r71;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label5 with label9;
        catch java.security.NoSuchAlgorithmException from label6 to label8 with label9;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label10;
        catch java.lang.reflect.InvocationTargetException from label3 to label5 with label10;
        catch java.lang.reflect.InvocationTargetException from label6 to label8 with label10;
        catch java.lang.Exception from label1 to label2 with label11;
        catch java.lang.Exception from label3 to label5 with label11;
        catch java.lang.Exception from label6 to label8 with label11;
    }

    private java.lang.Class getImplClass() throws java.security.NoSuchAlgorithmException
    {
        java.security.Provider$Service r0;
        java.lang.ref.Reference r1;
        java.lang.Class r2, $r5, $r8;
        java.lang.ClassLoader r3;
        java.lang.StringBuilder $r4, $r12, $r14, $r15, $r18, $r19, $r26, $r27, $r29, $r30, $r33, $r34;
        java.lang.Object $r6;
        java.security.Provider $r7, $r16, $r31;
        java.lang.String $r9, $r10, $r13, $r17, $r20, $r28, $r32, $r35;
        int $i0;
        boolean $z0;
        java.security.NoSuchAlgorithmException $r11, $r25;
        java.lang.ref.WeakReference $r21;
        java.lang.ClassNotFoundException $r23, r24;

        r0 := @this: java.security.Provider$Service;

     label0:
        r1 = r0.<java.security.Provider$Service: java.lang.ref.Reference classRef>;
        if r1 != null goto label1;

        $r5 = null;
        goto label2;

     label1:
        $r6 = virtualinvoke r1.<java.lang.ref.Reference: java.lang.Object get()>();
        $r5 = (java.lang.Class) $r6;

     label2:
        r2 = $r5;
        if r2 != null goto label6;

        $r7 = r0.<java.security.Provider$Service: java.security.Provider provider>;
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();
        r3 = virtualinvoke $r8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        if r3 != null goto label3;

        $r9 = r0.<java.security.Provider$Service: java.lang.String className>;
        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r9);
        goto label4;

     label3:
        $r10 = r0.<java.security.Provider$Service: java.lang.String className>;
        r2 = virtualinvoke r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r10);

     label4:
        $i0 = virtualinvoke r2.<java.lang.Class: int getModifiers()>();
        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);
        if $z0 != 0 goto label5;

        $r11 = new java.security.NoSuchAlgorithmException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class configured for ");
        $r13 = r0.<java.security.Provider$Service: java.lang.String type>;
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (provider: ");
        $r16 = r0.<java.security.Provider$Service: java.security.Provider provider>;
        $r17 = virtualinvoke $r16.<java.security.Provider: java.lang.String getName()>();
        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not public.");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r20);
        throw $r11;

     label5:
        $r21 = new java.lang.ref.WeakReference;
        specialinvoke $r21.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);
        r0.<java.security.Provider$Service: java.lang.ref.Reference classRef> = $r21;

     label6:
        return r2;

     label7:
        $r23 := @caughtexception;
        r24 = $r23;
        $r25 = new java.security.NoSuchAlgorithmException;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class configured for ");
        $r28 = r0.<java.security.Provider$Service: java.lang.String type>;
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(provider: ");
        $r31 = r0.<java.security.Provider$Service: java.security.Provider provider>;
        $r32 = virtualinvoke $r31.<java.security.Provider: java.lang.String getName()>();
        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") cannot be found.");
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r25.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String,java.lang.Throwable)>($r35, r24);
        throw $r25;

        catch java.lang.ClassNotFoundException from label0 to label6 with label7;
    }

    private java.lang.Object newInstanceGeneric(java.lang.Object) throws java.lang.Exception
    {
        java.security.Provider$Service r0;
        java.lang.Object r1, $r10, $r22;
        java.lang.Class r2, r18, $r20;
        java.lang.Class[] r3, r8;
        java.lang.reflect.Constructor r4, r7;
        java.lang.StringBuilder $r5, $r14, $r16, $r24, $r25, $r27, $r28, $r30;
        java.lang.reflect.Constructor[] r6, r19;
        int i0, i1, $i2;
        java.lang.Object[] $r9, $r21;
        java.lang.NoSuchMethodException $r11, r12;
        java.security.NoSuchAlgorithmException $r13, $r23;
        java.lang.String $r15, $r17, $r26, $r29, $r31;
        boolean $z0;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.lang.Object;
        r2 = specialinvoke r0.<java.security.Provider$Service: java.lang.Class getImplClass()>();
        if r1 != null goto label3;

     label0:
        r3 = newarray (java.lang.Class)[0];
        r4 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r3);
        $r9 = newarray (java.lang.Object)[0];
        $r10 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r9);

     label1:
        return $r10;

     label2:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = new java.security.NoSuchAlgorithmException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No public no-arg constructor found in class ");
        $r15 = r0.<java.security.Provider$Service: java.lang.String className>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r13.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r17);
        throw $r13;

     label3:
        r18 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        r19 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();
        r6 = r19;
        i0 = lengthof r6;
        i1 = 0;

     label4:
        if i1 >= i0 goto label8;

        r7 = r6[i1];
        r8 = virtualinvoke r7.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();
        $i2 = lengthof r8;
        if $i2 == 1 goto label5;

        goto label7;

     label5:
        $r20 = r8[0];
        $z0 = virtualinvoke $r20.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r18);
        if $z0 != 0 goto label6;

        goto label7;

     label6:
        $r21 = newarray (java.lang.Object)[1];
        $r21[0] = r1;
        $r22 = virtualinvoke r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r21);
        return $r22;

     label7:
        i1 = i1 + 1;
        goto label4;

     label8:
        $r23 = new java.security.NoSuchAlgorithmException;
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No public constructor matching ");
        $r26 = virtualinvoke r18.<java.lang.Class: java.lang.String getName()>();
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found in class ");
        $r29 = r0.<java.security.Provider$Service: java.lang.String className>;
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r23.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r31);
        throw $r23;

        catch java.lang.NoSuchMethodException from label0 to label1 with label2;
    }

    public boolean supportsParameter(java.lang.Object)
    {
        java.security.Provider$Service r0;
        java.lang.Object r1, $r7;
        java.util.Map $r2;
        java.security.Provider$EngineDescription r3;
        java.lang.StringBuilder $r4, $r9, $r11, $r12, $r15, $r16, $r18;
        java.security.Key r5;
        java.lang.String $r6, $r10, $r13, $r17, $r19;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.security.InvalidParameterException $r8, $r14;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.lang.Object;
        $r2 = staticinvoke <java.security.Provider: java.util.Map access$1000()>();
        $r6 = r0.<java.security.Provider$Service: java.lang.String type>;
        $r7 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);
        r3 = (java.security.Provider$EngineDescription) $r7;
        if r3 != null goto label0;

        return 1;

     label0:
        $z0 = r3.<java.security.Provider$EngineDescription: boolean supportsParameter>;
        if $z0 != 0 goto label1;

        $r8 = new java.security.InvalidParameterException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("supportsParameter() not used with ");
        $r10 = r0.<java.security.Provider$Service: java.lang.String type>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" engines");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r13);
        throw $r8;

     label1:
        if r1 == null goto label2;

        $z1 = r1 instanceof java.security.Key;
        if $z1 != 0 goto label2;

        $r14 = new java.security.InvalidParameterException;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameter must be instanceof Key for engine ");
        $r17 = r0.<java.security.Provider$Service: java.lang.String type>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r19);
        throw $r14;

     label2:
        $z2 = specialinvoke r0.<java.security.Provider$Service: boolean hasKeyAttributes()>();
        if $z2 != 0 goto label3;

        return 1;

     label3:
        if r1 != null goto label4;

        return 0;

     label4:
        r5 = (java.security.Key) r1;
        $z3 = specialinvoke r0.<java.security.Provider$Service: boolean supportsKeyFormat(java.security.Key)>(r5);
        if $z3 == 0 goto label5;

        return 1;

     label5:
        $z4 = specialinvoke r0.<java.security.Provider$Service: boolean supportsKeyClass(java.security.Key)>(r5);
        if $z4 == 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    private boolean hasKeyAttributes()
    {
        java.security.Provider$Service r0, r2;
        java.lang.Boolean r1;
        java.lang.String r3, r7, r12;
        java.lang.String[] r4, r6, $r11, $r17;
        java.util.ArrayList r5, $r13;
        int i0, i1, $i2;
        java.lang.Class r8;
        java.lang.Throwable r9, $r19;
        java.lang.Class[] $r14, $r16, $r18;
        java.lang.Object[] $r15;
        boolean $z1, z2, $z3;

        r0 := @this: java.security.Provider$Service;
        r1 = r0.<java.security.Provider$Service: java.lang.Boolean hasKeyAttributes>;
        if r1 != null goto label13;

        r2 = r0;
        entermonitor r0;

     label0:
        r3 = virtualinvoke r0.<java.security.Provider$Service: java.lang.String getAttribute(java.lang.String)>("SupportedKeyFormats");
        if r3 == null goto label1;

        $r11 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");
        r0.<java.security.Provider$Service: java.lang.String[] supportedFormats> = $r11;

     label1:
        r12 = virtualinvoke r0.<java.security.Provider$Service: java.lang.String getAttribute(java.lang.String)>("SupportedKeyClasses");
        if r12 == null goto label5;

        r4 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");
        $r13 = new java.util.ArrayList;
        $i2 = lengthof r4;
        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i2);
        r5 = $r13;
        r6 = r4;
        i0 = lengthof r6;
        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r7 = r6[i1];
        r8 = specialinvoke r0.<java.security.Provider$Service: java.lang.Class getKeyClass(java.lang.String)>(r7);
        if r8 == null goto label3;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r8);

     label3:
        i1 = i1 + 1;
        goto label2;

     label4:
        $r14 = <java.security.Provider$Service: java.lang.Class[] CLASS0>;
        $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14);
        $r16 = (java.lang.Class[]) $r15;
        r0.<java.security.Provider$Service: java.lang.Class[] supportedClasses> = $r16;

     label5:
        $r17 = r0.<java.security.Provider$Service: java.lang.String[] supportedFormats>;
        if $r17 != null goto label6;

        $r18 = r0.<java.security.Provider$Service: java.lang.Class[] supportedClasses>;
        if $r18 == null goto label7;

     label6:
        $z1 = 1;
        goto label8;

     label7:
        $z1 = 0;

     label8:
        z2 = $z1;
        r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);
        r0.<java.security.Provider$Service: java.lang.Boolean hasKeyAttributes> = r1;
        exitmonitor r2;

     label9:
        goto label13;

     label10:
        $r19 := @caughtexception;

     label11:
        r9 = $r19;
        exitmonitor r2;

     label12:
        throw r9;

     label13:
        $z3 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();
        return $z3;

        catch java.lang.Throwable from label0 to label9 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private java.lang.Class getKeyClass(java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1;
        java.lang.ClassNotFoundException r2, $r4, $r9, r10;
        java.lang.Class $r3, $r6, $r8;
        java.security.Provider $r5;
        java.lang.ClassLoader r7;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.lang.String;

     label0:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;

     label3:
        $r5 = r0.<java.security.Provider$Service: java.security.Provider provider>;
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();
        r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        if r7 == null goto label5;

        $r8 = virtualinvoke r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

     label4:
        return $r8;

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;
        r10 = $r9;

     label7:
        return null;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
        catch java.lang.ClassNotFoundException from label3 to label4 with label6;
    }

    private boolean supportsKeyFormat(java.security.Key)
    {
        java.security.Provider$Service r0;
        java.security.Key r1;
        java.lang.String r2, r4;
        java.lang.String[] r3, $r5;
        int i0, i1;
        boolean $z0;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.security.Key;
        $r5 = r0.<java.security.Provider$Service: java.lang.String[] supportedFormats>;
        if $r5 != null goto label0;

        return 0;

     label0:
        r2 = interfaceinvoke r1.<java.security.Key: java.lang.String getFormat()>();
        if r2 != null goto label1;

        return 0;

     label1:
        r3 = r0.<java.security.Provider$Service: java.lang.String[] supportedFormats>;
        i0 = lengthof r3;
        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r4 = r3[i1];
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;
        goto label2;

     label4:
        return 0;
    }

    private boolean supportsKeyClass(java.security.Key)
    {
        java.security.Provider$Service r0;
        java.security.Key r1;
        java.lang.Class r2, r4;
        java.lang.Class[] r3, $r5;
        int i0, i1;
        boolean $z0;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.security.Key;
        $r5 = r0.<java.security.Provider$Service: java.lang.Class[] supportedClasses>;
        if $r5 != null goto label0;

        return 0;

     label0:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        r3 = r0.<java.security.Provider$Service: java.lang.Class[] supportedClasses>;
        i0 = lengthof r3;
        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];
        $z0 = virtualinvoke r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);
        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        java.security.Provider$Service r0;
        java.lang.String r1, r2, $r4, $r8, $r11, $r15, $r19, $r22, $r25, $r28, $r33;
        java.util.List $r3, $r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r9, $r12, $r13, $r16, $r17, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r31, $r32;
        java.util.Map $r10, $r14;
        java.security.Provider $r18;

        r0 := @this: java.security.Provider$Service;
        $r3 = r0.<java.security.Provider$Service: java.util.List aliases>;
        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $r4 = "";
        goto label1;

     label0:
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n  aliases: ");
        $r7 = r0.<java.security.Provider$Service: java.util.List aliases>;
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        r1 = $r4;
        $r10 = r0.<java.security.Provider$Service: java.util.Map attributes>;
        $z1 = interfaceinvoke $r10.<java.util.Map: boolean isEmpty()>();
        if $z1 == 0 goto label2;

        $r11 = "";
        goto label3;

     label2:
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n  attributes: ");
        $r14 = r0.<java.security.Provider$Service: java.util.Map attributes>;
        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r11 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r2 = $r11;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = r0.<java.security.Provider$Service: java.security.Provider provider>;
        $r19 = virtualinvoke $r18.<java.security.Provider: java.lang.String getName()>();
        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r22 = r0.<java.security.Provider$Service: java.lang.String type>;
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r25 = r0.<java.security.Provider$Service: java.lang.String algorithm>;
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");
        $r28 = r0.<java.security.Provider$Service: java.lang.String className>;
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r33;
    }

    static boolean access$000(java.security.Provider$Service)
    {
        java.security.Provider$Service r0;
        boolean $z0;

        r0 := @parameter0: java.security.Provider$Service;
        $z0 = specialinvoke r0.<java.security.Provider$Service: boolean isValid()>();
        return $z0;
    }

    void <init>(java.security.Provider, java.security.Provider$1)
    {
        java.security.Provider$Service r0;
        java.security.Provider r1;
        java.security.Provider$1 r2;

        r0 := @this: java.security.Provider$Service;
        r1 := @parameter0: java.security.Provider;
        r2 := @parameter1: java.security.Provider$1;
        specialinvoke r0.<java.security.Provider$Service: void <init>(java.security.Provider)>(r1);
        return;
    }

    static java.lang.String access$302(java.security.Provider$Service, java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1;

        r0 := @parameter0: java.security.Provider$Service;
        r1 := @parameter1: java.lang.String;
        r0.<java.security.Provider$Service: java.lang.String type> = r1;
        return r1;
    }

    static java.lang.String access$402(java.security.Provider$Service, java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1;

        r0 := @parameter0: java.security.Provider$Service;
        r1 := @parameter1: java.lang.String;
        r0.<java.security.Provider$Service: java.lang.String algorithm> = r1;
        return r1;
    }

    static void access$500(java.security.Provider$Service, java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1;

        r0 := @parameter0: java.security.Provider$Service;
        r1 := @parameter1: java.lang.String;
        specialinvoke r0.<java.security.Provider$Service: void addAlias(java.lang.String)>(r1);
        return;
    }

    static java.lang.String access$602(java.security.Provider$Service, java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1;

        r0 := @parameter0: java.security.Provider$Service;
        r1 := @parameter1: java.lang.String;
        r0.<java.security.Provider$Service: java.lang.String className> = r1;
        return r1;
    }

    static java.util.List access$700(java.security.Provider$Service)
    {
        java.security.Provider$Service r0;
        java.util.List $r1;

        r0 := @parameter0: java.security.Provider$Service;
        $r1 = specialinvoke r0.<java.security.Provider$Service: java.util.List getAliases()>();
        return $r1;
    }

    static java.util.Map access$800(java.security.Provider$Service)
    {
        java.security.Provider$Service r0;
        java.util.Map $r1;

        r0 := @parameter0: java.security.Provider$Service;
        $r1 = r0.<java.security.Provider$Service: java.util.Map attributes>;
        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;

        $r0 = newarray (java.lang.Class)[0];
        <java.security.Provider$Service: java.lang.Class[] CLASS0> = $r0;
        return;
    }
}
