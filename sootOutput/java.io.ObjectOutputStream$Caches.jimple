class java.io.ObjectOutputStream$Caches extends java.lang.Object
{
    static final java.util.concurrent.ConcurrentMap subclassAudits;
    static final java.lang.ref.ReferenceQueue subclassAuditsQueue;

    private void <init>()
    {
        java.io.ObjectOutputStream$Caches r0;

        r0 := @this: java.io.ObjectOutputStream$Caches;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;
        java.lang.ref.ReferenceQueue $r1;

        $r0 = new java.util.concurrent.ConcurrentHashMap;
        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
        <java.io.ObjectOutputStream$Caches: java.util.concurrent.ConcurrentMap subclassAudits> = $r0;
        $r1 = new java.lang.ref.ReferenceQueue;
        specialinvoke $r1.<java.lang.ref.ReferenceQueue: void <init>()>();
        <java.io.ObjectOutputStream$Caches: java.lang.ref.ReferenceQueue subclassAuditsQueue> = $r1;
        return;
    }
}
