public class org.apache.naming.resources.WARDirContext extends org.apache.naming.resources.BaseDirContext
{
    private static final org.apache.juli.logging.Log log;
    protected java.util.zip.ZipFile base;
    protected org.apache.naming.resources.WARDirContext$Entry entries;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/naming/resources/WARDirContext");
        <org.apache.naming.resources.WARDirContext: org.apache.juli.logging.Log log> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.naming.resources.WARDirContext r0;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        specialinvoke r0.<org.apache.naming.resources.BaseDirContext: void <init>()>();
        r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base> = null;
        r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries> = null;
        return;
    }

    public void <init>(java.util.Hashtable)
    {
        org.apache.naming.resources.WARDirContext r0;
        java.util.Hashtable r1;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.util.Hashtable;
        specialinvoke r0.<org.apache.naming.resources.BaseDirContext: void <init>(java.util.Hashtable)>(r1);
        r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base> = null;
        r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries> = null;
        return;
    }

    protected void <init>(java.util.zip.ZipFile, org.apache.naming.resources.WARDirContext$Entry)
    {
        org.apache.naming.resources.WARDirContext r0;
        java.util.zip.ZipFile r1;
        org.apache.naming.resources.WARDirContext$Entry r2;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.util.zip.ZipFile;
        r2 := @parameter1: org.apache.naming.resources.WARDirContext$Entry;
        specialinvoke r0.<org.apache.naming.resources.BaseDirContext: void <init>()>();
        r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base> = null;
        r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries> = null;
        r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base> = r1;
        r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries> = r2;
        return;
    }

    public void setDocBase(java.lang.String)
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1, $r6, $r9, $r14, $r20, $r21;
        org.apache.naming.StringManager $r2, $r8, $r12, $r18;
        java.io.File r3, $r10;
        java.lang.Exception r4, $r16;
        java.lang.IllegalArgumentException $r5, $r7, $r11, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object[] $r13, $r19;
        java.util.zip.ZipFile $r15;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r5 = new java.lang.IllegalArgumentException;
        $r2 = <org.apache.naming.resources.WARDirContext: org.apache.naming.StringManager sm>;
        $r6 = virtualinvoke $r2.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("resources.null");
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);
        throw $r5;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".war");
        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;
        $r8 = <org.apache.naming.resources.WARDirContext: org.apache.naming.StringManager sm>;
        $r9 = virtualinvoke $r8.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String)>("warResources.notWar");
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);
        throw $r7;

     label1:
        $r10 = new java.io.File;
        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r1);
        r3 = $r10;
        $z1 = virtualinvoke r3.<java.io.File: boolean exists()>();
        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r3.<java.io.File: boolean canRead()>();
        if $z2 == 0 goto label2;

        $z3 = virtualinvoke r3.<java.io.File: boolean isDirectory()>();
        if $z3 == 0 goto label3;

     label2:
        $r11 = new java.lang.IllegalArgumentException;
        $r12 = <org.apache.naming.resources.WARDirContext: org.apache.naming.StringManager sm>;
        $r13 = newarray (java.lang.Object)[1];
        $r13[0] = r1;
        $r14 = virtualinvoke $r12.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("warResources.invalidWar", $r13);
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);
        throw $r11;

     label3:
        $r15 = new java.util.zip.ZipFile;
        specialinvoke $r15.<java.util.zip.ZipFile: void <init>(java.io.File)>(r3);
        r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base> = $r15;

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;
        r4 = $r16;
        $r17 = new java.lang.IllegalArgumentException;
        $r18 = <org.apache.naming.resources.WARDirContext: org.apache.naming.StringManager sm>;
        $r19 = newarray (java.lang.Object)[1];
        $r20 = virtualinvoke r4.<java.lang.Exception: java.lang.String getMessage()>();
        $r19[0] = $r20;
        $r21 = virtualinvoke $r18.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("warResources.invalidWar", $r19);
        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);
        throw $r17;

     label6:
        specialinvoke r0.<org.apache.naming.resources.BaseDirContext: void setDocBase(java.lang.String)>(r1);
        virtualinvoke r0.<org.apache.naming.resources.WARDirContext: void loadEntries()>();
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void release()
    {
        org.apache.naming.resources.WARDirContext r0;
        java.io.IOException r1, $r4;
        java.util.zip.ZipFile $r2, $r3, $r7;
        org.apache.juli.logging.Log $r5;
        java.lang.StringBuilder $r6, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries> = null;
        $r2 = r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base>;
        if $r2 == null goto label3;

     label0:
        $r3 = r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base>;
        virtualinvoke $r3.<java.util.zip.ZipFile: void close()>();

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = <org.apache.naming.resources.WARDirContext: org.apache.juli.logging.Log log>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception closing WAR File ");
        $r7 = r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base>;
        $r8 = virtualinvoke $r7.<java.util.zip.ZipFile: java.lang.String getName()>();
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r10, r1);

     label3:
        r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base> = null;
        specialinvoke r0.<org.apache.naming.resources.BaseDirContext: void release()>();
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    protected java.lang.String doGetRealPath(java.lang.String)
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        return null;
    }

    protected java.lang.Object doLookup(java.lang.String)
    {
        org.apache.naming.resources.WARDirContext r0, $r11;
        java.lang.String r1, $r9;
        javax.naming.Name r2;
        javax.naming.InvalidNameException r3, $r5;
        java.util.zip.ZipEntry r4, $r14;
        org.apache.juli.logging.Log $r6;
        org.apache.naming.StringManager $r7;
        java.lang.Object[] $r8;
        boolean $z0, $z1;
        org.apache.naming.resources.WARDirContext$Entry r10;
        java.util.zip.ZipFile $r12;
        org.apache.naming.resources.WARDirContext$WARResource $r13;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;

     label0:
        r2 = specialinvoke r0.<org.apache.naming.resources.WARDirContext: javax.naming.Name getEscapedJndiName(java.lang.String)>(r1);

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = <org.apache.naming.resources.WARDirContext: org.apache.juli.logging.Log log>;
        $r7 = <org.apache.naming.resources.WARDirContext: org.apache.naming.StringManager sm>;
        $r8 = newarray (java.lang.Object)[1];
        $r8[0] = r1;
        $r9 = virtualinvoke $r7.<org.apache.naming.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("resources.invalidName", $r8);
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r9, r3);
        return null;

     label3:
        $z0 = interfaceinvoke r2.<javax.naming.Name: boolean isEmpty()>();
        if $z0 == 0 goto label4;

        return r0;

     label4:
        r10 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry treeLookup(javax.naming.Name)>(r2);
        if r10 != null goto label5;

        return null;

     label5:
        r4 = virtualinvoke r10.<org.apache.naming.resources.WARDirContext$Entry: java.util.zip.ZipEntry getEntry()>();
        $z1 = virtualinvoke r4.<java.util.zip.ZipEntry: boolean isDirectory()>();
        if $z1 == 0 goto label6;

        $r11 = new org.apache.naming.resources.WARDirContext;
        $r12 = r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base>;
        specialinvoke $r11.<org.apache.naming.resources.WARDirContext: void <init>(java.util.zip.ZipFile,org.apache.naming.resources.WARDirContext$Entry)>($r12, r10);
        return $r11;

     label6:
        $r13 = new org.apache.naming.resources.WARDirContext$WARResource;
        $r14 = virtualinvoke r10.<org.apache.naming.resources.WARDirContext$Entry: java.util.zip.ZipEntry getEntry()>();
        specialinvoke $r13.<org.apache.naming.resources.WARDirContext$WARResource: void <init>(org.apache.naming.resources.WARDirContext,java.util.zip.ZipEntry)>(r0, $r14);
        return $r13;

        catch javax.naming.InvalidNameException from label0 to label1 with label2;
    }

    private javax.naming.Name getEscapedJndiName(java.lang.String) throws javax.naming.InvalidNameException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1, $r3, $r4;
        javax.naming.CompositeName $r2;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.CompositeName;
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\'", "\\\'");
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "");
        specialinvoke $r2.<javax.naming.CompositeName: void <init>(java.lang.String)>($r4);
        return $r2;
    }

    public void unbind(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        javax.naming.OperationNotSupportedException $r2;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r2.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r2;
    }

    public void rename(java.lang.String, java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1, r2;
        javax.naming.OperationNotSupportedException $r3;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r3.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r3;
    }

    protected java.util.List doListBindings(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        javax.naming.Name r2;
        org.apache.naming.resources.WARDirContext$Entry r3, $r4;
        boolean $z0;
        java.util.ArrayList $r5, $r6;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 = specialinvoke r0.<org.apache.naming.resources.WARDirContext: javax.naming.Name getEscapedJndiName(java.lang.String)>(r1);
        $z0 = interfaceinvoke r2.<javax.naming.Name: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries>;
        $r5 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: java.util.ArrayList list(org.apache.naming.resources.WARDirContext$Entry)>($r4);
        return $r5;

     label0:
        r3 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry treeLookup(javax.naming.Name)>(r2);
        if r3 != null goto label1;

        return null;

     label1:
        $r6 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: java.util.ArrayList list(org.apache.naming.resources.WARDirContext$Entry)>(r3);
        return $r6;
    }

    public void destroySubcontext(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        javax.naming.OperationNotSupportedException $r2;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r2.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r2;
    }

    public java.lang.Object lookupLink(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: java.lang.Object lookup(java.lang.String)>(r1);
        return $r2;
    }

    public java.lang.String getNameInNamespace() throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String $r1;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        $r1 = r0.<org.apache.naming.resources.WARDirContext: java.lang.String docBase>;
        return $r1;
    }

    protected javax.naming.directory.Attributes doGetAttributes(java.lang.String, java.lang.String[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        java.lang.String[] r2;
        javax.naming.Name $r3;
        javax.naming.directory.Attributes $r4;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String[];
        $r3 = specialinvoke r0.<org.apache.naming.resources.WARDirContext: javax.naming.Name getEscapedJndiName(java.lang.String)>(r1);
        $r4 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: javax.naming.directory.Attributes getAttributes(javax.naming.Name,java.lang.String[])>($r3, r2);
        return $r4;
    }

    public javax.naming.directory.Attributes getAttributes(javax.naming.Name, java.lang.String[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        javax.naming.Name r1;
        java.lang.String[] r2;
        null_type n0;
        java.util.zip.ZipEntry r3;
        org.apache.naming.resources.ResourceAttributes r4, $r6;
        boolean $z0, $z1;
        org.apache.naming.resources.WARDirContext$Entry r5;
        java.util.Date $r7;
        long $l0, $l1, $l2;
        java.lang.String $r8;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: javax.naming.Name;
        r2 := @parameter1: java.lang.String[];
        n0 = null;
        $z0 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        r5 = r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries>;
        goto label1;

     label0:
        r5 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry treeLookup(javax.naming.Name)>(r1);

     label1:
        if r5 != null goto label2;

        return null;

     label2:
        r3 = virtualinvoke r5.<org.apache.naming.resources.WARDirContext$Entry: java.util.zip.ZipEntry getEntry()>();
        $r6 = new org.apache.naming.resources.ResourceAttributes;
        specialinvoke $r6.<org.apache.naming.resources.ResourceAttributes: void <init>()>();
        r4 = $r6;
        $r7 = new java.util.Date;
        $l0 = virtualinvoke r3.<java.util.zip.ZipEntry: long getTime()>();
        specialinvoke $r7.<java.util.Date: void <init>(long)>($l0);
        virtualinvoke r4.<org.apache.naming.resources.ResourceAttributes: void setCreationDate(java.util.Date)>($r7);
        $r8 = virtualinvoke r5.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String getName()>();
        virtualinvoke r4.<org.apache.naming.resources.ResourceAttributes: void setName(java.lang.String)>($r8);
        $z1 = virtualinvoke r3.<java.util.zip.ZipEntry: boolean isDirectory()>();
        if $z1 != 0 goto label3;

        virtualinvoke r4.<org.apache.naming.resources.ResourceAttributes: void setResourceType(java.lang.String)>("");
        goto label4;

     label3:
        virtualinvoke r4.<org.apache.naming.resources.ResourceAttributes: void setCollection(boolean)>(1);

     label4:
        $l1 = virtualinvoke r3.<java.util.zip.ZipEntry: long getSize()>();
        virtualinvoke r4.<org.apache.naming.resources.ResourceAttributes: void setContentLength(long)>($l1);
        $l2 = virtualinvoke r3.<java.util.zip.ZipEntry: long getTime()>();
        virtualinvoke r4.<org.apache.naming.resources.ResourceAttributes: void setLastModified(long)>($l2);
        return r4;
    }

    public void modifyAttributes(java.lang.String, int, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        int i0;
        javax.naming.directory.Attributes r2;
        javax.naming.OperationNotSupportedException $r3;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: javax.naming.directory.Attributes;
        $r3 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r3.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r3;
    }

    public void modifyAttributes(java.lang.String, javax.naming.directory.ModificationItem[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        javax.naming.directory.ModificationItem[] r2;
        javax.naming.OperationNotSupportedException $r3;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.naming.directory.ModificationItem[];
        $r3 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r3.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r3;
    }

    public void bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        java.lang.Object r2;
        javax.naming.directory.Attributes r3;
        javax.naming.OperationNotSupportedException $r4;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: javax.naming.directory.Attributes;
        $r4 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r4.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r4;
    }

    public void rebind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        java.lang.Object r2;
        javax.naming.directory.Attributes r3;
        javax.naming.OperationNotSupportedException $r4;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: javax.naming.directory.Attributes;
        $r4 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r4.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r4;
    }

    public javax.naming.directory.DirContext createSubcontext(java.lang.String, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        javax.naming.directory.Attributes r2;
        javax.naming.OperationNotSupportedException $r3;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.naming.directory.Attributes;
        $r3 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r3.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r3;
    }

    public javax.naming.directory.DirContext getSchema(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        javax.naming.OperationNotSupportedException $r2;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r2.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r2;
    }

    public javax.naming.directory.DirContext getSchemaClassDefinition(java.lang.String) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        javax.naming.OperationNotSupportedException $r2;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        $r2 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r2.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r2;
    }

    public javax.naming.NamingEnumeration search(java.lang.String, javax.naming.directory.Attributes, java.lang.String[]) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        javax.naming.directory.Attributes r2;
        java.lang.String[] r3;
        javax.naming.OperationNotSupportedException $r4;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.naming.directory.Attributes;
        r3 := @parameter2: java.lang.String[];
        $r4 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r4.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r4;
    }

    public javax.naming.NamingEnumeration search(java.lang.String, javax.naming.directory.Attributes) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1;
        javax.naming.directory.Attributes r2;
        javax.naming.OperationNotSupportedException $r3;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.naming.directory.Attributes;
        $r3 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r3.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r3;
    }

    public javax.naming.NamingEnumeration search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1, r2;
        javax.naming.directory.SearchControls r3;
        javax.naming.OperationNotSupportedException $r4;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: javax.naming.directory.SearchControls;
        $r4 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r4.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r4;
    }

    public javax.naming.NamingEnumeration search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls) throws javax.naming.NamingException
    {
        org.apache.naming.resources.WARDirContext r0;
        java.lang.String r1, r2;
        java.lang.Object[] r3;
        javax.naming.directory.SearchControls r4;
        javax.naming.OperationNotSupportedException $r5;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Object[];
        r4 := @parameter3: javax.naming.directory.SearchControls;
        $r5 = new javax.naming.OperationNotSupportedException;
        specialinvoke $r5.<javax.naming.OperationNotSupportedException: void <init>()>();
        throw $r5;
    }

    protected java.lang.String normalize(java.util.zip.ZipEntry)
    {
        org.apache.naming.resources.WARDirContext r0;
        java.util.zip.ZipEntry r1;
        java.lang.StringBuilder $r2, $r5;
        java.lang.String r3, $r4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: java.util.zip.ZipEntry;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("/");
        $r4 = virtualinvoke r1.<java.util.zip.ZipEntry: java.lang.String getName()>();
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $z0 = virtualinvoke r1.<java.util.zip.ZipEntry: boolean isDirectory()>();
        if $z0 == 0 goto label0;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        $i1 = $i0 - 1;
        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label0:
        return r3;
    }

    protected void loadEntries()
    {
        org.apache.naming.resources.WARDirContext r0;
        java.util.Enumeration r1;
        org.apache.naming.resources.WARDirContext$Entry $r2, r9, r10, $r20, r22, r26, $r27, r28;
        java.util.zip.ZipEntry $r3, r4, $r21;
        java.lang.String r5, r8, r11, $r14, $r15, $r17, $r18, r23, $r24;
        int i0, i2, $i3, i4, $i5, $i6;
        byte b1;
        javax.naming.Name r6, r7, r25;
        java.util.zip.ZipFile $r12;
        java.lang.Object $r13;
        java.lang.StringBuilder $r16, $r19;
        boolean $z0;
        java.lang.Exception $r29, r30;

        r0 := @this: org.apache.naming.resources.WARDirContext;

     label0:
        $r12 = r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base>;
        r1 = virtualinvoke $r12.<java.util.zip.ZipFile: java.util.Enumeration entries()>();
        $r2 = new org.apache.naming.resources.WARDirContext$Entry;
        $r3 = new java.util.zip.ZipEntry;
        specialinvoke $r3.<java.util.zip.ZipEntry: void <init>(java.lang.String)>("/");
        specialinvoke $r2.<org.apache.naming.resources.WARDirContext$Entry: void <init>(java.lang.String,java.util.zip.ZipEntry)>("/", $r3);
        r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries> = $r2;
        goto label5;

     label1:
        $r13 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();
        r4 = (java.util.zip.ZipEntry) $r13;
        r5 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: java.lang.String normalize(java.util.zip.ZipEntry)>(r4);
        i0 = virtualinvoke r5.<java.lang.String: int lastIndexOf(int)>(47);
        b1 = -1;
        i2 = 0;
        goto label4;

     label2:
        $r14 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i2);
        r6 = specialinvoke r0.<org.apache.naming.resources.WARDirContext: javax.naming.Name getEscapedJndiName(java.lang.String)>($r14);
        $r15 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i4);
        r7 = specialinvoke r0.<org.apache.naming.resources.WARDirContext: javax.naming.Name getEscapedJndiName(java.lang.String)>($r15);
        r8 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(i2, i4);
        r9 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry treeLookup(javax.naming.Name)>(r6);
        r10 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry treeLookup(javax.naming.Name)>(r7);
        if r10 != null goto label3;

        $r16 = new java.lang.StringBuilder;
        $r17 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(1, i4);
        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>($r18);
        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        r11 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        $r20 = new org.apache.naming.resources.WARDirContext$Entry;
        $r21 = new java.util.zip.ZipEntry;
        specialinvoke $r21.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r11);
        specialinvoke $r20.<org.apache.naming.resources.WARDirContext$Entry: void <init>(java.lang.String,java.util.zip.ZipEntry)>(r8, $r21);
        r22 = $r20;
        if r9 == null goto label3;

        virtualinvoke r9.<org.apache.naming.resources.WARDirContext$Entry: void addChild(org.apache.naming.resources.WARDirContext$Entry)>(r22);

     label3:
        i2 = i4 + 1;

     label4:
        $i3 = virtualinvoke r5.<java.lang.String: int indexOf(int,int)>(47, i2);
        i4 = $i3;
        if $i3 != -1 goto label2;

        $i5 = i0 + 1;
        $i6 = virtualinvoke r5.<java.lang.String: int length()>();
        r23 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>($i5, $i6);
        $r24 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        r25 = specialinvoke r0.<org.apache.naming.resources.WARDirContext: javax.naming.Name getEscapedJndiName(java.lang.String)>($r24);
        r26 = virtualinvoke r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry treeLookup(javax.naming.Name)>(r25);
        $r27 = new org.apache.naming.resources.WARDirContext$Entry;
        specialinvoke $r27.<org.apache.naming.resources.WARDirContext$Entry: void <init>(java.lang.String,java.util.zip.ZipEntry)>(r23, r4);
        r28 = $r27;
        if r26 == null goto label5;

        virtualinvoke r26.<org.apache.naming.resources.WARDirContext$Entry: void addChild(org.apache.naming.resources.WARDirContext$Entry)>(r28);

     label5:
        $z0 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 != 0 goto label1;

     label6:
        goto label8;

     label7:
        $r29 := @caughtexception;
        r30 = $r29;

     label8:
        return;

        catch java.lang.Exception from label0 to label6 with label7;
    }

    protected org.apache.naming.resources.WARDirContext$Entry treeLookup(javax.naming.Name)
    {
        org.apache.naming.resources.WARDirContext r0;
        javax.naming.Name r1;
        org.apache.naming.resources.WARDirContext$Entry r2, $r3, $r4;
        int i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r5, $r6;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: javax.naming.Name;
        $z0 = interfaceinvoke r1.<javax.naming.Name: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $r3 = r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries>;
        if $r3 != null goto label1;

     label0:
        $r4 = r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries>;
        return $r4;

     label1:
        r2 = r0.<org.apache.naming.resources.WARDirContext: org.apache.naming.resources.WARDirContext$Entry entries>;
        i0 = 0;
        goto label5;

     label2:
        $r5 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(i0);
        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();
        if $i1 != 0 goto label3;

        goto label4;

     label3:
        $r6 = interfaceinvoke r1.<javax.naming.Name: java.lang.String get(int)>(i0);
        r2 = virtualinvoke r2.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry getChild(java.lang.String)>($r6);
        if r2 != null goto label4;

        return null;

     label4:
        i0 = i0 + 1;

     label5:
        $i2 = interfaceinvoke r1.<javax.naming.Name: int size()>();
        if i0 < $i2 goto label2;

        return r2;
    }

    protected java.util.ArrayList list(org.apache.naming.resources.WARDirContext$Entry)
    {
        org.apache.naming.resources.WARDirContext r0, $r7;
        org.apache.naming.resources.WARDirContext$Entry r1, $r6, $r9, $r13;
        java.util.ArrayList $r2, r3;
        org.apache.naming.resources.WARDirContext$Entry[] r4;
        null_type n0, n1;
        int i0, $i1;
        java.util.zip.ZipEntry r5;
        boolean $z0;
        java.util.zip.ZipFile $r8;
        java.lang.Object r10;
        org.apache.naming.resources.WARDirContext$WARResource $r11;
        org.apache.naming.NamingEntry $r12, r15;
        java.lang.String $r14;

        r0 := @this: org.apache.naming.resources.WARDirContext;
        r1 := @parameter0: org.apache.naming.resources.WARDirContext$Entry;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        r4 = virtualinvoke r1.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] getChildren()>();
        n0 = null;
        i0 = 0;
        goto label3;

     label0:
        $r6 = r4[i0];
        r5 = virtualinvoke $r6.<org.apache.naming.resources.WARDirContext$Entry: java.util.zip.ZipEntry getEntry()>();
        n1 = null;
        $z0 = virtualinvoke r5.<java.util.zip.ZipEntry: boolean isDirectory()>();
        if $z0 == 0 goto label1;

        $r7 = new org.apache.naming.resources.WARDirContext;
        $r8 = r0.<org.apache.naming.resources.WARDirContext: java.util.zip.ZipFile base>;
        $r9 = r4[i0];
        specialinvoke $r7.<org.apache.naming.resources.WARDirContext: void <init>(java.util.zip.ZipFile,org.apache.naming.resources.WARDirContext$Entry)>($r8, $r9);
        r10 = $r7;
        goto label2;

     label1:
        $r11 = new org.apache.naming.resources.WARDirContext$WARResource;
        specialinvoke $r11.<org.apache.naming.resources.WARDirContext$WARResource: void <init>(org.apache.naming.resources.WARDirContext,java.util.zip.ZipEntry)>(r0, r5);
        r10 = $r11;

     label2:
        $r12 = new org.apache.naming.NamingEntry;
        $r13 = r4[i0];
        $r14 = virtualinvoke $r13.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String getName()>();
        specialinvoke $r12.<org.apache.naming.NamingEntry: void <init>(java.lang.String,java.lang.Object,int)>($r14, r10, 0);
        r15 = $r12;
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);
        i0 = i0 + 1;

     label3:
        $i1 = lengthof r4;
        if i0 < $i1 goto label0;

        return r3;
    }
}
