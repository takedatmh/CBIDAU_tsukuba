public abstract class sun.net.www.protocol.http.Negotiator extends java.lang.Object
{

    public void <init>()
    {
        sun.net.www.protocol.http.Negotiator r0;

        r0 := @this: sun.net.www.protocol.http.Negotiator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static sun.net.www.protocol.http.Negotiator getNegotiator(sun.net.www.protocol.http.HttpCallerInfo)
    {
        sun.net.www.protocol.http.HttpCallerInfo r0;
        java.lang.Class r1;
        java.lang.reflect.Constructor r2;
        java.lang.ClassNotFoundException r3, $r6;
        java.lang.Throwable r4;
        java.lang.Class[] $r5;
        java.lang.ReflectiveOperationException $r7, r8, $r14, r15;
        java.lang.AssertionError $r9;
        java.lang.Object[] $r10;
        java.lang.Object $r11;
        sun.net.www.protocol.http.Negotiator $r12, $r13;
        boolean $z0;
        java.lang.Exception $r16;

        r0 := @parameter0: sun.net.www.protocol.http.HttpCallerInfo;

     label0:
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("sun.net.www.protocol.http.spnego.NegotiatorImpl", 1, null);
        $r5 = newarray (java.lang.Class)[1];
        $r5[0] = class "sun/net/www/protocol/http/HttpCallerInfo";
        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r5);

     label1:
        goto label4;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;
        staticinvoke <sun.net.www.protocol.http.Negotiator: void finest(java.lang.Exception)>(r3);
        return null;

     label3:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = new java.lang.AssertionError;
        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>(r8);
        throw $r9;

     label4:
        $r10 = newarray (java.lang.Object)[1];
        $r10[0] = r0;
        $r11 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r10);
        $r12 = (sun.net.www.protocol.http.Negotiator) $r11;
        $r13 = (sun.net.www.protocol.http.Negotiator) $r12;

     label5:
        return $r13;

     label6:
        $r14 := @caughtexception;
        r15 = $r14;
        staticinvoke <sun.net.www.protocol.http.Negotiator: void finest(java.lang.Exception)>(r15);
        r4 = virtualinvoke r15.<java.lang.ReflectiveOperationException: java.lang.Throwable getCause()>();
        if r4 == null goto label7;

        $z0 = r4 instanceof java.lang.Exception;
        if $z0 == 0 goto label7;

        $r16 = (java.lang.Exception) r4;
        staticinvoke <sun.net.www.protocol.http.Negotiator: void finest(java.lang.Exception)>($r16);

     label7:
        return null;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
        catch java.lang.ReflectiveOperationException from label0 to label1 with label3;
        catch java.lang.ReflectiveOperationException from label4 to label5 with label6;
    }

    public abstract byte[] firstToken() throws java.io.IOException;

    public abstract byte[] nextToken(byte[]) throws java.io.IOException;

    private static void finest(java.lang.Exception)
    {
        java.lang.Exception r0;
        sun.util.logging.PlatformLogger r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @parameter0: java.lang.Exception;
        r1 = staticinvoke <sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger getHttpLogger()>();
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NegotiateAuthentication: ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<sun.util.logging.PlatformLogger: void finest(java.lang.String)>($r5);
        return;
    }
}
