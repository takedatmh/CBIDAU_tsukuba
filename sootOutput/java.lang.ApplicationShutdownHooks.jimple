class java.lang.ApplicationShutdownHooks extends java.lang.Object
{
    private static java.util.IdentityHashMap hooks;

    private void <init>()
    {
        java.lang.ApplicationShutdownHooks r0;

        r0 := @this: java.lang.ApplicationShutdownHooks;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static synchronized void add(java.lang.Thread)
    {
        java.lang.Thread r0;
        java.util.IdentityHashMap $r1, $r4, $r6;
        java.lang.IllegalStateException $r2;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3, $r5;

        r0 := @parameter0: java.lang.Thread;
        $r1 = <java.lang.ApplicationShutdownHooks: java.util.IdentityHashMap hooks>;
        if $r1 != null goto label0;

        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Shutdown in progress");
        throw $r2;

     label0:
        $z0 = virtualinvoke r0.<java.lang.Thread: boolean isAlive()>();
        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Hook already running");
        throw $r3;

     label1:
        $r4 = <java.lang.ApplicationShutdownHooks: java.util.IdentityHashMap hooks>;
        $z1 = virtualinvoke $r4.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>(r0);
        if $z1 == 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Hook previously registered");
        throw $r5;

     label2:
        $r6 = <java.lang.ApplicationShutdownHooks: java.util.IdentityHashMap hooks>;
        virtualinvoke $r6.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r0);
        return;
    }

    static synchronized boolean remove(java.lang.Thread)
    {
        java.lang.Thread r0;
        java.util.IdentityHashMap $r1, $r4;
        java.lang.IllegalStateException $r2;
        java.lang.NullPointerException $r3;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.Thread;
        $r1 = <java.lang.ApplicationShutdownHooks: java.util.IdentityHashMap hooks>;
        if $r1 != null goto label0;

        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Shutdown in progress");
        throw $r2;

     label0:
        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label1:
        $r4 = <java.lang.ApplicationShutdownHooks: java.util.IdentityHashMap hooks>;
        $r5 = virtualinvoke $r4.<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>(r0);
        if $r5 == null goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static void runHooks()
    {
        java.lang.Class $r0, r1;
        java.util.Set r2;
        java.lang.Throwable r3, $r6;
        java.lang.InterruptedException r4, $r13;
        java.util.IdentityHashMap $r5;
        java.util.Iterator r7, r10;
        boolean $z0, $z1;
        java.lang.Object $r8, $r11;
        java.lang.Thread r9, r12;

        $r0 = class "java/lang/ApplicationShutdownHooks";
        r1 = $r0;
        entermonitor $r0;

     label0:
        $r5 = <java.lang.ApplicationShutdownHooks: java.util.IdentityHashMap hooks>;
        r2 = virtualinvoke $r5.<java.util.IdentityHashMap: java.util.Set keySet()>();
        <java.lang.ApplicationShutdownHooks: java.util.IdentityHashMap hooks> = null;
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r6 := @caughtexception;

     label3:
        r3 = $r6;
        exitmonitor r1;

     label4:
        throw r3;

     label5:
        r7 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        r9 = (java.lang.Thread) $r8;
        virtualinvoke r9.<java.lang.Thread: void start()>();
        goto label6;

     label7:
        r10 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label8:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label13;

        $r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();
        r12 = (java.lang.Thread) $r11;

     label9:
        virtualinvoke r12.<java.lang.Thread: void join()>();

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;
        r4 = $r13;

     label12:
        goto label8;

     label13:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.InterruptedException from label9 to label10 with label11;
    }

    static void <clinit>()
    {
        java.lang.ApplicationShutdownHooks$1 $r0;
        java.lang.IllegalStateException r1, $r3;
        java.util.IdentityHashMap $r2;

     label0:
        $r0 = new java.lang.ApplicationShutdownHooks$1;
        specialinvoke $r0.<java.lang.ApplicationShutdownHooks$1: void <init>()>();
        staticinvoke <java.lang.Shutdown: void add(int,boolean,java.lang.Runnable)>(1, 0, $r0);
        $r2 = new java.util.IdentityHashMap;
        specialinvoke $r2.<java.util.IdentityHashMap: void <init>()>();
        <java.lang.ApplicationShutdownHooks: java.util.IdentityHashMap hooks> = $r2;

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        <java.lang.ApplicationShutdownHooks: java.util.IdentityHashMap hooks> = null;

     label3:
        return;

        catch java.lang.IllegalStateException from label0 to label1 with label2;
    }
}
