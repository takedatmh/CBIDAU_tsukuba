public abstract class sun.misc.CharacterEncoder extends java.lang.Object
{
    protected java.io.PrintStream pStream;

    public void <init>()
    {
        sun.misc.CharacterEncoder r0;

        r0 := @this: sun.misc.CharacterEncoder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    protected abstract int bytesPerAtom();

    protected abstract int bytesPerLine();

    protected void encodeBufferPrefix(java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        java.io.OutputStream r1;
        java.io.PrintStream $r2;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.io.OutputStream;
        $r2 = new java.io.PrintStream;
        specialinvoke $r2.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r1);
        r0.<sun.misc.CharacterEncoder: java.io.PrintStream pStream> = $r2;
        return;
    }

    protected void encodeBufferSuffix(java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        java.io.OutputStream r1;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.io.OutputStream;
        return;
    }

    protected void encodeLinePrefix(java.io.OutputStream, int) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        java.io.OutputStream r1;
        int i0;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.io.OutputStream;
        i0 := @parameter1: int;
        return;
    }

    protected void encodeLineSuffix(java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        java.io.OutputStream r1;
        java.io.PrintStream $r2;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.io.OutputStream;
        $r2 = r0.<sun.misc.CharacterEncoder: java.io.PrintStream pStream>;
        virtualinvoke $r2.<java.io.PrintStream: void println()>();
        return;
    }

    protected abstract void encodeAtom(java.io.OutputStream, byte[], int, int) throws java.io.IOException;

    protected int readFully(java.io.InputStream, byte[]) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0, i1, $i2, $i4;
        byte $b3;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: byte[];
        i0 = 0;

     label0:
        $i2 = lengthof r2;
        if i0 >= $i2 goto label2;

        i1 = virtualinvoke r1.<java.io.InputStream: int read()>();
        if i1 != -1 goto label1;

        return i0;

     label1:
        $b3 = (byte) i1;
        r2[i0] = $b3;
        i0 = i0 + 1;
        goto label0;

     label2:
        $i4 = lengthof r2;
        return $i4;
    }

    public void encode(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        java.io.InputStream r1;
        java.io.OutputStream r2;
        byte[] r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.io.OutputStream;
        $i2 = virtualinvoke r0.<sun.misc.CharacterEncoder: int bytesPerLine()>();
        r3 = newarray (byte)[$i2];
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeBufferPrefix(java.io.OutputStream)>(r2);

     label0:
        i0 = virtualinvoke r0.<sun.misc.CharacterEncoder: int readFully(java.io.InputStream,byte[])>(r1, r3);
        if i0 != 0 goto label1;

        goto label7;

     label1:
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeLinePrefix(java.io.OutputStream,int)>(r2, i0);
        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $i3 = virtualinvoke r0.<sun.misc.CharacterEncoder: int bytesPerAtom()>();
        $i4 = i1 + $i3;
        if $i4 > i0 goto label3;

        $i5 = virtualinvoke r0.<sun.misc.CharacterEncoder: int bytesPerAtom()>();
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeAtom(java.io.OutputStream,byte[],int,int)>(r2, r3, i1, $i5);
        goto label4;

     label3:
        $i6 = i0 - i1;
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeAtom(java.io.OutputStream,byte[],int,int)>(r2, r3, i1, $i6);

     label4:
        $i7 = virtualinvoke r0.<sun.misc.CharacterEncoder: int bytesPerAtom()>();
        i1 = i1 + $i7;
        goto label2;

     label5:
        $i8 = virtualinvoke r0.<sun.misc.CharacterEncoder: int bytesPerLine()>();
        if i0 >= $i8 goto label6;

        goto label7;

     label6:
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeLineSuffix(java.io.OutputStream)>(r2);
        goto label0;

     label7:
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeBufferSuffix(java.io.OutputStream)>(r2);
        return;
    }

    public void encode(byte[], java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        byte[] r1;
        java.io.OutputStream r2;
        java.io.ByteArrayInputStream $r3, r4;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: byte[];
        r2 := @parameter1: java.io.OutputStream;
        $r3 = new java.io.ByteArrayInputStream;
        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);
        r4 = $r3;
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encode(java.io.InputStream,java.io.OutputStream)>(r4, r2);
        return;
    }

    public java.lang.String encode(byte[])
    {
        sun.misc.CharacterEncoder r0;
        byte[] r1;
        java.io.ByteArrayOutputStream $r2, r3;
        java.io.ByteArrayInputStream r4, $r6;
        null_type n0;
        java.lang.Exception r5, $r8;
        java.lang.String r7;
        java.lang.Error $r9;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: byte[];
        $r2 = new java.io.ByteArrayOutputStream;
        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();
        r3 = $r2;
        $r6 = new java.io.ByteArrayInputStream;
        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);
        r4 = $r6;
        n0 = null;

     label0:
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encode(java.io.InputStream,java.io.OutputStream)>(r4, r3);
        r7 = virtualinvoke r3.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("8859_1");

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r5 = $r8;
        $r9 = new java.lang.Error;
        specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>("CharacterEncoder.encode internal error");
        throw $r9;

     label3:
        return r7;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    private byte[] getBytes(java.nio.ByteBuffer)
    {
        sun.misc.CharacterEncoder r0;
        java.nio.ByteBuffer r1;
        byte[] r2, r3;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.nio.ByteBuffer;
        r2 = null;
        $z0 = virtualinvoke r1.<java.nio.ByteBuffer: boolean hasArray()>();
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();
        $i0 = lengthof r3;
        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int capacity()>();
        if $i0 != $i1 goto label0;

        $i2 = lengthof r3;
        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();
        if $i2 != $i3 goto label0;

        r2 = r3;
        $i4 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i4);

     label0:
        if r2 != null goto label1;

        $i5 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();
        r2 = newarray (byte)[$i5];
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r2);

     label1:
        return r2;
    }

    public void encode(java.nio.ByteBuffer, java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        java.nio.ByteBuffer r1;
        java.io.OutputStream r2;
        byte[] r3;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.nio.ByteBuffer;
        r2 := @parameter1: java.io.OutputStream;
        r3 = specialinvoke r0.<sun.misc.CharacterEncoder: byte[] getBytes(java.nio.ByteBuffer)>(r1);
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encode(byte[],java.io.OutputStream)>(r3, r2);
        return;
    }

    public java.lang.String encode(java.nio.ByteBuffer)
    {
        sun.misc.CharacterEncoder r0;
        java.nio.ByteBuffer r1;
        byte[] r2;
        java.lang.String $r3;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.nio.ByteBuffer;
        r2 = specialinvoke r0.<sun.misc.CharacterEncoder: byte[] getBytes(java.nio.ByteBuffer)>(r1);
        $r3 = virtualinvoke r0.<sun.misc.CharacterEncoder: java.lang.String encode(byte[])>(r2);
        return $r3;
    }

    public void encodeBuffer(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        java.io.InputStream r1;
        java.io.OutputStream r2;
        byte[] r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.io.OutputStream;
        $i2 = virtualinvoke r0.<sun.misc.CharacterEncoder: int bytesPerLine()>();
        r3 = newarray (byte)[$i2];
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeBufferPrefix(java.io.OutputStream)>(r2);

     label0:
        i0 = virtualinvoke r0.<sun.misc.CharacterEncoder: int readFully(java.io.InputStream,byte[])>(r1, r3);
        if i0 != 0 goto label1;

        goto label6;

     label1:
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeLinePrefix(java.io.OutputStream,int)>(r2, i0);
        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $i3 = virtualinvoke r0.<sun.misc.CharacterEncoder: int bytesPerAtom()>();
        $i4 = i1 + $i3;
        if $i4 > i0 goto label3;

        $i5 = virtualinvoke r0.<sun.misc.CharacterEncoder: int bytesPerAtom()>();
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeAtom(java.io.OutputStream,byte[],int,int)>(r2, r3, i1, $i5);
        goto label4;

     label3:
        $i6 = i0 - i1;
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeAtom(java.io.OutputStream,byte[],int,int)>(r2, r3, i1, $i6);

     label4:
        $i7 = virtualinvoke r0.<sun.misc.CharacterEncoder: int bytesPerAtom()>();
        i1 = i1 + $i7;
        goto label2;

     label5:
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeLineSuffix(java.io.OutputStream)>(r2);
        $i8 = virtualinvoke r0.<sun.misc.CharacterEncoder: int bytesPerLine()>();
        if i0 >= $i8 goto label0;

        goto label6;

     label6:
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeBufferSuffix(java.io.OutputStream)>(r2);
        return;
    }

    public void encodeBuffer(byte[], java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        byte[] r1;
        java.io.OutputStream r2;
        java.io.ByteArrayInputStream $r3, r4;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: byte[];
        r2 := @parameter1: java.io.OutputStream;
        $r3 = new java.io.ByteArrayInputStream;
        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);
        r4 = $r3;
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeBuffer(java.io.InputStream,java.io.OutputStream)>(r4, r2);
        return;
    }

    public java.lang.String encodeBuffer(byte[])
    {
        sun.misc.CharacterEncoder r0;
        byte[] r1;
        java.io.ByteArrayOutputStream $r2, r3;
        java.io.ByteArrayInputStream r4, $r6;
        java.lang.Exception r5, $r7;
        java.lang.Error $r8;
        java.lang.String $r9;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: byte[];
        $r2 = new java.io.ByteArrayOutputStream;
        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();
        r3 = $r2;
        $r6 = new java.io.ByteArrayInputStream;
        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);
        r4 = $r6;

     label0:
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeBuffer(java.io.InputStream,java.io.OutputStream)>(r4, r3);

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r5 = $r7;
        $r8 = new java.lang.Error;
        specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>("CharacterEncoder.encodeBuffer internal error");
        throw $r8;

     label3:
        $r9 = virtualinvoke r3.<java.io.ByteArrayOutputStream: java.lang.String toString()>();
        return $r9;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void encodeBuffer(java.nio.ByteBuffer, java.io.OutputStream) throws java.io.IOException
    {
        sun.misc.CharacterEncoder r0;
        java.nio.ByteBuffer r1;
        java.io.OutputStream r2;
        byte[] r3;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.nio.ByteBuffer;
        r2 := @parameter1: java.io.OutputStream;
        r3 = specialinvoke r0.<sun.misc.CharacterEncoder: byte[] getBytes(java.nio.ByteBuffer)>(r1);
        virtualinvoke r0.<sun.misc.CharacterEncoder: void encodeBuffer(byte[],java.io.OutputStream)>(r3, r2);
        return;
    }

    public java.lang.String encodeBuffer(java.nio.ByteBuffer)
    {
        sun.misc.CharacterEncoder r0;
        java.nio.ByteBuffer r1;
        byte[] r2;
        java.lang.String $r3;

        r0 := @this: sun.misc.CharacterEncoder;
        r1 := @parameter0: java.nio.ByteBuffer;
        r2 = specialinvoke r0.<sun.misc.CharacterEncoder: byte[] getBytes(java.nio.ByteBuffer)>(r1);
        $r3 = virtualinvoke r0.<sun.misc.CharacterEncoder: java.lang.String encodeBuffer(byte[])>(r2);
        return $r3;
    }
}
