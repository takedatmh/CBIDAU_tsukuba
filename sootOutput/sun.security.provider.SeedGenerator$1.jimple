final class sun.security.provider.SeedGenerator$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.security.MessageDigest val$md;

    void <init>(java.security.MessageDigest)
    {
        sun.security.provider.SeedGenerator$1 r0;
        java.security.MessageDigest r1;

        r0 := @this: sun.security.provider.SeedGenerator$1;
        r1 := @parameter0: java.security.MessageDigest;
        r0.<sun.security.provider.SeedGenerator$1: java.security.MessageDigest val$md> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run()
    {
        sun.security.provider.SeedGenerator$1 r0;
        java.util.Properties r1;
        java.util.Enumeration r2;
        java.lang.String r3, $r16, $r20, $r26;
        java.io.File r4, $r19;
        int i0, $i1, $i2, $i5, $i7;
        java.nio.file.DirectoryStream r5;
        java.lang.Throwable r6, r10, r11, $r28, r29, $r30, r31, $r32, $r33;
        java.util.Random r7, $r22;
        java.util.Iterator r8;
        java.nio.file.Path r9, $r21, $r25;
        boolean $z0, $z1, $z2;
        java.lang.Object $r12, $r23;
        java.security.MessageDigest $r13, $r15, $r18, $r24, $r36, $r39, $r41;
        byte[] $r14, $r17, $r27, r38, r40;
        java.lang.Exception $r34, r35;
        byte $b3;
        java.lang.Runtime r37;
        long $l4, $l6;

        r0 := @this: sun.security.provider.SeedGenerator$1;

     label0:
        r1 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();
        r2 = virtualinvoke r1.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();
        r3 = (java.lang.String) $r12;
        $r13 = r0.<sun.security.provider.SeedGenerator$1: java.security.MessageDigest val$md>;
        $r14 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>();
        virtualinvoke $r13.<java.security.MessageDigest: void update(byte[])>($r14);
        $r15 = r0.<sun.security.provider.SeedGenerator$1: java.security.MessageDigest val$md>;
        $r16 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r3);
        $r17 = virtualinvoke $r16.<java.lang.String: byte[] getBytes()>();
        virtualinvoke $r15.<java.security.MessageDigest: void update(byte[])>($r17);
        goto label1;

     label2:
        $r18 = r0.<sun.security.provider.SeedGenerator$1: java.security.MessageDigest val$md>;
        staticinvoke <sun.security.provider.SeedGenerator: void access$000(java.security.MessageDigest)>($r18);
        $r19 = new java.io.File;
        $r20 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");
        specialinvoke $r19.<java.io.File: void <init>(java.lang.String)>($r20);
        r4 = $r19;
        i0 = 0;
        $r21 = virtualinvoke r4.<java.io.File: java.nio.file.Path toPath()>();
        r5 = staticinvoke <java.nio.file.Files: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path)>($r21);
        r6 = null;

     label3:
        $r22 = new java.util.Random;
        specialinvoke $r22.<java.util.Random: void <init>()>();
        r7 = $r22;
        r8 = interfaceinvoke r5.<java.nio.file.DirectoryStream: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label8;

        $r23 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
        r9 = (java.nio.file.Path) $r23;
        if i0 < 512 goto label5;

        $z2 = virtualinvoke r7.<java.util.Random: boolean nextBoolean()>();
        if $z2 == 0 goto label6;

     label5:
        $r24 = r0.<sun.security.provider.SeedGenerator$1: java.security.MessageDigest val$md>;
        $r25 = interfaceinvoke r9.<java.nio.file.Path: java.nio.file.Path getFileName()>();
        $r26 = interfaceinvoke $r25.<java.nio.file.Path: java.lang.String toString()>();
        $r27 = virtualinvoke $r26.<java.lang.String: byte[] getBytes()>();
        virtualinvoke $r24.<java.security.MessageDigest: void update(byte[])>($r27);

     label6:
        $i1 = i0;
        i0 = i0 + 1;
        if $i1 <= 1024 goto label7;

        goto label8;

     label7:
        goto label4;

     label8:
        if r5 == null goto label22;

        if r6 == null goto label12;

     label9:
        interfaceinvoke r5.<java.nio.file.DirectoryStream: void close()>();

     label10:
        goto label22;

     label11:
        $r28 := @caughtexception;
        r29 = $r28;
        virtualinvoke r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r29);
        goto label22;

     label12:
        interfaceinvoke r5.<java.nio.file.DirectoryStream: void close()>();
        goto label22;

     label13:
        $r30 := @caughtexception;

     label14:
        r31 = $r30;
        r6 = r31;
        throw r31;

     label15:
        $r32 := @caughtexception;
        r10 = $r32;

     label16:
        if r5 == null goto label21;

        if r6 == null goto label20;

     label17:
        interfaceinvoke r5.<java.nio.file.DirectoryStream: void close()>();

     label18:
        goto label21;

     label19:
        $r33 := @caughtexception;
        r11 = $r33;
        virtualinvoke r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r11);
        goto label21;

     label20:
        interfaceinvoke r5.<java.nio.file.DirectoryStream: void close()>();

     label21:
        throw r10;

     label22:
        goto label24;

     label23:
        $r34 := @caughtexception;
        r35 = $r34;
        $r36 = r0.<sun.security.provider.SeedGenerator$1: java.security.MessageDigest val$md>;
        $i2 = virtualinvoke r35.<java.lang.Object: int hashCode()>();
        $b3 = (byte) $i2;
        virtualinvoke $r36.<java.security.MessageDigest: void update(byte)>($b3);

     label24:
        r37 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
        $l4 = virtualinvoke r37.<java.lang.Runtime: long totalMemory()>();
        r38 = staticinvoke <sun.security.provider.SeedGenerator: byte[] access$100(long)>($l4);
        $r39 = r0.<sun.security.provider.SeedGenerator$1: java.security.MessageDigest val$md>;
        $i5 = lengthof r38;
        virtualinvoke $r39.<java.security.MessageDigest: void update(byte[],int,int)>(r38, 0, $i5);
        $l6 = virtualinvoke r37.<java.lang.Runtime: long freeMemory()>();
        r40 = staticinvoke <sun.security.provider.SeedGenerator: byte[] access$100(long)>($l6);
        $r41 = r0.<sun.security.provider.SeedGenerator$1: java.security.MessageDigest val$md>;
        $i7 = lengthof r40;
        virtualinvoke $r41.<java.security.MessageDigest: void update(byte[],int,int)>(r40, 0, $i7);
        return null;

        catch java.lang.Throwable from label9 to label10 with label11;
        catch java.lang.Throwable from label3 to label8 with label13;
        catch java.lang.Throwable from label3 to label8 with label15;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label14 to label16 with label15;
        catch java.lang.Exception from label0 to label22 with label23;
    }

    public volatile java.lang.Object run()
    {
        sun.security.provider.SeedGenerator$1 r0;
        java.lang.Void $r1;

        r0 := @this: sun.security.provider.SeedGenerator$1;
        $r1 = virtualinvoke r0.<sun.security.provider.SeedGenerator$1: java.lang.Void run()>();
        return $r1;
    }
}
