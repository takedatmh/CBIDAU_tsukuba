public class sun.misc.MessageUtils extends java.lang.Object
{

    public void <init>()
    {
        sun.misc.MessageUtils r0;

        r0 := @this: sun.misc.MessageUtils;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String subst(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4;
        java.lang.String[] r2, $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r3 = newarray (java.lang.String)[1];
        $r3[0] = r1;
        r2 = $r3;
        $r4 = staticinvoke <sun.misc.MessageUtils: java.lang.String subst(java.lang.String,java.lang.String[])>(r0, r2);
        return $r4;
    }

    public static java.lang.String subst(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r5;
        java.lang.String[] r3, $r4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        $r4 = newarray (java.lang.String)[2];
        $r4[0] = r1;
        $r4[1] = r2;
        r3 = $r4;
        $r5 = staticinvoke <sun.misc.MessageUtils: java.lang.String subst(java.lang.String,java.lang.String[])>(r0, r3);
        return $r5;
    }

    public static java.lang.String subst(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3, $r6;
        java.lang.String[] r4, $r5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: java.lang.String;
        $r5 = newarray (java.lang.String)[3];
        $r5[0] = r1;
        $r5[1] = r2;
        $r5[2] = r3;
        r4 = $r5;
        $r6 = staticinvoke <sun.misc.MessageUtils: java.lang.String subst(java.lang.String,java.lang.String[])>(r0, r4);
        return $r6;
    }

    public static java.lang.String subst(java.lang.String, java.lang.String[])
    {
        java.lang.String r0, $r5, $r8;
        java.lang.String[] r1;
        java.lang.StringBuffer $r2, r3;
        int i0, i1, i3, $i4, $i6, $i8;
        char c2, $c5, $c7;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String[];
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        r3 = $r2;
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i1 = 0;

     label0:
        if i1 < 0 goto label5;

        if i1 >= i0 goto label5;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);
        if c2 != 37 goto label3;

        if i1 == i0 goto label4;

        $i4 = i1 + 1;
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);
        i3 = staticinvoke <java.lang.Character: int digit(char,int)>($c5, 10);
        if i3 != -1 goto label1;

        $i6 = i1 + 1;
        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c7);
        i1 = i1 + 1;
        goto label2;

     label1:
        $i8 = lengthof r1;
        if i3 >= $i8 goto label2;

        $r5 = r1[i3];
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        i1 = i1 + 1;

     label2:
        goto label4;

     label3:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2);

     label4:
        i1 = i1 + 1;
        goto label0;

     label5:
        $r8 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r8;
    }

    public static java.lang.String substProp(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);
        $r3 = staticinvoke <sun.misc.MessageUtils: java.lang.String subst(java.lang.String,java.lang.String)>($r2, r1);
        return $r3;
    }

    public static java.lang.String substProp(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);
        $r4 = staticinvoke <sun.misc.MessageUtils: java.lang.String subst(java.lang.String,java.lang.String,java.lang.String)>($r3, r1, r2);
        return $r4;
    }

    public static java.lang.String substProp(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3, $r4, $r5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: java.lang.String;
        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);
        $r5 = staticinvoke <sun.misc.MessageUtils: java.lang.String subst(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, r1, r2, r3);
        return $r5;
    }

    public static native void toStderr(java.lang.String);

    public static native void toStdout(java.lang.String);

    public static void err(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.StringBuilder $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.MessageUtils: void toStderr(java.lang.String)>($r4);
        return;
    }

    public static void out(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.StringBuilder $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.MessageUtils: void toStdout(java.lang.String)>($r4);
        return;
    }

    public static void where()
    {
        java.lang.Throwable $r0, r1;
        java.lang.StackTraceElement[] r2;
        int i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r7, $r8;
        java.lang.StackTraceElement $r5;
        java.lang.String $r6, $r9;

        $r0 = new java.lang.Throwable;
        specialinvoke $r0.<java.lang.Throwable: void <init>()>();
        r1 = $r0;
        r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();
        i0 = 1;

     label0:
        $i1 = lengthof r2;
        if i0 >= $i1 goto label1;

        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");
        $r5 = r2[i0];
        $r6 = virtualinvoke $r5.<java.lang.StackTraceElement: java.lang.String toString()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.MessageUtils: void toStderr(java.lang.String)>($r9);
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }
}
