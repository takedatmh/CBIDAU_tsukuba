public class org.apache.coyote.http11.filters.FlushableGZIPOutputStream extends java.util.zip.GZIPOutputStream
{
    private byte[] lastByte;
    private boolean hasLastByte;
    private boolean flagReenableCompression;

    public void <init>(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        java.io.OutputStream r1;
        byte[] $r2;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;
        r1 := @parameter0: java.io.OutputStream;
        specialinvoke r0.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>(r1);
        $r2 = newarray (byte)[1];
        r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: byte[] lastByte> = $r2;
        r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: boolean hasLastByte> = 0;
        r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: boolean flagReenableCompression> = 0;
        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;
        r1 := @parameter0: byte[];
        $i0 = lengthof r1;
        virtualinvoke r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void write(byte[],int,int)>(r1, 0, $i0);
        return;
    }

    public synchronized void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4;
        byte $b5;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if i1 <= 0 goto label1;

        specialinvoke r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void flushLastByte()>();
        if i1 <= 1 goto label0;

        specialinvoke r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void reenableCompression()>();
        $i2 = i1 - 1;
        specialinvoke r0.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>(r1, i0, $i2);

     label0:
        $i3 = i0 + i1;
        $i4 = $i3 - 1;
        $b5 = r1[$i4];
        specialinvoke r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void rememberLastByte(byte)>($b5);

     label1:
        return;
    }

    public synchronized void write(int) throws java.io.IOException
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        int i0;
        byte $b1;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;
        i0 := @parameter0: int;
        specialinvoke r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void flushLastByte()>();
        $b1 = (byte) i0;
        specialinvoke r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void rememberLastByte(byte)>($b1);
        return;
    }

    public synchronized void finish() throws java.io.IOException
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        java.io.IOException r1, $r2;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;

     label0:
        specialinvoke r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void flushLastByte()>();

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        r1 = $r2;

     label3:
        specialinvoke r0.<java.util.zip.GZIPOutputStream: void finish()>();
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public synchronized void close() throws java.io.IOException
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        java.io.IOException r1, $r2;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;

     label0:
        specialinvoke r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void flushLastByte()>();

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        r1 = $r2;

     label3:
        specialinvoke r0.<java.util.zip.GZIPOutputStream: void close()>();
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    private void reenableCompression()
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        boolean $z0, $z1;
        java.util.zip.Deflater $r1, $r2;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;
        $z0 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: boolean flagReenableCompression>;
        if $z0 == 0 goto label0;

        $r1 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: java.util.zip.Deflater def>;
        $z1 = virtualinvoke $r1.<java.util.zip.Deflater: boolean finished()>();
        if $z1 != 0 goto label0;

        r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: boolean flagReenableCompression> = 0;
        $r2 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: java.util.zip.Deflater def>;
        virtualinvoke $r2.<java.util.zip.Deflater: void setLevel(int)>(-1);

     label0:
        return;
    }

    private void rememberLastByte(byte)
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        byte b0;
        byte[] $r1;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;
        b0 := @parameter0: byte;
        $r1 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: byte[] lastByte>;
        $r1[0] = b0;
        r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: boolean hasLastByte> = 1;
        return;
    }

    private void flushLastByte() throws java.io.IOException
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        boolean $z0;
        byte[] $r1;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;
        $z0 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: boolean hasLastByte>;
        if $z0 == 0 goto label0;

        specialinvoke r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void reenableCompression()>();
        r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: boolean hasLastByte> = 0;
        $r1 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: byte[] lastByte>;
        specialinvoke r0.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>($r1, 0, 1);

     label0:
        return;
    }

    public synchronized void flush() throws java.io.IOException
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        boolean $z0, $z1;
        java.util.zip.Deflater $r1, $r2;
        java.io.OutputStream $r3;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;
        $z0 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: boolean hasLastByte>;
        if $z0 == 0 goto label0;

        $r1 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: java.util.zip.Deflater def>;
        $z1 = virtualinvoke $r1.<java.util.zip.Deflater: boolean finished()>();
        if $z1 != 0 goto label0;

        $r2 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: java.util.zip.Deflater def>;
        virtualinvoke $r2.<java.util.zip.Deflater: void setLevel(int)>(0);
        specialinvoke r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: void flushLastByte()>();
        r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: boolean flagReenableCompression> = 1;

     label0:
        $r3 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: java.io.OutputStream out>;
        virtualinvoke $r3.<java.io.OutputStream: void flush()>();
        return;
    }

    protected void deflate() throws java.io.IOException
    {
        org.apache.coyote.http11.filters.FlushableGZIPOutputStream r0;
        int i0, $i1;
        java.util.zip.Deflater $r1;
        byte[] $r2, $r3, $r5;
        java.io.OutputStream $r4;

        r0 := @this: org.apache.coyote.http11.filters.FlushableGZIPOutputStream;

     label0:
        $r1 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: java.util.zip.Deflater def>;
        $r2 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: byte[] buf>;
        $r3 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: byte[] buf>;
        $i1 = lengthof $r3;
        i0 = virtualinvoke $r1.<java.util.zip.Deflater: int deflate(byte[],int,int)>($r2, 0, $i1);
        if i0 <= 0 goto label1;

        $r4 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: java.io.OutputStream out>;
        $r5 = r0.<org.apache.coyote.http11.filters.FlushableGZIPOutputStream: byte[] buf>;
        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, i0);

     label1:
        if i0 != 0 goto label0;

        return;
    }
}
