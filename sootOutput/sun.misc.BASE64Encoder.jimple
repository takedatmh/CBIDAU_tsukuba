public class sun.misc.BASE64Encoder extends sun.misc.CharacterEncoder
{
    private static final char[] pem_array;

    public void <init>()
    {
        sun.misc.BASE64Encoder r0;

        r0 := @this: sun.misc.BASE64Encoder;
        specialinvoke r0.<sun.misc.CharacterEncoder: void <init>()>();
        return;
    }

    protected int bytesPerAtom()
    {
        sun.misc.BASE64Encoder r0;

        r0 := @this: sun.misc.BASE64Encoder;
        return 3;
    }

    protected int bytesPerLine()
    {
        sun.misc.BASE64Encoder r0;

        r0 := @this: sun.misc.BASE64Encoder;
        return 57;
    }

    protected void encodeAtom(java.io.OutputStream, byte[], int, int) throws java.io.IOException
    {
        sun.misc.BASE64Encoder r0;
        java.io.OutputStream r1;
        byte[] r2;
        int i0, i1, $i7, $i8, $i11, $i14, $i20, $i21, $i24, $i26, $i27, $i30, $i33, $i35, $i40, $i41, $i44, $i46, $i47, $i50;
        byte b2, b3, $b4, $b5, $b9, $b10, b13, b15, b16, $b17, $b18, $b22, $b23, $b28, $b29, b32, b34, b36, $b37, $b38, $b42, $b43, $b48, $b49, $b52;
        boolean z0;
        char[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        char $c6, $c12, $c19, $c25, $c31, $c39, $c45, $c51, $c53;

        r0 := @this: sun.misc.BASE64Encoder;
        r1 := @parameter0: java.io.OutputStream;
        r2 := @parameter1: byte[];
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        if i1 != 1 goto label0;

        b2 = r2[i0];
        b3 = 0;
        z0 = 0;
        $r3 = <sun.misc.BASE64Encoder: char[] pem_array>;
        $b4 = b2 >>> 2;
        $b5 = $b4 & 63;
        $c6 = $r3[$b5];
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($c6);
        $r4 = <sun.misc.BASE64Encoder: char[] pem_array>;
        $i7 = b2 << 4;
        $i8 = $i7 & 48;
        $b9 = b3 >>> 4;
        $b10 = $b9 & 15;
        $i11 = $i8 + $b10;
        $c12 = $r4[$i11];
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($c12);
        virtualinvoke r1.<java.io.OutputStream: void write(int)>(61);
        virtualinvoke r1.<java.io.OutputStream: void write(int)>(61);
        goto label2;

     label0:
        if i1 != 2 goto label1;

        b13 = r2[i0];
        $i14 = i0 + 1;
        b15 = r2[$i14];
        b16 = 0;
        $r5 = <sun.misc.BASE64Encoder: char[] pem_array>;
        $b17 = b13 >>> 2;
        $b18 = $b17 & 63;
        $c19 = $r5[$b18];
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($c19);
        $r6 = <sun.misc.BASE64Encoder: char[] pem_array>;
        $i20 = b13 << 4;
        $i21 = $i20 & 48;
        $b22 = b15 >>> 4;
        $b23 = $b22 & 15;
        $i24 = $i21 + $b23;
        $c25 = $r6[$i24];
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($c25);
        $r7 = <sun.misc.BASE64Encoder: char[] pem_array>;
        $i26 = b15 << 2;
        $i27 = $i26 & 60;
        $b28 = b16 >>> 6;
        $b29 = $b28 & 3;
        $i30 = $i27 + $b29;
        $c31 = $r7[$i30];
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($c31);
        virtualinvoke r1.<java.io.OutputStream: void write(int)>(61);
        goto label2;

     label1:
        b32 = r2[i0];
        $i33 = i0 + 1;
        b34 = r2[$i33];
        $i35 = i0 + 2;
        b36 = r2[$i35];
        $r8 = <sun.misc.BASE64Encoder: char[] pem_array>;
        $b37 = b32 >>> 2;
        $b38 = $b37 & 63;
        $c39 = $r8[$b38];
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($c39);
        $r9 = <sun.misc.BASE64Encoder: char[] pem_array>;
        $i40 = b32 << 4;
        $i41 = $i40 & 48;
        $b42 = b34 >>> 4;
        $b43 = $b42 & 15;
        $i44 = $i41 + $b43;
        $c45 = $r9[$i44];
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($c45);
        $r10 = <sun.misc.BASE64Encoder: char[] pem_array>;
        $i46 = b34 << 2;
        $i47 = $i46 & 60;
        $b48 = b36 >>> 6;
        $b49 = $b48 & 3;
        $i50 = $i47 + $b49;
        $c51 = $r10[$i50];
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($c51);
        $r11 = <sun.misc.BASE64Encoder: char[] pem_array>;
        $b52 = b36 & 63;
        $c53 = $r11[$b52];
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($c53);

     label2:
        return;
    }

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[64];
        $r0[0] = 65;
        $r0[1] = 66;
        $r0[2] = 67;
        $r0[3] = 68;
        $r0[4] = 69;
        $r0[5] = 70;
        $r0[6] = 71;
        $r0[7] = 72;
        $r0[8] = 73;
        $r0[9] = 74;
        $r0[10] = 75;
        $r0[11] = 76;
        $r0[12] = 77;
        $r0[13] = 78;
        $r0[14] = 79;
        $r0[15] = 80;
        $r0[16] = 81;
        $r0[17] = 82;
        $r0[18] = 83;
        $r0[19] = 84;
        $r0[20] = 85;
        $r0[21] = 86;
        $r0[22] = 87;
        $r0[23] = 88;
        $r0[24] = 89;
        $r0[25] = 90;
        $r0[26] = 97;
        $r0[27] = 98;
        $r0[28] = 99;
        $r0[29] = 100;
        $r0[30] = 101;
        $r0[31] = 102;
        $r0[32] = 103;
        $r0[33] = 104;
        $r0[34] = 105;
        $r0[35] = 106;
        $r0[36] = 107;
        $r0[37] = 108;
        $r0[38] = 109;
        $r0[39] = 110;
        $r0[40] = 111;
        $r0[41] = 112;
        $r0[42] = 113;
        $r0[43] = 114;
        $r0[44] = 115;
        $r0[45] = 116;
        $r0[46] = 117;
        $r0[47] = 118;
        $r0[48] = 119;
        $r0[49] = 120;
        $r0[50] = 121;
        $r0[51] = 122;
        $r0[52] = 48;
        $r0[53] = 49;
        $r0[54] = 50;
        $r0[55] = 51;
        $r0[56] = 52;
        $r0[57] = 53;
        $r0[58] = 54;
        $r0[59] = 55;
        $r0[60] = 56;
        $r0[61] = 57;
        $r0[62] = 43;
        $r0[63] = 47;
        <sun.misc.BASE64Encoder: char[] pem_array> = $r0;
        return;
    }
}
