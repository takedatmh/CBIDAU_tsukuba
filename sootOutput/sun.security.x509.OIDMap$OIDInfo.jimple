class sun.security.x509.OIDMap$OIDInfo extends java.lang.Object
{
    final sun.security.util.ObjectIdentifier oid;
    final java.lang.String name;
    final java.lang.String className;
    private volatile java.lang.Class clazz;

    void <init>(java.lang.String, sun.security.util.ObjectIdentifier, java.lang.String)
    {
        sun.security.x509.OIDMap$OIDInfo r0;
        java.lang.String r1, r3;
        sun.security.util.ObjectIdentifier r2;

        r0 := @this: sun.security.x509.OIDMap$OIDInfo;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: sun.security.util.ObjectIdentifier;
        r3 := @parameter2: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.OIDMap$OIDInfo: java.lang.String name> = r1;
        r0.<sun.security.x509.OIDMap$OIDInfo: sun.security.util.ObjectIdentifier oid> = r2;
        r0.<sun.security.x509.OIDMap$OIDInfo: java.lang.String className> = r3;
        return;
    }

    void <init>(java.lang.String, sun.security.util.ObjectIdentifier, java.lang.Class)
    {
        sun.security.x509.OIDMap$OIDInfo r0;
        java.lang.String r1, $r4;
        sun.security.util.ObjectIdentifier r2;
        java.lang.Class r3;

        r0 := @this: sun.security.x509.OIDMap$OIDInfo;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: sun.security.util.ObjectIdentifier;
        r3 := @parameter2: java.lang.Class;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.OIDMap$OIDInfo: java.lang.String name> = r1;
        r0.<sun.security.x509.OIDMap$OIDInfo: sun.security.util.ObjectIdentifier oid> = r2;
        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();
        r0.<sun.security.x509.OIDMap$OIDInfo: java.lang.String className> = $r4;
        r0.<sun.security.x509.OIDMap$OIDInfo: java.lang.Class clazz> = r3;
        return;
    }

    java.lang.Class getClazz() throws java.security.cert.CertificateException
    {
        sun.security.x509.OIDMap$OIDInfo r0;
        java.lang.Class r1;
        java.lang.StringBuilder $r2, $r8, $r9;
        java.lang.String $r3, $r10;
        java.lang.ClassNotFoundException $r5, r6;
        java.security.cert.CertificateException $r7, $r12;
        java.lang.Throwable $r11;

        r0 := @this: sun.security.x509.OIDMap$OIDInfo;

     label0:
        r1 = r0.<sun.security.x509.OIDMap$OIDInfo: java.lang.Class clazz>;
        if r1 != null goto label1;

        $r3 = r0.<sun.security.x509.OIDMap$OIDInfo: java.lang.String className>;
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);
        r0.<sun.security.x509.OIDMap$OIDInfo: java.lang.Class clazz> = r1;

     label1:
        return r1;

     label2:
        $r5 := @caughtexception;
        r6 = $r5;
        $r7 = new java.security.cert.CertificateException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not load class: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r10);
        $r11 = virtualinvoke $r7.<java.security.cert.CertificateException: java.lang.Throwable initCause(java.lang.Throwable)>(r6);
        $r12 = (java.security.cert.CertificateException) $r11;
        throw $r12;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}
