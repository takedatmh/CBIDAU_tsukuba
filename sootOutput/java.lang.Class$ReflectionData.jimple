class java.lang.Class$ReflectionData extends java.lang.Object
{
    volatile java.lang.reflect.Field[] declaredFields;
    volatile java.lang.reflect.Field[] publicFields;
    volatile java.lang.reflect.Method[] declaredMethods;
    volatile java.lang.reflect.Method[] publicMethods;
    volatile java.lang.reflect.Constructor[] declaredConstructors;
    volatile java.lang.reflect.Constructor[] publicConstructors;
    volatile java.lang.reflect.Field[] declaredPublicFields;
    volatile java.lang.reflect.Method[] declaredPublicMethods;
    final int redefinedCount;

    void <init>(int)
    {
        java.lang.Class$ReflectionData r0;
        int i0;

        r0 := @this: java.lang.Class$ReflectionData;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.Class$ReflectionData: int redefinedCount> = i0;
        return;
    }
}
