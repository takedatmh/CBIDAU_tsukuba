public class org.apache.tomcat.util.log.SystemLogHandler extends java.io.PrintStream
{
    protected java.io.PrintStream out;
    protected static java.lang.ThreadLocal logs;
    protected static java.util.Stack reuse;

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;
        java.util.Stack $r1;

        $r0 = new java.lang.ThreadLocal;
        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();
        <org.apache.tomcat.util.log.SystemLogHandler: java.lang.ThreadLocal logs> = $r0;
        $r1 = new java.util.Stack;
        specialinvoke $r1.<java.util.Stack: void <init>()>();
        <org.apache.tomcat.util.log.SystemLogHandler: java.util.Stack reuse> = $r1;
        return;
    }

    public void <init>(java.io.PrintStream)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        java.io.PrintStream r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        r1 := @parameter0: java.io.PrintStream;
        specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r1);
        r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream out> = null;
        r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream out> = r1;
        return;
    }

    public static void startCapture()
    {
        null_type n0;
        java.util.EmptyStackException r0, $r5;
        java.util.Stack $r1, $r2, r10, $r11;
        boolean $z0;
        java.lang.Object $r3, $r9;
        org.apache.tomcat.util.log.CaptureLog r4, $r6, $r7;
        java.lang.ThreadLocal $r8, $r12;

        n0 = null;
        $r1 = <org.apache.tomcat.util.log.SystemLogHandler: java.util.Stack reuse>;
        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();
        if $z0 != 0 goto label3;

     label0:
        $r2 = <org.apache.tomcat.util.log.SystemLogHandler: java.util.Stack reuse>;
        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();
        r4 = (org.apache.tomcat.util.log.CaptureLog) $r3;

     label1:
        goto label4;

     label2:
        $r5 := @caughtexception;
        r0 = $r5;
        $r6 = new org.apache.tomcat.util.log.CaptureLog;
        specialinvoke $r6.<org.apache.tomcat.util.log.CaptureLog: void <init>()>();
        r4 = $r6;
        goto label4;

     label3:
        $r7 = new org.apache.tomcat.util.log.CaptureLog;
        specialinvoke $r7.<org.apache.tomcat.util.log.CaptureLog: void <init>()>();
        r4 = $r7;

     label4:
        $r8 = <org.apache.tomcat.util.log.SystemLogHandler: java.lang.ThreadLocal logs>;
        $r9 = virtualinvoke $r8.<java.lang.ThreadLocal: java.lang.Object get()>();
        r10 = (java.util.Stack) $r9;
        if r10 != null goto label5;

        $r11 = new java.util.Stack;
        specialinvoke $r11.<java.util.Stack: void <init>()>();
        r10 = $r11;
        $r12 = <org.apache.tomcat.util.log.SystemLogHandler: java.lang.ThreadLocal logs>;
        virtualinvoke $r12.<java.lang.ThreadLocal: void set(java.lang.Object)>(r10);

     label5:
        virtualinvoke r10.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r4);
        return;

        catch java.util.EmptyStackException from label0 to label1 with label2;
    }

    public static java.lang.String stopCapture()
    {
        java.lang.ThreadLocal $r0;
        java.util.Stack r1, $r6;
        org.apache.tomcat.util.log.CaptureLog r2;
        java.lang.String r3;
        java.lang.Object $r4, $r5;
        boolean $z0;

        $r0 = <org.apache.tomcat.util.log.SystemLogHandler: java.lang.ThreadLocal logs>;
        $r4 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();
        r1 = (java.util.Stack) $r4;
        if r1 == null goto label0;

        $z0 = virtualinvoke r1.<java.util.Stack: boolean isEmpty()>();
        if $z0 == 0 goto label1;

     label0:
        return null;

     label1:
        $r5 = virtualinvoke r1.<java.util.Stack: java.lang.Object pop()>();
        r2 = (org.apache.tomcat.util.log.CaptureLog) $r5;
        if r2 != null goto label2;

        return null;

     label2:
        r3 = virtualinvoke r2.<org.apache.tomcat.util.log.CaptureLog: java.lang.String getCapture()>();
        virtualinvoke r2.<org.apache.tomcat.util.log.CaptureLog: void reset()>();
        $r6 = <org.apache.tomcat.util.log.SystemLogHandler: java.util.Stack reuse>;
        virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r2);
        return r3;
    }

    protected java.io.PrintStream findStream()
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        java.lang.ThreadLocal $r1;
        java.util.Stack r2;
        org.apache.tomcat.util.log.CaptureLog r3;
        java.io.PrintStream r4, $r7;
        java.lang.Object $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        $r1 = <org.apache.tomcat.util.log.SystemLogHandler: java.lang.ThreadLocal logs>;
        $r5 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();
        r2 = (java.util.Stack) $r5;
        if r2 == null goto label0;

        $z0 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $r6 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>();
        r3 = (org.apache.tomcat.util.log.CaptureLog) $r6;
        if r3 == null goto label0;

        r4 = virtualinvoke r3.<org.apache.tomcat.util.log.CaptureLog: java.io.PrintStream getStream()>();
        if r4 == null goto label0;

        return r4;

     label0:
        $r7 = r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream out>;
        return $r7;
    }

    public void flush()
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void flush()>();
        return;
    }

    public void close()
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void close()>();
        return;
    }

    public boolean checkError()
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        java.io.PrintStream $r1;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        $z0 = virtualinvoke $r1.<java.io.PrintStream: boolean checkError()>();
        return $z0;
    }

    protected void setError()
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        return;
    }

    public void write(int)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        int i0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void write(int)>(i0);
        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        byte[] r1;
        java.io.PrintStream $r2;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        r1 := @parameter0: byte[];
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r2.<java.io.PrintStream: void write(byte[])>(r1);
        return;
    }

    public void write(byte[], int, int)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        byte[] r1;
        int i0, i1;
        java.io.PrintStream $r2;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r2.<java.io.PrintStream: void write(byte[],int,int)>(r1, i0, i1);
        return;
    }

    public void print(boolean)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        boolean z0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        z0 := @parameter0: boolean;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void print(boolean)>(z0);
        return;
    }

    public void print(char)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        char c0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        c0 := @parameter0: char;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void print(char)>(c0);
        return;
    }

    public void print(int)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        int i0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void print(int)>(i0);
        return;
    }

    public void print(long)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        long l0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        l0 := @parameter0: long;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void print(long)>(l0);
        return;
    }

    public void print(float)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        float f0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        f0 := @parameter0: float;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void print(float)>(f0);
        return;
    }

    public void print(double)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        double d0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        d0 := @parameter0: double;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void print(double)>(d0);
        return;
    }

    public void print(char[])
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        char[] r1;
        java.io.PrintStream $r2;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        r1 := @parameter0: char[];
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r2.<java.io.PrintStream: void print(char[])>(r1);
        return;
    }

    public void print(java.lang.String)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        java.lang.String r1;
        java.io.PrintStream $r2;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>(r1);
        return;
    }

    public void print(java.lang.Object)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        java.lang.Object r1;
        java.io.PrintStream $r2;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.Object)>(r1);
        return;
    }

    public void println()
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void println()>();
        return;
    }

    public void println(boolean)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        boolean z0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        z0 := @parameter0: boolean;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void println(boolean)>(z0);
        return;
    }

    public void println(char)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        char c0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        c0 := @parameter0: char;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void println(char)>(c0);
        return;
    }

    public void println(int)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        int i0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void println(int)>(i0);
        return;
    }

    public void println(long)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        long l0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        l0 := @parameter0: long;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void println(long)>(l0);
        return;
    }

    public void println(float)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        float f0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        f0 := @parameter0: float;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void println(float)>(f0);
        return;
    }

    public void println(double)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        double d0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        d0 := @parameter0: double;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r1.<java.io.PrintStream: void println(double)>(d0);
        return;
    }

    public void println(char[])
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        char[] r1;
        java.io.PrintStream $r2;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        r1 := @parameter0: char[];
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r2.<java.io.PrintStream: void println(char[])>(r1);
        return;
    }

    public void println(java.lang.String)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        java.lang.String r1;
        java.io.PrintStream $r2;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(r1);
        return;
    }

    public void println(java.lang.Object)
    {
        org.apache.tomcat.util.log.SystemLogHandler r0;
        java.lang.Object r1;
        java.io.PrintStream $r2;

        r0 := @this: org.apache.tomcat.util.log.SystemLogHandler;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r0.<org.apache.tomcat.util.log.SystemLogHandler: java.io.PrintStream findStream()>();
        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>(r1);
        return;
    }
}
