public class org.apache.tomcat.util.modeler.NotificationInfo extends org.apache.tomcat.util.modeler.FeatureInfo
{
    static final long serialVersionUID;
    transient javax.management.MBeanNotificationInfo info;
    protected java.lang.String[] notifTypes;
    protected final java.util.concurrent.locks.ReadWriteLock notifTypesLock;

    public void <init>()
    {
        org.apache.tomcat.util.modeler.NotificationInfo r0;
        java.lang.String[] $r1;
        java.util.concurrent.locks.ReentrantReadWriteLock $r2;

        r0 := @this: org.apache.tomcat.util.modeler.NotificationInfo;
        specialinvoke r0.<org.apache.tomcat.util.modeler.FeatureInfo: void <init>()>();
        r0.<org.apache.tomcat.util.modeler.NotificationInfo: javax.management.MBeanNotificationInfo info> = null;
        $r1 = newarray (java.lang.String)[0];
        r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String[] notifTypes> = $r1;
        $r2 = new java.util.concurrent.locks.ReentrantReadWriteLock;
        specialinvoke $r2.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();
        r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.util.concurrent.locks.ReadWriteLock notifTypesLock> = $r2;
        return;
    }

    public void setDescription(java.lang.String)
    {
        org.apache.tomcat.util.modeler.NotificationInfo r0;
        java.lang.String r1;

        r0 := @this: org.apache.tomcat.util.modeler.NotificationInfo;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.apache.tomcat.util.modeler.FeatureInfo: void setDescription(java.lang.String)>(r1);
        r0.<org.apache.tomcat.util.modeler.NotificationInfo: javax.management.MBeanNotificationInfo info> = null;
        return;
    }

    public void setName(java.lang.String)
    {
        org.apache.tomcat.util.modeler.NotificationInfo r0;
        java.lang.String r1;

        r0 := @this: org.apache.tomcat.util.modeler.NotificationInfo;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.apache.tomcat.util.modeler.FeatureInfo: void setName(java.lang.String)>(r1);
        r0.<org.apache.tomcat.util.modeler.NotificationInfo: javax.management.MBeanNotificationInfo info> = null;
        return;
    }

    public java.lang.String[] getNotifTypes()
    {
        org.apache.tomcat.util.modeler.NotificationInfo r0;
        java.util.concurrent.locks.Lock r1;
        java.lang.String[] r2;
        java.lang.Throwable r3, $r5;
        java.util.concurrent.locks.ReadWriteLock $r4;

        r0 := @this: org.apache.tomcat.util.modeler.NotificationInfo;
        $r4 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.util.concurrent.locks.ReadWriteLock notifTypesLock>;
        r1 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

     label0:
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void lock()>();
        r2 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String[] notifTypes>;

     label1:
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void unlock()>();
        return r2;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void addNotifType(java.lang.String)
    {
        org.apache.tomcat.util.modeler.NotificationInfo r0;
        java.lang.String r1;
        java.util.concurrent.locks.Lock r2;
        java.lang.String[] r3, $r6, $r7, $r8, $r9;
        java.lang.Throwable r4, $r10;
        java.util.concurrent.locks.ReadWriteLock $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.tomcat.util.modeler.NotificationInfo;
        r1 := @parameter0: java.lang.String;
        $r5 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.util.concurrent.locks.ReadWriteLock notifTypesLock>;
        r2 = interfaceinvoke $r5.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

     label0:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();
        $r6 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String[] notifTypes>;
        $i0 = lengthof $r6;
        $i1 = $i0 + 1;
        r3 = newarray (java.lang.String)[$i1];
        $r7 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String[] notifTypes>;
        $r8 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String[] notifTypes>;
        $i2 = lengthof $r8;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r3, 0, $i2);
        $r9 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String[] notifTypes>;
        $i3 = lengthof $r9;
        r3[$i3] = r1;
        r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String[] notifTypes> = r3;
        r0.<org.apache.tomcat.util.modeler.NotificationInfo: javax.management.MBeanNotificationInfo info> = null;
        goto label2;

     label1:
        $r10 := @caughtexception;
        r4 = $r10;
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r4;

     label2:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public javax.management.MBeanNotificationInfo createNotificationInfo()
    {
        org.apache.tomcat.util.modeler.NotificationInfo r0;
        javax.management.MBeanNotificationInfo $r1, $r2, $r3, $r7;
        java.lang.String[] $r4;
        java.lang.String $r5, $r6;

        r0 := @this: org.apache.tomcat.util.modeler.NotificationInfo;
        $r2 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: javax.management.MBeanNotificationInfo info>;
        if $r2 == null goto label0;

        $r3 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: javax.management.MBeanNotificationInfo info>;
        return $r3;

     label0:
        $r1 = new javax.management.MBeanNotificationInfo;
        $r4 = virtualinvoke r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String[] getNotifTypes()>();
        $r5 = virtualinvoke r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String getName()>();
        $r6 = virtualinvoke r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String getDescription()>();
        specialinvoke $r1.<javax.management.MBeanNotificationInfo: void <init>(java.lang.String[],java.lang.String,java.lang.String)>($r4, $r5, $r6);
        r0.<org.apache.tomcat.util.modeler.NotificationInfo: javax.management.MBeanNotificationInfo info> = $r1;
        $r7 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: javax.management.MBeanNotificationInfo info>;
        return $r7;
    }

    public java.lang.String toString()
    {
        org.apache.tomcat.util.modeler.NotificationInfo r0;
        java.lang.StringBuilder $r1, r2;
        java.util.concurrent.locks.Lock r3;
        java.lang.Throwable r4, $r15;
        java.lang.String $r6, $r9, $r17;
        java.util.concurrent.locks.ReadWriteLock $r12;
        java.lang.String[] $r13;
        int $i0;

        r0 := @this: org.apache.tomcat.util.modeler.NotificationInfo;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("NotificationInfo[");
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name=");
        $r6 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String name>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", description=");
        $r9 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String description>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notifTypes=");
        $r12 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.util.concurrent.locks.ReadWriteLock notifTypesLock>;
        r3 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

     label0:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void lock()>();
        $r13 = r0.<org.apache.tomcat.util.modeler.NotificationInfo: java.lang.String[] notifTypes>;
        $i0 = lengthof $r13;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        goto label2;

     label1:
        $r15 := @caughtexception;
        r4 = $r15;
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();
        throw r4;

     label2:
        interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r17;

        catch java.lang.Throwable from label0 to label1 with label1;
    }
}
