class sun.nio.ch.UnixAsynchronousSocketChannelImpl$1 extends java.lang.Object implements java.lang.Runnable
{
    final sun.nio.ch.UnixAsynchronousSocketChannelImpl this$0;

    void <init>(sun.nio.ch.UnixAsynchronousSocketChannelImpl)
    {
        sun.nio.ch.UnixAsynchronousSocketChannelImpl$1 r0;
        sun.nio.ch.UnixAsynchronousSocketChannelImpl r1;

        r0 := @this: sun.nio.ch.UnixAsynchronousSocketChannelImpl$1;
        r1 := @parameter0: sun.nio.ch.UnixAsynchronousSocketChannelImpl;
        r0.<sun.nio.ch.UnixAsynchronousSocketChannelImpl$1: sun.nio.ch.UnixAsynchronousSocketChannelImpl this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        sun.nio.ch.UnixAsynchronousSocketChannelImpl$1 r0;
        null_type n0, n1, n2;
        java.lang.Object r1, $r4, r10;
        java.lang.Throwable r2, $r13;
        sun.nio.ch.UnixAsynchronousSocketChannelImpl $r3, $r5, $r6, $r7, $r9, $r11, $r14, r17;
        boolean $z0;
        java.nio.channels.CompletionHandler r8;
        sun.nio.ch.PendingFuture r12;
        java.nio.channels.InterruptedByTimeoutException $r15, r16;

        r0 := @this: sun.nio.ch.UnixAsynchronousSocketChannelImpl$1;
        n0 = null;
        n1 = null;
        n2 = null;
        $r3 = r0.<sun.nio.ch.UnixAsynchronousSocketChannelImpl$1: sun.nio.ch.UnixAsynchronousSocketChannelImpl this$0>;
        $r4 = staticinvoke <sun.nio.ch.UnixAsynchronousSocketChannelImpl: java.lang.Object access$000(sun.nio.ch.UnixAsynchronousSocketChannelImpl)>($r3);
        r1 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<sun.nio.ch.UnixAsynchronousSocketChannelImpl$1: sun.nio.ch.UnixAsynchronousSocketChannelImpl this$0>;
        $z0 = staticinvoke <sun.nio.ch.UnixAsynchronousSocketChannelImpl: boolean access$100(sun.nio.ch.UnixAsynchronousSocketChannelImpl)>($r5);
        if $z0 != 0 goto label2;

        exitmonitor r1;

     label1:
        return;

     label2:
        $r6 = r0.<sun.nio.ch.UnixAsynchronousSocketChannelImpl$1: sun.nio.ch.UnixAsynchronousSocketChannelImpl this$0>;
        staticinvoke <sun.nio.ch.UnixAsynchronousSocketChannelImpl: boolean access$102(sun.nio.ch.UnixAsynchronousSocketChannelImpl,boolean)>($r6, 0);
        $r7 = r0.<sun.nio.ch.UnixAsynchronousSocketChannelImpl$1: sun.nio.ch.UnixAsynchronousSocketChannelImpl this$0>;
        r8 = staticinvoke <sun.nio.ch.UnixAsynchronousSocketChannelImpl: java.nio.channels.CompletionHandler access$200(sun.nio.ch.UnixAsynchronousSocketChannelImpl)>($r7);
        $r9 = r0.<sun.nio.ch.UnixAsynchronousSocketChannelImpl$1: sun.nio.ch.UnixAsynchronousSocketChannelImpl this$0>;
        r10 = staticinvoke <sun.nio.ch.UnixAsynchronousSocketChannelImpl: java.lang.Object access$300(sun.nio.ch.UnixAsynchronousSocketChannelImpl)>($r9);
        $r11 = r0.<sun.nio.ch.UnixAsynchronousSocketChannelImpl$1: sun.nio.ch.UnixAsynchronousSocketChannelImpl this$0>;
        r12 = staticinvoke <sun.nio.ch.UnixAsynchronousSocketChannelImpl: sun.nio.ch.PendingFuture access$400(sun.nio.ch.UnixAsynchronousSocketChannelImpl)>($r11);
        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r13 := @caughtexception;

     label5:
        r2 = $r13;
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r14 = r0.<sun.nio.ch.UnixAsynchronousSocketChannelImpl$1: sun.nio.ch.UnixAsynchronousSocketChannelImpl this$0>;
        virtualinvoke $r14.<sun.nio.ch.UnixAsynchronousSocketChannelImpl: void enableReading(boolean)>(1);
        $r15 = new java.nio.channels.InterruptedByTimeoutException;
        specialinvoke $r15.<java.nio.channels.InterruptedByTimeoutException: void <init>()>();
        r16 = $r15;
        if r8 != null goto label8;

        virtualinvoke r12.<sun.nio.ch.PendingFuture: void setFailure(java.lang.Throwable)>(r16);
        goto label9;

     label8:
        r17 = r0.<sun.nio.ch.UnixAsynchronousSocketChannelImpl$1: sun.nio.ch.UnixAsynchronousSocketChannelImpl this$0>;
        staticinvoke <sun.nio.ch.Invoker: void invokeIndirectly(java.nio.channels.AsynchronousChannel,java.nio.channels.CompletionHandler,java.lang.Object,java.lang.Object,java.lang.Throwable)>(r17, r8, r10, null, r16);

     label9:
        return;

        catch java.lang.Throwable from label0 to label1 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
