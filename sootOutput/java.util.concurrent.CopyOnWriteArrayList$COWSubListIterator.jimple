class java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator extends java.lang.Object implements java.util.ListIterator
{
    private final java.util.ListIterator i;
    private final int index;
    private final int offset;
    private final int size;

    void <init>(java.util.List, int, int, int)
    {
        java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator r0;
        java.util.List r1;
        int i0, i1, i2, $i3;
        java.util.ListIterator $r2;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator;
        r1 := @parameter0: java.util.List;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int index> = i0;
        r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int offset> = i1;
        r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int size> = i2;
        $i3 = i0 + i1;
        $r2 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator(int)>($i3);
        r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.util.ListIterator i> = $r2;
        return;
    }

    public boolean hasNext()
    {
        java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator;
        $i0 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int nextIndex()>();
        $i1 = r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int size>;
        if $i0 >= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator r0;
        boolean $z0;
        java.util.ListIterator $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator;
        $z0 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>();
        if $z0 == 0 goto label0;

        $r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.util.ListIterator i>;
        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object next()>();
        return $r2;

     label0:
        $r3 = new java.util.NoSuchElementException;
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();
        throw $r3;
    }

    public boolean hasPrevious()
    {
        java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator;
        $i0 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int previousIndex()>();
        if $i0 < 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.Object previous()
    {
        java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator r0;
        boolean $z0;
        java.util.ListIterator $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator;
        $z0 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasPrevious()>();
        if $z0 == 0 goto label0;

        $r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.util.ListIterator i>;
        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object previous()>();
        return $r2;

     label0:
        $r3 = new java.util.NoSuchElementException;
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();
        throw $r3;
    }

    public int nextIndex()
    {
        java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator r0;
        java.util.ListIterator $r1;
        int $i0, $i1, $i2;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator;
        $r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.util.ListIterator i>;
        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int nextIndex()>();
        $i1 = r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int offset>;
        $i2 = $i0 - $i1;
        return $i2;
    }

    public int previousIndex()
    {
        java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator r0;
        java.util.ListIterator $r1;
        int $i0, $i1, $i2;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator;
        $r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.util.ListIterator i>;
        $i0 = interfaceinvoke $r1.<java.util.ListIterator: int previousIndex()>();
        $i1 = r0.<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int offset>;
        $i2 = $i0 - $i1;
        return $i2;
    }

    public void remove()
    {
        java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r1;
    }

    public void set(java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator;
        r1 := @parameter0: java.lang.Object;
        $r2 = new java.lang.UnsupportedOperationException;
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r2;
    }

    public void add(java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator;
        r1 := @parameter0: java.lang.Object;
        $r2 = new java.lang.UnsupportedOperationException;
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r2;
    }
}
