public class org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer extends java.lang.Object implements org.apache.coyote.OutputBuffer
{
    final org.apache.coyote.http11.InternalNioOutputBuffer this$0;

    protected void <init>(org.apache.coyote.http11.InternalNioOutputBuffer)
    {
        org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer r0;
        org.apache.coyote.http11.InternalNioOutputBuffer r1;

        r0 := @this: org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer;
        r1 := @parameter0: org.apache.coyote.http11.InternalNioOutputBuffer;
        r0.<org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer: org.apache.coyote.http11.InternalNioOutputBuffer this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public int doWrite(org.apache.tomcat.util.buf.ByteChunk, org.apache.coyote.Response) throws java.io.IOException
    {
        org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer r0;
        org.apache.tomcat.util.buf.ByteChunk r1;
        org.apache.coyote.Response r2, $r9;
        int i0, i1, $i3, $i6;
        byte[] r3;
        org.apache.coyote.http11.InternalNioOutputBuffer $r4, $r5, $r8;
        long $l2, $l4, $l5;
        java.io.IOException $r6, r7;
        org.apache.coyote.ActionCode $r10;

        r0 := @this: org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer;
        r1 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        r2 := @parameter1: org.apache.coyote.Response;

     label0:
        i0 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        i1 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getStart()>();
        r3 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBuffer()>();
        $r4 = r0.<org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer: org.apache.coyote.http11.InternalNioOutputBuffer this$0>;
        staticinvoke <org.apache.coyote.http11.InternalNioOutputBuffer: void access$0(org.apache.coyote.http11.InternalNioOutputBuffer,byte[],int,int)>($r4, r3, i1, i0);
        $r5 = r0.<org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer: org.apache.coyote.http11.InternalNioOutputBuffer this$0>;
        $l2 = $r5.<org.apache.coyote.http11.InternalNioOutputBuffer: long byteCount>;
        $i3 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        $l4 = (long) $i3;
        $l5 = $l2 + $l4;
        $r5.<org.apache.coyote.http11.InternalNioOutputBuffer: long byteCount> = $l5;
        $i6 = virtualinvoke r1.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();

     label1:
        return $i6;

     label2:
        $r6 := @caughtexception;
        r7 = $r6;
        $r8 = r0.<org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer: org.apache.coyote.http11.InternalNioOutputBuffer this$0>;
        $r9 = $r8.<org.apache.coyote.http11.InternalNioOutputBuffer: org.apache.coyote.Response response>;
        $r10 = <org.apache.coyote.ActionCode: org.apache.coyote.ActionCode CLOSE_NOW>;
        virtualinvoke $r9.<org.apache.coyote.Response: void action(org.apache.coyote.ActionCode,java.lang.Object)>($r10, r7);
        throw r7;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public long getBytesWritten()
    {
        org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer r0;
        org.apache.coyote.http11.InternalNioOutputBuffer $r1;
        long $l0;

        r0 := @this: org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer;
        $r1 = r0.<org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer: org.apache.coyote.http11.InternalNioOutputBuffer this$0>;
        $l0 = $r1.<org.apache.coyote.http11.InternalNioOutputBuffer: long byteCount>;
        return $l0;
    }
}
