class sun.nio.fs.UnixFileAttributeViews$Unix extends sun.nio.fs.UnixFileAttributeViews$Posix
{
    private static final java.lang.String MODE_NAME;
    private static final java.lang.String INO_NAME;
    private static final java.lang.String DEV_NAME;
    private static final java.lang.String RDEV_NAME;
    private static final java.lang.String NLINK_NAME;
    private static final java.lang.String UID_NAME;
    private static final java.lang.String GID_NAME;
    private static final java.lang.String CTIME_NAME;
    static final java.util.Set unixAttributeNames;

    void <init>(sun.nio.fs.UnixPath, boolean)
    {
        sun.nio.fs.UnixFileAttributeViews$Unix r0;
        sun.nio.fs.UnixPath r1;
        boolean z0;

        r0 := @this: sun.nio.fs.UnixFileAttributeViews$Unix;
        r1 := @parameter0: sun.nio.fs.UnixPath;
        z0 := @parameter1: boolean;
        specialinvoke r0.<sun.nio.fs.UnixFileAttributeViews$Posix: void <init>(sun.nio.fs.UnixPath,boolean)>(r1, z0);
        return;
    }

    public java.lang.String name()
    {
        sun.nio.fs.UnixFileAttributeViews$Unix r0;

        r0 := @this: sun.nio.fs.UnixFileAttributeViews$Unix;
        return "unix";
    }

    public void setAttribute(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        sun.nio.fs.UnixFileAttributeViews$Unix r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r3, $r4, $r5;
        int $i0, $i1, $i2;

        r0 := @this: sun.nio.fs.UnixFileAttributeViews$Unix;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("mode");
        if $z0 == 0 goto label0;

        $r3 = (java.lang.Integer) r2;
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        virtualinvoke r0.<sun.nio.fs.UnixFileAttributeViews$Unix: void setMode(int)>($i0);
        return;

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uid");
        if $z1 == 0 goto label1;

        $r4 = (java.lang.Integer) r2;
        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
        virtualinvoke r0.<sun.nio.fs.UnixFileAttributeViews$Unix: void setOwners(int,int)>($i1, -1);
        return;

     label1:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("gid");
        if $z2 == 0 goto label2;

        $r5 = (java.lang.Integer) r2;
        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
        virtualinvoke r0.<sun.nio.fs.UnixFileAttributeViews$Unix: void setOwners(int,int)>(-1, $i2);
        return;

     label2:
        specialinvoke r0.<sun.nio.fs.UnixFileAttributeViews$Posix: void setAttribute(java.lang.String,java.lang.Object)>(r1, r2);
        return;
    }

    public java.util.Map readAttributes(java.lang.String[]) throws java.io.IOException
    {
        sun.nio.fs.UnixFileAttributeViews$Unix r0;
        java.lang.String[] r1;
        java.util.Set $r2;
        sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder r3;
        sun.nio.fs.UnixFileAttributes r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i0, $i4, $i5, $i6;
        java.lang.Integer $r5, $r9, $r10, $r11;
        long $l1, $l2, $l3;
        java.lang.Long $r6, $r7, $r8;
        java.nio.file.attribute.FileTime $r12;
        java.util.Map $r13;

        r0 := @this: sun.nio.fs.UnixFileAttributeViews$Unix;
        r1 := @parameter0: java.lang.String[];
        $r2 = <sun.nio.fs.UnixFileAttributeViews$Unix: java.util.Set unixAttributeNames>;
        r3 = staticinvoke <sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder create(java.util.Set,java.lang.String[])>($r2, r1);
        r4 = virtualinvoke r0.<sun.nio.fs.UnixFileAttributeViews$Unix: sun.nio.fs.UnixFileAttributes readAttributes()>();
        virtualinvoke r0.<sun.nio.fs.UnixFileAttributeViews$Unix: void addRequestedPosixAttributes(java.nio.file.attribute.PosixFileAttributes,sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder)>(r4, r3);
        $z0 = virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: boolean match(java.lang.String)>("mode");
        if $z0 == 0 goto label0;

        $i0 = virtualinvoke r4.<sun.nio.fs.UnixFileAttributes: int mode()>();
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: void add(java.lang.String,java.lang.Object)>("mode", $r5);

     label0:
        $z1 = virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: boolean match(java.lang.String)>("ino");
        if $z1 == 0 goto label1;

        $l1 = virtualinvoke r4.<sun.nio.fs.UnixFileAttributes: long ino()>();
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);
        virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: void add(java.lang.String,java.lang.Object)>("ino", $r6);

     label1:
        $z2 = virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: boolean match(java.lang.String)>("dev");
        if $z2 == 0 goto label2;

        $l2 = virtualinvoke r4.<sun.nio.fs.UnixFileAttributes: long dev()>();
        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
        virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: void add(java.lang.String,java.lang.Object)>("dev", $r7);

     label2:
        $z3 = virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: boolean match(java.lang.String)>("rdev");
        if $z3 == 0 goto label3;

        $l3 = virtualinvoke r4.<sun.nio.fs.UnixFileAttributes: long rdev()>();
        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
        virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: void add(java.lang.String,java.lang.Object)>("rdev", $r8);

     label3:
        $z4 = virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: boolean match(java.lang.String)>("nlink");
        if $z4 == 0 goto label4;

        $i4 = virtualinvoke r4.<sun.nio.fs.UnixFileAttributes: int nlink()>();
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: void add(java.lang.String,java.lang.Object)>("nlink", $r9);

     label4:
        $z5 = virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: boolean match(java.lang.String)>("uid");
        if $z5 == 0 goto label5;

        $i5 = virtualinvoke r4.<sun.nio.fs.UnixFileAttributes: int uid()>();
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: void add(java.lang.String,java.lang.Object)>("uid", $r10);

     label5:
        $z6 = virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: boolean match(java.lang.String)>("gid");
        if $z6 == 0 goto label6;

        $i6 = virtualinvoke r4.<sun.nio.fs.UnixFileAttributes: int gid()>();
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
        virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: void add(java.lang.String,java.lang.Object)>("gid", $r11);

     label6:
        $z7 = virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: boolean match(java.lang.String)>("ctime");
        if $z7 == 0 goto label7;

        $r12 = virtualinvoke r4.<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.FileTime ctime()>();
        virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: void add(java.lang.String,java.lang.Object)>("ctime", $r12);

     label7:
        $r13 = virtualinvoke r3.<sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder: java.util.Map unmodifiableMap()>();
        return $r13;
    }

    static void <clinit>()
    {
        java.util.Set $r0, $r2;
        java.lang.String[] $r1;

        $r0 = <sun.nio.fs.UnixFileAttributeViews$Unix: java.util.Set posixAttributeNames>;
        $r1 = newarray (java.lang.String)[8];
        $r1[0] = "mode";
        $r1[1] = "ino";
        $r1[2] = "dev";
        $r1[3] = "rdev";
        $r1[4] = "nlink";
        $r1[5] = "uid";
        $r1[6] = "gid";
        $r1[7] = "ctime";
        $r2 = staticinvoke <sun.nio.fs.Util: java.util.Set newSet(java.util.Set,java.lang.Object[])>($r0, $r1);
        <sun.nio.fs.UnixFileAttributeViews$Unix: java.util.Set unixAttributeNames> = $r2;
        return;
    }
}
