public class sun.nio.cs.Surrogate extends java.lang.Object
{
    public static final char MIN_HIGH;
    public static final char MAX_HIGH;
    public static final char MIN_LOW;
    public static final char MAX_LOW;
    public static final char MIN;
    public static final char MAX;
    public static final int UCS4_MIN;
    public static final int UCS4_MAX;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        sun.nio.cs.Surrogate r0;

        r0 := @this: sun.nio.cs.Surrogate;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static boolean isHigh(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;
        if 55296 > i0 goto label0;

        if i0 > 56319 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isLow(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;
        if 56320 > i0 goto label0;

        if i0 > 57343 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean is(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;
        if 55296 > i0 goto label0;

        if i0 > 57343 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean neededFor(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;
        $z0 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i0);
        return $z0;
    }

    public static char high(int)
    {
        int i0;
        boolean $z0, $z1;
        java.lang.AssertionError $r0;
        char $c1;

        i0 := @parameter0: int;
        $z0 = <sun.nio.cs.Surrogate: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $z1 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i0);
        if $z1 != 0 goto label0;

        $r0 = new java.lang.AssertionError;
        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();
        throw $r0;

     label0:
        $c1 = staticinvoke <java.lang.Character: char highSurrogate(int)>(i0);
        return $c1;
    }

    public static char low(int)
    {
        int i0;
        boolean $z0, $z1;
        java.lang.AssertionError $r0;
        char $c1;

        i0 := @parameter0: int;
        $z0 = <sun.nio.cs.Surrogate: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $z1 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i0);
        if $z1 != 0 goto label0;

        $r0 = new java.lang.AssertionError;
        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();
        throw $r0;

     label0:
        $c1 = staticinvoke <java.lang.Character: char lowSurrogate(int)>(i0);
        return $c1;
    }

    public static int toUCS4(char, char)
    {
        char c0, c1;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r0;
        int $i2;

        c0 := @parameter0: char;
        c1 := @parameter1: char;
        $z0 = <sun.nio.cs.Surrogate: boolean $assertionsDisabled>;
        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>(c0);
        if $z1 == 0 goto label0;

        $z2 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>(c1);
        if $z2 != 0 goto label1;

     label0:
        $r0 = new java.lang.AssertionError;
        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();
        throw $r0;

     label1:
        $i2 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>(c0, c1);
        return $i2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "sun/nio/cs/Surrogate";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <sun.nio.cs.Surrogate: boolean $assertionsDisabled> = $z1;
        return;
    }
}
