public abstract class java.net.ResponseCache extends java.lang.Object
{
    private static java.net.ResponseCache theResponseCache;

    public void <init>()
    {
        java.net.ResponseCache r0;

        r0 := @this: java.net.ResponseCache;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static synchronized java.net.ResponseCache getDefault()
    {
        java.lang.SecurityManager r0;
        java.net.NetPermission $r1;
        java.net.ResponseCache $r2;

        r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r0 == null goto label0;

        $r1 = <sun.security.util.SecurityConstants: java.net.NetPermission GET_RESPONSECACHE_PERMISSION>;
        virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1);

     label0:
        $r2 = <java.net.ResponseCache: java.net.ResponseCache theResponseCache>;
        return $r2;
    }

    public static synchronized void setDefault(java.net.ResponseCache)
    {
        java.net.ResponseCache r0;
        java.lang.SecurityManager r1;
        java.net.NetPermission $r2;

        r0 := @parameter0: java.net.ResponseCache;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = <sun.security.util.SecurityConstants: java.net.NetPermission SET_RESPONSECACHE_PERMISSION>;
        virtualinvoke r1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);

     label0:
        <java.net.ResponseCache: java.net.ResponseCache theResponseCache> = r0;
        return;
    }

    public abstract java.net.CacheResponse get(java.net.URI, java.lang.String, java.util.Map) throws java.io.IOException;

    public abstract java.net.CacheRequest put(java.net.URI, java.net.URLConnection) throws java.io.IOException;
}
