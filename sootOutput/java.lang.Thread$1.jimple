final class java.lang.Thread$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.Class val$subcl;

    void <init>(java.lang.Class)
    {
        java.lang.Thread$1 r0;
        java.lang.Class r1;

        r0 := @this: java.lang.Thread$1;
        r1 := @parameter0: java.lang.Class;
        r0.<java.lang.Thread$1: java.lang.Class val$subcl> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Boolean run()
    {
        java.lang.Thread$1 r0;
        java.lang.Class r1;
        java.lang.NoSuchMethodException r2, $r6, $r11, r12;
        java.lang.Class[] $r3, $r7, r8;
        java.lang.Boolean $r5, $r10, $r13;

        r0 := @this: java.lang.Thread$1;
        r1 = r0.<java.lang.Thread$1: java.lang.Class val$subcl>;

     label0:
        if r1 == class "java/lang/Thread" goto label7;

     label1:
        $r3 = newarray (java.lang.Class)[0];
        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getContextClassLoader", $r3);
        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r2 = $r6;

     label4:
        $r7 = newarray (java.lang.Class)[1];
        $r7[0] = class "java/lang/ClassLoader";
        r8 = $r7;
        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setContextClassLoader", r8);
        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label5:
        return $r10;

     label6:
        $r11 := @caughtexception;
        r12 = $r11;
        r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();
        goto label0;

     label7:
        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;
        return $r13;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label4 to label5 with label6;
    }

    public volatile java.lang.Object run()
    {
        java.lang.Thread$1 r0;
        java.lang.Boolean $r1;

        r0 := @this: java.lang.Thread$1;
        $r1 = virtualinvoke r0.<java.lang.Thread$1: java.lang.Boolean run()>();
        return $r1;
    }
}
