final class sun.nio.cs.ThreadLocalCoders$1 extends sun.nio.cs.ThreadLocalCoders$Cache
{
    static final boolean $assertionsDisabled;

    void <init>(int)
    {
        sun.nio.cs.ThreadLocalCoders$1 r0;
        int i0;

        r0 := @this: sun.nio.cs.ThreadLocalCoders$1;
        i0 := @parameter0: int;
        specialinvoke r0.<sun.nio.cs.ThreadLocalCoders$Cache: void <init>(int)>(i0);
        return;
    }

    boolean hasName(java.lang.Object, java.lang.Object)
    {
        sun.nio.cs.ThreadLocalCoders$1 r0;
        java.lang.Object r1, r2;
        boolean $z0, $z1, $z2, $z3;
        java.nio.charset.CharsetDecoder $r3, $r6;
        java.nio.charset.Charset $r4, $r7;
        java.lang.String $r5;

        r0 := @this: sun.nio.cs.ThreadLocalCoders$1;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $z0 = r2 instanceof java.lang.String;
        if $z0 == 0 goto label0;

        $r3 = (java.nio.charset.CharsetDecoder) r1;
        $r4 = virtualinvoke $r3.<java.nio.charset.CharsetDecoder: java.nio.charset.Charset charset()>();
        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();
        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        return $z1;

     label0:
        $z2 = r2 instanceof java.nio.charset.Charset;
        if $z2 == 0 goto label1;

        $r6 = (java.nio.charset.CharsetDecoder) r1;
        $r7 = virtualinvoke $r6.<java.nio.charset.CharsetDecoder: java.nio.charset.Charset charset()>();
        $z3 = virtualinvoke $r7.<java.nio.charset.Charset: boolean equals(java.lang.Object)>(r2);
        return $z3;

     label1:
        return 0;
    }

    java.lang.Object create(java.lang.Object)
    {
        sun.nio.cs.ThreadLocalCoders$1 r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2;
        java.nio.charset.Charset $r3, $r5;
        java.nio.charset.CharsetDecoder $r4, $r6;
        java.lang.AssertionError $r7;

        r0 := @this: sun.nio.cs.ThreadLocalCoders$1;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.lang.String;
        if $z0 == 0 goto label0;

        $r2 = (java.lang.String) r1;
        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();
        return $r4;

     label0:
        $z1 = r1 instanceof java.nio.charset.Charset;
        if $z1 == 0 goto label1;

        $r5 = (java.nio.charset.Charset) r1;
        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();
        return $r6;

     label1:
        $z2 = <sun.nio.cs.ThreadLocalCoders$1: boolean $assertionsDisabled>;
        if $z2 != 0 goto label2;

        $r7 = new java.lang.AssertionError;
        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();
        throw $r7;

     label2:
        return null;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "sun/nio/cs/ThreadLocalCoders";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <sun.nio.cs.ThreadLocalCoders$1: boolean $assertionsDisabled> = $z1;
        return;
    }
}
