public abstract class com.sun.naming.internal.VersionHelper extends java.lang.Object
{
    private static com.sun.naming.internal.VersionHelper helper;
    static final java.lang.String[] PROPS;
    public static final int INITIAL_CONTEXT_FACTORY;
    public static final int OBJECT_FACTORIES;
    public static final int URL_PKG_PREFIXES;
    public static final int STATE_FACTORIES;
    public static final int PROVIDER_URL;
    public static final int DNS_URL;
    public static final int CONTROL_FACTORIES;

    void <init>()
    {
        com.sun.naming.internal.VersionHelper r0;

        r0 := @this: com.sun.naming.internal.VersionHelper;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static com.sun.naming.internal.VersionHelper getVersionHelper()
    {
        com.sun.naming.internal.VersionHelper $r0;

        $r0 = <com.sun.naming.internal.VersionHelper: com.sun.naming.internal.VersionHelper helper>;
        return $r0;
    }

    public abstract java.lang.Class loadClass(java.lang.String) throws java.lang.ClassNotFoundException;

    abstract java.lang.Class loadClass(java.lang.String, java.lang.ClassLoader) throws java.lang.ClassNotFoundException;

    public abstract java.lang.Class loadClass(java.lang.String, java.lang.String) throws java.lang.ClassNotFoundException, java.net.MalformedURLException;

    abstract java.lang.String getJndiProperty(int);

    abstract java.lang.String[] getJndiProperties();

    abstract java.io.InputStream getResourceAsStream(java.lang.Class, java.lang.String);

    abstract java.io.InputStream getJavaHomeLibStream(java.lang.String);

    abstract javax.naming.NamingEnumeration getResources(java.lang.ClassLoader, java.lang.String) throws java.io.IOException;

    abstract java.lang.ClassLoader getContextClassLoader();

    protected static java.net.URL[] getUrlArray(java.lang.String) throws java.net.MalformedURLException
    {
        java.lang.String r0, $r6, $r8, $r11;
        java.util.StringTokenizer $r1, r2;
        java.util.Vector r3, $r5;
        java.lang.String[] r4;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        java.lang.Object $r7;
        java.net.URL[] r9;
        java.net.URL $r10;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.util.StringTokenizer;
        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String)>(r0);
        r2 = $r1;
        $r5 = new java.util.Vector;
        specialinvoke $r5.<java.util.Vector: void <init>(int)>(10);
        r3 = $r5;

     label0:
        $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>($r6);
        goto label0;

     label1:
        $i2 = virtualinvoke r3.<java.util.Vector: int size()>();
        r4 = newarray (java.lang.String)[$i2];
        i0 = 0;

     label2:
        $i3 = lengthof r4;
        if i0 >= $i3 goto label3;

        $r7 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i0);
        $r8 = (java.lang.String) $r7;
        r4[i0] = $r8;
        i0 = i0 + 1;
        goto label2;

     label3:
        $i4 = lengthof r4;
        r9 = newarray (java.net.URL)[$i4];
        i1 = 0;

     label4:
        $i5 = lengthof r9;
        if i1 >= $i5 goto label5;

        $r10 = new java.net.URL;
        $r11 = r4[i1];
        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r11);
        r9[i1] = $r10;
        i1 = i1 + 1;
        goto label4;

     label5:
        return r9;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        com.sun.naming.internal.VersionHelper12 $r1;

        <com.sun.naming.internal.VersionHelper: com.sun.naming.internal.VersionHelper helper> = null;
        $r0 = newarray (java.lang.String)[7];
        $r0[0] = "java.naming.factory.initial";
        $r0[1] = "java.naming.factory.object";
        $r0[2] = "java.naming.factory.url.pkgs";
        $r0[3] = "java.naming.factory.state";
        $r0[4] = "java.naming.provider.url";
        $r0[5] = "java.naming.dns.url";
        $r0[6] = "java.naming.factory.control";
        <com.sun.naming.internal.VersionHelper: java.lang.String[] PROPS> = $r0;
        $r1 = new com.sun.naming.internal.VersionHelper12;
        specialinvoke $r1.<com.sun.naming.internal.VersionHelper12: void <init>()>();
        <com.sun.naming.internal.VersionHelper: com.sun.naming.internal.VersionHelper helper> = $r1;
        return;
    }
}
