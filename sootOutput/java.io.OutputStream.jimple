public abstract class java.io.OutputStream extends java.lang.Object implements java.io.Closeable, java.io.Flushable
{

    public void <init>()
    {
        java.io.OutputStream r0;

        r0 := @this: java.io.OutputStream;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public abstract void write(int) throws java.io.IOException;

    public void write(byte[]) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.OutputStream;
        r1 := @parameter0: byte[];
        $i0 = lengthof r1;
        virtualinvoke r0.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i0);
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.NullPointerException $r2;
        java.lang.IndexOutOfBoundsException $r3;
        byte $b8;

        r0 := @this: java.io.OutputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        if i0 < 0 goto label1;

        $i3 = lengthof r1;
        if i0 > $i3 goto label1;

        if i1 < 0 goto label1;

        $i4 = i0 + i1;
        $i5 = lengthof r1;
        if $i4 > $i5 goto label1;

        $i6 = i0 + i1;
        if $i6 >= 0 goto label2;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();
        throw $r3;

     label2:
        if i1 != 0 goto label3;

        return;

     label3:
        i2 = 0;

     label4:
        if i2 >= i1 goto label5;

        $i7 = i0 + i2;
        $b8 = r1[$i7];
        virtualinvoke r0.<java.io.OutputStream: void write(int)>($b8);
        i2 = i2 + 1;
        goto label4;

     label5:
        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream r0;

        r0 := @this: java.io.OutputStream;
        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream r0;

        r0 := @this: java.io.OutputStream;
        return;
    }
}
