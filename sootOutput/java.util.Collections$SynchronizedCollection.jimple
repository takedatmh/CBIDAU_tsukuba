class java.util.Collections$SynchronizedCollection extends java.lang.Object implements java.util.Collection, java.io.Serializable
{
    private static final long serialVersionUID;
    final java.util.Collection c;
    final java.lang.Object mutex;

    void <init>(java.util.Collection)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.util.Collection;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c> = r1;
        r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex> = r0;
        return;
    }

    void <init>(java.util.Collection, java.lang.Object)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1;
        java.lang.Object r2;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.util.Collection;
        r2 := @parameter1: java.lang.Object;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c> = r1;
        r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex> = r2;
        return;
    }

    public int size()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.Collection $r4;
        int $i0;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        $r3 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $i0 = interfaceinvoke $r4.<java.util.Collection: int size()>();
        exitmonitor r1;

     label1:
        return $i0;

     label2:
        $r5 := @caughtexception;

     label3:
        r2 = $r5;
        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean isEmpty()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.Collection $r4;
        boolean $z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        $r3 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();
        exitmonitor r1;

     label1:
        return $z0;

     label2:
        $r5 := @caughtexception;

     label3:
        r2 = $r5;
        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, r2, $r4;
        java.lang.Throwable r3, $r6;
        java.util.Collection $r5;
        boolean $z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.lang.Object;
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean contains(java.lang.Object)>(r1);
        exitmonitor r2;

     label1:
        return $z0;

     label2:
        $r6 := @caughtexception;

     label3:
        r3 = $r6;
        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.Object[] toArray()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.util.Collection $r4;
        java.lang.Object[] $r5;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        $r3 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $r5 = interfaceinvoke $r4.<java.util.Collection: java.lang.Object[] toArray()>();
        exitmonitor r1;

     label1:
        return $r5;

     label2:
        $r6 := @caughtexception;

     label3:
        r2 = $r6;
        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object[] r1, $r6;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;
        java.util.Collection $r5;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.lang.Object[];
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $r6 = interfaceinvoke $r5.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r1);
        exitmonitor r2;

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;

     label3:
        r3 = $r7;
        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.util.Iterator iterator()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection $r1;
        java.util.Iterator $r2;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        $r1 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();
        return $r2;
    }

    public boolean add(java.lang.Object)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, r2, $r4;
        java.lang.Throwable r3, $r6;
        java.util.Collection $r5;
        boolean $z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.lang.Object;
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(r1);
        exitmonitor r2;

     label1:
        return $z0;

     label2:
        $r6 := @caughtexception;

     label3:
        r3 = $r6;
        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, r2, $r4;
        java.lang.Throwable r3, $r6;
        java.util.Collection $r5;
        boolean $z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.lang.Object;
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean remove(java.lang.Object)>(r1);
        exitmonitor r2;

     label1:
        return $z0;

     label2:
        $r6 := @caughtexception;

     label3:
        r3 = $r6;
        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1, $r5;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        boolean $z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.util.Collection;
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean containsAll(java.util.Collection)>(r1);
        exitmonitor r2;

     label1:
        return $z0;

     label2:
        $r6 := @caughtexception;

     label3:
        r3 = $r6;
        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1, $r5;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        boolean $z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.util.Collection;
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean addAll(java.util.Collection)>(r1);
        exitmonitor r2;

     label1:
        return $z0;

     label2:
        $r6 := @caughtexception;

     label3:
        r3 = $r6;
        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1, $r5;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        boolean $z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.util.Collection;
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean removeAll(java.util.Collection)>(r1);
        exitmonitor r2;

     label1:
        return $z0;

     label2:
        $r6 := @caughtexception;

     label3:
        r3 = $r6;
        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1, $r5;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        boolean $z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.util.Collection;
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        $r5 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean retainAll(java.util.Collection)>(r1);
        exitmonitor r2;

     label1:
        return $z0;

     label2:
        $r6 := @caughtexception;

     label3:
        r3 = $r6;
        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void clear()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.Collection $r4;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        $r3 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        interfaceinvoke $r4.<java.util.Collection: void clear()>();
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r5 := @caughtexception;

     label3:
        r2 = $r5;
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.String toString()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.util.Collection $r4;
        java.lang.String $r5;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        $r3 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r1 = $r3;
        entermonitor $r3;

     label0:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        exitmonitor r1;

     label1:
        return $r5;

     label2:
        $r6 := @caughtexception;

     label3:
        r2 = $r6;
        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Collections$SynchronizedCollection r0;
        java.io.ObjectOutputStream r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: java.util.Collections$SynchronizedCollection;
        r1 := @parameter0: java.io.ObjectOutputStream;
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;
        r2 = $r4;
        entermonitor $r4;

     label0:
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r5 := @caughtexception;

     label3:
        r3 = $r5;
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
}
