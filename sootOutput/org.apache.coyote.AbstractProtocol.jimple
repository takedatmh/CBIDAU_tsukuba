public abstract class org.apache.coyote.AbstractProtocol extends java.lang.Object implements org.apache.coyote.ProtocolHandler, javax.management.MBeanRegistration
{
    protected static final org.apache.tomcat.util.res.StringManager sm;
    private static final java.util.concurrent.atomic.AtomicInteger nameCounter;
    protected javax.management.ObjectName rgOname;
    protected javax.management.ObjectName tpOname;
    private int nameIndex;
    protected org.apache.tomcat.util.net.AbstractEndpoint endpoint;
    private int maxCookieCount;
    protected org.apache.coyote.Adapter adapter;
    protected int processorCache;
    protected java.lang.String clientCertProvider;
    protected java.lang.String domain;
    protected javax.management.ObjectName oname;
    protected javax.management.MBeanServer mserver;

    static void <clinit>()
    {
        org.apache.tomcat.util.res.StringManager $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        $r0 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.coyote");
        <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm> = $r0;
        $r1 = new java.util.concurrent.atomic.AtomicInteger;
        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);
        <org.apache.coyote.AbstractProtocol: java.util.concurrent.atomic.AtomicInteger nameCounter> = $r1;
        return;
    }

    public void <init>()
    {
        org.apache.coyote.AbstractProtocol r0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName rgOname> = null;
        r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName tpOname> = null;
        r0.<org.apache.coyote.AbstractProtocol: int nameIndex> = 0;
        r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint> = null;
        r0.<org.apache.coyote.AbstractProtocol: int maxCookieCount> = 200;
        r0.<org.apache.coyote.AbstractProtocol: int processorCache> = 200;
        r0.<org.apache.coyote.AbstractProtocol: java.lang.String clientCertProvider> = null;
        return;
    }

    public boolean setProperty(java.lang.String, java.lang.String)
    {
        org.apache.coyote.AbstractProtocol r0;
        java.lang.String r1, r2;
        org.apache.tomcat.util.net.AbstractEndpoint $r3;
        boolean $z0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $z0 = virtualinvoke $r3.<org.apache.tomcat.util.net.AbstractEndpoint: boolean setProperty(java.lang.String,java.lang.String)>(r1, r2);
        return $z0;
    }

    public java.lang.String getProperty(java.lang.String)
    {
        org.apache.coyote.AbstractProtocol r0;
        java.lang.String r1, $r3;
        org.apache.tomcat.util.net.AbstractEndpoint $r2;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r3 = virtualinvoke $r2.<org.apache.tomcat.util.net.AbstractEndpoint: java.lang.String getProperty(java.lang.String)>(r1);
        return $r3;
    }

    public void setAdapter(org.apache.coyote.Adapter)
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.coyote.Adapter r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        r1 := @parameter0: org.apache.coyote.Adapter;
        r0.<org.apache.coyote.AbstractProtocol: org.apache.coyote.Adapter adapter> = r1;
        return;
    }

    public org.apache.coyote.Adapter getAdapter()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.coyote.Adapter $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.coyote.Adapter adapter>;
        return $r1;
    }

    public int getProcessorCache()
    {
        org.apache.coyote.AbstractProtocol r0;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $i0 = r0.<org.apache.coyote.AbstractProtocol: int processorCache>;
        return $i0;
    }

    public void setProcessorCache(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        r0.<org.apache.coyote.AbstractProtocol: int processorCache> = i0;
        return;
    }

    public java.lang.String getClientCertProvider()
    {
        org.apache.coyote.AbstractProtocol r0;
        java.lang.String $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: java.lang.String clientCertProvider>;
        return $r1;
    }

    public void setClientCertProvider(java.lang.String)
    {
        org.apache.coyote.AbstractProtocol r0;
        java.lang.String r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.coyote.AbstractProtocol: java.lang.String clientCertProvider> = r1;
        return;
    }

    public boolean isAprRequired()
    {
        org.apache.coyote.AbstractProtocol r0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        return 0;
    }

    public int getMaxCookieCount()
    {
        org.apache.coyote.AbstractProtocol r0;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $i0 = r0.<org.apache.coyote.AbstractProtocol: int maxCookieCount>;
        return $i0;
    }

    public void setMaxCookieCount(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        r0.<org.apache.coyote.AbstractProtocol: int maxCookieCount> = i0;
        return;
    }

    public java.util.concurrent.Executor getExecutor()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: java.util.concurrent.Executor getExecutor()>();
        return $r2;
    }

    public void setExecutor(java.util.concurrent.Executor)
    {
        org.apache.coyote.AbstractProtocol r0;
        java.util.concurrent.Executor r1;
        org.apache.tomcat.util.net.AbstractEndpoint $r2;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        r1 := @parameter0: java.util.concurrent.Executor;
        $r2 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r2.<org.apache.tomcat.util.net.AbstractEndpoint: void setExecutor(java.util.concurrent.Executor)>(r1);
        return;
    }

    public int getMaxThreads()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getMaxThreads()>();
        return $i0;
    }

    public void setMaxThreads(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setMaxThreads(int)>(i0);
        return;
    }

    public int getMaxConnections()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getMaxConnections()>();
        return $i0;
    }

    public void setMaxConnections(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setMaxConnections(int)>(i0);
        return;
    }

    public int getMinSpareThreads()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getMinSpareThreads()>();
        return $i0;
    }

    public void setMinSpareThreads(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setMinSpareThreads(int)>(i0);
        return;
    }

    public int getThreadPriority()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getThreadPriority()>();
        return $i0;
    }

    public void setThreadPriority(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setThreadPriority(int)>(i0);
        return;
    }

    public int getBacklog()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getBacklog()>();
        return $i0;
    }

    public void setBacklog(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setBacklog(int)>(i0);
        return;
    }

    public boolean getTcpNoDelay()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        boolean $z0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $z0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: boolean getTcpNoDelay()>();
        return $z0;
    }

    public void setTcpNoDelay(boolean)
    {
        org.apache.coyote.AbstractProtocol r0;
        boolean z0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        z0 := @parameter0: boolean;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setTcpNoDelay(boolean)>(z0);
        return;
    }

    public int getSoLinger()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getSoLinger()>();
        return $i0;
    }

    public void setSoLinger(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setSoLinger(int)>(i0);
        return;
    }

    public int getKeepAliveTimeout()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getKeepAliveTimeout()>();
        return $i0;
    }

    public void setKeepAliveTimeout(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setKeepAliveTimeout(int)>(i0);
        return;
    }

    public java.net.InetAddress getAddress()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        java.net.InetAddress $r2;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r2 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: java.net.InetAddress getAddress()>();
        return $r2;
    }

    public void setAddress(java.net.InetAddress)
    {
        org.apache.coyote.AbstractProtocol r0;
        java.net.InetAddress r1;
        org.apache.tomcat.util.net.AbstractEndpoint $r2;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        r1 := @parameter0: java.net.InetAddress;
        $r2 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r2.<org.apache.tomcat.util.net.AbstractEndpoint: void setAddress(java.net.InetAddress)>(r1);
        return;
    }

    public int getPort()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getPort()>();
        return $i0;
    }

    public void setPort(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setPort(int)>(i0);
        return;
    }

    public int getLocalPort()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getLocalPort()>();
        return $i0;
    }

    public int getConnectionTimeout()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getSoTimeout()>();
        return $i0;
    }

    public void setConnectionTimeout(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setSoTimeout(int)>(i0);
        return;
    }

    public int getSoTimeout()
    {
        org.apache.coyote.AbstractProtocol r0;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $i0 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: int getConnectionTimeout()>();
        return $i0;
    }

    public void setSoTimeout(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        virtualinvoke r0.<org.apache.coyote.AbstractProtocol: void setConnectionTimeout(int)>(i0);
        return;
    }

    public int getMaxHeaderCount()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        int $i0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: int getMaxHeaderCount()>();
        return $i0;
    }

    public void setMaxHeaderCount(int)
    {
        org.apache.coyote.AbstractProtocol r0;
        int i0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        i0 := @parameter0: int;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: void setMaxHeaderCount(int)>(i0);
        return;
    }

    public long getConnectionCount()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.net.AbstractEndpoint $r1;
        long $l0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $l0 = virtualinvoke $r1.<org.apache.tomcat.util.net.AbstractEndpoint: long getConnectionCount()>();
        return $l0;
    }

    public synchronized int getNameIndex()
    {
        org.apache.coyote.AbstractProtocol r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $i0 = r0.<org.apache.coyote.AbstractProtocol: int nameIndex>;
        if $i0 != 0 goto label0;

        $r1 = <org.apache.coyote.AbstractProtocol: java.util.concurrent.atomic.AtomicInteger nameCounter>;
        $i1 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
        r0.<org.apache.coyote.AbstractProtocol: int nameIndex> = $i1;

     label0:
        $i2 = r0.<org.apache.coyote.AbstractProtocol: int nameIndex>;
        return $i2;
    }

    public java.lang.String getName()
    {
        org.apache.coyote.AbstractProtocol r0;
        java.lang.StringBuilder $r1, r2;
        int i0, $i1, i2;
        java.lang.String $r3, $r7, $r15, $r16;
        java.net.InetAddress $r5, $r6;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = new java.lang.StringBuilder;
        $r3 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getNamePrefix()>();
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);
        r2 = $r1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
        $r5 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.net.InetAddress getAddress()>();
        if $r5 == null goto label0;

        $r6 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.net.InetAddress getAddress()>();
        $r7 = virtualinvoke $r6.<java.net.InetAddress: java.lang.String getHostAddress()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label0:
        i0 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: int getPort()>();
        if i0 != 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("auto-");
        $i1 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: int getNameIndex()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        i2 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: int getLocalPort()>();
        if i2 == -1 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        goto label2;

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label2:
        $r15 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        $r16 = staticinvoke <javax.management.ObjectName: java.lang.String quote(java.lang.String)>($r15);
        return $r16;
    }

    protected abstract org.apache.juli.logging.Log getLog();

    protected abstract java.lang.String getNamePrefix();

    protected abstract java.lang.String getProtocolName();

    protected abstract org.apache.tomcat.util.net.AbstractEndpoint$Handler getHandler();

    public javax.management.ObjectName getObjectName()
    {
        org.apache.coyote.AbstractProtocol r0;
        javax.management.ObjectName $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName oname>;
        return $r1;
    }

    public java.lang.String getDomain()
    {
        org.apache.coyote.AbstractProtocol r0;
        java.lang.String $r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r1 = r0.<org.apache.coyote.AbstractProtocol: java.lang.String domain>;
        return $r1;
    }

    public javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName) throws java.lang.Exception
    {
        org.apache.coyote.AbstractProtocol r0;
        javax.management.MBeanServer r1;
        javax.management.ObjectName r2;
        java.lang.String $r3;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        r1 := @parameter0: javax.management.MBeanServer;
        r2 := @parameter1: javax.management.ObjectName;
        r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName oname> = r2;
        r0.<org.apache.coyote.AbstractProtocol: javax.management.MBeanServer mserver> = r1;
        $r3 = virtualinvoke r2.<javax.management.ObjectName: java.lang.String getDomain()>();
        r0.<org.apache.coyote.AbstractProtocol: java.lang.String domain> = $r3;
        return r2;
    }

    public void postRegister(java.lang.Boolean)
    {
        org.apache.coyote.AbstractProtocol r0;
        java.lang.Boolean r1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        r1 := @parameter0: java.lang.Boolean;
        return;
    }

    public void preDeregister() throws java.lang.Exception
    {
        org.apache.coyote.AbstractProtocol r0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        return;
    }

    public void postDeregister()
    {
        org.apache.coyote.AbstractProtocol r0;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        return;
    }

    private javax.management.ObjectName createObjectName() throws javax.management.MalformedObjectNameException
    {
        org.apache.coyote.AbstractProtocol r0;
        java.lang.StringBuilder r1, $r6;
        int i0, $i1, $i2;
        java.net.InetAddress r2;
        org.apache.coyote.Adapter $r3;
        java.lang.String $r4, $r5, $r7, $r13, $r14, $r17;
        javax.management.ObjectName $r16;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r3 = r0.<org.apache.coyote.AbstractProtocol: org.apache.coyote.Adapter adapter>;
        $r4 = interfaceinvoke $r3.<org.apache.coyote.Adapter: java.lang.String getDomain()>();
        r0.<org.apache.coyote.AbstractProtocol: java.lang.String domain> = $r4;
        $r5 = r0.<org.apache.coyote.AbstractProtocol: java.lang.String domain>;
        if $r5 != null goto label0;

        return null;

     label0:
        $r6 = new java.lang.StringBuilder;
        $r7 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getDomain()>();
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);
        r1 = $r6;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=ProtocolHandler,port=");
        i0 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: int getPort()>();
        if i0 <= 0 goto label1;

        $i1 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: int getPort()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        goto label2;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("auto-");
        $i2 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: int getNameIndex()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

     label2:
        r2 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.net.InetAddress getAddress()>();
        if r2 == null goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",address=");
        $r13 = virtualinvoke r2.<java.net.InetAddress: java.lang.String getHostAddress()>();
        $r14 = staticinvoke <javax.management.ObjectName: java.lang.String quote(java.lang.String)>($r13);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label3:
        $r16 = new javax.management.ObjectName;
        $r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<javax.management.ObjectName: void <init>(java.lang.String)>($r17);
        return $r16;
    }

    public void init() throws java.lang.Exception
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.res.StringManager $r1, $r29, $r52;
        java.lang.Exception r2, r3, $r27, $r50;
        org.apache.juli.logging.Log $r4, $r5, $r28, $r51;
        boolean $z0;
        java.lang.Object[] $r6, $r30, $r53;
        java.lang.String $r7, $r8, $r14, $r17, $r18, $r21, $r23, $r32, $r33, $r36, $r37, $r39, $r41, r46, $r48, $r54, $r55;
        javax.management.ObjectName $r9, $r10, $r11, $r13, $r15, $r26, $r31, $r34, $r45;
        org.apache.tomcat.util.modeler.Registry $r12, $r24, $r42;
        java.lang.StringBuilder $r16, $r19, $r20, $r22, $r35, $r38, $r40;
        org.apache.tomcat.util.net.AbstractEndpoint $r25, $r47, $r49;
        org.apache.tomcat.util.net.AbstractEndpoint$Handler $r43;
        java.lang.Object $r44;
        int $i0, $i1;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r4 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $z0 = interfaceinvoke $r4.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r5 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r1 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = newarray (java.lang.Object)[1];
        $r7 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r6[0] = $r7;
        $r8 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.init", $r6);
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r8);

     label0:
        $r9 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName oname>;
        if $r9 != null goto label1;

        $r10 = specialinvoke r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName createObjectName()>();
        r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName oname> = $r10;
        $r11 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName oname>;
        if $r11 == null goto label1;

        $r12 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        $r13 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName oname>;
        virtualinvoke $r12.<org.apache.tomcat.util.modeler.Registry: void registerComponent(java.lang.Object,javax.management.ObjectName,java.lang.String)>(r0, $r13, null);

     label1:
        $r14 = r0.<org.apache.coyote.AbstractProtocol: java.lang.String domain>;
        if $r14 == null goto label6;

     label2:
        $r15 = new javax.management.ObjectName;
        $r16 = new java.lang.StringBuilder;
        $r17 = r0.<org.apache.coyote.AbstractProtocol: java.lang.String domain>;
        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>($r18);
        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type=ThreadPool,name=");
        $r21 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r15.<javax.management.ObjectName: void <init>(java.lang.String)>($r23);
        r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName tpOname> = $r15;
        $r24 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        $r25 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $r26 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName tpOname>;
        virtualinvoke $r24.<org.apache.tomcat.util.modeler.Registry: void registerComponent(java.lang.Object,javax.management.ObjectName,java.lang.String)>($r25, $r26, null);

     label3:
        goto label5;

     label4:
        $r27 := @caughtexception;
        r2 = $r27;
        $r28 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r29 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r30 = newarray (java.lang.Object)[2];
        $r31 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName tpOname>;
        $r30[0] = $r31;
        $r32 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r30[1] = $r32;
        $r33 = virtualinvoke $r29.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.mbeanRegistrationFailed", $r30);
        interfaceinvoke $r28.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r33, r2);

     label5:
        $r34 = new javax.management.ObjectName;
        $r35 = new java.lang.StringBuilder;
        $r36 = r0.<org.apache.coyote.AbstractProtocol: java.lang.String domain>;
        $r37 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r36);
        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>($r37);
        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":type=GlobalRequestProcessor,name=");
        $r39 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r34.<javax.management.ObjectName: void <init>(java.lang.String)>($r41);
        r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName rgOname> = $r34;
        $r42 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        $r43 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint$Handler getHandler()>();
        $r44 = interfaceinvoke $r43.<org.apache.tomcat.util.net.AbstractEndpoint$Handler: java.lang.Object getGlobal()>();
        $r45 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName rgOname>;
        virtualinvoke $r42.<org.apache.tomcat.util.modeler.Registry: void registerComponent(java.lang.Object,javax.management.ObjectName,java.lang.String)>($r44, $r45, null);

     label6:
        r46 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r47 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        $i0 = virtualinvoke r46.<java.lang.String: int length()>();
        $i1 = $i0 - 1;
        $r48 = virtualinvoke r46.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);
        virtualinvoke $r47.<org.apache.tomcat.util.net.AbstractEndpoint: void setName(java.lang.String)>($r48);

     label7:
        $r49 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r49.<org.apache.tomcat.util.net.AbstractEndpoint: void init()>();

     label8:
        goto label10;

     label9:
        $r50 := @caughtexception;
        r3 = $r50;
        $r51 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r52 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r53 = newarray (java.lang.Object)[1];
        $r54 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r53[0] = $r54;
        $r55 = virtualinvoke $r52.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.initError", $r53);
        interfaceinvoke $r51.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r55, r3);
        throw r3;

     label10:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public void start() throws java.lang.Exception
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.res.StringManager $r1, $r11;
        java.lang.Exception r2, $r9;
        org.apache.juli.logging.Log $r3, $r4, $r10;
        boolean $z0;
        java.lang.Object[] $r5, $r12;
        java.lang.String $r6, $r7, $r13, $r14;
        org.apache.tomcat.util.net.AbstractEndpoint $r8;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r3 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r1 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r6 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r5[0] = $r6;
        $r7 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.start", $r5);
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r7);

     label0:
        $r8 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r8.<org.apache.tomcat.util.net.AbstractEndpoint: void start()>();

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r2 = $r9;
        $r10 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r11 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = newarray (java.lang.Object)[1];
        $r13 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r12[0] = $r13;
        $r14 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.startError", $r12);
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r14, r2);
        throw r2;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void pause() throws java.lang.Exception
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.res.StringManager $r1, $r11;
        java.lang.Exception r2, $r9;
        org.apache.juli.logging.Log $r3, $r4, $r10;
        boolean $z0;
        java.lang.Object[] $r5, $r12;
        java.lang.String $r6, $r7, $r13, $r14;
        org.apache.tomcat.util.net.AbstractEndpoint $r8;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r3 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r1 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r6 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r5[0] = $r6;
        $r7 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.pause", $r5);
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r7);

     label0:
        $r8 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r8.<org.apache.tomcat.util.net.AbstractEndpoint: void pause()>();

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r2 = $r9;
        $r10 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r11 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = newarray (java.lang.Object)[1];
        $r13 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r12[0] = $r13;
        $r14 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.pauseError", $r12);
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r14, r2);
        throw r2;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void resume() throws java.lang.Exception
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.res.StringManager $r1, $r11;
        java.lang.Exception r2, $r9;
        org.apache.juli.logging.Log $r3, $r4, $r10;
        boolean $z0;
        java.lang.Object[] $r5, $r12;
        java.lang.String $r6, $r7, $r13, $r14;
        org.apache.tomcat.util.net.AbstractEndpoint $r8;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r3 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r1 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r6 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r5[0] = $r6;
        $r7 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.resume", $r5);
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r7);

     label0:
        $r8 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r8.<org.apache.tomcat.util.net.AbstractEndpoint: void resume()>();

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r2 = $r9;
        $r10 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r11 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = newarray (java.lang.Object)[1];
        $r13 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r12[0] = $r13;
        $r14 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.resumeError", $r12);
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r14, r2);
        throw r2;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void stop() throws java.lang.Exception
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.res.StringManager $r1, $r11;
        java.lang.Exception r2, $r9;
        org.apache.juli.logging.Log $r3, $r4, $r10;
        boolean $z0;
        java.lang.Object[] $r5, $r12;
        java.lang.String $r6, $r7, $r13, $r14;
        org.apache.tomcat.util.net.AbstractEndpoint $r8;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r3 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r1 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r6 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r5[0] = $r6;
        $r7 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.stop", $r5);
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r7);

     label0:
        $r8 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r8.<org.apache.tomcat.util.net.AbstractEndpoint: void stop()>();

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r2 = $r9;
        $r10 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r11 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = newarray (java.lang.Object)[1];
        $r13 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r12[0] = $r13;
        $r14 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.stopError", $r12);
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r14, r2);
        throw r2;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void destroy()
    {
        org.apache.coyote.AbstractProtocol r0;
        org.apache.tomcat.util.res.StringManager $r1, $r11;
        java.lang.Exception r2, $r9;
        org.apache.juli.logging.Log $r3, $r4, $r10;
        boolean $z0;
        java.lang.Object[] $r5, $r12;
        java.lang.String $r6, $r7, $r13, $r14;
        org.apache.tomcat.util.net.AbstractEndpoint $r8;
        javax.management.ObjectName $r15, $r17, $r18, $r20, $r21, $r23;
        org.apache.tomcat.util.modeler.Registry $r16, $r19, $r22;

        r0 := @this: org.apache.coyote.AbstractProtocol;
        $r3 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $z0 = interfaceinvoke $r3.<org.apache.juli.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label0;

        $r4 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r1 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $r6 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r5[0] = $r6;
        $r7 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.destroy", $r5);
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void info(java.lang.Object)>($r7);

     label0:
        $r8 = r0.<org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.net.AbstractEndpoint endpoint>;
        virtualinvoke $r8.<org.apache.tomcat.util.net.AbstractEndpoint: void destroy()>();

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r2 = $r9;
        $r10 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: org.apache.juli.logging.Log getLog()>();
        $r11 = <org.apache.coyote.AbstractProtocol: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = newarray (java.lang.Object)[1];
        $r13 = virtualinvoke r0.<org.apache.coyote.AbstractProtocol: java.lang.String getName()>();
        $r12[0] = $r13;
        $r14 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("abstractProtocolHandler.destroyError", $r12);
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r14, r2);

     label3:
        $r15 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName oname>;
        if $r15 == null goto label4;

        $r16 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        $r17 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName oname>;
        virtualinvoke $r16.<org.apache.tomcat.util.modeler.Registry: void unregisterComponent(javax.management.ObjectName)>($r17);

     label4:
        $r18 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName tpOname>;
        if $r18 == null goto label5;

        $r19 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        $r20 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName tpOname>;
        virtualinvoke $r19.<org.apache.tomcat.util.modeler.Registry: void unregisterComponent(javax.management.ObjectName)>($r20);

     label5:
        $r21 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName rgOname>;
        if $r21 == null goto label6;

        $r22 = staticinvoke <org.apache.tomcat.util.modeler.Registry: org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object,java.lang.Object)>(null, null);
        $r23 = r0.<org.apache.coyote.AbstractProtocol: javax.management.ObjectName rgOname>;
        virtualinvoke $r22.<org.apache.tomcat.util.modeler.Registry: void unregisterComponent(javax.management.ObjectName)>($r23);

     label6:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }
}
