class java.util.XMLUtils extends java.lang.Object
{
    private static final java.lang.String PROPS_DTD_URI;
    private static final java.lang.String PROPS_DTD;
    private static final java.lang.String EXTERNAL_XML_VERSION;
    static final boolean $assertionsDisabled;

    void <init>()
    {
        java.util.XMLUtils r0;

        r0 := @this: java.util.XMLUtils;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static void load(java.util.Properties, java.io.InputStream) throws java.io.IOException, java.util.InvalidPropertiesFormatException
    {
        java.util.Properties r0;
        java.io.InputStream r1;
        null_type n0;
        org.xml.sax.SAXException r2, $r5;
        java.lang.String r3, $r17;
        org.w3c.dom.Document r4;
        java.util.InvalidPropertiesFormatException $r6, $r8;
        org.w3c.dom.Element r7;
        int $i0;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @parameter0: java.util.Properties;
        r1 := @parameter1: java.io.InputStream;
        n0 = null;

     label0:
        r4 = staticinvoke <java.util.XMLUtils: org.w3c.dom.Document getLoadingDoc(java.io.InputStream)>(r1);

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        $r6 = new java.util.InvalidPropertiesFormatException;
        specialinvoke $r6.<java.util.InvalidPropertiesFormatException: void <init>(java.lang.Throwable)>(r2);
        throw $r6;

     label3:
        r7 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();
        r3 = interfaceinvoke r7.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("version");
        $i0 = virtualinvoke r3.<java.lang.String: int compareTo(java.lang.String)>("1.0");
        if $i0 <= 0 goto label4;

        $r8 = new java.util.InvalidPropertiesFormatException;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exported Properties file format version ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported. This java installation can read");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" versions ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1.0");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or older. You");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" may need to install a newer version of JDK.");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.util.InvalidPropertiesFormatException: void <init>(java.lang.String)>($r17);
        throw $r8;

     label4:
        staticinvoke <java.util.XMLUtils: void importProperties(java.util.Properties,org.w3c.dom.Element)>(r0, r7);
        return;

        catch org.xml.sax.SAXException from label0 to label1 with label2;
    }

    static org.w3c.dom.Document getLoadingDoc(java.io.InputStream) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.io.InputStream r0;
        javax.xml.parsers.DocumentBuilderFactory r1;
        javax.xml.parsers.DocumentBuilder r2;
        org.xml.sax.InputSource r3, $r6;
        java.util.XMLUtils$Resolver $r4;
        java.util.XMLUtils$EH $r5;
        org.w3c.dom.Document $r7;
        javax.xml.parsers.ParserConfigurationException $r8, r9;
        java.lang.Error $r10;

        r0 := @parameter0: java.io.InputStream;
        r1 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();
        virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringElementContentWhitespace(boolean)>(1);
        virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(1);
        virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: void setCoalescing(boolean)>(1);
        virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringComments(boolean)>(1);

     label0:
        r2 = virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();
        $r4 = new java.util.XMLUtils$Resolver;
        specialinvoke $r4.<java.util.XMLUtils$Resolver: void <init>(java.util.XMLUtils$1)>(null);
        virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>($r4);
        $r5 = new java.util.XMLUtils$EH;
        specialinvoke $r5.<java.util.XMLUtils$EH: void <init>(java.util.XMLUtils$1)>(null);
        virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: void setErrorHandler(org.xml.sax.ErrorHandler)>($r5);
        $r6 = new org.xml.sax.InputSource;
        specialinvoke $r6.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r0);
        r3 = $r6;
        $r7 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>(r3);

     label1:
        return $r7;

     label2:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.Error;
        specialinvoke $r10.<java.lang.Error: void <init>(java.lang.Throwable)>(r9);
        throw $r10;

        catch javax.xml.parsers.ParserConfigurationException from label0 to label1 with label2;
    }

    static void importProperties(java.util.Properties, org.w3c.dom.Element)
    {
        java.util.Properties r0;
        org.w3c.dom.Element r1, r3;
        org.w3c.dom.NodeList r2;
        int i0, i2;
        byte b1, $b3;
        org.w3c.dom.Node r4, $r6, $r8;
        java.lang.String r5, $r7, $r9, $r10;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Properties;
        r1 := @parameter1: org.w3c.dom.Element;
        r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();
        i0 = interfaceinvoke r2.<org.w3c.dom.NodeList: int getLength()>();
        if i0 <= 0 goto label0;

        $r6 = interfaceinvoke r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);
        $r7 = interfaceinvoke $r6.<org.w3c.dom.Node: java.lang.String getNodeName()>();
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("comment");
        if $z0 == 0 goto label0;

        $b3 = 1;
        goto label1;

     label0:
        $b3 = 0;

     label1:
        b1 = $b3;
        i2 = b1;

     label2:
        if i2 >= i0 goto label6;

        $r8 = interfaceinvoke r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);
        r3 = (org.w3c.dom.Element) $r8;
        $z1 = interfaceinvoke r3.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("key");
        if $z1 == 0 goto label5;

        r4 = interfaceinvoke r3.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();
        if r4 != null goto label3;

        $r9 = "";
        goto label4;

     label3:
        $r9 = interfaceinvoke r4.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label4:
        r5 = $r9;
        $r10 = interfaceinvoke r3.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("key");
        virtualinvoke r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r10, r5);

     label5:
        i2 = i2 + 1;
        goto label2;

     label6:
        return;
    }

    static void save(java.util.Properties, java.io.OutputStream, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.util.Properties r0, r23;
        java.io.OutputStream r1;
        java.lang.String r2, r3, r10, $r28;
        javax.xml.parsers.DocumentBuilderFactory r4;
        javax.xml.parsers.DocumentBuilder r5;
        javax.xml.parsers.ParserConfigurationException r6, $r13;
        org.w3c.dom.Element r7, r8, r11, $r16, $r18, $r26;
        java.util.Iterator r9;
        java.lang.Throwable r12, $r31;
        boolean $z0, $z1;
        java.lang.AssertionError $r14;
        org.w3c.dom.Document r15;
        org.w3c.dom.Node $r17, $r19, $r27;
        org.w3c.dom.Text $r20, $r29;
        java.util.Set $r24;
        java.lang.Object $r25;

        r0 := @parameter0: java.util.Properties;
        r1 := @parameter1: java.io.OutputStream;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: java.lang.String;
        r4 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();
        r5 = null;

     label0:
        r5 = virtualinvoke r4.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label1:
        goto label3;

     label2:
        $r13 := @caughtexception;
        r6 = $r13;
        $z0 = <java.util.XMLUtils: boolean $assertionsDisabled>;
        if $z0 != 0 goto label3;

        $r14 = new java.lang.AssertionError;
        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();
        throw $r14;

     label3:
        r15 = virtualinvoke r5.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();
        $r16 = interfaceinvoke r15.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("properties");
        $r17 = interfaceinvoke r15.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r16);
        r7 = (org.w3c.dom.Element) $r17;
        if r2 == null goto label4;

        $r18 = interfaceinvoke r15.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("comment");
        $r19 = interfaceinvoke r7.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r18);
        r8 = (org.w3c.dom.Element) $r19;
        $r20 = interfaceinvoke r15.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r2);
        interfaceinvoke r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r20);

     label4:
        r23 = r0;
        entermonitor r0;

     label5:
        $r24 = virtualinvoke r0.<java.util.Properties: java.util.Set stringPropertyNames()>();
        r9 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label7;

        $r25 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
        r10 = (java.lang.String) $r25;
        $r26 = interfaceinvoke r15.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("entry");
        $r27 = interfaceinvoke r7.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r26);
        r11 = (org.w3c.dom.Element) $r27;
        interfaceinvoke r11.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("key", r10);
        $r28 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r10);
        $r29 = interfaceinvoke r15.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r28);
        interfaceinvoke r11.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r29);
        goto label6;

     label7:
        exitmonitor r23;

     label8:
        goto label12;

     label9:
        $r31 := @caughtexception;

     label10:
        r12 = $r31;
        exitmonitor r23;

     label11:
        throw r12;

     label12:
        staticinvoke <java.util.XMLUtils: void emitDocument(org.w3c.dom.Document,java.io.OutputStream,java.lang.String)>(r15, r1, r3);
        return;

        catch javax.xml.parsers.ParserConfigurationException from label0 to label1 with label2;
        catch java.lang.Throwable from label5 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    static void emitDocument(org.w3c.dom.Document, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        org.w3c.dom.Document r0;
        java.io.OutputStream r1;
        java.lang.String r2;
        javax.xml.transform.TransformerFactory r3;
        javax.xml.transform.Transformer r4;
        javax.xml.transform.TransformerConfigurationException r5, $r9;
        javax.xml.transform.stream.StreamResult r6, $r13;
        javax.xml.transform.TransformerException r7, $r14;
        java.io.IOException r8, $r15;
        boolean $z0;
        java.lang.AssertionError $r10;
        javax.xml.transform.dom.DOMSource $r11, r12;

        r0 := @parameter0: org.w3c.dom.Document;
        r1 := @parameter1: java.io.OutputStream;
        r2 := @parameter2: java.lang.String;
        r3 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();
        r4 = null;

     label0:
        r4 = virtualinvoke r3.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();
        virtualinvoke r4.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-system", "http://java.sun.com/dtd/properties.dtd");
        virtualinvoke r4.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");
        virtualinvoke r4.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("method", "xml");
        virtualinvoke r4.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", r2);

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r5 = $r9;
        $z0 = <java.util.XMLUtils: boolean $assertionsDisabled>;
        if $z0 != 0 goto label3;

        $r10 = new java.lang.AssertionError;
        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();
        throw $r10;

     label3:
        $r11 = new javax.xml.transform.dom.DOMSource;
        specialinvoke $r11.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r0);
        r12 = $r11;
        $r13 = new javax.xml.transform.stream.StreamResult;
        specialinvoke $r13.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>(r1);
        r6 = $r13;

     label4:
        virtualinvoke r4.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>(r12, r6);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;
        r7 = $r14;
        $r15 = new java.io.IOException;
        specialinvoke $r15.<java.io.IOException: void <init>()>();
        r8 = $r15;
        virtualinvoke r8.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r7);
        throw r8;

     label7:
        return;

        catch javax.xml.transform.TransformerConfigurationException from label0 to label1 with label2;
        catch javax.xml.transform.TransformerException from label4 to label5 with label6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "java/util/XMLUtils";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <java.util.XMLUtils: boolean $assertionsDisabled> = $z1;
        return;
    }
}
