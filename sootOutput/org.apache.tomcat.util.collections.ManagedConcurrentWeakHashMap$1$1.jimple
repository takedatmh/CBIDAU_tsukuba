class org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1 extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator it;
    final org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1 this$1;

    void <init>(org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1)
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1 r0;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1 r1;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap $r2;
        java.util.concurrent.ConcurrentMap $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1;
        r1 := @parameter0: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1;
        r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = staticinvoke <org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap access$0(org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1)>(r1);
        $r3 = staticinvoke <org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap: java.util.concurrent.ConcurrentMap access$0(org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap)>($r2);
        $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.util.Set entrySet()>();
        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();
        r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1: java.util.Iterator it> = $r5;
        return;
    }

    public boolean hasNext()
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1;
        $r1 = r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1: java.util.Iterator it>;
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();
        return $z0;
    }

    public java.util.Map$Entry next()
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1 r0;
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1 $r1;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1;
        $r1 = new org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1;
        specialinvoke $r1.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1: void <init>(org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1)>(r0);
        return $r1;
    }

    public void remove()
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1 r0;
        java.util.Iterator $r1;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1;
        $r1 = r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1: java.util.Iterator it>;
        interfaceinvoke $r1.<java.util.Iterator: void remove()>();
        return;
    }

    public volatile java.lang.Object next()
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1 r0;
        java.util.Map$Entry $r1;

        r0 := @this: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1: java.util.Map$Entry next()>();
        return $r1;
    }

    static java.util.Iterator access$1(org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1)
    {
        org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1 r0;
        java.util.Iterator $r1;

        r0 := @parameter0: org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1;
        $r1 = r0.<org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1: java.util.Iterator it>;
        return $r1;
    }
}
