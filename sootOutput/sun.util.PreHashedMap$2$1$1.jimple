class sun.util.PreHashedMap$2$1$1 extends java.lang.Object implements java.util.Map$Entry
{
    java.lang.String k;
    final sun.util.PreHashedMap$2$1 this$2;

    void <init>(sun.util.PreHashedMap$2$1)
    {
        sun.util.PreHashedMap$2$1$1 r0;
        sun.util.PreHashedMap$2$1 r1, $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: sun.util.PreHashedMap$2$1$1;
        r1 := @parameter0: sun.util.PreHashedMap$2$1;
        r0.<sun.util.PreHashedMap$2$1$1: sun.util.PreHashedMap$2$1 this$2> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = r0.<sun.util.PreHashedMap$2$1$1: sun.util.PreHashedMap$2$1 this$2>;
        $r3 = $r2.<sun.util.PreHashedMap$2$1: java.util.Iterator i>;
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();
        $r5 = (java.lang.String) $r4;
        r0.<sun.util.PreHashedMap$2$1$1: java.lang.String k> = $r5;
        return;
    }

    public java.lang.String getKey()
    {
        sun.util.PreHashedMap$2$1$1 r0;
        java.lang.String $r1;

        r0 := @this: sun.util.PreHashedMap$2$1$1;
        $r1 = r0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>;
        return $r1;
    }

    public java.lang.Object getValue()
    {
        sun.util.PreHashedMap$2$1$1 r0;
        sun.util.PreHashedMap$2$1 $r1;
        sun.util.PreHashedMap$2 $r2;
        sun.util.PreHashedMap $r3;
        java.lang.String $r4;
        java.lang.Object $r5;

        r0 := @this: sun.util.PreHashedMap$2$1$1;
        $r1 = r0.<sun.util.PreHashedMap$2$1$1: sun.util.PreHashedMap$2$1 this$2>;
        $r2 = $r1.<sun.util.PreHashedMap$2$1: sun.util.PreHashedMap$2 this$1>;
        $r3 = $r2.<sun.util.PreHashedMap$2: sun.util.PreHashedMap this$0>;
        $r4 = r0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>;
        $r5 = virtualinvoke $r3.<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>($r4);
        return $r5;
    }

    public int hashCode()
    {
        sun.util.PreHashedMap$2$1$1 r0;
        java.lang.Object r1;
        sun.util.PreHashedMap$2$1 $r2;
        sun.util.PreHashedMap$2 $r3;
        sun.util.PreHashedMap $r4;
        java.lang.String $r5, $r6;
        int $i0, $i1, $i2;

        r0 := @this: sun.util.PreHashedMap$2$1$1;
        $r2 = r0.<sun.util.PreHashedMap$2$1$1: sun.util.PreHashedMap$2$1 this$2>;
        $r3 = $r2.<sun.util.PreHashedMap$2$1: sun.util.PreHashedMap$2 this$1>;
        $r4 = $r3.<sun.util.PreHashedMap$2: sun.util.PreHashedMap this$0>;
        $r5 = r0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>;
        r1 = virtualinvoke $r4.<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>($r5);
        $r6 = r0.<sun.util.PreHashedMap$2$1$1: java.lang.String k>;
        $i0 = virtualinvoke $r6.<java.lang.String: int hashCode()>();
        if r1 != null goto label0;

        $i1 = 0;
        goto label1;

     label0:
        $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label1:
        $i2 = $i0 + $i1;
        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        sun.util.PreHashedMap$2$1$1 r0;
        java.lang.Object r1, $r4, $r6, $r7, $r8, $r9, $r10;
        java.util.Map$Entry r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3, $r5;

        r0 := @this: sun.util.PreHashedMap$2$1$1;
        r1 := @parameter0: java.lang.Object;
        if r1 != r0 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof java.util.Map$Entry;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.Map$Entry) r1;
        $r3 = virtualinvoke r0.<sun.util.PreHashedMap$2$1$1: java.lang.String getKey()>();
        if $r3 != null goto label2;

        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();
        if $r4 != null goto label6;

        goto label3;

     label2:
        $r5 = virtualinvoke r0.<sun.util.PreHashedMap$2$1$1: java.lang.String getKey()>();
        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();
        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z1 == 0 goto label6;

     label3:
        $r7 = virtualinvoke r0.<sun.util.PreHashedMap$2$1$1: java.lang.Object getValue()>();
        if $r7 != null goto label4;

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();
        if $r8 != null goto label6;

        goto label5;

     label4:
        $r9 = virtualinvoke r0.<sun.util.PreHashedMap$2$1$1: java.lang.Object getValue()>();
        $r10 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();
        $z2 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);
        if $z2 == 0 goto label6;

     label5:
        $z3 = 1;
        goto label7;

     label6:
        $z3 = 0;

     label7:
        return $z3;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        sun.util.PreHashedMap$2$1$1 r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: sun.util.PreHashedMap$2$1$1;
        r1 := @parameter0: java.lang.Object;
        $r2 = new java.lang.UnsupportedOperationException;
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r2;
    }

    public volatile java.lang.Object getKey()
    {
        sun.util.PreHashedMap$2$1$1 r0;
        java.lang.String $r1;

        r0 := @this: sun.util.PreHashedMap$2$1$1;
        $r1 = virtualinvoke r0.<sun.util.PreHashedMap$2$1$1: java.lang.String getKey()>();
        return $r1;
    }
}
