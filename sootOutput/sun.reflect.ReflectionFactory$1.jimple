final class sun.reflect.ReflectionFactory$1 extends java.lang.Object implements java.security.PrivilegedAction
{

    void <init>()
    {
        sun.reflect.ReflectionFactory$1 r0;

        r0 := @this: sun.reflect.ReflectionFactory$1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run()
    {
        sun.reflect.ReflectionFactory$1 r0;
        java.io.PrintStream $r1;
        java.lang.String r2, r4;
        java.lang.NumberFormatException r3, $r5;
        boolean $z0;
        int $i0;
        java.lang.RuntimeException $r6, $r8;
        java.lang.Throwable $r7;

        r0 := @this: sun.reflect.ReflectionFactory$1;
        $r1 = <java.lang.System: java.io.PrintStream out>;
        if $r1 != null goto label0;

        return null;

     label0:
        r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.reflect.noInflation");
        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("true");
        if $z0 == 0 goto label1;

        staticinvoke <sun.reflect.ReflectionFactory: boolean access$002(boolean)>(1);

     label1:
        r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.reflect.inflationThreshold");
        if r4 == null goto label5;

     label2:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);
        staticinvoke <sun.reflect.ReflectionFactory: int access$102(int)>($i0);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = new java.lang.RuntimeException;
        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unable to parse property sun.reflect.inflationThreshold");
        $r7 = virtualinvoke $r6.<java.lang.RuntimeException: java.lang.Throwable initCause(java.lang.Throwable)>(r3);
        $r8 = (java.lang.RuntimeException) $r7;
        throw $r8;

     label5:
        staticinvoke <sun.reflect.ReflectionFactory: boolean access$202(boolean)>(1);
        return null;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public volatile java.lang.Object run()
    {
        sun.reflect.ReflectionFactory$1 r0;
        java.lang.Void $r1;

        r0 := @this: sun.reflect.ReflectionFactory$1;
        $r1 = virtualinvoke r0.<sun.reflect.ReflectionFactory$1: java.lang.Void run()>();
        return $r1;
    }
}
