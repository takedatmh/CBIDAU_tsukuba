public class sun.security.krb5.internal.KerberosTime extends java.lang.Object implements java.lang.Cloneable
{
    private long kerberosTime;
    private int microSeconds;
    private static long initMilli;
    private static long initMicro;
    private static long syncTime;
    private static boolean DEBUG;
    public static final boolean NOW;
    public static final boolean UNADJUSTED_NOW;

    public void <init>(long)
    {
        sun.security.krb5.internal.KerberosTime r0;
        long l0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        l0 := @parameter0: long;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime> = l0;
        return;
    }

    private void <init>(long, int)
    {
        sun.security.krb5.internal.KerberosTime r0;
        long l0;
        int i1;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        l0 := @parameter0: long;
        i1 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime> = l0;
        r0.<sun.security.krb5.internal.KerberosTime: int microSeconds> = i1;
        return;
    }

    public java.lang.Object clone()
    {
        sun.security.krb5.internal.KerberosTime r0, $r1;
        long $l0;
        int $i1;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $r1 = new sun.security.krb5.internal.KerberosTime;
        $l0 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $i1 = r0.<sun.security.krb5.internal.KerberosTime: int microSeconds>;
        specialinvoke $r1.<sun.security.krb5.internal.KerberosTime: void <init>(long,int)>($l0, $i1);
        return $r1;
    }

    public void <init>(java.lang.String) throws sun.security.krb5.Asn1Exception
    {
        sun.security.krb5.internal.KerberosTime r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $l0 = staticinvoke <sun.security.krb5.internal.KerberosTime: long toKerberosTime(java.lang.String)>(r1);
        r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime> = $l0;
        return;
    }

    public void <init>(sun.security.util.DerValue) throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.internal.KerberosTime r0;
        sun.security.util.DerValue r1;
        java.util.GregorianCalendar r2, $r4;
        java.util.Date r3;
        long $l0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r4 = new java.util.GregorianCalendar;
        specialinvoke $r4.<java.util.GregorianCalendar: void <init>()>();
        r2 = $r4;
        r3 = virtualinvoke r1.<sun.security.util.DerValue: java.util.Date getGeneralizedTime()>();
        $l0 = virtualinvoke r3.<java.util.Date: long getTime()>();
        r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime> = $l0;
        return;
    }

    private static long toKerberosTime(java.lang.String) throws sun.security.krb5.Asn1Exception
    {
        java.lang.String r0, $r4, $r6, $r7, $r8, $r9, $r10;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.Calendar r1;
        sun.security.krb5.Asn1Exception $r2, $r3;
        char $c2;
        java.util.TimeZone $r5;
        java.util.Date $r11;
        long $l9;

        r0 := @parameter0: java.lang.String;
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 == 15 goto label0;

        $r2 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r2.<sun.security.krb5.Asn1Exception: void <init>(int)>(900);
        throw $r2;

     label0:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(14);
        if $c2 == 90 goto label1;

        $r3 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r3.<sun.security.krb5.Asn1Exception: void <init>(int)>(900);
        throw $r3;

     label1:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 4);
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");
        r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r5);
        virtualinvoke r1.<java.util.Calendar: void clear()>();
        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(4, 6);
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);
        $i4 = $i3 - 1;
        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(6, 8);
        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);
        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(8, 10);
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);
        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(10, 12);
        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);
        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(12, 14);
        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);
        virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i4, $i5, $i6, $i7, $i8);
        $r11 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>();
        $l9 = virtualinvoke $r11.<java.util.Date: long getTime()>();
        return $l9;
    }

    public static java.lang.String zeroPad(java.lang.String, int)
    {
        java.lang.String r0, $r4;
        int i0, $i1;
        java.lang.StringBuffer $r1, r2;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);
        r2 = $r1;

     label0:
        $i1 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();
        if $i1 >= i0 goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(0, 48);
        goto label0;

     label1:
        $r4 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r4;
    }

    public void <init>(java.util.Date)
    {
        sun.security.krb5.internal.KerberosTime r0;
        java.util.Date r1;
        long $l0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        r1 := @parameter0: java.util.Date;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();
        r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime> = $l0;
        return;
    }

    public void <init>(boolean)
    {
        sun.security.krb5.internal.KerberosTime r0;
        boolean z0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        z0 := @parameter0: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if z0 == 0 goto label0;

        virtualinvoke r0.<sun.security.krb5.internal.KerberosTime: void setNow()>();

     label0:
        return;
    }

    public java.lang.String toGeneralizedTimeString()
    {
        sun.security.krb5.internal.KerberosTime r0;
        java.util.Calendar r1;
        java.util.TimeZone $r2;
        long $l0;
        java.lang.StringBuilder $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r22;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r23;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");
        r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r2);
        virtualinvoke r1.<java.util.Calendar: void clear()>();
        $l0 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        virtualinvoke r1.<java.util.Calendar: void setTimeInMillis(long)>($l0);
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);
        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);
        $r5 = staticinvoke <sun.security.krb5.internal.KerberosTime: java.lang.String zeroPad(java.lang.String,int)>($r4, 4);
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);
        $i3 = $i2 + 1;
        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);
        $r8 = staticinvoke <sun.security.krb5.internal.KerberosTime: java.lang.String zeroPad(java.lang.String,int)>($r7, 2);
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);
        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);
        $r11 = staticinvoke <sun.security.krb5.internal.KerberosTime: java.lang.String zeroPad(java.lang.String,int)>($r10, 2);
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11);
        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);
        $r14 = staticinvoke <sun.security.krb5.internal.KerberosTime: java.lang.String zeroPad(java.lang.String,int)>($r13, 2);
        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12);
        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);
        $r17 = staticinvoke <sun.security.krb5.internal.KerberosTime: java.lang.String zeroPad(java.lang.String,int)>($r16, 2);
        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13);
        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);
        $r20 = staticinvoke <sun.security.krb5.internal.KerberosTime: java.lang.String zeroPad(java.lang.String,int)>($r19, 2);
        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r23;
    }

    public byte[] asn1Encode() throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.internal.KerberosTime r0;
        sun.security.util.DerOutputStream $r1, r2;
        java.util.Date $r3;
        byte[] $r4;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $r1 = new sun.security.util.DerOutputStream;
        specialinvoke $r1.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r1;
        $r3 = virtualinvoke r0.<sun.security.krb5.internal.KerberosTime: java.util.Date toDate()>();
        virtualinvoke r2.<sun.security.util.DerOutputStream: void putGeneralizedTime(java.util.Date)>($r3);
        $r4 = virtualinvoke r2.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        return $r4;
    }

    public long getTime()
    {
        sun.security.krb5.internal.KerberosTime r0;
        long $l0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $l0 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        return $l0;
    }

    public void setTime(java.util.Date)
    {
        sun.security.krb5.internal.KerberosTime r0;
        java.util.Date r1;
        long $l0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        r1 := @parameter0: java.util.Date;
        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();
        r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime> = $l0;
        r0.<sun.security.krb5.internal.KerberosTime: int microSeconds> = 0;
        return;
    }

    public void setTime(long)
    {
        sun.security.krb5.internal.KerberosTime r0;
        long l0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        l0 := @parameter0: long;
        r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime> = l0;
        r0.<sun.security.krb5.internal.KerberosTime: int microSeconds> = 0;
        return;
    }

    public java.util.Date toDate()
    {
        sun.security.krb5.internal.KerberosTime r0;
        java.util.Date $r1, r2;
        long $l0, $l1;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $r1 = new java.util.Date;
        $l0 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);
        r2 = $r1;
        $l1 = virtualinvoke r2.<java.util.Date: long getTime()>();
        virtualinvoke r2.<java.util.Date: void setTime(long)>($l1);
        return r2;
    }

    public void setNow()
    {
        sun.security.krb5.internal.KerberosTime r0;
        long l0, l1, l2, l3, $l4, $l5, $l6, $l7, $l8, $l10, $l12;
        byte $b9, $b11;
        boolean $z0;
        java.io.PrintStream $r1;
        int $i13;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l4 = staticinvoke <java.lang.System: long nanoTime()>();
        l1 = $l4 / 1000L;
        $l5 = <sun.security.krb5.internal.KerberosTime: long initMicro>;
        l2 = l1 - $l5;
        $l6 = <sun.security.krb5.internal.KerberosTime: long initMilli>;
        $l7 = l2 / 1000L;
        l3 = $l6 + $l7;
        $l8 = l3 - l0;
        $b9 = $l8 cmp 100L;
        if $b9 > 0 goto label0;

        $l10 = l0 - l3;
        $b11 = $l10 cmp 100L;
        if $b11 <= 0 goto label2;

     label0:
        $z0 = <sun.security.krb5.internal.KerberosTime: boolean DEBUG>;
        if $z0 == 0 goto label1;

        $r1 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("System time adjusted");

     label1:
        <sun.security.krb5.internal.KerberosTime: long initMilli> = l0;
        <sun.security.krb5.internal.KerberosTime: long initMicro> = l1;
        virtualinvoke r0.<sun.security.krb5.internal.KerberosTime: void setTime(long)>(l0);
        r0.<sun.security.krb5.internal.KerberosTime: int microSeconds> = 0;
        goto label3;

     label2:
        virtualinvoke r0.<sun.security.krb5.internal.KerberosTime: void setTime(long)>(l3);
        $l12 = l2 % 1000L;
        $i13 = (int) $l12;
        r0.<sun.security.krb5.internal.KerberosTime: int microSeconds> = $i13;

     label3:
        return;
    }

    public int getMicroSeconds()
    {
        sun.security.krb5.internal.KerberosTime r0;
        java.lang.Long $r1, r2;
        long $l0, $l1, $l2;
        int $i3, $i4, $i5;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $r1 = new java.lang.Long;
        $l0 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l1 = $l0 % 1000L;
        $l2 = $l1 * 1000L;
        specialinvoke $r1.<java.lang.Long: void <init>(long)>($l2);
        r2 = $r1;
        $i3 = virtualinvoke r2.<java.lang.Long: int intValue()>();
        $i4 = r0.<sun.security.krb5.internal.KerberosTime: int microSeconds>;
        $i5 = $i3 + $i4;
        return $i5;
    }

    public void setMicroSeconds(int)
    {
        sun.security.krb5.internal.KerberosTime r0;
        int i0, $i2;
        java.lang.Integer r1, $r2;
        long l1, $l3, $l4, $l5, $l6, $l7, $l8;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        i0 := @parameter0: int;
        $i2 = i0 % 1000;
        r0.<sun.security.krb5.internal.KerberosTime: int microSeconds> = $i2;
        $r2 = new java.lang.Integer;
        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);
        r1 = $r2;
        $l3 = virtualinvoke r1.<java.lang.Integer: long longValue()>();
        l1 = $l3 / 1000L;
        $l4 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l5 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l6 = $l5 % 1000L;
        $l7 = $l4 - $l6;
        $l8 = $l7 + l1;
        r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime> = $l8;
        return;
    }

    public void setMicroSeconds(java.lang.Integer)
    {
        sun.security.krb5.internal.KerberosTime r0;
        java.lang.Integer r1;
        long l0, $l3, $l4, $l5, $l6, $l7, $l8;
        int $i1, $i2;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        r1 := @parameter0: java.lang.Integer;
        if r1 == null goto label0;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();
        $i2 = $i1 % 1000;
        r0.<sun.security.krb5.internal.KerberosTime: int microSeconds> = $i2;
        $l3 = virtualinvoke r1.<java.lang.Integer: long longValue()>();
        l0 = $l3 / 1000L;
        $l4 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l5 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l6 = $l5 % 1000L;
        $l7 = $l4 - $l6;
        $l8 = $l7 + l0;
        r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime> = $l8;

     label0:
        return;
    }

    public boolean inClockSkew(int)
    {
        sun.security.krb5.internal.KerberosTime r0, $r1, r2;
        int i0;
        long $l1, $l2, $l3, $l4, $l5, $l6;
        byte $b7;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        i0 := @parameter0: int;
        $r1 = new sun.security.krb5.internal.KerberosTime;
        specialinvoke $r1.<sun.security.krb5.internal.KerberosTime: void <init>(boolean)>(1);
        r2 = $r1;
        $l1 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l2 = r2.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l3 = $l1 - $l2;
        $l4 = staticinvoke <java.lang.Math: long abs(long)>($l3);
        $l5 = (long) i0;
        $l6 = $l5 * 1000L;
        $b7 = $l4 cmp $l6;
        if $b7 <= 0 goto label0;

        return 0;

     label0:
        return 1;
    }

    public boolean inClockSkew()
    {
        sun.security.krb5.internal.KerberosTime r0;
        int $i0;
        boolean $z0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $i0 = staticinvoke <sun.security.krb5.internal.KerberosTime: int getDefaultSkew()>();
        $z0 = virtualinvoke r0.<sun.security.krb5.internal.KerberosTime: boolean inClockSkew(int)>($i0);
        return $z0;
    }

    public boolean inClockSkew(int, sun.security.krb5.internal.KerberosTime)
    {
        sun.security.krb5.internal.KerberosTime r0, r1;
        int i0;
        long $l1, $l2, $l3, $l4, $l5, $l6;
        byte $b7;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        i0 := @parameter0: int;
        r1 := @parameter1: sun.security.krb5.internal.KerberosTime;
        $l1 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l2 = r1.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l3 = $l1 - $l2;
        $l4 = staticinvoke <java.lang.Math: long abs(long)>($l3);
        $l5 = (long) i0;
        $l6 = $l5 * 1000L;
        $b7 = $l4 cmp $l6;
        if $b7 <= 0 goto label0;

        return 0;

     label0:
        return 1;
    }

    public boolean inClockSkew(sun.security.krb5.internal.KerberosTime)
    {
        sun.security.krb5.internal.KerberosTime r0, r1;
        int $i0;
        boolean $z0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        r1 := @parameter0: sun.security.krb5.internal.KerberosTime;
        $i0 = staticinvoke <sun.security.krb5.internal.KerberosTime: int getDefaultSkew()>();
        $z0 = virtualinvoke r0.<sun.security.krb5.internal.KerberosTime: boolean inClockSkew(int,sun.security.krb5.internal.KerberosTime)>($i0, r1);
        return $z0;
    }

    public boolean greaterThanWRTClockSkew(sun.security.krb5.internal.KerberosTime, int)
    {
        sun.security.krb5.internal.KerberosTime r0, r1;
        int i0;
        long $l1, $l2, $l3, $l4, $l5;
        byte $b6;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        r1 := @parameter0: sun.security.krb5.internal.KerberosTime;
        i0 := @parameter1: int;
        $l1 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l2 = r1.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l3 = $l1 - $l2;
        $l4 = (long) i0;
        $l5 = $l4 * 1000L;
        $b6 = $l3 cmp $l5;
        if $b6 <= 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public boolean greaterThanWRTClockSkew(sun.security.krb5.internal.KerberosTime)
    {
        sun.security.krb5.internal.KerberosTime r0, r1;
        int $i0;
        boolean $z0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        r1 := @parameter0: sun.security.krb5.internal.KerberosTime;
        $i0 = staticinvoke <sun.security.krb5.internal.KerberosTime: int getDefaultSkew()>();
        $z0 = virtualinvoke r0.<sun.security.krb5.internal.KerberosTime: boolean greaterThanWRTClockSkew(sun.security.krb5.internal.KerberosTime,int)>(r1, $i0);
        return $z0;
    }

    public boolean greaterThan(sun.security.krb5.internal.KerberosTime)
    {
        sun.security.krb5.internal.KerberosTime r0, r1;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;
        int $i6, $i7;
        boolean $z0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        r1 := @parameter0: sun.security.krb5.internal.KerberosTime;
        $l0 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l1 = r1.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $b2 = $l0 cmp $l1;
        if $b2 > 0 goto label0;

        $l3 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l4 = r1.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $b5 = $l3 cmp $l4;
        if $b5 != 0 goto label1;

        $i6 = r0.<sun.security.krb5.internal.KerberosTime: int microSeconds>;
        $i7 = r1.<sun.security.krb5.internal.KerberosTime: int microSeconds>;
        if $i6 <= $i7 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.krb5.internal.KerberosTime r0, $r2, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;
        long $l0, $l1;
        byte $b2;
        int $i3, $i4;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.security.krb5.internal.KerberosTime;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        $l0 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $r2 = (sun.security.krb5.internal.KerberosTime) r1;
        $l1 = $r2.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $b2 = $l0 cmp $l1;
        if $b2 != 0 goto label2;

        $i3 = r0.<sun.security.krb5.internal.KerberosTime: int microSeconds>;
        $r3 = (sun.security.krb5.internal.KerberosTime) r1;
        $i4 = $r3.<sun.security.krb5.internal.KerberosTime: int microSeconds>;
        if $i3 != $i4 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        sun.security.krb5.internal.KerberosTime r0;
        int i0, $i5, $i6, $i7, $i8;
        long $l1, $l2, $l3, $l4;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $l1 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l2 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l3 = $l2 >>> 32;
        $l4 = $l1 ^ $l3;
        $i5 = (int) $l4;
        i0 = 629 + $i5;
        $i6 = i0 * 17;
        $i7 = r0.<sun.security.krb5.internal.KerberosTime: int microSeconds>;
        $i8 = $i6 + $i7;
        return $i8;
    }

    public boolean isZero()
    {
        sun.security.krb5.internal.KerberosTime r0;
        long $l0;
        byte $b1;
        int $i2;
        boolean $z0;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $l0 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $b1 = $l0 cmp 0L;
        if $b1 != 0 goto label0;

        $i2 = r0.<sun.security.krb5.internal.KerberosTime: int microSeconds>;
        if $i2 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public int getSeconds()
    {
        sun.security.krb5.internal.KerberosTime r0;
        java.lang.Long $r1, r2;
        long $l0, $l1;
        int $i2;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $r1 = new java.lang.Long;
        $l0 = r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime>;
        $l1 = $l0 / 1000L;
        specialinvoke $r1.<java.lang.Long: void <init>(long)>($l1);
        r2 = $r1;
        $i2 = virtualinvoke r2.<java.lang.Long: int intValue()>();
        return $i2;
    }

    public void setSeconds(int)
    {
        sun.security.krb5.internal.KerberosTime r0;
        int i0;
        java.lang.Integer $r1, r2;
        long $l1, $l2;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        i0 := @parameter0: int;
        $r1 = new java.lang.Integer;
        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);
        r2 = $r1;
        $l1 = virtualinvoke r2.<java.lang.Integer: long longValue()>();
        $l2 = $l1 * 1000L;
        r0.<sun.security.krb5.internal.KerberosTime: long kerberosTime> = $l2;
        return;
    }

    public static sun.security.krb5.internal.KerberosTime parse(sun.security.util.DerInputStream, byte, boolean) throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.util.DerInputStream r0, $r4;
        byte b0, $b2, $b3, $b4, $b5;
        boolean z0;
        sun.security.util.DerValue r1, r2;
        int $i1;
        sun.security.krb5.Asn1Exception $r3;
        sun.security.krb5.internal.KerberosTime $r5;

        r0 := @parameter0: sun.security.util.DerInputStream;
        b0 := @parameter1: byte;
        z0 := @parameter2: boolean;
        if z0 == 0 goto label0;

        $i1 = virtualinvoke r0.<sun.security.util.DerInputStream: int peekByte()>();
        $b2 = (byte) $i1;
        $b3 = $b2 & 31;
        if $b3 == b0 goto label0;

        return null;

     label0:
        r1 = virtualinvoke r0.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b4 = virtualinvoke r1.<sun.security.util.DerValue: byte getTag()>();
        $b5 = $b4 & 31;
        if b0 == $b5 goto label1;

        $r3 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r3.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r3;

     label1:
        $r4 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r2 = virtualinvoke $r4.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r5 = new sun.security.krb5.internal.KerberosTime;
        specialinvoke $r5.<sun.security.krb5.internal.KerberosTime: void <init>(sun.security.util.DerValue)>(r2);
        return $r5;
    }

    public static int getDefaultSkew()
    {
        int i0, $i1;
        sun.security.krb5.Config r0;
        sun.security.krb5.KrbException $r1, r2;
        boolean $z0;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        i0 = 300;

     label0:
        r0 = staticinvoke <sun.security.krb5.Config: sun.security.krb5.Config getInstance()>();
        $i1 = virtualinvoke r0.<sun.security.krb5.Config: int getDefaultIntValue(java.lang.String,java.lang.String)>("clockskew", "libdefaults");
        i0 = $i1;
        if $i1 != -2147483648 goto label1;

        i0 = 300;

     label1:
        goto label3;

     label2:
        $r1 := @caughtexception;
        r2 = $r1;
        $z0 = <sun.security.krb5.internal.KerberosTime: boolean DEBUG>;
        if $z0 == 0 goto label3;

        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in getting clockskew from Configuration using default value ");
        $r6 = virtualinvoke r2.<sun.security.krb5.KrbException: java.lang.String getMessage()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label3:
        return i0;

        catch sun.security.krb5.KrbException from label0 to label1 with label2;
    }

    public java.lang.String toString()
    {
        sun.security.krb5.internal.KerberosTime r0;
        java.lang.String $r1;

        r0 := @this: sun.security.krb5.internal.KerberosTime;
        $r1 = virtualinvoke r0.<sun.security.krb5.internal.KerberosTime: java.lang.String toGeneralizedTimeString()>();
        return $r1;
    }

    static void <clinit>()
    {
        long $l0, $l1, $l2;
        boolean $z0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        <sun.security.krb5.internal.KerberosTime: long initMilli> = $l0;
        $l1 = staticinvoke <java.lang.System: long nanoTime()>();
        $l2 = $l1 / 1000L;
        <sun.security.krb5.internal.KerberosTime: long initMicro> = $l2;
        $z0 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        <sun.security.krb5.internal.KerberosTime: boolean DEBUG> = $z0;
        return;
    }
}
