public final class org.apache.tomcat.util.buf.Ascii extends java.lang.Object
{
    private static final byte[] toUpper;
    private static final byte[] toLower;
    private static final boolean[] isAlpha;
    private static final boolean[] isUpper;
    private static final boolean[] isLower;
    private static final boolean[] isWhite;
    private static final boolean[] isDigit;
    private static final long OVERFLOW_LIMIT;

    static void <clinit>()
    {
        int i0, i1, i4, $i5, i8;
        byte[] $r0, $r1, $r7, $r8, $r9, $r10;
        boolean[] $r2, $r3, $r4, $r5, $r6, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        byte $b2, $b3, $b6, $b7;

        $r0 = newarray (byte)[256];
        <org.apache.tomcat.util.buf.Ascii: byte[] toUpper> = $r0;
        $r1 = newarray (byte)[256];
        <org.apache.tomcat.util.buf.Ascii: byte[] toLower> = $r1;
        $r2 = newarray (boolean)[256];
        <org.apache.tomcat.util.buf.Ascii: boolean[] isAlpha> = $r2;
        $r3 = newarray (boolean)[256];
        <org.apache.tomcat.util.buf.Ascii: boolean[] isUpper> = $r3;
        $r4 = newarray (boolean)[256];
        <org.apache.tomcat.util.buf.Ascii: boolean[] isLower> = $r4;
        $r5 = newarray (boolean)[256];
        <org.apache.tomcat.util.buf.Ascii: boolean[] isWhite> = $r5;
        $r6 = newarray (boolean)[256];
        <org.apache.tomcat.util.buf.Ascii: boolean[] isDigit> = $r6;
        i0 = 0;
        goto label1;

     label0:
        $r7 = <org.apache.tomcat.util.buf.Ascii: byte[] toUpper>;
        $b2 = (byte) i0;
        $r7[i0] = $b2;
        $r8 = <org.apache.tomcat.util.buf.Ascii: byte[] toLower>;
        $b3 = (byte) i0;
        $r8[i0] = $b3;
        i0 = i0 + 1;

     label1:
        if i0 < 256 goto label0;

        i4 = 97;
        goto label3;

     label2:
        $i5 = i4 + 65;
        i1 = $i5 - 97;
        $r9 = <org.apache.tomcat.util.buf.Ascii: byte[] toUpper>;
        $b6 = (byte) i1;
        $r9[i4] = $b6;
        $r10 = <org.apache.tomcat.util.buf.Ascii: byte[] toLower>;
        $b7 = (byte) i4;
        $r10[i1] = $b7;
        $r11 = <org.apache.tomcat.util.buf.Ascii: boolean[] isAlpha>;
        $r11[i4] = 1;
        $r12 = <org.apache.tomcat.util.buf.Ascii: boolean[] isAlpha>;
        $r12[i1] = 1;
        $r13 = <org.apache.tomcat.util.buf.Ascii: boolean[] isLower>;
        $r13[i4] = 1;
        $r14 = <org.apache.tomcat.util.buf.Ascii: boolean[] isUpper>;
        $r14[i1] = 1;
        i4 = i4 + 1;

     label3:
        if i4 <= 122 goto label2;

        $r15 = <org.apache.tomcat.util.buf.Ascii: boolean[] isWhite>;
        $r15[32] = 1;
        $r16 = <org.apache.tomcat.util.buf.Ascii: boolean[] isWhite>;
        $r16[9] = 1;
        $r17 = <org.apache.tomcat.util.buf.Ascii: boolean[] isWhite>;
        $r17[13] = 1;
        $r18 = <org.apache.tomcat.util.buf.Ascii: boolean[] isWhite>;
        $r18[10] = 1;
        $r19 = <org.apache.tomcat.util.buf.Ascii: boolean[] isWhite>;
        $r19[12] = 1;
        $r20 = <org.apache.tomcat.util.buf.Ascii: boolean[] isWhite>;
        $r20[8] = 1;
        i8 = 48;
        goto label5;

     label4:
        $r21 = <org.apache.tomcat.util.buf.Ascii: boolean[] isDigit>;
        $r21[i8] = 1;
        i8 = i8 + 1;

     label5:
        if i8 <= 57 goto label4;

        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.buf.Ascii r0;

        r0 := @this: org.apache.tomcat.util.buf.Ascii;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static int toUpper(int)
    {
        int i0, $i1;
        byte[] $r0;
        byte $b2;
        short $s3;

        i0 := @parameter0: int;
        $r0 = <org.apache.tomcat.util.buf.Ascii: byte[] toUpper>;
        $i1 = i0 & 255;
        $b2 = $r0[$i1];
        $s3 = $b2 & 255;
        return $s3;
    }

    public static int toLower(int)
    {
        int i0, $i1;
        byte[] $r0;
        byte $b2;
        short $s3;

        i0 := @parameter0: int;
        $r0 = <org.apache.tomcat.util.buf.Ascii: byte[] toLower>;
        $i1 = i0 & 255;
        $b2 = $r0[$i1];
        $s3 = $b2 & 255;
        return $s3;
    }

    public static boolean isAlpha(int)
    {
        int i0, $i1;
        boolean[] $r0;
        boolean $z0;

        i0 := @parameter0: int;
        $r0 = <org.apache.tomcat.util.buf.Ascii: boolean[] isAlpha>;
        $i1 = i0 & 255;
        $z0 = $r0[$i1];
        return $z0;
    }

    public static boolean isUpper(int)
    {
        int i0, $i1;
        boolean[] $r0;
        boolean $z0;

        i0 := @parameter0: int;
        $r0 = <org.apache.tomcat.util.buf.Ascii: boolean[] isUpper>;
        $i1 = i0 & 255;
        $z0 = $r0[$i1];
        return $z0;
    }

    public static boolean isLower(int)
    {
        int i0, $i1;
        boolean[] $r0;
        boolean $z0;

        i0 := @parameter0: int;
        $r0 = <org.apache.tomcat.util.buf.Ascii: boolean[] isLower>;
        $i1 = i0 & 255;
        $z0 = $r0[$i1];
        return $z0;
    }

    public static boolean isWhite(int)
    {
        int i0, $i1;
        boolean[] $r0;
        boolean $z0;

        i0 := @parameter0: int;
        $r0 = <org.apache.tomcat.util.buf.Ascii: boolean[] isWhite>;
        $i1 = i0 & 255;
        $z0 = $r0[$i1];
        return $z0;
    }

    public static boolean isDigit(int)
    {
        int i0, $i1;
        boolean[] $r0;
        boolean $z0;

        i0 := @parameter0: int;
        $r0 = <org.apache.tomcat.util.buf.Ascii: boolean[] isDigit>;
        $i1 = i0 & 255;
        $z0 = $r0[$i1];
        return $z0;
    }

    public static int parseInt(byte[], int, int) throws java.lang.NumberFormatException
    {
        byte[] r0;
        int i0, i1, i3, i4, $i6, $i9, $i10;
        byte b2, $b5, $b7, b8;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r1, $r2;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r0 == null goto label0;

        if i1 <= 0 goto label0;

        i4 = i0 + 1;
        $b5 = r0[i0];
        b2 = $b5;
        $z0 = staticinvoke <org.apache.tomcat.util.buf.Ascii: boolean isDigit(int)>($b5);
        if $z0 != 0 goto label1;

     label0:
        $r1 = new java.lang.NumberFormatException;
        specialinvoke $r1.<java.lang.NumberFormatException: void <init>()>();
        throw $r1;

     label1:
        i3 = b2 - 48;
        goto label4;

     label2:
        $i6 = i4;
        i4 = i4 + 1;
        $b7 = r0[$i6];
        b8 = $b7;
        $z1 = staticinvoke <org.apache.tomcat.util.buf.Ascii: boolean isDigit(int)>($b7);
        if $z1 != 0 goto label3;

        $r2 = new java.lang.NumberFormatException;
        specialinvoke $r2.<java.lang.NumberFormatException: void <init>()>();
        throw $r2;

     label3:
        $i9 = i3 * 10;
        $i10 = $i9 + b8;
        i3 = $i10 - 48;

     label4:
        i1 = i1 + -1;
        if i1 > 0 goto label2;

        return i3;
    }

    public static int parseInt(char[], int, int) throws java.lang.NumberFormatException
    {
        char[] r0;
        int i0, i1, i3, i4, $i6, $i9, $i10;
        char c2, $c5, $c7, c8;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r1, $r2;

        r0 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r0 == null goto label0;

        if i1 <= 0 goto label0;

        i4 = i0 + 1;
        $c5 = r0[i0];
        c2 = $c5;
        $z0 = staticinvoke <org.apache.tomcat.util.buf.Ascii: boolean isDigit(int)>($c5);
        if $z0 != 0 goto label1;

     label0:
        $r1 = new java.lang.NumberFormatException;
        specialinvoke $r1.<java.lang.NumberFormatException: void <init>()>();
        throw $r1;

     label1:
        i3 = c2 - 48;
        goto label4;

     label2:
        $i6 = i4;
        i4 = i4 + 1;
        $c7 = r0[$i6];
        c8 = $c7;
        $z1 = staticinvoke <org.apache.tomcat.util.buf.Ascii: boolean isDigit(int)>($c7);
        if $z1 != 0 goto label3;

        $r2 = new java.lang.NumberFormatException;
        specialinvoke $r2.<java.lang.NumberFormatException: void <init>()>();
        throw $r2;

     label3:
        $i9 = i3 * 10;
        $i10 = $i9 + c8;
        i3 = $i10 - 48;

     label4:
        i1 = i1 + -1;
        if i1 > 0 goto label2;

        return i3;
    }

    public static long parseLong(byte[], int, int) throws java.lang.NumberFormatException
    {
        byte[] r0;
        int i0, i1, i4, $i6, $i7, $i12;
        byte b2, $b5, $b8, b9, $b10, $b11;
        long l3, $l13, $l14, $l15;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r1, $r2;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r0 == null goto label0;

        if i1 <= 0 goto label0;

        i4 = i0 + 1;
        $b5 = r0[i0];
        b2 = $b5;
        $z0 = staticinvoke <org.apache.tomcat.util.buf.Ascii: boolean isDigit(int)>($b5);
        if $z0 != 0 goto label1;

     label0:
        $r1 = new java.lang.NumberFormatException;
        specialinvoke $r1.<java.lang.NumberFormatException: void <init>()>();
        throw $r1;

     label1:
        $i6 = b2 - 48;
        l3 = (long) $i6;
        goto label5;

     label2:
        $i7 = i4;
        i4 = i4 + 1;
        $b8 = r0[$i7];
        b9 = $b8;
        $z1 = staticinvoke <org.apache.tomcat.util.buf.Ascii: boolean isDigit(int)>($b8);
        if $z1 == 0 goto label4;

        $b10 = l3 cmp 922337203685477580L;
        if $b10 < 0 goto label3;

        $b11 = l3 cmp 922337203685477580L;
        if $b11 != 0 goto label4;

        $i12 = b9 - 48;
        if $i12 >= 8 goto label4;

     label3:
        $l13 = l3 * 10L;
        $l14 = (long) b9;
        $l15 = $l13 + $l14;
        l3 = $l15 - 48L;
        goto label5;

     label4:
        $r2 = new java.lang.NumberFormatException;
        specialinvoke $r2.<java.lang.NumberFormatException: void <init>()>();
        throw $r2;

     label5:
        i1 = i1 + -1;
        if i1 > 0 goto label2;

        return l3;
    }

    public static long parseLong(char[], int, int) throws java.lang.NumberFormatException
    {
        char[] r0;
        int i0, i1, i5, $i7, $i8;
        char c2, $c6, $c9, c10;
        long l3, l4, $l11, $l12, $l13;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r1, $r2, $r3;
        byte $b14;

        r0 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r0 == null goto label0;

        if i1 <= 0 goto label0;

        i5 = i0 + 1;
        $c6 = r0[i0];
        c2 = $c6;
        $z0 = staticinvoke <org.apache.tomcat.util.buf.Ascii: boolean isDigit(int)>($c6);
        if $z0 != 0 goto label1;

     label0:
        $r1 = new java.lang.NumberFormatException;
        specialinvoke $r1.<java.lang.NumberFormatException: void <init>()>();
        throw $r1;

     label1:
        $i7 = c2 - 48;
        l3 = (long) $i7;
        goto label5;

     label2:
        $i8 = i5;
        i5 = i5 + 1;
        $c9 = r0[$i8];
        c10 = $c9;
        $z1 = staticinvoke <org.apache.tomcat.util.buf.Ascii: boolean isDigit(int)>($c9);
        if $z1 != 0 goto label3;

        $r2 = new java.lang.NumberFormatException;
        specialinvoke $r2.<java.lang.NumberFormatException: void <init>()>();
        throw $r2;

     label3:
        $l11 = l3 * 10L;
        $l12 = (long) c10;
        $l13 = $l11 + $l12;
        l4 = $l13 - 48L;
        $b14 = l4 cmp l3;
        if $b14 >= 0 goto label4;

        $r3 = new java.lang.NumberFormatException;
        specialinvoke $r3.<java.lang.NumberFormatException: void <init>()>();
        throw $r3;

     label4:
        l3 = l4;

     label5:
        i1 = i1 + -1;
        if i1 > 0 goto label2;

        return l3;
    }
}
