final class java.util.TreeMap$EntryIterator extends java.util.TreeMap$PrivateEntryIterator
{
    final java.util.TreeMap this$0;

    void <init>(java.util.TreeMap, java.util.TreeMap$Entry)
    {
        java.util.TreeMap$EntryIterator r0;
        java.util.TreeMap r1;
        java.util.TreeMap$Entry r2;

        r0 := @this: java.util.TreeMap$EntryIterator;
        r1 := @parameter0: java.util.TreeMap;
        r2 := @parameter1: java.util.TreeMap$Entry;
        r0.<java.util.TreeMap$EntryIterator: java.util.TreeMap this$0> = r1;
        specialinvoke r0.<java.util.TreeMap$PrivateEntryIterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry)>(r1, r2);
        return;
    }

    public java.util.Map$Entry next()
    {
        java.util.TreeMap$EntryIterator r0;
        java.util.TreeMap$Entry $r1;

        r0 := @this: java.util.TreeMap$EntryIterator;
        $r1 = virtualinvoke r0.<java.util.TreeMap$EntryIterator: java.util.TreeMap$Entry nextEntry()>();
        return $r1;
    }

    public volatile java.lang.Object next()
    {
        java.util.TreeMap$EntryIterator r0;
        java.util.Map$Entry $r1;

        r0 := @this: java.util.TreeMap$EntryIterator;
        $r1 = virtualinvoke r0.<java.util.TreeMap$EntryIterator: java.util.Map$Entry next()>();
        return $r1;
    }
}
