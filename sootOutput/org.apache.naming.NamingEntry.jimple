public class org.apache.naming.NamingEntry extends java.lang.Object
{
    public static final int ENTRY;
    public static final int LINK_REF;
    public static final int REFERENCE;
    public static final int CONTEXT;
    public int type;
    public java.lang.String name;
    public java.lang.Object value;

    public void <init>(java.lang.String, java.lang.Object, int)
    {
        org.apache.naming.NamingEntry r0;
        java.lang.String r1;
        java.lang.Object r2;
        int i0;

        r0 := @this: org.apache.naming.NamingEntry;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        i0 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.naming.NamingEntry: java.lang.String name> = r1;
        r0.<org.apache.naming.NamingEntry: java.lang.Object value> = r2;
        r0.<org.apache.naming.NamingEntry: int type> = i0;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.naming.NamingEntry r0, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r4;

        r0 := @this: org.apache.naming.NamingEntry;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof org.apache.naming.NamingEntry;
        if $z0 == 0 goto label0;

        $r2 = r0.<org.apache.naming.NamingEntry: java.lang.String name>;
        $r3 = (org.apache.naming.NamingEntry) r1;
        $r4 = $r3.<org.apache.naming.NamingEntry: java.lang.String name>;
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        return $z1;

     label0:
        return 0;
    }

    public int hashCode()
    {
        org.apache.naming.NamingEntry r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.naming.NamingEntry;
        $r1 = r0.<org.apache.naming.NamingEntry: java.lang.String name>;
        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        return $i0;
    }
}
