public class java.security.cert.CertStore extends java.lang.Object
{
    private static final java.lang.String CERTSTORE_TYPE;
    private java.security.cert.CertStoreSpi storeSpi;
    private java.security.Provider provider;
    private java.lang.String type;
    private java.security.cert.CertStoreParameters params;

    protected void <init>(java.security.cert.CertStoreSpi, java.security.Provider, java.lang.String, java.security.cert.CertStoreParameters)
    {
        java.security.cert.CertStore r0;
        java.security.cert.CertStoreSpi r1;
        java.security.Provider r2;
        java.lang.String r3;
        java.security.cert.CertStoreParameters r4, $r6;
        java.lang.Object $r5;

        r0 := @this: java.security.cert.CertStore;
        r1 := @parameter0: java.security.cert.CertStoreSpi;
        r2 := @parameter1: java.security.Provider;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.security.cert.CertStoreParameters;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.security.cert.CertStore: java.security.cert.CertStoreSpi storeSpi> = r1;
        r0.<java.security.cert.CertStore: java.security.Provider provider> = r2;
        r0.<java.security.cert.CertStore: java.lang.String type> = r3;
        if r4 == null goto label0;

        $r5 = interfaceinvoke r4.<java.security.cert.CertStoreParameters: java.lang.Object clone()>();
        $r6 = (java.security.cert.CertStoreParameters) $r5;
        r0.<java.security.cert.CertStore: java.security.cert.CertStoreParameters params> = $r6;

     label0:
        return;
    }

    public final java.util.Collection getCertificates(java.security.cert.CertSelector) throws java.security.cert.CertStoreException
    {
        java.security.cert.CertStore r0;
        java.security.cert.CertSelector r1;
        java.security.cert.CertStoreSpi $r2;
        java.util.Collection $r3;

        r0 := @this: java.security.cert.CertStore;
        r1 := @parameter0: java.security.cert.CertSelector;
        $r2 = r0.<java.security.cert.CertStore: java.security.cert.CertStoreSpi storeSpi>;
        $r3 = virtualinvoke $r2.<java.security.cert.CertStoreSpi: java.util.Collection engineGetCertificates(java.security.cert.CertSelector)>(r1);
        return $r3;
    }

    public final java.util.Collection getCRLs(java.security.cert.CRLSelector) throws java.security.cert.CertStoreException
    {
        java.security.cert.CertStore r0;
        java.security.cert.CRLSelector r1;
        java.security.cert.CertStoreSpi $r2;
        java.util.Collection $r3;

        r0 := @this: java.security.cert.CertStore;
        r1 := @parameter0: java.security.cert.CRLSelector;
        $r2 = r0.<java.security.cert.CertStore: java.security.cert.CertStoreSpi storeSpi>;
        $r3 = virtualinvoke $r2.<java.security.cert.CertStoreSpi: java.util.Collection engineGetCRLs(java.security.cert.CRLSelector)>(r1);
        return $r3;
    }

    public static java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters) throws java.security.InvalidAlgorithmParameterException, java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.security.cert.CertStoreParameters r1;
        sun.security.jca.GetInstance$Instance r2;
        java.security.cert.CertStore $r3, $r9;
        java.lang.Object $r4;
        java.security.cert.CertStoreSpi $r5;
        java.security.Provider $r6;
        java.security.NoSuchAlgorithmException $r7, r8;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.security.cert.CertStoreParameters;

     label0:
        r2 = staticinvoke <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.lang.Object)>("CertStore", class "java/security/cert/CertStoreSpi", r0, r1);
        $r3 = new java.security.cert.CertStore;
        $r4 = r2.<sun.security.jca.GetInstance$Instance: java.lang.Object impl>;
        $r5 = (java.security.cert.CertStoreSpi) $r4;
        $r6 = r2.<sun.security.jca.GetInstance$Instance: java.security.Provider provider>;
        specialinvoke $r3.<java.security.cert.CertStore: void <init>(java.security.cert.CertStoreSpi,java.security.Provider,java.lang.String,java.security.cert.CertStoreParameters)>($r5, $r6, r0, r1);

     label1:
        return $r3;

     label2:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = staticinvoke <java.security.cert.CertStore: java.security.cert.CertStore handleException(java.security.NoSuchAlgorithmException)>(r8);
        return $r9;

        catch java.security.NoSuchAlgorithmException from label0 to label1 with label2;
    }

    private static java.security.cert.CertStore handleException(java.security.NoSuchAlgorithmException) throws java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException
    {
        java.security.NoSuchAlgorithmException r0;
        java.lang.Throwable r1;
        boolean $z0;
        java.security.InvalidAlgorithmParameterException $r2;

        r0 := @parameter0: java.security.NoSuchAlgorithmException;
        r1 = virtualinvoke r0.<java.security.NoSuchAlgorithmException: java.lang.Throwable getCause()>();
        $z0 = r1 instanceof java.security.InvalidAlgorithmParameterException;
        if $z0 == 0 goto label0;

        $r2 = (java.security.InvalidAlgorithmParameterException) r1;
        throw $r2;

     label0:
        throw r0;
    }

    public static java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters, java.lang.String) throws java.security.InvalidAlgorithmParameterException, java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException
    {
        java.lang.String r0, r2;
        java.security.cert.CertStoreParameters r1;
        sun.security.jca.GetInstance$Instance r3;
        java.security.cert.CertStore $r4, $r10;
        java.lang.Object $r5;
        java.security.cert.CertStoreSpi $r6;
        java.security.Provider $r7;
        java.security.NoSuchAlgorithmException $r8, r9;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.security.cert.CertStoreParameters;
        r2 := @parameter2: java.lang.String;

     label0:
        r3 = staticinvoke <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.lang.Object,java.lang.String)>("CertStore", class "java/security/cert/CertStoreSpi", r0, r1, r2);
        $r4 = new java.security.cert.CertStore;
        $r5 = r3.<sun.security.jca.GetInstance$Instance: java.lang.Object impl>;
        $r6 = (java.security.cert.CertStoreSpi) $r5;
        $r7 = r3.<sun.security.jca.GetInstance$Instance: java.security.Provider provider>;
        specialinvoke $r4.<java.security.cert.CertStore: void <init>(java.security.cert.CertStoreSpi,java.security.Provider,java.lang.String,java.security.cert.CertStoreParameters)>($r6, $r7, r0, r1);

     label1:
        return $r4;

     label2:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = staticinvoke <java.security.cert.CertStore: java.security.cert.CertStore handleException(java.security.NoSuchAlgorithmException)>(r9);
        return $r10;

        catch java.security.NoSuchAlgorithmException from label0 to label1 with label2;
    }

    public static java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters, java.security.Provider) throws java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException
    {
        java.lang.String r0;
        java.security.cert.CertStoreParameters r1;
        java.security.Provider r2, $r7;
        sun.security.jca.GetInstance$Instance r3;
        java.security.cert.CertStore $r4, $r10;
        java.lang.Object $r5;
        java.security.cert.CertStoreSpi $r6;
        java.security.NoSuchAlgorithmException $r8, r9;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.security.cert.CertStoreParameters;
        r2 := @parameter2: java.security.Provider;

     label0:
        r3 = staticinvoke <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.lang.Object,java.security.Provider)>("CertStore", class "java/security/cert/CertStoreSpi", r0, r1, r2);
        $r4 = new java.security.cert.CertStore;
        $r5 = r3.<sun.security.jca.GetInstance$Instance: java.lang.Object impl>;
        $r6 = (java.security.cert.CertStoreSpi) $r5;
        $r7 = r3.<sun.security.jca.GetInstance$Instance: java.security.Provider provider>;
        specialinvoke $r4.<java.security.cert.CertStore: void <init>(java.security.cert.CertStoreSpi,java.security.Provider,java.lang.String,java.security.cert.CertStoreParameters)>($r6, $r7, r0, r1);

     label1:
        return $r4;

     label2:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = staticinvoke <java.security.cert.CertStore: java.security.cert.CertStore handleException(java.security.NoSuchAlgorithmException)>(r9);
        return $r10;

        catch java.security.NoSuchAlgorithmException from label0 to label1 with label2;
    }

    public final java.security.cert.CertStoreParameters getCertStoreParameters()
    {
        java.security.cert.CertStore r0;
        java.security.cert.CertStoreParameters $r1, $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: java.security.cert.CertStore;
        $r1 = r0.<java.security.cert.CertStore: java.security.cert.CertStoreParameters params>;
        if $r1 != null goto label0;

        $r2 = null;
        goto label1;

     label0:
        $r3 = r0.<java.security.cert.CertStore: java.security.cert.CertStoreParameters params>;
        $r4 = interfaceinvoke $r3.<java.security.cert.CertStoreParameters: java.lang.Object clone()>();
        $r2 = (java.security.cert.CertStoreParameters) $r4;

     label1:
        return $r2;
    }

    public final java.lang.String getType()
    {
        java.security.cert.CertStore r0;
        java.lang.String $r1;

        r0 := @this: java.security.cert.CertStore;
        $r1 = r0.<java.security.cert.CertStore: java.lang.String type>;
        return $r1;
    }

    public final java.security.Provider getProvider()
    {
        java.security.cert.CertStore r0;
        java.security.Provider $r1;

        r0 := @this: java.security.cert.CertStore;
        $r1 = r0.<java.security.cert.CertStore: java.security.Provider provider>;
        return $r1;
    }

    public static final java.lang.String getDefaultType()
    {
        java.security.cert.CertStore$1 $r0;
        java.lang.String r1;
        java.lang.Object $r2;

        $r0 = new java.security.cert.CertStore$1;
        specialinvoke $r0.<java.security.cert.CertStore$1: void <init>()>();
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        r1 = (java.lang.String) $r2;
        if r1 != null goto label0;

        r1 = "LDAP";

     label0:
        return r1;
    }
}
