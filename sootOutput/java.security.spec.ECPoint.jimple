public class java.security.spec.ECPoint extends java.lang.Object
{
    private final java.math.BigInteger x;
    private final java.math.BigInteger y;
    public static final java.security.spec.ECPoint POINT_INFINITY;

    private void <init>()
    {
        java.security.spec.ECPoint r0;

        r0 := @this: java.security.spec.ECPoint;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.security.spec.ECPoint: java.math.BigInteger x> = null;
        r0.<java.security.spec.ECPoint: java.math.BigInteger y> = null;
        return;
    }

    public void <init>(java.math.BigInteger, java.math.BigInteger)
    {
        java.security.spec.ECPoint r0;
        java.math.BigInteger r1, r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.security.spec.ECPoint;
        r1 := @parameter0: java.math.BigInteger;
        r2 := @parameter1: java.math.BigInteger;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 == null goto label0;

        if r2 != null goto label1;

     label0:
        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("affine coordinate x or y is null");
        throw $r3;

     label1:
        r0.<java.security.spec.ECPoint: java.math.BigInteger x> = r1;
        r0.<java.security.spec.ECPoint: java.math.BigInteger y> = r2;
        return;
    }

    public java.math.BigInteger getAffineX()
    {
        java.security.spec.ECPoint r0;
        java.math.BigInteger $r1;

        r0 := @this: java.security.spec.ECPoint;
        $r1 = r0.<java.security.spec.ECPoint: java.math.BigInteger x>;
        return $r1;
    }

    public java.math.BigInteger getAffineY()
    {
        java.security.spec.ECPoint r0;
        java.math.BigInteger $r1;

        r0 := @this: java.security.spec.ECPoint;
        $r1 = r0.<java.security.spec.ECPoint: java.math.BigInteger y>;
        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.security.spec.ECPoint r0, $r2, $r4, $r7;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.math.BigInteger $r3, $r5, $r6, $r8;

        r0 := @this: java.security.spec.ECPoint;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $r2 = <java.security.spec.ECPoint: java.security.spec.ECPoint POINT_INFINITY>;
        if r0 != $r2 goto label1;

        return 0;

     label1:
        $z0 = r1 instanceof java.security.spec.ECPoint;
        if $z0 == 0 goto label4;

        $r3 = r0.<java.security.spec.ECPoint: java.math.BigInteger x>;
        $r4 = (java.security.spec.ECPoint) r1;
        $r5 = $r4.<java.security.spec.ECPoint: java.math.BigInteger x>;
        $z1 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r5);
        if $z1 == 0 goto label2;

        $r6 = r0.<java.security.spec.ECPoint: java.math.BigInteger y>;
        $r7 = (java.security.spec.ECPoint) r1;
        $r8 = $r7.<java.security.spec.ECPoint: java.math.BigInteger y>;
        $z2 = virtualinvoke $r6.<java.math.BigInteger: boolean equals(java.lang.Object)>($r8);
        if $z2 == 0 goto label2;

        $z3 = 1;
        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        return 0;
    }

    public int hashCode()
    {
        java.security.spec.ECPoint r0, $r1;
        java.math.BigInteger $r2, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.security.spec.ECPoint;
        $r1 = <java.security.spec.ECPoint: java.security.spec.ECPoint POINT_INFINITY>;
        if r0 != $r1 goto label0;

        return 0;

     label0:
        $r2 = r0.<java.security.spec.ECPoint: java.math.BigInteger x>;
        $i0 = virtualinvoke $r2.<java.math.BigInteger: int hashCode()>();
        $r3 = r0.<java.security.spec.ECPoint: java.math.BigInteger y>;
        $i1 = virtualinvoke $r3.<java.math.BigInteger: int hashCode()>();
        $i2 = 5 + $i1;
        $i3 = $i0 << $i2;
        return $i3;
    }

    static void <clinit>()
    {
        java.security.spec.ECPoint $r0;

        $r0 = new java.security.spec.ECPoint;
        specialinvoke $r0.<java.security.spec.ECPoint: void <init>()>();
        <java.security.spec.ECPoint: java.security.spec.ECPoint POINT_INFINITY> = $r0;
        return;
    }
}
