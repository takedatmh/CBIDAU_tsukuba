public interface  org.apache.catalina.Wrapper extends java.lang.Object implements org.apache.catalina.Container
{
    public static final java.lang.String ADD_MAPPING_EVENT;
    public static final java.lang.String REMOVE_MAPPING_EVENT;

    public abstract long getAvailable();

    public abstract void setAvailable(long);

    public abstract int getLoadOnStartup();

    public abstract void setLoadOnStartup(int);

    public abstract java.lang.String getRunAs();

    public abstract void setRunAs(java.lang.String);

    public abstract java.lang.String getServletClass();

    public abstract void setServletClass(java.lang.String);

    public abstract java.lang.String[] getServletMethods() throws javax.servlet.ServletException;

    public abstract boolean isUnavailable();

    public abstract javax.servlet.Servlet getServlet();

    public abstract void setServlet(javax.servlet.Servlet);

    public abstract void addInitParameter(java.lang.String, java.lang.String);

    public abstract void addInstanceListener(org.apache.catalina.InstanceListener);

    public abstract void addMapping(java.lang.String);

    public abstract void addSecurityReference(java.lang.String, java.lang.String);

    public abstract javax.servlet.Servlet allocate() throws javax.servlet.ServletException;

    public abstract void deallocate(javax.servlet.Servlet) throws javax.servlet.ServletException;

    public abstract java.lang.String findInitParameter(java.lang.String);

    public abstract java.lang.String[] findInitParameters();

    public abstract java.lang.String[] findMappings();

    public abstract java.lang.String findSecurityReference(java.lang.String);

    public abstract java.lang.String[] findSecurityReferences();

    public abstract void incrementErrorCount();

    public abstract void load() throws javax.servlet.ServletException;

    public abstract void removeInitParameter(java.lang.String);

    public abstract void removeInstanceListener(org.apache.catalina.InstanceListener);

    public abstract void removeMapping(java.lang.String);

    public abstract void removeSecurityReference(java.lang.String);

    public abstract void unavailable(javax.servlet.UnavailableException);

    public abstract void unload() throws javax.servlet.ServletException;

    public abstract javax.servlet.MultipartConfigElement getMultipartConfigElement();

    public abstract void setMultipartConfigElement(javax.servlet.MultipartConfigElement);

    public abstract boolean isAsyncSupported();

    public abstract void setAsyncSupported(boolean);

    public abstract boolean isEnabled();

    public abstract void setEnabled(boolean);

    public abstract void setServletSecurityAnnotationScanRequired(boolean);

    public abstract void servletSecurityAnnotationScan() throws javax.servlet.ServletException;

    public abstract boolean isOverridable();

    public abstract void setOverridable(boolean);
}
