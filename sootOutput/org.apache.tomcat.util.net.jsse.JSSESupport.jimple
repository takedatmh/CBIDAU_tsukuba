class org.apache.tomcat.util.net.jsse.JSSESupport extends java.lang.Object implements org.apache.tomcat.util.net.SSLSupport, org.apache.tomcat.util.net.SSLSessionManager
{
    private static final org.apache.juli.logging.Log log;
    private static final org.apache.tomcat.util.res.StringManager sm;
    private static final java.util.Map keySizeCache;
    protected javax.net.ssl.SSLSocket ssl;
    protected javax.net.ssl.SSLSession session;
    org.apache.tomcat.util.net.jsse.JSSESupport$Listener listener;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        org.apache.tomcat.util.res.StringManager $r1;
        java.util.WeakHashMap $r2;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/tomcat/util/net/jsse/JSSESupport");
        <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.juli.logging.Log log> = $r0;
        $r1 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>("org.apache.tomcat.util.net.jsse.res");
        <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.res.StringManager sm> = $r1;
        $r2 = new java.util.WeakHashMap;
        specialinvoke $r2.<java.util.WeakHashMap: void <init>()>();
        <org.apache.tomcat.util.net.jsse.JSSESupport: java.util.Map keySizeCache> = $r2;
        return;
    }

    void <init>(javax.net.ssl.SSLSocket)
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        javax.net.ssl.SSLSocket r1;
        org.apache.tomcat.util.net.jsse.JSSESupport$Listener $r2, $r4;
        javax.net.ssl.SSLSession $r3;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        r1 := @parameter0: javax.net.ssl.SSLSocket;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new org.apache.tomcat.util.net.jsse.JSSESupport$Listener;
        specialinvoke $r2.<org.apache.tomcat.util.net.jsse.JSSESupport$Listener: void <init>(org.apache.tomcat.util.net.jsse.JSSESupport$Listener)>(null);
        r0.<org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.net.jsse.JSSESupport$Listener listener> = $r2;
        r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl> = r1;
        $r3 = virtualinvoke r1.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();
        r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session> = $r3;
        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.net.jsse.JSSESupport$Listener listener>;
        virtualinvoke r1.<javax.net.ssl.SSLSocket: void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)>($r4);
        return;
    }

    void <init>(javax.net.ssl.SSLSession)
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        javax.net.ssl.SSLSession r1;
        org.apache.tomcat.util.net.jsse.JSSESupport$Listener $r2;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        r1 := @parameter0: javax.net.ssl.SSLSession;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new org.apache.tomcat.util.net.jsse.JSSESupport$Listener;
        specialinvoke $r2.<org.apache.tomcat.util.net.jsse.JSSESupport$Listener: void <init>(org.apache.tomcat.util.net.jsse.JSSESupport$Listener)>(null);
        r0.<org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.net.jsse.JSSESupport$Listener listener> = $r2;
        r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session> = r1;
        return;
    }

    public java.lang.String getCipherSuite() throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        javax.net.ssl.SSLSession $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        $r1 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        if $r1 != null goto label0;

        return null;

     label0:
        $r2 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        $r3 = interfaceinvoke $r2.<javax.net.ssl.SSLSession: java.lang.String getCipherSuite()>();
        return $r3;
    }

    public java.lang.Object[] getPeerCertificateChain() throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        $r1 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESupport: java.lang.Object[] getPeerCertificateChain(boolean)>(0);
        return $r1;
    }

    protected java.security.cert.X509Certificate[] getX509Certificates(javax.net.ssl.SSLSession)
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        javax.net.ssl.SSLSession r1;
        null_type n0;
        java.lang.Throwable r2, $r8;
        org.apache.tomcat.util.res.StringManager $r3, $r22;
        int i0, $i1, $i2, $i3;
        byte[] r4;
        java.security.cert.CertificateFactory r5;
        java.io.ByteArrayInputStream r6, $r16;
        java.security.cert.Certificate[] r7;
        org.apache.juli.logging.Log $r9, $r21, $r26, $r27;
        java.lang.String $r10, $r25, $r33;
        java.security.cert.X509Certificate[] r11;
        java.security.cert.Certificate $r12, $r13, $r15, $r17, $r24;
        boolean $z0, $z1;
        java.security.cert.X509Certificate $r14, $r18, $r31;
        java.lang.Exception $r19, r20;
        java.lang.Object[] $r23;
        java.lang.StringBuilder $r28, $r29, $r30, $r32;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        r1 := @parameter0: javax.net.ssl.SSLSession;
        n0 = null;

     label0:
        r7 = interfaceinvoke r1.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r2 = $r8;
        $r9 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.juli.logging.Log log>;
        $r3 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jsseSupport.clientCertError");
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r10, r2);
        return null;

     label3:
        if r7 != null goto label4;

        return null;

     label4:
        $i1 = lengthof r7;
        r11 = newarray (java.security.cert.X509Certificate)[$i1];
        i0 = 0;
        goto label11;

     label5:
        $r12 = r7[i0];
        $z0 = $r12 instanceof java.security.cert.X509Certificate;
        if $z0 == 0 goto label6;

        $r13 = r7[i0];
        $r14 = (java.security.cert.X509Certificate) $r13;
        r11[i0] = $r14;
        goto label9;

     label6:
        $r15 = r7[i0];
        r4 = virtualinvoke $r15.<java.security.cert.Certificate: byte[] getEncoded()>();
        r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");
        $r16 = new java.io.ByteArrayInputStream;
        specialinvoke $r16.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4);
        r6 = $r16;
        $r17 = virtualinvoke r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r6);
        $r18 = (java.security.cert.X509Certificate) $r17;
        r11[i0] = $r18;

     label7:
        goto label9;

     label8:
        $r19 := @caughtexception;
        r20 = $r19;
        $r21 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.juli.logging.Log log>;
        $r22 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.res.StringManager sm>;
        $r23 = newarray (java.lang.Object)[1];
        $r24 = r7[i0];
        $r23[0] = $r24;
        $r25 = virtualinvoke $r22.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("jseeSupport.certTranslationError", $r23);
        interfaceinvoke $r21.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r25, r20);
        return null;

     label9:
        $r26 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r26.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z1 == 0 goto label10;

        $r27 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.juli.logging.Log log>;
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cert #");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");
        $r31 = r11[i0];
        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r27.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r33);

     label10:
        i0 = i0 + 1;

     label11:
        $i2 = lengthof r7;
        if i0 < $i2 goto label5;

        $i3 = lengthof r11;
        if $i3 >= 1 goto label12;

        return null;

     label12:
        return r11;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public java.lang.Object[] getPeerCertificateChain(boolean) throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        boolean z0;
        javax.security.cert.X509Certificate[] r1;
        java.lang.Exception r2, $r5;
        javax.net.ssl.SSLSession $r3, $r4, $r7, $r9, $r10;
        int $i0;
        javax.net.ssl.SSLSocket $r6, $r8;
        java.security.cert.X509Certificate[] $r11;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        z0 := @parameter0: boolean;
        $r3 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        if $r3 != null goto label0;

        return null;

     label0:
        r1 = null;

     label1:
        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        r1 = interfaceinvoke $r4.<javax.net.ssl.SSLSession: javax.security.cert.X509Certificate[] getPeerCertificateChain()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r2 = $r5;

     label4:
        if r1 != null goto label5;

        r1 = newarray (javax.security.cert.X509Certificate)[0];

     label5:
        $i0 = lengthof r1;
        if $i0 > 0 goto label6;

        if z0 == 0 goto label6;

        $r6 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        if $r6 == null goto label6;

        $r7 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        interfaceinvoke $r7.<javax.net.ssl.SSLSession: void invalidate()>();
        virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESupport: void handShake()>();
        $r8 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        $r9 = virtualinvoke $r8.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();
        r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session> = $r9;

     label6:
        $r10 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        $r11 = virtualinvoke r0.<org.apache.tomcat.util.net.jsse.JSSESupport: java.security.cert.X509Certificate[] getX509Certificates(javax.net.ssl.SSLSession)>($r10);
        return $r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void handShake() throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        org.apache.tomcat.util.res.StringManager $r1, $r11, $r26, $r31;
        java.io.InputStream r2;
        int i0, i2, i3, $i4;
        byte[] r3;
        byte b1;
        javax.net.ssl.SSLSocket $r4, $r7, $r8, $r14, $r15, $r16, $r17, $r19, $r36;
        boolean $z0, $z1, $z2, $z3;
        org.apache.juli.logging.Log $r5, $r10, $r20, $r21, $r30;
        java.lang.String $r6, $r12, $r24, $r27, $r32;
        java.lang.String[] $r9;
        javax.net.ssl.SSLSession $r13;
        org.apache.tomcat.util.net.jsse.JSSESupport$Listener $r18, $r35, $r37;
        java.lang.StringBuilder $r22, $r23;
        javax.net.ssl.SSLException $r25, $r28, r29;
        java.io.IOException $r33, r34;
        java.net.SocketException $r38;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        $z0 = virtualinvoke $r4.<javax.net.ssl.SSLSocket: boolean getWantClientAuth()>();
        if $z0 == 0 goto label0;

        $r5 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.juli.logging.Log log>;
        $r1 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jsseSupport.noCertWant");
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r6);
        goto label1;

     label0:
        $r7 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        virtualinvoke $r7.<javax.net.ssl.SSLSocket: void setNeedClientAuth(boolean)>(1);

     label1:
        $r8 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        $r9 = virtualinvoke $r8.<javax.net.ssl.SSLSocket: java.lang.String[] getEnabledCipherSuites()>();
        $i4 = lengthof $r9;
        if $i4 != 0 goto label2;

        $r10 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.juli.logging.Log log>;
        $r11 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.res.StringManager sm>;
        $r12 = virtualinvoke $r11.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jsseSupport.serverRenegDisabled");
        interfaceinvoke $r10.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r12);
        $r13 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        interfaceinvoke $r13.<javax.net.ssl.SSLSession: void invalidate()>();
        $r14 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        virtualinvoke $r14.<javax.net.ssl.SSLSocket: void close()>();
        return;

     label2:
        $r15 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        r2 = virtualinvoke $r15.<javax.net.ssl.SSLSocket: java.io.InputStream getInputStream()>();
        $r16 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        i0 = virtualinvoke $r16.<javax.net.ssl.SSLSocket: int getSoTimeout()>();
        $r17 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        virtualinvoke $r17.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>(1000);
        r3 = newarray (byte)[1];
        $r18 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.net.jsse.JSSESupport$Listener listener>;
        virtualinvoke $r18.<org.apache.tomcat.util.net.jsse.JSSESupport$Listener: void reset()>();
        $r19 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        virtualinvoke $r19.<javax.net.ssl.SSLSocket: void startHandshake()>();
        b1 = 60;
        i2 = 0;
        goto label9;

     label3:
        $r20 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.juli.logging.Log log>;
        $z1 = interfaceinvoke $r20.<org.apache.juli.logging.Log: boolean isTraceEnabled()>();
        if $z1 == 0 goto label4;

        $r21 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.juli.logging.Log log>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Reading for try #");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r21.<org.apache.juli.logging.Log: void trace(java.lang.Object)>($r24);

     label4:
        i3 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r3);
        if i3 <= 0 goto label7;

        $r25 = new javax.net.ssl.SSLException;
        $r26 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.res.StringManager sm>;
        $r27 = virtualinvoke $r26.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jsseSupport.unexpectedData");
        specialinvoke $r25.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r27);
        throw $r25;

     label5:
        $r28 := @caughtexception;
        r29 = $r28;
        $r30 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.juli.logging.Log log>;
        $r31 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.res.StringManager sm>;
        $r32 = virtualinvoke $r31.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("jsseSupport.clientCertError");
        interfaceinvoke $r30.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r32, r29);
        throw r29;

     label6:
        $r33 := @caughtexception;
        r34 = $r33;

     label7:
        $r35 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.net.jsse.JSSESupport$Listener listener>;
        $z2 = $r35.<org.apache.tomcat.util.net.jsse.JSSESupport$Listener: boolean completed>;
        if $z2 == 0 goto label8;

        goto label10;

     label8:
        i2 = i2 + 1;

     label9:
        if i2 < b1 goto label3;

     label10:
        $r36 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSocket ssl>;
        virtualinvoke $r36.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>(i0);
        $r37 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.net.jsse.JSSESupport$Listener listener>;
        $z3 = $r37.<org.apache.tomcat.util.net.jsse.JSSESupport$Listener: boolean completed>;
        if $z3 != 0 goto label11;

        $r38 = new java.net.SocketException;
        specialinvoke $r38.<java.net.SocketException: void <init>(java.lang.String)>("SSL Cert handshake timeout");
        throw $r38;

     label11:
        return;

        catch javax.net.ssl.SSLException from label4 to label5 with label5;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public java.lang.Integer getKeySize() throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        org.apache.tomcat.util.net.SSLSupport$CipherData[] r1;
        null_type n0;
        java.util.Map r2, $r5, $r6, $r15, r16, $r17;
        java.lang.String r3, $r13;
        int i0, i1, $i2, $i3;
        javax.net.ssl.SSLSession $r4, $r7, $r11, $r18;
        java.lang.Object $r8;
        java.lang.Integer r9;
        java.lang.Throwable $r10, $r20;
        org.apache.tomcat.util.net.SSLSupport$CipherData $r12, $r14;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        r1 = <org.apache.tomcat.util.net.jsse.JSSESupport: org.apache.tomcat.util.net.SSLSupport$CipherData[] ciphers>;
        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        if $r4 != null goto label0;

        return null;

     label0:
        n0 = null;
        $r5 = <org.apache.tomcat.util.net.jsse.JSSESupport: java.util.Map keySizeCache>;
        r2 = $r5;
        entermonitor $r5;

     label1:
        $r6 = <org.apache.tomcat.util.net.jsse.JSSESupport: java.util.Map keySizeCache>;
        $r7 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);
        r9 = (java.lang.Integer) $r8;
        exitmonitor r2;

     label2:
        goto label6;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r10;

     label6:
        if r9 != null goto label16;

        i1 = 0;
        $r11 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        r3 = interfaceinvoke $r11.<javax.net.ssl.SSLSession: java.lang.String getCipherSuite()>();
        i0 = 0;
        goto label9;

     label7:
        $r12 = r1[i0];
        $r13 = $r12.<org.apache.tomcat.util.net.SSLSupport$CipherData: java.lang.String phrase>;
        $i2 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>($r13);
        if $i2 < 0 goto label8;

        $r14 = r1[i0];
        i1 = $r14.<org.apache.tomcat.util.net.SSLSupport$CipherData: int keySize>;
        goto label10;

     label8:
        i0 = i0 + 1;

     label9:
        $i3 = lengthof r1;
        if i0 < $i3 goto label7;

     label10:
        r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r15 = <org.apache.tomcat.util.net.jsse.JSSESupport: java.util.Map keySizeCache>;
        r16 = $r15;
        entermonitor $r15;

     label11:
        $r17 = <org.apache.tomcat.util.net.jsse.JSSESupport: java.util.Map keySizeCache>;
        $r18 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r9);
        exitmonitor r16;

     label12:
        goto label16;

     label13:
        $r20 := @caughtexception;

     label14:
        exitmonitor r16;

     label15:
        throw $r20;

     label16:
        return r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public java.lang.String getSessionId() throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        byte[] r1;
        java.lang.StringBuilder r2, $r6;
        int i0, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r3, $r9;
        javax.net.ssl.SSLSession $r4, $r5;
        byte $b1;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        $r4 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        if $r4 != null goto label0;

        return null;

     label0:
        $r5 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        r1 = interfaceinvoke $r5.<javax.net.ssl.SSLSession: byte[] getId()>();
        if r1 != null goto label1;

        return null;

     label1:
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        r2 = $r6;
        i0 = 0;
        goto label5;

     label2:
        $b1 = r1[i0];
        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b1);
        $i2 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i2 >= 2 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label3:
        $i3 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i3 <= 2 goto label4;

        $i4 = virtualinvoke r3.<java.lang.String: int length()>();
        $i5 = $i4 - 2;
        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i5);

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        i0 = i0 + 1;

     label5:
        $i6 = lengthof r1;
        if i0 < $i6 goto label2;

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r9;
    }

    public void invalidateSession()
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        javax.net.ssl.SSLSession $r1;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        $r1 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        interfaceinvoke $r1.<javax.net.ssl.SSLSession: void invalidate()>();
        return;
    }

    public java.lang.String getProtocol() throws java.io.IOException
    {
        org.apache.tomcat.util.net.jsse.JSSESupport r0;
        javax.net.ssl.SSLSession $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.tomcat.util.net.jsse.JSSESupport;
        $r1 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        if $r1 != null goto label0;

        return null;

     label0:
        $r2 = r0.<org.apache.tomcat.util.net.jsse.JSSESupport: javax.net.ssl.SSLSession session>;
        $r3 = interfaceinvoke $r2.<javax.net.ssl.SSLSession: java.lang.String getProtocol()>();
        return $r3;
    }
}
