public class java.beans.PropertyChangeSupport extends java.lang.Object implements java.io.Serializable
{
    private java.beans.PropertyChangeSupport$PropertyChangeListenerMap map;
    private java.lang.Object source;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    static final long serialVersionUID;

    public void <init>(java.lang.Object)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.Object r1;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.Object;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.beans.PropertyChangeSupport$PropertyChangeListenerMap;
        specialinvoke $r2.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: void <init>(java.beans.PropertyChangeSupport$1)>(null);
        r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map> = $r2;
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label0:
        r0.<java.beans.PropertyChangeSupport: java.lang.Object source> = r1;
        return;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport r0;
        java.beans.PropertyChangeListener r1, $r5;
        java.beans.PropertyChangeListenerProxy r2;
        boolean $z0;
        java.lang.String $r3;
        java.util.EventListener $r4;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap $r6;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.beans.PropertyChangeListener;
        if r1 != null goto label0;

        return;

     label0:
        $z0 = r1 instanceof java.beans.PropertyChangeListenerProxy;
        if $z0 == 0 goto label1;

        r2 = (java.beans.PropertyChangeListenerProxy) r1;
        $r3 = virtualinvoke r2.<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>();
        $r4 = virtualinvoke r2.<java.beans.PropertyChangeListenerProxy: java.util.EventListener getListener()>();
        $r5 = (java.beans.PropertyChangeListener) $r4;
        virtualinvoke r0.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>($r3, $r5);
        goto label2;

     label1:
        $r6 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        virtualinvoke $r6.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: void add(java.lang.String,java.util.EventListener)>(null, r1);

     label2:
        return;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport r0;
        java.beans.PropertyChangeListener r1, $r5;
        java.beans.PropertyChangeListenerProxy r2;
        boolean $z0;
        java.lang.String $r3;
        java.util.EventListener $r4;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap $r6;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.beans.PropertyChangeListener;
        if r1 != null goto label0;

        return;

     label0:
        $z0 = r1 instanceof java.beans.PropertyChangeListenerProxy;
        if $z0 == 0 goto label1;

        r2 = (java.beans.PropertyChangeListenerProxy) r1;
        $r3 = virtualinvoke r2.<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>();
        $r4 = virtualinvoke r2.<java.beans.PropertyChangeListenerProxy: java.util.EventListener getListener()>();
        $r5 = (java.beans.PropertyChangeListener) $r4;
        virtualinvoke r0.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>($r3, $r5);
        goto label2;

     label1:
        $r6 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        virtualinvoke $r6.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: void remove(java.lang.String,java.util.EventListener)>(null, r1);

     label2:
        return;
    }

    public java.beans.PropertyChangeListener[] getPropertyChangeListeners()
    {
        java.beans.PropertyChangeSupport r0;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap $r1;
        java.util.EventListener[] $r2;
        java.beans.PropertyChangeListener[] $r3;

        r0 := @this: java.beans.PropertyChangeSupport;
        $r1 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        $r2 = virtualinvoke $r1.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.util.EventListener[] getListeners()>();
        $r3 = (java.beans.PropertyChangeListener[]) $r2;
        return $r3;
    }

    public void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        java.beans.PropertyChangeListener r2, r4;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap $r3, $r5;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.beans.PropertyChangeListener;
        if r2 == null goto label0;

        if r1 != null goto label1;

     label0:
        return;

     label1:
        $r3 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        r4 = virtualinvoke $r3.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.beans.PropertyChangeListener extract(java.beans.PropertyChangeListener)>(r2);
        if r4 == null goto label2;

        $r5 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        virtualinvoke $r5.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: void add(java.lang.String,java.util.EventListener)>(r1, r4);

     label2:
        return;
    }

    public void removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        java.beans.PropertyChangeListener r2, r4;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap $r3, $r5;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.beans.PropertyChangeListener;
        if r2 == null goto label0;

        if r1 != null goto label1;

     label0:
        return;

     label1:
        $r3 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        r4 = virtualinvoke $r3.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.beans.PropertyChangeListener extract(java.beans.PropertyChangeListener)>(r2);
        if r4 == null goto label2;

        $r5 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        virtualinvoke $r5.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: void remove(java.lang.String,java.util.EventListener)>(r1, r4);

     label2:
        return;
    }

    public java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap $r2;
        java.util.EventListener[] $r3;
        java.beans.PropertyChangeListener[] $r4;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        $r3 = virtualinvoke $r2.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>(r1);
        $r4 = (java.beans.PropertyChangeListener[]) $r3;
        return $r4;
    }

    public void firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        java.lang.Object r2, r3, $r5;
        boolean $z0;
        java.beans.PropertyChangeEvent $r4;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: java.lang.Object;
        if r2 == null goto label0;

        if r3 == null goto label0;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r3);
        if $z0 != 0 goto label1;

     label0:
        $r4 = new java.beans.PropertyChangeEvent;
        $r5 = r0.<java.beans.PropertyChangeSupport: java.lang.Object source>;
        specialinvoke $r4.<java.beans.PropertyChangeEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>($r5, r1, r2, r3);
        virtualinvoke r0.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

     label1:
        return;
    }

    public void firePropertyChange(java.lang.String, int, int)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.Integer $r2, $r3;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if i0 == i1 goto label0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        virtualinvoke r0.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r1, $r2, $r3);

     label0:
        return;
    }

    public void firePropertyChange(java.lang.String, boolean, boolean)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        boolean z0, z1;
        java.lang.Boolean $r2, $r3;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        z1 := @parameter2: boolean;
        if z0 == z1 goto label0;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);
        virtualinvoke r0.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r1, $r2, $r3);

     label0:
        return;
    }

    public void firePropertyChange(java.beans.PropertyChangeEvent)
    {
        java.beans.PropertyChangeSupport r0;
        java.beans.PropertyChangeEvent r1;
        java.lang.Object r2, r3;
        java.lang.String r4;
        java.beans.PropertyChangeListener[] r5, r6, $r11;
        boolean $z0;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap $r7, $r9;
        java.util.EventListener[] $r8, $r10;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.beans.PropertyChangeEvent;
        r2 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();
        r3 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();
        if r2 == null goto label0;

        if r3 == null goto label0;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r3);
        if $z0 != 0 goto label3;

     label0:
        r4 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();
        $r7 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        $r8 = virtualinvoke $r7.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.util.EventListener[] get(java.lang.String)>(null);
        r5 = (java.beans.PropertyChangeListener[]) $r8;
        if r4 == null goto label1;

        $r9 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        $r10 = virtualinvoke $r9.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.util.EventListener[] get(java.lang.String)>(r4);
        $r11 = (java.beans.PropertyChangeListener[]) $r10;
        goto label2;

     label1:
        $r11 = null;

     label2:
        r6 = $r11;
        staticinvoke <java.beans.PropertyChangeSupport: void fire(java.beans.PropertyChangeListener[],java.beans.PropertyChangeEvent)>(r5, r1);
        staticinvoke <java.beans.PropertyChangeSupport: void fire(java.beans.PropertyChangeListener[],java.beans.PropertyChangeEvent)>(r6, r1);

     label3:
        return;
    }

    private static void fire(java.beans.PropertyChangeListener[], java.beans.PropertyChangeEvent)
    {
        java.beans.PropertyChangeListener[] r0, r2;
        java.beans.PropertyChangeEvent r1;
        int i0, i1;
        java.beans.PropertyChangeListener r3;

        r0 := @parameter0: java.beans.PropertyChangeListener[];
        r1 := @parameter1: java.beans.PropertyChangeEvent;
        if r0 == null goto label1;

        r2 = r0;
        i0 = lengthof r2;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        r3 = r2[i1];
        interfaceinvoke r3.<java.beans.PropertyChangeListener: void propertyChange(java.beans.PropertyChangeEvent)>(r1);
        i1 = i1 + 1;
        goto label0;

     label1:
        return;
    }

    public void fireIndexedPropertyChange(java.lang.String, int, java.lang.Object, java.lang.Object)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        int i0;
        java.lang.Object r2, r3, $r5;
        boolean $z0;
        java.beans.IndexedPropertyChangeEvent $r4;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.Object;
        r3 := @parameter3: java.lang.Object;
        if r2 == null goto label0;

        if r3 == null goto label0;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r3);
        if $z0 != 0 goto label1;

     label0:
        $r4 = new java.beans.IndexedPropertyChangeEvent;
        $r5 = r0.<java.beans.PropertyChangeSupport: java.lang.Object source>;
        specialinvoke $r4.<java.beans.IndexedPropertyChangeEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object,int)>($r5, r1, r2, r3, i0);
        virtualinvoke r0.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

     label1:
        return;
    }

    public void fireIndexedPropertyChange(java.lang.String, int, int, int)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        int i0, i1, i2;
        java.lang.Integer $r2, $r3;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        if i1 == i2 goto label0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        virtualinvoke r0.<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>(r1, i0, $r2, $r3);

     label0:
        return;
    }

    public void fireIndexedPropertyChange(java.lang.String, int, boolean, boolean)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        int i0;
        boolean z0, z1;
        java.lang.Boolean $r2, $r3;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        if z0 == z1 goto label0;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);
        virtualinvoke r0.<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>(r1, i0, $r2, $r3);

     label0:
        return;
    }

    public boolean hasListeners(java.lang.String)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap $r2;
        boolean $z0;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        $z0 = virtualinvoke $r2.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: boolean hasListeners(java.lang.String)>(r1);
        return $z0;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.beans.PropertyChangeSupport r0, r8, $r17;
        java.io.ObjectOutputStream r1;
        java.util.Hashtable r2, $r16;
        java.beans.PropertyChangeListener[] r3, r26;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap r4, $r10, $r11, $r19;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        java.lang.String r7;
        java.lang.Throwable r9, $r23;
        java.util.Set $r12;
        boolean $z0, $z1;
        java.lang.Object $r13, $r14, $r15, $r18, $r20, $r25;
        java.util.EventListener[] $r21;
        java.io.ObjectOutputStream$PutField r24;
        int i0, i1;
        java.beans.PropertyChangeListener r27;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.io.ObjectOutputStream;
        r2 = null;
        r3 = null;
        $r10 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        r4 = $r10;
        entermonitor $r10;

     label0:
        $r11 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        $r12 = virtualinvoke $r11.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.util.Set getEntries()>();
        r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.util.Map$Entry) $r13;
        $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();
        r7 = (java.lang.String) $r14;
        if r7 != null goto label2;

        $r15 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
        r3 = (java.beans.PropertyChangeListener[]) $r15;
        goto label4;

     label2:
        if r2 != null goto label3;

        $r16 = new java.util.Hashtable;
        specialinvoke $r16.<java.util.Hashtable: void <init>()>();
        r2 = $r16;

     label3:
        $r17 = new java.beans.PropertyChangeSupport;
        $r18 = r0.<java.beans.PropertyChangeSupport: java.lang.Object source>;
        specialinvoke $r17.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>($r18);
        r8 = $r17;
        $r19 = r8.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        $r20 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r21 = (java.util.EventListener[]) $r20;
        virtualinvoke $r19.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: void set(java.lang.String,java.util.EventListener[])>(null, $r21);
        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8);

     label4:
        goto label1;

     label5:
        exitmonitor r4;

     label6:
        goto label10;

     label7:
        $r23 := @caughtexception;

     label8:
        r9 = $r23;
        exitmonitor r4;

     label9:
        throw r9;

     label10:
        r24 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();
        virtualinvoke r24.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("children", r2);
        $r25 = r0.<java.beans.PropertyChangeSupport: java.lang.Object source>;
        virtualinvoke r24.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("source", $r25);
        virtualinvoke r24.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("propertyChangeSupportSerializedDataVersion", 2);
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();
        if r3 == null goto label13;

        r26 = r3;
        i0 = lengthof r26;
        i1 = 0;

     label11:
        if i1 >= i0 goto label13;

        r27 = r26[i1];
        $z1 = r27 instanceof java.io.Serializable;
        if $z1 == 0 goto label12;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r27);

     label12:
        i1 = i1 + 1;
        goto label11;

     label13:
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);
        return;

        catch java.lang.Throwable from label0 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        java.beans.PropertyChangeSupport r0, $r18;
        java.io.ObjectInputStream r1;
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap $r2, $r13, $r19;
        java.io.ObjectInputStream$GetField r3;
        java.util.Hashtable r4;
        java.lang.Object r5, $r10, $r11, $r12, $r16, $r17, $r20;
        java.util.Iterator r6;
        java.util.Map$Entry r7;
        java.beans.PropertyChangeListener[] r8;
        int i0, i1;
        java.beans.PropertyChangeListener r9, $r14;
        java.util.Set $r15;
        boolean $z0;
        java.lang.String $r21;

        r0 := @this: java.beans.PropertyChangeSupport;
        r1 := @parameter0: java.io.ObjectInputStream;
        $r2 = new java.beans.PropertyChangeSupport$PropertyChangeListenerMap;
        specialinvoke $r2.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: void <init>(java.beans.PropertyChangeSupport$1)>(null);
        r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map> = $r2;
        r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();
        $r10 = virtualinvoke r3.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("children", null);
        r4 = (java.util.Hashtable) $r10;
        $r11 = virtualinvoke r3.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("source", null);
        r0.<java.beans.PropertyChangeSupport: java.lang.Object source> = $r11;
        virtualinvoke r3.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("propertyChangeSupportSerializedDataVersion", 2);

     label0:
        $r12 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        r5 = $r12;
        if null == $r12 goto label1;

        $r13 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        $r14 = (java.beans.PropertyChangeListener) r5;
        virtualinvoke $r13.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: void add(java.lang.String,java.util.EventListener)>(null, $r14);
        goto label0;

     label1:
        if r4 == null goto label5;

        $r15 = virtualinvoke r4.<java.util.Hashtable: java.util.Set entrySet()>();
        r6 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        $r16 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.util.Map$Entry) $r16;
        $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r18 = (java.beans.PropertyChangeSupport) $r17;
        r8 = virtualinvoke $r18.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners()>();
        i0 = lengthof r8;
        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        r9 = r8[i1];
        $r19 = r0.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeSupport$PropertyChangeListenerMap map>;
        $r20 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r21 = (java.lang.String) $r20;
        virtualinvoke $r19.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: void add(java.lang.String,java.util.EventListener)>($r21, r9);
        i1 = i1 + 1;
        goto label3;

     label4:
        goto label2;

     label5:
        return;
    }

    static void <clinit>()
    {
        java.io.ObjectStreamField $r0, $r2, $r3;
        java.io.ObjectStreamField[] $r1;
        java.lang.Class $r4;

        $r1 = newarray (java.io.ObjectStreamField)[3];
        $r0 = new java.io.ObjectStreamField;
        specialinvoke $r0.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("children", class "java/util/Hashtable");
        $r1[0] = $r0;
        $r2 = new java.io.ObjectStreamField;
        specialinvoke $r2.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("source", class "java/lang/Object");
        $r1[1] = $r2;
        $r3 = new java.io.ObjectStreamField;
        $r4 = <java.lang.Integer: java.lang.Class TYPE>;
        specialinvoke $r3.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("propertyChangeSupportSerializedDataVersion", $r4);
        $r1[2] = $r3;
        <java.beans.PropertyChangeSupport: java.io.ObjectStreamField[] serialPersistentFields> = $r1;
        return;
    }
}
