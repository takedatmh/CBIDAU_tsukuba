public class org.apache.naming.resources.WARDirContext$Entry extends java.lang.Object implements java.lang.Comparable
{
    protected java.lang.String name;
    protected java.util.zip.ZipEntry entry;
    protected org.apache.naming.resources.WARDirContext$Entry[] children;
    protected volatile boolean childrenSorted;

    public void <init>(java.lang.String, java.util.zip.ZipEntry)
    {
        org.apache.naming.resources.WARDirContext$Entry r0;
        java.lang.String r1;
        java.util.zip.ZipEntry r2;
        org.apache.naming.resources.WARDirContext$Entry[] $r3;

        r0 := @this: org.apache.naming.resources.WARDirContext$Entry;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.zip.ZipEntry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String name> = null;
        r0.<org.apache.naming.resources.WARDirContext$Entry: java.util.zip.ZipEntry entry> = null;
        $r3 = newarray (org.apache.naming.resources.WARDirContext$Entry)[0];
        r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children> = $r3;
        r0.<org.apache.naming.resources.WARDirContext$Entry: boolean childrenSorted> = 0;
        r0.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String name> = r1;
        r0.<org.apache.naming.resources.WARDirContext$Entry: java.util.zip.ZipEntry entry> = r2;
        return;
    }

    public int compareTo(java.lang.Object)
    {
        org.apache.naming.resources.WARDirContext$Entry r0, $r3;
        java.lang.Object r1;
        boolean $z0;
        java.lang.String $r2, $r4;
        int $i0;

        r0 := @this: org.apache.naming.resources.WARDirContext$Entry;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof org.apache.naming.resources.WARDirContext$Entry;
        if $z0 != 0 goto label0;

        return 1;

     label0:
        $r2 = r0.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String name>;
        $r3 = (org.apache.naming.resources.WARDirContext$Entry) r1;
        $r4 = virtualinvoke $r3.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String getName()>();
        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r4);
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.naming.resources.WARDirContext$Entry r0, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r4;

        r0 := @this: org.apache.naming.resources.WARDirContext$Entry;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof org.apache.naming.resources.WARDirContext$Entry;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $r2 = r0.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String name>;
        $r3 = (org.apache.naming.resources.WARDirContext$Entry) r1;
        $r4 = virtualinvoke $r3.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String getName()>();
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        return $z1;
    }

    public int hashCode()
    {
        org.apache.naming.resources.WARDirContext$Entry r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.naming.resources.WARDirContext$Entry;
        $r1 = r0.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String name>;
        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        return $i0;
    }

    public java.util.zip.ZipEntry getEntry()
    {
        org.apache.naming.resources.WARDirContext$Entry r0;
        java.util.zip.ZipEntry $r1;

        r0 := @this: org.apache.naming.resources.WARDirContext$Entry;
        $r1 = r0.<org.apache.naming.resources.WARDirContext$Entry: java.util.zip.ZipEntry entry>;
        return $r1;
    }

    public java.lang.String getName()
    {
        org.apache.naming.resources.WARDirContext$Entry r0;
        java.lang.String $r1;

        r0 := @this: org.apache.naming.resources.WARDirContext$Entry;
        $r1 = r0.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String name>;
        return $r1;
    }

    public void addChild(org.apache.naming.resources.WARDirContext$Entry)
    {
        org.apache.naming.resources.WARDirContext$Entry r0, r1, $r5;
        org.apache.naming.resources.WARDirContext$Entry[] r2, $r3, $r4, $r6, $r7;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.naming.resources.WARDirContext$Entry;
        r1 := @parameter0: org.apache.naming.resources.WARDirContext$Entry;
        $r3 = r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children>;
        $i1 = lengthof $r3;
        $i2 = $i1 + 1;
        r2 = newarray (org.apache.naming.resources.WARDirContext$Entry)[$i2];
        i0 = 0;
        goto label1;

     label0:
        $r4 = r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children>;
        $r5 = $r4[i0];
        r2[i0] = $r5;
        i0 = i0 + 1;

     label1:
        $r6 = r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children>;
        $i3 = lengthof $r6;
        if i0 < $i3 goto label0;

        $r7 = r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children>;
        $i4 = lengthof $r7;
        r2[$i4] = r1;
        r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children> = r2;
        r0.<org.apache.naming.resources.WARDirContext$Entry: boolean childrenSorted> = 0;
        return;
    }

    public org.apache.naming.resources.WARDirContext$Entry[] getChildren()
    {
        org.apache.naming.resources.WARDirContext$Entry r0;
        org.apache.naming.resources.WARDirContext$Entry[] r1, $r2, $r3, $r5;
        boolean $z0, $z1;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.naming.resources.WARDirContext$Entry;
        $z0 = r0.<org.apache.naming.resources.WARDirContext$Entry: boolean childrenSorted>;
        if $z0 != 0 goto label6;

        $r2 = r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children>;
        r1 = $r2;
        entermonitor $r2;

     label0:
        $z1 = r0.<org.apache.naming.resources.WARDirContext$Entry: boolean childrenSorted>;
        if $z1 != 0 goto label1;

        $r3 = r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children>;
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r3);
        r0.<org.apache.naming.resources.WARDirContext$Entry: boolean childrenSorted> = 1;

     label1:
        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

     label6:
        $r5 = r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children>;
        return $r5;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public org.apache.naming.resources.WARDirContext$Entry getChild(java.lang.String)
    {
        org.apache.naming.resources.WARDirContext$Entry r0, $r3, $r6;
        java.lang.String r1, $r4;
        int i0, $i1;
        org.apache.naming.resources.WARDirContext$Entry[] $r2, $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.naming.resources.WARDirContext$Entry;
        r1 := @parameter0: java.lang.String;
        i0 = 0;
        goto label2;

     label0:
        $r2 = r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children>;
        $r3 = $r2[i0];
        $r4 = $r3.<org.apache.naming.resources.WARDirContext$Entry: java.lang.String name>;
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children>;
        $r6 = $r5[i0];
        return $r6;

     label1:
        i0 = i0 + 1;

     label2:
        $r7 = r0.<org.apache.naming.resources.WARDirContext$Entry: org.apache.naming.resources.WARDirContext$Entry[] children>;
        $i1 = lengthof $r7;
        if i0 < $i1 goto label0;

        return null;
    }
}
