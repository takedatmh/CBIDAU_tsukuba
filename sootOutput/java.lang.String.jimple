public final class java.lang.String extends java.lang.Object implements java.io.Serializable, java.lang.Comparable, java.lang.CharSequence
{
    private final char[] value;
    private int hash;
    private static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    public static final java.util.Comparator CASE_INSENSITIVE_ORDER;
    private static final int HASHING_SEED;
    private transient int hash32;

    public void <init>()
    {
        java.lang.String r0;
        char[] $r1;

        r0 := @this: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        $r1 = newarray (char)[0];
        r0.<java.lang.String: char[] value> = $r1;
        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r0, r1;
        char[] $r2;
        int $i0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        $r2 = r1.<java.lang.String: char[] value>;
        r0.<java.lang.String: char[] value> = $r2;
        $i0 = r1.<java.lang.String: int hash>;
        r0.<java.lang.String: int hash> = $i0;
        return;
    }

    public void <init>(char[])
    {
        java.lang.String r0;
        char[] r1, $r2;
        int $i0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: char[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        $i0 = lengthof r1;
        $r2 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(r1, $i0);
        r0.<java.lang.String: char[] value> = $r2;
        return;
    }

    public void <init>(char[], int, int)
    {
        java.lang.String r0;
        char[] r1, $r5;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.StringIndexOutOfBoundsException $r2, $r3, $r4;

        r0 := @this: java.lang.String;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        if i0 >= 0 goto label0;

        $r2 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r2;

     label0:
        if i1 >= 0 goto label1;

        $r3 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i1);
        throw $r3;

     label1:
        $i2 = lengthof r1;
        $i3 = $i2 - i1;
        if i0 <= $i3 goto label2;

        $r4 = new java.lang.StringIndexOutOfBoundsException;
        $i4 = i0 + i1;
        specialinvoke $r4.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i4);
        throw $r4;

     label2:
        $i5 = i0 + i1;
        $r5 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(r1, i0, $i5);
        r0.<java.lang.String: char[] value> = $r5;
        return;
    }

    public void <init>(int[], int, int)
    {
        java.lang.String r0, $r6;
        int[] r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, i11, $i13;
        java.lang.StringIndexOutOfBoundsException $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r5;
        char[] r7;
        char $c12;

        r0 := @this: java.lang.String;
        r1 := @parameter0: int[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        if i0 >= 0 goto label0;

        $r2 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r2;

     label0:
        if i1 >= 0 goto label1;

        $r3 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i1);
        throw $r3;

     label1:
        $i8 = lengthof r1;
        $i9 = $i8 - i1;
        if i0 <= $i9 goto label2;

        $r4 = new java.lang.StringIndexOutOfBoundsException;
        $i10 = i0 + i1;
        specialinvoke $r4.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i10);
        throw $r4;

     label2:
        i2 = i0 + i1;
        i3 = i1;
        i4 = i0;

     label3:
        if i4 >= i2 goto label7;

        i5 = r1[i4];
        $z0 = staticinvoke <java.lang.Character: boolean isBmpCodePoint(int)>(i5);
        if $z0 == 0 goto label4;

        goto label6;

     label4:
        $z1 = staticinvoke <java.lang.Character: boolean isValidCodePoint(int)>(i5);
        if $z1 == 0 goto label5;

        i3 = i3 + 1;
        goto label6;

     label5:
        $r5 = new java.lang.IllegalArgumentException;
        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i5);
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);
        throw $r5;

     label6:
        i4 = i4 + 1;
        goto label3;

     label7:
        r7 = newarray (char)[i3];
        i11 = i0;
        i6 = 0;

     label8:
        if i11 >= i2 goto label11;

        i7 = r1[i11];
        $z2 = staticinvoke <java.lang.Character: boolean isBmpCodePoint(int)>(i7);
        if $z2 == 0 goto label9;

        $c12 = (char) i7;
        r7[i6] = $c12;
        goto label10;

     label9:
        $i13 = i6;
        i6 = i6 + 1;
        staticinvoke <java.lang.Character: void toSurrogates(int,char[],int)>(i7, r7, $i13);

     label10:
        i11 = i11 + 1;
        i6 = i6 + 1;
        goto label8;

     label11:
        r0.<java.lang.String: char[] value> = r7;
        return;
    }

    public void <init>(byte[], int, int, int)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4, $i5, i9, i10, $i11, $i12, $i15;
        char[] r2;
        byte $b6, $b13;
        short $s7, $s14;
        char $c8, $c16;

        r0 := @this: java.lang.String;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        staticinvoke <java.lang.String: void checkBounds(byte[],int,int)>(r1, i1, i2);
        r2 = newarray (char)[i2];
        if i0 != 0 goto label2;

        i3 = i2;

     label0:
        $i4 = i3;
        i3 = i3 + -1;
        if $i4 <= 0 goto label1;

        $i5 = i3 + i1;
        $b6 = r1[$i5];
        $s7 = $b6 & 255;
        $c8 = (char) $s7;
        r2[i3] = $c8;
        goto label0;

     label1:
        goto label4;

     label2:
        i9 = i0 << 8;
        i10 = i2;

     label3:
        $i11 = i10;
        i10 = i10 + -1;
        if $i11 <= 0 goto label4;

        $i12 = i10 + i1;
        $b13 = r1[$i12];
        $s14 = $b13 & 255;
        $i15 = i9 | $s14;
        $c16 = (char) $i15;
        r2[i10] = $c16;
        goto label3;

     label4:
        r0.<java.lang.String: char[] value> = r2;
        return;
    }

    public void <init>(byte[], int)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, $i1;

        r0 := @this: java.lang.String;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        $i1 = lengthof r1;
        specialinvoke r0.<java.lang.String: void <init>(byte[],int,int,int)>(r1, i0, 0, $i1);
        return;
    }

    private static void checkBounds(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.StringIndexOutOfBoundsException $r1, $r2, $r3;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if i1 >= 0 goto label0;

        $r1 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i1);
        throw $r1;

     label0:
        if i0 >= 0 goto label1;

        $r2 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r2;

     label1:
        $i2 = lengthof r0;
        $i3 = $i2 - i1;
        if i0 <= $i3 goto label2;

        $r3 = new java.lang.StringIndexOutOfBoundsException;
        $i4 = i0 + i1;
        specialinvoke $r3.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i4);
        throw $r3;

     label2:
        return;
    }

    public void <init>(byte[], int, int, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r2;
        byte[] r1;
        int i0, i1;
        java.lang.NullPointerException $r3;
        char[] $r4;

        r0 := @this: java.lang.String;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        if r2 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("charsetName");
        throw $r3;

     label0:
        staticinvoke <java.lang.String: void checkBounds(byte[],int,int)>(r1, i0, i1);
        $r4 = staticinvoke <java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>(r2, r1, i0, i1);
        r0.<java.lang.String: char[] value> = $r4;
        return;
    }

    public void <init>(byte[], int, int, java.nio.charset.Charset)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, i1;
        java.nio.charset.Charset r2;
        java.lang.NullPointerException $r3;
        char[] $r4;

        r0 := @this: java.lang.String;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: java.nio.charset.Charset;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        if r2 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("charset");
        throw $r3;

     label0:
        staticinvoke <java.lang.String: void checkBounds(byte[],int,int)>(r1, i0, i1);
        $r4 = staticinvoke <java.lang.StringCoding: char[] decode(java.nio.charset.Charset,byte[],int,int)>(r2, r1, i0, i1);
        r0.<java.lang.String: char[] value> = $r4;
        return;
    }

    public void <init>(byte[], java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r2;
        byte[] r1;
        int $i0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: byte[];
        r2 := @parameter1: java.lang.String;
        $i0 = lengthof r1;
        specialinvoke r0.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, 0, $i0, r2);
        return;
    }

    public void <init>(byte[], java.nio.charset.Charset)
    {
        java.lang.String r0;
        byte[] r1;
        java.nio.charset.Charset r2;
        int $i0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: byte[];
        r2 := @parameter1: java.nio.charset.Charset;
        $i0 = lengthof r1;
        specialinvoke r0.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, 0, $i0, r2);
        return;
    }

    public void <init>(byte[], int, int)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, i1;
        char[] $r2;

        r0 := @this: java.lang.String;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        staticinvoke <java.lang.String: void checkBounds(byte[],int,int)>(r1, i0, i1);
        $r2 = staticinvoke <java.lang.StringCoding: char[] decode(byte[],int,int)>(r1, i0, i1);
        r0.<java.lang.String: char[] value> = $r2;
        return;
    }

    public void <init>(byte[])
    {
        java.lang.String r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: byte[];
        $i0 = lengthof r1;
        specialinvoke r0.<java.lang.String: void <init>(byte[],int,int)>(r1, 0, $i0);
        return;
    }

    public void <init>(java.lang.StringBuffer)
    {
        java.lang.String r0;
        java.lang.StringBuffer r1, r2;
        java.lang.Throwable r3, $r7;
        char[] $r5, $r6;
        int $i0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.StringBuffer;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        r2 = r1;
        entermonitor r1;

     label0:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: char[] getValue()>();
        $i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();
        $r6 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r5, $i0);
        r0.<java.lang.String: char[] value> = $r6;
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r7 := @caughtexception;

     label3:
        r3 = $r7;
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void <init>(java.lang.StringBuilder)
    {
        java.lang.String r0;
        java.lang.StringBuilder r1;
        char[] $r2, $r3;
        int $i0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.StringBuilder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: char[] getValue()>();
        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();
        $r3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r2, $i0);
        r0.<java.lang.String: char[] value> = $r3;
        return;
    }

    void <init>(char[], boolean)
    {
        java.lang.String r0;
        char[] r1;
        boolean z0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: char[];
        z0 := @parameter1: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.lang.String: int hash32> = 0;
        r0.<java.lang.String: char[] value> = r1;
        return;
    }

    void <init>(int, int, char[])
    {
        java.lang.String r0;
        int i0, i1;
        char[] r1;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: char[];
        specialinvoke r0.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);
        return;
    }

    public int length()
    {
        java.lang.String r0;
        char[] $r1;
        int $i0;

        r0 := @this: java.lang.String;
        $r1 = r0.<java.lang.String: char[] value>;
        $i0 = lengthof $r1;
        return $i0;
    }

    public boolean isEmpty()
    {
        java.lang.String r0;
        char[] $r1;
        int $i0;
        boolean $z0;

        r0 := @this: java.lang.String;
        $r1 = r0.<java.lang.String: char[] value>;
        $i0 = lengthof $r1;
        if $i0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public char charAt(int)
    {
        java.lang.String r0;
        int i0, $i1;
        char[] $r1, $r3;
        java.lang.StringIndexOutOfBoundsException $r2;
        char $c2;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $r1 = r0.<java.lang.String: char[] value>;
        $i1 = lengthof $r1;
        if i0 < $i1 goto label1;

     label0:
        $r2 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r2;

     label1:
        $r3 = r0.<java.lang.String: char[] value>;
        $c2 = $r3[i0];
        return $c2;
    }

    public int codePointAt(int)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3;
        char[] $r1, $r3, $r4;
        java.lang.StringIndexOutOfBoundsException $r2;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $r1 = r0.<java.lang.String: char[] value>;
        $i1 = lengthof $r1;
        if i0 < $i1 goto label1;

     label0:
        $r2 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r2;

     label1:
        $r3 = r0.<java.lang.String: char[] value>;
        $r4 = r0.<java.lang.String: char[] value>;
        $i2 = lengthof $r4;
        $i3 = staticinvoke <java.lang.Character: int codePointAtImpl(char[],int,int)>($r3, i0, $i2);
        return $i3;
    }

    public int codePointBefore(int)
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3;
        char[] $r1, $r3;
        java.lang.StringIndexOutOfBoundsException $r2;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 = i0 - 1;
        if i1 < 0 goto label0;

        $r1 = r0.<java.lang.String: char[] value>;
        $i2 = lengthof $r1;
        if i1 < $i2 goto label1;

     label0:
        $r2 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r2;

     label1:
        $r3 = r0.<java.lang.String: char[] value>;
        $i3 = staticinvoke <java.lang.Character: int codePointBeforeImpl(char[],int,int)>($r3, i0, 0);
        return $i3;
    }

    public int codePointCount(int, int)
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3, $i4;
        char[] $r1, $r3;
        java.lang.IndexOutOfBoundsException $r2;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 < 0 goto label0;

        $r1 = r0.<java.lang.String: char[] value>;
        $i2 = lengthof $r1;
        if i1 > $i2 goto label0;

        if i0 <= i1 goto label1;

     label0:
        $r2 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label1:
        $r3 = r0.<java.lang.String: char[] value>;
        $i3 = i1 - i0;
        $i4 = staticinvoke <java.lang.Character: int codePointCountImpl(char[],int,int)>($r3, i0, $i3);
        return $i4;
    }

    public int offsetByCodePoints(int, int)
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3, $i4;
        char[] $r1, $r3, $r4;
        java.lang.IndexOutOfBoundsException $r2;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 < 0 goto label0;

        $r1 = r0.<java.lang.String: char[] value>;
        $i2 = lengthof $r1;
        if i0 <= $i2 goto label1;

     label0:
        $r2 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();
        throw $r2;

     label1:
        $r3 = r0.<java.lang.String: char[] value>;
        $r4 = r0.<java.lang.String: char[] value>;
        $i3 = lengthof $r4;
        $i4 = staticinvoke <java.lang.Character: int offsetByCodePointsImpl(char[],int,int,int,int)>($r3, 0, $i3, i0, i1);
        return $i4;
    }

    void getChars(char[], int)
    {
        java.lang.String r0;
        char[] r1, $r2, $r3;
        int i0, $i1;

        r0 := @this: java.lang.String;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        $r2 = r0.<java.lang.String: char[] value>;
        $r3 = r0.<java.lang.String: char[] value>;
        $i1 = lengthof $r3;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, i0, $i1);
        return;
    }

    public void getChars(int, int, char[], int)
    {
        java.lang.String r0;
        int i0, i1, i2, $i3, $i4, $i5;
        char[] r1, $r3, $r6;
        java.lang.StringIndexOutOfBoundsException $r2, $r4, $r5;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: char[];
        i2 := @parameter3: int;
        if i0 >= 0 goto label0;

        $r2 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r2;

     label0:
        $r3 = r0.<java.lang.String: char[] value>;
        $i3 = lengthof $r3;
        if i1 <= $i3 goto label1;

        $r4 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r4.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i1);
        throw $r4;

     label1:
        if i0 <= i1 goto label2;

        $r5 = new java.lang.StringIndexOutOfBoundsException;
        $i4 = i1 - i0;
        specialinvoke $r5.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i4);
        throw $r5;

     label2:
        $r6 = r0.<java.lang.String: char[] value>;
        $i5 = i1 - i0;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, i0, r1, i2, $i5);
        return;
    }

    public void getBytes(int, int, byte[], int)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        byte[] r1;
        char[] r2, $r4;
        java.lang.StringIndexOutOfBoundsException $r3, $r5, $r6;
        char $c10;
        byte $b11;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: byte[];
        i2 := @parameter3: int;
        if i0 >= 0 goto label0;

        $r3 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r3;

     label0:
        $r4 = r0.<java.lang.String: char[] value>;
        $i6 = lengthof $r4;
        if i1 <= $i6 goto label1;

        $r5 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r5.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i1);
        throw $r5;

     label1:
        if i0 <= i1 goto label2;

        $r6 = new java.lang.StringIndexOutOfBoundsException;
        $i7 = i1 - i0;
        specialinvoke $r6.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i7);
        throw $r6;

     label2:
        i3 = i2;
        i4 = i1;
        i5 = i0;
        r2 = r0.<java.lang.String: char[] value>;

     label3:
        if i5 >= i4 goto label4;

        $i8 = i3;
        i3 = i3 + 1;
        $i9 = i5;
        i5 = i5 + 1;
        $c10 = r2[$i9];
        $b11 = (byte) $c10;
        r1[$i8] = $b11;
        goto label3;

     label4:
        return;
    }

    public byte[] getBytes(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r1;
        java.lang.NullPointerException $r2;
        char[] $r3, $r4;
        int $i0;
        byte[] $r5;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<java.lang.String: char[] value>;
        $r4 = r0.<java.lang.String: char[] value>;
        $i0 = lengthof $r4;
        $r5 = staticinvoke <java.lang.StringCoding: byte[] encode(java.lang.String,char[],int,int)>(r1, $r3, 0, $i0);
        return $r5;
    }

    public byte[] getBytes(java.nio.charset.Charset)
    {
        java.lang.String r0;
        java.nio.charset.Charset r1;
        java.lang.NullPointerException $r2;
        char[] $r3, $r4;
        int $i0;
        byte[] $r5;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.nio.charset.Charset;
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        $r3 = r0.<java.lang.String: char[] value>;
        $r4 = r0.<java.lang.String: char[] value>;
        $i0 = lengthof $r4;
        $r5 = staticinvoke <java.lang.StringCoding: byte[] encode(java.nio.charset.Charset,char[],int,int)>(r1, $r3, 0, $i0);
        return $r5;
    }

    public byte[] getBytes()
    {
        java.lang.String r0;
        char[] $r1, $r2;
        int $i0;
        byte[] $r3;

        r0 := @this: java.lang.String;
        $r1 = r0.<java.lang.String: char[] value>;
        $r2 = r0.<java.lang.String: char[] value>;
        $i0 = lengthof $r2;
        $r3 = staticinvoke <java.lang.StringCoding: byte[] encode(char[],int,int)>($r1, 0, $i0);
        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.String r0, r2;
        java.lang.Object r1;
        int i0, i1, $i2, $i3;
        char[] r3, r4, $r5, $r6;
        boolean $z0;
        char $c4, $c5;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof java.lang.String;
        if $z0 == 0 goto label4;

        r2 = (java.lang.String) r1;
        $r5 = r0.<java.lang.String: char[] value>;
        i0 = lengthof $r5;
        $r6 = r2.<java.lang.String: char[] value>;
        $i2 = lengthof $r6;
        if i0 != $i2 goto label4;

        r3 = r0.<java.lang.String: char[] value>;
        r4 = r2.<java.lang.String: char[] value>;
        i1 = 0;

     label1:
        $i3 = i0;
        i0 = i0 + -1;
        if $i3 == 0 goto label3;

        $c4 = r3[i1];
        $c5 = r4[i1];
        if $c4 == $c5 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    public boolean contentEquals(java.lang.StringBuffer)
    {
        java.lang.String r0;
        java.lang.StringBuffer r1, r3;
        java.lang.Throwable r4, $r5;
        boolean $z0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.StringBuffer;
        r3 = r1;
        entermonitor r1;

     label0:
        $z0 = virtualinvoke r0.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>(r1);
        exitmonitor r3;

     label1:
        return $z0;

     label2:
        $r5 := @caughtexception;

     label3:
        r4 = $r5;
        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean contentEquals(java.lang.CharSequence)
    {
        java.lang.String r0;
        java.lang.CharSequence r1;
        char[] r2, r3, $r4, $r6, r7, $r8;
        int i0, i1, $i2, $i3, $i4, i7, i8, $i9;
        boolean $z0, $z1;
        java.lang.AbstractStringBuilder $r5;
        char $c5, $c6, $c10, $c11;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.CharSequence;
        $r4 = r0.<java.lang.String: char[] value>;
        $i2 = lengthof $r4;
        $i3 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();
        if $i2 == $i3 goto label0;

        return 0;

     label0:
        $z0 = r1 instanceof java.lang.AbstractStringBuilder;
        if $z0 == 0 goto label4;

        r2 = r0.<java.lang.String: char[] value>;
        $r5 = (java.lang.AbstractStringBuilder) r1;
        r3 = virtualinvoke $r5.<java.lang.AbstractStringBuilder: char[] getValue()>();
        i0 = 0;
        $r6 = r0.<java.lang.String: char[] value>;
        i1 = lengthof $r6;

     label1:
        $i4 = i1;
        i1 = i1 + -1;
        if $i4 == 0 goto label3;

        $c5 = r2[i0];
        $c6 = r3[i0];
        if $c5 == $c6 goto label2;

        return 0;

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        return 1;

     label4:
        $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);
        if $z1 == 0 goto label5;

        return 1;

     label5:
        r7 = r0.<java.lang.String: char[] value>;
        i7 = 0;
        $r8 = r0.<java.lang.String: char[] value>;
        i8 = lengthof $r8;

     label6:
        $i9 = i8;
        i8 = i8 + -1;
        if $i9 == 0 goto label8;

        $c10 = r7[i7];
        $c11 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i7);
        if $c10 == $c11 goto label7;

        return 0;

     label7:
        i7 = i7 + 1;
        goto label6;

     label8:
        return 1;
    }

    public boolean equalsIgnoreCase(java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1;
        char[] $r2, $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        if r0 != r1 goto label0;

        $z0 = 1;
        goto label2;

     label0:
        if r1 == null goto label1;

        $r2 = r1.<java.lang.String: char[] value>;
        $i0 = lengthof $r2;
        $r3 = r0.<java.lang.String: char[] value>;
        $i1 = lengthof $r3;
        if $i0 != $i1 goto label1;

        $r4 = r0.<java.lang.String: char[] value>;
        $i2 = lengthof $r4;
        $z1 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, r1, 0, $i2);
        if $z1 == 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int compareTo(java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, $i6, $i7;
        char[] r2, r3, $r4, $r5;
        char c4, c5;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<java.lang.String: char[] value>;
        i0 = lengthof $r4;
        $r5 = r1.<java.lang.String: char[] value>;
        i1 = lengthof $r5;
        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);
        r2 = r0.<java.lang.String: char[] value>;
        r3 = r1.<java.lang.String: char[] value>;
        i3 = 0;

     label0:
        if i3 >= i2 goto label2;

        c4 = r2[i3];
        c5 = r3[i3];
        if c4 == c5 goto label1;

        $i6 = c4 - c5;
        return $i6;

     label1:
        i3 = i3 + 1;
        goto label0;

     label2:
        $i7 = i0 - i1;
        return $i7;
    }

    public int compareToIgnoreCase(java.lang.String)
    {
        java.lang.String r0, r1;
        java.util.Comparator $r2;
        int $i0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        $r2 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;
        $i0 = interfaceinvoke $r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, r1);
        return $i0;
    }

    public boolean regionMatches(int, java.lang.String, int, int)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, i4, $i5, $i7, $i13, $i18, $i20;
        char[] r2, r3, $r4, $r5;
        long $l6, $l8, $l9, $l10, $l12, $l14, $l15, $l16;
        byte $b11, $b17;
        char $c19, $c21;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        r2 = r0.<java.lang.String: char[] value>;
        i3 = i0;
        r3 = r1.<java.lang.String: char[] value>;
        i4 = i1;
        if i1 < 0 goto label0;

        if i0 < 0 goto label0;

        $l6 = (long) i0;
        $r4 = r0.<java.lang.String: char[] value>;
        $i7 = lengthof $r4;
        $l8 = (long) $i7;
        $l9 = (long) i2;
        $l10 = $l8 - $l9;
        $b11 = $l6 cmp $l10;
        if $b11 > 0 goto label0;

        $l12 = (long) i1;
        $r5 = r1.<java.lang.String: char[] value>;
        $i13 = lengthof $r5;
        $l14 = (long) $i13;
        $l15 = (long) i2;
        $l16 = $l14 - $l15;
        $b17 = $l12 cmp $l16;
        if $b17 <= 0 goto label1;

     label0:
        return 0;

     label1:
        $i18 = i2;
        i2 = i2 + -1;
        if $i18 <= 0 goto label2;

        $i5 = i3;
        i3 = i3 + 1;
        $c19 = r2[$i5];
        $i20 = i4;
        i4 = i4 + 1;
        $c21 = r3[$i20];
        if $c19 == $c21 goto label1;

        return 0;

     label2:
        return 1;
    }

    public boolean regionMatches(boolean, int, java.lang.String, int, int)
    {
        java.lang.String r0, r1;
        boolean z0;
        int i0, i1, i2, i3, i4, $i5, $i11, $i17, $i22, $i23;
        char[] r2, r3, $r4, $r5;
        char c6, c7, c8, c9, $c24, $c25;
        long $l10, $l12, $l13, $l14, $l16, $l18, $l19, $l20;
        byte $b15, $b21;

        r0 := @this: java.lang.String;
        z0 := @parameter0: boolean;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        r2 = r0.<java.lang.String: char[] value>;
        i3 = i0;
        r3 = r1.<java.lang.String: char[] value>;
        i4 = i1;
        if i1 < 0 goto label0;

        if i0 < 0 goto label0;

        $l10 = (long) i0;
        $r4 = r0.<java.lang.String: char[] value>;
        $i11 = lengthof $r4;
        $l12 = (long) $i11;
        $l13 = (long) i2;
        $l14 = $l12 - $l13;
        $b15 = $l10 cmp $l14;
        if $b15 > 0 goto label0;

        $l16 = (long) i1;
        $r5 = r1.<java.lang.String: char[] value>;
        $i17 = lengthof $r5;
        $l18 = (long) $i17;
        $l19 = (long) i2;
        $l20 = $l18 - $l19;
        $b21 = $l16 cmp $l20;
        if $b21 <= 0 goto label1;

     label0:
        return 0;

     label1:
        $i22 = i2;
        i2 = i2 + -1;
        if $i22 <= 0 goto label5;

        $i5 = i3;
        i3 = i3 + 1;
        c6 = r2[$i5];
        $i23 = i4;
        i4 = i4 + 1;
        c7 = r3[$i23];
        if c6 != c7 goto label2;

        goto label1;

     label2:
        if z0 == 0 goto label4;

        c8 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c6);
        c9 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c7);
        if c8 != c9 goto label3;

        goto label1;

     label3:
        $c24 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c8);
        $c25 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c9);
        if $c24 != $c25 goto label4;

        goto label1;

     label4:
        return 0;

     label5:
        return 1;
    }

    public boolean startsWith(java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i8;
        char[] r2, r3, $r4, $r5;
        char $c7, $c9;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 = r0.<java.lang.String: char[] value>;
        i1 = i0;
        r3 = r1.<java.lang.String: char[] value>;
        i2 = 0;
        $r4 = r1.<java.lang.String: char[] value>;
        i3 = lengthof $r4;
        if i0 < 0 goto label0;

        $r5 = r0.<java.lang.String: char[] value>;
        $i4 = lengthof $r5;
        $i5 = $i4 - i3;
        if i0 <= $i5 goto label1;

     label0:
        return 0;

     label1:
        i3 = i3 + -1;
        if i3 < 0 goto label2;

        $i6 = i1;
        i1 = i1 + 1;
        $c7 = r2[$i6];
        $i8 = i2;
        i2 = i2 + 1;
        $c9 = r3[$i8];
        if $c7 == $c9 goto label1;

        return 0;

     label2:
        return 1;
    }

    public boolean startsWith(java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, 0);
        return $z0;
    }

    public boolean endsWith(java.lang.String)
    {
        java.lang.String r0, r1;
        char[] $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<java.lang.String: char[] value>;
        $i0 = lengthof $r2;
        $r3 = r1.<java.lang.String: char[] value>;
        $i1 = lengthof $r3;
        $i2 = $i0 - $i1;
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, $i2);
        return $z0;
    }

    public int hashCode()
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3, $i4;
        char[] r1, $r2, $r3;
        char $c5;

        r0 := @this: java.lang.String;
        i0 = r0.<java.lang.String: int hash>;
        if i0 != 0 goto label2;

        $r2 = r0.<java.lang.String: char[] value>;
        $i2 = lengthof $r2;
        if $i2 <= 0 goto label2;

        r1 = r0.<java.lang.String: char[] value>;
        i1 = 0;

     label0:
        $r3 = r0.<java.lang.String: char[] value>;
        $i3 = lengthof $r3;
        if i1 >= $i3 goto label1;

        $i4 = 31 * i0;
        $c5 = r1[i1];
        i0 = $i4 + $c5;
        i1 = i1 + 1;
        goto label0;

     label1:
        r0.<java.lang.String: int hash> = i0;

     label2:
        return i0;
    }

    public int indexOf(int)
    {
        java.lang.String r0;
        int i0, $i1;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(i0, 0);
        return $i1;
    }

    public int indexOf(int, int)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, $i5;
        char[] r1, $r2;
        char $c4;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r2 = r0.<java.lang.String: char[] value>;
        i2 = lengthof $r2;
        if i1 >= 0 goto label0;

        i1 = 0;
        goto label1;

     label0:
        if i1 < i2 goto label1;

        return -1;

     label1:
        if i0 >= 65536 goto label5;

        r1 = r0.<java.lang.String: char[] value>;
        i3 = i1;

     label2:
        if i3 >= i2 goto label4;

        $c4 = r1[i3];
        if $c4 != i0 goto label3;

        return i3;

     label3:
        i3 = i3 + 1;
        goto label2;

     label4:
        return -1;

     label5:
        $i5 = specialinvoke r0.<java.lang.String: int indexOfSupplementary(int,int)>(i0, i1);
        return $i5;
    }

    private int indexOfSupplementary(int, int)
    {
        java.lang.String r0;
        int i0, i1, i4, i5, $i6, $i8;
        char[] r1;
        char c2, c3, $c7, $c9;
        boolean $z0;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $z0 = staticinvoke <java.lang.Character: boolean isValidCodePoint(int)>(i0);
        if $z0 == 0 goto label2;

        r1 = r0.<java.lang.String: char[] value>;
        c2 = staticinvoke <java.lang.Character: char highSurrogate(int)>(i0);
        c3 = staticinvoke <java.lang.Character: char lowSurrogate(int)>(i0);
        $i6 = lengthof r1;
        i4 = $i6 - 1;
        i5 = i1;

     label0:
        if i5 >= i4 goto label2;

        $c7 = r1[i5];
        if $c7 != c2 goto label1;

        $i8 = i5 + 1;
        $c9 = r1[$i8];
        if $c9 != c3 goto label1;

        return i5;

     label1:
        i5 = i5 + 1;
        goto label0;

     label2:
        return -1;
    }

    public int lastIndexOf(int)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3;
        char[] $r1;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        $r1 = r0.<java.lang.String: char[] value>;
        $i1 = lengthof $r1;
        $i2 = $i1 - 1;
        $i3 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(i0, $i2);
        return $i3;
    }

    public int lastIndexOf(int, int)
    {
        java.lang.String r0;
        int i0, i1, i2, $i3, $i4, $i6;
        char[] r1;
        char $c5;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 >= 65536 goto label3;

        r1 = r0.<java.lang.String: char[] value>;
        $i3 = lengthof r1;
        $i4 = $i3 - 1;
        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i4);

     label0:
        if i2 < 0 goto label2;

        $c5 = r1[i2];
        if $c5 != i0 goto label1;

        return i2;

     label1:
        i2 = i2 + -1;
        goto label0;

     label2:
        return -1;

     label3:
        $i6 = specialinvoke r0.<java.lang.String: int lastIndexOfSupplementary(int,int)>(i0, i1);
        return $i6;
    }

    private int lastIndexOfSupplementary(int, int)
    {
        java.lang.String r0;
        int i0, i1, i4, $i5, $i6, $i8;
        char[] r1;
        char c2, c3, $c7, $c9;
        boolean $z0;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $z0 = staticinvoke <java.lang.Character: boolean isValidCodePoint(int)>(i0);
        if $z0 == 0 goto label2;

        r1 = r0.<java.lang.String: char[] value>;
        c2 = staticinvoke <java.lang.Character: char highSurrogate(int)>(i0);
        c3 = staticinvoke <java.lang.Character: char lowSurrogate(int)>(i0);
        $i5 = lengthof r1;
        $i6 = $i5 - 2;
        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i6);

     label0:
        if i4 < 0 goto label2;

        $c7 = r1[i4];
        if $c7 != c2 goto label1;

        $i8 = i4 + 1;
        $c9 = r1[$i8];
        if $c9 != c3 goto label1;

        return i4;

     label1:
        i4 = i4 + -1;
        goto label0;

     label2:
        return -1;
    }

    public int indexOf(java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r1, 0);
        return $i0;
    }

    public int indexOf(java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, $i1, $i2, $i3;
        char[] $r2, $r3, $r4, $r5;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = r0.<java.lang.String: char[] value>;
        $r3 = r0.<java.lang.String: char[] value>;
        $i1 = lengthof $r3;
        $r4 = r1.<java.lang.String: char[] value>;
        $r5 = r1.<java.lang.String: char[] value>;
        $i2 = lengthof $r5;
        $i3 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($r2, 0, $i1, $r4, 0, $i2, i0);
        return $i3;
    }

    static int indexOf(char[], int, int, char[], int, int, int)
    {
        char[] r0, r1;
        int i0, i1, i2, i3, i4, i6, i7, i8, i9, i10, $i11, $i12, $i15, $i18;
        char c5, $c13, $c14, $c16, $c17;

        r0 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r1 := @parameter3: char[];
        i2 := @parameter4: int;
        i3 := @parameter5: int;
        i4 := @parameter6: int;
        if i4 < i1 goto label2;

        if i3 != 0 goto label0;

        $i11 = i1;
        goto label1;

     label0:
        $i11 = -1;

     label1:
        return $i11;

     label2:
        if i4 >= 0 goto label3;

        i4 = 0;

     label3:
        if i3 != 0 goto label4;

        return i4;

     label4:
        c5 = r1[i2];
        $i12 = i1 - i3;
        i6 = i0 + $i12;
        i7 = i0 + i4;

     label5:
        if i7 > i6 goto label11;

        $c13 = r0[i7];
        if $c13 == c5 goto label7;

     label6:
        i7 = i7 + 1;
        if i7 > i6 goto label7;

        $c14 = r0[i7];
        if $c14 == c5 goto label7;

        goto label6;

     label7:
        if i7 > i6 goto label10;

        i8 = i7 + 1;
        $i15 = i8 + i3;
        i9 = $i15 - 1;
        i10 = i2 + 1;

     label8:
        if i8 >= i9 goto label9;

        $c16 = r0[i8];
        $c17 = r1[i10];
        if $c16 != $c17 goto label9;

        i8 = i8 + 1;
        i10 = i10 + 1;
        goto label8;

     label9:
        if i8 != i9 goto label10;

        $i18 = i7 - i0;
        return $i18;

     label10:
        i7 = i7 + 1;
        goto label5;

     label11:
        return -1;
    }

    public int lastIndexOf(java.lang.String)
    {
        java.lang.String r0, r1;
        char[] $r2;
        int $i0, $i1;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<java.lang.String: char[] value>;
        $i0 = lengthof $r2;
        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String,int)>(r1, $i0);
        return $i1;
    }

    public int lastIndexOf(java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, $i1, $i2, $i3;
        char[] $r2, $r3, $r4, $r5;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = r0.<java.lang.String: char[] value>;
        $r3 = r0.<java.lang.String: char[] value>;
        $i1 = lengthof $r3;
        $r4 = r1.<java.lang.String: char[] value>;
        $r5 = r1.<java.lang.String: char[] value>;
        $i2 = lengthof $r5;
        $i3 = staticinvoke <java.lang.String: int lastIndexOf(char[],int,int,char[],int,int,int)>($r2, 0, $i1, $r4, 0, $i2, i0);
        return $i3;
    }

    static int lastIndexOf(char[], int, int, char[], int, int, int)
    {
        char[] r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, i8, i9, i10, i11, i12, $i13, $i14, $i16, $i17, $i19, $i21, $i22;
        char c7, $c15, $c18, $c20;

        r0 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r1 := @parameter3: char[];
        i2 := @parameter4: int;
        i3 := @parameter5: int;
        i4 := @parameter6: int;
        i5 = i1 - i3;
        if i4 >= 0 goto label0;

        return -1;

     label0:
        if i4 <= i5 goto label1;

        i4 = i5;

     label1:
        if i3 != 0 goto label2;

        return i4;

     label2:
        $i13 = i2 + i3;
        i6 = $i13 - 1;
        c7 = r1[i6];
        $i14 = i0 + i3;
        i8 = $i14 - 1;
        i9 = i8 + i4;

     label3:
        if i9 < i8 goto label4;

        $c15 = r0[i9];
        if $c15 == c7 goto label4;

        i9 = i9 + -1;
        goto label3;

     label4:
        if i9 >= i8 goto label5;

        return -1;

     label5:
        i10 = i9 - 1;
        $i16 = i3 - 1;
        i11 = i10 - $i16;
        i12 = i6 - 1;

     label6:
        if i10 <= i11 goto label7;

        $i17 = i10;
        i10 = i10 + -1;
        $c18 = r0[$i17];
        $i19 = i12;
        i12 = i12 + -1;
        $c20 = r1[$i19];
        if $c18 == $c20 goto label6;

        i9 = i9 + -1;
        goto label3;

     label7:
        $i21 = i11 - i0;
        $i22 = $i21 + 1;
        return $i22;
    }

    public java.lang.String substring(int)
    {
        java.lang.String r0, $r4;
        int i0, i1, $i2;
        java.lang.StringIndexOutOfBoundsException $r1, $r3;
        char[] $r2, $r5;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        if i0 >= 0 goto label0;

        $r1 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r1;

     label0:
        $r2 = r0.<java.lang.String: char[] value>;
        $i2 = lengthof $r2;
        i1 = $i2 - i0;
        if i1 >= 0 goto label1;

        $r3 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i1);
        throw $r3;

     label1:
        if i0 != 0 goto label2;

        $r4 = r0;
        goto label3;

     label2:
        $r4 = new java.lang.String;
        $r5 = r0.<java.lang.String: char[] value>;
        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r5, i0, i1);

     label3:
        return $r4;
    }

    public java.lang.String substring(int, int)
    {
        java.lang.String r0, $r6;
        int i0, i1, i2, $i3, $i4;
        java.lang.StringIndexOutOfBoundsException $r1, $r3, $r4;
        char[] $r2, $r5, $r7;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 >= 0 goto label0;

        $r1 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0);
        throw $r1;

     label0:
        $r2 = r0.<java.lang.String: char[] value>;
        $i3 = lengthof $r2;
        if i1 <= $i3 goto label1;

        $r3 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i1);
        throw $r3;

     label1:
        i2 = i1 - i0;
        if i2 >= 0 goto label2;

        $r4 = new java.lang.StringIndexOutOfBoundsException;
        specialinvoke $r4.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i2);
        throw $r4;

     label2:
        if i0 != 0 goto label3;

        $r5 = r0.<java.lang.String: char[] value>;
        $i4 = lengthof $r5;
        if i1 != $i4 goto label3;

        $r6 = r0;
        goto label4;

     label3:
        $r6 = new java.lang.String;
        $r7 = r0.<java.lang.String: char[] value>;
        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>($r7, i0, i2);

     label4:
        return $r6;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        java.lang.String r0, $r1;
        int i0, i1;

        r0 := @this: java.lang.String;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);
        return $r1;
    }

    public java.lang.String concat(java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        int i0, i1, $i2;
        char[] r2, $r3, $r4;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if i0 != 0 goto label0;

        return r0;

     label0:
        $r3 = r0.<java.lang.String: char[] value>;
        i1 = lengthof $r3;
        $r4 = r0.<java.lang.String: char[] value>;
        $i2 = i1 + i0;
        r2 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r4, $i2);
        virtualinvoke r1.<java.lang.String: void getChars(char[],int)>(r2, i1);
        $r5 = new java.lang.String;
        specialinvoke $r5.<java.lang.String: void <init>(char[],boolean)>(r2, 1);
        return $r5;
    }

    public java.lang.String replace(char, char)
    {
        java.lang.String r0, $r5;
        char c0, c1, $c5, $c6, c7, $c9;
        int i2, i3, i4, $i8;
        char[] r1, r2, $r3;

        r0 := @this: java.lang.String;
        c0 := @parameter0: char;
        c1 := @parameter1: char;
        if c0 == c1 goto label7;

        $r3 = r0.<java.lang.String: char[] value>;
        i2 = lengthof $r3;
        i3 = -1;
        r1 = r0.<java.lang.String: char[] value>;

     label0:
        i3 = i3 + 1;
        if i3 >= i2 goto label1;

        $c5 = r1[i3];
        if $c5 != c0 goto label0;

        goto label1;

     label1:
        if i3 >= i2 goto label7;

        r2 = newarray (char)[i2];
        i4 = 0;

     label2:
        if i4 >= i3 goto label3;

        $c6 = r1[i4];
        r2[i4] = $c6;
        i4 = i4 + 1;
        goto label2;

     label3:
        if i3 >= i2 goto label6;

        c7 = r1[i3];
        $i8 = i3;
        if c7 != c0 goto label4;

        $c9 = c1;
        goto label5;

     label4:
        $c9 = c7;

     label5:
        r2[$i8] = $c9;
        i3 = i3 + 1;
        goto label3;

     label6:
        $r5 = new java.lang.String;
        specialinvoke $r5.<java.lang.String: void <init>(char[],boolean)>(r2, 1);
        return $r5;

     label7:
        return r0;
    }

    public boolean matches(java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        $z0 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>(r1, r0);
        return $z0;
    }

    public boolean contains(java.lang.CharSequence)
    {
        java.lang.String r0, $r2;
        java.lang.CharSequence r1;
        int $i0;
        boolean $z0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.CharSequence;
        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>($r2);
        if $i0 <= -1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.String replaceFirst(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r5;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);
        $r5 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>(r2);
        return $r5;
    }

    public java.lang.String replaceAll(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r5;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);
        $r5 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(r2);
        return $r5;
    }

    public java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.String r0, $r3, $r6, $r7, $r8;
        java.lang.CharSequence r1, r2;
        java.util.regex.Pattern $r4;
        java.util.regex.Matcher $r5;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.CharSequence;
        r2 := @parameter1: java.lang.CharSequence;
        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();
        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r3, 16);
        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);
        $r6 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();
        $r7 = staticinvoke <java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>($r6);
        $r8 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($r7);
        return $r8;
    }

    public java.lang.String[] split(java.lang.String, int)
    {
        java.lang.String r0, r1, $r5, $r7, $r9, $r13, $r15;
        int i0, i1, i2, $i3, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        boolean z0, z1, z2, $z3;
        java.util.ArrayList r2, $r6;
        java.lang.String[] r3, $r11, $r18, $r20;
        char[] $r4, $r8, $r10, $r12;
        char $c4, c5, $c8, $c9;
        java.lang.Object $r14;
        java.util.List $r16;
        java.lang.Object[] $r17;
        java.util.regex.Pattern $r19;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        z0 = 0;
        $r4 = r1.<java.lang.String: char[] value>;
        $i3 = lengthof $r4;
        if $i3 != 1 goto label0;

        $r5 = ".$|()[{^?*+\\";
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        c5 = $c4;
        $i6 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>($c4);
        if $i6 == -1 goto label1;

     label0:
        $i7 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i7 != 2 goto label14;

        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        if $c8 != 92 goto label14;

        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);
        c5 = $c9;
        $i10 = $c9 - 48;
        $i11 = 57 - c5;
        $i12 = $i10 | $i11;
        if $i12 >= 0 goto label14;

        $i13 = c5 - 97;
        $i14 = 122 - c5;
        $i15 = $i13 | $i14;
        if $i15 >= 0 goto label14;

        $i16 = c5 - 65;
        $i17 = 90 - c5;
        $i18 = $i16 | $i17;
        if $i18 >= 0 goto label14;

     label1:
        if c5 < 55296 goto label2;

        if c5 <= 57343 goto label14;

     label2:
        i1 = 0;
        z1 = 0;
        if i0 <= 0 goto label3;

        $z3 = 1;
        goto label4;

     label3:
        $z3 = 0;

     label4:
        z2 = $z3;
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r2 = $r6;

     label5:
        $i19 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(c5, i1);
        i20 = $i19;
        if $i19 == -1 goto label8;

        if z2 == 0 goto label6;

        $i21 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        $i22 = i0 - 1;
        if $i21 >= $i22 goto label7;

     label6:
        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i20);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);
        i1 = i20 + 1;
        goto label5;

     label7:
        $r8 = r0.<java.lang.String: char[] value>;
        $i23 = lengthof $r8;
        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i23);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);
        $r10 = r0.<java.lang.String: char[] value>;
        i1 = lengthof $r10;
        goto label8;

     label8:
        if i1 != 0 goto label9;

        $r11 = newarray (java.lang.String)[1];
        $r11[0] = r0;
        return $r11;

     label9:
        if z2 == 0 goto label10;

        $i24 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        if $i24 >= i0 goto label11;

     label10:
        $r12 = r0.<java.lang.String: char[] value>;
        $i25 = lengthof $r12;
        $r13 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i25);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label11:
        i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        if i0 != 0 goto label13;

     label12:
        if i2 <= 0 goto label13;

        $i26 = i2 - 1;
        $r14 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i26);
        $r15 = (java.lang.String) $r14;
        $i27 = virtualinvoke $r15.<java.lang.String: int length()>();
        if $i27 != 0 goto label13;

        i2 = i2 + -1;
        goto label12;

     label13:
        r3 = newarray (java.lang.String)[i2];
        $r16 = virtualinvoke r2.<java.util.ArrayList: java.util.List subList(int,int)>(0, i2);
        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r3);
        $r18 = (java.lang.String[]) $r17;
        return $r18;

     label14:
        $r19 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        $r20 = virtualinvoke $r19.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>(r0, i0);
        return $r20;
    }

    public java.lang.String[] split(java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.String[] $r2;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(r1, 0);
        return $r2;
    }

    public java.lang.String toLowerCase(java.util.Locale)
    {
        java.lang.String r0, r2, $r11;
        java.util.Locale r1;
        int i0, i1, i3, i4, i5, i6, i7, i8, $i9, $i10, i12, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i23, $i24, $i26, $i27, $i29;
        char c2, $c11, $c13, $c14, $c25, $c28;
        boolean z0, $z1;
        char[] r3, r4, $r6, $r7, r8, $r9, $r10;
        java.lang.NullPointerException $r5;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.util.Locale;
        if r1 != null goto label0;

        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();
        throw $r5;

     label0:
        $r6 = r0.<java.lang.String: char[] value>;
        i0 = lengthof $r6;
        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        $r7 = r0.<java.lang.String: char[] value>;
        c2 = $r7[i1];
        if c2 < 55296 goto label3;

        if c2 > 56319 goto label3;

        i3 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i1);
        $i9 = staticinvoke <java.lang.Character: int toLowerCase(int)>(i3);
        if i3 == $i9 goto label2;

        goto label7;

     label2:
        $i10 = staticinvoke <java.lang.Character: int charCount(int)>(i3);
        i1 = i1 + $i10;
        goto label5;

     label3:
        $c11 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c2);
        if c2 == $c11 goto label4;

        goto label7;

     label4:
        i1 = i1 + 1;

     label5:
        goto label1;

     label6:
        return r0;

     label7:
        r8 = newarray (char)[i0];
        i12 = 0;
        $r9 = r0.<java.lang.String: char[] value>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r8, 0, i1);
        r2 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();
        if r2 == "tr" goto label8;

        if r2 == "az" goto label8;

        if r2 != "lt" goto label9;

     label8:
        $z1 = 1;
        goto label10;

     label9:
        $z1 = 0;

     label10:
        z0 = $z1;
        i4 = i1;

     label11:
        if i4 >= i0 goto label26;

        $r10 = r0.<java.lang.String: char[] value>;
        i5 = $r10[i4];
        $c13 = (char) i5;
        if $c13 < 55296 goto label12;

        $c14 = (char) i5;
        if $c14 > 56319 goto label12;

        i5 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i4);
        i6 = staticinvoke <java.lang.Character: int charCount(int)>(i5);
        goto label13;

     label12:
        i6 = 1;

     label13:
        if z0 != 0 goto label14;

        if i5 == 931 goto label14;

        if i5 != 304 goto label15;

     label14:
        i7 = staticinvoke <java.lang.ConditionalSpecialCasing: int toLowerCaseEx(java.lang.String,int,java.util.Locale)>(r0, i4, r1);
        goto label16;

     label15:
        i7 = staticinvoke <java.lang.Character: int toLowerCase(int)>(i5);

     label16:
        if i7 == -1 goto label17;

        if i7 < 65536 goto label24;

     label17:
        if i7 != -1 goto label18;

        r3 = staticinvoke <java.lang.ConditionalSpecialCasing: char[] toLowerCaseCharArray(java.lang.String,int,java.util.Locale)>(r0, i4, r1);
        goto label20;

     label18:
        if i6 != 2 goto label19;

        $i15 = i4 + i12;
        $i16 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>(i7, r8, $i15);
        $i17 = $i16 - i6;
        i12 = i12 + $i17;
        goto label25;

     label19:
        r3 = staticinvoke <java.lang.Character: char[] toChars(int)>(i7);

     label20:
        i8 = lengthof r3;
        if i8 <= i6 goto label21;

        $i18 = lengthof r8;
        $i19 = $i18 + i8;
        $i20 = $i19 - i6;
        r4 = newarray (char)[$i20];
        $i21 = i4 + i12;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r4, 0, $i21);
        r8 = r4;

     label21:
        i22 = 0;

     label22:
        if i22 >= i8 goto label23;

        $i23 = i4 + i12;
        $i24 = $i23 + i22;
        $c25 = r3[i22];
        r8[$i24] = $c25;
        i22 = i22 + 1;
        goto label22;

     label23:
        $i26 = i8 - i6;
        i12 = i12 + $i26;
        goto label25;

     label24:
        $i27 = i4 + i12;
        $c28 = (char) i7;
        r8[$i27] = $c28;

     label25:
        i4 = i4 + i6;
        goto label11;

     label26:
        $r11 = new java.lang.String;
        $i29 = i0 + i12;
        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>(r8, 0, $i29);
        return $r11;
    }

    public java.lang.String toLowerCase()
    {
        java.lang.String r0, $r2;
        java.util.Locale $r1;

        r0 := @this: java.lang.String;
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);
        return $r2;
    }

    public java.lang.String toUpperCase(java.util.Locale)
    {
        java.lang.String r0, r9, $r11;
        java.util.Locale r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i24, $i25, $i27;
        boolean z0, $z1;
        char[] r2, r3, $r5, $r6, r7, $r8, $r10;
        java.lang.NullPointerException $r4;
        char $c11, $c12, $c23, $c26;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.util.Locale;
        if r1 != null goto label0;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();
        throw $r4;

     label0:
        $r5 = r0.<java.lang.String: char[] value>;
        i0 = lengthof $r5;
        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $r6 = r0.<java.lang.String: char[] value>;
        i2 = $r6[i1];
        if i2 < 55296 goto label2;

        if i2 > 56319 goto label2;

        i2 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i1);
        i3 = staticinvoke <java.lang.Character: int charCount(int)>(i2);
        goto label3;

     label2:
        i3 = 1;

     label3:
        i4 = staticinvoke <java.lang.Character: int toUpperCaseEx(int)>(i2);
        if i4 == -1 goto label6;

        if i2 == i4 goto label4;

        goto label6;

     label4:
        i1 = i1 + i3;
        goto label1;

     label5:
        return r0;

     label6:
        r7 = newarray (char)[i0];
        i10 = 0;
        $r8 = r0.<java.lang.String: char[] value>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r7, 0, i1);
        r9 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();
        if r9 == "tr" goto label7;

        if r9 == "az" goto label7;

        if r9 != "lt" goto label8;

     label7:
        $z1 = 1;
        goto label9;

     label8:
        $z1 = 0;

     label9:
        z0 = $z1;
        i5 = i1;

     label10:
        if i5 >= i0 goto label25;

        $r10 = r0.<java.lang.String: char[] value>;
        i6 = $r10[i5];
        $c11 = (char) i6;
        if $c11 < 55296 goto label11;

        $c12 = (char) i6;
        if $c12 > 56319 goto label11;

        i6 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i5);
        i7 = staticinvoke <java.lang.Character: int charCount(int)>(i6);
        goto label12;

     label11:
        i7 = 1;

     label12:
        if z0 == 0 goto label13;

        i8 = staticinvoke <java.lang.ConditionalSpecialCasing: int toUpperCaseEx(java.lang.String,int,java.util.Locale)>(r0, i5, r1);
        goto label14;

     label13:
        i8 = staticinvoke <java.lang.Character: int toUpperCaseEx(int)>(i6);

     label14:
        if i8 == -1 goto label15;

        if i8 < 65536 goto label23;

     label15:
        if i8 != -1 goto label17;

        if z0 == 0 goto label16;

        r2 = staticinvoke <java.lang.ConditionalSpecialCasing: char[] toUpperCaseCharArray(java.lang.String,int,java.util.Locale)>(r0, i5, r1);
        goto label19;

     label16:
        r2 = staticinvoke <java.lang.Character: char[] toUpperCaseCharArray(int)>(i6);
        goto label19;

     label17:
        if i7 != 2 goto label18;

        $i13 = i5 + i10;
        $i14 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>(i8, r7, $i13);
        $i15 = $i14 - i7;
        i10 = i10 + $i15;
        goto label24;

     label18:
        r2 = staticinvoke <java.lang.Character: char[] toChars(int)>(i8);

     label19:
        i9 = lengthof r2;
        if i9 <= i7 goto label20;

        $i16 = lengthof r7;
        $i17 = $i16 + i9;
        $i18 = $i17 - i7;
        r3 = newarray (char)[$i18];
        $i19 = i5 + i10;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r3, 0, $i19);
        r7 = r3;

     label20:
        i20 = 0;

     label21:
        if i20 >= i9 goto label22;

        $i21 = i5 + i10;
        $i22 = $i21 + i20;
        $c23 = r2[i20];
        r7[$i22] = $c23;
        i20 = i20 + 1;
        goto label21;

     label22:
        $i24 = i9 - i7;
        i10 = i10 + $i24;
        goto label24;

     label23:
        $i25 = i5 + i10;
        $c26 = (char) i8;
        r7[$i25] = $c26;

     label24:
        i5 = i5 + i7;
        goto label10;

     label25:
        $r11 = new java.lang.String;
        $i27 = i0 + i10;
        specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>(r7, 0, $i27);
        return $r11;
    }

    public java.lang.String toUpperCase()
    {
        java.lang.String r0, $r2;
        java.util.Locale $r1;

        r0 := @this: java.lang.String;
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);
        return $r2;
    }

    public java.lang.String trim()
    {
        java.lang.String r0, $r4;
        int i0, i1, $i3, $i5;
        char[] r1, $r2, $r3;
        char $c2, $c4;

        r0 := @this: java.lang.String;
        $r2 = r0.<java.lang.String: char[] value>;
        i0 = lengthof $r2;
        i1 = 0;
        r1 = r0.<java.lang.String: char[] value>;

     label0:
        if i1 >= i0 goto label1;

        $c2 = r1[i1];
        if $c2 > 32 goto label1;

        i1 = i1 + 1;
        goto label0;

     label1:
        if i1 >= i0 goto label2;

        $i3 = i0 - 1;
        $c4 = r1[$i3];
        if $c4 > 32 goto label2;

        i0 = i0 + -1;
        goto label1;

     label2:
        if i1 > 0 goto label3;

        $r3 = r0.<java.lang.String: char[] value>;
        $i5 = lengthof $r3;
        if i0 >= $i5 goto label4;

     label3:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i0);
        goto label5;

     label4:
        $r4 = r0;

     label5:
        return $r4;
    }

    public java.lang.String toString()
    {
        java.lang.String r0;

        r0 := @this: java.lang.String;
        return r0;
    }

    public char[] toCharArray()
    {
        java.lang.String r0;
        char[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: java.lang.String;
        $r2 = r0.<java.lang.String: char[] value>;
        $i0 = lengthof $r2;
        r1 = newarray (char)[$i0];
        $r3 = r0.<java.lang.String: char[] value>;
        $r4 = r0.<java.lang.String: char[] value>;
        $i1 = lengthof $r4;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i1);
        return r1;
    }

    public static transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r4;
        java.lang.Object[] r1;
        java.util.Formatter $r2, $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.Object[];
        $r2 = new java.util.Formatter;
        specialinvoke $r2.<java.util.Formatter: void <init>()>();
        $r3 = virtualinvoke $r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r0, r1);
        $r4 = virtualinvoke $r3.<java.util.Formatter: java.lang.String toString()>();
        return $r4;
    }

    public static transient java.lang.String format(java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.util.Locale r0;
        java.lang.String r1, $r5;
        java.lang.Object[] r2;
        java.util.Formatter $r3, $r4;

        r0 := @parameter0: java.util.Locale;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.Object[];
        $r3 = new java.util.Formatter;
        specialinvoke $r3.<java.util.Formatter: void <init>(java.util.Locale)>(r0);
        $r4 = virtualinvoke $r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r1, r2);
        $r5 = virtualinvoke $r4.<java.util.Formatter: java.lang.String toString()>();
        return $r5;
    }

    public static java.lang.String valueOf(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;
        if r0 != null goto label0;

        $r1 = "null";
        goto label1;

     label0:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label1:
        return $r1;
    }

    public static java.lang.String valueOf(char[])
    {
        char[] r0;
        java.lang.String $r1;

        r0 := @parameter0: char[];
        $r1 = new java.lang.String;
        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);
        return $r1;
    }

    public static java.lang.String valueOf(char[], int, int)
    {
        char[] r0;
        int i0, i1;
        java.lang.String $r1;

        r0 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = new java.lang.String;
        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r0, i0, i1);
        return $r1;
    }

    public static java.lang.String copyValueOf(char[], int, int)
    {
        char[] r0;
        int i0, i1;
        java.lang.String $r1;

        r0 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = new java.lang.String;
        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r0, i0, i1);
        return $r1;
    }

    public static java.lang.String copyValueOf(char[])
    {
        char[] r0;
        java.lang.String $r1;

        r0 := @parameter0: char[];
        $r1 = new java.lang.String;
        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);
        return $r1;
    }

    public static java.lang.String valueOf(boolean)
    {
        boolean z0;
        java.lang.String $r0;

        z0 := @parameter0: boolean;
        if z0 == 0 goto label0;

        $r0 = "true";
        goto label1;

     label0:
        $r0 = "false";

     label1:
        return $r0;
    }

    public static java.lang.String valueOf(char)
    {
        char c0;
        char[] r0, $r1;
        java.lang.String $r2;

        c0 := @parameter0: char;
        $r1 = newarray (char)[1];
        $r1[0] = c0;
        r0 = $r1;
        $r2 = new java.lang.String;
        specialinvoke $r2.<java.lang.String: void <init>(char[],boolean)>(r0, 1);
        return $r2;
    }

    public static java.lang.String valueOf(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);
        return $r0;
    }

    public static java.lang.String valueOf(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;
        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);
        return $r0;
    }

    public static java.lang.String valueOf(float)
    {
        float f0;
        java.lang.String $r0;

        f0 := @parameter0: float;
        $r0 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);
        return $r0;
    }

    public static java.lang.String valueOf(double)
    {
        double d0;
        java.lang.String $r0;

        d0 := @parameter0: double;
        $r0 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);
        return $r0;
    }

    public native java.lang.String intern();

    int hash32()
    {
        java.lang.String r0;
        int i0, $i1, $i2, i3, $i4;
        char[] $r1, $r2;

        r0 := @this: java.lang.String;
        i0 = r0.<java.lang.String: int hash32>;
        if 0 != i0 goto label2;

        $i1 = <java.lang.String: int HASHING_SEED>;
        $r1 = r0.<java.lang.String: char[] value>;
        $r2 = r0.<java.lang.String: char[] value>;
        $i2 = lengthof $r2;
        i3 = staticinvoke <sun.misc.Hashing: int murmur3_32(int,char[],int,int)>($i1, $r1, 0, $i2);
        if 0 == i3 goto label0;

        $i4 = i3;
        goto label1;

     label0:
        $i4 = 1;

     label1:
        i0 = $i4;
        r0.<java.lang.String: int hash32> = i0;

     label2:
        return i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.lang.String r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.lang.String;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.lang.String) r1;
        $i0 = virtualinvoke r0.<java.lang.String: int compareTo(java.lang.String)>($r2);
        return $i0;
    }

    static void <clinit>()
    {
        long l0, l1, $l8, $l11, $l14, $l15;
        int[] r0, r1, $r4;
        int i2, i3, i4, i5, $i6, $i7, $i9, $i10, $i12, $i13, $i16, i17, $i18, $i19, i20, i21, i22, $i23, $i24, i25, $i26, $i27, $i28, i29, $i30, i31, i32, $i33, i34, i35, $i36, i37;
        java.io.ObjectStreamField[] $r2;
        java.lang.String$CaseInsensitiveComparator $r3;

        $r2 = newarray (java.io.ObjectStreamField)[0];
        <java.lang.String: java.io.ObjectStreamField[] serialPersistentFields> = $r2;
        $r3 = new java.lang.String$CaseInsensitiveComparator;
        specialinvoke $r3.<java.lang.String$CaseInsensitiveComparator: void <init>(java.lang.String$1)>(null);
        <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> = $r3;
        l0 = staticinvoke <java.lang.System: long nanoTime()>();
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r4 = newarray (int)[7];
        $i6 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(class "java/lang/String");
        $r4[0] = $i6;
        $i7 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(class "java/lang/System");
        $r4[1] = $i7;
        $l8 = l0 >>> 32;
        $i9 = (int) $l8;
        $r4[2] = $i9;
        $i10 = (int) l0;
        $r4[3] = $i10;
        $l11 = l1 >>> 32;
        $i12 = (int) $l11;
        $r4[4] = $i12;
        $i13 = (int) l1;
        $r4[5] = $i13;
        $l14 = staticinvoke <java.lang.System: long nanoTime()>();
        $l15 = $l14 >>> 2;
        $i16 = (int) $l15;
        $r4[6] = $i16;
        r0 = $r4;
        i2 = 0;
        r1 = r0;
        i3 = lengthof r1;
        i4 = 0;

     label0:
        if i4 >= i3 goto label1;

        i5 = r1[i4];
        i17 = i5 * -862048943;
        $i18 = i17 << 15;
        $i19 = i17 >>> 17;
        i20 = $i18 | $i19;
        i21 = i20 * 461845907;
        i22 = i2 ^ i21;
        $i23 = i22 << 13;
        $i24 = i22 >>> 19;
        i25 = $i23 | $i24;
        $i26 = i25 * 5;
        i2 = $i26 + -430675100;
        i4 = i4 + 1;
        goto label0;

     label1:
        $i27 = lengthof r0;
        $i28 = $i27 * 4;
        i29 = i2 ^ $i28;
        $i30 = i29 >>> 16;
        i31 = i29 ^ $i30;
        i32 = i31 * -2048144789;
        $i33 = i32 >>> 13;
        i34 = i32 ^ $i33;
        i35 = i34 * -1028477387;
        $i36 = i35 >>> 16;
        i37 = i35 ^ $i36;
        <java.lang.String: int HASHING_SEED> = i37;
        return;
    }
}
