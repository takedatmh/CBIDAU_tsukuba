public class sun.security.krb5.internal.KDCReqBody extends java.lang.Object
{
    public sun.security.krb5.internal.KDCOptions kdcOptions;
    public sun.security.krb5.PrincipalName cname;
    public sun.security.krb5.Realm crealm;
    public sun.security.krb5.PrincipalName sname;
    public sun.security.krb5.internal.KerberosTime 'from';
    public sun.security.krb5.internal.KerberosTime till;
    public sun.security.krb5.internal.KerberosTime rtime;
    public sun.security.krb5.internal.HostAddresses addresses;
    private int nonce;
    private int[] eType;
    private sun.security.krb5.EncryptedData encAuthorizationData;
    private sun.security.krb5.internal.Ticket[] additionalTickets;

    public void <init>(sun.security.krb5.internal.KDCOptions, sun.security.krb5.PrincipalName, sun.security.krb5.Realm, sun.security.krb5.PrincipalName, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, int, int[], sun.security.krb5.internal.HostAddresses, sun.security.krb5.EncryptedData, sun.security.krb5.internal.Ticket[]) throws java.io.IOException
    {
        sun.security.krb5.internal.KDCReqBody r0;
        sun.security.krb5.internal.KDCOptions r1;
        sun.security.krb5.PrincipalName r2, r4;
        sun.security.krb5.Realm r3;
        sun.security.krb5.internal.KerberosTime r5, r6, r7;
        int i0, i1, $i2, $i3;
        int[] r8, $r13;
        sun.security.krb5.internal.HostAddresses r9;
        sun.security.krb5.EncryptedData r10;
        sun.security.krb5.internal.Ticket[] r11, $r14, $r17;
        java.lang.Object $r12, $r19;
        sun.security.krb5.internal.Ticket $r15, $r18, $r20;
        java.io.IOException $r16;

        r0 := @this: sun.security.krb5.internal.KDCReqBody;
        r1 := @parameter0: sun.security.krb5.internal.KDCOptions;
        r2 := @parameter1: sun.security.krb5.PrincipalName;
        r3 := @parameter2: sun.security.krb5.Realm;
        r4 := @parameter3: sun.security.krb5.PrincipalName;
        r5 := @parameter4: sun.security.krb5.internal.KerberosTime;
        r6 := @parameter5: sun.security.krb5.internal.KerberosTime;
        r7 := @parameter6: sun.security.krb5.internal.KerberosTime;
        i0 := @parameter7: int;
        r8 := @parameter8: int[];
        r9 := @parameter9: sun.security.krb5.internal.HostAddresses;
        r10 := @parameter10: sun.security.krb5.EncryptedData;
        r11 := @parameter11: sun.security.krb5.internal.Ticket[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.KDCReqBody: int[] eType> = null;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KDCOptions kdcOptions> = r1;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.PrincipalName cname> = r2;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.Realm crealm> = r3;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.PrincipalName sname> = r4;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime 'from'> = r5;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime till> = r6;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime rtime> = r7;
        r0.<sun.security.krb5.internal.KDCReqBody: int nonce> = i0;
        if r8 == null goto label0;

        $r12 = virtualinvoke r8.<java.lang.Object: java.lang.Object clone()>();
        $r13 = (int[]) $r12;
        r0.<sun.security.krb5.internal.KDCReqBody: int[] eType> = $r13;

     label0:
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.HostAddresses addresses> = r9;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.EncryptedData encAuthorizationData> = r10;
        if r11 == null goto label3;

        $i2 = lengthof r11;
        $r14 = newarray (sun.security.krb5.internal.Ticket)[$i2];
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.Ticket[] additionalTickets> = $r14;
        i1 = 0;

     label1:
        $i3 = lengthof r11;
        if i1 >= $i3 goto label3;

        $r15 = r11[i1];
        if $r15 != null goto label2;

        $r16 = new java.io.IOException;
        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("Cannot create a KDCReqBody");
        throw $r16;

     label2:
        $r17 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.Ticket[] additionalTickets>;
        $r18 = r11[i1];
        $r19 = virtualinvoke $r18.<sun.security.krb5.internal.Ticket: java.lang.Object clone()>();
        $r20 = (sun.security.krb5.internal.Ticket) $r19;
        $r17[i1] = $r20;
        i1 = i1 + 1;
        goto label1;

     label3:
        return;
    }

    public void <init>(sun.security.util.DerValue, int) throws sun.security.krb5.Asn1Exception, sun.security.krb5.RealmException, sun.security.krb5.KrbException, java.io.IOException
    {
        sun.security.krb5.internal.KDCReqBody r0;
        sun.security.util.DerValue r1, r2, r4, r27, r50, r52, $r56;
        int i0, i1, $i5, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i20, $i21, $i22, $i23;
        java.util.Vector r3, $r28, $r47, r48;
        byte $b2, $b3, $b4, $b6, $b7, $b8, $b17, $b18, $b19;
        sun.security.krb5.Asn1Exception $r5, $r11, $r25, $r38, $r39, $r57, $r60, $r62;
        sun.security.util.DerInputStream $r6, $r8, $r12, $r14, $r16, $r18, $r20, $r22, $r23, $r26, $r29, $r30, $r31, $r40, $r41, $r43, $r44, $r46, $r49, $r51, $r53, $r55, $r61;
        sun.security.krb5.internal.KDCOptions $r7;
        sun.security.krb5.PrincipalName $r9, $r10, $r15;
        sun.security.krb5.Realm $r13;
        sun.security.krb5.internal.KerberosTime $r17, $r19, $r21;
        java.math.BigInteger $r24, $r32;
        java.lang.Integer $r33, $r37;
        int[] $r34, $r35;
        java.lang.Object $r36;
        sun.security.krb5.internal.HostAddresses $r42;
        sun.security.krb5.EncryptedData $r45;
        sun.security.krb5.internal.Ticket $r54;
        sun.security.krb5.internal.Ticket[] $r58, $r59;

        r0 := @this: sun.security.krb5.internal.KDCReqBody;
        r1 := @parameter0: sun.security.util.DerValue;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.internal.KDCReqBody: int[] eType> = null;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.HostAddresses addresses> = null;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.EncryptedData encAuthorizationData> = null;
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.Ticket[] additionalTickets> = null;
        $b2 = virtualinvoke r1.<sun.security.util.DerValue: byte getTag()>();
        if $b2 == 48 goto label0;

        $r5 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r5.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r5;

     label0:
        $r6 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r7 = staticinvoke <sun.security.krb5.internal.KDCOptions: sun.security.krb5.internal.KDCOptions parse(sun.security.util.DerInputStream,byte,boolean)>($r6, 0, 0);
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KDCOptions kdcOptions> = $r7;
        $r8 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r9 = staticinvoke <sun.security.krb5.PrincipalName: sun.security.krb5.PrincipalName parse(sun.security.util.DerInputStream,byte,boolean)>($r8, 1, 1);
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.PrincipalName cname> = $r9;
        if i0 == 10 goto label1;

        $r10 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.PrincipalName cname>;
        if $r10 == null goto label1;

        $r11 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r11.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r11;

     label1:
        $r12 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r13 = staticinvoke <sun.security.krb5.Realm: sun.security.krb5.Realm parse(sun.security.util.DerInputStream,byte,boolean)>($r12, 2, 0);
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.Realm crealm> = $r13;
        $r14 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r15 = staticinvoke <sun.security.krb5.PrincipalName: sun.security.krb5.PrincipalName parse(sun.security.util.DerInputStream,byte,boolean)>($r14, 3, 1);
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.PrincipalName sname> = $r15;
        $r16 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r17 = staticinvoke <sun.security.krb5.internal.KerberosTime: sun.security.krb5.internal.KerberosTime parse(sun.security.util.DerInputStream,byte,boolean)>($r16, 4, 1);
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime 'from'> = $r17;
        $r18 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r19 = staticinvoke <sun.security.krb5.internal.KerberosTime: sun.security.krb5.internal.KerberosTime parse(sun.security.util.DerInputStream,byte,boolean)>($r18, 5, 0);
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime till> = $r19;
        $r20 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r21 = staticinvoke <sun.security.krb5.internal.KerberosTime: sun.security.krb5.internal.KerberosTime parse(sun.security.util.DerInputStream,byte,boolean)>($r20, 6, 1);
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime rtime> = $r21;
        $r22 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r2 = virtualinvoke $r22.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b3 = virtualinvoke r2.<sun.security.util.DerValue: byte getTag()>();
        $b4 = $b3 & 31;
        if $b4 != 7 goto label2;

        $r23 = virtualinvoke r2.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r24 = virtualinvoke $r23.<sun.security.util.DerInputStream: java.math.BigInteger getBigInteger()>();
        $i5 = virtualinvoke $r24.<java.math.BigInteger: int intValue()>();
        r0.<sun.security.krb5.internal.KDCReqBody: int nonce> = $i5;
        goto label3;

     label2:
        $r25 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r25.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r25;

     label3:
        $r26 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r27 = virtualinvoke $r26.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r28 = new java.util.Vector;
        specialinvoke $r28.<java.util.Vector: void <init>()>();
        r3 = $r28;
        $b6 = virtualinvoke r27.<sun.security.util.DerValue: byte getTag()>();
        $b7 = $b6 & 31;
        if $b7 != 8 goto label9;

        $r29 = virtualinvoke r27.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r4 = virtualinvoke $r29.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b8 = virtualinvoke r4.<sun.security.util.DerValue: byte getTag()>();
        if $b8 != 48 goto label8;

     label4:
        $r30 = virtualinvoke r4.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i9 = virtualinvoke $r30.<sun.security.util.DerInputStream: int available()>();
        if $i9 <= 0 goto label5;

        $r31 = virtualinvoke r4.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r32 = virtualinvoke $r31.<sun.security.util.DerInputStream: java.math.BigInteger getBigInteger()>();
        $i10 = virtualinvoke $r32.<java.math.BigInteger: int intValue()>();
        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);
        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>($r33);
        goto label4;

     label5:
        $i11 = virtualinvoke r3.<java.util.Vector: int size()>();
        $r34 = newarray (int)[$i11];
        r0.<sun.security.krb5.internal.KDCReqBody: int[] eType> = $r34;
        i1 = 0;

     label6:
        $i12 = virtualinvoke r3.<java.util.Vector: int size()>();
        if i1 >= $i12 goto label7;

        $r35 = r0.<sun.security.krb5.internal.KDCReqBody: int[] eType>;
        $r36 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);
        $r37 = (java.lang.Integer) $r36;
        $i13 = virtualinvoke $r37.<java.lang.Integer: int intValue()>();
        $r35[i1] = $i13;
        i1 = i1 + 1;
        goto label6;

     label7:
        goto label10;

     label8:
        $r38 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r38.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r38;

     label9:
        $r39 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r39.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r39;

     label10:
        $r40 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i14 = virtualinvoke $r40.<sun.security.util.DerInputStream: int available()>();
        if $i14 <= 0 goto label11;

        $r41 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r42 = staticinvoke <sun.security.krb5.internal.HostAddresses: sun.security.krb5.internal.HostAddresses parse(sun.security.util.DerInputStream,byte,boolean)>($r41, 9, 1);
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.HostAddresses addresses> = $r42;

     label11:
        $r43 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i15 = virtualinvoke $r43.<sun.security.util.DerInputStream: int available()>();
        if $i15 <= 0 goto label12;

        $r44 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r45 = staticinvoke <sun.security.krb5.EncryptedData: sun.security.krb5.EncryptedData parse(sun.security.util.DerInputStream,byte,boolean)>($r44, 10, 1);
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.EncryptedData encAuthorizationData> = $r45;

     label12:
        $r46 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i16 = virtualinvoke $r46.<sun.security.util.DerInputStream: int available()>();
        if $i16 <= 0 goto label17;

        $r47 = new java.util.Vector;
        specialinvoke $r47.<java.util.Vector: void <init>()>();
        r48 = $r47;
        $r49 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r50 = virtualinvoke $r49.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b17 = virtualinvoke r50.<sun.security.util.DerValue: byte getTag()>();
        $b18 = $b17 & 31;
        if $b18 != 11 goto label16;

        $r51 = virtualinvoke r50.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        r52 = virtualinvoke $r51.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $b19 = virtualinvoke r52.<sun.security.util.DerValue: byte getTag()>();
        if $b19 != 48 goto label14;

     label13:
        $r53 = virtualinvoke r52.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i20 = virtualinvoke $r53.<sun.security.util.DerInputStream: int available()>();
        if $i20 <= 0 goto label15;

        $r54 = new sun.security.krb5.internal.Ticket;
        $r55 = virtualinvoke r52.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $r56 = virtualinvoke $r55.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        specialinvoke $r54.<sun.security.krb5.internal.Ticket: void <init>(sun.security.util.DerValue)>($r56);
        virtualinvoke r48.<java.util.Vector: void addElement(java.lang.Object)>($r54);
        goto label13;

     label14:
        $r57 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r57.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r57;

     label15:
        $i21 = virtualinvoke r48.<java.util.Vector: int size()>();
        if $i21 <= 0 goto label17;

        $i22 = virtualinvoke r48.<java.util.Vector: int size()>();
        $r58 = newarray (sun.security.krb5.internal.Ticket)[$i22];
        r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.Ticket[] additionalTickets> = $r58;
        $r59 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.Ticket[] additionalTickets>;
        virtualinvoke r48.<java.util.Vector: void copyInto(java.lang.Object[])>($r59);
        goto label17;

     label16:
        $r60 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r60.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r60;

     label17:
        $r61 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>();
        $i23 = virtualinvoke $r61.<sun.security.util.DerInputStream: int available()>();
        if $i23 <= 0 goto label18;

        $r62 = new sun.security.krb5.Asn1Exception;
        specialinvoke $r62.<sun.security.krb5.Asn1Exception: void <init>(int)>(906);
        throw $r62;

     label18:
        return;
    }

    public byte[] asn1Encode(int) throws sun.security.krb5.Asn1Exception, java.io.IOException
    {
        sun.security.krb5.internal.KDCReqBody r0;
        int i0, i1, i2, $i10, $i13, $i14, $i19, $i20, $i22;
        java.util.Vector $r1, r2;
        sun.security.util.DerOutputStream r3, $r29, $r33, r34, $r38, r39, $r52, r53, $r58, r59, $r63, r64;
        sun.security.util.DerValue $r4, $r8, $r11, $r15, $r19, $r22, $r26, $r31, $r40, $r43, $r47, $r60;
        byte $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b12, $b16, $b17, $b18, $b21;
        sun.security.krb5.internal.KDCOptions $r5;
        byte[] $r6, $r10, $r13, $r17, $r21, $r24, $r28, $r32, $r41, $r45, $r49, $r57, $r61, $r65;
        sun.security.krb5.PrincipalName $r7, $r9, $r14, $r16;
        sun.security.krb5.Realm $r12;
        sun.security.krb5.internal.KerberosTime $r18, $r20, $r23, $r25, $r27;
        long $l11, $l15;
        java.math.BigInteger $r30, $r37;
        int[] $r35, $r36;
        sun.security.krb5.internal.HostAddresses $r42, $r44;
        sun.security.krb5.EncryptedData $r46, $r48;
        sun.security.krb5.internal.Ticket[] $r50, $r51, $r54, $r55;
        sun.security.krb5.internal.Ticket $r56;
        sun.security.util.DerValue[] r62;

        r0 := @this: sun.security.krb5.internal.KDCReqBody;
        i0 := @parameter0: int;
        $r1 = new java.util.Vector;
        specialinvoke $r1.<java.util.Vector: void <init>()>();
        r2 = $r1;
        $r4 = new sun.security.util.DerValue;
        $b3 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 0);
        $r5 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KDCOptions kdcOptions>;
        $r6 = virtualinvoke $r5.<sun.security.krb5.internal.KDCOptions: byte[] asn1Encode()>();
        specialinvoke $r4.<sun.security.util.DerValue: void <init>(byte,byte[])>($b3, $r6);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r4);
        if i0 != 10 goto label0;

        $r7 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.PrincipalName cname>;
        if $r7 == null goto label0;

        $r8 = new sun.security.util.DerValue;
        $b4 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 1);
        $r9 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.PrincipalName cname>;
        $r10 = virtualinvoke $r9.<sun.security.krb5.PrincipalName: byte[] asn1Encode()>();
        specialinvoke $r8.<sun.security.util.DerValue: void <init>(byte,byte[])>($b4, $r10);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r8);

     label0:
        $r11 = new sun.security.util.DerValue;
        $b5 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 2);
        $r12 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.Realm crealm>;
        $r13 = virtualinvoke $r12.<sun.security.krb5.Realm: byte[] asn1Encode()>();
        specialinvoke $r11.<sun.security.util.DerValue: void <init>(byte,byte[])>($b5, $r13);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r11);
        $r14 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.PrincipalName sname>;
        if $r14 == null goto label1;

        $r15 = new sun.security.util.DerValue;
        $b6 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 3);
        $r16 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.PrincipalName sname>;
        $r17 = virtualinvoke $r16.<sun.security.krb5.PrincipalName: byte[] asn1Encode()>();
        specialinvoke $r15.<sun.security.util.DerValue: void <init>(byte,byte[])>($b6, $r17);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r15);

     label1:
        $r18 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime 'from'>;
        if $r18 == null goto label2;

        $r19 = new sun.security.util.DerValue;
        $b7 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 4);
        $r20 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime 'from'>;
        $r21 = virtualinvoke $r20.<sun.security.krb5.internal.KerberosTime: byte[] asn1Encode()>();
        specialinvoke $r19.<sun.security.util.DerValue: void <init>(byte,byte[])>($b7, $r21);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r19);

     label2:
        $r22 = new sun.security.util.DerValue;
        $b8 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 5);
        $r23 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime till>;
        $r24 = virtualinvoke $r23.<sun.security.krb5.internal.KerberosTime: byte[] asn1Encode()>();
        specialinvoke $r22.<sun.security.util.DerValue: void <init>(byte,byte[])>($b8, $r24);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r22);
        $r25 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime rtime>;
        if $r25 == null goto label3;

        $r26 = new sun.security.util.DerValue;
        $b9 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 6);
        $r27 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.KerberosTime rtime>;
        $r28 = virtualinvoke $r27.<sun.security.krb5.internal.KerberosTime: byte[] asn1Encode()>();
        specialinvoke $r26.<sun.security.util.DerValue: void <init>(byte,byte[])>($b9, $r28);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r26);

     label3:
        $r29 = new sun.security.util.DerOutputStream;
        specialinvoke $r29.<sun.security.util.DerOutputStream: void <init>()>();
        r3 = $r29;
        $i10 = r0.<sun.security.krb5.internal.KDCReqBody: int nonce>;
        $l11 = (long) $i10;
        $r30 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l11);
        virtualinvoke r3.<sun.security.util.DerOutputStream: void putInteger(java.math.BigInteger)>($r30);
        $r31 = new sun.security.util.DerValue;
        $b12 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 7);
        $r32 = virtualinvoke r3.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        specialinvoke $r31.<sun.security.util.DerValue: void <init>(byte,byte[])>($b12, $r32);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r31);
        $r33 = new sun.security.util.DerOutputStream;
        specialinvoke $r33.<sun.security.util.DerOutputStream: void <init>()>();
        r34 = $r33;
        i1 = 0;

     label4:
        $r35 = r0.<sun.security.krb5.internal.KDCReqBody: int[] eType>;
        $i13 = lengthof $r35;
        if i1 >= $i13 goto label5;

        $r36 = r0.<sun.security.krb5.internal.KDCReqBody: int[] eType>;
        $i14 = $r36[i1];
        $l15 = (long) $i14;
        $r37 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l15);
        virtualinvoke r34.<sun.security.util.DerOutputStream: void putInteger(java.math.BigInteger)>($r37);
        i1 = i1 + 1;
        goto label4;

     label5:
        $r38 = new sun.security.util.DerOutputStream;
        specialinvoke $r38.<sun.security.util.DerOutputStream: void <init>()>();
        r39 = $r38;
        virtualinvoke r39.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r34);
        $r40 = new sun.security.util.DerValue;
        $b16 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 8);
        $r41 = virtualinvoke r39.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        specialinvoke $r40.<sun.security.util.DerValue: void <init>(byte,byte[])>($b16, $r41);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r40);
        $r42 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.HostAddresses addresses>;
        if $r42 == null goto label6;

        $r43 = new sun.security.util.DerValue;
        $b17 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 9);
        $r44 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.HostAddresses addresses>;
        $r45 = virtualinvoke $r44.<sun.security.krb5.internal.HostAddresses: byte[] asn1Encode()>();
        specialinvoke $r43.<sun.security.util.DerValue: void <init>(byte,byte[])>($b17, $r45);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r43);

     label6:
        $r46 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.EncryptedData encAuthorizationData>;
        if $r46 == null goto label7;

        $r47 = new sun.security.util.DerValue;
        $b18 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 10);
        $r48 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.EncryptedData encAuthorizationData>;
        $r49 = virtualinvoke $r48.<sun.security.krb5.EncryptedData: byte[] asn1Encode()>();
        specialinvoke $r47.<sun.security.util.DerValue: void <init>(byte,byte[])>($b18, $r49);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r47);

     label7:
        $r50 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.Ticket[] additionalTickets>;
        if $r50 == null goto label10;

        $r51 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.Ticket[] additionalTickets>;
        $i19 = lengthof $r51;
        if $i19 <= 0 goto label10;

        $r52 = new sun.security.util.DerOutputStream;
        specialinvoke $r52.<sun.security.util.DerOutputStream: void <init>()>();
        r53 = $r52;
        i2 = 0;

     label8:
        $r54 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.Ticket[] additionalTickets>;
        $i20 = lengthof $r54;
        if i2 >= $i20 goto label9;

        $r55 = r0.<sun.security.krb5.internal.KDCReqBody: sun.security.krb5.internal.Ticket[] additionalTickets>;
        $r56 = $r55[i2];
        $r57 = virtualinvoke $r56.<sun.security.krb5.internal.Ticket: byte[] asn1Encode()>();
        virtualinvoke r53.<sun.security.util.DerOutputStream: void write(byte[])>($r57);
        i2 = i2 + 1;
        goto label8;

     label9:
        $r58 = new sun.security.util.DerOutputStream;
        specialinvoke $r58.<sun.security.util.DerOutputStream: void <init>()>();
        r59 = $r58;
        virtualinvoke r59.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r53);
        $r60 = new sun.security.util.DerValue;
        $b21 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 11);
        $r61 = virtualinvoke r59.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        specialinvoke $r60.<sun.security.util.DerValue: void <init>(byte,byte[])>($b21, $r61);
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r60);

     label10:
        $i22 = virtualinvoke r2.<java.util.Vector: int size()>();
        r62 = newarray (sun.security.util.DerValue)[$i22];
        virtualinvoke r2.<java.util.Vector: void copyInto(java.lang.Object[])>(r62);
        $r63 = new sun.security.util.DerOutputStream;
        specialinvoke $r63.<sun.security.util.DerOutputStream: void <init>()>();
        r64 = $r63;
        virtualinvoke r64.<sun.security.util.DerOutputStream: void putSequence(sun.security.util.DerValue[])>(r62);
        $r65 = virtualinvoke r64.<sun.security.util.DerOutputStream: byte[] toByteArray()>();
        return $r65;
    }

    public int getNonce()
    {
        sun.security.krb5.internal.KDCReqBody r0;
        int $i0;

        r0 := @this: sun.security.krb5.internal.KDCReqBody;
        $i0 = r0.<sun.security.krb5.internal.KDCReqBody: int nonce>;
        return $i0;
    }
}
