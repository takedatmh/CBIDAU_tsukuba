final class java.beans.PropertyChangeSupport$PropertyChangeListenerMap extends java.beans.ChangeListenerMap
{
    private static final java.beans.PropertyChangeListener[] EMPTY;

    private void <init>()
    {
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap r0;

        r0 := @this: java.beans.PropertyChangeSupport$PropertyChangeListenerMap;
        specialinvoke r0.<java.beans.ChangeListenerMap: void <init>()>();
        return;
    }

    protected java.beans.PropertyChangeListener[] newArray(int)
    {
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap r0;
        int i0;
        java.beans.PropertyChangeListener[] $r1;

        r0 := @this: java.beans.PropertyChangeSupport$PropertyChangeListenerMap;
        i0 := @parameter0: int;
        if 0 >= i0 goto label0;

        $r1 = newarray (java.beans.PropertyChangeListener)[i0];
        goto label1;

     label0:
        $r1 = <java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.beans.PropertyChangeListener[] EMPTY>;

     label1:
        return $r1;
    }

    protected java.beans.PropertyChangeListener newProxy(java.lang.String, java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap r0;
        java.lang.String r1;
        java.beans.PropertyChangeListener r2;
        java.beans.PropertyChangeListenerProxy $r3;

        r0 := @this: java.beans.PropertyChangeSupport$PropertyChangeListenerMap;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.beans.PropertyChangeListener;
        $r3 = new java.beans.PropertyChangeListenerProxy;
        specialinvoke $r3.<java.beans.PropertyChangeListenerProxy: void <init>(java.lang.String,java.beans.PropertyChangeListener)>(r1, r2);
        return $r3;
    }

    public final java.beans.PropertyChangeListener extract(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap r0;
        java.beans.PropertyChangeListener r1;
        boolean $z0;
        java.beans.PropertyChangeListenerProxy $r2;
        java.util.EventListener $r3;

        r0 := @this: java.beans.PropertyChangeSupport$PropertyChangeListenerMap;
        r1 := @parameter0: java.beans.PropertyChangeListener;

     label0:
        $z0 = r1 instanceof java.beans.PropertyChangeListenerProxy;
        if $z0 == 0 goto label1;

        $r2 = (java.beans.PropertyChangeListenerProxy) r1;
        $r3 = virtualinvoke $r2.<java.beans.PropertyChangeListenerProxy: java.util.EventListener getListener()>();
        r1 = (java.beans.PropertyChangeListener) $r3;
        goto label0;

     label1:
        return r1;
    }

    public volatile java.util.EventListener extract(java.util.EventListener)
    {
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap r0;
        java.util.EventListener r1;
        java.beans.PropertyChangeListener $r2, $r3;

        r0 := @this: java.beans.PropertyChangeSupport$PropertyChangeListenerMap;
        r1 := @parameter0: java.util.EventListener;
        $r2 = (java.beans.PropertyChangeListener) r1;
        $r3 = virtualinvoke r0.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.beans.PropertyChangeListener extract(java.beans.PropertyChangeListener)>($r2);
        return $r3;
    }

    protected volatile java.util.EventListener newProxy(java.lang.String, java.util.EventListener)
    {
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap r0;
        java.lang.String r1;
        java.util.EventListener r2;
        java.beans.PropertyChangeListener $r3, $r4;

        r0 := @this: java.beans.PropertyChangeSupport$PropertyChangeListenerMap;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.EventListener;
        $r3 = (java.beans.PropertyChangeListener) r2;
        $r4 = virtualinvoke r0.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.beans.PropertyChangeListener newProxy(java.lang.String,java.beans.PropertyChangeListener)>(r1, $r3);
        return $r4;
    }

    protected volatile java.util.EventListener[] newArray(int)
    {
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap r0;
        int i0;
        java.beans.PropertyChangeListener[] $r1;

        r0 := @this: java.beans.PropertyChangeSupport$PropertyChangeListenerMap;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.beans.PropertyChangeListener[] newArray(int)>(i0);
        return $r1;
    }

    void <init>(java.beans.PropertyChangeSupport$1)
    {
        java.beans.PropertyChangeSupport$PropertyChangeListenerMap r0;
        java.beans.PropertyChangeSupport$1 r1;

        r0 := @this: java.beans.PropertyChangeSupport$PropertyChangeListenerMap;
        r1 := @parameter0: java.beans.PropertyChangeSupport$1;
        specialinvoke r0.<java.beans.PropertyChangeSupport$PropertyChangeListenerMap: void <init>()>();
        return;
    }

    static void <clinit>()
    {
        java.beans.PropertyChangeListener[] $r0;

        $r0 = newarray (java.beans.PropertyChangeListener)[0];
        <java.beans.PropertyChangeSupport$PropertyChangeListenerMap: java.beans.PropertyChangeListener[] EMPTY> = $r0;
        return;
    }
}
