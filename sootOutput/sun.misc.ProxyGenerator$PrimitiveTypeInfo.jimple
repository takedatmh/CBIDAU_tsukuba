class sun.misc.ProxyGenerator$PrimitiveTypeInfo extends java.lang.Object
{
    public java.lang.String baseTypeString;
    public java.lang.String wrapperClassName;
    public java.lang.String wrapperValueOfDesc;
    public java.lang.String unwrapMethodName;
    public java.lang.String unwrapMethodDesc;
    private static java.util.Map table;
    static final boolean $assertionsDisabled;

    private static void add(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1;
        java.util.Map $r2;
        sun.misc.ProxyGenerator$PrimitiveTypeInfo $r3;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.Class;
        $r2 = <sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.util.Map table>;
        $r3 = new sun.misc.ProxyGenerator$PrimitiveTypeInfo;
        specialinvoke $r3.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: void <init>(java.lang.Class,java.lang.Class)>(r0, r1);
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);
        return;
    }

    private void <init>(java.lang.Class, java.lang.Class)
    {
        sun.misc.ProxyGenerator$PrimitiveTypeInfo r0;
        java.lang.Class r1, r2, $r5;
        boolean $z0, $z1;
        java.lang.AssertionError $r3;
        java.lang.Object $r4;
        java.lang.String $r6, $r7, $r8, $r9, $r12, $r15, $r18, $r20, $r23, $r26, $r28;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r21, $r22, $r24, $r25, $r27;

        r0 := @this: sun.misc.ProxyGenerator$PrimitiveTypeInfo;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.Class;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $z0 = <sun.misc.ProxyGenerator$PrimitiveTypeInfo: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $z1 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();
        if $z1 != 0 goto label0;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        throw $r3;

     label0:
        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, 0);
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(1);
        r0.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String baseTypeString> = $r7;
        $r8 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();
        $r9 = staticinvoke <sun.misc.ProxyGenerator: java.lang.String access$000(java.lang.String)>($r8);
        r0.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String wrapperClassName> = $r9;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
        $r12 = r0.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String baseTypeString>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")L");
        $r15 = r0.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String wrapperClassName>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String wrapperValueOfDesc> = $r18;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String unwrapMethodName> = $r23;
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()");
        $r26 = r0.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String baseTypeString>;
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String unwrapMethodDesc> = $r28;
        return;
    }

    public static sun.misc.ProxyGenerator$PrimitiveTypeInfo get(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        sun.misc.ProxyGenerator$PrimitiveTypeInfo $r3;

        r0 := @parameter0: java.lang.Class;
        $r1 = <sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.util.Map table>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        $r3 = (sun.misc.ProxyGenerator$PrimitiveTypeInfo) $r2;
        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1;
        java.util.HashMap $r1;

        $r0 = class "sun/misc/ProxyGenerator";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <sun.misc.ProxyGenerator$PrimitiveTypeInfo: boolean $assertionsDisabled> = $z1;
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        <sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.util.Map table> = $r1;
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;
        staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: void add(java.lang.Class,java.lang.Class)>($r2, class "java/lang/Byte");
        $r3 = <java.lang.Character: java.lang.Class TYPE>;
        staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: void add(java.lang.Class,java.lang.Class)>($r3, class "java/lang/Character");
        $r4 = <java.lang.Double: java.lang.Class TYPE>;
        staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: void add(java.lang.Class,java.lang.Class)>($r4, class "java/lang/Double");
        $r5 = <java.lang.Float: java.lang.Class TYPE>;
        staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: void add(java.lang.Class,java.lang.Class)>($r5, class "java/lang/Float");
        $r6 = <java.lang.Integer: java.lang.Class TYPE>;
        staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: void add(java.lang.Class,java.lang.Class)>($r6, class "java/lang/Integer");
        $r7 = <java.lang.Long: java.lang.Class TYPE>;
        staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: void add(java.lang.Class,java.lang.Class)>($r7, class "java/lang/Long");
        $r8 = <java.lang.Short: java.lang.Class TYPE>;
        staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: void add(java.lang.Class,java.lang.Class)>($r8, class "java/lang/Short");
        $r9 = <java.lang.Boolean: java.lang.Class TYPE>;
        staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: void add(java.lang.Class,java.lang.Class)>($r9, class "java/lang/Boolean");
        return;
    }
}
