public class org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler extends java.lang.Object implements org.apache.tomcat.util.net.SecureNioChannel$ApplicationBufferHandler
{
    protected java.nio.ByteBuffer readbuf;
    protected java.nio.ByteBuffer writebuf;

    public void <init>(int, int, boolean)
    {
        org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler r0;
        int i0, i1;
        boolean z0;
        java.nio.ByteBuffer $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler: java.nio.ByteBuffer readbuf> = null;
        r0.<org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler: java.nio.ByteBuffer writebuf> = null;
        if z0 == 0 goto label0;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(i0);
        r0.<org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler: java.nio.ByteBuffer readbuf> = $r1;
        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(i1);
        r0.<org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler: java.nio.ByteBuffer writebuf> = $r2;
        goto label1;

     label0:
        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);
        r0.<org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler: java.nio.ByteBuffer readbuf> = $r3;
        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i1);
        r0.<org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler: java.nio.ByteBuffer writebuf> = $r4;

     label1:
        return;
    }

    public java.nio.ByteBuffer expand(java.nio.ByteBuffer, int)
    {
        org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler r0;
        java.nio.ByteBuffer r1;
        int i0;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler;
        r1 := @parameter0: java.nio.ByteBuffer;
        i0 := @parameter1: int;
        return r1;
    }

    public java.nio.ByteBuffer getReadBuffer()
    {
        org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler;
        $r1 = r0.<org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler: java.nio.ByteBuffer readbuf>;
        return $r1;
    }

    public java.nio.ByteBuffer getWriteBuffer()
    {
        org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler;
        $r1 = r0.<org.apache.tomcat.util.net.NioEndpoint$NioBufferHandler: java.nio.ByteBuffer writebuf>;
        return $r1;
    }
}
