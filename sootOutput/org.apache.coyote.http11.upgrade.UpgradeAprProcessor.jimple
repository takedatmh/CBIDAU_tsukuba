public class org.apache.coyote.http11.upgrade.UpgradeAprProcessor extends org.apache.coyote.http11.upgrade.UpgradeProcessor
{
    private final long socket;

    public void <init>(org.apache.tomcat.util.net.SocketWrapper, org.apache.coyote.http11.upgrade.UpgradeInbound)
    {
        org.apache.coyote.http11.upgrade.UpgradeAprProcessor r0;
        org.apache.tomcat.util.net.SocketWrapper r1;
        org.apache.coyote.http11.upgrade.UpgradeInbound r2;
        java.lang.Object $r3, $r5;
        java.lang.Long $r4, $r6;
        long $l0, $l2, $l4;
        int $i1;

        r0 := @this: org.apache.coyote.http11.upgrade.UpgradeAprProcessor;
        r1 := @parameter0: org.apache.tomcat.util.net.SocketWrapper;
        r2 := @parameter1: org.apache.coyote.http11.upgrade.UpgradeInbound;
        specialinvoke r0.<org.apache.coyote.http11.upgrade.UpgradeProcessor: void <init>(org.apache.coyote.http11.upgrade.UpgradeInbound)>(r2);
        $r3 = virtualinvoke r1.<org.apache.tomcat.util.net.SocketWrapper: java.lang.Object getSocket()>();
        $r4 = (java.lang.Long) $r3;
        $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();
        $i1 = interfaceinvoke r2.<org.apache.coyote.http11.upgrade.UpgradeInbound: int getReadTimeout()>();
        $l2 = (long) $i1;
        staticinvoke <org.apache.tomcat.jni.Socket: int timeoutSet(long,long)>($l0, $l2);
        $r5 = virtualinvoke r1.<org.apache.tomcat.util.net.SocketWrapper: java.lang.Object getSocket()>();
        $r6 = (java.lang.Long) $r5;
        $l4 = virtualinvoke $r6.<java.lang.Long: long longValue()>();
        r0.<org.apache.coyote.http11.upgrade.UpgradeAprProcessor: long socket> = $l4;
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.UpgradeAprProcessor r0;

        r0 := @this: org.apache.coyote.http11.upgrade.UpgradeAprProcessor;
        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.UpgradeAprProcessor r0;
        int i0, i1, $i4;
        long $l2;
        byte[] $r1;
        byte $b3;
        java.io.IOException $r2;
        org.apache.tomcat.util.res.StringManager $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.coyote.http11.upgrade.UpgradeAprProcessor;
        i0 := @parameter0: int;
        $l2 = r0.<org.apache.coyote.http11.upgrade.UpgradeAprProcessor: long socket>;
        $r1 = newarray (byte)[1];
        $b3 = (byte) i0;
        $r1[0] = $b3;
        i1 = staticinvoke <org.apache.tomcat.jni.Socket: int send(long,byte[],int,int)>($l2, $r1, 0, 1);
        if i1 == 1 goto label0;

        $r2 = new java.io.IOException;
        $r3 = <org.apache.coyote.http11.upgrade.UpgradeAprProcessor: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = newarray (java.lang.Object)[1];
        $i4 = neg i1;
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        $r4[0] = $r5;
        $r6 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("apr.write.error", $r4);
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);
        throw $r2;

     label0:
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.UpgradeAprProcessor r0;
        byte[] r1;
        int i0, i1, i2, $i4;
        long $l3;
        java.io.IOException $r2;
        org.apache.tomcat.util.res.StringManager $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.coyote.http11.upgrade.UpgradeAprProcessor;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $l3 = r0.<org.apache.coyote.http11.upgrade.UpgradeAprProcessor: long socket>;
        i2 = staticinvoke <org.apache.tomcat.jni.Socket: int send(long,byte[],int,int)>($l3, r1, i0, i1);
        if i2 == i1 goto label0;

        $r2 = new java.io.IOException;
        $r3 = <org.apache.coyote.http11.upgrade.UpgradeAprProcessor: org.apache.tomcat.util.res.StringManager sm>;
        $r4 = newarray (java.lang.Object)[1];
        $i4 = neg i2;
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        $r4[0] = $r5;
        $r6 = virtualinvoke $r3.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("apr.write.error", $r4);
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);
        throw $r2;

     label0:
        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.UpgradeAprProcessor r0;
        byte[] r1;
        int i0;
        long $l1;
        byte $b2;
        short $s3;

        r0 := @this: org.apache.coyote.http11.upgrade.UpgradeAprProcessor;
        r1 = newarray (byte)[1];
        $l1 = r0.<org.apache.coyote.http11.upgrade.UpgradeAprProcessor: long socket>;
        i0 = staticinvoke <org.apache.tomcat.jni.Socket: int recv(long,byte[],int,int)>($l1, r1, 0, 1);
        if i0 != -1 goto label0;

        return -1;

     label0:
        $b2 = r1[0];
        $s3 = $b2 & 255;
        return $s3;
    }

    public int read(boolean, byte[], int, int) throws java.io.IOException
    {
        org.apache.coyote.http11.upgrade.UpgradeAprProcessor r0;
        boolean z0;
        byte[] r1;
        int i0, i1, i2, i3, $i9, $i12;
        java.lang.Throwable r2, $r8;
        long $l4, $l6, $l7, $l10, $l13;
        java.io.IOException $r3;
        org.apache.tomcat.util.res.StringManager $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.coyote.http11.upgrade.UpgradeAprProcessor;
        z0 := @parameter0: boolean;
        r1 := @parameter1: byte[];
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        if z0 != 0 goto label0;

        $l4 = r0.<org.apache.coyote.http11.upgrade.UpgradeAprProcessor: long socket>;
        staticinvoke <org.apache.tomcat.jni.Socket: int optSet(long,int,int)>($l4, 8, -1);

     label0:
        $l6 = r0.<org.apache.coyote.http11.upgrade.UpgradeAprProcessor: long socket>;
        i2 = staticinvoke <org.apache.tomcat.jni.Socket: int recv(long,byte[],int,int)>($l6, r1, i0, i1);
        if i2 <= 0 goto label3;

        i3 = i2;

     label1:
        if z0 != 0 goto label2;

        $l7 = r0.<org.apache.coyote.http11.upgrade.UpgradeAprProcessor: long socket>;
        staticinvoke <org.apache.tomcat.jni.Socket: int optSet(long,int,int)>($l7, 8, 0);

     label2:
        return i3;

     label3:
        $i9 = neg i2;
        if $i9 != 120002 goto label6;

     label4:
        if z0 != 0 goto label5;

        $l10 = r0.<org.apache.coyote.http11.upgrade.UpgradeAprProcessor: long socket>;
        staticinvoke <org.apache.tomcat.jni.Socket: int optSet(long,int,int)>($l10, 8, 0);

     label5:
        return 0;

     label6:
        $r3 = new java.io.IOException;
        $r4 = <org.apache.coyote.http11.upgrade.UpgradeAprProcessor: org.apache.tomcat.util.res.StringManager sm>;
        $r5 = newarray (java.lang.Object)[1];
        $i12 = neg i2;
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);
        $r5[0] = $r6;
        $r7 = virtualinvoke $r4.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("apr.read.error", $r5);
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);
        throw $r3;

     label7:
        $r8 := @caughtexception;
        r2 = $r8;
        if z0 != 0 goto label8;

        $l13 = r0.<org.apache.coyote.http11.upgrade.UpgradeAprProcessor: long socket>;
        staticinvoke <org.apache.tomcat.jni.Socket: int optSet(long,int,int)>($l13, 8, 0);

     label8:
        throw r2;

        catch java.lang.Throwable from label0 to label1 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }
}
