class java.io.ObjectOutputStream$PutFieldImpl extends java.io.ObjectOutputStream$PutField
{
    private final java.io.ObjectStreamClass desc;
    private final byte[] primVals;
    private final java.lang.Object[] objVals;
    final java.io.ObjectOutputStream this$0;

    void <init>(java.io.ObjectOutputStream, java.io.ObjectStreamClass)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.io.ObjectOutputStream r1;
        java.io.ObjectStreamClass r2;
        int $i0, $i1;
        byte[] $r3;
        java.lang.Object[] $r4;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.io.ObjectOutputStream;
        r2 := @parameter1: java.io.ObjectStreamClass;
        r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectOutputStream this$0> = r1;
        specialinvoke r0.<java.io.ObjectOutputStream$PutField: void <init>()>();
        r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectStreamClass desc> = r2;
        $i0 = virtualinvoke r2.<java.io.ObjectStreamClass: int getPrimDataSize()>();
        $r3 = newarray (byte)[$i0];
        r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals> = $r3;
        $i1 = virtualinvoke r2.<java.io.ObjectStreamClass: int getNumObjFields()>();
        $r4 = newarray (java.lang.Object)[$i1];
        r0.<java.io.ObjectOutputStream$PutFieldImpl: java.lang.Object[] objVals> = $r4;
        return;
    }

    public void put(java.lang.String, boolean)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.lang.String r1;
        boolean z0;
        java.lang.Class $r2;
        byte[] $r3;
        int $i0;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;
        $i0 = specialinvoke r0.<java.io.ObjectOutputStream$PutFieldImpl: int getFieldOffset(java.lang.String,java.lang.Class)>(r1, $r2);
        staticinvoke <java.io.Bits: void putBoolean(byte[],int,boolean)>($r3, $i0, z0);
        return;
    }

    public void put(java.lang.String, byte)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.lang.String r1;
        byte b0;
        java.lang.Class $r2;
        byte[] $r3;
        int $i1;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.lang.String;
        b0 := @parameter1: byte;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;
        $i1 = specialinvoke r0.<java.io.ObjectOutputStream$PutFieldImpl: int getFieldOffset(java.lang.String,java.lang.Class)>(r1, $r2);
        $r3[$i1] = b0;
        return;
    }

    public void put(java.lang.String, char)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.lang.String r1;
        char c0;
        java.lang.Class $r2;
        byte[] $r3;
        int $i1;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.lang.String;
        c0 := @parameter1: char;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $r2 = <java.lang.Character: java.lang.Class TYPE>;
        $i1 = specialinvoke r0.<java.io.ObjectOutputStream$PutFieldImpl: int getFieldOffset(java.lang.String,java.lang.Class)>(r1, $r2);
        staticinvoke <java.io.Bits: void putChar(byte[],int,char)>($r3, $i1, c0);
        return;
    }

    public void put(java.lang.String, short)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.lang.String r1;
        short s0;
        java.lang.Class $r2;
        byte[] $r3;
        int $i1;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.lang.String;
        s0 := @parameter1: short;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $r2 = <java.lang.Short: java.lang.Class TYPE>;
        $i1 = specialinvoke r0.<java.io.ObjectOutputStream$PutFieldImpl: int getFieldOffset(java.lang.String,java.lang.Class)>(r1, $r2);
        staticinvoke <java.io.Bits: void putShort(byte[],int,short)>($r3, $i1, s0);
        return;
    }

    public void put(java.lang.String, int)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.Class $r2;
        byte[] $r3;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $r2 = <java.lang.Integer: java.lang.Class TYPE>;
        $i1 = specialinvoke r0.<java.io.ObjectOutputStream$PutFieldImpl: int getFieldOffset(java.lang.String,java.lang.Class)>(r1, $r2);
        staticinvoke <java.io.Bits: void putInt(byte[],int,int)>($r3, $i1, i0);
        return;
    }

    public void put(java.lang.String, float)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.lang.String r1;
        float f0;
        java.lang.Class $r2;
        byte[] $r3;
        int $i0;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.lang.String;
        f0 := @parameter1: float;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $r2 = <java.lang.Float: java.lang.Class TYPE>;
        $i0 = specialinvoke r0.<java.io.ObjectOutputStream$PutFieldImpl: int getFieldOffset(java.lang.String,java.lang.Class)>(r1, $r2);
        staticinvoke <java.io.Bits: void putFloat(byte[],int,float)>($r3, $i0, f0);
        return;
    }

    public void put(java.lang.String, long)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.lang.String r1;
        long l0;
        java.lang.Class $r2;
        byte[] $r3;
        int $i1;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.lang.String;
        l0 := @parameter1: long;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $r2 = <java.lang.Long: java.lang.Class TYPE>;
        $i1 = specialinvoke r0.<java.io.ObjectOutputStream$PutFieldImpl: int getFieldOffset(java.lang.String,java.lang.Class)>(r1, $r2);
        staticinvoke <java.io.Bits: void putLong(byte[],int,long)>($r3, $i1, l0);
        return;
    }

    public void put(java.lang.String, double)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.lang.String r1;
        double d0;
        java.lang.Class $r2;
        byte[] $r3;
        int $i0;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.lang.String;
        d0 := @parameter1: double;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $r2 = <java.lang.Double: java.lang.Class TYPE>;
        $i0 = specialinvoke r0.<java.io.ObjectOutputStream$PutFieldImpl: int getFieldOffset(java.lang.String,java.lang.Class)>(r1, $r2);
        staticinvoke <java.io.Bits: void putDouble(byte[],int,double)>($r3, $i0, d0);
        return;
    }

    public void put(java.lang.String, java.lang.Object)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Object[] $r3;
        int $i0;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.lang.Object[] objVals>;
        $i0 = specialinvoke r0.<java.io.ObjectOutputStream$PutFieldImpl: int getFieldOffset(java.lang.String,java.lang.Class)>(r1, class "java/lang/Object");
        $r3[$i0] = r2;
        return;
    }

    public void write(java.io.ObjectOutput) throws java.io.IOException
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.io.ObjectOutput r1;
        java.io.ObjectStreamField[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.io.ObjectOutputStream $r3;
        java.lang.IllegalArgumentException $r4;
        byte[] $r5, $r6;
        java.io.ObjectStreamClass $r7;
        java.lang.Object[] $r8, $r9, $r12;
        java.io.ObjectStreamField $r10;
        boolean $z0;
        java.io.IOException $r11;
        java.lang.Object $r13;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.io.ObjectOutput;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectOutputStream this$0>;
        if $r3 == r1 goto label0;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("wrong stream");
        throw $r4;

     label0:
        $r5 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $r6 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $i2 = lengthof $r6;
        interfaceinvoke r1.<java.io.ObjectOutput: void write(byte[],int,int)>($r5, 0, $i2);
        $r7 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectStreamClass desc>;
        r2 = virtualinvoke $r7.<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>(0);
        $i3 = lengthof r2;
        $r8 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.lang.Object[] objVals>;
        $i4 = lengthof $r8;
        i0 = $i3 - $i4;
        i1 = 0;

     label1:
        $r9 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.lang.Object[] objVals>;
        $i5 = lengthof $r9;
        if i1 >= $i5 goto label3;

        $i6 = i0 + i1;
        $r10 = r2[$i6];
        $z0 = virtualinvoke $r10.<java.io.ObjectStreamField: boolean isUnshared()>();
        if $z0 == 0 goto label2;

        $r11 = new java.io.IOException;
        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("cannot write unshared object");
        throw $r11;

     label2:
        $r12 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.lang.Object[] objVals>;
        $r13 = $r12[i1];
        interfaceinvoke r1.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r13);
        i1 = i1 + 1;
        goto label1;

     label3:
        return;
    }

    void writeFields() throws java.io.IOException
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.io.ObjectStreamField[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Throwable r2, $r33;
        java.io.ObjectOutputStream $r3, $r10, $r27, $r31, $r34;
        java.io.ObjectOutputStream$BlockDataOutputStream $r4;
        byte[] $r5, $r6;
        java.io.ObjectStreamClass $r7, $r14;
        java.lang.Object[] $r8, $r9, $r28;
        boolean $z0, $z1, $z2, $z3;
        java.io.ObjectOutputStream$DebugTraceInfoStack $r11, $r32, $r35;
        java.lang.StringBuilder $r12, $r13, $r16, $r17, $r20, $r21, $r24, $r25;
        java.lang.String $r15, $r19, $r26;
        java.io.ObjectStreamField $r18, $r22, $r30;
        java.lang.Class $r23;
        java.lang.Object $r29;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        $r3 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectOutputStream this$0>;
        $r4 = staticinvoke <java.io.ObjectOutputStream: java.io.ObjectOutputStream$BlockDataOutputStream access$000(java.io.ObjectOutputStream)>($r3);
        $r5 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $r6 = r0.<java.io.ObjectOutputStream$PutFieldImpl: byte[] primVals>;
        $i2 = lengthof $r6;
        virtualinvoke $r4.<java.io.ObjectOutputStream$BlockDataOutputStream: void write(byte[],int,int,boolean)>($r5, 0, $i2, 0);
        $r7 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectStreamClass desc>;
        r1 = virtualinvoke $r7.<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>(0);
        $i3 = lengthof r1;
        $r8 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.lang.Object[] objVals>;
        $i4 = lengthof $r8;
        i0 = $i3 - $i4;
        i1 = 0;

     label0:
        $r9 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.lang.Object[] objVals>;
        $i5 = lengthof $r9;
        if i1 >= $i5 goto label8;

        $z0 = staticinvoke <java.io.ObjectOutputStream: boolean access$100()>();
        if $z0 == 0 goto label1;

        $r10 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectOutputStream this$0>;
        $r11 = staticinvoke <java.io.ObjectOutputStream: java.io.ObjectOutputStream$DebugTraceInfoStack access$200(java.io.ObjectOutputStream)>($r10);
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field (class \"");
        $r14 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectStreamClass desc>;
        $r15 = virtualinvoke $r14.<java.io.ObjectStreamClass: java.lang.String getName()>();
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", name: \"");
        $i6 = i0 + i1;
        $r18 = r1[$i6];
        $r19 = virtualinvoke $r18.<java.io.ObjectStreamField: java.lang.String getName()>();
        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", type: \"");
        $i7 = i0 + i1;
        $r22 = r1[$i7];
        $r23 = virtualinvoke $r22.<java.io.ObjectStreamField: java.lang.Class getType()>();
        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<java.io.ObjectOutputStream$DebugTraceInfoStack: void push(java.lang.String)>($r26);

     label1:
        $r27 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectOutputStream this$0>;
        $r28 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.lang.Object[] objVals>;
        $r29 = $r28[i1];
        $i8 = i0 + i1;
        $r30 = r1[$i8];
        $z1 = virtualinvoke $r30.<java.io.ObjectStreamField: boolean isUnshared()>();
        staticinvoke <java.io.ObjectOutputStream: void access$300(java.io.ObjectOutputStream,java.lang.Object,boolean)>($r27, $r29, $z1);

     label2:
        $z2 = staticinvoke <java.io.ObjectOutputStream: boolean access$100()>();
        if $z2 == 0 goto label7;

        $r31 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectOutputStream this$0>;
        $r32 = staticinvoke <java.io.ObjectOutputStream: java.io.ObjectOutputStream$DebugTraceInfoStack access$200(java.io.ObjectOutputStream)>($r31);
        virtualinvoke $r32.<java.io.ObjectOutputStream$DebugTraceInfoStack: void pop()>();
        goto label7;

     label3:
        $r33 := @caughtexception;

     label4:
        r2 = $r33;

     label5:
        $z3 = staticinvoke <java.io.ObjectOutputStream: boolean access$100()>();
        if $z3 == 0 goto label6;

        $r34 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectOutputStream this$0>;
        $r35 = staticinvoke <java.io.ObjectOutputStream: java.io.ObjectOutputStream$DebugTraceInfoStack access$200(java.io.ObjectOutputStream)>($r34);
        virtualinvoke $r35.<java.io.ObjectOutputStream$DebugTraceInfoStack: void pop()>();

     label6:
        throw r2;

     label7:
        i1 = i1 + 1;
        goto label0;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private int getFieldOffset(java.lang.String, java.lang.Class)
    {
        java.io.ObjectOutputStream$PutFieldImpl r0;
        java.lang.String r1, $r11;
        java.lang.Class r2;
        java.io.ObjectStreamField r3;
        java.io.ObjectStreamClass $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        int $i0;

        r0 := @this: java.io.ObjectOutputStream$PutFieldImpl;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Class;
        $r4 = r0.<java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectStreamClass desc>;
        r3 = virtualinvoke $r4.<java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String,java.lang.Class)>(r1, r2);
        if r3 != null goto label0;

        $r5 = new java.lang.IllegalArgumentException;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no such field ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with type ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);
        throw $r5;

     label0:
        $i0 = virtualinvoke r3.<java.io.ObjectStreamField: int getOffset()>();
        return $i0;
    }
}
