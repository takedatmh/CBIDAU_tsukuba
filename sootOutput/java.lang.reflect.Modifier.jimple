public class java.lang.reflect.Modifier extends java.lang.Object
{
    public static final int PUBLIC;
    public static final int PRIVATE;
    public static final int PROTECTED;
    public static final int STATIC;
    public static final int FINAL;
    public static final int SYNCHRONIZED;
    public static final int VOLATILE;
    public static final int TRANSIENT;
    public static final int NATIVE;
    public static final int INTERFACE;
    public static final int ABSTRACT;
    public static final int STRICT;
    static final int BRIDGE;
    static final int VARARGS;
    static final int SYNTHETIC;
    static final int ANNOTATION;
    static final int ENUM;
    private static final int CLASS_MODIFIERS;
    private static final int INTERFACE_MODIFIERS;
    private static final int CONSTRUCTOR_MODIFIERS;
    private static final int METHOD_MODIFIERS;
    private static final int FIELD_MODIFIERS;

    public void <init>()
    {
        java.lang.reflect.Modifier r0;

        r0 := @this: java.lang.reflect.Modifier;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static boolean isPublic(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 1;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isPrivate(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 2;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isProtected(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 4;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isStatic(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 8;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isFinal(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 16;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isSynchronized(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 32;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isVolatile(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 64;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isTransient(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 128;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isNative(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 256;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isInterface(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 512;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isAbstract(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 1024;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static boolean isStrict(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 2048;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static java.lang.String toString(int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.StringBuffer $r0, r1;
        java.lang.String $r14, $r15;

        i0 := @parameter0: int;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        r1 = $r0;
        $i2 = i0 & 1;
        if $i2 == 0 goto label0;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public ");

     label0:
        $i3 = i0 & 4;
        if $i3 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("protected ");

     label1:
        $i4 = i0 & 2;
        if $i4 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("private ");

     label2:
        $i5 = i0 & 1024;
        if $i5 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("abstract ");

     label3:
        $i6 = i0 & 8;
        if $i6 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static ");

     label4:
        $i7 = i0 & 16;
        if $i7 == 0 goto label5;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("final ");

     label5:
        $i8 = i0 & 128;
        if $i8 == 0 goto label6;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("transient ");

     label6:
        $i9 = i0 & 64;
        if $i9 == 0 goto label7;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("volatile ");

     label7:
        $i10 = i0 & 32;
        if $i10 == 0 goto label8;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("synchronized ");

     label8:
        $i11 = i0 & 256;
        if $i11 == 0 goto label9;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("native ");

     label9:
        $i12 = i0 & 2048;
        if $i12 == 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("strictfp ");

     label10:
        $i13 = i0 & 512;
        if $i13 == 0 goto label11;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("interface ");

     label11:
        $i14 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();
        i1 = $i14;
        if $i14 <= 0 goto label12;

        $r14 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
        $i15 = i1 - 1;
        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int,int)>(0, $i15);
        return $r15;

     label12:
        return "";
    }

    static boolean isSynthetic(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        $i1 = i0 & 4096;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static int classModifiers()
    {
        return 3103;
    }

    public static int interfaceModifiers()
    {
        return 3087;
    }

    public static int constructorModifiers()
    {
        return 7;
    }

    public static int methodModifiers()
    {
        return 3391;
    }

    public static int fieldModifiers()
    {
        return 223;
    }

    static void <clinit>()
    {
        sun.reflect.ReflectionFactory$GetReflectionFactoryAction $r0;
        sun.reflect.ReflectionFactory r1;
        java.lang.Object $r2;
        java.lang.reflect.ReflectAccess $r3;

        $r0 = new sun.reflect.ReflectionFactory$GetReflectionFactoryAction;
        specialinvoke $r0.<sun.reflect.ReflectionFactory$GetReflectionFactoryAction: void <init>()>();
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        r1 = (sun.reflect.ReflectionFactory) $r2;
        $r3 = new java.lang.reflect.ReflectAccess;
        specialinvoke $r3.<java.lang.reflect.ReflectAccess: void <init>()>();
        virtualinvoke r1.<sun.reflect.ReflectionFactory: void setLangReflectAccess(sun.reflect.LangReflectAccess)>($r3);
        return;
    }
}
