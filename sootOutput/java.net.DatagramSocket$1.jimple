class java.net.DatagramSocket$1 extends java.lang.Object implements java.security.PrivilegedExceptionAction
{
    final java.net.DatagramSocket this$0;

    void <init>(java.net.DatagramSocket)
    {
        java.net.DatagramSocket$1 r0;
        java.net.DatagramSocket r1;

        r0 := @this: java.net.DatagramSocket$1;
        r1 := @parameter0: java.net.DatagramSocket;
        r0.<java.net.DatagramSocket$1: java.net.DatagramSocket this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Void run() throws java.lang.NoSuchMethodException
    {
        java.net.DatagramSocket$1 r0;
        java.lang.Class[] r1;
        java.net.DatagramSocket $r2;
        java.net.DatagramSocketImpl $r3;
        java.lang.Class $r4;

        r0 := @this: java.net.DatagramSocket$1;
        r1 = newarray (java.lang.Class)[1];
        r1[0] = class "java/net/DatagramPacket";
        $r2 = r0.<java.net.DatagramSocket$1: java.net.DatagramSocket this$0>;
        $r3 = $r2.<java.net.DatagramSocket: java.net.DatagramSocketImpl impl>;
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();
        virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("peekData", r1);
        return null;
    }

    public volatile java.lang.Object run() throws java.lang.Exception
    {
        java.net.DatagramSocket$1 r0;
        java.lang.Void $r1;

        r0 := @this: java.net.DatagramSocket$1;
        $r1 = virtualinvoke r0.<java.net.DatagramSocket$1: java.lang.Void run()>();
        return $r1;
    }
}
