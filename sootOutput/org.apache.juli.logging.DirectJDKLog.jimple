class org.apache.juli.logging.DirectJDKLog extends java.lang.Object implements org.apache.juli.logging.Log
{
    public java.util.logging.Logger logger;
    private static final java.lang.String SIMPLE_FMT;
    private static final java.lang.String SIMPLE_CFG;
    private static final java.lang.String FORMATTER;

    static void <clinit>()
    {
        java.lang.Throwable r0, $r7, $r14, r15;
        java.util.logging.Logger r1;
        java.util.logging.Handler[] r2;
        int i0, $i1;
        java.lang.String $r3, $r4, $r8;
        java.lang.Class $r5, $r9;
        java.lang.Object $r10;
        java.util.logging.Formatter r11;
        java.util.logging.Handler $r12, $r13;
        boolean $z0;

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.util.logging.config.class");
        if $r3 != null goto label9;

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.util.logging.config.file");
        if $r4 != null goto label9;

     label0:
        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.juli.JdkLoggerConfig");
        virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r0 = $r7;

     label3:
        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("org.apache.juli.formatter", "java.util.logging.SimpleFormatter");
        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Object newInstance()>();
        r11 = (java.util.logging.Formatter) $r10;
        r1 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("");
        r2 = virtualinvoke r1.<java.util.logging.Logger: java.util.logging.Handler[] getHandlers()>();
        i0 = 0;
        goto label6;

     label4:
        $r12 = r2[i0];
        $z0 = $r12 instanceof java.util.logging.ConsoleHandler;
        if $z0 == 0 goto label5;

        $r13 = r2[i0];
        virtualinvoke $r13.<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>(r11);

     label5:
        i0 = i0 + 1;

     label6:
        $i1 = lengthof r2;
        if i0 < $i1 goto label4;

     label7:
        goto label9;

     label8:
        $r14 := @caughtexception;
        r15 = $r14;

     label9:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label7 with label8;
    }

    public void <init>(java.lang.String)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.String r1;
        java.util.logging.Logger $r2;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(r1);
        r0.<org.apache.juli.logging.DirectJDKLog: java.util.logging.Logger logger> = $r2;
        return;
    }

    public final boolean isErrorEnabled()
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.util.logging.Level $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        $r2 = r0.<org.apache.juli.logging.DirectJDKLog: java.util.logging.Logger logger>;
        $r1 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);
        return $z0;
    }

    public final boolean isWarnEnabled()
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.util.logging.Level $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        $r2 = r0.<org.apache.juli.logging.DirectJDKLog: java.util.logging.Logger logger>;
        $r1 = <java.util.logging.Level: java.util.logging.Level WARNING>;
        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);
        return $z0;
    }

    public final boolean isInfoEnabled()
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.util.logging.Level $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        $r2 = r0.<org.apache.juli.logging.DirectJDKLog: java.util.logging.Logger logger>;
        $r1 = <java.util.logging.Level: java.util.logging.Level INFO>;
        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);
        return $z0;
    }

    public final boolean isDebugEnabled()
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.util.logging.Level $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        $r2 = r0.<org.apache.juli.logging.DirectJDKLog: java.util.logging.Logger logger>;
        $r1 = <java.util.logging.Level: java.util.logging.Level FINE>;
        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);
        return $z0;
    }

    public final boolean isFatalEnabled()
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.util.logging.Level $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        $r2 = r0.<org.apache.juli.logging.DirectJDKLog: java.util.logging.Logger logger>;
        $r1 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);
        return $z0;
    }

    public final boolean isTraceEnabled()
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.util.logging.Level $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        $r2 = r0.<org.apache.juli.logging.DirectJDKLog: java.util.logging.Logger logger>;
        $r1 = <java.util.logging.Level: java.util.logging.Level FINER>;
        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);
        return $z0;
    }

    public final void debug(java.lang.Object)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);
        return;
    }

    public final void debug(java.lang.Object, java.lang.Throwable)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Throwable;
        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);
        return;
    }

    public final void trace(java.lang.Object)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        $r2 = <java.util.logging.Level: java.util.logging.Level FINER>;
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);
        return;
    }

    public final void trace(java.lang.Object, java.lang.Throwable)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Throwable;
        $r3 = <java.util.logging.Level: java.util.logging.Level FINER>;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);
        return;
    }

    public final void info(java.lang.Object)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);
        return;
    }

    public final void info(java.lang.Object, java.lang.Throwable)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Throwable;
        $r3 = <java.util.logging.Level: java.util.logging.Level INFO>;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);
        return;
    }

    public final void warn(java.lang.Object)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);
        return;
    }

    public final void warn(java.lang.Object, java.lang.Throwable)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Throwable;
        $r3 = <java.util.logging.Level: java.util.logging.Level WARNING>;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);
        return;
    }

    public final void error(java.lang.Object)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);
        return;
    }

    public final void error(java.lang.Object, java.lang.Throwable)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Throwable;
        $r3 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);
        return;
    }

    public final void fatal(java.lang.Object)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null);
        return;
    }

    public final void fatal(java.lang.Object, java.lang.Throwable)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.logging.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Throwable;
        $r3 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        specialinvoke r0.<org.apache.juli.logging.DirectJDKLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r3, $r4, r2);
        return;
    }

    private void log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
    {
        org.apache.juli.logging.DirectJDKLog r0;
        java.util.logging.Level r1;
        java.lang.String r2, r6, r7;
        java.lang.Throwable r3, r4, $r10;
        java.lang.StackTraceElement[] r5;
        java.lang.StackTraceElement r8;
        java.util.logging.Logger $r9, $r11, $r12;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.juli.logging.DirectJDKLog;
        r1 := @parameter0: java.util.logging.Level;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Throwable;
        $r9 = r0.<org.apache.juli.logging.DirectJDKLog: java.util.logging.Logger logger>;
        $z0 = virtualinvoke $r9.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>(r1);
        if $z0 == 0 goto label2;

        $r10 = new java.lang.Throwable;
        specialinvoke $r10.<java.lang.Throwable: void <init>()>();
        r4 = $r10;
        r5 = virtualinvoke r4.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();
        r6 = "unknown";
        r7 = "unknown";
        if r5 == null goto label0;

        $i0 = lengthof r5;
        if $i0 <= 2 goto label0;

        r8 = r5[2];
        r6 = virtualinvoke r8.<java.lang.StackTraceElement: java.lang.String getClassName()>();
        r7 = virtualinvoke r8.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

     label0:
        if r3 != null goto label1;

        $r11 = r0.<org.apache.juli.logging.DirectJDKLog: java.util.logging.Logger logger>;
        virtualinvoke $r11.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>(r1, r6, r7, r2);
        goto label2;

     label1:
        $r12 = r0.<org.apache.juli.logging.DirectJDKLog: java.util.logging.Logger logger>;
        virtualinvoke $r12.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>(r1, r6, r7, r2, r3);

     label2:
        return;
    }

    static void release()
    {
        return;
    }

    static org.apache.juli.logging.Log getInstance(java.lang.String)
    {
        java.lang.String r0;
        org.apache.juli.logging.DirectJDKLog $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = new org.apache.juli.logging.DirectJDKLog;
        specialinvoke $r1.<org.apache.juli.logging.DirectJDKLog: void <init>(java.lang.String)>(r0);
        return $r1;
    }
}
