final class java.util.regex.Pattern$CharPropertyNames$4 extends java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory
{
    final java.util.regex.Pattern$CharPropertyNames$CloneableProperty val$p;

    void <init>(java.util.regex.Pattern$CharPropertyNames$CloneableProperty)
    {
        java.util.regex.Pattern$CharPropertyNames$4 r0;
        java.util.regex.Pattern$CharPropertyNames$CloneableProperty r1;

        r0 := @this: java.util.regex.Pattern$CharPropertyNames$4;
        r1 := @parameter0: java.util.regex.Pattern$CharPropertyNames$CloneableProperty;
        r0.<java.util.regex.Pattern$CharPropertyNames$4: java.util.regex.Pattern$CharPropertyNames$CloneableProperty val$p> = r1;
        specialinvoke r0.<java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory: void <init>(java.util.regex.Pattern$1)>(null);
        return;
    }

    java.util.regex.Pattern$CharProperty make()
    {
        java.util.regex.Pattern$CharPropertyNames$4 r0;
        java.util.regex.Pattern$CharPropertyNames$CloneableProperty $r1, $r2;

        r0 := @this: java.util.regex.Pattern$CharPropertyNames$4;
        $r1 = r0.<java.util.regex.Pattern$CharPropertyNames$4: java.util.regex.Pattern$CharPropertyNames$CloneableProperty val$p>;
        $r2 = virtualinvoke $r1.<java.util.regex.Pattern$CharPropertyNames$CloneableProperty: java.util.regex.Pattern$CharPropertyNames$CloneableProperty clone()>();
        return $r2;
    }
}
