public final class org.apache.tomcat.util.http.mapper.Mapper$Host extends org.apache.tomcat.util.http.mapper.Mapper$MapElement
{
    public volatile org.apache.tomcat.util.http.mapper.Mapper$ContextList contextList;
    private final org.apache.tomcat.util.http.mapper.Mapper$Host realHost;
    private final java.util.List aliases;

    public void <init>(java.lang.String, java.lang.Object)
    {
        org.apache.tomcat.util.http.mapper.Mapper$Host r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.apache.tomcat.util.http.mapper.Mapper$ContextList $r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$Host;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        specialinvoke r0.<org.apache.tomcat.util.http.mapper.Mapper$MapElement: void <init>(java.lang.String,java.lang.Object)>(r1, r2);
        r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: org.apache.tomcat.util.http.mapper.Mapper$Host realHost> = r0;
        $r3 = new org.apache.tomcat.util.http.mapper.Mapper$ContextList;
        specialinvoke $r3.<org.apache.tomcat.util.http.mapper.Mapper$ContextList: void <init>()>();
        r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: org.apache.tomcat.util.http.mapper.Mapper$ContextList contextList> = $r3;
        $r4 = new java.util.concurrent.CopyOnWriteArrayList;
        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
        r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: java.util.List aliases> = $r4;
        return;
    }

    public void <init>(java.lang.String, org.apache.tomcat.util.http.mapper.Mapper$Host)
    {
        org.apache.tomcat.util.http.mapper.Mapper$Host r0, r2;
        java.lang.String r1;
        java.lang.Object $r3;
        org.apache.tomcat.util.http.mapper.Mapper$ContextList $r4;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$Host;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.apache.tomcat.util.http.mapper.Mapper$Host;
        $r3 = r2.<org.apache.tomcat.util.http.mapper.Mapper$Host: java.lang.Object object>;
        specialinvoke r0.<org.apache.tomcat.util.http.mapper.Mapper$MapElement: void <init>(java.lang.String,java.lang.Object)>(r1, $r3);
        r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: org.apache.tomcat.util.http.mapper.Mapper$Host realHost> = r2;
        $r4 = r2.<org.apache.tomcat.util.http.mapper.Mapper$Host: org.apache.tomcat.util.http.mapper.Mapper$ContextList contextList>;
        r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: org.apache.tomcat.util.http.mapper.Mapper$ContextList contextList> = $r4;
        r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: java.util.List aliases> = null;
        return;
    }

    public boolean isAlias()
    {
        org.apache.tomcat.util.http.mapper.Mapper$Host r0, $r1;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$Host;
        $r1 = r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: org.apache.tomcat.util.http.mapper.Mapper$Host realHost>;
        if $r1 == r0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public org.apache.tomcat.util.http.mapper.Mapper$Host getRealHost()
    {
        org.apache.tomcat.util.http.mapper.Mapper$Host r0, $r1;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$Host;
        $r1 = r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: org.apache.tomcat.util.http.mapper.Mapper$Host realHost>;
        return $r1;
    }

    public java.lang.String getRealHostName()
    {
        org.apache.tomcat.util.http.mapper.Mapper$Host r0, $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$Host;
        $r1 = r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: org.apache.tomcat.util.http.mapper.Mapper$Host realHost>;
        $r2 = $r1.<org.apache.tomcat.util.http.mapper.Mapper$Host: java.lang.String name>;
        return $r2;
    }

    public java.util.Collection getAliases()
    {
        org.apache.tomcat.util.http.mapper.Mapper$Host r0;
        java.util.List $r1;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$Host;
        $r1 = r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: java.util.List aliases>;
        return $r1;
    }

    public void addAlias(org.apache.tomcat.util.http.mapper.Mapper$Host)
    {
        org.apache.tomcat.util.http.mapper.Mapper$Host r0, r1;
        java.util.List $r2;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$Host;
        r1 := @parameter0: org.apache.tomcat.util.http.mapper.Mapper$Host;
        $r2 = r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: java.util.List aliases>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    public void addAliases(java.util.Collection)
    {
        org.apache.tomcat.util.http.mapper.Mapper$Host r0;
        java.util.Collection r1;
        java.util.List $r2;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$Host;
        r1 := @parameter0: java.util.Collection;
        $r2 = r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: java.util.List aliases>;
        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);
        return;
    }

    public void removeAlias(org.apache.tomcat.util.http.mapper.Mapper$Host)
    {
        org.apache.tomcat.util.http.mapper.Mapper$Host r0, r1;
        java.util.List $r2;

        r0 := @this: org.apache.tomcat.util.http.mapper.Mapper$Host;
        r1 := @parameter0: org.apache.tomcat.util.http.mapper.Mapper$Host;
        $r2 = r0.<org.apache.tomcat.util.http.mapper.Mapper$Host: java.util.List aliases>;
        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);
        return;
    }
}
