class java.util.Locale$Cache extends sun.util.locale.LocaleObjectCache
{

    private void <init>()
    {
        java.util.Locale$Cache r0;

        r0 := @this: java.util.Locale$Cache;
        specialinvoke r0.<sun.util.locale.LocaleObjectCache: void <init>()>();
        return;
    }

    protected java.util.Locale createObject(java.util.Locale$LocaleKey)
    {
        java.util.Locale$Cache r0;
        java.util.Locale$LocaleKey r1;
        java.util.Locale $r2;
        sun.util.locale.BaseLocale $r3;
        sun.util.locale.LocaleExtensions $r4;

        r0 := @this: java.util.Locale$Cache;
        r1 := @parameter0: java.util.Locale$LocaleKey;
        $r2 = new java.util.Locale;
        $r3 = staticinvoke <java.util.Locale$LocaleKey: sun.util.locale.BaseLocale access$200(java.util.Locale$LocaleKey)>(r1);
        $r4 = staticinvoke <java.util.Locale$LocaleKey: sun.util.locale.LocaleExtensions access$300(java.util.Locale$LocaleKey)>(r1);
        specialinvoke $r2.<java.util.Locale: void <init>(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions,java.util.Locale$1)>($r3, $r4, null);
        return $r2;
    }

    protected volatile java.lang.Object createObject(java.lang.Object)
    {
        java.util.Locale$Cache r0;
        java.lang.Object r1;
        java.util.Locale$LocaleKey $r2;
        java.util.Locale $r3;

        r0 := @this: java.util.Locale$Cache;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.util.Locale$LocaleKey) r1;
        $r3 = virtualinvoke r0.<java.util.Locale$Cache: java.util.Locale createObject(java.util.Locale$LocaleKey)>($r2);
        return $r3;
    }

    void <init>(java.util.Locale$1)
    {
        java.util.Locale$Cache r0;
        java.util.Locale$1 r1;

        r0 := @this: java.util.Locale$Cache;
        r1 := @parameter0: java.util.Locale$1;
        specialinvoke r0.<java.util.Locale$Cache: void <init>()>();
        return;
    }
}
