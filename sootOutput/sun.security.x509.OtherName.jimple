public class sun.security.x509.OtherName extends java.lang.Object implements sun.security.x509.GeneralNameInterface
{
    private java.lang.String name;
    private sun.security.util.ObjectIdentifier oid;
    private byte[] nameValue;
    private sun.security.x509.GeneralNameInterface gni;
    private static final byte TAG_VALUE;
    private int myhash;

    public void <init>(sun.security.util.ObjectIdentifier, byte[]) throws java.io.IOException
    {
        sun.security.x509.OtherName r0;
        sun.security.util.ObjectIdentifier r1;
        byte[] r2;
        java.lang.NullPointerException $r3;
        sun.security.x509.GeneralNameInterface $r4, $r5, $r6;
        java.lang.String $r7, $r10, $r12;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @this: sun.security.x509.OtherName;
        r1 := @parameter0: sun.security.util.ObjectIdentifier;
        r2 := @parameter1: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.OtherName: byte[] nameValue> = null;
        r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface gni> = null;
        r0.<sun.security.x509.OtherName: int myhash> = -1;
        if r1 == null goto label0;

        if r2 != null goto label1;

     label0:
        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("parameters may not be null");
        throw $r3;

     label1:
        r0.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier oid> = r1;
        r0.<sun.security.x509.OtherName: byte[] nameValue> = r2;
        $r4 = specialinvoke r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface getGNI(sun.security.util.ObjectIdentifier,byte[])>(r1, r2);
        r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface gni> = $r4;
        $r5 = r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface gni>;
        if $r5 == null goto label2;

        $r6 = r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface gni>;
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();
        r0.<sun.security.x509.OtherName: java.lang.String name> = $r7;
        goto label3;

     label2:
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized ObjectIdentifier: ");
        $r10 = virtualinvoke r1.<sun.security.util.ObjectIdentifier: java.lang.String toString()>();
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<sun.security.x509.OtherName: java.lang.String name> = $r12;

     label3:
        return;
    }

    public void <init>(sun.security.util.DerValue) throws java.io.IOException
    {
        sun.security.x509.OtherName r0;
        sun.security.util.DerValue r1, r3;
        sun.security.util.DerInputStream r2;
        sun.security.util.ObjectIdentifier $r4, $r6, $r14;
        byte[] $r5, $r7;
        sun.security.x509.GeneralNameInterface $r8, $r9, $r10;
        java.lang.String $r11, $r15, $r17;
        java.lang.StringBuilder $r12, $r13, $r16;

        r0 := @this: sun.security.x509.OtherName;
        r1 := @parameter0: sun.security.util.DerValue;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.x509.OtherName: byte[] nameValue> = null;
        r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface gni> = null;
        r0.<sun.security.x509.OtherName: int myhash> = -1;
        r2 = virtualinvoke r1.<sun.security.util.DerValue: sun.security.util.DerInputStream toDerInputStream()>();
        $r4 = virtualinvoke r2.<sun.security.util.DerInputStream: sun.security.util.ObjectIdentifier getOID()>();
        r0.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier oid> = $r4;
        r3 = virtualinvoke r2.<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>();
        $r5 = virtualinvoke r3.<sun.security.util.DerValue: byte[] toByteArray()>();
        r0.<sun.security.x509.OtherName: byte[] nameValue> = $r5;
        $r6 = r0.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier oid>;
        $r7 = r0.<sun.security.x509.OtherName: byte[] nameValue>;
        $r8 = specialinvoke r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface getGNI(sun.security.util.ObjectIdentifier,byte[])>($r6, $r7);
        r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface gni> = $r8;
        $r9 = r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface gni>;
        if $r9 == null goto label0;

        $r10 = r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface gni>;
        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();
        r0.<sun.security.x509.OtherName: java.lang.String name> = $r11;
        goto label1;

     label0:
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized ObjectIdentifier: ");
        $r14 = r0.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier oid>;
        $r15 = virtualinvoke $r14.<sun.security.util.ObjectIdentifier: java.lang.String toString()>();
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<sun.security.x509.OtherName: java.lang.String name> = $r17;

     label1:
        return;
    }

    public sun.security.util.ObjectIdentifier getOID()
    {
        sun.security.x509.OtherName r0;
        sun.security.util.ObjectIdentifier $r1;

        r0 := @this: sun.security.x509.OtherName;
        $r1 = r0.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier oid>;
        return $r1;
    }

    public byte[] getNameValue()
    {
        sun.security.x509.OtherName r0;
        byte[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: sun.security.x509.OtherName;
        $r1 = r0.<sun.security.x509.OtherName: byte[] nameValue>;
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (byte[]) $r2;
        return $r3;
    }

    private sun.security.x509.GeneralNameInterface getGNI(sun.security.util.ObjectIdentifier, byte[]) throws java.io.IOException
    {
        sun.security.x509.OtherName r0;
        sun.security.util.ObjectIdentifier r1;
        byte[] r2;
        java.lang.Class r3;
        java.lang.Class[] r4, $r8;
        java.lang.reflect.Constructor r5;
        java.lang.Object[] r6, $r9;
        sun.security.x509.GeneralNameInterface r7;
        null_type $n0;
        java.lang.Object $r10;
        java.lang.Exception $r12, r13;
        java.io.IOException $r14, $r20;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.lang.String $r18;
        java.lang.Throwable $r19;

        r0 := @this: sun.security.x509.OtherName;
        r1 := @parameter0: sun.security.util.ObjectIdentifier;
        r2 := @parameter1: byte[];

     label0:
        r3 = staticinvoke <sun.security.x509.OIDMap: java.lang.Class getClass(sun.security.util.ObjectIdentifier)>(r1);
        if r3 != null goto label2;

        $n0 = null;

     label1:
        return $n0;

     label2:
        $r8 = newarray (java.lang.Class)[1];
        $r8[0] = class "java/lang/Object";
        r4 = $r8;
        r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r4);
        $r9 = newarray (java.lang.Object)[1];
        $r9[0] = r2;
        r6 = $r9;
        $r10 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r6);
        r7 = (sun.security.x509.GeneralNameInterface) $r10;

     label3:
        return r7;

     label4:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new java.io.IOException;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instantiation error: ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r18);
        $r19 = virtualinvoke $r14.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r13);
        $r20 = (java.io.IOException) $r19;
        throw $r20;

        catch java.lang.Exception from label0 to label1 with label4;
        catch java.lang.Exception from label2 to label3 with label4;
    }

    public int getType()
    {
        sun.security.x509.OtherName r0;

        r0 := @this: sun.security.x509.OtherName;
        return 0;
    }

    public void encode(sun.security.util.DerOutputStream) throws java.io.IOException
    {
        sun.security.x509.OtherName r0;
        sun.security.util.DerOutputStream r1, r2, $r5;
        sun.security.x509.GeneralNameInterface $r3, $r4;
        sun.security.util.ObjectIdentifier $r6;
        byte $b0;
        byte[] $r7;

        r0 := @this: sun.security.x509.OtherName;
        r1 := @parameter0: sun.security.util.DerOutputStream;
        $r3 = r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface gni>;
        if $r3 == null goto label0;

        $r4 = r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface gni>;
        interfaceinvoke $r4.<sun.security.x509.GeneralNameInterface: void encode(sun.security.util.DerOutputStream)>(r1);
        return;

     label0:
        $r5 = new sun.security.util.DerOutputStream;
        specialinvoke $r5.<sun.security.util.DerOutputStream: void <init>()>();
        r2 = $r5;
        $r6 = r0.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier oid>;
        virtualinvoke r2.<sun.security.util.DerOutputStream: void putOID(sun.security.util.ObjectIdentifier)>($r6);
        $b0 = staticinvoke <sun.security.util.DerValue: byte createTag(byte,boolean,byte)>(-128, 1, 0);
        $r7 = r0.<sun.security.x509.OtherName: byte[] nameValue>;
        virtualinvoke r2.<sun.security.util.DerOutputStream: void write(byte,byte[])>($b0, $r7);
        virtualinvoke r1.<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>(48, r2);
        return;
    }

    public boolean equals(java.lang.Object)
    {
        sun.security.x509.OtherName r0, r2;
        java.lang.Object r1;
        null_type n0;
        java.io.IOException r3, $r10;
        java.lang.UnsupportedOperationException r4, $r11;
        boolean $z0, $z1, $z2, z3;
        sun.security.util.ObjectIdentifier $r5, $r6, $r7;
        byte[] $r8, $r12, $r13;
        sun.security.x509.GeneralNameInterface r9;
        int $i0;

        r0 := @this: sun.security.x509.OtherName;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof sun.security.x509.OtherName;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (sun.security.x509.OtherName) r1;
        $r5 = r2.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier oid>;
        $r6 = r0.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier oid>;
        $z1 = virtualinvoke $r5.<sun.security.util.ObjectIdentifier: boolean equals(sun.security.util.ObjectIdentifier)>($r6);
        if $z1 != 0 goto label2;

        return 0;

     label2:
        n0 = null;

     label3:
        $r7 = r2.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier oid>;
        $r8 = r2.<sun.security.x509.OtherName: byte[] nameValue>;
        r9 = specialinvoke r0.<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface getGNI(sun.security.util.ObjectIdentifier,byte[])>($r7, $r8);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;
        r3 = $r10;
        return 0;

     label6:
        if r9 == null goto label12;

     label7:
        $i0 = interfaceinvoke r9.<sun.security.x509.GeneralNameInterface: int constrains(sun.security.x509.GeneralNameInterface)>(r0);
        if $i0 != 0 goto label8;

        $z2 = 1;
        goto label9;

     label8:
        $z2 = 0;

     label9:
        z3 = $z2;

     label10:
        goto label13;

     label11:
        $r11 := @caughtexception;
        r4 = $r11;
        z3 = 0;
        goto label13;

     label12:
        $r12 = r0.<sun.security.x509.OtherName: byte[] nameValue>;
        $r13 = r2.<sun.security.x509.OtherName: byte[] nameValue>;
        z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r12, $r13);

     label13:
        return z3;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.UnsupportedOperationException from label7 to label10 with label11;
    }

    public int hashCode()
    {
        sun.security.x509.OtherName r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        sun.security.util.ObjectIdentifier $r1;
        byte[] $r2, $r3;
        byte $b7;

        r0 := @this: sun.security.x509.OtherName;
        $i1 = r0.<sun.security.x509.OtherName: int myhash>;
        if $i1 != -1 goto label1;

        $r1 = r0.<sun.security.x509.OtherName: sun.security.util.ObjectIdentifier oid>;
        $i2 = virtualinvoke $r1.<sun.security.util.ObjectIdentifier: int hashCode()>();
        $i3 = 37 + $i2;
        r0.<sun.security.x509.OtherName: int myhash> = $i3;
        i0 = 0;

     label0:
        $r2 = r0.<sun.security.x509.OtherName: byte[] nameValue>;
        $i4 = lengthof $r2;
        if i0 >= $i4 goto label1;

        $i5 = r0.<sun.security.x509.OtherName: int myhash>;
        $i6 = 37 * $i5;
        $r3 = r0.<sun.security.x509.OtherName: byte[] nameValue>;
        $b7 = $r3[i0];
        $i8 = $i6 + $b7;
        r0.<sun.security.x509.OtherName: int myhash> = $i8;
        i0 = i0 + 1;
        goto label0;

     label1:
        $i9 = r0.<sun.security.x509.OtherName: int myhash>;
        return $i9;
    }

    public java.lang.String toString()
    {
        sun.security.x509.OtherName r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: sun.security.x509.OtherName;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Other-Name: ");
        $r3 = r0.<sun.security.x509.OtherName: java.lang.String name>;
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;
    }

    public int constrains(sun.security.x509.GeneralNameInterface)
    {
        sun.security.x509.OtherName r0;
        sun.security.x509.GeneralNameInterface r1;
        byte b0;
        int $i1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: sun.security.x509.OtherName;
        r1 := @parameter0: sun.security.x509.GeneralNameInterface;
        if r1 != null goto label0;

        b0 = -1;
        goto label2;

     label0:
        $i1 = interfaceinvoke r1.<sun.security.x509.GeneralNameInterface: int getType()>();
        if $i1 == 0 goto label1;

        b0 = -1;
        goto label2;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Narrowing, widening, and matching are not supported for OtherName.");
        throw $r2;

     label2:
        return b0;
    }

    public int subtreeDepth()
    {
        sun.security.x509.OtherName r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: sun.security.x509.OtherName;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("subtreeDepth() not supported for generic OtherName");
        throw $r1;
    }
}
