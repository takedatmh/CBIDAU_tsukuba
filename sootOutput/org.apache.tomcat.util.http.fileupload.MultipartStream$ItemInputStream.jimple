public class org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream extends java.io.InputStream implements org.apache.tomcat.util.http.fileupload.util.Closeable
{
    private long total;
    private int pad;
    private int pos;
    private boolean closed;
    private static final int BYTE_POSITIVE_OFFSET;
    final org.apache.tomcat.util.http.fileupload.MultipartStream this$0;

    void <init>(org.apache.tomcat.util.http.fileupload.MultipartStream)
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;
        org.apache.tomcat.util.http.fileupload.MultipartStream r1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        r1 := @parameter0: org.apache.tomcat.util.http.fileupload.MultipartStream;
        r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0> = r1;
        specialinvoke r0.<java.io.InputStream: void <init>()>();
        specialinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: void findSeparator()>();
        return;
    }

    private void findSeparator()
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i0 = virtualinvoke $r1.<org.apache.tomcat.util.http.fileupload.MultipartStream: int findSeparator()>();
        r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pos> = $i0;
        $i1 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pos>;
        if $i1 != -1 goto label1;

        $r2 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i2 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$0(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r2);
        $r3 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i3 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$1(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r3);
        $i4 = $i2 - $i3;
        $r4 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i5 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$2(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r4);
        if $i4 <= $i5 goto label0;

        $r5 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i6 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$2(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r5);
        r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pad> = $i6;
        goto label1;

     label0:
        $r6 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i7 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$0(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r6);
        $r7 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i8 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$1(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r7);
        $i9 = $i7 - $i8;
        r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pad> = $i9;

     label1:
        return;
    }

    public long getBytesRead()
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;
        long $l0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        $l0 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: long total>;
        return $l0;
    }

    public int available() throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r1, $r2, $r3;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        $i0 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pos>;
        if $i0 != -1 goto label0;

        $r1 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i1 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$0(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r1);
        $r2 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i2 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$1(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r2);
        $i3 = $i1 - $i2;
        $i4 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pad>;
        $i5 = $i3 - $i4;
        return $i5;

     label0:
        $i6 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pos>;
        $r3 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i7 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$1(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r3);
        $i8 = $i6 - $i7;
        return $i8;
    }

    public int read() throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;
        byte b0;
        boolean $z0;
        org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException $r1;
        int $i1, $i2, $i5, $i6, $i7;
        long $l3, $l4;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r3, $r5;
        byte[] $r4;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        $z0 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: boolean closed>;
        if $z0 == 0 goto label0;

        $r1 = new org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException;
        specialinvoke $r1.<org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException: void <init>()>();
        throw $r1;

     label0:
        $i1 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int available()>();
        if $i1 != 0 goto label1;

        $i2 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int makeAvailable()>();
        if $i2 != 0 goto label1;

        return -1;

     label1:
        $l3 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: long total>;
        $l4 = $l3 + 1L;
        r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: long total> = $l4;
        $r3 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $r4 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: byte[] access$3(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r3);
        $r5 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i5 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$1(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r5);
        $i6 = $i5 + 1;
        staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: void access$4(org.apache.tomcat.util.http.fileupload.MultipartStream,int)>($r5, $i6);
        b0 = $r4[$i5];
        if b0 < 0 goto label2;

        return b0;

     label2:
        $i7 = b0 + 256;
        return $i7;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;
        byte[] r1, $r4;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        boolean $z0;
        org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException $r2;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r3, $r5, $r6;
        long $l7, $l8, $l9;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $z0 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: boolean closed>;
        if $z0 == 0 goto label0;

        $r2 = new org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException;
        specialinvoke $r2.<org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException: void <init>()>();
        throw $r2;

     label0:
        if i1 != 0 goto label1;

        return 0;

     label1:
        i2 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int available()>();
        if i2 != 0 goto label2;

        i2 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int makeAvailable()>();
        if i2 != 0 goto label2;

        return -1;

     label2:
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i1);
        $r3 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $r4 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: byte[] access$3(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r3);
        $r5 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i4 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$1(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r5);
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i4, r1, i0, i3);
        $r6 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i5 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$1(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r6);
        $i6 = $i5 + i3;
        staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: void access$4(org.apache.tomcat.util.http.fileupload.MultipartStream,int)>($r6, $i6);
        $l7 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: long total>;
        $l8 = (long) i3;
        $l9 = $l7 + $l8;
        r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: long total> = $l9;
        return i3;
    }

    public void close() throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: void close(boolean)>(0);
        return;
    }

    public void close(boolean) throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;
        boolean z0, $z1;
        int i0;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r1;
        java.io.InputStream $r2;
        long $l1;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        z0 := @parameter0: boolean;
        $z1 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: boolean closed>;
        if $z1 == 0 goto label0;

        return;

     label0:
        if z0 == 0 goto label1;

        r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: boolean closed> = 1;
        $r1 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $r2 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: java.io.InputStream access$5(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r1);
        virtualinvoke $r2.<java.io.InputStream: void close()>();
        goto label3;

     label1:
        i0 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int available()>();
        if i0 != 0 goto label2;

        i0 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int makeAvailable()>();
        if i0 != 0 goto label2;

        goto label3;

     label2:
        $l1 = (long) i0;
        virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: long skip(long)>($l1);
        goto label1;

     label3:
        r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: boolean closed> = 1;
        return;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;
        long l0, l2, $l3, $l5, $l6;
        int i1, $i4, $i7;
        boolean $z0;
        org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException $r1;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r2;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        l0 := @parameter0: long;
        $z0 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: boolean closed>;
        if $z0 == 0 goto label0;

        $r1 = new org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException;
        specialinvoke $r1.<org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException: void <init>()>();
        throw $r1;

     label0:
        i1 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int available()>();
        if i1 != 0 goto label1;

        i1 = specialinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int makeAvailable()>();
        if i1 != 0 goto label1;

        return 0L;

     label1:
        $l3 = (long) i1;
        l2 = staticinvoke <java.lang.Math: long min(long,long)>($l3, l0);
        $r2 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i4 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$1(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r2);
        $l5 = (long) $i4;
        $l6 = $l5 + l2;
        $i7 = (int) $l6;
        staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: void access$4(org.apache.tomcat.util.http.fileupload.MultipartStream,int)>($r2, $i7);
        return l2;
    }

    private int makeAvailable() throws java.io.IOException
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, $i22;
        java.lang.String r1;
        long $l2, $l8, $l9;
        org.apache.tomcat.util.http.fileupload.MultipartStream $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r14, $r16, $r17, $r18, $r20, $r22, $r24;
        byte[] $r6, $r9, $r15;
        java.io.InputStream $r13;
        org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException $r19;
        org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier $r21, $r23;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        $i1 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pos>;
        if $i1 == -1 goto label0;

        return 0;

     label0:
        $l2 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: long total>;
        $r3 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i3 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$0(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r3);
        $r4 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i4 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$1(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r4);
        $i5 = $i3 - $i4;
        $i6 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pad>;
        $i7 = $i5 - $i6;
        $l8 = (long) $i7;
        $l9 = $l2 + $l8;
        r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: long total> = $l9;
        $r5 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $r6 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: byte[] access$3(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r5);
        $r7 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i10 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$0(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r7);
        $i11 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pad>;
        $i12 = $i10 - $i11;
        $r8 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $r9 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: byte[] access$3(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r8);
        $i13 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pad>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i12, $r9, 0, $i13);
        $r10 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: void access$4(org.apache.tomcat.util.http.fileupload.MultipartStream,int)>($r10, 0);
        $r11 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i14 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pad>;
        staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: void access$6(org.apache.tomcat.util.http.fileupload.MultipartStream,int)>($r11, $i14);

     label1:
        $r12 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $r13 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: java.io.InputStream access$5(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r12);
        $r14 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $r15 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: byte[] access$3(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r14);
        $r16 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i15 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$0(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r16);
        $r17 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i16 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$7(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r17);
        $r18 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i17 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$0(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r18);
        $i18 = $i16 - $i17;
        i0 = virtualinvoke $r13.<java.io.InputStream: int read(byte[],int,int)>($r15, $i15, $i18);
        if i0 != -1 goto label2;

        r1 = "Stream ended unexpectedly";
        $r19 = new org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException;
        specialinvoke $r19.<org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException: void <init>(java.lang.String)>("Stream ended unexpectedly");
        throw $r19;

     label2:
        $r20 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $r21 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier access$8(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r20);
        if $r21 == null goto label3;

        $r22 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $r23 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier access$8(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r22);
        virtualinvoke $r23.<org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier: void noteBytesRead(int)>(i0);

     label3:
        $r24 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: org.apache.tomcat.util.http.fileupload.MultipartStream this$0>;
        $i19 = staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: int access$0(org.apache.tomcat.util.http.fileupload.MultipartStream)>($r24);
        $i20 = $i19 + i0;
        staticinvoke <org.apache.tomcat.util.http.fileupload.MultipartStream: void access$6(org.apache.tomcat.util.http.fileupload.MultipartStream,int)>($r24, $i20);
        specialinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: void findSeparator()>();
        i21 = virtualinvoke r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int available()>();
        if i21 > 0 goto label4;

        $i22 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: int pos>;
        if $i22 == -1 goto label1;

     label4:
        return i21;
    }

    public boolean isClosed()
    {
        org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream;
        $z0 = r0.<org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream: boolean closed>;
        return $z0;
    }
}
