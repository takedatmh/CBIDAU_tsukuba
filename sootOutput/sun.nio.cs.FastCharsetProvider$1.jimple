class sun.nio.cs.FastCharsetProvider$1 extends java.lang.Object implements java.util.Iterator
{
    java.util.Iterator i;
    final sun.nio.cs.FastCharsetProvider this$0;

    void <init>(sun.nio.cs.FastCharsetProvider)
    {
        sun.nio.cs.FastCharsetProvider$1 r0;
        sun.nio.cs.FastCharsetProvider r1, $r2;
        java.util.Map $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;

        r0 := @this: sun.nio.cs.FastCharsetProvider$1;
        r1 := @parameter0: sun.nio.cs.FastCharsetProvider;
        r0.<sun.nio.cs.FastCharsetProvider$1: sun.nio.cs.FastCharsetProvider this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = r0.<sun.nio.cs.FastCharsetProvider$1: sun.nio.cs.FastCharsetProvider this$0>;
        $r3 = staticinvoke <sun.nio.cs.FastCharsetProvider: java.util.Map access$000(sun.nio.cs.FastCharsetProvider)>($r2);
        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();
        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();
        r0.<sun.nio.cs.FastCharsetProvider$1: java.util.Iterator i> = $r5;
        return;
    }

    public boolean hasNext()
    {
        sun.nio.cs.FastCharsetProvider$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: sun.nio.cs.FastCharsetProvider$1;
        $r1 = r0.<sun.nio.cs.FastCharsetProvider$1: java.util.Iterator i>;
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();
        return $z0;
    }

    public java.nio.charset.Charset next()
    {
        sun.nio.cs.FastCharsetProvider$1 r0;
        java.lang.String r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        sun.nio.cs.FastCharsetProvider $r4;
        java.nio.charset.Charset $r5;

        r0 := @this: sun.nio.cs.FastCharsetProvider$1;
        $r2 = r0.<sun.nio.cs.FastCharsetProvider$1: java.util.Iterator i>;
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();
        r1 = (java.lang.String) $r3;
        $r4 = r0.<sun.nio.cs.FastCharsetProvider$1: sun.nio.cs.FastCharsetProvider this$0>;
        $r5 = staticinvoke <sun.nio.cs.FastCharsetProvider: java.nio.charset.Charset access$100(sun.nio.cs.FastCharsetProvider,java.lang.String)>($r4, r1);
        return $r5;
    }

    public void remove()
    {
        sun.nio.cs.FastCharsetProvider$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: sun.nio.cs.FastCharsetProvider$1;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r1;
    }

    public volatile java.lang.Object next()
    {
        sun.nio.cs.FastCharsetProvider$1 r0;
        java.nio.charset.Charset $r1;

        r0 := @this: sun.nio.cs.FastCharsetProvider$1;
        $r1 = virtualinvoke r0.<sun.nio.cs.FastCharsetProvider$1: java.nio.charset.Charset next()>();
        return $r1;
    }
}
