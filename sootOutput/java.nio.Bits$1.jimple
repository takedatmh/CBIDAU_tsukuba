final class java.nio.Bits$1 extends java.lang.Object implements sun.misc.JavaNioAccess
{

    void <init>()
    {
        java.nio.Bits$1 r0;

        r0 := @this: java.nio.Bits$1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public sun.misc.JavaNioAccess$BufferPool getDirectBufferPool()
    {
        java.nio.Bits$1 r0;
        java.nio.Bits$1$1 $r1;

        r0 := @this: java.nio.Bits$1;
        $r1 = new java.nio.Bits$1$1;
        specialinvoke $r1.<java.nio.Bits$1$1: void <init>(java.nio.Bits$1)>(r0);
        return $r1;
    }

    public java.nio.ByteBuffer newDirectByteBuffer(long, int, java.lang.Object)
    {
        java.nio.Bits$1 r0;
        long l0;
        int i1;
        java.lang.Object r1;
        java.nio.DirectByteBuffer $r2;

        r0 := @this: java.nio.Bits$1;
        l0 := @parameter0: long;
        i1 := @parameter1: int;
        r1 := @parameter2: java.lang.Object;
        $r2 = new java.nio.DirectByteBuffer;
        specialinvoke $r2.<java.nio.DirectByteBuffer: void <init>(long,int,java.lang.Object)>(l0, i1, r1);
        return $r2;
    }

    public void truncate(java.nio.Buffer)
    {
        java.nio.Bits$1 r0;
        java.nio.Buffer r1;

        r0 := @this: java.nio.Bits$1;
        r1 := @parameter0: java.nio.Buffer;
        virtualinvoke r1.<java.nio.Buffer: void truncate()>();
        return;
    }
}
