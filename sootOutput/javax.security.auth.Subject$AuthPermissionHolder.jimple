class javax.security.auth.Subject$AuthPermissionHolder extends java.lang.Object
{
    static final javax.security.auth.AuthPermission DO_AS_PERMISSION;
    static final javax.security.auth.AuthPermission DO_AS_PRIVILEGED_PERMISSION;
    static final javax.security.auth.AuthPermission SET_READ_ONLY_PERMISSION;
    static final javax.security.auth.AuthPermission GET_SUBJECT_PERMISSION;
    static final javax.security.auth.AuthPermission MODIFY_PRINCIPALS_PERMISSION;
    static final javax.security.auth.AuthPermission MODIFY_PUBLIC_CREDENTIALS_PERMISSION;
    static final javax.security.auth.AuthPermission MODIFY_PRIVATE_CREDENTIALS_PERMISSION;

    void <init>()
    {
        javax.security.auth.Subject$AuthPermissionHolder r0;

        r0 := @this: javax.security.auth.Subject$AuthPermissionHolder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static void <clinit>()
    {
        javax.security.auth.AuthPermission $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = new javax.security.auth.AuthPermission;
        specialinvoke $r0.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("doAs");
        <javax.security.auth.Subject$AuthPermissionHolder: javax.security.auth.AuthPermission DO_AS_PERMISSION> = $r0;
        $r1 = new javax.security.auth.AuthPermission;
        specialinvoke $r1.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("doAsPrivileged");
        <javax.security.auth.Subject$AuthPermissionHolder: javax.security.auth.AuthPermission DO_AS_PRIVILEGED_PERMISSION> = $r1;
        $r2 = new javax.security.auth.AuthPermission;
        specialinvoke $r2.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("setReadOnly");
        <javax.security.auth.Subject$AuthPermissionHolder: javax.security.auth.AuthPermission SET_READ_ONLY_PERMISSION> = $r2;
        $r3 = new javax.security.auth.AuthPermission;
        specialinvoke $r3.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("getSubject");
        <javax.security.auth.Subject$AuthPermissionHolder: javax.security.auth.AuthPermission GET_SUBJECT_PERMISSION> = $r3;
        $r4 = new javax.security.auth.AuthPermission;
        specialinvoke $r4.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("modifyPrincipals");
        <javax.security.auth.Subject$AuthPermissionHolder: javax.security.auth.AuthPermission MODIFY_PRINCIPALS_PERMISSION> = $r4;
        $r5 = new javax.security.auth.AuthPermission;
        specialinvoke $r5.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("modifyPublicCredentials");
        <javax.security.auth.Subject$AuthPermissionHolder: javax.security.auth.AuthPermission MODIFY_PUBLIC_CREDENTIALS_PERMISSION> = $r5;
        $r6 = new javax.security.auth.AuthPermission;
        specialinvoke $r6.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("modifyPrivateCredentials");
        <javax.security.auth.Subject$AuthPermissionHolder: javax.security.auth.AuthPermission MODIFY_PRIVATE_CREDENTIALS_PERMISSION> = $r6;
        return;
    }
}
