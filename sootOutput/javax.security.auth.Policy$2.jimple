final class javax.security.auth.Policy$2 extends java.lang.Object implements java.security.PrivilegedExceptionAction
{
    final java.lang.String val$finalClass;

    void <init>(java.lang.String)
    {
        javax.security.auth.Policy$2 r0;
        java.lang.String r1;

        r0 := @this: javax.security.auth.Policy$2;
        r1 := @parameter0: java.lang.String;
        r0.<javax.security.auth.Policy$2: java.lang.String val$finalClass> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public javax.security.auth.Policy run() throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        javax.security.auth.Policy$2 r0;
        java.lang.Thread $r1;
        java.lang.Class r2, $r5;
        java.lang.String $r3;
        java.lang.ClassLoader $r4;
        java.lang.Object $r6;
        javax.security.auth.Policy $r7;

        r0 := @this: javax.security.auth.Policy$2;
        $r3 = r0.<javax.security.auth.Policy$2: java.lang.String val$finalClass>;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $r4 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r3, 0, $r4);
        r2 = virtualinvoke $r5.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "javax/security/auth/Policy");
        $r6 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();
        $r7 = (javax.security.auth.Policy) $r6;
        return $r7;
    }

    public volatile java.lang.Object run() throws java.lang.Exception
    {
        javax.security.auth.Policy$2 r0;
        javax.security.auth.Policy $r1;

        r0 := @this: javax.security.auth.Policy$2;
        $r1 = virtualinvoke r0.<javax.security.auth.Policy$2: javax.security.auth.Policy run()>();
        return $r1;
    }
}
