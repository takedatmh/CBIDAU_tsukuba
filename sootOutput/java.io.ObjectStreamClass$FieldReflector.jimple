class java.io.ObjectStreamClass$FieldReflector extends java.lang.Object
{
    private static final sun.misc.Unsafe unsafe;
    private final java.io.ObjectStreamField[] fields;
    private final int numPrimFields;
    private final long[] readKeys;
    private final long[] writeKeys;
    private final int[] offsets;
    private final char[] typeCodes;
    private final java.lang.Class[] types;

    void <init>(java.io.ObjectStreamField[])
    {
        java.io.ObjectStreamClass$FieldReflector r0;
        java.io.ObjectStreamField[] r1;
        int i0, i1, $i4, $i6, $i8, $i9, $i10;
        java.util.ArrayList r2, $r10;
        java.util.HashSet r3, $r11;
        java.io.ObjectStreamField r4;
        java.lang.reflect.Field r5;
        long l2, $l3, $l5;
        long[] $r6, $r7, $r13, $r14;
        int[] $r8, $r16;
        char[] $r9, $r17;
        sun.misc.Unsafe $r12;
        java.lang.Long $r15;
        boolean $z0, $z1;
        char $c7;
        java.lang.Class $r19;
        java.lang.Class[] $r20, $r22, $r23;
        java.lang.Object[] $r21;

        r0 := @this: java.io.ObjectStreamClass$FieldReflector;
        r1 := @parameter0: java.io.ObjectStreamField[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.ObjectStreamClass$FieldReflector: java.io.ObjectStreamField[] fields> = r1;
        i0 = lengthof r1;
        $r6 = newarray (long)[i0];
        r0.<java.io.ObjectStreamClass$FieldReflector: long[] readKeys> = $r6;
        $r7 = newarray (long)[i0];
        r0.<java.io.ObjectStreamClass$FieldReflector: long[] writeKeys> = $r7;
        $r8 = newarray (int)[i0];
        r0.<java.io.ObjectStreamClass$FieldReflector: int[] offsets> = $r8;
        $r9 = newarray (char)[i0];
        r0.<java.io.ObjectStreamClass$FieldReflector: char[] typeCodes> = $r9;
        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r2 = $r10;
        $r11 = new java.util.HashSet;
        specialinvoke $r11.<java.util.HashSet: void <init>()>();
        r3 = $r11;
        i1 = 0;

     label0:
        if i1 >= i0 goto label8;

        r4 = r1[i1];
        r5 = virtualinvoke r4.<java.io.ObjectStreamField: java.lang.reflect.Field getField()>();
        if r5 == null goto label1;

        $r12 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $l3 = virtualinvoke $r12.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>(r5);
        goto label2;

     label1:
        $l3 = -1L;

     label2:
        l2 = $l3;
        $r13 = r0.<java.io.ObjectStreamClass$FieldReflector: long[] readKeys>;
        $r13[i1] = l2;
        $r14 = r0.<java.io.ObjectStreamClass$FieldReflector: long[] writeKeys>;
        $i4 = i1;
        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);
        $z0 = interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r15);
        if $z0 == 0 goto label3;

        $l5 = l2;
        goto label4;

     label3:
        $l5 = -1L;

     label4:
        $r14[$i4] = $l5;
        $r16 = r0.<java.io.ObjectStreamClass$FieldReflector: int[] offsets>;
        $i6 = virtualinvoke r4.<java.io.ObjectStreamField: int getOffset()>();
        $r16[i1] = $i6;
        $r17 = r0.<java.io.ObjectStreamClass$FieldReflector: char[] typeCodes>;
        $c7 = virtualinvoke r4.<java.io.ObjectStreamField: char getTypeCode()>();
        $r17[i1] = $c7;
        $z1 = virtualinvoke r4.<java.io.ObjectStreamField: boolean isPrimitive()>();
        if $z1 != 0 goto label7;

        if r5 == null goto label5;

        $r19 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.Class getType()>();
        goto label6;

     label5:
        $r19 = null;

     label6:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label7:
        i1 = i1 + 1;
        goto label0;

     label8:
        $i8 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        $r20 = newarray (java.lang.Class)[$i8];
        $r21 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r20);
        $r22 = (java.lang.Class[]) $r21;
        r0.<java.io.ObjectStreamClass$FieldReflector: java.lang.Class[] types> = $r22;
        $r23 = r0.<java.io.ObjectStreamClass$FieldReflector: java.lang.Class[] types>;
        $i9 = lengthof $r23;
        $i10 = i0 - $i9;
        r0.<java.io.ObjectStreamClass$FieldReflector: int numPrimFields> = $i10;
        return;
    }

    java.io.ObjectStreamField[] getFields()
    {
        java.io.ObjectStreamClass$FieldReflector r0;
        java.io.ObjectStreamField[] $r1;

        r0 := @this: java.io.ObjectStreamClass$FieldReflector;
        $r1 = r0.<java.io.ObjectStreamClass$FieldReflector: java.io.ObjectStreamField[] fields>;
        return $r1;
    }

    void getPrimFieldValues(java.lang.Object, byte[])
    {
        java.io.ObjectStreamClass$FieldReflector r0;
        java.lang.Object r1;
        byte[] r2;
        int i0, i2, $i3, $i8;
        long l1, $l9;
        sun.misc.Unsafe $r3, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.NullPointerException $r4;
        long[] $r5;
        int[] $r6;
        char[] $r7;
        char $c4, $c6;
        boolean $z0;
        byte $b5;
        short $s7;
        float $f0;
        double $d0;
        java.lang.InternalError $r15;

        r0 := @this: java.io.ObjectStreamClass$FieldReflector;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: byte[];
        if r1 != null goto label0;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();
        throw $r4;

     label0:
        i0 = 0;

     label1:
        $i3 = r0.<java.io.ObjectStreamClass$FieldReflector: int numPrimFields>;
        if i0 >= $i3 goto label12;

        $r5 = r0.<java.io.ObjectStreamClass$FieldReflector: long[] readKeys>;
        l1 = $r5[i0];
        $r6 = r0.<java.io.ObjectStreamClass$FieldReflector: int[] offsets>;
        i2 = $r6[i0];
        $r7 = r0.<java.io.ObjectStreamClass$FieldReflector: char[] typeCodes>;
        $c4 = $r7[i0];
        tableswitch($c4)
        {
            case 66: goto label3;
            case 67: goto label4;
            case 68: goto label9;
            case 69: goto label10;
            case 70: goto label7;
            case 71: goto label10;
            case 72: goto label10;
            case 73: goto label6;
            case 74: goto label8;
            case 75: goto label10;
            case 76: goto label10;
            case 77: goto label10;
            case 78: goto label10;
            case 79: goto label10;
            case 80: goto label10;
            case 81: goto label10;
            case 82: goto label10;
            case 83: goto label5;
            case 84: goto label10;
            case 85: goto label10;
            case 86: goto label10;
            case 87: goto label10;
            case 88: goto label10;
            case 89: goto label10;
            case 90: goto label2;
            default: goto label10;
        };

     label2:
        $r3 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $z0 = virtualinvoke $r3.<sun.misc.Unsafe: boolean getBoolean(java.lang.Object,long)>(r1, l1);
        staticinvoke <java.io.Bits: void putBoolean(byte[],int,boolean)>(r2, i2, $z0);
        goto label11;

     label3:
        $r8 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $b5 = virtualinvoke $r8.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(r1, l1);
        r2[i2] = $b5;
        goto label11;

     label4:
        $r9 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $c6 = virtualinvoke $r9.<sun.misc.Unsafe: char getChar(java.lang.Object,long)>(r1, l1);
        staticinvoke <java.io.Bits: void putChar(byte[],int,char)>(r2, i2, $c6);
        goto label11;

     label5:
        $r10 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $s7 = virtualinvoke $r10.<sun.misc.Unsafe: short getShort(java.lang.Object,long)>(r1, l1);
        staticinvoke <java.io.Bits: void putShort(byte[],int,short)>(r2, i2, $s7);
        goto label11;

     label6:
        $r11 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $i8 = virtualinvoke $r11.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(r1, l1);
        staticinvoke <java.io.Bits: void putInt(byte[],int,int)>(r2, i2, $i8);
        goto label11;

     label7:
        $r12 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $f0 = virtualinvoke $r12.<sun.misc.Unsafe: float getFloat(java.lang.Object,long)>(r1, l1);
        staticinvoke <java.io.Bits: void putFloat(byte[],int,float)>(r2, i2, $f0);
        goto label11;

     label8:
        $r13 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $l9 = virtualinvoke $r13.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r1, l1);
        staticinvoke <java.io.Bits: void putLong(byte[],int,long)>(r2, i2, $l9);
        goto label11;

     label9:
        $r14 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $d0 = virtualinvoke $r14.<sun.misc.Unsafe: double getDouble(java.lang.Object,long)>(r1, l1);
        staticinvoke <java.io.Bits: void putDouble(byte[],int,double)>(r2, i2, $d0);
        goto label11;

     label10:
        $r15 = new java.lang.InternalError;
        specialinvoke $r15.<java.lang.InternalError: void <init>()>();
        throw $r15;

     label11:
        i0 = i0 + 1;
        goto label1;

     label12:
        return;
    }

    void setPrimFieldValues(java.lang.Object, byte[])
    {
        java.io.ObjectStreamClass$FieldReflector r0;
        java.lang.Object r1;
        byte[] r2;
        int i0, i2, $i3, $i9;
        long l1, $l10;
        java.lang.NullPointerException $r3;
        long[] $r4;
        byte $b4, $b6;
        int[] $r5;
        char[] $r6;
        char $c5, $c7;
        sun.misc.Unsafe $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0;
        short $s8;
        float $f0;
        double $d0;
        java.lang.InternalError $r15;

        r0 := @this: java.io.ObjectStreamClass$FieldReflector;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: byte[];
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label0:
        i0 = 0;

     label1:
        $i3 = r0.<java.io.ObjectStreamClass$FieldReflector: int numPrimFields>;
        if i0 >= $i3 goto label13;

        $r4 = r0.<java.io.ObjectStreamClass$FieldReflector: long[] writeKeys>;
        l1 = $r4[i0];
        $b4 = l1 cmp -1L;
        if $b4 != 0 goto label2;

        goto label12;

     label2:
        $r5 = r0.<java.io.ObjectStreamClass$FieldReflector: int[] offsets>;
        i2 = $r5[i0];
        $r6 = r0.<java.io.ObjectStreamClass$FieldReflector: char[] typeCodes>;
        $c5 = $r6[i0];
        tableswitch($c5)
        {
            case 66: goto label4;
            case 67: goto label5;
            case 68: goto label10;
            case 69: goto label11;
            case 70: goto label8;
            case 71: goto label11;
            case 72: goto label11;
            case 73: goto label7;
            case 74: goto label9;
            case 75: goto label11;
            case 76: goto label11;
            case 77: goto label11;
            case 78: goto label11;
            case 79: goto label11;
            case 80: goto label11;
            case 81: goto label11;
            case 82: goto label11;
            case 83: goto label6;
            case 84: goto label11;
            case 85: goto label11;
            case 86: goto label11;
            case 87: goto label11;
            case 88: goto label11;
            case 89: goto label11;
            case 90: goto label3;
            default: goto label11;
        };

     label3:
        $r7 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $z0 = staticinvoke <java.io.Bits: boolean getBoolean(byte[],int)>(r2, i2);
        virtualinvoke $r7.<sun.misc.Unsafe: void putBoolean(java.lang.Object,long,boolean)>(r1, l1, $z0);
        goto label12;

     label4:
        $r8 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $b6 = r2[i2];
        virtualinvoke $r8.<sun.misc.Unsafe: void putByte(java.lang.Object,long,byte)>(r1, l1, $b6);
        goto label12;

     label5:
        $r9 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $c7 = staticinvoke <java.io.Bits: char getChar(byte[],int)>(r2, i2);
        virtualinvoke $r9.<sun.misc.Unsafe: void putChar(java.lang.Object,long,char)>(r1, l1, $c7);
        goto label12;

     label6:
        $r10 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $s8 = staticinvoke <java.io.Bits: short getShort(byte[],int)>(r2, i2);
        virtualinvoke $r10.<sun.misc.Unsafe: void putShort(java.lang.Object,long,short)>(r1, l1, $s8);
        goto label12;

     label7:
        $r11 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $i9 = staticinvoke <java.io.Bits: int getInt(byte[],int)>(r2, i2);
        virtualinvoke $r11.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(r1, l1, $i9);
        goto label12;

     label8:
        $r12 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $f0 = staticinvoke <java.io.Bits: float getFloat(byte[],int)>(r2, i2);
        virtualinvoke $r12.<sun.misc.Unsafe: void putFloat(java.lang.Object,long,float)>(r1, l1, $f0);
        goto label12;

     label9:
        $r13 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $l10 = staticinvoke <java.io.Bits: long getLong(byte[],int)>(r2, i2);
        virtualinvoke $r13.<sun.misc.Unsafe: void putLong(java.lang.Object,long,long)>(r1, l1, $l10);
        goto label12;

     label10:
        $r14 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $d0 = staticinvoke <java.io.Bits: double getDouble(byte[],int)>(r2, i2);
        virtualinvoke $r14.<sun.misc.Unsafe: void putDouble(java.lang.Object,long,double)>(r1, l1, $d0);
        goto label12;

     label11:
        $r15 = new java.lang.InternalError;
        specialinvoke $r15.<java.lang.InternalError: void <init>()>();
        throw $r15;

     label12:
        i0 = i0 + 1;
        goto label1;

     label13:
        return;
    }

    void getObjFieldValues(java.lang.Object, java.lang.Object[])
    {
        java.io.ObjectStreamClass$FieldReflector r0;
        java.lang.Object r1, $r9;
        java.lang.Object[] r2;
        int i0, $i1, $i3;
        java.lang.NullPointerException $r3;
        java.io.ObjectStreamField[] $r4;
        char[] $r5;
        char $c2;
        int[] $r6;
        sun.misc.Unsafe $r7;
        long[] $r8;
        long $l4;
        java.lang.InternalError $r10;

        r0 := @this: java.io.ObjectStreamClass$FieldReflector;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object[];
        if r1 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();
        throw $r3;

     label0:
        i0 = r0.<java.io.ObjectStreamClass$FieldReflector: int numPrimFields>;

     label1:
        $r4 = r0.<java.io.ObjectStreamClass$FieldReflector: java.io.ObjectStreamField[] fields>;
        $i1 = lengthof $r4;
        if i0 >= $i1 goto label5;

        $r5 = r0.<java.io.ObjectStreamClass$FieldReflector: char[] typeCodes>;
        $c2 = $r5[i0];
        lookupswitch($c2)
        {
            case 76: goto label2;
            case 91: goto label2;
            default: goto label3;
        };

     label2:
        $r6 = r0.<java.io.ObjectStreamClass$FieldReflector: int[] offsets>;
        $i3 = $r6[i0];
        $r7 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        $r8 = r0.<java.io.ObjectStreamClass$FieldReflector: long[] readKeys>;
        $l4 = $r8[i0];
        $r9 = virtualinvoke $r7.<sun.misc.Unsafe: java.lang.Object getObject(java.lang.Object,long)>(r1, $l4);
        r2[$i3] = $r9;
        goto label4;

     label3:
        $r10 = new java.lang.InternalError;
        specialinvoke $r10.<java.lang.InternalError: void <init>()>();
        throw $r10;

     label4:
        i0 = i0 + 1;
        goto label1;

     label5:
        return;
    }

    void setObjFieldValues(java.lang.Object, java.lang.Object[])
    {
        java.io.ObjectStreamClass$FieldReflector r0;
        java.lang.Object r1, r3;
        java.lang.Object[] r2;
        int i0, $i2, $i5, $i6, $i7;
        long l1;
        java.lang.reflect.Field r4;
        java.lang.NullPointerException $r5;
        java.io.ObjectStreamField[] $r6, $r12;
        long[] $r7;
        byte $b3;
        char[] $r8;
        char $c4;
        int[] $r9;
        java.lang.Class[] $r10;
        java.lang.Class $r11, $r17, $r21, $r28, $r32;
        boolean $z0;
        java.io.ObjectStreamField $r13;
        java.lang.ClassCastException $r14;
        java.lang.StringBuilder $r15, $r16, $r19, $r20, $r23, $r24, $r26, $r27, $r30, $r31, $r34;
        java.lang.String $r18, $r22, $r25, $r29, $r33, $r35;
        sun.misc.Unsafe $r36;
        java.lang.InternalError $r37;

        r0 := @this: java.io.ObjectStreamClass$FieldReflector;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object[];
        if r1 != null goto label0;

        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();
        throw $r5;

     label0:
        i0 = r0.<java.io.ObjectStreamClass$FieldReflector: int numPrimFields>;

     label1:
        $r6 = r0.<java.io.ObjectStreamClass$FieldReflector: java.io.ObjectStreamField[] fields>;
        $i2 = lengthof $r6;
        if i0 >= $i2 goto label7;

        $r7 = r0.<java.io.ObjectStreamClass$FieldReflector: long[] writeKeys>;
        l1 = $r7[i0];
        $b3 = l1 cmp -1L;
        if $b3 != 0 goto label2;

        goto label6;

     label2:
        $r8 = r0.<java.io.ObjectStreamClass$FieldReflector: char[] typeCodes>;
        $c4 = $r8[i0];
        lookupswitch($c4)
        {
            case 76: goto label3;
            case 91: goto label3;
            default: goto label5;
        };

     label3:
        $r9 = r0.<java.io.ObjectStreamClass$FieldReflector: int[] offsets>;
        $i5 = $r9[i0];
        r3 = r2[$i5];
        if r3 == null goto label4;

        $r10 = r0.<java.io.ObjectStreamClass$FieldReflector: java.lang.Class[] types>;
        $i6 = r0.<java.io.ObjectStreamClass$FieldReflector: int numPrimFields>;
        $i7 = i0 - $i6;
        $r11 = $r10[$i7];
        $z0 = virtualinvoke $r11.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3);
        if $z0 != 0 goto label4;

        $r12 = r0.<java.io.ObjectStreamClass$FieldReflector: java.io.ObjectStreamField[] fields>;
        $r13 = $r12[i0];
        r4 = virtualinvoke $r13.<java.io.ObjectStreamField: java.lang.reflect.Field getField()>();
        $r14 = new java.lang.ClassCastException;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot assign instance of ");
        $r17 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();
        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to field ");
        $r21 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();
        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();
        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r25 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.String getName()>();
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ");
        $r28 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Class getType()>();
        $r29 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();
        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in instance of ");
        $r32 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r33 = virtualinvoke $r32.<java.lang.Class: java.lang.String getName()>();
        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<java.lang.ClassCastException: void <init>(java.lang.String)>($r35);
        throw $r14;

     label4:
        $r36 = <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe>;
        virtualinvoke $r36.<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>(r1, l1, r3);
        goto label6;

     label5:
        $r37 = new java.lang.InternalError;
        specialinvoke $r37.<java.lang.InternalError: void <init>()>();
        throw $r37;

     label6:
        i0 = i0 + 1;
        goto label1;

     label7:
        return;
    }

    static void <clinit>()
    {
        sun.misc.Unsafe $r0;

        $r0 = staticinvoke <sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()>();
        <java.io.ObjectStreamClass$FieldReflector: sun.misc.Unsafe unsafe> = $r0;
        return;
    }
}
