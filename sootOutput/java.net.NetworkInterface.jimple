public final class java.net.NetworkInterface extends java.lang.Object
{
    private java.lang.String name;
    private java.lang.String displayName;
    private int index;
    private java.net.InetAddress[] addrs;
    private java.net.InterfaceAddress[] bindings;
    private java.net.NetworkInterface[] childs;
    private java.net.NetworkInterface parent;
    private boolean virtual;
    private static final java.net.NetworkInterface defaultInterface;
    private static final int defaultIndex;

    void <init>()
    {
        java.net.NetworkInterface r0;

        r0 := @this: java.net.NetworkInterface;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.net.NetworkInterface: java.net.NetworkInterface parent> = null;
        r0.<java.net.NetworkInterface: boolean virtual> = 0;
        return;
    }

    void <init>(java.lang.String, int, java.net.InetAddress[])
    {
        java.net.NetworkInterface r0;
        java.lang.String r1;
        int i0;
        java.net.InetAddress[] r2;

        r0 := @this: java.net.NetworkInterface;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: java.net.InetAddress[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.net.NetworkInterface: java.net.NetworkInterface parent> = null;
        r0.<java.net.NetworkInterface: boolean virtual> = 0;
        r0.<java.net.NetworkInterface: java.lang.String name> = r1;
        r0.<java.net.NetworkInterface: int index> = i0;
        r0.<java.net.NetworkInterface: java.net.InetAddress[] addrs> = r2;
        return;
    }

    public java.lang.String getName()
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1;

        r0 := @this: java.net.NetworkInterface;
        $r1 = r0.<java.net.NetworkInterface: java.lang.String name>;
        return $r1;
    }

    public java.util.Enumeration getInetAddresses()
    {
        java.net.NetworkInterface r0;
        java.net.NetworkInterface$1checkedAddresses $r1;

        r0 := @this: java.net.NetworkInterface;
        $r1 = new java.net.NetworkInterface$1checkedAddresses;
        specialinvoke $r1.<java.net.NetworkInterface$1checkedAddresses: void <init>(java.net.NetworkInterface)>(r0);
        return $r1;
    }

    public java.util.List getInterfaceAddresses()
    {
        java.net.NetworkInterface r0;
        java.util.ArrayList $r1, r2;
        java.lang.SecurityManager r3;
        int i0, $i1;
        java.lang.SecurityException r4, $r12;
        java.net.InterfaceAddress[] $r5, $r6, $r10;
        java.net.InterfaceAddress $r7, $r11;
        java.net.InetAddress $r8;
        java.lang.String $r9;

        r0 := @this: java.net.NetworkInterface;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1);
        r2 = $r1;
        r3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        i0 = 0;

     label0:
        $r5 = r0.<java.net.NetworkInterface: java.net.InterfaceAddress[] bindings>;
        $i1 = lengthof $r5;
        if i0 >= $i1 goto label6;

     label1:
        if r3 == null goto label2;

        $r6 = r0.<java.net.NetworkInterface: java.net.InterfaceAddress[] bindings>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r7.<java.net.InterfaceAddress: java.net.InetAddress getAddress()>();
        $r9 = virtualinvoke $r8.<java.net.InetAddress: java.lang.String getHostAddress()>();
        virtualinvoke r3.<java.lang.SecurityManager: void checkConnect(java.lang.String,int)>($r9, -1);

     label2:
        $r10 = r0.<java.net.NetworkInterface: java.net.InterfaceAddress[] bindings>;
        $r11 = $r10[i0];
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;
        r4 = $r12;

     label5:
        i0 = i0 + 1;
        goto label0;

     label6:
        return r2;

        catch java.lang.SecurityException from label1 to label3 with label4;
    }

    public java.util.Enumeration getSubInterfaces()
    {
        java.net.NetworkInterface r0;
        java.net.NetworkInterface$1subIFs $r1;

        r0 := @this: java.net.NetworkInterface;
        $r1 = new java.net.NetworkInterface$1subIFs;
        specialinvoke $r1.<java.net.NetworkInterface$1subIFs: void <init>(java.net.NetworkInterface)>(r0);
        return $r1;
    }

    public java.net.NetworkInterface getParent()
    {
        java.net.NetworkInterface r0, $r1;

        r0 := @this: java.net.NetworkInterface;
        $r1 = r0.<java.net.NetworkInterface: java.net.NetworkInterface parent>;
        return $r1;
    }

    public int getIndex()
    {
        java.net.NetworkInterface r0;
        int $i0;

        r0 := @this: java.net.NetworkInterface;
        $i0 = r0.<java.net.NetworkInterface: int index>;
        return $i0;
    }

    public java.lang.String getDisplayName()
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;
        $r1 = "";
        $r2 = r0.<java.net.NetworkInterface: java.lang.String displayName>;
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label0;

        $r3 = null;
        goto label1;

     label0:
        $r3 = r0.<java.net.NetworkInterface: java.lang.String displayName>;

     label1:
        return $r3;
    }

    public static java.net.NetworkInterface getByName(java.lang.String) throws java.net.SocketException
    {
        java.lang.String r0;
        java.lang.NullPointerException $r1;
        java.net.NetworkInterface $r2;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        $r1 = new java.lang.NullPointerException;
        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();
        throw $r1;

     label0:
        $r2 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByName0(java.lang.String)>(r0);
        return $r2;
    }

    public static java.net.NetworkInterface getByIndex(int) throws java.net.SocketException
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.net.NetworkInterface $r1;

        i0 := @parameter0: int;
        if i0 >= 0 goto label0;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Interface index can\'t be negative");
        throw $r0;

     label0:
        $r1 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByIndex0(int)>(i0);
        return $r1;
    }

    public static java.net.NetworkInterface getByInetAddress(java.net.InetAddress) throws java.net.SocketException
    {
        java.net.InetAddress r0;
        java.lang.NullPointerException $r1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.net.NetworkInterface $r3;

        r0 := @parameter0: java.net.InetAddress;
        if r0 != null goto label0;

        $r1 = new java.lang.NullPointerException;
        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();
        throw $r1;

     label0:
        $z0 = r0 instanceof java.net.Inet4Address;
        if $z0 != 0 goto label1;

        $z1 = r0 instanceof java.net.Inet6Address;
        if $z1 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid address type");
        throw $r2;

     label1:
        $r3 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress0(java.net.InetAddress)>(r0);
        return $r3;
    }

    public static java.util.Enumeration getNetworkInterfaces() throws java.net.SocketException
    {
        java.net.NetworkInterface[] r0;
        java.net.NetworkInterface$1 $r1;

        r0 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface[] getAll()>();
        if r0 != null goto label0;

        return null;

     label0:
        $r1 = new java.net.NetworkInterface$1;
        specialinvoke $r1.<java.net.NetworkInterface$1: void <init>(java.net.NetworkInterface[])>(r0);
        return $r1;
    }

    private static native java.net.NetworkInterface[] getAll() throws java.net.SocketException;

    private static native java.net.NetworkInterface getByName0(java.lang.String) throws java.net.SocketException;

    private static native java.net.NetworkInterface getByIndex0(int) throws java.net.SocketException;

    private static native java.net.NetworkInterface getByInetAddress0(java.net.InetAddress) throws java.net.SocketException;

    public boolean isUp() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;
        $r1 = r0.<java.net.NetworkInterface: java.lang.String name>;
        $i0 = r0.<java.net.NetworkInterface: int index>;
        $z0 = staticinvoke <java.net.NetworkInterface: boolean isUp0(java.lang.String,int)>($r1, $i0);
        return $z0;
    }

    public boolean isLoopback() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;
        $r1 = r0.<java.net.NetworkInterface: java.lang.String name>;
        $i0 = r0.<java.net.NetworkInterface: int index>;
        $z0 = staticinvoke <java.net.NetworkInterface: boolean isLoopback0(java.lang.String,int)>($r1, $i0);
        return $z0;
    }

    public boolean isPointToPoint() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;
        $r1 = r0.<java.net.NetworkInterface: java.lang.String name>;
        $i0 = r0.<java.net.NetworkInterface: int index>;
        $z0 = staticinvoke <java.net.NetworkInterface: boolean isP2P0(java.lang.String,int)>($r1, $i0);
        return $z0;
    }

    public boolean supportsMulticast() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;
        $r1 = r0.<java.net.NetworkInterface: java.lang.String name>;
        $i0 = r0.<java.net.NetworkInterface: int index>;
        $z0 = staticinvoke <java.net.NetworkInterface: boolean supportsMulticast0(java.lang.String,int)>($r1, $i0);
        return $z0;
    }

    public byte[] getHardwareAddress() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        java.lang.SecurityManager r1;
        java.net.NetPermission $r2;
        java.lang.SecurityException r3, $r5;
        int i0, i1, $i2, $i3;
        java.net.InetAddress r4;
        java.util.Enumeration $r6;
        boolean $z0, $z1;
        java.net.InetAddress[] r7;
        java.net.Inet4Address $r8;
        byte[] $r9, $r11, $r13;
        java.lang.String $r10, $r12;

        r0 := @this: java.net.NetworkInterface;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label3;

     label0:
        $r2 = new java.net.NetPermission;
        specialinvoke $r2.<java.net.NetPermission: void <init>(java.lang.String)>("getNetworkInformation");
        virtualinvoke r1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = virtualinvoke r0.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>();
        $z0 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 != 0 goto label3;

        return null;

     label3:
        r7 = r0.<java.net.NetworkInterface: java.net.InetAddress[] addrs>;
        i0 = lengthof r7;
        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        r4 = r7[i1];
        $z1 = r4 instanceof java.net.Inet4Address;
        if $z1 == 0 goto label5;

        $r8 = (java.net.Inet4Address) r4;
        $r9 = virtualinvoke $r8.<java.net.Inet4Address: byte[] getAddress()>();
        $r10 = r0.<java.net.NetworkInterface: java.lang.String name>;
        $i2 = r0.<java.net.NetworkInterface: int index>;
        $r11 = staticinvoke <java.net.NetworkInterface: byte[] getMacAddr0(byte[],java.lang.String,int)>($r9, $r10, $i2);
        return $r11;

     label5:
        i1 = i1 + 1;
        goto label4;

     label6:
        $r12 = r0.<java.net.NetworkInterface: java.lang.String name>;
        $i3 = r0.<java.net.NetworkInterface: int index>;
        $r13 = staticinvoke <java.net.NetworkInterface: byte[] getMacAddr0(byte[],java.lang.String,int)>(null, $r12, $i3);
        return $r13;

        catch java.lang.SecurityException from label0 to label1 with label2;
    }

    public int getMTU() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1;
        int $i0, $i1;

        r0 := @this: java.net.NetworkInterface;
        $r1 = r0.<java.net.NetworkInterface: java.lang.String name>;
        $i0 = r0.<java.net.NetworkInterface: int index>;
        $i1 = staticinvoke <java.net.NetworkInterface: int getMTU0(java.lang.String,int)>($r1, $i0);
        return $i1;
    }

    public boolean isVirtual()
    {
        java.net.NetworkInterface r0;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;
        $z0 = r0.<java.net.NetworkInterface: boolean virtual>;
        return $z0;
    }

    private static native boolean isUp0(java.lang.String, int) throws java.net.SocketException;

    private static native boolean isLoopback0(java.lang.String, int) throws java.net.SocketException;

    private static native boolean supportsMulticast0(java.lang.String, int) throws java.net.SocketException;

    private static native boolean isP2P0(java.lang.String, int) throws java.net.SocketException;

    private static native byte[] getMacAddr0(byte[], java.lang.String, int) throws java.net.SocketException;

    private static native int getMTU0(java.lang.String, int) throws java.net.SocketException;

    public boolean equals(java.lang.Object)
    {
        java.net.NetworkInterface r0, r2;
        java.lang.Object r1;
        java.net.InetAddress[] r3, $r8, $r9, $r10, $r11, $r12, $r13;
        int i0, i1, i2, $i3, $i4;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String $r4, $r5, $r6, $r7;
        java.net.InetAddress $r14, $r15;

        r0 := @this: java.net.NetworkInterface;
        r1 := @parameter0: java.lang.Object;
        $z1 = r1 instanceof java.net.NetworkInterface;
        if $z1 != 0 goto label0;

        return 0;

     label0:
        r2 = (java.net.NetworkInterface) r1;
        $r4 = r0.<java.net.NetworkInterface: java.lang.String name>;
        if $r4 == null goto label1;

        $r5 = r0.<java.net.NetworkInterface: java.lang.String name>;
        $r6 = r2.<java.net.NetworkInterface: java.lang.String name>;
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z2 != 0 goto label2;

        return 0;

     label1:
        $r7 = r2.<java.net.NetworkInterface: java.lang.String name>;
        if $r7 == null goto label2;

        return 0;

     label2:
        $r8 = r0.<java.net.NetworkInterface: java.net.InetAddress[] addrs>;
        if $r8 != null goto label5;

        $r9 = r2.<java.net.NetworkInterface: java.net.InetAddress[] addrs>;
        if $r9 != null goto label3;

        $z3 = 1;
        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        $r10 = r2.<java.net.NetworkInterface: java.net.InetAddress[] addrs>;
        if $r10 != null goto label6;

        return 0;

     label6:
        $r11 = r0.<java.net.NetworkInterface: java.net.InetAddress[] addrs>;
        $i3 = lengthof $r11;
        $r12 = r2.<java.net.NetworkInterface: java.net.InetAddress[] addrs>;
        $i4 = lengthof $r12;
        if $i3 == $i4 goto label7;

        return 0;

     label7:
        r3 = r2.<java.net.NetworkInterface: java.net.InetAddress[] addrs>;
        i0 = lengthof r3;
        i1 = 0;

     label8:
        if i1 >= i0 goto label13;

        z0 = 0;
        i2 = 0;

     label9:
        if i2 >= i0 goto label11;

        $r13 = r0.<java.net.NetworkInterface: java.net.InetAddress[] addrs>;
        $r14 = $r13[i1];
        $r15 = r3[i2];
        $z4 = virtualinvoke $r14.<java.net.InetAddress: boolean equals(java.lang.Object)>($r15);
        if $z4 == 0 goto label10;

        z0 = 1;
        goto label11;

     label10:
        i2 = i2 + 1;
        goto label9;

     label11:
        if z0 != 0 goto label12;

        return 0;

     label12:
        i1 = i1 + 1;
        goto label8;

     label13:
        return 1;
    }

    public int hashCode()
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: java.net.NetworkInterface;
        $r1 = r0.<java.net.NetworkInterface: java.lang.String name>;
        if $r1 != null goto label0;

        $i0 = 0;
        goto label1;

     label0:
        $r2 = r0.<java.net.NetworkInterface: java.lang.String name>;
        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label1:
        return $i0;
    }

    public java.lang.String toString()
    {
        java.net.NetworkInterface r0;
        java.lang.String r1, $r4, $r5, r7, $r8, $r12;
        java.lang.StringBuilder $r2, $r3, $r6, $r9, $r10, $r11, $r13, $r14;

        r0 := @this: java.net.NetworkInterface;
        r1 = "name:";
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r4 = r0.<java.net.NetworkInterface: java.lang.String name>;
        if $r4 != null goto label0;

        $r5 = "null";
        goto label1;

     label0:
        $r5 = r0.<java.net.NetworkInterface: java.lang.String name>;

     label1:
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r8 = r0.<java.net.NetworkInterface: java.lang.String displayName>;
        if $r8 == null goto label2;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");
        $r12 = r0.<java.net.NetworkInterface: java.lang.String displayName>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r7;
    }

    private static native void init();

    static java.net.NetworkInterface getDefault()
    {
        java.net.NetworkInterface $r0;

        $r0 = <java.net.NetworkInterface: java.net.NetworkInterface defaultInterface>;
        return $r0;
    }

    static java.net.InetAddress[] access$000(java.net.NetworkInterface)
    {
        java.net.NetworkInterface r0;
        java.net.InetAddress[] $r1;

        r0 := @parameter0: java.net.NetworkInterface;
        $r1 = r0.<java.net.NetworkInterface: java.net.InetAddress[] addrs>;
        return $r1;
    }

    static java.net.NetworkInterface[] access$100(java.net.NetworkInterface)
    {
        java.net.NetworkInterface r0;
        java.net.NetworkInterface[] $r1;

        r0 := @parameter0: java.net.NetworkInterface;
        $r1 = r0.<java.net.NetworkInterface: java.net.NetworkInterface[] childs>;
        return $r1;
    }

    static void <clinit>()
    {
        sun.security.action.LoadLibraryAction $r0;
        java.net.NetworkInterface $r2, $r3, $r4;
        int $i0;

        $r0 = new sun.security.action.LoadLibraryAction;
        specialinvoke $r0.<sun.security.action.LoadLibraryAction: void <init>(java.lang.String)>("net");
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        staticinvoke <java.net.NetworkInterface: void init()>();
        $r2 = staticinvoke <java.net.DefaultInterface: java.net.NetworkInterface getDefault()>();
        <java.net.NetworkInterface: java.net.NetworkInterface defaultInterface> = $r2;
        $r3 = <java.net.NetworkInterface: java.net.NetworkInterface defaultInterface>;
        if $r3 == null goto label0;

        $r4 = <java.net.NetworkInterface: java.net.NetworkInterface defaultInterface>;
        $i0 = virtualinvoke $r4.<java.net.NetworkInterface: int getIndex()>();
        <java.net.NetworkInterface: int defaultIndex> = $i0;
        goto label1;

     label0:
        <java.net.NetworkInterface: int defaultIndex> = 0;

     label1:
        return;
    }
}
