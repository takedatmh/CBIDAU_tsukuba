public class org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement extends java.lang.Object implements org.apache.catalina.valves.AccessLogValve$AccessLogElement
{
    private final boolean millis;

    public void <init>(boolean)
    {
        org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement;
        z0 := @parameter0: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement: boolean millis> = z0;
        return;
    }

    public void addElement(java.lang.StringBuilder, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)
    {
        org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement r0;
        java.lang.StringBuilder r1;
        java.util.Date r2;
        org.apache.catalina.connector.Request r3;
        org.apache.catalina.connector.Response r4;
        long l0, $l2, $l3;
        int i1, $i4, i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement;
        r1 := @parameter0: java.lang.StringBuilder;
        r2 := @parameter1: java.util.Date;
        r3 := @parameter2: org.apache.catalina.connector.Request;
        r4 := @parameter3: org.apache.catalina.connector.Response;
        l0 := @parameter4: long;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement: boolean millis>;
        if $z0 == 0 goto label0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);
        goto label1;

     label0:
        $l2 = l0 / 1000L;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
        $l3 = l0 % 1000L;
        i1 = (int) $l3;
        $i4 = i1 / 100;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        i5 = i1 % 100;
        $i6 = i5 / 10;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
        $i7 = i5 % 10;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

     label1:
        return;
    }
}
