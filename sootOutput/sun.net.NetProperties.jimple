public class sun.net.NetProperties extends java.lang.Object
{
    private static java.util.Properties props;

    private void <init>()
    {
        sun.net.NetProperties r0;

        r0 := @this: sun.net.NetProperties;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static void loadDefaultProperties()
    {
        java.lang.String r0, r8;
        java.io.File r1, $r5, $r6, r7;
        java.io.FileInputStream r2, $r9;
        java.io.BufferedInputStream r3, $r10;
        java.lang.Error $r4;
        java.util.Properties $r11;
        java.lang.Exception $r12, r13;

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");
        if r0 != null goto label0;

        $r4 = new java.lang.Error;
        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>("Can\'t find java.home ??");
        throw $r4;

     label0:
        $r5 = new java.io.File;
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r0, "lib");
        r1 = $r5;
        $r6 = new java.io.File;
        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "net.properties");
        r7 = $r6;
        r8 = virtualinvoke r7.<java.io.File: java.lang.String getCanonicalPath()>();
        $r9 = new java.io.FileInputStream;
        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.lang.String)>(r8);
        r2 = $r9;
        $r10 = new java.io.BufferedInputStream;
        specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r2);
        r3 = $r10;
        $r11 = <sun.net.NetProperties: java.util.Properties props>;
        virtualinvoke $r11.<java.util.Properties: void load(java.io.InputStream)>(r3);
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

     label1:
        goto label3;

     label2:
        $r12 := @caughtexception;
        r13 = $r12;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public static java.lang.String get(java.lang.String)
    {
        java.lang.String r0, r2, $r4;
        java.util.Properties $r1;
        java.lang.IllegalArgumentException r3, $r5;
        java.lang.NullPointerException $r6, r7;

        r0 := @parameter0: java.lang.String;
        $r1 = <sun.net.NetProperties: java.util.Properties props>;
        r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

     label0:
        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(r0, r2);

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        goto label4;

     label3:
        $r6 := @caughtexception;
        r7 = $r6;

     label4:
        return null;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
        catch java.lang.NullPointerException from label0 to label1 with label3;
    }

    public static java.lang.Integer getInteger(java.lang.String, int)
    {
        java.lang.String r0, r1, $r4;
        int i0;
        java.util.Properties $r2;
        java.lang.IllegalArgumentException r3, $r5;
        java.lang.NullPointerException $r6, r7;
        java.lang.Integer $r8, $r11;
        java.lang.NumberFormatException $r9, r10;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r1 = null;

     label0:
        $r2 = <sun.net.NetProperties: java.util.Properties props>;
        $r4 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(r0, $r4);

     label1:
        goto label4;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        goto label4;

     label3:
        $r6 := @caughtexception;
        r7 = $r6;

     label4:
        if r1 == null goto label8;

     label5:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(r1);

     label6:
        return $r8;

     label7:
        $r9 := @caughtexception;
        r10 = $r9;

     label8:
        $r11 = new java.lang.Integer;
        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(i0);
        return $r11;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
        catch java.lang.NullPointerException from label0 to label1 with label3;
        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }

    public static java.lang.Boolean getBoolean(java.lang.String)
    {
        java.lang.String r0, r1, $r4;
        java.util.Properties $r2;
        java.lang.IllegalArgumentException r3, $r5;
        java.lang.NullPointerException $r6, r7;
        java.lang.Boolean $r8;
        java.lang.NumberFormatException $r9, r10;

        r0 := @parameter0: java.lang.String;
        r1 = null;

     label0:
        $r2 = <sun.net.NetProperties: java.util.Properties props>;
        $r4 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(r0, $r4);

     label1:
        goto label4;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        goto label4;

     label3:
        $r6 := @caughtexception;
        r7 = $r6;

     label4:
        if r1 == null goto label8;

     label5:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r1);

     label6:
        return $r8;

     label7:
        $r9 := @caughtexception;
        r10 = $r9;

     label8:
        return null;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
        catch java.lang.NullPointerException from label0 to label1 with label3;
        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }

    static void access$000()
    {
        staticinvoke <sun.net.NetProperties: void loadDefaultProperties()>();
        return;
    }

    static void <clinit>()
    {
        java.util.Properties $r0;
        sun.net.NetProperties$1 $r1;

        $r0 = new java.util.Properties;
        specialinvoke $r0.<java.util.Properties: void <init>()>();
        <sun.net.NetProperties: java.util.Properties props> = $r0;
        $r1 = new sun.net.NetProperties$1;
        specialinvoke $r1.<sun.net.NetProperties$1: void <init>()>();
        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);
        return;
    }
}
