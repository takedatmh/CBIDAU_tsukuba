public class sun.reflect.generics.tree.FormalTypeParameter extends java.lang.Object implements sun.reflect.generics.tree.TypeTree
{
    private java.lang.String name;
    private sun.reflect.generics.tree.FieldTypeSignature[] bounds;

    private void <init>(java.lang.String, sun.reflect.generics.tree.FieldTypeSignature[])
    {
        sun.reflect.generics.tree.FormalTypeParameter r0;
        java.lang.String r1;
        sun.reflect.generics.tree.FieldTypeSignature[] r2;

        r0 := @this: sun.reflect.generics.tree.FormalTypeParameter;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: sun.reflect.generics.tree.FieldTypeSignature[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.reflect.generics.tree.FormalTypeParameter: java.lang.String name> = r1;
        r0.<sun.reflect.generics.tree.FormalTypeParameter: sun.reflect.generics.tree.FieldTypeSignature[] bounds> = r2;
        return;
    }

    public static sun.reflect.generics.tree.FormalTypeParameter make(java.lang.String, sun.reflect.generics.tree.FieldTypeSignature[])
    {
        java.lang.String r0;
        sun.reflect.generics.tree.FieldTypeSignature[] r1;
        sun.reflect.generics.tree.FormalTypeParameter $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: sun.reflect.generics.tree.FieldTypeSignature[];
        $r2 = new sun.reflect.generics.tree.FormalTypeParameter;
        specialinvoke $r2.<sun.reflect.generics.tree.FormalTypeParameter: void <init>(java.lang.String,sun.reflect.generics.tree.FieldTypeSignature[])>(r0, r1);
        return $r2;
    }

    public sun.reflect.generics.tree.FieldTypeSignature[] getBounds()
    {
        sun.reflect.generics.tree.FormalTypeParameter r0;
        sun.reflect.generics.tree.FieldTypeSignature[] $r1;

        r0 := @this: sun.reflect.generics.tree.FormalTypeParameter;
        $r1 = r0.<sun.reflect.generics.tree.FormalTypeParameter: sun.reflect.generics.tree.FieldTypeSignature[] bounds>;
        return $r1;
    }

    public java.lang.String getName()
    {
        sun.reflect.generics.tree.FormalTypeParameter r0;
        java.lang.String $r1;

        r0 := @this: sun.reflect.generics.tree.FormalTypeParameter;
        $r1 = r0.<sun.reflect.generics.tree.FormalTypeParameter: java.lang.String name>;
        return $r1;
    }

    public void accept(sun.reflect.generics.visitor.TypeTreeVisitor)
    {
        sun.reflect.generics.tree.FormalTypeParameter r0;
        sun.reflect.generics.visitor.TypeTreeVisitor r1;

        r0 := @this: sun.reflect.generics.tree.FormalTypeParameter;
        r1 := @parameter0: sun.reflect.generics.visitor.TypeTreeVisitor;
        interfaceinvoke r1.<sun.reflect.generics.visitor.TypeTreeVisitor: void visitFormalTypeParameter(sun.reflect.generics.tree.FormalTypeParameter)>(r0);
        return;
    }
}
