public class org.apache.tomcat.util.buf.StringCache extends java.lang.Object
{
    private static final org.apache.juli.logging.Log log;
    protected static boolean byteEnabled;
    protected static boolean charEnabled;
    protected static int trainThreshold;
    protected static int cacheSize;
    protected static int maxStringSize;
    protected static java.util.HashMap bcStats;
    protected static int bcCount;
    protected static org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache;
    protected static java.util.HashMap ccStats;
    protected static int ccCount;
    protected static org.apache.tomcat.util.buf.StringCache$CharEntry[] ccCache;
    protected static int accessCount;
    protected static int hitCount;

    static void <clinit>()
    {
        org.apache.juli.logging.Log $r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.HashMap $r8, $r9;

        $r0 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/tomcat/util/buf/StringCache");
        <org.apache.tomcat.util.buf.StringCache: org.apache.juli.logging.Log log> = $r0;
        $r1 = "true";
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("tomcat.util.buf.StringCache.byte.enabled", "false");
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        <org.apache.tomcat.util.buf.StringCache: boolean byteEnabled> = $z0;
        $r3 = "true";
        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("tomcat.util.buf.StringCache.char.enabled", "false");
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        <org.apache.tomcat.util.buf.StringCache: boolean charEnabled> = $z1;
        $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("tomcat.util.buf.StringCache.trainThreshold", "20000");
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
        <org.apache.tomcat.util.buf.StringCache: int trainThreshold> = $i0;
        $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("tomcat.util.buf.StringCache.cacheSize", "200");
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);
        <org.apache.tomcat.util.buf.StringCache: int cacheSize> = $i1;
        $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("tomcat.util.buf.StringCache.maxStringSize", "128");
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);
        <org.apache.tomcat.util.buf.StringCache: int maxStringSize> = $i2;
        $r8 = new java.util.HashMap;
        $i3 = <org.apache.tomcat.util.buf.StringCache: int cacheSize>;
        specialinvoke $r8.<java.util.HashMap: void <init>(int)>($i3);
        <org.apache.tomcat.util.buf.StringCache: java.util.HashMap bcStats> = $r8;
        <org.apache.tomcat.util.buf.StringCache: int bcCount> = 0;
        <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache> = null;
        $r9 = new java.util.HashMap;
        $i4 = <org.apache.tomcat.util.buf.StringCache: int cacheSize>;
        specialinvoke $r9.<java.util.HashMap: void <init>(int)>($i4);
        <org.apache.tomcat.util.buf.StringCache: java.util.HashMap ccStats> = $r9;
        <org.apache.tomcat.util.buf.StringCache: int ccCount> = 0;
        <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$CharEntry[] ccCache> = null;
        <org.apache.tomcat.util.buf.StringCache: int accessCount> = 0;
        <org.apache.tomcat.util.buf.StringCache: int hitCount> = 0;
        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.buf.StringCache r0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public int getCacheSize()
    {
        org.apache.tomcat.util.buf.StringCache r0;
        int $i0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        $i0 = <org.apache.tomcat.util.buf.StringCache: int cacheSize>;
        return $i0;
    }

    public void setCacheSize(int)
    {
        org.apache.tomcat.util.buf.StringCache r0;
        int i0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        i0 := @parameter0: int;
        <org.apache.tomcat.util.buf.StringCache: int cacheSize> = i0;
        return;
    }

    public boolean getByteEnabled()
    {
        org.apache.tomcat.util.buf.StringCache r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        $z0 = <org.apache.tomcat.util.buf.StringCache: boolean byteEnabled>;
        return $z0;
    }

    public void setByteEnabled(boolean)
    {
        org.apache.tomcat.util.buf.StringCache r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        z0 := @parameter0: boolean;
        <org.apache.tomcat.util.buf.StringCache: boolean byteEnabled> = z0;
        return;
    }

    public boolean getCharEnabled()
    {
        org.apache.tomcat.util.buf.StringCache r0;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        $z0 = <org.apache.tomcat.util.buf.StringCache: boolean charEnabled>;
        return $z0;
    }

    public void setCharEnabled(boolean)
    {
        org.apache.tomcat.util.buf.StringCache r0;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        z0 := @parameter0: boolean;
        <org.apache.tomcat.util.buf.StringCache: boolean charEnabled> = z0;
        return;
    }

    public int getTrainThreshold()
    {
        org.apache.tomcat.util.buf.StringCache r0;
        int $i0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        $i0 = <org.apache.tomcat.util.buf.StringCache: int trainThreshold>;
        return $i0;
    }

    public void setTrainThreshold(int)
    {
        org.apache.tomcat.util.buf.StringCache r0;
        int i0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        i0 := @parameter0: int;
        <org.apache.tomcat.util.buf.StringCache: int trainThreshold> = i0;
        return;
    }

    public int getAccessCount()
    {
        org.apache.tomcat.util.buf.StringCache r0;
        int $i0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        $i0 = <org.apache.tomcat.util.buf.StringCache: int accessCount>;
        return $i0;
    }

    public int getHitCount()
    {
        org.apache.tomcat.util.buf.StringCache r0;
        int $i0;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        $i0 = <org.apache.tomcat.util.buf.StringCache: int hitCount>;
        return $i0;
    }

    public void reset()
    {
        org.apache.tomcat.util.buf.StringCache r0;
        java.util.HashMap r1, $r2, $r4, r5;
        java.lang.Throwable $r3, $r6;

        r0 := @this: org.apache.tomcat.util.buf.StringCache;
        <org.apache.tomcat.util.buf.StringCache: int hitCount> = 0;
        <org.apache.tomcat.util.buf.StringCache: int accessCount> = 0;
        $r2 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap bcStats>;
        r1 = $r2;
        entermonitor $r2;

     label0:
        <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache> = null;
        <org.apache.tomcat.util.buf.StringCache: int bcCount> = 0;
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r3 := @caughtexception;

     label3:
        exitmonitor r1;

     label4:
        throw $r3;

     label5:
        $r4 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap ccStats>;
        r5 = $r4;
        entermonitor $r4;

     label6:
        <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$CharEntry[] ccCache> = null;
        <org.apache.tomcat.util.buf.StringCache: int ccCount> = 0;
        exitmonitor r5;

     label7:
        goto label11;

     label8:
        $r6 := @caughtexception;

     label9:
        exitmonitor r5;

     label10:
        throw $r6;

     label11:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
    }

    public static java.lang.String toString(org.apache.tomcat.util.buf.ByteChunk)
    {
        org.apache.tomcat.util.buf.ByteChunk r0, $r27, r28;
        org.apache.tomcat.util.buf.StringCache$ByteEntry[] $r1, $r14, r26;
        java.lang.String r2, $r42, r55, $r56;
        int $i0, i2, i3, $i4, $i5, $i6, $i7, i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i21, $i22, i23, i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        java.util.HashMap r3, $r13, $r17, $r25, $r36, $r45, $r52;
        long l1, l19, $l20;
        java.util.TreeMap r4, $r16;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        org.apache.tomcat.util.buf.StringCache$ByteEntry r7, r11, $r43, r44;
        int[] r8, r12, r51;
        java.lang.Integer r9;
        java.util.ArrayList r10, $r23, r31;
        boolean $z0, $z2, $z3;
        java.util.Set $r18;
        java.lang.Object $r19, $r20, $r21, $r22, r29, $r30, $r32, $r46;
        byte[] $r33, $r34, $r47, $r48, $r49;
        org.apache.juli.logging.Log $r37, $r38;
        java.lang.StringBuilder $r39, $r40, $r41;
        java.nio.charset.Charset $r50;
        java.lang.Throwable $r54;

        r0 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        $r1 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache>;
        if $r1 != null goto label22;

        r2 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: java.lang.String toStringInternal()>();
        $z0 = <org.apache.tomcat.util.buf.StringCache: boolean byteEnabled>;
        if $z0 == 0 goto label21;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();
        $i0 = <org.apache.tomcat.util.buf.StringCache: int maxStringSize>;
        if $i4 >= $i0 goto label21;

        $r13 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap bcStats>;
        r3 = $r13;
        entermonitor $r13;

     label0:
        $r14 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache>;
        if $r14 == null goto label2;

        exitmonitor r3;

     label1:
        return r2;

     label2:
        $i5 = <org.apache.tomcat.util.buf.StringCache: int bcCount>;
        $i6 = <org.apache.tomcat.util.buf.StringCache: int trainThreshold>;
        if $i5 <= $i6 goto label14;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r16 = new java.util.TreeMap;
        specialinvoke $r16.<java.util.TreeMap: void <init>()>();
        r4 = $r16;
        $r17 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap bcStats>;
        $r18 = virtualinvoke $r17.<java.util.HashMap: java.util.Set entrySet()>();
        r5 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();
        goto label5;

     label3:
        $r19 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.util.Map$Entry) $r19;
        $r20 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();
        r7 = (org.apache.tomcat.util.buf.StringCache$ByteEntry) $r20;
        $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
        r8 = (int[]) $r21;
        $i7 = r8[0];
        r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);
        $r22 = virtualinvoke r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r9);
        r10 = (java.util.ArrayList) $r22;
        if r10 != null goto label4;

        $r23 = new java.util.ArrayList;
        specialinvoke $r23.<java.util.ArrayList: void <init>()>();
        r10 = $r23;
        virtualinvoke r4.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10);

     label4:
        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label5:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label3;

        $r25 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap bcStats>;
        i8 = virtualinvoke $r25.<java.util.HashMap: int size()>();
        $i9 = <org.apache.tomcat.util.buf.StringCache: int cacheSize>;
        if i8 <= $i9 goto label6;

        i8 = <org.apache.tomcat.util.buf.StringCache: int cacheSize>;

     label6:
        r26 = newarray (org.apache.tomcat.util.buf.StringCache$ByteEntry)[i8];
        $r27 = new org.apache.tomcat.util.buf.ByteChunk;
        specialinvoke $r27.<org.apache.tomcat.util.buf.ByteChunk: void <init>()>();
        r28 = $r27;
        i10 = 0;
        goto label13;

     label7:
        r29 = virtualinvoke r4.<java.util.TreeMap: java.lang.Object lastKey()>();
        $r30 = virtualinvoke r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r29);
        r31 = (java.util.ArrayList) $r30;
        i2 = 0;
        goto label11;

     label8:
        $r32 = virtualinvoke r31.<java.util.ArrayList: java.lang.Object get(int)>(i2);
        r11 = (org.apache.tomcat.util.buf.StringCache$ByteEntry) $r32;
        $r33 = r11.<org.apache.tomcat.util.buf.StringCache$ByteEntry: byte[] name>;
        $r34 = r11.<org.apache.tomcat.util.buf.StringCache$ByteEntry: byte[] name>;
        $i11 = lengthof $r34;
        virtualinvoke r28.<org.apache.tomcat.util.buf.ByteChunk: void setBytes(byte[],int,int)>($r33, 0, $i11);
        i3 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int findClosest(org.apache.tomcat.util.buf.ByteChunk,org.apache.tomcat.util.buf.StringCache$ByteEntry[],int)>(r28, r26, i10);
        if i3 != i10 goto label9;

        $i12 = i10 + 1;
        r26[$i12] = r11;
        goto label10;

     label9:
        $i13 = i3 + 1;
        $i14 = i3 + 2;
        $i15 = i10 - i3;
        $i16 = $i15 - 1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r26, $i13, r26, $i14, $i16);
        $i17 = i3 + 1;
        r26[$i17] = r11;

     label10:
        i10 = i10 + 1;
        i2 = i2 + 1;

     label11:
        $i18 = virtualinvoke r31.<java.util.ArrayList: int size()>();
        if i2 >= $i18 goto label12;

        if i10 < i8 goto label8;

     label12:
        virtualinvoke r4.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>(r29);

     label13:
        if i10 < i8 goto label7;

        <org.apache.tomcat.util.buf.StringCache: int bcCount> = 0;
        $r36 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap bcStats>;
        virtualinvoke $r36.<java.util.HashMap: void clear()>();
        <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache> = r26;
        $r37 = <org.apache.tomcat.util.buf.StringCache: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r37.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label16;

        l19 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r38 = <org.apache.tomcat.util.buf.StringCache: org.apache.juli.logging.Log log>;
        $r39 = new java.lang.StringBuilder;
        specialinvoke $r39.<java.lang.StringBuilder: void <init>(java.lang.String)>("ByteCache generation time: ");
        $l20 = l19 - l1;
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r38.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r42);
        goto label16;

     label14:
        $i21 = <org.apache.tomcat.util.buf.StringCache: int bcCount>;
        $i22 = $i21 + 1;
        <org.apache.tomcat.util.buf.StringCache: int bcCount> = $i22;
        $r43 = new org.apache.tomcat.util.buf.StringCache$ByteEntry;
        specialinvoke $r43.<org.apache.tomcat.util.buf.StringCache$ByteEntry: void <init>()>();
        r44 = $r43;
        r44.<org.apache.tomcat.util.buf.StringCache$ByteEntry: java.lang.String value> = r2;
        $r45 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap bcStats>;
        $r46 = virtualinvoke $r45.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r44);
        r12 = (int[]) $r46;
        if r12 != null goto label15;

        i23 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: int getEnd()>();
        i24 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: int getStart()>();
        $i25 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: int getLength()>();
        $r47 = newarray (byte)[$i25];
        r44.<org.apache.tomcat.util.buf.StringCache$ByteEntry: byte[] name> = $r47;
        $r48 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBuffer()>();
        $r49 = r44.<org.apache.tomcat.util.buf.StringCache$ByteEntry: byte[] name>;
        $i26 = i23 - i24;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r48, i24, $r49, 0, $i26);
        $r50 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: java.nio.charset.Charset getCharset()>();
        r44.<org.apache.tomcat.util.buf.StringCache$ByteEntry: java.nio.charset.Charset charset> = $r50;
        r51 = newarray (int)[1];
        r51[0] = 1;
        $r52 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap bcStats>;
        virtualinvoke $r52.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r44, r51);
        goto label16;

     label15:
        $i27 = r12[0];
        $i28 = $i27 + 1;
        r12[0] = $i28;

     label16:
        exitmonitor r3;

     label17:
        goto label21;

     label18:
        $r54 := @caughtexception;

     label19:
        exitmonitor r3;

     label20:
        throw $r54;

     label21:
        return r2;

     label22:
        $i29 = <org.apache.tomcat.util.buf.StringCache: int accessCount>;
        $i30 = $i29 + 1;
        <org.apache.tomcat.util.buf.StringCache: int accessCount> = $i30;
        r55 = staticinvoke <org.apache.tomcat.util.buf.StringCache: java.lang.String find(org.apache.tomcat.util.buf.ByteChunk)>(r0);
        if r55 != null goto label23;

        $r56 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: java.lang.String toStringInternal()>();
        return $r56;

     label23:
        $i31 = <org.apache.tomcat.util.buf.StringCache: int hitCount>;
        $i32 = $i31 + 1;
        <org.apache.tomcat.util.buf.StringCache: int hitCount> = $i32;
        return r55;

        catch java.lang.Throwable from label0 to label1 with label18;
        catch java.lang.Throwable from label2 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public static java.lang.String toString(org.apache.tomcat.util.buf.CharChunk)
    {
        org.apache.tomcat.util.buf.CharChunk r0, $r27, r28;
        org.apache.tomcat.util.buf.StringCache$CharEntry[] $r1, $r14, r26;
        java.lang.String r2, $r42, r54, $r55;
        int $i0, i2, i3, $i4, $i5, $i6, $i7, i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i21, $i22, i23, i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        java.util.HashMap r3, $r13, $r17, $r25, $r36, $r45, $r51;
        long l1, l19, $l20;
        java.util.TreeMap r4, $r16;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        org.apache.tomcat.util.buf.StringCache$CharEntry r7, r11, $r43, r44;
        int[] r8, r12, r50;
        java.lang.Integer r9;
        java.util.ArrayList r10, $r23, r31;
        boolean $z0, $z2, $z3;
        java.util.Set $r18;
        java.lang.Object $r19, $r20, $r21, $r22, r29, $r30, $r32, $r46;
        char[] $r33, $r34, $r47, $r48, $r49;
        org.apache.juli.logging.Log $r37, $r38;
        java.lang.StringBuilder $r39, $r40, $r41;
        java.lang.Throwable $r53;

        r0 := @parameter0: org.apache.tomcat.util.buf.CharChunk;
        $r1 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$CharEntry[] ccCache>;
        if $r1 != null goto label22;

        r2 = virtualinvoke r0.<org.apache.tomcat.util.buf.CharChunk: java.lang.String toStringInternal()>();
        $z0 = <org.apache.tomcat.util.buf.StringCache: boolean charEnabled>;
        if $z0 == 0 goto label21;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();
        $i0 = <org.apache.tomcat.util.buf.StringCache: int maxStringSize>;
        if $i4 >= $i0 goto label21;

        $r13 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap ccStats>;
        r3 = $r13;
        entermonitor $r13;

     label0:
        $r14 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$CharEntry[] ccCache>;
        if $r14 == null goto label2;

        exitmonitor r3;

     label1:
        return r2;

     label2:
        $i5 = <org.apache.tomcat.util.buf.StringCache: int ccCount>;
        $i6 = <org.apache.tomcat.util.buf.StringCache: int trainThreshold>;
        if $i5 <= $i6 goto label14;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r16 = new java.util.TreeMap;
        specialinvoke $r16.<java.util.TreeMap: void <init>()>();
        r4 = $r16;
        $r17 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap ccStats>;
        $r18 = virtualinvoke $r17.<java.util.HashMap: java.util.Set entrySet()>();
        r5 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();
        goto label5;

     label3:
        $r19 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.util.Map$Entry) $r19;
        $r20 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();
        r7 = (org.apache.tomcat.util.buf.StringCache$CharEntry) $r20;
        $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
        r8 = (int[]) $r21;
        $i7 = r8[0];
        r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);
        $r22 = virtualinvoke r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r9);
        r10 = (java.util.ArrayList) $r22;
        if r10 != null goto label4;

        $r23 = new java.util.ArrayList;
        specialinvoke $r23.<java.util.ArrayList: void <init>()>();
        r10 = $r23;
        virtualinvoke r4.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10);

     label4:
        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label5:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label3;

        $r25 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap ccStats>;
        i8 = virtualinvoke $r25.<java.util.HashMap: int size()>();
        $i9 = <org.apache.tomcat.util.buf.StringCache: int cacheSize>;
        if i8 <= $i9 goto label6;

        i8 = <org.apache.tomcat.util.buf.StringCache: int cacheSize>;

     label6:
        r26 = newarray (org.apache.tomcat.util.buf.StringCache$CharEntry)[i8];
        $r27 = new org.apache.tomcat.util.buf.CharChunk;
        specialinvoke $r27.<org.apache.tomcat.util.buf.CharChunk: void <init>()>();
        r28 = $r27;
        i10 = 0;
        goto label13;

     label7:
        r29 = virtualinvoke r4.<java.util.TreeMap: java.lang.Object lastKey()>();
        $r30 = virtualinvoke r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r29);
        r31 = (java.util.ArrayList) $r30;
        i2 = 0;
        goto label11;

     label8:
        $r32 = virtualinvoke r31.<java.util.ArrayList: java.lang.Object get(int)>(i2);
        r11 = (org.apache.tomcat.util.buf.StringCache$CharEntry) $r32;
        $r33 = r11.<org.apache.tomcat.util.buf.StringCache$CharEntry: char[] name>;
        $r34 = r11.<org.apache.tomcat.util.buf.StringCache$CharEntry: char[] name>;
        $i11 = lengthof $r34;
        virtualinvoke r28.<org.apache.tomcat.util.buf.CharChunk: void setChars(char[],int,int)>($r33, 0, $i11);
        i3 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int findClosest(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.StringCache$CharEntry[],int)>(r28, r26, i10);
        if i3 != i10 goto label9;

        $i12 = i10 + 1;
        r26[$i12] = r11;
        goto label10;

     label9:
        $i13 = i3 + 1;
        $i14 = i3 + 2;
        $i15 = i10 - i3;
        $i16 = $i15 - 1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r26, $i13, r26, $i14, $i16);
        $i17 = i3 + 1;
        r26[$i17] = r11;

     label10:
        i10 = i10 + 1;
        i2 = i2 + 1;

     label11:
        $i18 = virtualinvoke r31.<java.util.ArrayList: int size()>();
        if i2 >= $i18 goto label12;

        if i10 < i8 goto label8;

     label12:
        virtualinvoke r4.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>(r29);

     label13:
        if i10 < i8 goto label7;

        <org.apache.tomcat.util.buf.StringCache: int ccCount> = 0;
        $r36 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap ccStats>;
        virtualinvoke $r36.<java.util.HashMap: void clear()>();
        <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$CharEntry[] ccCache> = r26;
        $r37 = <org.apache.tomcat.util.buf.StringCache: org.apache.juli.logging.Log log>;
        $z3 = interfaceinvoke $r37.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label16;

        l19 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r38 = <org.apache.tomcat.util.buf.StringCache: org.apache.juli.logging.Log log>;
        $r39 = new java.lang.StringBuilder;
        specialinvoke $r39.<java.lang.StringBuilder: void <init>(java.lang.String)>("CharCache generation time: ");
        $l20 = l19 - l1;
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r38.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r42);
        goto label16;

     label14:
        $i21 = <org.apache.tomcat.util.buf.StringCache: int ccCount>;
        $i22 = $i21 + 1;
        <org.apache.tomcat.util.buf.StringCache: int ccCount> = $i22;
        $r43 = new org.apache.tomcat.util.buf.StringCache$CharEntry;
        specialinvoke $r43.<org.apache.tomcat.util.buf.StringCache$CharEntry: void <init>()>();
        r44 = $r43;
        r44.<org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String value> = r2;
        $r45 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap ccStats>;
        $r46 = virtualinvoke $r45.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r44);
        r12 = (int[]) $r46;
        if r12 != null goto label15;

        i23 = virtualinvoke r0.<org.apache.tomcat.util.buf.CharChunk: int getEnd()>();
        i24 = virtualinvoke r0.<org.apache.tomcat.util.buf.CharChunk: int getStart()>();
        $i25 = virtualinvoke r0.<org.apache.tomcat.util.buf.CharChunk: int getLength()>();
        $r47 = newarray (char)[$i25];
        r44.<org.apache.tomcat.util.buf.StringCache$CharEntry: char[] name> = $r47;
        $r48 = virtualinvoke r0.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        $r49 = r44.<org.apache.tomcat.util.buf.StringCache$CharEntry: char[] name>;
        $i26 = i23 - i24;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r48, i24, $r49, 0, $i26);
        r50 = newarray (int)[1];
        r50[0] = 1;
        $r51 = <org.apache.tomcat.util.buf.StringCache: java.util.HashMap ccStats>;
        virtualinvoke $r51.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r44, r50);
        goto label16;

     label15:
        $i27 = r12[0];
        $i28 = $i27 + 1;
        r12[0] = $i28;

     label16:
        exitmonitor r3;

     label17:
        goto label21;

     label18:
        $r53 := @caughtexception;

     label19:
        exitmonitor r3;

     label20:
        throw $r53;

     label21:
        return r2;

     label22:
        $i29 = <org.apache.tomcat.util.buf.StringCache: int accessCount>;
        $i30 = $i29 + 1;
        <org.apache.tomcat.util.buf.StringCache: int accessCount> = $i30;
        r54 = staticinvoke <org.apache.tomcat.util.buf.StringCache: java.lang.String find(org.apache.tomcat.util.buf.CharChunk)>(r0);
        if r54 != null goto label23;

        $r55 = virtualinvoke r0.<org.apache.tomcat.util.buf.CharChunk: java.lang.String toStringInternal()>();
        return $r55;

     label23:
        $i31 = <org.apache.tomcat.util.buf.StringCache: int hitCount>;
        $i32 = $i31 + 1;
        <org.apache.tomcat.util.buf.StringCache: int hitCount> = $i32;
        return r54;

        catch java.lang.Throwable from label0 to label1 with label18;
        catch java.lang.Throwable from label2 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    protected static final int compare(org.apache.tomcat.util.buf.ByteChunk, byte[])
    {
        org.apache.tomcat.util.buf.ByteChunk r0;
        byte[] r1, r2;
        byte b0, $b7, $b8, $b10, $b11;
        int i1, i2, i3, i4, $i5, $i6, $i9, $i12, $i13, $i14, $i15;

        r0 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        r1 := @parameter1: byte[];
        b0 = 0;
        r2 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: byte[] getBuffer()>();
        i1 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: int getStart()>();
        i2 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: int getEnd()>();
        i3 = lengthof r1;
        $i5 = i2 - i1;
        if $i5 >= i3 goto label0;

        i3 = i2 - i1;

     label0:
        i4 = 0;
        goto label4;

     label1:
        $i6 = i4 + i1;
        $b7 = r2[$i6];
        $b8 = r1[i4];
        if $b7 <= $b8 goto label2;

        b0 = 1;
        goto label3;

     label2:
        $i9 = i4 + i1;
        $b10 = r2[$i9];
        $b11 = r1[i4];
        if $b10 >= $b11 goto label3;

        b0 = -1;

     label3:
        i4 = i4 + 1;

     label4:
        if i4 >= i3 goto label5;

        if b0 == 0 goto label1;

     label5:
        if b0 != 0 goto label7;

        $i12 = lengthof r1;
        $i13 = i2 - i1;
        if $i12 <= $i13 goto label6;

        b0 = -1;
        goto label7;

     label6:
        $i14 = lengthof r1;
        $i15 = i2 - i1;
        if $i14 >= $i15 goto label7;

        b0 = 1;

     label7:
        return b0;
    }

    protected static final java.lang.String find(org.apache.tomcat.util.buf.ByteChunk)
    {
        org.apache.tomcat.util.buf.ByteChunk r0;
        org.apache.tomcat.util.buf.StringCache$ByteEntry[] $r1, $r2, $r3, $r7, $r10;
        int i0, $i1, $i2;
        org.apache.tomcat.util.buf.StringCache$ByteEntry $r4, $r8, $r11;
        byte[] $r5;
        java.nio.charset.Charset $r6, $r9;
        boolean $z0;
        java.lang.String $r12;

        r0 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        $r1 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache>;
        $r2 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache>;
        $i1 = lengthof $r2;
        i0 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int findClosest(org.apache.tomcat.util.buf.ByteChunk,org.apache.tomcat.util.buf.StringCache$ByteEntry[],int)>(r0, $r1, $i1);
        if i0 < 0 goto label0;

        $r3 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache>;
        $r4 = $r3[i0];
        $r5 = $r4.<org.apache.tomcat.util.buf.StringCache$ByteEntry: byte[] name>;
        $i2 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int compare(org.apache.tomcat.util.buf.ByteChunk,byte[])>(r0, $r5);
        if $i2 != 0 goto label0;

        $r6 = virtualinvoke r0.<org.apache.tomcat.util.buf.ByteChunk: java.nio.charset.Charset getCharset()>();
        $r7 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache>;
        $r8 = $r7[i0];
        $r9 = $r8.<org.apache.tomcat.util.buf.StringCache$ByteEntry: java.nio.charset.Charset charset>;
        $z0 = virtualinvoke $r6.<java.nio.charset.Charset: boolean equals(java.lang.Object)>($r9);
        if $z0 != 0 goto label1;

     label0:
        return null;

     label1:
        $r10 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$ByteEntry[] bcCache>;
        $r11 = $r10[i0];
        $r12 = $r11.<org.apache.tomcat.util.buf.StringCache$ByteEntry: java.lang.String value>;
        return $r12;
    }

    protected static final int findClosest(org.apache.tomcat.util.buf.ByteChunk, org.apache.tomcat.util.buf.StringCache$ByteEntry[], int)
    {
        org.apache.tomcat.util.buf.ByteChunk r0;
        org.apache.tomcat.util.buf.StringCache$ByteEntry[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, i7, $i8;
        boolean z0;
        org.apache.tomcat.util.buf.StringCache$ByteEntry $r2, $r4, $r6;
        byte[] $r3, $r5, $r7;

        r0 := @parameter0: org.apache.tomcat.util.buf.ByteChunk;
        r1 := @parameter1: org.apache.tomcat.util.buf.StringCache$ByteEntry[];
        i0 := @parameter2: int;
        i1 = 0;
        i2 = i0 - 1;
        if i2 != -1 goto label0;

        return -1;

     label0:
        $r2 = r1[0];
        $r3 = $r2.<org.apache.tomcat.util.buf.StringCache$ByteEntry: byte[] name>;
        $i5 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int compare(org.apache.tomcat.util.buf.ByteChunk,byte[])>(r0, $r3);
        if $i5 >= 0 goto label1;

        return -1;

     label1:
        if i2 != 0 goto label2;

        return 0;

     label2:
        z0 = 0;

     label3:
        $i6 = i2 + i1;
        i7 = $i6 >>> 1;
        $r4 = r1[i7];
        $r5 = $r4.<org.apache.tomcat.util.buf.StringCache$ByteEntry: byte[] name>;
        i3 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int compare(org.apache.tomcat.util.buf.ByteChunk,byte[])>(r0, $r5);
        if i3 != 1 goto label4;

        i1 = i7;
        goto label6;

     label4:
        if i3 != 0 goto label5;

        return i7;

     label5:
        i2 = i7;

     label6:
        $i8 = i2 - i1;
        if $i8 != 1 goto label3;

        $r6 = r1[i2];
        $r7 = $r6.<org.apache.tomcat.util.buf.StringCache$ByteEntry: byte[] name>;
        i4 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int compare(org.apache.tomcat.util.buf.ByteChunk,byte[])>(r0, $r7);
        if i4 >= 0 goto label7;

        return i1;

     label7:
        return i2;
    }

    protected static final int compare(org.apache.tomcat.util.buf.CharChunk, char[])
    {
        org.apache.tomcat.util.buf.CharChunk r0;
        char[] r1, r2;
        byte b0;
        int i1, i2, i3, i4, $i5, $i6, $i9, $i12, $i13, $i14, $i15;
        char $c7, $c8, $c10, $c11;

        r0 := @parameter0: org.apache.tomcat.util.buf.CharChunk;
        r1 := @parameter1: char[];
        b0 = 0;
        r2 = virtualinvoke r0.<org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>();
        i1 = virtualinvoke r0.<org.apache.tomcat.util.buf.CharChunk: int getStart()>();
        i2 = virtualinvoke r0.<org.apache.tomcat.util.buf.CharChunk: int getEnd()>();
        i3 = lengthof r1;
        $i5 = i2 - i1;
        if $i5 >= i3 goto label0;

        i3 = i2 - i1;

     label0:
        i4 = 0;
        goto label4;

     label1:
        $i6 = i4 + i1;
        $c7 = r2[$i6];
        $c8 = r1[i4];
        if $c7 <= $c8 goto label2;

        b0 = 1;
        goto label3;

     label2:
        $i9 = i4 + i1;
        $c10 = r2[$i9];
        $c11 = r1[i4];
        if $c10 >= $c11 goto label3;

        b0 = -1;

     label3:
        i4 = i4 + 1;

     label4:
        if i4 >= i3 goto label5;

        if b0 == 0 goto label1;

     label5:
        if b0 != 0 goto label7;

        $i12 = lengthof r1;
        $i13 = i2 - i1;
        if $i12 <= $i13 goto label6;

        b0 = -1;
        goto label7;

     label6:
        $i14 = lengthof r1;
        $i15 = i2 - i1;
        if $i14 >= $i15 goto label7;

        b0 = 1;

     label7:
        return b0;
    }

    protected static final java.lang.String find(org.apache.tomcat.util.buf.CharChunk)
    {
        org.apache.tomcat.util.buf.CharChunk r0;
        org.apache.tomcat.util.buf.StringCache$CharEntry[] $r1, $r2, $r3, $r6;
        int i0, $i1, $i2;
        org.apache.tomcat.util.buf.StringCache$CharEntry $r4, $r7;
        char[] $r5;
        java.lang.String $r8;

        r0 := @parameter0: org.apache.tomcat.util.buf.CharChunk;
        $r1 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$CharEntry[] ccCache>;
        $r2 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$CharEntry[] ccCache>;
        $i1 = lengthof $r2;
        i0 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int findClosest(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.StringCache$CharEntry[],int)>(r0, $r1, $i1);
        if i0 < 0 goto label0;

        $r3 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$CharEntry[] ccCache>;
        $r4 = $r3[i0];
        $r5 = $r4.<org.apache.tomcat.util.buf.StringCache$CharEntry: char[] name>;
        $i2 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int compare(org.apache.tomcat.util.buf.CharChunk,char[])>(r0, $r5);
        if $i2 == 0 goto label1;

     label0:
        return null;

     label1:
        $r6 = <org.apache.tomcat.util.buf.StringCache: org.apache.tomcat.util.buf.StringCache$CharEntry[] ccCache>;
        $r7 = $r6[i0];
        $r8 = $r7.<org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String value>;
        return $r8;
    }

    protected static final int findClosest(org.apache.tomcat.util.buf.CharChunk, org.apache.tomcat.util.buf.StringCache$CharEntry[], int)
    {
        org.apache.tomcat.util.buf.CharChunk r0;
        org.apache.tomcat.util.buf.StringCache$CharEntry[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, i7, $i8;
        boolean z0;
        org.apache.tomcat.util.buf.StringCache$CharEntry $r2, $r4, $r6;
        char[] $r3, $r5, $r7;

        r0 := @parameter0: org.apache.tomcat.util.buf.CharChunk;
        r1 := @parameter1: org.apache.tomcat.util.buf.StringCache$CharEntry[];
        i0 := @parameter2: int;
        i1 = 0;
        i2 = i0 - 1;
        if i2 != -1 goto label0;

        return -1;

     label0:
        $r2 = r1[0];
        $r3 = $r2.<org.apache.tomcat.util.buf.StringCache$CharEntry: char[] name>;
        $i5 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int compare(org.apache.tomcat.util.buf.CharChunk,char[])>(r0, $r3);
        if $i5 >= 0 goto label1;

        return -1;

     label1:
        if i2 != 0 goto label2;

        return 0;

     label2:
        z0 = 0;

     label3:
        $i6 = i2 + i1;
        i7 = $i6 >>> 1;
        $r4 = r1[i7];
        $r5 = $r4.<org.apache.tomcat.util.buf.StringCache$CharEntry: char[] name>;
        i3 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int compare(org.apache.tomcat.util.buf.CharChunk,char[])>(r0, $r5);
        if i3 != 1 goto label4;

        i1 = i7;
        goto label6;

     label4:
        if i3 != 0 goto label5;

        return i7;

     label5:
        i2 = i7;

     label6:
        $i8 = i2 - i1;
        if $i8 != 1 goto label3;

        $r6 = r1[i2];
        $r7 = $r6.<org.apache.tomcat.util.buf.StringCache$CharEntry: char[] name>;
        i4 = staticinvoke <org.apache.tomcat.util.buf.StringCache: int compare(org.apache.tomcat.util.buf.CharChunk,char[])>(r0, $r7);
        if i4 >= 0 goto label7;

        return i1;

     label7:
        return i2;
    }
}
