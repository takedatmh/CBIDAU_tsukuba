class java.util.regex.Pattern$CharPropertyNames extends java.lang.Object
{
    private static final java.util.HashMap map;

    private void <init>()
    {
        java.util.regex.Pattern$CharPropertyNames r0;

        r0 := @this: java.util.regex.Pattern$CharPropertyNames;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static java.util.regex.Pattern$CharProperty charPropertyFor(java.lang.String)
    {
        java.lang.String r0;
        java.util.HashMap $r1;
        java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory r2;
        java.lang.Object $r3;
        java.util.regex.Pattern$CharProperty $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <java.util.regex.Pattern$CharPropertyNames: java.util.HashMap map>;
        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);
        r2 = (java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory) $r3;
        if r2 != null goto label0;

        $r4 = null;
        goto label1;

     label0:
        $r4 = virtualinvoke r2.<java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory: java.util.regex.Pattern$CharProperty make()>();

     label1:
        return $r4;
    }

    private static void defCategory(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        java.util.HashMap $r1;
        java.util.regex.Pattern$CharPropertyNames$1 $r2;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = <java.util.regex.Pattern$CharPropertyNames: java.util.HashMap map>;
        $r2 = new java.util.regex.Pattern$CharPropertyNames$1;
        specialinvoke $r2.<java.util.regex.Pattern$CharPropertyNames$1: void <init>(int)>(i0);
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r2);
        return;
    }

    private static void defRange(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1;
        java.util.HashMap $r1;
        java.util.regex.Pattern$CharPropertyNames$2 $r2;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = <java.util.regex.Pattern$CharPropertyNames: java.util.HashMap map>;
        $r2 = new java.util.regex.Pattern$CharPropertyNames$2;
        specialinvoke $r2.<java.util.regex.Pattern$CharPropertyNames$2: void <init>(int,int)>(i0, i1);
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r2);
        return;
    }

    private static void defCtype(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        java.util.HashMap $r1;
        java.util.regex.Pattern$CharPropertyNames$3 $r2;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = <java.util.regex.Pattern$CharPropertyNames: java.util.HashMap map>;
        $r2 = new java.util.regex.Pattern$CharPropertyNames$3;
        specialinvoke $r2.<java.util.regex.Pattern$CharPropertyNames$3: void <init>(int)>(i0);
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r2);
        return;
    }

    private static void defClone(java.lang.String, java.util.regex.Pattern$CharPropertyNames$CloneableProperty)
    {
        java.lang.String r0;
        java.util.regex.Pattern$CharPropertyNames$CloneableProperty r1;
        java.util.HashMap $r2;
        java.util.regex.Pattern$CharPropertyNames$4 $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.regex.Pattern$CharPropertyNames$CloneableProperty;
        $r2 = <java.util.regex.Pattern$CharPropertyNames: java.util.HashMap map>;
        $r3 = new java.util.regex.Pattern$CharPropertyNames$4;
        specialinvoke $r3.<java.util.regex.Pattern$CharPropertyNames$4: void <init>(java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>(r1);
        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);
        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1;
        java.util.regex.Pattern$CharPropertyNames$5 $r2;
        java.util.regex.Pattern$CharPropertyNames$6 $r4;
        java.util.regex.Pattern$CharPropertyNames$7 $r5;
        java.util.regex.Pattern$CharPropertyNames$8 $r6;
        java.util.regex.Pattern$CharPropertyNames$9 $r7;
        java.util.regex.Pattern$CharPropertyNames$10 $r8;
        java.util.regex.Pattern$CharPropertyNames$11 $r9;
        java.util.regex.Pattern$CharPropertyNames$12 $r10;
        java.util.regex.Pattern$CharPropertyNames$13 $r11;
        java.util.regex.Pattern$CharPropertyNames$14 $r12;
        java.util.regex.Pattern$CharPropertyNames$15 $r13;
        java.util.regex.Pattern$CharPropertyNames$16 $r14;
        java.util.regex.Pattern$CharPropertyNames$17 $r15;
        java.util.regex.Pattern$CharPropertyNames$18 $r16;
        java.util.regex.Pattern$CharPropertyNames$19 $r17;
        java.util.regex.Pattern$CharPropertyNames$20 $r18;
        java.util.regex.Pattern$CharPropertyNames$21 $r19;
        java.util.regex.Pattern$CharPropertyNames$22 $r20;
        java.util.regex.Pattern$CharPropertyNames$23 $r21;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <java.util.regex.Pattern$CharPropertyNames: java.util.HashMap map> = $r0;
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Cn", 1);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Lu", 2);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Ll", 4);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Lt", 8);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Lm", 16);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Lo", 32);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Mn", 64);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Me", 128);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Mc", 256);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Nd", 512);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Nl", 1024);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("No", 2048);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Zs", 4096);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Zl", 8192);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Zp", 16384);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Cc", 32768);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Cf", 65536);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Co", 262144);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Cs", 524288);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Pd", 1048576);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Ps", 2097152);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Pe", 4194304);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Pc", 8388608);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Po", 16777216);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Sm", 33554432);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Sc", 67108864);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Sk", 134217728);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("So", 268435456);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Pi", 536870912);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Pf", 1073741824);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("L", 62);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("M", 448);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("N", 3584);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("Z", 28672);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("C", 884736);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("P", 1643118592);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("S", 503316480);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("LC", 14);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>("LD", 574);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>("L1", 0, 255);
        $r1 = <java.util.regex.Pattern$CharPropertyNames: java.util.HashMap map>;
        $r2 = new java.util.regex.Pattern$CharPropertyNames$5;
        specialinvoke $r2.<java.util.regex.Pattern$CharPropertyNames$5: void <init>()>();
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("all", $r2);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>("ASCII", 0, 127);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>("Alnum", 1792);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>("Alpha", 768);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>("Blank", 16384);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>("Cntrl", 8192);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>("Digit", 48, 57);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>("Graph", 5888);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>("Lower", 97, 122);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>("Print", 32, 126);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>("Punct", 4096);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>("Space", 2048);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>("Upper", 65, 90);
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>("XDigit", 32768);
        $r4 = new java.util.regex.Pattern$CharPropertyNames$6;
        specialinvoke $r4.<java.util.regex.Pattern$CharPropertyNames$6: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaLowerCase", $r4);
        $r5 = new java.util.regex.Pattern$CharPropertyNames$7;
        specialinvoke $r5.<java.util.regex.Pattern$CharPropertyNames$7: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaUpperCase", $r5);
        $r6 = new java.util.regex.Pattern$CharPropertyNames$8;
        specialinvoke $r6.<java.util.regex.Pattern$CharPropertyNames$8: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaAlphabetic", $r6);
        $r7 = new java.util.regex.Pattern$CharPropertyNames$9;
        specialinvoke $r7.<java.util.regex.Pattern$CharPropertyNames$9: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaIdeographic", $r7);
        $r8 = new java.util.regex.Pattern$CharPropertyNames$10;
        specialinvoke $r8.<java.util.regex.Pattern$CharPropertyNames$10: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaTitleCase", $r8);
        $r9 = new java.util.regex.Pattern$CharPropertyNames$11;
        specialinvoke $r9.<java.util.regex.Pattern$CharPropertyNames$11: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaDigit", $r9);
        $r10 = new java.util.regex.Pattern$CharPropertyNames$12;
        specialinvoke $r10.<java.util.regex.Pattern$CharPropertyNames$12: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaDefined", $r10);
        $r11 = new java.util.regex.Pattern$CharPropertyNames$13;
        specialinvoke $r11.<java.util.regex.Pattern$CharPropertyNames$13: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaLetter", $r11);
        $r12 = new java.util.regex.Pattern$CharPropertyNames$14;
        specialinvoke $r12.<java.util.regex.Pattern$CharPropertyNames$14: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaLetterOrDigit", $r12);
        $r13 = new java.util.regex.Pattern$CharPropertyNames$15;
        specialinvoke $r13.<java.util.regex.Pattern$CharPropertyNames$15: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaJavaIdentifierStart", $r13);
        $r14 = new java.util.regex.Pattern$CharPropertyNames$16;
        specialinvoke $r14.<java.util.regex.Pattern$CharPropertyNames$16: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaJavaIdentifierPart", $r14);
        $r15 = new java.util.regex.Pattern$CharPropertyNames$17;
        specialinvoke $r15.<java.util.regex.Pattern$CharPropertyNames$17: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaUnicodeIdentifierStart", $r15);
        $r16 = new java.util.regex.Pattern$CharPropertyNames$18;
        specialinvoke $r16.<java.util.regex.Pattern$CharPropertyNames$18: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaUnicodeIdentifierPart", $r16);
        $r17 = new java.util.regex.Pattern$CharPropertyNames$19;
        specialinvoke $r17.<java.util.regex.Pattern$CharPropertyNames$19: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaIdentifierIgnorable", $r17);
        $r18 = new java.util.regex.Pattern$CharPropertyNames$20;
        specialinvoke $r18.<java.util.regex.Pattern$CharPropertyNames$20: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaSpaceChar", $r18);
        $r19 = new java.util.regex.Pattern$CharPropertyNames$21;
        specialinvoke $r19.<java.util.regex.Pattern$CharPropertyNames$21: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaWhitespace", $r19);
        $r20 = new java.util.regex.Pattern$CharPropertyNames$22;
        specialinvoke $r20.<java.util.regex.Pattern$CharPropertyNames$22: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaISOControl", $r20);
        $r21 = new java.util.regex.Pattern$CharPropertyNames$23;
        specialinvoke $r21.<java.util.regex.Pattern$CharPropertyNames$23: void <init>()>();
        staticinvoke <java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>("javaMirrored", $r21);
        return;
    }
}
