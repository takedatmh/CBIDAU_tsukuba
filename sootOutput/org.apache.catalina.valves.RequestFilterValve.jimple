public abstract class org.apache.catalina.valves.RequestFilterValve extends org.apache.catalina.valves.ValveBase
{
    private static final java.lang.String info;
    protected volatile java.util.regex.Pattern allow;
    protected volatile java.lang.String allowValue;
    protected volatile boolean allowValid;
    protected volatile java.util.regex.Pattern deny;
    protected volatile java.lang.String denyValue;
    protected volatile boolean denyValid;
    protected int denyStatus;
    private boolean invalidAuthenticationWhenDeny;
    private volatile boolean addConnectorPort;

    public void <init>()
    {
        org.apache.catalina.valves.RequestFilterValve r0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        specialinvoke r0.<org.apache.catalina.valves.ValveBase: void <init>(boolean)>(1);
        r0.<org.apache.catalina.valves.RequestFilterValve: java.util.regex.Pattern allow> = null;
        r0.<org.apache.catalina.valves.RequestFilterValve: java.lang.String allowValue> = null;
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean allowValid> = 1;
        r0.<org.apache.catalina.valves.RequestFilterValve: java.util.regex.Pattern deny> = null;
        r0.<org.apache.catalina.valves.RequestFilterValve: java.lang.String denyValue> = null;
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean denyValid> = 1;
        r0.<org.apache.catalina.valves.RequestFilterValve: int denyStatus> = 403;
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean invalidAuthenticationWhenDeny> = 0;
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean addConnectorPort> = 0;
        return;
    }

    public java.lang.String getAllow()
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        $r1 = r0.<org.apache.catalina.valves.RequestFilterValve: java.lang.String allowValue>;
        return $r1;
    }

    public void setAllow(java.lang.String)
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        java.lang.String r1;
        boolean z0;
        java.lang.Throwable r2, $r4;
        int $i0;
        java.util.regex.Pattern $r3;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        r0.<org.apache.catalina.valves.RequestFilterValve: java.util.regex.Pattern allow> = null;
        r0.<org.apache.catalina.valves.RequestFilterValve: java.lang.String allowValue> = null;
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean allowValid> = 1;
        goto label5;

     label1:
        z0 = 0;

     label2:
        r0.<org.apache.catalina.valves.RequestFilterValve: java.lang.String allowValue> = r1;
        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        r0.<org.apache.catalina.valves.RequestFilterValve: java.util.regex.Pattern allow> = $r3;
        z0 = 1;
        goto label4;

     label3:
        $r4 := @caughtexception;
        r2 = $r4;
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean allowValid> = z0;
        throw r2;

     label4:
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean allowValid> = z0;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label3;
    }

    public java.lang.String getDeny()
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        $r1 = r0.<org.apache.catalina.valves.RequestFilterValve: java.lang.String denyValue>;
        return $r1;
    }

    public void setDeny(java.lang.String)
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        java.lang.String r1;
        boolean z0;
        java.lang.Throwable r2, $r4;
        int $i0;
        java.util.regex.Pattern $r3;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        r0.<org.apache.catalina.valves.RequestFilterValve: java.util.regex.Pattern deny> = null;
        r0.<org.apache.catalina.valves.RequestFilterValve: java.lang.String denyValue> = null;
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean denyValid> = 1;
        goto label5;

     label1:
        z0 = 0;

     label2:
        r0.<org.apache.catalina.valves.RequestFilterValve: java.lang.String denyValue> = r1;
        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        r0.<org.apache.catalina.valves.RequestFilterValve: java.util.regex.Pattern deny> = $r3;
        z0 = 1;
        goto label4;

     label3:
        $r4 := @caughtexception;
        r2 = $r4;
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean denyValid> = z0;
        throw r2;

     label4:
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean denyValid> = z0;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label3;
    }

    public final boolean isAllowValid()
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        $z0 = r0.<org.apache.catalina.valves.RequestFilterValve: boolean allowValid>;
        return $z0;
    }

    public final boolean isDenyValid()
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        $z0 = r0.<org.apache.catalina.valves.RequestFilterValve: boolean denyValid>;
        return $z0;
    }

    public int getDenyStatus()
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        int $i0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        $i0 = r0.<org.apache.catalina.valves.RequestFilterValve: int denyStatus>;
        return $i0;
    }

    public void setDenyStatus(int)
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        int i0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        i0 := @parameter0: int;
        r0.<org.apache.catalina.valves.RequestFilterValve: int denyStatus> = i0;
        return;
    }

    public java.lang.String getInfo()
    {
        org.apache.catalina.valves.RequestFilterValve r0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        return "org.apache.catalina.valves.RequestFilterValve/1.0";
    }

    public boolean getInvalidAuthenticationWhenDeny()
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        $z0 = r0.<org.apache.catalina.valves.RequestFilterValve: boolean invalidAuthenticationWhenDeny>;
        return $z0;
    }

    public void setInvalidAuthenticationWhenDeny(boolean)
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean invalidAuthenticationWhenDeny> = z0;
        return;
    }

    public boolean getAddConnectorPort()
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        $z0 = r0.<org.apache.catalina.valves.RequestFilterValve: boolean addConnectorPort>;
        return $z0;
    }

    public void setAddConnectorPort(boolean)
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.RequestFilterValve: boolean addConnectorPort> = z0;
        return;
    }

    public abstract void invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) throws java.io.IOException, javax.servlet.ServletException;

    protected void initInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0, $z1;
        org.apache.catalina.LifecycleException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        specialinvoke r0.<org.apache.catalina.valves.ValveBase: void initInternal()>();
        $z0 = r0.<org.apache.catalina.valves.RequestFilterValve: boolean allowValid>;
        if $z0 == 0 goto label0;

        $z1 = r0.<org.apache.catalina.valves.RequestFilterValve: boolean denyValid>;
        if $z1 != 0 goto label1;

     label0:
        $r2 = new org.apache.catalina.LifecycleException;
        $r1 = <org.apache.catalina.valves.RequestFilterValve: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("requestFilterValve.configInvalid");
        specialinvoke $r2.<org.apache.catalina.LifecycleException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label1:
        return;
    }

    protected synchronized void startInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        org.apache.tomcat.util.res.StringManager $r1;
        boolean $z0, $z1;
        org.apache.catalina.LifecycleException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        $z0 = r0.<org.apache.catalina.valves.RequestFilterValve: boolean allowValid>;
        if $z0 == 0 goto label0;

        $z1 = r0.<org.apache.catalina.valves.RequestFilterValve: boolean denyValid>;
        if $z1 != 0 goto label1;

     label0:
        $r2 = new org.apache.catalina.LifecycleException;
        $r1 = <org.apache.catalina.valves.RequestFilterValve: org.apache.tomcat.util.res.StringManager sm>;
        $r3 = virtualinvoke $r1.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("requestFilterValve.configInvalid");
        specialinvoke $r2.<org.apache.catalina.LifecycleException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label1:
        specialinvoke r0.<org.apache.catalina.valves.ValveBase: void startInternal()>();
        return;
    }

    protected void process(java.lang.String, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) throws java.io.IOException, javax.servlet.ServletException
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        java.lang.String r1, $r9, $r10;
        org.apache.catalina.connector.Request r2;
        org.apache.catalina.connector.Response r3;
        boolean $z0, $z1;
        org.apache.catalina.Valve $r4;
        org.apache.juli.logging.Log $r5, $r6;
        org.apache.tomcat.util.res.StringManager $r7;
        java.lang.Object[] $r8;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.apache.catalina.connector.Request;
        r3 := @parameter2: org.apache.catalina.connector.Response;
        $z0 = virtualinvoke r0.<org.apache.catalina.valves.RequestFilterValve: boolean isAllowed(java.lang.String)>(r1);
        if $z0 == 0 goto label0;

        $r4 = virtualinvoke r0.<org.apache.catalina.valves.RequestFilterValve: org.apache.catalina.Valve getNext()>();
        interfaceinvoke $r4.<org.apache.catalina.Valve: void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)>(r2, r3);
        return;

     label0:
        $r5 = virtualinvoke r0.<org.apache.catalina.valves.RequestFilterValve: org.apache.juli.logging.Log getLog()>();
        $z1 = interfaceinvoke $r5.<org.apache.juli.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label1;

        $r6 = virtualinvoke r0.<org.apache.catalina.valves.RequestFilterValve: org.apache.juli.logging.Log getLog()>();
        $r7 = <org.apache.catalina.valves.RequestFilterValve: org.apache.tomcat.util.res.StringManager sm>;
        $r8 = newarray (java.lang.Object)[2];
        $r9 = virtualinvoke r2.<org.apache.catalina.connector.Request: java.lang.String getRequestURI()>();
        $r8[0] = $r9;
        $r8[1] = r1;
        $r10 = virtualinvoke $r7.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("requestFilterValve.deny", $r8);
        interfaceinvoke $r6.<org.apache.juli.logging.Log: void debug(java.lang.Object)>($r10);

     label1:
        virtualinvoke r0.<org.apache.catalina.valves.RequestFilterValve: void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)>(r2, r3);
        return;
    }

    protected abstract org.apache.juli.logging.Log getLog();

    protected void denyRequest(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) throws java.io.IOException, javax.servlet.ServletException
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        org.apache.catalina.connector.Request r1;
        org.apache.catalina.connector.Response r2;
        org.apache.catalina.Context r3;
        boolean $z0, $z1;
        org.apache.coyote.Request $r4, $r7;
        org.apache.tomcat.util.http.MimeHeaders $r5, $r8;
        org.apache.tomcat.util.buf.MessageBytes $r6, $r9;
        org.apache.catalina.Valve $r10;
        int $i0;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        r1 := @parameter0: org.apache.catalina.connector.Request;
        r2 := @parameter1: org.apache.catalina.connector.Response;
        $z0 = r0.<org.apache.catalina.valves.RequestFilterValve: boolean invalidAuthenticationWhenDeny>;
        if $z0 == 0 goto label1;

        r3 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.catalina.Context getContext()>();
        if r3 == null goto label1;

        $z1 = interfaceinvoke r3.<org.apache.catalina.Context: boolean getPreemptiveAuthentication()>();
        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.coyote.Request getCoyoteRequest()>();
        $r5 = virtualinvoke $r4.<org.apache.coyote.Request: org.apache.tomcat.util.http.MimeHeaders getMimeHeaders()>();
        $r6 = virtualinvoke $r5.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.buf.MessageBytes getValue(java.lang.String)>("authorization");
        if $r6 != null goto label0;

        $r7 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.coyote.Request getCoyoteRequest()>();
        $r8 = virtualinvoke $r7.<org.apache.coyote.Request: org.apache.tomcat.util.http.MimeHeaders getMimeHeaders()>();
        $r9 = virtualinvoke $r8.<org.apache.tomcat.util.http.MimeHeaders: org.apache.tomcat.util.buf.MessageBytes addValue(java.lang.String)>("authorization");
        virtualinvoke $r9.<org.apache.tomcat.util.buf.MessageBytes: void setString(java.lang.String)>("invalid");

     label0:
        $r10 = virtualinvoke r0.<org.apache.catalina.valves.RequestFilterValve: org.apache.catalina.Valve getNext()>();
        interfaceinvoke $r10.<org.apache.catalina.Valve: void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)>(r1, r2);
        return;

     label1:
        $i0 = r0.<org.apache.catalina.valves.RequestFilterValve: int denyStatus>;
        virtualinvoke r2.<org.apache.catalina.connector.Response: void sendError(int)>($i0);
        return;
    }

    public boolean isAllowed(java.lang.String)
    {
        org.apache.catalina.valves.RequestFilterValve r0;
        java.lang.String r1;
        java.util.regex.Pattern r2, r3;
        java.util.regex.Matcher $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.catalina.valves.RequestFilterValve;
        r1 := @parameter0: java.lang.String;
        r2 = r0.<org.apache.catalina.valves.RequestFilterValve: java.util.regex.Pattern deny>;
        r3 = r0.<org.apache.catalina.valves.RequestFilterValve: java.util.regex.Pattern allow>;
        if r2 == null goto label0;

        $r4 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();
        if $z0 == 0 goto label0;

        return 0;

     label0:
        if r3 == null goto label1;

        $r5 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z1 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();
        if $z1 == 0 goto label1;

        return 1;

     label1:
        if r2 == null goto label2;

        if r3 != null goto label2;

        return 1;

     label2:
        return 0;
    }
}
