class org.apache.catalina.core.ContainerBase$StartChild extends java.lang.Object implements java.util.concurrent.Callable
{
    private org.apache.catalina.Container child;

    public void <init>(org.apache.catalina.Container)
    {
        org.apache.catalina.core.ContainerBase$StartChild r0;
        org.apache.catalina.Container r1;

        r0 := @this: org.apache.catalina.core.ContainerBase$StartChild;
        r1 := @parameter0: org.apache.catalina.Container;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.catalina.core.ContainerBase$StartChild: org.apache.catalina.Container child> = r1;
        return;
    }

    public java.lang.Void call() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.core.ContainerBase$StartChild r0;
        org.apache.catalina.Container $r1;

        r0 := @this: org.apache.catalina.core.ContainerBase$StartChild;
        $r1 = r0.<org.apache.catalina.core.ContainerBase$StartChild: org.apache.catalina.Container child>;
        interfaceinvoke $r1.<org.apache.catalina.Container: void start()>();
        return null;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.apache.catalina.core.ContainerBase$StartChild r0;
        java.lang.Void $r1;

        r0 := @this: org.apache.catalina.core.ContainerBase$StartChild;
        $r1 = virtualinvoke r0.<org.apache.catalina.core.ContainerBase$StartChild: java.lang.Void call()>();
        return $r1;
    }
}
