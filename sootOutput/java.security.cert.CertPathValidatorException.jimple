public class java.security.cert.CertPathValidatorException extends java.security.GeneralSecurityException
{
    private static final long serialVersionUID;
    private int index;
    private java.security.cert.CertPath certPath;
    private java.security.cert.CertPathValidatorException$Reason reason;

    public void <init>()
    {
        java.security.cert.CertPathValidatorException r0;

        r0 := @this: java.security.cert.CertPathValidatorException;
        specialinvoke r0.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>(null, null);
        return;
    }

    public void <init>(java.lang.String)
    {
        java.security.cert.CertPathValidatorException r0;
        java.lang.String r1;

        r0 := @this: java.security.cert.CertPathValidatorException;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>(r1, null);
        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.security.cert.CertPathValidatorException r0;
        java.lang.Throwable r1;
        java.lang.String $r3;

        r0 := @this: java.security.cert.CertPathValidatorException;
        r1 := @parameter0: java.lang.Throwable;
        if r1 != null goto label0;

        $r3 = null;
        goto label1;

     label0:
        $r3 = virtualinvoke r1.<java.lang.Throwable: java.lang.String toString()>();

     label1:
        specialinvoke r0.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>($r3, r1);
        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.security.cert.CertPathValidatorException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: java.security.cert.CertPathValidatorException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Throwable;
        specialinvoke r0.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>(r1, r2, null, -1);
        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable, java.security.cert.CertPath, int)
    {
        java.security.cert.CertPathValidatorException r0;
        java.lang.String r1;
        java.lang.Throwable r2;
        java.security.cert.CertPath r3;
        int i0;
        java.security.cert.CertPathValidatorException$BasicReason $r4;

        r0 := @this: java.security.cert.CertPathValidatorException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Throwable;
        r3 := @parameter2: java.security.cert.CertPath;
        i0 := @parameter3: int;
        $r4 = <java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason UNSPECIFIED>;
        specialinvoke r0.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int,java.security.cert.CertPathValidatorException$Reason)>(r1, r2, r3, i0, $r4);
        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable, java.security.cert.CertPath, int, java.security.cert.CertPathValidatorException$Reason)
    {
        java.security.cert.CertPathValidatorException r0;
        java.lang.String r1;
        java.lang.Throwable r2;
        java.security.cert.CertPath r3;
        int i0, $i1;
        java.security.cert.CertPathValidatorException$Reason r4;
        java.security.cert.CertPathValidatorException$BasicReason $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.List $r7;
        java.lang.IndexOutOfBoundsException $r8;
        java.lang.NullPointerException $r9;

        r0 := @this: java.security.cert.CertPathValidatorException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Throwable;
        r3 := @parameter2: java.security.cert.CertPath;
        i0 := @parameter3: int;
        r4 := @parameter4: java.security.cert.CertPathValidatorException$Reason;
        specialinvoke r0.<java.security.GeneralSecurityException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);
        r0.<java.security.cert.CertPathValidatorException: int index> = -1;
        $r5 = <java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason UNSPECIFIED>;
        r0.<java.security.cert.CertPathValidatorException: java.security.cert.CertPathValidatorException$Reason reason> = $r5;
        if r3 != null goto label0;

        if i0 == -1 goto label0;

        $r6 = new java.lang.IllegalArgumentException;
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();
        throw $r6;

     label0:
        if i0 < -1 goto label1;

        if r3 == null goto label2;

        $r7 = virtualinvoke r3.<java.security.cert.CertPath: java.util.List getCertificates()>();
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();
        if i0 < $i1 goto label2;

     label1:
        $r8 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>()>();
        throw $r8;

     label2:
        if r4 != null goto label3;

        $r9 = new java.lang.NullPointerException;
        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("reason can\'t be null");
        throw $r9;

     label3:
        r0.<java.security.cert.CertPathValidatorException: java.security.cert.CertPath certPath> = r3;
        r0.<java.security.cert.CertPathValidatorException: int index> = i0;
        r0.<java.security.cert.CertPathValidatorException: java.security.cert.CertPathValidatorException$Reason reason> = r4;
        return;
    }

    public java.security.cert.CertPath getCertPath()
    {
        java.security.cert.CertPathValidatorException r0;
        java.security.cert.CertPath $r1;

        r0 := @this: java.security.cert.CertPathValidatorException;
        $r1 = r0.<java.security.cert.CertPathValidatorException: java.security.cert.CertPath certPath>;
        return $r1;
    }

    public int getIndex()
    {
        java.security.cert.CertPathValidatorException r0;
        int $i0;

        r0 := @this: java.security.cert.CertPathValidatorException;
        $i0 = r0.<java.security.cert.CertPathValidatorException: int index>;
        return $i0;
    }

    public java.security.cert.CertPathValidatorException$Reason getReason()
    {
        java.security.cert.CertPathValidatorException r0;
        java.security.cert.CertPathValidatorException$Reason $r1;

        r0 := @this: java.security.cert.CertPathValidatorException;
        $r1 = r0.<java.security.cert.CertPathValidatorException: java.security.cert.CertPathValidatorException$Reason reason>;
        return $r1;
    }

    private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        java.security.cert.CertPathValidatorException r0;
        java.io.ObjectInputStream r1;
        java.security.cert.CertPathValidatorException$BasicReason $r2;
        java.security.cert.CertPathValidatorException$Reason $r3;
        java.security.cert.CertPath $r4, $r6, $r7;
        int $i0, $i1, $i2, $i3;
        java.io.InvalidObjectException $r5, $r9;
        java.util.List $r8;

        r0 := @this: java.security.cert.CertPathValidatorException;
        r1 := @parameter0: java.io.ObjectInputStream;
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();
        $r3 = r0.<java.security.cert.CertPathValidatorException: java.security.cert.CertPathValidatorException$Reason reason>;
        if $r3 != null goto label0;

        $r2 = <java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason UNSPECIFIED>;
        r0.<java.security.cert.CertPathValidatorException: java.security.cert.CertPathValidatorException$Reason reason> = $r2;

     label0:
        $r4 = r0.<java.security.cert.CertPathValidatorException: java.security.cert.CertPath certPath>;
        if $r4 != null goto label1;

        $i0 = r0.<java.security.cert.CertPathValidatorException: int index>;
        if $i0 == -1 goto label1;

        $r5 = new java.io.InvalidObjectException;
        specialinvoke $r5.<java.io.InvalidObjectException: void <init>(java.lang.String)>("certpath is null and index != -1");
        throw $r5;

     label1:
        $i1 = r0.<java.security.cert.CertPathValidatorException: int index>;
        if $i1 < -1 goto label2;

        $r6 = r0.<java.security.cert.CertPathValidatorException: java.security.cert.CertPath certPath>;
        if $r6 == null goto label3;

        $i2 = r0.<java.security.cert.CertPathValidatorException: int index>;
        $r7 = r0.<java.security.cert.CertPathValidatorException: java.security.cert.CertPath certPath>;
        $r8 = virtualinvoke $r7.<java.security.cert.CertPath: java.util.List getCertificates()>();
        $i3 = interfaceinvoke $r8.<java.util.List: int size()>();
        if $i2 < $i3 goto label3;

     label2:
        $r9 = new java.io.InvalidObjectException;
        specialinvoke $r9.<java.io.InvalidObjectException: void <init>(java.lang.String)>("index out of range");
        throw $r9;

     label3:
        return;
    }
}
