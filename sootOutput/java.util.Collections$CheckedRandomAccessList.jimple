class java.util.Collections$CheckedRandomAccessList extends java.util.Collections$CheckedList implements java.util.RandomAccess
{
    private static final long serialVersionUID;

    void <init>(java.util.List, java.lang.Class)
    {
        java.util.Collections$CheckedRandomAccessList r0;
        java.util.List r1;
        java.lang.Class r2;

        r0 := @this: java.util.Collections$CheckedRandomAccessList;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: java.lang.Class;
        specialinvoke r0.<java.util.Collections$CheckedList: void <init>(java.util.List,java.lang.Class)>(r1, r2);
        return;
    }

    public java.util.List subList(int, int)
    {
        java.util.Collections$CheckedRandomAccessList r0, $r1;
        int i0, i1;
        java.util.List $r2, $r3;
        java.lang.Class $r4;

        r0 := @this: java.util.Collections$CheckedRandomAccessList;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = new java.util.Collections$CheckedRandomAccessList;
        $r2 = r0.<java.util.Collections$CheckedRandomAccessList: java.util.List list>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>(i0, i1);
        $r4 = r0.<java.util.Collections$CheckedRandomAccessList: java.lang.Class type>;
        specialinvoke $r1.<java.util.Collections$CheckedRandomAccessList: void <init>(java.util.List,java.lang.Class)>($r3, $r4);
        return $r1;
    }
}
