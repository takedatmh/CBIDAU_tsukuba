class javax.xml.parsers.FactoryFinder extends java.lang.Object
{
    private static final java.lang.String DEFAULT_PACKAGE;
    private static boolean debug;
    static java.util.Properties cacheProps;
    static volatile boolean firstTime;
    static javax.xml.parsers.SecuritySupport ss;

    void <init>()
    {
        javax.xml.parsers.FactoryFinder r0;

        r0 := @this: javax.xml.parsers.FactoryFinder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static void dPrint(java.lang.String)
    {
        java.lang.String r0, $r5;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.PrintStream $r2;

        r0 := @parameter0: java.lang.String;
        $z0 = <javax.xml.parsers.FactoryFinder: boolean debug>;
        if $z0 == 0 goto label0;

        $r2 = <java.lang.System: java.io.PrintStream err>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JAXP: ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label0:
        return;
    }

    private static java.lang.Class getProviderClass(java.lang.String, java.lang.ClassLoader, boolean, boolean) throws java.lang.ClassNotFoundException
    {
        java.lang.String r0;
        java.lang.ClassLoader r1, $r4, r7, $r13;
        boolean z0, z1;
        java.lang.Class $r2, $r5, $r9, $r10, $r12, $r14;
        java.lang.ClassNotFoundException r3, $r8, $r11;
        javax.xml.parsers.SecuritySupport $r6;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.ClassLoader;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;

     label0:
        if r1 != null goto label5;

        if z1 == 0 goto label2;

        $r2 = class "javax/xml/parsers/FactoryFinder";
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r0, 1, $r4);

     label1:
        return $r5;

     label2:
        $r6 = <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss>;
        r7 = virtualinvoke $r6.<javax.xml.parsers.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();
        if r7 != null goto label3;

        $r8 = new java.lang.ClassNotFoundException;
        specialinvoke $r8.<java.lang.ClassNotFoundException: void <init>()>();
        throw $r8;

     label3:
        $r9 = virtualinvoke r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label4:
        return $r9;

     label5:
        $r10 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label6:
        return $r10;

     label7:
        $r11 := @caughtexception;
        r3 = $r11;
        if z0 == 0 goto label8;

        $r12 = class "javax/xml/parsers/FactoryFinder";
        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        $r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r0, 1, $r13);
        return $r14;

     label8:
        throw r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label7;
        catch java.lang.ClassNotFoundException from label2 to label4 with label7;
        catch java.lang.ClassNotFoundException from label5 to label6 with label7;
    }

    static java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader, boolean) throws javax.xml.parsers.FactoryFinder$ConfigurationError
    {
        java.lang.String r0;
        java.lang.ClassLoader r1;
        boolean z0;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.ClassLoader;
        z0 := @parameter2: boolean;
        $r2 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean,boolean)>(r0, r1, z0, 0);
        return $r2;
    }

    static java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader, boolean, boolean) throws javax.xml.parsers.FactoryFinder$ConfigurationError
    {
        java.lang.String r0, $r10, $r19, $r28;
        java.lang.ClassLoader r1;
        boolean z0, z1, $z2, $z3;
        java.lang.SecurityManager $r2;
        java.lang.Class r3;
        java.lang.Object r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r15, $r16, $r17, $r18, $r23, $r24, $r25, $r26, $r27;
        java.lang.ClassNotFoundException $r12, r13;
        javax.xml.parsers.FactoryFinder$ConfigurationError $r14, $r22;
        java.lang.Exception $r20, r21;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.ClassLoader;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        $r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if $r2 == null goto label0;

        if r0 == null goto label0;

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("com.sun.org.apache.xerces.internal");
        if $z2 == 0 goto label0;

        r1 = null;
        z1 = 1;

     label0:
        r3 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>(r0, r1, z0, z1);
        r4 = virtualinvoke r3.<java.lang.Class: java.lang.Object newInstance()>();
        $z3 = <javax.xml.parsers.FactoryFinder: boolean debug>;
        if $z3 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created new instance of ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r10);

     label1:
        return r4;

     label2:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new javax.xml.parsers.FactoryFinder$ConfigurationError;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<javax.xml.parsers.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r19, r13);
        throw $r14;

     label3:
        $r20 := @caughtexception;
        r21 = $r20;
        $r22 = new javax.xml.parsers.FactoryFinder$ConfigurationError;
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated: ");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r22.<javax.xml.parsers.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r28, r21);
        throw $r22;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
        catch java.lang.Exception from label0 to label1 with label3;
    }

    static java.lang.Object find(java.lang.String, java.lang.String) throws javax.xml.parsers.FactoryFinder$ConfigurationError
    {
        java.lang.String r0, r1, r3, r5, $r10, $r15, $r22, $r24, $r27, $r35, r41, $r45, $r55, $r59;
        java.lang.StringBuilder $r2, $r8, $r9, $r12, $r13, $r14, $r20, $r23, $r25, $r26, $r28, $r29, $r32, $r33, $r34, $r42, $r43, $r44, $r51, $r52, $r53, $r54, $r56, $r57, $r58;
        java.util.Properties r4, $r19, $r36, $r40;
        java.io.File r6, $r30;
        java.lang.Throwable r7, $r39;
        javax.xml.parsers.SecuritySupport $r11, $r21, $r31, $r37;
        java.lang.Object $r16, $r46, r49, $r60;
        java.lang.SecurityException $r17, r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        null_type n0;
        java.io.FileInputStream $r38;
        java.lang.Exception $r47, r48;
        javax.xml.parsers.FactoryFinder$ConfigurationError $r50;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("find factoryId =");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r10);

     label0:
        $r11 = <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss>;
        r3 = virtualinvoke $r11.<javax.xml.parsers.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>(r0);
        if r3 == null goto label2;

        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found system property, value=");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r15);
        $r16 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(r3, null, 1);

     label1:
        return $r16;

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;
        r18 = $r17;
        $z0 = <javax.xml.parsers.FactoryFinder: boolean debug>;
        if $z0 == 0 goto label4;

        virtualinvoke r18.<java.lang.SecurityException: void printStackTrace()>();

     label4:
        n0 = null;
        $z1 = <javax.xml.parsers.FactoryFinder: boolean firstTime>;
        if $z1 == 0 goto label11;

        $r19 = <javax.xml.parsers.FactoryFinder: java.util.Properties cacheProps>;
        r4 = $r19;
        entermonitor $r19;

     label5:
        $z2 = <javax.xml.parsers.FactoryFinder: boolean firstTime>;
        if $z2 == 0 goto label6;

        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss>;
        $r22 = virtualinvoke $r21.<javax.xml.parsers.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>("java.home");
        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = <java.io.File: java.lang.String separator>;
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");
        $r27 = <java.io.File: java.lang.String separator>;
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jaxp.properties");
        r5 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        $r30 = new java.io.File;
        specialinvoke $r30.<java.io.File: void <init>(java.lang.String)>(r5);
        r6 = $r30;
        <javax.xml.parsers.FactoryFinder: boolean firstTime> = 0;
        $r31 = <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss>;
        $z3 = virtualinvoke $r31.<javax.xml.parsers.SecuritySupport: boolean doesFileExist(java.io.File)>(r6);
        if $z3 == 0 goto label6;

        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read properties file ");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r35);
        $r36 = <javax.xml.parsers.FactoryFinder: java.util.Properties cacheProps>;
        $r37 = <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss>;
        $r38 = virtualinvoke $r37.<javax.xml.parsers.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)>(r6);
        virtualinvoke $r36.<java.util.Properties: void load(java.io.InputStream)>($r38);

     label6:
        exitmonitor r4;

     label7:
        goto label11;

     label8:
        $r39 := @caughtexception;

     label9:
        r7 = $r39;
        exitmonitor r4;

     label10:
        throw r7;

     label11:
        $r40 = <javax.xml.parsers.FactoryFinder: java.util.Properties cacheProps>;
        r41 = virtualinvoke $r40.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);
        if r41 == null goto label13;

        $r42 = new java.lang.StringBuilder;
        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found in $java.home/jaxp.properties, value=");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r45);
        $r46 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(r41, null, 1);

     label12:
        return $r46;

     label13:
        goto label15;

     label14:
        $r47 := @caughtexception;
        r48 = $r47;
        $z4 = <javax.xml.parsers.FactoryFinder: boolean debug>;
        if $z4 == 0 goto label15;

        virtualinvoke r48.<java.lang.Exception: void printStackTrace()>();

     label15:
        r49 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object findJarServiceProvider(java.lang.String)>(r0);
        if r49 == null goto label16;

        return r49;

     label16:
        if r1 != null goto label17;

        $r50 = new javax.xml.parsers.FactoryFinder$ConfigurationError;
        $r51 = new java.lang.StringBuilder;
        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider for ");
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be found");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r50.<javax.xml.parsers.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r55, null);
        throw $r50;

     label17:
        $r56 = new java.lang.StringBuilder;
        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loaded from fallback value: ");
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r59);
        $r60 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(r1, null, 1);
        return $r60;

        catch java.lang.SecurityException from label0 to label1 with label3;
        catch java.lang.Throwable from label5 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
        catch java.lang.Exception from label4 to label12 with label14;
    }

    private static java.lang.Object findJarServiceProvider(java.lang.String) throws javax.xml.parsers.FactoryFinder$ConfigurationError
    {
        java.lang.String r0, r2, $r21, r27, $r29, $r33;
        java.lang.StringBuilder $r1, $r7, $r8, $r16, $r17, $r18, $r19, $r20, $r30, $r31, $r32;
        null_type n0, n1;
        java.lang.ClassLoader r3;
        boolean z0, $z1, $z2;
        java.io.BufferedReader r4, $r22, $r25;
        java.io.UnsupportedEncodingException r5, $r24;
        java.io.IOException r6, $r28;
        javax.xml.parsers.SecuritySupport $r9, $r10, $r13, $r15;
        java.io.InputStream r11;
        java.lang.Class $r12, $r14;
        java.io.InputStreamReader $r23, $r26;
        java.lang.Object $r34;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        n0 = null;
        $r9 = <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss>;
        r3 = virtualinvoke $r9.<javax.xml.parsers.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();
        z0 = 0;
        if r3 == null goto label0;

        $r10 = <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss>;
        r11 = virtualinvoke $r10.<javax.xml.parsers.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>(r3, r2);
        if r11 != null goto label1;

        $r12 = class "javax/xml/parsers/FactoryFinder";
        r3 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        $r13 = <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss>;
        r11 = virtualinvoke $r13.<javax.xml.parsers.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>(r3, r2);
        z0 = 1;
        goto label1;

     label0:
        $r14 = class "javax/xml/parsers/FactoryFinder";
        r3 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
        $r15 = <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss>;
        r11 = virtualinvoke $r15.<javax.xml.parsers.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>(r3, r2);
        z0 = 1;

     label1:
        if r11 != null goto label2;

        return null;

     label2:
        $z1 = <javax.xml.parsers.FactoryFinder: boolean debug>;
        if $z1 == 0 goto label3;

        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found jar resource=");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r21);

     label3:
        $r22 = new java.io.BufferedReader;
        $r23 = new java.io.InputStreamReader;
        specialinvoke $r23.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r11, "UTF-8");
        specialinvoke $r22.<java.io.BufferedReader: void <init>(java.io.Reader)>($r23);
        r4 = $r22;

     label4:
        goto label6;

     label5:
        $r24 := @caughtexception;
        r5 = $r24;
        $r25 = new java.io.BufferedReader;
        $r26 = new java.io.InputStreamReader;
        specialinvoke $r26.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r11);
        specialinvoke $r25.<java.io.BufferedReader: void <init>(java.io.Reader)>($r26);
        r4 = $r25;

     label6:
        n1 = null;

     label7:
        r27 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();
        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label8:
        goto label10;

     label9:
        $r28 := @caughtexception;
        r6 = $r28;
        return null;

     label10:
        if r27 == null goto label11;

        $r29 = "";
        $z2 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r27);
        if $z2 != 0 goto label11;

        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found in resource, value=");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <javax.xml.parsers.FactoryFinder: void dPrint(java.lang.String)>($r33);
        $r34 = staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean,boolean)>(r27, r3, 0, z0);
        return $r34;

     label11:
        return null;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
        catch java.io.IOException from label7 to label8 with label9;
    }

    static void <clinit>()
    {
        java.lang.String r0, $r4;
        java.util.Properties $r1;
        javax.xml.parsers.SecuritySupport $r2, $r3;
        boolean $z0, $z1;
        java.lang.SecurityException $r5, r6;

        <javax.xml.parsers.FactoryFinder: boolean debug> = 0;
        $r1 = new java.util.Properties;
        specialinvoke $r1.<java.util.Properties: void <init>()>();
        <javax.xml.parsers.FactoryFinder: java.util.Properties cacheProps> = $r1;
        <javax.xml.parsers.FactoryFinder: boolean firstTime> = 1;
        $r2 = new javax.xml.parsers.SecuritySupport;
        specialinvoke $r2.<javax.xml.parsers.SecuritySupport: void <init>()>();
        <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss> = $r2;

     label0:
        $r3 = <javax.xml.parsers.FactoryFinder: javax.xml.parsers.SecuritySupport ss>;
        r0 = virtualinvoke $r3.<javax.xml.parsers.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>("jaxp.debug");
        if r0 == null goto label1;

        $r4 = "false";
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);
        if $z0 != 0 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        <javax.xml.parsers.FactoryFinder: boolean debug> = $z1;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;
        r6 = $r5;
        <javax.xml.parsers.FactoryFinder: boolean debug> = 0;

     label5:
        return;

        catch java.lang.SecurityException from label0 to label3 with label4;
    }
}
