public class org.apache.juli.logging.LogFactory extends java.lang.Object
{
    public static final java.lang.String FACTORY_PROPERTY;
    public static final java.lang.String FACTORY_DEFAULT;
    public static final java.lang.String FACTORY_PROPERTIES;
    public static final java.lang.String HASHTABLE_IMPLEMENTATION_PROPERTY;
    private static org.apache.juli.logging.LogFactory singleton;
    java.util.Properties logConfig;

    static void <clinit>()
    {
        org.apache.juli.logging.LogFactory $r0;

        $r0 = new org.apache.juli.logging.LogFactory;
        specialinvoke $r0.<org.apache.juli.logging.LogFactory: void <init>()>();
        <org.apache.juli.logging.LogFactory: org.apache.juli.logging.LogFactory singleton> = $r0;
        return;
    }

    private void <init>()
    {
        org.apache.juli.logging.LogFactory r0;
        java.util.Properties $r1;

        r0 := @this: org.apache.juli.logging.LogFactory;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.Properties;
        specialinvoke $r1.<java.util.Properties: void <init>()>();
        r0.<org.apache.juli.logging.LogFactory: java.util.Properties logConfig> = $r1;
        return;
    }

    void setLogConfig(java.util.Properties)
    {
        org.apache.juli.logging.LogFactory r0;
        java.util.Properties r1;

        r0 := @this: org.apache.juli.logging.LogFactory;
        r1 := @parameter0: java.util.Properties;
        r0.<org.apache.juli.logging.LogFactory: java.util.Properties logConfig> = r1;
        return;
    }

    public org.apache.juli.logging.Log getInstance(java.lang.String) throws org.apache.juli.logging.LogConfigurationException
    {
        org.apache.juli.logging.LogFactory r0;
        java.lang.String r1;
        org.apache.juli.logging.Log $r2;

        r0 := @this: org.apache.juli.logging.LogFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = staticinvoke <org.apache.juli.logging.DirectJDKLog: org.apache.juli.logging.Log getInstance(java.lang.String)>(r1);
        return $r2;
    }

    public void release()
    {
        org.apache.juli.logging.LogFactory r0;

        r0 := @this: org.apache.juli.logging.LogFactory;
        staticinvoke <org.apache.juli.logging.DirectJDKLog: void release()>();
        return;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        org.apache.juli.logging.LogFactory r0;
        java.lang.String r1;
        java.util.Properties $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.juli.logging.LogFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.apache.juli.logging.LogFactory: java.util.Properties logConfig>;
        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r1);
        return $r3;
    }

    public java.lang.String[] getAttributeNames()
    {
        org.apache.juli.logging.LogFactory r0;
        java.lang.String[] r1, $r6;
        java.util.Properties $r2, $r3;
        int $i0;
        java.util.Set $r4;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.juli.logging.LogFactory;
        $r2 = r0.<org.apache.juli.logging.LogFactory: java.util.Properties logConfig>;
        $i0 = virtualinvoke $r2.<java.util.Properties: int size()>();
        r1 = newarray (java.lang.String)[$i0];
        $r3 = r0.<org.apache.juli.logging.LogFactory: java.util.Properties logConfig>;
        $r4 = virtualinvoke $r3.<java.util.Properties: java.util.Set keySet()>();
        $r5 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r1);
        $r6 = (java.lang.String[]) $r5;
        return $r6;
    }

    public void removeAttribute(java.lang.String)
    {
        org.apache.juli.logging.LogFactory r0;
        java.lang.String r1;
        java.util.Properties $r2;

        r0 := @this: org.apache.juli.logging.LogFactory;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.apache.juli.logging.LogFactory: java.util.Properties logConfig>;
        virtualinvoke $r2.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r1);
        return;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        org.apache.juli.logging.LogFactory r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.util.Properties $r3;

        r0 := @this: org.apache.juli.logging.LogFactory;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = r0.<org.apache.juli.logging.LogFactory: java.util.Properties logConfig>;
        virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return;
    }

    public org.apache.juli.logging.Log getInstance(java.lang.Class) throws org.apache.juli.logging.LogConfigurationException
    {
        org.apache.juli.logging.LogFactory r0;
        java.lang.Class r1;
        java.lang.String $r2;
        org.apache.juli.logging.Log $r3;

        r0 := @this: org.apache.juli.logging.LogFactory;
        r1 := @parameter0: java.lang.Class;
        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();
        $r3 = virtualinvoke r0.<org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getInstance(java.lang.String)>($r2);
        return $r3;
    }

    public static org.apache.juli.logging.LogFactory getFactory() throws org.apache.juli.logging.LogConfigurationException
    {
        org.apache.juli.logging.LogFactory $r0;

        $r0 = <org.apache.juli.logging.LogFactory: org.apache.juli.logging.LogFactory singleton>;
        return $r0;
    }

    public static org.apache.juli.logging.Log getLog(java.lang.Class) throws org.apache.juli.logging.LogConfigurationException
    {
        java.lang.Class r0;
        org.apache.juli.logging.LogFactory $r1;
        org.apache.juli.logging.Log $r2;

        r0 := @parameter0: java.lang.Class;
        $r1 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.LogFactory getFactory()>();
        $r2 = virtualinvoke $r1.<org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getInstance(java.lang.Class)>(r0);
        return $r2;
    }

    public static org.apache.juli.logging.Log getLog(java.lang.String) throws org.apache.juli.logging.LogConfigurationException
    {
        java.lang.String r0;
        org.apache.juli.logging.LogFactory $r1;
        org.apache.juli.logging.Log $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.LogFactory getFactory()>();
        $r2 = virtualinvoke $r1.<org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getInstance(java.lang.String)>(r0);
        return $r2;
    }

    public static void release(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0;
        java.util.logging.LogManager $r1, $r4;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.ClassLoader;
        $r1 = staticinvoke <java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>();
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("java.util.logging.LogManager");
        if $z0 != 0 goto label0;

        $r4 = staticinvoke <java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>();
        virtualinvoke $r4.<java.util.logging.LogManager: void reset()>();

     label0:
        return;
    }

    public static void releaseAll()
    {
        org.apache.juli.logging.LogFactory $r0;

        $r0 = <org.apache.juli.logging.LogFactory: org.apache.juli.logging.LogFactory singleton>;
        virtualinvoke $r0.<org.apache.juli.logging.LogFactory: void release()>();
        return;
    }

    public static java.lang.String objectId(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.StringBuilder $r1, $r5, $r6;
        java.lang.Class $r2;
        java.lang.String $r3, $r4, $r7;
        int $i0;

        r0 := @parameter0: java.lang.Object;
        if r0 != null goto label0;

        return "null";

     label0:
        $r1 = new java.lang.StringBuilder;
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");
        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }
}
