class java.util.EnumSet$SerializationProxy extends java.lang.Object implements java.io.Serializable
{
    private final java.lang.Class elementType;
    private final java.lang.Enum[] elements;
    private static final long serialVersionUID;

    void <init>(java.util.EnumSet)
    {
        java.util.EnumSet$SerializationProxy r0;
        java.util.EnumSet r1;
        java.lang.Enum[] $r2, $r5;
        java.lang.Class $r3;
        java.lang.Object[] $r4;

        r0 := @this: java.util.EnumSet$SerializationProxy;
        r1 := @parameter0: java.util.EnumSet;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = r1.<java.util.EnumSet: java.lang.Class elementType>;
        r0.<java.util.EnumSet$SerializationProxy: java.lang.Class elementType> = $r3;
        $r2 = staticinvoke <java.util.EnumSet: java.lang.Enum[] access$000()>();
        $r4 = virtualinvoke r1.<java.util.EnumSet: java.lang.Object[] toArray(java.lang.Object[])>($r2);
        $r5 = (java.lang.Enum[]) $r4;
        r0.<java.util.EnumSet$SerializationProxy: java.lang.Enum[] elements> = $r5;
        return;
    }

    private java.lang.Object readResolve()
    {
        java.util.EnumSet$SerializationProxy r0;
        java.util.EnumSet r1;
        java.lang.Enum[] r2;
        int i0, i1;
        java.lang.Enum r3;
        java.lang.Class $r4;

        r0 := @this: java.util.EnumSet$SerializationProxy;
        $r4 = r0.<java.util.EnumSet$SerializationProxy: java.lang.Class elementType>;
        r1 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>($r4);
        r2 = r0.<java.util.EnumSet$SerializationProxy: java.lang.Enum[] elements>;
        i0 = lengthof r2;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        r3 = r2[i1];
        virtualinvoke r1.<java.util.EnumSet: boolean add(java.lang.Object)>(r3);
        i1 = i1 + 1;
        goto label0;

     label1:
        return r1;
    }
}
