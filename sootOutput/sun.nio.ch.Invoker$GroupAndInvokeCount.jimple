class sun.nio.ch.Invoker$GroupAndInvokeCount extends java.lang.Object
{
    private final sun.nio.ch.AsynchronousChannelGroupImpl group;
    private int handlerInvokeCount;

    void <init>(sun.nio.ch.AsynchronousChannelGroupImpl)
    {
        sun.nio.ch.Invoker$GroupAndInvokeCount r0;
        sun.nio.ch.AsynchronousChannelGroupImpl r1;

        r0 := @this: sun.nio.ch.Invoker$GroupAndInvokeCount;
        r1 := @parameter0: sun.nio.ch.AsynchronousChannelGroupImpl;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.nio.ch.Invoker$GroupAndInvokeCount: sun.nio.ch.AsynchronousChannelGroupImpl group> = r1;
        return;
    }

    sun.nio.ch.AsynchronousChannelGroupImpl group()
    {
        sun.nio.ch.Invoker$GroupAndInvokeCount r0;
        sun.nio.ch.AsynchronousChannelGroupImpl $r1;

        r0 := @this: sun.nio.ch.Invoker$GroupAndInvokeCount;
        $r1 = r0.<sun.nio.ch.Invoker$GroupAndInvokeCount: sun.nio.ch.AsynchronousChannelGroupImpl group>;
        return $r1;
    }

    int invokeCount()
    {
        sun.nio.ch.Invoker$GroupAndInvokeCount r0;
        int $i0;

        r0 := @this: sun.nio.ch.Invoker$GroupAndInvokeCount;
        $i0 = r0.<sun.nio.ch.Invoker$GroupAndInvokeCount: int handlerInvokeCount>;
        return $i0;
    }

    void setInvokeCount(int)
    {
        sun.nio.ch.Invoker$GroupAndInvokeCount r0;
        int i0;

        r0 := @this: sun.nio.ch.Invoker$GroupAndInvokeCount;
        i0 := @parameter0: int;
        r0.<sun.nio.ch.Invoker$GroupAndInvokeCount: int handlerInvokeCount> = i0;
        return;
    }

    void resetInvokeCount()
    {
        sun.nio.ch.Invoker$GroupAndInvokeCount r0;

        r0 := @this: sun.nio.ch.Invoker$GroupAndInvokeCount;
        r0.<sun.nio.ch.Invoker$GroupAndInvokeCount: int handlerInvokeCount> = 0;
        return;
    }

    void incrementInvokeCount()
    {
        sun.nio.ch.Invoker$GroupAndInvokeCount r0;
        int $i0, $i1;

        r0 := @this: sun.nio.ch.Invoker$GroupAndInvokeCount;
        $i0 = r0.<sun.nio.ch.Invoker$GroupAndInvokeCount: int handlerInvokeCount>;
        $i1 = $i0 + 1;
        r0.<sun.nio.ch.Invoker$GroupAndInvokeCount: int handlerInvokeCount> = $i1;
        return;
    }

    static sun.nio.ch.AsynchronousChannelGroupImpl access$100(sun.nio.ch.Invoker$GroupAndInvokeCount)
    {
        sun.nio.ch.Invoker$GroupAndInvokeCount r0;
        sun.nio.ch.AsynchronousChannelGroupImpl $r1;

        r0 := @parameter0: sun.nio.ch.Invoker$GroupAndInvokeCount;
        $r1 = r0.<sun.nio.ch.Invoker$GroupAndInvokeCount: sun.nio.ch.AsynchronousChannelGroupImpl group>;
        return $r1;
    }
}
