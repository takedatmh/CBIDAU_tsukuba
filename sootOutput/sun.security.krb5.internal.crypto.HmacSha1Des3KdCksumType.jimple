public class sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType extends sun.security.krb5.internal.crypto.CksumType
{

    public void <init>()
    {
        sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType;
        specialinvoke r0.<sun.security.krb5.internal.crypto.CksumType: void <init>()>();
        return;
    }

    public int confounderSize()
    {
        sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType;
        return 8;
    }

    public int cksumType()
    {
        sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType;
        return 12;
    }

    public boolean isSafe()
    {
        sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType;
        return 1;
    }

    public int cksumSize()
    {
        sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType;
        return 20;
    }

    public int keyType()
    {
        sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType;
        return 2;
    }

    public int keySize()
    {
        sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType r0;

        r0 := @this: sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType;
        return 24;
    }

    public byte[] calculateChecksum(byte[], int)
    {
        sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType r0;
        byte[] r1;
        int i0;

        r0 := @this: sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        return null;
    }

    public byte[] calculateKeyedChecksum(byte[], int, byte[], int) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType r0;
        byte[] r1, r2, $r5;
        int i0, i1;
        java.security.GeneralSecurityException r3, $r6;
        sun.security.krb5.KrbCryptoException r4, $r7;
        java.lang.String $r8;

        r0 := @this: sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        r2 := @parameter2: byte[];
        i1 := @parameter3: int;

     label0:
        $r5 = staticinvoke <sun.security.krb5.internal.crypto.Des3: byte[] calculateChecksum(byte[],int,byte[],int,int)>(r2, i1, r1, 0, i0);

     label1:
        return $r5;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;
        $r7 = new sun.security.krb5.KrbCryptoException;
        $r8 = virtualinvoke r3.<java.security.GeneralSecurityException: java.lang.String getMessage()>();
        specialinvoke $r7.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r8);
        r4 = $r7;
        virtualinvoke r4.<sun.security.krb5.KrbCryptoException: java.lang.Throwable initCause(java.lang.Throwable)>(r3);
        throw r4;

        catch java.security.GeneralSecurityException from label0 to label1 with label2;
    }

    public boolean verifyKeyedChecksum(byte[], int, byte[], byte[], int) throws sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType r0;
        byte[] r1, r2, r3, r4;
        int i0, i1;
        sun.security.krb5.KrbCryptoException r5, $r8;
        boolean $z0;
        java.security.GeneralSecurityException $r6, r7;
        java.lang.String $r9;

        r0 := @this: sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        r2 := @parameter2: byte[];
        r3 := @parameter3: byte[];
        i1 := @parameter4: int;

     label0:
        r4 = staticinvoke <sun.security.krb5.internal.crypto.Des3: byte[] calculateChecksum(byte[],int,byte[],int,int)>(r2, i1, r1, 0, i0);
        $z0 = staticinvoke <sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType: boolean isChecksumEqual(byte[],byte[])>(r3, r4);

     label1:
        return $z0;

     label2:
        $r6 := @caughtexception;
        r7 = $r6;
        $r8 = new sun.security.krb5.KrbCryptoException;
        $r9 = virtualinvoke r7.<java.security.GeneralSecurityException: java.lang.String getMessage()>();
        specialinvoke $r8.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>($r9);
        r5 = $r8;
        virtualinvoke r5.<sun.security.krb5.KrbCryptoException: java.lang.Throwable initCause(java.lang.Throwable)>(r7);
        throw r5;

        catch java.security.GeneralSecurityException from label0 to label1 with label2;
    }
}
