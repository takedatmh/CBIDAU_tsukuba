public final class sun.misc.Service extends java.lang.Object
{
    private static final java.lang.String prefix;

    private void <init>()
    {
        sun.misc.Service r0;

        r0 := @this: sun.misc.Service;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static void fail(java.lang.Class, java.lang.String, java.lang.Throwable) throws sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.String r1, $r6, $r10;
        java.lang.Throwable r2;
        sun.misc.ServiceConfigurationError $r3, r5;
        java.lang.StringBuilder $r4, $r7, $r8, $r9;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.Throwable;
        $r3 = new sun.misc.ServiceConfigurationError;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<sun.misc.ServiceConfigurationError: void <init>(java.lang.String)>($r10);
        r5 = $r3;
        virtualinvoke r5.<sun.misc.ServiceConfigurationError: java.lang.Throwable initCause(java.lang.Throwable)>(r2);
        throw r5;
    }

    private static void fail(java.lang.Class, java.lang.String) throws sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.String r1, $r4, $r8;
        sun.misc.ServiceConfigurationError $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.String;
        $r2 = new sun.misc.ServiceConfigurationError;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<sun.misc.ServiceConfigurationError: void <init>(java.lang.String)>($r8);
        throw $r2;
    }

    private static void fail(java.lang.Class, java.net.URL, int, java.lang.String) throws sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.net.URL r1;
        int i0;
        java.lang.String r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.net.URL;
        i0 := @parameter2: int;
        r2 := @parameter3: java.lang.String;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void fail(java.lang.Class,java.lang.String)>(r0, $r9);
        return;
    }

    private static int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List, java.util.Set) throws java.io.IOException, sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.net.URL r1;
        java.io.BufferedReader r2;
        int i0, i1, i2, i3, i4, $i5, $i6, i7, $i8, $i9;
        java.util.List r3;
        java.util.Set r4;
        java.lang.String r5, r6, $r10, $r14;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.net.URL;
        r2 := @parameter2: java.io.BufferedReader;
        i0 := @parameter3: int;
        r3 := @parameter4: java.util.List;
        r4 := @parameter5: java.util.Set;
        r5 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();
        if r5 != null goto label0;

        return -1;

     label0:
        i1 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(35);
        if i1 < 0 goto label1;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label1:
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();
        i2 = virtualinvoke r6.<java.lang.String: int length()>();
        if i2 == 0 goto label8;

        $i5 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(32);
        if $i5 >= 0 goto label2;

        $i6 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(9);
        if $i6 < 0 goto label3;

     label2:
        staticinvoke <sun.misc.Service: void fail(java.lang.Class,java.net.URL,int,java.lang.String)>(r0, r1, i0, "Illegal configuration-file syntax");

     label3:
        i3 = virtualinvoke r6.<java.lang.String: int codePointAt(int)>(0);
        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(int)>(i3);
        if $z0 != 0 goto label4;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal provider-class name: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void fail(java.lang.Class,java.net.URL,int,java.lang.String)>(r0, r1, i0, $r10);

     label4:
        i4 = staticinvoke <java.lang.Character: int charCount(int)>(i3);

     label5:
        if i4 >= i2 goto label7;

        i7 = virtualinvoke r6.<java.lang.String: int codePointAt(int)>(i4);
        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(int)>(i7);
        if $z1 != 0 goto label6;

        if i7 == 46 goto label6;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal provider-class name: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void fail(java.lang.Class,java.net.URL,int,java.lang.String)>(r0, r1, i0, $r14);

     label6:
        $i8 = staticinvoke <java.lang.Character: int charCount(int)>(i7);
        i4 = i4 + $i8;
        goto label5;

     label7:
        $z2 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r6);
        if $z2 != 0 goto label8;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);
        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r6);

     label8:
        $i9 = i0 + 1;
        return $i9;
    }

    private static java.util.Iterator parse(java.lang.Class, java.net.URL, java.util.Set) throws sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.net.URL r1;
        java.util.Set r2;
        java.io.InputStream r3;
        java.io.BufferedReader r4, $r10;
        java.util.ArrayList r5, $r9;
        java.io.InputStreamReader $r6;
        int i0, $i1;
        java.lang.Throwable r7, $r29;
        java.io.IOException r8, $r11, r12, $r17, r18, $r23, r24, $r30;
        java.lang.StringBuilder $r13, $r14, $r15, $r19, $r20, $r21, $r25, $r26, $r27, $r31, $r32, $r33;
        java.lang.String $r16, $r22, $r28, $r34;
        java.util.Iterator $r35;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.net.URL;
        r2 := @parameter2: java.util.Set;
        r3 = null;
        r4 = null;
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r5 = $r9;

     label0:
        r3 = virtualinvoke r1.<java.net.URL: java.io.InputStream openStream()>();
        $r10 = new java.io.BufferedReader;
        $r6 = new java.io.InputStreamReader;
        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r3, "utf-8");
        specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);
        r4 = $r10;
        i0 = 1;

     label1:
        $i1 = staticinvoke <sun.misc.Service: int parseLine(java.lang.Class,java.net.URL,java.io.BufferedReader,int,java.util.List,java.util.Set)>(r0, r1, r4, i0, r5, r2);
        i0 = $i1;
        if $i1 < 0 goto label2;

        goto label1;

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label3:
        if r3 == null goto label4;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label4:
        goto label19;

     label5:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void fail(java.lang.Class,java.lang.String)>(r0, $r16);
        goto label19;

     label6:
        $r17 := @caughtexception;

     label7:
        r18 = $r17;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void fail(java.lang.Class,java.lang.String)>(r0, $r22);

     label8:
        if r4 == null goto label9;

        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label9:
        if r3 == null goto label10;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label10:
        goto label19;

     label11:
        $r23 := @caughtexception;
        r24 = $r23;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void fail(java.lang.Class,java.lang.String)>(r0, $r28);
        goto label19;

     label12:
        $r29 := @caughtexception;

     label13:
        r7 = $r29;

     label14:
        if r4 == null goto label15;

        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label15:
        if r3 == null goto label16;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r30 := @caughtexception;
        r8 = $r30;
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <sun.misc.Service: void fail(java.lang.Class,java.lang.String)>(r0, $r34);

     label18:
        throw r7;

     label19:
        $r35 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();
        return $r35;

        catch java.io.IOException from label2 to label4 with label5;
        catch java.io.IOException from label0 to label2 with label6;
        catch java.io.IOException from label8 to label10 with label11;
        catch java.lang.Throwable from label0 to label2 with label12;
        catch java.lang.Throwable from label7 to label8 with label12;
        catch java.io.IOException from label14 to label16 with label17;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public static java.util.Iterator providers(java.lang.Class, java.lang.ClassLoader) throws sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.ClassLoader r1;
        sun.misc.Service$LazyIterator $r2;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.ClassLoader;
        $r2 = new sun.misc.Service$LazyIterator;
        specialinvoke $r2.<sun.misc.Service$LazyIterator: void <init>(java.lang.Class,java.lang.ClassLoader,sun.misc.Service$1)>(r0, r1, null);
        return $r2;
    }

    public static java.util.Iterator providers(java.lang.Class) throws sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.Thread $r1;
        java.lang.ClassLoader r2;
        java.util.Iterator $r3;

        r0 := @parameter0: java.lang.Class;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        $r3 = staticinvoke <sun.misc.Service: java.util.Iterator providers(java.lang.Class,java.lang.ClassLoader)>(r0, r2);
        return $r3;
    }

    public static java.util.Iterator installedProviders(java.lang.Class) throws sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.ClassLoader r1, r2;
        java.util.Iterator $r3;

        r0 := @parameter0: java.lang.Class;
        r1 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();
        r2 = null;

     label0:
        if r1 == null goto label1;

        r2 = r1;
        r1 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();
        goto label0;

     label1:
        $r3 = staticinvoke <sun.misc.Service: java.util.Iterator providers(java.lang.Class,java.lang.ClassLoader)>(r0, r2);
        return $r3;
    }

    static void access$000(java.lang.Class, java.lang.String) throws sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.String;
        staticinvoke <sun.misc.Service: void fail(java.lang.Class,java.lang.String)>(r0, r1);
        return;
    }

    static java.util.Iterator access$100(java.lang.Class, java.net.URL, java.util.Set) throws sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.net.URL r1;
        java.util.Set r2;
        java.util.Iterator $r3;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.net.URL;
        r2 := @parameter2: java.util.Set;
        $r3 = staticinvoke <sun.misc.Service: java.util.Iterator parse(java.lang.Class,java.net.URL,java.util.Set)>(r0, r1, r2);
        return $r3;
    }

    static void access$200(java.lang.Class, java.lang.String, java.lang.Throwable) throws sun.misc.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.Throwable;
        staticinvoke <sun.misc.Service: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r0, r1, r2);
        return;
    }
}
