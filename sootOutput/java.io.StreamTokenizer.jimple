public class java.io.StreamTokenizer extends java.lang.Object
{
    private java.io.Reader reader;
    private java.io.InputStream input;
    private char[] buf;
    private int peekc;
    private static final int NEED_CHAR;
    private static final int SKIP_LF;
    private boolean pushedBack;
    private boolean forceLower;
    private int LINENO;
    private boolean eolIsSignificantP;
    private boolean slashSlashCommentsP;
    private boolean slashStarCommentsP;
    private byte[] ctype;
    private static final byte CT_WHITESPACE;
    private static final byte CT_DIGIT;
    private static final byte CT_ALPHA;
    private static final byte CT_QUOTE;
    private static final byte CT_COMMENT;
    public int ttype;
    public static final int TT_EOF;
    public static final int TT_EOL;
    public static final int TT_NUMBER;
    public static final int TT_WORD;
    private static final int TT_NOTHING;
    public java.lang.String sval;
    public double nval;

    private void <init>()
    {
        java.io.StreamTokenizer r0;
        char[] $r1;
        byte[] $r2;

        r0 := @this: java.io.StreamTokenizer;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.io.StreamTokenizer: java.io.Reader reader> = null;
        r0.<java.io.StreamTokenizer: java.io.InputStream input> = null;
        $r1 = newarray (char)[20];
        r0.<java.io.StreamTokenizer: char[] buf> = $r1;
        r0.<java.io.StreamTokenizer: int peekc> = 2147483647;
        r0.<java.io.StreamTokenizer: int LINENO> = 1;
        r0.<java.io.StreamTokenizer: boolean eolIsSignificantP> = 0;
        r0.<java.io.StreamTokenizer: boolean slashSlashCommentsP> = 0;
        r0.<java.io.StreamTokenizer: boolean slashStarCommentsP> = 0;
        $r2 = newarray (byte)[256];
        r0.<java.io.StreamTokenizer: byte[] ctype> = $r2;
        r0.<java.io.StreamTokenizer: int ttype> = -4;
        virtualinvoke r0.<java.io.StreamTokenizer: void wordChars(int,int)>(97, 122);
        virtualinvoke r0.<java.io.StreamTokenizer: void wordChars(int,int)>(65, 90);
        virtualinvoke r0.<java.io.StreamTokenizer: void wordChars(int,int)>(160, 255);
        virtualinvoke r0.<java.io.StreamTokenizer: void whitespaceChars(int,int)>(0, 32);
        virtualinvoke r0.<java.io.StreamTokenizer: void commentChar(int)>(47);
        virtualinvoke r0.<java.io.StreamTokenizer: void quoteChar(int)>(34);
        virtualinvoke r0.<java.io.StreamTokenizer: void quoteChar(int)>(39);
        virtualinvoke r0.<java.io.StreamTokenizer: void parseNumbers()>();
        return;
    }

    public void <init>(java.io.InputStream)
    {
        java.io.StreamTokenizer r0;
        java.io.InputStream r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.io.StreamTokenizer;
        r1 := @parameter0: java.io.InputStream;
        specialinvoke r0.<java.io.StreamTokenizer: void <init>()>();
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        r0.<java.io.StreamTokenizer: java.io.InputStream input> = r1;
        return;
    }

    public void <init>(java.io.Reader)
    {
        java.io.StreamTokenizer r0;
        java.io.Reader r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.io.StreamTokenizer;
        r1 := @parameter0: java.io.Reader;
        specialinvoke r0.<java.io.StreamTokenizer: void <init>()>();
        if r1 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();
        throw $r2;

     label0:
        r0.<java.io.StreamTokenizer: java.io.Reader reader> = r1;
        return;
    }

    public void resetSyntax()
    {
        java.io.StreamTokenizer r0;
        int i0;
        byte[] $r1, $r2;

        r0 := @this: java.io.StreamTokenizer;
        $r1 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        i0 = lengthof $r1;

     label0:
        i0 = i0 + -1;
        if i0 < 0 goto label1;

        $r2 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $r2[i0] = 0;
        goto label0;

     label1:
        return;
    }

    public void wordChars(int, int)
    {
        java.io.StreamTokenizer r0;
        int i0, i1, $i2, $i3, $i4;
        byte[] $r1, $r2, $r3;
        byte $b5, $b6, $b7;

        r0 := @this: java.io.StreamTokenizer;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 >= 0 goto label0;

        i0 = 0;

     label0:
        $r1 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i2 = lengthof $r1;
        if i1 < $i2 goto label1;

        $r2 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i3 = lengthof $r2;
        i1 = $i3 - 1;

     label1:
        if i0 > i1 goto label2;

        $r3 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i4 = i0;
        i0 = i0 + 1;
        $b5 = $r3[$i4];
        $b6 = $b5 | 4;
        $b7 = (byte) $b6;
        $r3[$i4] = $b7;
        goto label1;

     label2:
        return;
    }

    public void whitespaceChars(int, int)
    {
        java.io.StreamTokenizer r0;
        int i0, i1, $i2, $i3, $i4;
        byte[] $r1, $r2, $r3;

        r0 := @this: java.io.StreamTokenizer;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 >= 0 goto label0;

        i0 = 0;

     label0:
        $r1 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i2 = lengthof $r1;
        if i1 < $i2 goto label1;

        $r2 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i3 = lengthof $r2;
        i1 = $i3 - 1;

     label1:
        if i0 > i1 goto label2;

        $r3 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i4 = i0;
        i0 = i0 + 1;
        $r3[$i4] = 1;
        goto label1;

     label2:
        return;
    }

    public void ordinaryChars(int, int)
    {
        java.io.StreamTokenizer r0;
        int i0, i1, $i2, $i3, $i4;
        byte[] $r1, $r2, $r3;

        r0 := @this: java.io.StreamTokenizer;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 >= 0 goto label0;

        i0 = 0;

     label0:
        $r1 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i2 = lengthof $r1;
        if i1 < $i2 goto label1;

        $r2 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i3 = lengthof $r2;
        i1 = $i3 - 1;

     label1:
        if i0 > i1 goto label2;

        $r3 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i4 = i0;
        i0 = i0 + 1;
        $r3[$i4] = 0;
        goto label1;

     label2:
        return;
    }

    public void ordinaryChar(int)
    {
        java.io.StreamTokenizer r0;
        int i0, $i1;
        byte[] $r1, $r2;

        r0 := @this: java.io.StreamTokenizer;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $r1 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i1 = lengthof $r1;
        if i0 >= $i1 goto label0;

        $r2 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $r2[i0] = 0;

     label0:
        return;
    }

    public void commentChar(int)
    {
        java.io.StreamTokenizer r0;
        int i0, $i1;
        byte[] $r1, $r2;

        r0 := @this: java.io.StreamTokenizer;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $r1 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i1 = lengthof $r1;
        if i0 >= $i1 goto label0;

        $r2 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $r2[i0] = 16;

     label0:
        return;
    }

    public void quoteChar(int)
    {
        java.io.StreamTokenizer r0;
        int i0, $i1;
        byte[] $r1, $r2;

        r0 := @this: java.io.StreamTokenizer;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $r1 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i1 = lengthof $r1;
        if i0 >= $i1 goto label0;

        $r2 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $r2[i0] = 8;

     label0:
        return;
    }

    public void parseNumbers()
    {
        java.io.StreamTokenizer r0;
        int i0;
        byte[] $r1, $r2, $r3;
        byte $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12;

        r0 := @this: java.io.StreamTokenizer;
        i0 = 48;

     label0:
        if i0 > 57 goto label1;

        $r1 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $b2 = $r1[i0];
        $b3 = $b2 | 2;
        $b4 = (byte) $b3;
        $r1[i0] = $b4;
        i0 = i0 + 1;
        goto label0;

     label1:
        $r2 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $b5 = 46;
        $b6 = $r2[$b5];
        $b7 = $b6 | 2;
        $b8 = (byte) $b7;
        $r2[$b5] = $b8;
        $r3 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $b9 = 45;
        $b10 = $r3[$b9];
        $b11 = $b10 | 2;
        $b12 = (byte) $b11;
        $r3[$b9] = $b12;
        return;
    }

    public void eolIsSignificant(boolean)
    {
        java.io.StreamTokenizer r0;
        boolean z0;

        r0 := @this: java.io.StreamTokenizer;
        z0 := @parameter0: boolean;
        r0.<java.io.StreamTokenizer: boolean eolIsSignificantP> = z0;
        return;
    }

    public void slashStarComments(boolean)
    {
        java.io.StreamTokenizer r0;
        boolean z0;

        r0 := @this: java.io.StreamTokenizer;
        z0 := @parameter0: boolean;
        r0.<java.io.StreamTokenizer: boolean slashStarCommentsP> = z0;
        return;
    }

    public void slashSlashComments(boolean)
    {
        java.io.StreamTokenizer r0;
        boolean z0;

        r0 := @this: java.io.StreamTokenizer;
        z0 := @parameter0: boolean;
        r0.<java.io.StreamTokenizer: boolean slashSlashCommentsP> = z0;
        return;
    }

    public void lowerCaseMode(boolean)
    {
        java.io.StreamTokenizer r0;
        boolean z0;

        r0 := @this: java.io.StreamTokenizer;
        z0 := @parameter0: boolean;
        r0.<java.io.StreamTokenizer: boolean forceLower> = z0;
        return;
    }

    private int read() throws java.io.IOException
    {
        java.io.StreamTokenizer r0;
        java.io.Reader $r1, $r2;
        int $i0, $i1;
        java.io.InputStream $r3, $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: java.io.StreamTokenizer;
        $r1 = r0.<java.io.StreamTokenizer: java.io.Reader reader>;
        if $r1 == null goto label0;

        $r2 = r0.<java.io.StreamTokenizer: java.io.Reader reader>;
        $i0 = virtualinvoke $r2.<java.io.Reader: int read()>();
        return $i0;

     label0:
        $r3 = r0.<java.io.StreamTokenizer: java.io.InputStream input>;
        if $r3 == null goto label1;

        $r4 = r0.<java.io.StreamTokenizer: java.io.InputStream input>;
        $i1 = virtualinvoke $r4.<java.io.InputStream: int read()>();
        return $i1;

     label1:
        $r5 = new java.lang.IllegalStateException;
        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();
        throw $r5;
    }

    public int nextToken() throws java.io.IOException
    {
        java.io.StreamTokenizer r0;
        byte[] r1;
        int i0, i3, i5, $i6, $i10, $i11, $i13, $i14, $i20, i21, i24, $i25, $i26, $i27, $i28, i35, i36, $i37, i38, i39, $i40, $i41, i42, $i43, $i44, $i45, $i46, $i47, $i48, $i50, $i51, $i52, i53, i54, $i55, i56, $i57, $i58, $i59, $i60, $i62, $i63, i64, $i65, $i68, i69, $i70, $i73, i74, $i75;
        byte $b1, b2, b4, $b7, $b8, $b9, $b12, $b15, $b16, $b17, $b18, $b19, $b22, $b23, $b30, b31, $b32, $b33, $b34, $b61, $b66, $b67, $b71, $b72;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        double d0, d1, $d2, $d3, $d4;
        char[] $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, $r18, $r20;
        char $c29, $c49;
        java.lang.String $r11, $r12, $r13, $r21;

        r0 := @this: java.io.StreamTokenizer;
        $z1 = r0.<java.io.StreamTokenizer: boolean pushedBack>;
        if $z1 == 0 goto label0;

        r0.<java.io.StreamTokenizer: boolean pushedBack> = 0;
        $i6 = r0.<java.io.StreamTokenizer: int ttype>;
        return $i6;

     label0:
        r1 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        r0.<java.io.StreamTokenizer: java.lang.String sval> = null;
        i0 = r0.<java.io.StreamTokenizer: int peekc>;
        if i0 >= 0 goto label1;

        i0 = 2147483647;

     label1:
        if i0 != 2147483646 goto label3;

        i0 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        if i0 >= 0 goto label2;

        $b1 = -1;
        r0.<java.io.StreamTokenizer: int ttype> = $b1;
        return $b1;

     label2:
        if i0 != 10 goto label3;

        i0 = 2147483647;

     label3:
        if i0 != 2147483647 goto label4;

        i0 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        if i0 >= 0 goto label4;

        $b7 = -1;
        r0.<java.io.StreamTokenizer: int ttype> = $b7;
        return $b7;

     label4:
        r0.<java.io.StreamTokenizer: int ttype> = i0;
        r0.<java.io.StreamTokenizer: int peekc> = 2147483647;
        if i0 >= 256 goto label5;

        $b8 = r1[i0];
        goto label6;

     label5:
        $b8 = 4;

     label6:
        b2 = $b8;

     label7:
        $b9 = b2 & 1;
        if $b9 == 0 goto label15;

        if i0 != 13 goto label9;

        $i10 = r0.<java.io.StreamTokenizer: int LINENO>;
        $i11 = $i10 + 1;
        r0.<java.io.StreamTokenizer: int LINENO> = $i11;
        $z2 = r0.<java.io.StreamTokenizer: boolean eolIsSignificantP>;
        if $z2 == 0 goto label8;

        r0.<java.io.StreamTokenizer: int peekc> = 2147483646;
        $b12 = 10;
        r0.<java.io.StreamTokenizer: int ttype> = $b12;
        return $b12;

     label8:
        i0 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        if i0 != 10 goto label11;

        i0 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        goto label11;

     label9:
        if i0 != 10 goto label10;

        $i13 = r0.<java.io.StreamTokenizer: int LINENO>;
        $i14 = $i13 + 1;
        r0.<java.io.StreamTokenizer: int LINENO> = $i14;
        $z3 = r0.<java.io.StreamTokenizer: boolean eolIsSignificantP>;
        if $z3 == 0 goto label10;

        $b15 = 10;
        r0.<java.io.StreamTokenizer: int ttype> = $b15;
        return $b15;

     label10:
        i0 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();

     label11:
        if i0 >= 0 goto label12;

        $b16 = -1;
        r0.<java.io.StreamTokenizer: int ttype> = $b16;
        return $b16;

     label12:
        if i0 >= 256 goto label13;

        $b17 = r1[i0];
        goto label14;

     label13:
        $b17 = 4;

     label14:
        b2 = $b17;
        goto label7;

     label15:
        $b18 = b2 & 2;
        if $b18 == 0 goto label28;

        z0 = 0;
        if i0 != 45 goto label18;

        i0 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        if i0 == 46 goto label17;

        if i0 < 48 goto label16;

        if i0 <= 57 goto label17;

     label16:
        r0.<java.io.StreamTokenizer: int peekc> = i0;
        $b19 = 45;
        r0.<java.io.StreamTokenizer: int ttype> = $b19;
        return $b19;

     label17:
        z0 = 1;

     label18:
        d0 = 0.0;
        i3 = 0;
        b4 = 0;

     label19:
        if i0 != 46 goto label20;

        if b4 != 0 goto label20;

        b4 = 1;
        goto label21;

     label20:
        if 48 > i0 goto label22;

        if i0 > 57 goto label22;

        $d2 = d0 * 10.0;
        $i20 = i0 - 48;
        $d3 = (double) $i20;
        d0 = $d2 + $d3;
        i3 = i3 + b4;

     label21:
        i0 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        goto label19;

     label22:
        r0.<java.io.StreamTokenizer: int peekc> = i0;
        if i3 == 0 goto label25;

        d1 = 10.0;
        i21 = i3 + -1;

     label23:
        if i21 <= 0 goto label24;

        d1 = d1 * 10.0;
        i21 = i21 + -1;
        goto label23;

     label24:
        d0 = d0 / d1;

     label25:
        if z0 == 0 goto label26;

        $d4 = neg d0;
        goto label27;

     label26:
        $d4 = d0;

     label27:
        r0.<java.io.StreamTokenizer: double nval> = $d4;
        $b22 = -2;
        r0.<java.io.StreamTokenizer: int ttype> = $b22;
        return $b22;

     label28:
        $b23 = b2 & 4;
        if $b23 == 0 goto label35;

        i24 = 0;

     label29:
        $r5 = r0.<java.io.StreamTokenizer: char[] buf>;
        $i25 = lengthof $r5;
        if i24 < $i25 goto label30;

        $r6 = r0.<java.io.StreamTokenizer: char[] buf>;
        $r7 = r0.<java.io.StreamTokenizer: char[] buf>;
        $i26 = lengthof $r7;
        $i27 = $i26 * 2;
        $r8 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r6, $i27);
        r0.<java.io.StreamTokenizer: char[] buf> = $r8;

     label30:
        $r9 = r0.<java.io.StreamTokenizer: char[] buf>;
        $i28 = i24;
        i24 = i24 + 1;
        $c29 = (char) i0;
        $r9[$i28] = $c29;
        i0 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        if i0 >= 0 goto label31;

        $b30 = 1;
        goto label33;

     label31:
        if i0 >= 256 goto label32;

        $b30 = r1[i0];
        goto label33;

     label32:
        $b30 = 4;

     label33:
        b31 = $b30;
        $b32 = b31 & 6;
        if $b32 != 0 goto label29;

        r0.<java.io.StreamTokenizer: int peekc> = i0;
        $r10 = r0.<java.io.StreamTokenizer: char[] buf>;
        $r11 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>($r10, 0, i24);
        r0.<java.io.StreamTokenizer: java.lang.String sval> = $r11;
        $z4 = r0.<java.io.StreamTokenizer: boolean forceLower>;
        if $z4 == 0 goto label34;

        $r12 = r0.<java.io.StreamTokenizer: java.lang.String sval>;
        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<java.io.StreamTokenizer: java.lang.String sval> = $r13;

     label34:
        $b33 = -3;
        r0.<java.io.StreamTokenizer: int ttype> = $b33;
        return $b33;

     label35:
        $b34 = b2 & 8;
        if $b34 == 0 goto label56;

        r0.<java.io.StreamTokenizer: int ttype> = i0;
        i35 = 0;
        i36 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();

     label36:
        if i36 < 0 goto label53;

        $i37 = r0.<java.io.StreamTokenizer: int ttype>;
        if i36 == $i37 goto label53;

        if i36 == 10 goto label53;

        if i36 == 13 goto label53;

        if i36 != 92 goto label50;

        i38 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        i5 = i38;
        if i38 < 48 goto label40;

        if i38 > 55 goto label40;

        i38 = i38 - 48;
        i39 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        if 48 > i39 goto label38;

        if i39 > 55 goto label38;

        $i40 = i38 << 3;
        $i41 = i39 - 48;
        i38 = $i40 + $i41;
        i42 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        if 48 > i42 goto label37;

        if i42 > 55 goto label37;

        if i5 > 51 goto label37;

        $i43 = i38 << 3;
        $i44 = i42 - 48;
        i38 = $i43 + $i44;
        i36 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        goto label39;

     label37:
        i36 = i42;
        goto label39;

     label38:
        i36 = i39;

     label39:
        goto label49;

     label40:
        tableswitch(i38)
        {
            case 97: goto label41;
            case 98: goto label42;
            case 99: goto label48;
            case 100: goto label48;
            case 101: goto label48;
            case 102: goto label43;
            case 103: goto label48;
            case 104: goto label48;
            case 105: goto label48;
            case 106: goto label48;
            case 107: goto label48;
            case 108: goto label48;
            case 109: goto label48;
            case 110: goto label44;
            case 111: goto label48;
            case 112: goto label48;
            case 113: goto label48;
            case 114: goto label45;
            case 115: goto label48;
            case 116: goto label46;
            case 117: goto label48;
            case 118: goto label47;
            default: goto label48;
        };

     label41:
        i38 = 7;
        goto label48;

     label42:
        i38 = 8;
        goto label48;

     label43:
        i38 = 12;
        goto label48;

     label44:
        i38 = 10;
        goto label48;

     label45:
        i38 = 13;
        goto label48;

     label46:
        i38 = 9;
        goto label48;

     label47:
        i38 = 11;

     label48:
        i36 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();

     label49:
        goto label51;

     label50:
        i38 = i36;
        i36 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();

     label51:
        $r14 = r0.<java.io.StreamTokenizer: char[] buf>;
        $i45 = lengthof $r14;
        if i35 < $i45 goto label52;

        $r15 = r0.<java.io.StreamTokenizer: char[] buf>;
        $r16 = r0.<java.io.StreamTokenizer: char[] buf>;
        $i46 = lengthof $r16;
        $i47 = $i46 * 2;
        $r17 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r15, $i47);
        r0.<java.io.StreamTokenizer: char[] buf> = $r17;

     label52:
        $r18 = r0.<java.io.StreamTokenizer: char[] buf>;
        $i48 = i35;
        i35 = i35 + 1;
        $c49 = (char) i38;
        $r18[$i48] = $c49;
        goto label36;

     label53:
        $i50 = r0.<java.io.StreamTokenizer: int ttype>;
        if i36 != $i50 goto label54;

        $i51 = 2147483647;
        goto label55;

     label54:
        $i51 = i36;

     label55:
        r0.<java.io.StreamTokenizer: int peekc> = $i51;
        $r20 = r0.<java.io.StreamTokenizer: char[] buf>;
        $r21 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>($r20, 0, i35);
        r0.<java.io.StreamTokenizer: java.lang.String sval> = $r21;
        $i52 = r0.<java.io.StreamTokenizer: int ttype>;
        return $i52;

     label56:
        if i0 != 47 goto label71;

        $z5 = r0.<java.io.StreamTokenizer: boolean slashSlashCommentsP>;
        if $z5 != 0 goto label57;

        $z6 = r0.<java.io.StreamTokenizer: boolean slashStarCommentsP>;
        if $z6 == 0 goto label71;

     label57:
        i53 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        if i53 != 42 goto label64;

        $z7 = r0.<java.io.StreamTokenizer: boolean slashStarCommentsP>;
        if $z7 == 0 goto label64;

        i54 = 0;

     label58:
        $i55 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        i56 = $i55;
        if $i55 != 47 goto label59;

        if i54 == 42 goto label63;

     label59:
        if i56 != 13 goto label60;

        $i57 = r0.<java.io.StreamTokenizer: int LINENO>;
        $i58 = $i57 + 1;
        r0.<java.io.StreamTokenizer: int LINENO> = $i58;
        i56 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        if i56 != 10 goto label61;

        i56 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        goto label61;

     label60:
        if i56 != 10 goto label61;

        $i59 = r0.<java.io.StreamTokenizer: int LINENO>;
        $i60 = $i59 + 1;
        r0.<java.io.StreamTokenizer: int LINENO> = $i60;
        i56 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();

     label61:
        if i56 >= 0 goto label62;

        $b61 = -1;
        r0.<java.io.StreamTokenizer: int ttype> = $b61;
        return $b61;

     label62:
        i54 = i56;
        goto label58;

     label63:
        $i62 = virtualinvoke r0.<java.io.StreamTokenizer: int nextToken()>();
        return $i62;

     label64:
        if i53 != 47 goto label67;

        $z8 = r0.<java.io.StreamTokenizer: boolean slashSlashCommentsP>;
        if $z8 == 0 goto label67;

     label65:
        $i63 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        i64 = $i63;
        if $i63 == 10 goto label66;

        if i64 == 13 goto label66;

        if i64 < 0 goto label66;

        goto label65;

     label66:
        r0.<java.io.StreamTokenizer: int peekc> = i64;
        $i65 = virtualinvoke r0.<java.io.StreamTokenizer: int nextToken()>();
        return $i65;

     label67:
        $b66 = r1[47];
        $b67 = $b66 & 16;
        if $b67 == 0 goto label70;

     label68:
        $i68 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        i69 = $i68;
        if $i68 == 10 goto label69;

        if i69 == 13 goto label69;

        if i69 < 0 goto label69;

        goto label68;

     label69:
        r0.<java.io.StreamTokenizer: int peekc> = i69;
        $i70 = virtualinvoke r0.<java.io.StreamTokenizer: int nextToken()>();
        return $i70;

     label70:
        r0.<java.io.StreamTokenizer: int peekc> = i53;
        $b71 = 47;
        r0.<java.io.StreamTokenizer: int ttype> = $b71;
        return $b71;

     label71:
        $b72 = b2 & 16;
        if $b72 == 0 goto label74;

     label72:
        $i73 = specialinvoke r0.<java.io.StreamTokenizer: int read()>();
        i74 = $i73;
        if $i73 == 10 goto label73;

        if i74 == 13 goto label73;

        if i74 < 0 goto label73;

        goto label72;

     label73:
        r0.<java.io.StreamTokenizer: int peekc> = i74;
        $i75 = virtualinvoke r0.<java.io.StreamTokenizer: int nextToken()>();
        return $i75;

     label74:
        r0.<java.io.StreamTokenizer: int ttype> = i0;
        return i0;
    }

    public void pushBack()
    {
        java.io.StreamTokenizer r0;
        int $i0;

        r0 := @this: java.io.StreamTokenizer;
        $i0 = r0.<java.io.StreamTokenizer: int ttype>;
        if $i0 == -4 goto label0;

        r0.<java.io.StreamTokenizer: boolean pushedBack> = 1;

     label0:
        return;
    }

    public int lineno()
    {
        java.io.StreamTokenizer r0;
        int $i0;

        r0 := @this: java.io.StreamTokenizer;
        $i0 = r0.<java.io.StreamTokenizer: int LINENO>;
        return $i0;
    }

    public java.lang.String toString()
    {
        java.io.StreamTokenizer r0;
        java.lang.String r1, $r7, $r13;
        char[] r2;
        char $c0, $c7;
        int $i1, $i2, $i3, $i6, $i8;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12;
        double $d0;
        byte[] $r6;
        byte $b4, $b5;

        r0 := @this: java.io.StreamTokenizer;
        $i1 = r0.<java.io.StreamTokenizer: int ttype>;
        tableswitch($i1)
        {
            case -4: goto label4;
            case -3: goto label2;
            case -2: goto label3;
            case -1: goto label0;
            case 0: goto label5;
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label5;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label5;
            case 8: goto label5;
            case 9: goto label5;
            case 10: goto label1;
            default: goto label5;
        };

     label0:
        r1 = "EOF";
        goto label7;

     label1:
        r1 = "EOL";
        goto label7;

     label2:
        r1 = r0.<java.io.StreamTokenizer: java.lang.String sval>;
        goto label7;

     label3:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n=");
        $d0 = r0.<java.io.StreamTokenizer: double nval>;
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label7;

     label4:
        r1 = "NOTHING";
        goto label7;

     label5:
        $i2 = r0.<java.io.StreamTokenizer: int ttype>;
        if $i2 >= 256 goto label6;

        $r6 = r0.<java.io.StreamTokenizer: byte[] ctype>;
        $i3 = r0.<java.io.StreamTokenizer: int ttype>;
        $b4 = $r6[$i3];
        $b5 = $b4 & 8;
        if $b5 == 0 goto label6;

        r1 = r0.<java.io.StreamTokenizer: java.lang.String sval>;
        goto label7;

     label6:
        r2 = newarray (char)[3];
        $c0 = 39;
        r2[2] = $c0;
        r2[0] = $c0;
        $i6 = r0.<java.io.StreamTokenizer: int ttype>;
        $c7 = (char) $i6;
        r2[1] = $c7;
        $r7 = new java.lang.String;
        specialinvoke $r7.<java.lang.String: void <init>(char[])>(r2);
        r1 = $r7;
        goto label7;

     label7:
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token[");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], line ");
        $i8 = r0.<java.io.StreamTokenizer: int LINENO>;
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r13;
    }
}
