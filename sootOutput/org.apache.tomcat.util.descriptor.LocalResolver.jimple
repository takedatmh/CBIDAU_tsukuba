public class org.apache.tomcat.util.descriptor.LocalResolver extends java.lang.Object implements org.xml.sax.ext.EntityResolver2
{
    private static final org.apache.tomcat.util.res.StringManager sm;
    private static final java.lang.String[] JAVA_EE_NAMESPACES;
    private final java.util.Map publicIds;
    private final java.util.Map systemIds;
    private final boolean blockExternal;

    static void <clinit>()
    {
        java.lang.String $r0;
        org.apache.tomcat.util.res.StringManager $r1;
        java.lang.String[] $r2;

        $r0 = <org.apache.tomcat.util.descriptor.Constants: java.lang.String PACKAGE_NAME>;
        $r1 = staticinvoke <org.apache.tomcat.util.res.StringManager: org.apache.tomcat.util.res.StringManager getManager(java.lang.String)>($r0);
        <org.apache.tomcat.util.descriptor.LocalResolver: org.apache.tomcat.util.res.StringManager sm> = $r1;
        $r2 = newarray (java.lang.String)[2];
        $r2[0] = "http://java.sun.com/xml/ns/j2ee";
        $r2[1] = "http://java.sun.com/xml/ns/javaee";
        <org.apache.tomcat.util.descriptor.LocalResolver: java.lang.String[] JAVA_EE_NAMESPACES> = $r2;
        return;
    }

    public void <init>(java.util.Map, java.util.Map, boolean)
    {
        org.apache.tomcat.util.descriptor.LocalResolver r0;
        java.util.Map r1, r2;
        boolean z0;

        r0 := @this: org.apache.tomcat.util.descriptor.LocalResolver;
        r1 := @parameter0: java.util.Map;
        r2 := @parameter1: java.util.Map;
        z0 := @parameter2: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.tomcat.util.descriptor.LocalResolver: java.util.Map publicIds> = r1;
        r0.<org.apache.tomcat.util.descriptor.LocalResolver: java.util.Map systemIds> = r2;
        r0.<org.apache.tomcat.util.descriptor.LocalResolver: boolean blockExternal> = z0;
        return;
    }

    public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.tomcat.util.descriptor.LocalResolver r0;
        java.lang.String r1, r2;
        org.xml.sax.InputSource $r3;

        r0 := @this: org.apache.tomcat.util.descriptor.LocalResolver;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = virtualinvoke r0.<org.apache.tomcat.util.descriptor.LocalResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, r1, null, r2);
        return $r3;
    }

    public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.tomcat.util.descriptor.LocalResolver r0;
        java.lang.String r1, r2, r3, r4, r5, r8, $r16, r19, r23, $r25, r30, $r42, $r45, r47, $r51, $r56;
        org.xml.sax.InputSource r6, r9, $r12, $r20, r21, $r31, $r43, $r48, r49, $r50, r52;
        java.lang.String[] r7, $r22;
        int i0, i1;
        java.util.Map $r10, $r17, $r28, $r44;
        java.lang.Object $r11, $r18, $r29, $r46;
        java.io.FileNotFoundException $r13, $r53;
        org.apache.tomcat.util.res.StringManager $r14, $r54;
        java.lang.Object[] $r15, $r55;
        java.lang.StringBuilder $r24, $r26, $r27;
        java.net.URI $r32, r33, $r34, r35, r38;
        java.net.URL $r36, $r37;
        java.net.URISyntaxException $r39, r40;
        boolean $z0, $z1, $z2;
        java.net.MalformedURLException $r41;

        r0 := @this: org.apache.tomcat.util.descriptor.LocalResolver;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        $r10 = r0.<org.apache.tomcat.util.descriptor.LocalResolver: java.util.Map publicIds>;
        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);
        r5 = (java.lang.String) $r11;
        if r5 == null goto label0;

        $r12 = new org.xml.sax.InputSource;
        specialinvoke $r12.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r5);
        r6 = $r12;
        virtualinvoke r6.<org.xml.sax.InputSource: void setPublicId(java.lang.String)>(r2);
        return r6;

     label0:
        if r4 != null goto label1;

        $r13 = new java.io.FileNotFoundException;
        $r14 = <org.apache.tomcat.util.descriptor.LocalResolver: org.apache.tomcat.util.res.StringManager sm>;
        $r15 = newarray (java.lang.Object)[4];
        $r15[0] = r1;
        $r15[1] = r2;
        $r15[2] = r4;
        $r15[3] = r3;
        $r16 = virtualinvoke $r14.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("localResolver.unresolvedEntity", $r15);
        specialinvoke $r13.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r16);
        throw $r13;

     label1:
        $r17 = r0.<org.apache.tomcat.util.descriptor.LocalResolver: java.util.Map systemIds>;
        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        r19 = (java.lang.String) $r18;
        if r19 == null goto label2;

        $r20 = new org.xml.sax.InputSource;
        specialinvoke $r20.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r19);
        r21 = $r20;
        virtualinvoke r21.<org.xml.sax.InputSource: void setPublicId(java.lang.String)>(r2);
        return r21;

     label2:
        $r22 = <org.apache.tomcat.util.descriptor.LocalResolver: java.lang.String[] JAVA_EE_NAMESPACES>;
        r7 = $r22;
        i0 = lengthof $r22;
        i1 = 0;
        goto label5;

     label3:
        r23 = r7[i1];
        $r24 = new java.lang.StringBuilder;
        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r23);
        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>($r25);
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        r8 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        $r28 = r0.<org.apache.tomcat.util.descriptor.LocalResolver: java.util.Map systemIds>;
        $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);
        r30 = (java.lang.String) $r29;
        if r30 == null goto label4;

        $r31 = new org.xml.sax.InputSource;
        specialinvoke $r31.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r30);
        r9 = $r31;
        virtualinvoke r9.<org.xml.sax.InputSource: void setPublicId(java.lang.String)>(r2);
        return r9;

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label3;

     label6:
        if r3 != null goto label7;

        $r32 = new java.net.URI;
        specialinvoke $r32.<java.net.URI: void <init>(java.lang.String)>(r4);
        r33 = $r32;
        goto label8;

     label7:
        $r34 = new java.net.URI;
        specialinvoke $r34.<java.net.URI: void <init>(java.lang.String)>(r3);
        r35 = $r34;
        $r36 = new java.net.URL;
        $r37 = virtualinvoke r35.<java.net.URI: java.net.URL toURL()>();
        specialinvoke $r36.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r37, r4);
        r33 = virtualinvoke $r36.<java.net.URL: java.net.URI toURI()>();

     label8:
        r38 = virtualinvoke r33.<java.net.URI: java.net.URI normalize()>();

     label9:
        goto label12;

     label10:
        $r39 := @caughtexception;
        r40 = $r39;
        $z0 = r0.<org.apache.tomcat.util.descriptor.LocalResolver: boolean blockExternal>;
        if $z0 == 0 goto label11;

        $r41 = new java.net.MalformedURLException;
        $r42 = virtualinvoke r40.<java.net.URISyntaxException: java.lang.String getMessage()>();
        specialinvoke $r41.<java.net.MalformedURLException: void <init>(java.lang.String)>($r42);
        throw $r41;

     label11:
        $r43 = new org.xml.sax.InputSource;
        specialinvoke $r43.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r4);
        return $r43;

     label12:
        $z1 = virtualinvoke r38.<java.net.URI: boolean isAbsolute()>();
        if $z1 == 0 goto label14;

        $r44 = r0.<org.apache.tomcat.util.descriptor.LocalResolver: java.util.Map systemIds>;
        $r45 = virtualinvoke r38.<java.net.URI: java.lang.String toString()>();
        $r46 = interfaceinvoke $r44.<java.util.Map: java.lang.Object get(java.lang.Object)>($r45);
        r47 = (java.lang.String) $r46;
        if r47 == null goto label13;

        $r48 = new org.xml.sax.InputSource;
        specialinvoke $r48.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r47);
        r49 = $r48;
        virtualinvoke r49.<org.xml.sax.InputSource: void setPublicId(java.lang.String)>(r2);
        return r49;

     label13:
        $z2 = r0.<org.apache.tomcat.util.descriptor.LocalResolver: boolean blockExternal>;
        if $z2 != 0 goto label14;

        $r50 = new org.xml.sax.InputSource;
        $r51 = virtualinvoke r38.<java.net.URI: java.lang.String toString()>();
        specialinvoke $r50.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r51);
        r52 = $r50;
        virtualinvoke r52.<org.xml.sax.InputSource: void setPublicId(java.lang.String)>(r2);
        return r52;

     label14:
        $r53 = new java.io.FileNotFoundException;
        $r54 = <org.apache.tomcat.util.descriptor.LocalResolver: org.apache.tomcat.util.res.StringManager sm>;
        $r55 = newarray (java.lang.Object)[4];
        $r55[0] = r1;
        $r55[1] = r2;
        $r55[2] = r4;
        $r55[3] = r3;
        $r56 = virtualinvoke $r54.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("localResolver.unresolvedEntity", $r55);
        specialinvoke $r53.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r56);
        throw $r53;

        catch java.net.URISyntaxException from label6 to label9 with label10;
    }

    public org.xml.sax.InputSource getExternalSubset(java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.tomcat.util.descriptor.LocalResolver r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.tomcat.util.descriptor.LocalResolver;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        return null;
    }
}
