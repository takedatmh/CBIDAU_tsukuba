class org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3 extends java.lang.Object implements java.lang.Runnable
{
    final org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1;
    private final org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key;
    private final int val$ops;

    void <init>(org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller, org.apache.tomcat.util.net.NioEndpoint$KeyAttachment, int)
    {
        org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3 r0;
        org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller r1;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment r2;
        int i0;

        r0 := @this: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3;
        r1 := @parameter0: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller;
        r2 := @parameter1: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment;
        i0 := @parameter2: int;
        r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1> = r1;
        r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key> = r2;
        r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: int val$ops> = i0;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3 r0;
        org.apache.tomcat.util.net.NioChannel r1;
        java.nio.channels.SocketChannel r2;
        java.nio.channels.SelectionKey r3;
        java.nio.channels.CancelledKeyException r4, $r24;
        org.apache.tomcat.util.net.NioEndpoint$KeyAttachment $r5, $r6, $r10, $r13, $r17, $r20;
        org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller $r7, $r9, $r12, $r16, $r19;
        java.nio.channels.Selector $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.util.concurrent.CountDownLatch $r11, $r14, $r18, $r21;
        boolean $z0;

        r0 := @this: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3;
        $r5 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        if $r5 != null goto label0;

        return;

     label0:
        $r6 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        r1 = virtualinvoke $r6.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: org.apache.tomcat.util.net.NioChannel getChannel()>();
        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<org.apache.tomcat.util.net.NioChannel: java.nio.channels.SocketChannel getIOChannel()>();
        if r2 != null goto label2;

        return;

     label2:
        $r7 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1>;
        $r8 = $r7.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller: java.nio.channels.Selector selector>;
        r3 = virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)>($r8);

     label3:
        if r3 != null goto label5;

        $i0 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: int val$ops>;
        $i1 = $i0 & 4;
        if 4 != $i1 goto label4;

        $r9 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1>;
        $r10 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        $r11 = virtualinvoke $r10.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: java.util.concurrent.CountDownLatch getWriteLatch()>();
        virtualinvoke $r9.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller: void countDown(java.util.concurrent.CountDownLatch)>($r11);

     label4:
        $i2 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: int val$ops>;
        $i3 = $i2 & 1;
        if 1 != $i3 goto label11;

        $r12 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1>;
        $r13 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        $r14 = virtualinvoke $r13.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: java.util.concurrent.CountDownLatch getReadLatch()>();
        virtualinvoke $r12.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller: void countDown(java.util.concurrent.CountDownLatch)>($r14);
        goto label11;

     label5:
        $z0 = virtualinvoke r3.<java.nio.channels.SelectionKey: boolean isValid()>();
        if $z0 == 0 goto label8;

        $i4 = virtualinvoke r3.<java.nio.channels.SelectionKey: int interestOps()>();
        $i5 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: int val$ops>;
        $i6 = $i5 ^ -1;
        $i7 = $i4 & $i6;
        virtualinvoke r3.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i7);
        $i8 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: int val$ops>;
        $i9 = $i8 & 4;
        if 4 != $i9 goto label6;

        $r16 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1>;
        $r17 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        $r18 = virtualinvoke $r17.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: java.util.concurrent.CountDownLatch getWriteLatch()>();
        virtualinvoke $r16.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller: void countDown(java.util.concurrent.CountDownLatch)>($r18);

     label6:
        $i10 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: int val$ops>;
        $i11 = $i10 & 1;
        if 1 != $i11 goto label7;

        $r19 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller this$1>;
        $r20 = r0.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$3: org.apache.tomcat.util.net.NioEndpoint$KeyAttachment val$key>;
        $r21 = virtualinvoke $r20.<org.apache.tomcat.util.net.NioEndpoint$KeyAttachment: java.util.concurrent.CountDownLatch getReadLatch()>();
        virtualinvoke $r19.<org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller: void countDown(java.util.concurrent.CountDownLatch)>($r21);

     label7:
        $i12 = virtualinvoke r3.<java.nio.channels.SelectionKey: int interestOps()>();
        if $i12 != 0 goto label11;

        virtualinvoke r3.<java.nio.channels.SelectionKey: void cancel()>();
        virtualinvoke r3.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>(null);
        goto label11;

     label8:
        virtualinvoke r3.<java.nio.channels.SelectionKey: void cancel()>();
        virtualinvoke r3.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>(null);

     label9:
        goto label11;

     label10:
        $r24 := @caughtexception;
        r4 = $r24;
        if r3 == null goto label11;

        virtualinvoke r3.<java.nio.channels.SelectionKey: void cancel()>();
        virtualinvoke r3.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>(null);

     label11:
        return;

        catch java.nio.channels.CancelledKeyException from label3 to label9 with label10;
    }
}
