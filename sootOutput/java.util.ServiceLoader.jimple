public final class java.util.ServiceLoader extends java.lang.Object implements java.lang.Iterable
{
    private static final java.lang.String PREFIX;
    private java.lang.Class service;
    private java.lang.ClassLoader loader;
    private java.util.LinkedHashMap providers;
    private java.util.ServiceLoader$LazyIterator lookupIterator;

    public void reload()
    {
        java.util.ServiceLoader r0;
        java.util.ServiceLoader$LazyIterator $r1;
        java.util.LinkedHashMap $r2;
        java.lang.Class $r3;
        java.lang.ClassLoader $r4;

        r0 := @this: java.util.ServiceLoader;
        $r2 = r0.<java.util.ServiceLoader: java.util.LinkedHashMap providers>;
        virtualinvoke $r2.<java.util.LinkedHashMap: void clear()>();
        $r1 = new java.util.ServiceLoader$LazyIterator;
        $r3 = r0.<java.util.ServiceLoader: java.lang.Class service>;
        $r4 = r0.<java.util.ServiceLoader: java.lang.ClassLoader loader>;
        specialinvoke $r1.<java.util.ServiceLoader$LazyIterator: void <init>(java.util.ServiceLoader,java.lang.Class,java.lang.ClassLoader,java.util.ServiceLoader$1)>(r0, $r3, $r4, null);
        r0.<java.util.ServiceLoader: java.util.ServiceLoader$LazyIterator lookupIterator> = $r1;
        return;
    }

    private void <init>(java.lang.Class, java.lang.ClassLoader)
    {
        java.util.ServiceLoader r0;
        java.lang.Class r1;
        java.lang.ClassLoader r2;
        java.util.LinkedHashMap $r3;

        r0 := @this: java.util.ServiceLoader;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.lang.ClassLoader;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new java.util.LinkedHashMap;
        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();
        r0.<java.util.ServiceLoader: java.util.LinkedHashMap providers> = $r3;
        r0.<java.util.ServiceLoader: java.lang.Class service> = r1;
        r0.<java.util.ServiceLoader: java.lang.ClassLoader loader> = r2;
        virtualinvoke r0.<java.util.ServiceLoader: void reload()>();
        return;
    }

    private static void fail(java.lang.Class, java.lang.String, java.lang.Throwable) throws java.util.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.String r1, $r5, $r9;
        java.lang.Throwable r2;
        java.util.ServiceConfigurationError $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.Throwable;
        $r3 = new java.util.ServiceConfigurationError;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.util.ServiceConfigurationError: void <init>(java.lang.String,java.lang.Throwable)>($r9, r2);
        throw $r3;
    }

    private static void fail(java.lang.Class, java.lang.String) throws java.util.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.String r1, $r4, $r8;
        java.util.ServiceConfigurationError $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.String;
        $r2 = new java.util.ServiceConfigurationError;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.util.ServiceConfigurationError: void <init>(java.lang.String)>($r8);
        throw $r2;
    }

    private static void fail(java.lang.Class, java.net.URL, int, java.lang.String) throws java.util.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.net.URL r1;
        int i0;
        java.lang.String r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.net.URL;
        i0 := @parameter2: int;
        r2 := @parameter3: java.lang.String;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <java.util.ServiceLoader: void fail(java.lang.Class,java.lang.String)>(r0, $r9);
        return;
    }

    private int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List) throws java.io.IOException, java.util.ServiceConfigurationError
    {
        java.util.ServiceLoader r0;
        java.lang.Class r1;
        java.net.URL r2;
        java.io.BufferedReader r3;
        int i0, i1, i2, i3, i4, $i5, $i6, i7, $i8, $i9;
        java.util.List r4;
        java.lang.String r5, r6, $r10, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13;
        java.util.LinkedHashMap $r15;

        r0 := @this: java.util.ServiceLoader;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.net.URL;
        r3 := @parameter2: java.io.BufferedReader;
        i0 := @parameter3: int;
        r4 := @parameter4: java.util.List;
        r5 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();
        if r5 != null goto label0;

        return -1;

     label0:
        i1 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(35);
        if i1 < 0 goto label1;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label1:
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();
        i2 = virtualinvoke r6.<java.lang.String: int length()>();
        if i2 == 0 goto label8;

        $i5 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(32);
        if $i5 >= 0 goto label2;

        $i6 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(9);
        if $i6 < 0 goto label3;

     label2:
        staticinvoke <java.util.ServiceLoader: void fail(java.lang.Class,java.net.URL,int,java.lang.String)>(r1, r2, i0, "Illegal configuration-file syntax");

     label3:
        i3 = virtualinvoke r6.<java.lang.String: int codePointAt(int)>(0);
        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(int)>(i3);
        if $z0 != 0 goto label4;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal provider-class name: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <java.util.ServiceLoader: void fail(java.lang.Class,java.net.URL,int,java.lang.String)>(r1, r2, i0, $r10);

     label4:
        i4 = staticinvoke <java.lang.Character: int charCount(int)>(i3);

     label5:
        if i4 >= i2 goto label7;

        i7 = virtualinvoke r6.<java.lang.String: int codePointAt(int)>(i4);
        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(int)>(i7);
        if $z1 != 0 goto label6;

        if i7 == 46 goto label6;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal provider-class name: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <java.util.ServiceLoader: void fail(java.lang.Class,java.net.URL,int,java.lang.String)>(r1, r2, i0, $r14);

     label6:
        $i8 = staticinvoke <java.lang.Character: int charCount(int)>(i7);
        i4 = i4 + $i8;
        goto label5;

     label7:
        $r15 = r0.<java.util.ServiceLoader: java.util.LinkedHashMap providers>;
        $z2 = virtualinvoke $r15.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r6);
        if $z2 != 0 goto label8;

        $z3 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r6);
        if $z3 != 0 goto label8;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

     label8:
        $i9 = i0 + 1;
        return $i9;
    }

    private java.util.Iterator parse(java.lang.Class, java.net.URL) throws java.util.ServiceConfigurationError
    {
        java.util.ServiceLoader r0;
        java.lang.Class r1;
        java.net.URL r2;
        java.io.InputStream r3;
        java.io.BufferedReader r4, $r10;
        java.util.ArrayList r5, $r9;
        java.io.InputStreamReader $r6;
        int i0, $i1;
        java.lang.Throwable r7, $r17;
        java.io.IOException r8, $r11, r12, $r13, r14, $r15, r16, $r18;
        java.util.Iterator $r19;

        r0 := @this: java.util.ServiceLoader;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.net.URL;
        r3 = null;
        r4 = null;
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r5 = $r9;

     label0:
        r3 = virtualinvoke r2.<java.net.URL: java.io.InputStream openStream()>();
        $r10 = new java.io.BufferedReader;
        $r6 = new java.io.InputStreamReader;
        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r3, "utf-8");
        specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);
        r4 = $r10;
        i0 = 1;

     label1:
        $i1 = specialinvoke r0.<java.util.ServiceLoader: int parseLine(java.lang.Class,java.net.URL,java.io.BufferedReader,int,java.util.List)>(r1, r2, r4, i0, r5);
        i0 = $i1;
        if $i1 < 0 goto label2;

        goto label1;

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label3:
        if r3 == null goto label4;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label4:
        goto label19;

     label5:
        $r11 := @caughtexception;
        r12 = $r11;
        staticinvoke <java.util.ServiceLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r1, "Error closing configuration file", r12);
        goto label19;

     label6:
        $r13 := @caughtexception;

     label7:
        r14 = $r13;
        staticinvoke <java.util.ServiceLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r1, "Error reading configuration file", r14);

     label8:
        if r4 == null goto label9;

        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label9:
        if r3 == null goto label10;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label10:
        goto label19;

     label11:
        $r15 := @caughtexception;
        r16 = $r15;
        staticinvoke <java.util.ServiceLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r1, "Error closing configuration file", r16);
        goto label19;

     label12:
        $r17 := @caughtexception;

     label13:
        r7 = $r17;

     label14:
        if r4 == null goto label15;

        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label15:
        if r3 == null goto label16;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r18 := @caughtexception;
        r8 = $r18;
        staticinvoke <java.util.ServiceLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r1, "Error closing configuration file", r8);

     label18:
        throw r7;

     label19:
        $r19 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();
        return $r19;

        catch java.io.IOException from label2 to label4 with label5;
        catch java.io.IOException from label0 to label2 with label6;
        catch java.io.IOException from label8 to label10 with label11;
        catch java.lang.Throwable from label0 to label2 with label12;
        catch java.lang.Throwable from label7 to label8 with label12;
        catch java.io.IOException from label14 to label16 with label17;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public java.util.Iterator iterator()
    {
        java.util.ServiceLoader r0;
        java.util.ServiceLoader$1 $r1;

        r0 := @this: java.util.ServiceLoader;
        $r1 = new java.util.ServiceLoader$1;
        specialinvoke $r1.<java.util.ServiceLoader$1: void <init>(java.util.ServiceLoader)>(r0);
        return $r1;
    }

    public static java.util.ServiceLoader load(java.lang.Class, java.lang.ClassLoader)
    {
        java.lang.Class r0;
        java.lang.ClassLoader r1;
        java.util.ServiceLoader $r2;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.ClassLoader;
        $r2 = new java.util.ServiceLoader;
        specialinvoke $r2.<java.util.ServiceLoader: void <init>(java.lang.Class,java.lang.ClassLoader)>(r0, r1);
        return $r2;
    }

    public static java.util.ServiceLoader load(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Thread $r1;
        java.lang.ClassLoader r2;
        java.util.ServiceLoader $r3;

        r0 := @parameter0: java.lang.Class;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
        $r3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(r0, r2);
        return $r3;
    }

    public static java.util.ServiceLoader loadInstalled(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.ClassLoader r1, r2;
        java.util.ServiceLoader $r3;

        r0 := @parameter0: java.lang.Class;
        r1 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();
        r2 = null;

     label0:
        if r1 == null goto label1;

        r2 = r1;
        r1 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();
        goto label0;

     label1:
        $r3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(r0, r2);
        return $r3;
    }

    public java.lang.String toString()
    {
        java.util.ServiceLoader r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;

        r0 := @this: java.util.ServiceLoader;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("java.util.ServiceLoader[");
        $r3 = r0.<java.util.ServiceLoader: java.lang.Class service>;
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    static void access$100(java.lang.Class, java.lang.String, java.lang.Throwable) throws java.util.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.Throwable;
        staticinvoke <java.util.ServiceLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r0, r1, r2);
        return;
    }

    static java.util.Iterator access$200(java.util.ServiceLoader, java.lang.Class, java.net.URL) throws java.util.ServiceConfigurationError
    {
        java.util.ServiceLoader r0;
        java.lang.Class r1;
        java.net.URL r2;
        java.util.Iterator $r3;

        r0 := @parameter0: java.util.ServiceLoader;
        r1 := @parameter1: java.lang.Class;
        r2 := @parameter2: java.net.URL;
        $r3 = specialinvoke r0.<java.util.ServiceLoader: java.util.Iterator parse(java.lang.Class,java.net.URL)>(r1, r2);
        return $r3;
    }

    static void access$300(java.lang.Class, java.lang.String) throws java.util.ServiceConfigurationError
    {
        java.lang.Class r0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Class;
        r1 := @parameter1: java.lang.String;
        staticinvoke <java.util.ServiceLoader: void fail(java.lang.Class,java.lang.String)>(r0, r1);
        return;
    }

    static java.util.LinkedHashMap access$400(java.util.ServiceLoader)
    {
        java.util.ServiceLoader r0;
        java.util.LinkedHashMap $r1;

        r0 := @parameter0: java.util.ServiceLoader;
        $r1 = r0.<java.util.ServiceLoader: java.util.LinkedHashMap providers>;
        return $r1;
    }

    static java.util.ServiceLoader$LazyIterator access$500(java.util.ServiceLoader)
    {
        java.util.ServiceLoader r0;
        java.util.ServiceLoader$LazyIterator $r1;

        r0 := @parameter0: java.util.ServiceLoader;
        $r1 = r0.<java.util.ServiceLoader: java.util.ServiceLoader$LazyIterator lookupIterator>;
        return $r1;
    }
}
