public class org.apache.catalina.valves.AccessLogValve extends org.apache.catalina.valves.ValveBase implements org.apache.catalina.AccessLog
{
    private static final org.apache.juli.logging.Log log;
    private volatile java.lang.String dateStamp;
    private java.lang.String directory;
    protected static final java.lang.String info;
    protected boolean enabled;
    protected java.lang.String pattern;
    protected volatile java.lang.String prefix;
    protected boolean rotatable;
    protected boolean renameOnRotate;
    private boolean buffered;
    protected volatile java.lang.String suffix;
    protected java.io.PrintWriter writer;
    protected java.text.SimpleDateFormat fileDateFormatter;
    private static final int globalCacheSize;
    private static final int localCacheSize;
    protected java.io.File currentLogFile;
    private static final org.apache.catalina.valves.AccessLogValve$DateFormatCache globalDateCache;
    private static final java.lang.ThreadLocal localDateCache;
    private static final java.lang.ThreadLocal localDate;
    private boolean resolveHosts;
    private volatile long rotationLastChecked;
    private boolean checkExists;
    protected java.lang.String condition;
    protected java.lang.String conditionIf;
    protected java.lang.String fileDateFormat;
    protected java.lang.String localeName;
    protected java.util.Locale locale;
    protected volatile java.lang.String encoding;
    protected org.apache.catalina.valves.AccessLogValve$AccessLogElement[] logElements;
    protected boolean requestAttributesEnabled;
    private int maxDays;
    private volatile boolean checkForOldLogs;

    static void <clinit>()
    {
        java.util.Locale $r0;
        org.apache.juli.logging.Log $r1;
        org.apache.catalina.valves.AccessLogValve$DateFormatCache $r2;
        org.apache.catalina.valves.AccessLogValve$1 $r3;
        org.apache.catalina.valves.AccessLogValve$2 $r4;

        $r1 = staticinvoke <org.apache.juli.logging.LogFactory: org.apache.juli.logging.Log getLog(java.lang.Class)>(class "org/apache/catalina/valves/AccessLogValve");
        <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log> = $r1;
        $r2 = new org.apache.catalina.valves.AccessLogValve$DateFormatCache;
        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        specialinvoke $r2.<org.apache.catalina.valves.AccessLogValve$DateFormatCache: void <init>(int,java.util.Locale,org.apache.catalina.valves.AccessLogValve$DateFormatCache)>(300, $r0, null);
        <org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$DateFormatCache globalDateCache> = $r2;
        $r3 = new org.apache.catalina.valves.AccessLogValve$1;
        specialinvoke $r3.<org.apache.catalina.valves.AccessLogValve$1: void <init>()>();
        <org.apache.catalina.valves.AccessLogValve: java.lang.ThreadLocal localDateCache> = $r3;
        $r4 = new org.apache.catalina.valves.AccessLogValve$2;
        specialinvoke $r4.<org.apache.catalina.valves.AccessLogValve$2: void <init>()>();
        <org.apache.catalina.valves.AccessLogValve: java.lang.ThreadLocal localDate> = $r4;
        return;
    }

    public void <init>()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.util.Locale $r1, $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        specialinvoke r0.<org.apache.catalina.valves.ValveBase: void <init>(boolean)>(1);
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String dateStamp> = "";
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String directory> = "logs";
        r0.<org.apache.catalina.valves.AccessLogValve: boolean enabled> = 1;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern> = null;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String prefix> = "access_log.";
        r0.<org.apache.catalina.valves.AccessLogValve: boolean rotatable> = 1;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean renameOnRotate> = 0;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean buffered> = 1;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String suffix> = "";
        r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer> = null;
        r0.<org.apache.catalina.valves.AccessLogValve: java.text.SimpleDateFormat fileDateFormatter> = null;
        r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile> = null;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean resolveHosts> = 0;
        r0.<org.apache.catalina.valves.AccessLogValve: long rotationLastChecked> = 0L;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean checkExists> = 0;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String condition> = null;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String conditionIf> = null;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String fileDateFormat> = "yyyy-MM-dd";
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String toString()>();
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String localeName> = $r2;
        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        r0.<org.apache.catalina.valves.AccessLogValve: java.util.Locale locale> = $r3;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String encoding> = null;
        r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$AccessLogElement[] logElements> = null;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean requestAttributesEnabled> = 0;
        r0.<org.apache.catalina.valves.AccessLogValve: int maxDays> = -1;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean checkForOldLogs> = 0;
        return;
    }

    public int getMaxDays()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        int $i0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $i0 = r0.<org.apache.catalina.valves.AccessLogValve: int maxDays>;
        return $i0;
    }

    public void setMaxDays(int)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        int i0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        i0 := @parameter0: int;
        r0.<org.apache.catalina.valves.AccessLogValve: int maxDays> = i0;
        return;
    }

    public boolean getEnabled()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean enabled>;
        return $z0;
    }

    public void setRequestAttributesEnabled(boolean)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean requestAttributesEnabled> = z0;
        return;
    }

    public boolean getRequestAttributesEnabled()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean requestAttributesEnabled>;
        return $z0;
    }

    public void setEnabled(boolean)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean enabled> = z0;
        return;
    }

    public java.lang.String getDirectory()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String directory>;
        return $r1;
    }

    public void setDirectory(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String directory> = r1;
        return;
    }

    public java.lang.String getInfo()
    {
        org.apache.catalina.valves.AccessLogValve r0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        return "org.apache.catalina.valves.AccessLogValve/2.2";
    }

    public java.lang.String getPattern()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern>;
        return $r1;
    }

    public void setPattern(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1;
        boolean $z0, $z1;
        org.apache.catalina.valves.AccessLogValve$AccessLogElement[] $r2;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern> = "";
        goto label3;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("common");
        if $z0 == 0 goto label1;

        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern> = "%h %l %u %t \"%r\" %s %b";
        goto label3;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("combined");
        if $z1 == 0 goto label2;

        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern> = "%h %l %u %t \"%r\" %s %b \"%{Referer}i\" \"%{User-Agent}i\"";
        goto label3;

     label2:
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern> = r1;

     label3:
        $r2 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$AccessLogElement[] createLogElements()>();
        r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$AccessLogElement[] logElements> = $r2;
        return;
    }

    public boolean isCheckExists()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean checkExists>;
        return $z0;
    }

    public void setCheckExists(boolean)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean checkExists> = z0;
        return;
    }

    public java.lang.String getPrefix()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String prefix>;
        return $r1;
    }

    public void setPrefix(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String prefix> = r1;
        return;
    }

    public boolean isRotatable()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean rotatable>;
        return $z0;
    }

    public void setRotatable(boolean)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean rotatable> = z0;
        return;
    }

    public boolean isRenameOnRotate()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean renameOnRotate>;
        return $z0;
    }

    public void setRenameOnRotate(boolean)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean renameOnRotate> = z0;
        return;
    }

    public boolean isBuffered()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean buffered>;
        return $z0;
    }

    public void setBuffered(boolean)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean buffered> = z0;
        return;
    }

    public java.lang.String getSuffix()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String suffix>;
        return $r1;
    }

    public void setSuffix(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String suffix> = r1;
        return;
    }

    public void setResolveHosts(boolean)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        z0 := @parameter0: boolean;
        r0.<org.apache.catalina.valves.AccessLogValve: boolean resolveHosts> = z0;
        return;
    }

    public boolean isResolveHosts()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean resolveHosts>;
        return $z0;
    }

    public java.lang.String getCondition()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String condition>;
        return $r1;
    }

    public void setCondition(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String condition> = r1;
        return;
    }

    public java.lang.String getConditionUnless()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String getCondition()>();
        return $r1;
    }

    public void setConditionUnless(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: void setCondition(java.lang.String)>(r1);
        return;
    }

    public java.lang.String getConditionIf()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String conditionIf>;
        return $r1;
    }

    public void setConditionIf(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String conditionIf> = r1;
        return;
    }

    public java.lang.String getFileDateFormat()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String fileDateFormat>;
        return $r1;
    }

    public void setFileDateFormat(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0, r3;
        java.lang.String r1, r2;
        java.util.Locale $r4;
        java.text.SimpleDateFormat $r6, $r7;
        java.util.TimeZone $r8;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        r2 = "";
        goto label1;

     label0:
        r2 = r1;

     label1:
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String fileDateFormat> = r2;
        r3 = r0;
        entermonitor r0;

     label2:
        $r6 = new java.text.SimpleDateFormat;
        $r4 = <java.util.Locale: java.util.Locale US>;
        specialinvoke $r6.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r2, $r4);
        r0.<org.apache.catalina.valves.AccessLogValve: java.text.SimpleDateFormat fileDateFormatter> = $r6;
        $r7 = r0.<org.apache.catalina.valves.AccessLogValve: java.text.SimpleDateFormat fileDateFormatter>;
        $r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();
        virtualinvoke $r7.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r8);
        exitmonitor r3;

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r3;

     label6:
        throw $r9;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.lang.String getLocale()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String localeName>;
        return $r1;
    }

    public void setLocale(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1;
        java.util.Locale $r2, $r3;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String localeName> = r1;
        $r2 = r0.<org.apache.catalina.valves.AccessLogValve: java.util.Locale locale>;
        $r3 = staticinvoke <org.apache.catalina.valves.AccessLogValve: java.util.Locale findLocale(java.lang.String,java.util.Locale)>(r1, $r2);
        r0.<org.apache.catalina.valves.AccessLogValve: java.util.Locale locale> = $r3;
        return;
    }

    public java.lang.String getEncoding()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String encoding>;
        return $r1;
    }

    public void setEncoding(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String encoding> = r1;
        goto label1;

     label0:
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String encoding> = null;

     label1:
        return;
    }

    public synchronized void backgroundProcess()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        int i0, i2, i3, $i10, $i11;
        java.lang.String r1, r2, r6, $r16, $r17;
        long l1, $l4, $l5, $l6, $l7, $l8, $l9, $l12;
        java.io.File r3, r7, $r12;
        java.lang.String[] r4, r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.catalina.LifecycleState $r8;
        java.io.PrintWriter $r9, $r10;
        byte $b13;
        org.apache.juli.logging.Log $r13;
        org.apache.tomcat.util.res.StringManager $r14;
        java.lang.Object[] $r15;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r8 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.LifecycleState getState()>();
        $z1 = virtualinvoke $r8.<org.apache.catalina.LifecycleState: boolean isAvailable()>();
        if $z1 == 0 goto label0;

        $z2 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: boolean getEnabled()>();
        if $z2 == 0 goto label0;

        $r9 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer>;
        if $r9 == null goto label0;

        $z3 = r0.<org.apache.catalina.valves.AccessLogValve: boolean buffered>;
        if $z3 == 0 goto label0;

        $r10 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer>;
        virtualinvoke $r10.<java.io.PrintWriter: void flush()>();

     label0:
        i0 = r0.<org.apache.catalina.valves.AccessLogValve: int maxDays>;
        r1 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String prefix>;
        r2 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String suffix>;
        $z4 = r0.<org.apache.catalina.valves.AccessLogValve: boolean rotatable>;
        if $z4 == 0 goto label9;

        $z5 = r0.<org.apache.catalina.valves.AccessLogValve: boolean checkForOldLogs>;
        if $z5 == 0 goto label9;

        if i0 <= 0 goto label9;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l5 = (long) i0;
        $l6 = $l5 * 24L;
        $l7 = $l6 * 60L;
        $l8 = $l7 * 60L;
        $l9 = $l8 * 1000L;
        l1 = $l4 - $l9;
        r3 = specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: java.io.File getDirectoryFile()>();
        $z6 = virtualinvoke r3.<java.io.File: boolean isDirectory()>();
        if $z6 == 0 goto label8;

        r4 = virtualinvoke r3.<java.io.File: java.lang.String[] list()>();
        if r4 == null goto label8;

        r5 = r4;
        i2 = lengthof r4;
        i3 = 0;
        goto label7;

     label1:
        r6 = r5[i3];
        z0 = 0;
        if r1 == null goto label3;

        $i10 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i10 <= 0 goto label3;

        $z7 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r1);
        if $z7 != 0 goto label2;

        goto label6;

     label2:
        z0 = 1;

     label3:
        if r2 == null goto label5;

        $i11 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i11 <= 0 goto label5;

        $z8 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>(r2);
        if $z8 != 0 goto label4;

        goto label6;

     label4:
        z0 = 1;

     label5:
        if z0 == 0 goto label6;

        $r12 = new java.io.File;
        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, r6);
        r7 = $r12;
        $z9 = virtualinvoke r7.<java.io.File: boolean isFile()>();
        if $z9 == 0 goto label6;

        $l12 = virtualinvoke r7.<java.io.File: long lastModified()>();
        $b13 = $l12 cmp l1;
        if $b13 >= 0 goto label6;

        $z10 = virtualinvoke r7.<java.io.File: boolean delete()>();
        if $z10 != 0 goto label6;

        $r13 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r14 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r15 = newarray (java.lang.Object)[1];
        $r16 = virtualinvoke r7.<java.io.File: java.lang.String getAbsolutePath()>();
        $r15[0] = $r16;
        $r17 = virtualinvoke $r14.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.deleteFail", $r15);
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void warn(java.lang.Object)>($r17);

     label6:
        i3 = i3 + 1;

     label7:
        if i3 < i2 goto label1;

     label8:
        r0.<org.apache.catalina.valves.AccessLogValve: boolean checkForOldLogs> = 0;

     label9:
        return;
    }

    public void invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) throws java.io.IOException, javax.servlet.ServletException
    {
        org.apache.catalina.valves.AccessLogValve r0;
        org.apache.catalina.connector.Request r1;
        org.apache.catalina.connector.Response r2;
        org.apache.catalina.Valve $r3;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: org.apache.catalina.connector.Request;
        r2 := @parameter1: org.apache.catalina.connector.Response;
        $r3 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.Valve getNext()>();
        interfaceinvoke $r3.<org.apache.catalina.Valve: void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)>(r1, r2);
        return;
    }

    public void log(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        org.apache.catalina.connector.Request r1;
        org.apache.catalina.connector.Response r2;
        long l0, l1, $l3;
        java.util.Date r3;
        java.lang.StringBuilder r4, $r16;
        int i2, $i4;
        org.apache.catalina.LifecycleState $r5;
        boolean $z0, $z1;
        org.apache.catalina.valves.AccessLogValve$AccessLogElement[] $r6, $r17, $r19;
        java.lang.String $r7, $r9, $r11, $r13, $r20;
        javax.servlet.http.HttpServletRequest $r8, $r12;
        java.lang.Object $r10, $r14;
        org.apache.coyote.Request $r15;
        org.apache.catalina.valves.AccessLogValve$AccessLogElement $r18;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: org.apache.catalina.connector.Request;
        r2 := @parameter1: org.apache.catalina.connector.Response;
        l0 := @parameter2: long;
        $r5 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.LifecycleState getState()>();
        $z0 = virtualinvoke $r5.<org.apache.catalina.LifecycleState: boolean isAvailable()>();
        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: boolean getEnabled()>();
        if $z1 == 0 goto label1;

        $r6 = r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$AccessLogElement[] logElements>;
        if $r6 == null goto label1;

        $r7 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String condition>;
        if $r7 == null goto label0;

        $r8 = virtualinvoke r1.<org.apache.catalina.connector.Request: javax.servlet.http.HttpServletRequest getRequest()>();
        $r9 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String condition>;
        $r10 = interfaceinvoke $r8.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>($r9);
        if $r10 != null goto label1;

     label0:
        $r11 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String conditionIf>;
        if $r11 == null goto label2;

        $r12 = virtualinvoke r1.<org.apache.catalina.connector.Request: javax.servlet.http.HttpServletRequest getRequest()>();
        $r13 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String conditionIf>;
        $r14 = interfaceinvoke $r12.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>($r13);
        if $r14 != null goto label2;

     label1:
        return;

     label2:
        $r15 = virtualinvoke r1.<org.apache.catalina.connector.Request: org.apache.coyote.Request getCoyoteRequest()>();
        l1 = virtualinvoke $r15.<org.apache.coyote.Request: long getStartTime()>();
        $l3 = l1 + l0;
        r3 = staticinvoke <org.apache.catalina.valves.AccessLogValve: java.util.Date getDate(long)>($l3);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(int)>(128);
        r4 = $r16;
        i2 = 0;
        goto label4;

     label3:
        $r17 = r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$AccessLogElement[] logElements>;
        $r18 = $r17[i2];
        interfaceinvoke $r18.<org.apache.catalina.valves.AccessLogValve$AccessLogElement: void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)>(r4, r3, r1, r2, l0);
        i2 = i2 + 1;

     label4:
        $r19 = r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$AccessLogElement[] logElements>;
        $i4 = lengthof $r19;
        if i2 < $i4 goto label3;

        $r20 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: void log(java.lang.String)>($r20);
        return;
    }

    public void rotate()
    {
        org.apache.catalina.valves.AccessLogValve r0, r1;
        long l0, $l1, $l2, $l4, $l5;
        java.lang.String r2, $r6;
        boolean $z0, $z1;
        byte $b3, $b6;
        java.text.SimpleDateFormat $r4;
        java.util.Date $r5;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean rotatable>;
        if $z0 == 0 goto label6;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l1 = r0.<org.apache.catalina.valves.AccessLogValve: long rotationLastChecked>;
        $l2 = l0 - $l1;
        $b3 = $l2 cmp 1000L;
        if $b3 <= 0 goto label6;

        r1 = r0;
        entermonitor r0;

     label0:
        $l4 = r0.<org.apache.catalina.valves.AccessLogValve: long rotationLastChecked>;
        $l5 = l0 - $l4;
        $b6 = $l5 cmp 1000L;
        if $b6 <= 0 goto label1;

        r0.<org.apache.catalina.valves.AccessLogValve: long rotationLastChecked> = l0;
        $r4 = r0.<org.apache.catalina.valves.AccessLogValve: java.text.SimpleDateFormat fileDateFormatter>;
        $r5 = new java.util.Date;
        specialinvoke $r5.<java.util.Date: void <init>(long)>(l0);
        r2 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r5);
        $r6 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String dateStamp>;
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z1 != 0 goto label1;

        specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: void close(boolean)>(1);
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String dateStamp> = r2;
        virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: void open()>();

     label1:
        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public synchronized boolean rotate(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1, $r9, $r12;
        java.io.File r2, $r4, $r5;
        java.lang.Throwable r3, $r6;
        long $l0;
        org.apache.juli.logging.Log $r7;
        org.apache.tomcat.util.res.StringManager $r8;
        java.text.SimpleDateFormat $r10;
        java.util.Date $r11;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile>;
        if $r4 == null goto label4;

        r2 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile>;
        specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: void close(boolean)>(0);

     label0:
        $r5 = new java.io.File;
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r1);
        virtualinvoke r2.<java.io.File: boolean renameTo(java.io.File)>($r5);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r3);
        $r7 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r8 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("accessLogValve.rotateFail");
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r9, r3);

     label3:
        $r10 = r0.<org.apache.catalina.valves.AccessLogValve: java.text.SimpleDateFormat fileDateFormatter>;
        $r11 = new java.util.Date;
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        specialinvoke $r11.<java.util.Date: void <init>(long)>($l0);
        $r12 = virtualinvoke $r10.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r11);
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String dateStamp> = $r12;
        virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: void open()>();
        return 1;

     label4:
        return 0;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    private java.io.File getDirectoryFile()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.io.File $r1, r2, $r4;
        java.lang.String $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = new java.io.File;
        $r3 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String directory>;
        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r3);
        r2 = $r1;
        $z0 = virtualinvoke r2.<java.io.File: boolean isAbsolute()>();
        if $z0 != 0 goto label0;

        $r4 = new java.io.File;
        $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("catalina.base");
        $r6 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String directory>;
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r5, $r6);
        r2 = $r4;

     label0:
        return r2;
    }

    private java.io.File getLogFile(boolean)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.io.File r1, r3, r4, $r8, $r9, $r18, $r19;
        org.apache.tomcat.util.res.StringManager $r2, $r27;
        org.apache.juli.logging.Log $r5, $r26;
        java.lang.Object[] $r6, $r28;
        java.lang.String $r7, $r11, $r12, $r13, $r15, $r17, $r21, $r22, $r23, $r25, $r29;
        java.lang.StringBuilder $r10, $r14, $r16, $r20, $r24;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        z0 := @parameter0: boolean;
        r1 = specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: java.io.File getDirectoryFile()>();
        $z1 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();
        if $z1 != 0 goto label0;

        $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();
        if $z2 != 0 goto label0;

        $r5 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r2 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = newarray (java.lang.Object)[1];
        $r6[0] = r1;
        $r7 = virtualinvoke $r2.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.openDirFail", $r6);
        interfaceinvoke $r5.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r7);

     label0:
        if z0 == 0 goto label1;

        $r8 = new java.io.File;
        $r9 = virtualinvoke r1.<java.io.File: java.io.File getAbsoluteFile()>();
        $r10 = new java.lang.StringBuilder;
        $r11 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String prefix>;
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);
        $r13 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String dateStamp>;
        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String suffix>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r17);
        r3 = $r8;
        goto label2;

     label1:
        $r18 = new java.io.File;
        $r19 = virtualinvoke r1.<java.io.File: java.io.File getAbsoluteFile()>();
        $r20 = new java.lang.StringBuilder;
        $r21 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String prefix>;
        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21);
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
        $r23 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String suffix>;
        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, $r25);
        r3 = $r18;

     label2:
        r4 = virtualinvoke r3.<java.io.File: java.io.File getParentFile()>();
        $z3 = virtualinvoke r4.<java.io.File: boolean mkdirs()>();
        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r4.<java.io.File: boolean isDirectory()>();
        if $z4 != 0 goto label3;

        $r26 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r27 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r28 = newarray (java.lang.Object)[1];
        $r28[0] = r4;
        $r29 = virtualinvoke $r27.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.openDirFail", $r28);
        interfaceinvoke $r26.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r29);

     label3:
        return r3;
    }

    private void restore()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.io.File r1, r2;
        java.lang.Throwable r3, $r8;
        boolean $z0, $z1, $z2, $z3;
        org.apache.juli.logging.Log $r4, $r9;
        org.apache.tomcat.util.res.StringManager $r5, $r10;
        java.lang.Object[] $r6, $r11;
        java.lang.String $r7, $r12;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 = specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: java.io.File getLogFile(boolean)>(0);
        r2 = specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: java.io.File getLogFile(boolean)>(1);
        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();
        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<java.io.File: boolean equals(java.lang.Object)>(r1);
        if $z2 != 0 goto label3;

     label0:
        $z3 = virtualinvoke r2.<java.io.File: boolean renameTo(java.io.File)>(r1);
        if $z3 != 0 goto label3;

        $r4 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r5 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r6 = newarray (java.lang.Object)[2];
        $r6[0] = r2;
        $r6[1] = r1;
        $r7 = virtualinvoke $r5.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.renameFail", $r6);
        interfaceinvoke $r4.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r7);

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r3 = $r8;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r3);
        $r9 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r10 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[2];
        $r11[0] = r2;
        $r11[1] = r1;
        $r12 = virtualinvoke $r10.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.renameFail", $r11);
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r12, r3);

     label3:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    private synchronized void close(boolean)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        boolean z0, $z1, $z2, $z3;
        java.io.File r1, $r6, $r10, $r16, $r21;
        java.lang.Throwable r2, $r12;
        java.io.PrintWriter $r3, $r4, $r5;
        org.apache.juli.logging.Log $r7, $r13, $r18;
        org.apache.tomcat.util.res.StringManager $r8, $r14, $r19;
        java.lang.Object[] $r9, $r15, $r20;
        java.lang.String $r11, $r17, $r22;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        z0 := @parameter0: boolean;
        $r3 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer>;
        if $r3 != null goto label0;

        return;

     label0:
        $r4 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer>;
        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();
        $r5 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer>;
        virtualinvoke $r5.<java.io.PrintWriter: void close()>();
        if z0 == 0 goto label5;

        $z1 = r0.<org.apache.catalina.valves.AccessLogValve: boolean renameOnRotate>;
        if $z1 == 0 goto label5;

        r1 = specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: java.io.File getLogFile(boolean)>(1);
        $z2 = virtualinvoke r1.<java.io.File: boolean exists()>();
        if $z2 != 0 goto label4;

     label1:
        $r6 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile>;
        $z3 = virtualinvoke $r6.<java.io.File: boolean renameTo(java.io.File)>(r1);
        if $z3 != 0 goto label5;

        $r7 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r8 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = newarray (java.lang.Object)[2];
        $r10 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile>;
        $r9[0] = $r10;
        $r9[1] = r1;
        $r11 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.renameFail", $r9);
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r11);

     label2:
        goto label5;

     label3:
        $r12 := @caughtexception;
        r2 = $r12;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r2);
        $r13 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r14 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r15 = newarray (java.lang.Object)[2];
        $r16 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile>;
        $r15[0] = $r16;
        $r15[1] = r1;
        $r17 = virtualinvoke $r14.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.renameFail", $r15);
        interfaceinvoke $r13.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r17, r2);
        goto label5;

     label4:
        $r18 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r19 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r20 = newarray (java.lang.Object)[2];
        $r21 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile>;
        $r20[0] = $r21;
        $r20[1] = r1;
        $r22 = virtualinvoke $r19.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.alreadyExists", $r20);
        interfaceinvoke $r18.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r22);

     label5:
        r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer> = null;
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String dateStamp> = "";
        r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile> = null;
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void log(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve r0, r2, r16;
        java.lang.String r1, $r10, $r13;
        java.lang.Throwable r3, $r7, $r14, $r20;
        long $l0;
        boolean $z0, $z1, $z2;
        java.io.File $r5, $r6;
        org.apache.juli.logging.Log $r8;
        org.apache.tomcat.util.res.StringManager $r9;
        java.text.SimpleDateFormat $r11;
        java.util.Date $r12;
        java.io.PrintWriter $r17, $r18, $r19;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: void rotate()>();
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean checkExists>;
        if $z0 == 0 goto label10;

        r2 = r0;
        entermonitor r0;

     label0:
        $r5 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile>;
        if $r5 == null goto label5;

        $r6 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile>;
        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();
        if $z1 != 0 goto label5;

     label1:
        specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: void close(boolean)>(0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;
        staticinvoke <org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>(r3);
        $r8 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r9 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r10 = virtualinvoke $r9.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>("accessLogValve.closeFail");
        interfaceinvoke $r8.<org.apache.juli.logging.Log: void info(java.lang.Object,java.lang.Throwable)>($r10, r3);

     label4:
        $r11 = r0.<org.apache.catalina.valves.AccessLogValve: java.text.SimpleDateFormat fileDateFormatter>;
        $r12 = new java.util.Date;
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        specialinvoke $r12.<java.util.Date: void <init>(long)>($l0);
        $r13 = virtualinvoke $r11.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r12);
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String dateStamp> = $r13;
        virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: void open()>();

     label5:
        exitmonitor r2;

     label6:
        goto label10;

     label7:
        $r14 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r14;

     label10:
        r16 = r0;
        entermonitor r0;

     label11:
        $r17 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer>;
        if $r17 == null goto label12;

        $r18 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer>;
        virtualinvoke $r18.<java.io.PrintWriter: void println(java.lang.String)>(r1);
        $z2 = r0.<org.apache.catalina.valves.AccessLogValve: boolean buffered>;
        if $z2 != 0 goto label12;

        $r19 = r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer>;
        virtualinvoke $r19.<java.io.PrintWriter: void flush()>();

     label12:
        exitmonitor r16;

     label13:
        goto label17;

     label14:
        $r20 := @caughtexception;

     label15:
        exitmonitor r16;

     label16:
        throw $r20;

     label17:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label0 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
        catch java.lang.Throwable from label11 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    protected synchronized void open()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.io.File r2;
        java.nio.charset.Charset r3;
        java.io.UnsupportedEncodingException r4, $r8;
        java.io.FileOutputStream $r5;
        boolean $z0, $z1, $z2;
        java.lang.String $r6, $r7, $r12, $r13, $r22;
        org.apache.juli.logging.Log $r9, $r19;
        org.apache.tomcat.util.res.StringManager $r10, $r20;
        java.lang.Object[] $r11, $r21;
        java.io.PrintWriter $r14;
        java.io.BufferedWriter $r15;
        java.io.OutputStreamWriter $r16;
        java.io.IOException $r17, r18;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean rotatable>;
        if $z0 == 0 goto label0;

        $z1 = r0.<org.apache.catalina.valves.AccessLogValve: boolean renameOnRotate>;
        if $z1 != 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        r2 = specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: java.io.File getLogFile(boolean)>($z2);
        r3 = null;
        $r6 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String encoding>;
        if $r6 == null goto label5;

     label2:
        $r7 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String encoding>;
        r3 = staticinvoke <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset getCharset(java.lang.String)>($r7);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        r4 = $r8;
        $r9 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r10 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r11 = newarray (java.lang.Object)[1];
        $r12 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String encoding>;
        $r11[0] = $r12;
        $r13 = virtualinvoke $r10.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.unsupportedEncoding", $r11);
        interfaceinvoke $r9.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r13, r4);

     label5:
        if r3 != null goto label6;

        r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

     label6:
        $r14 = new java.io.PrintWriter;
        $r15 = new java.io.BufferedWriter;
        $r16 = new java.io.OutputStreamWriter;
        $r5 = new java.io.FileOutputStream;
        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r2, 1);
        specialinvoke $r16.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r5, r3);
        specialinvoke $r15.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r16, 128000);
        specialinvoke $r14.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r15, 0);
        r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer> = $r14;
        r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile> = r2;

     label7:
        goto label9;

     label8:
        $r17 := @caughtexception;
        r18 = $r17;
        r0.<org.apache.catalina.valves.AccessLogValve: java.io.PrintWriter writer> = null;
        r0.<org.apache.catalina.valves.AccessLogValve: java.io.File currentLogFile> = null;
        $r19 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r20 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r21 = newarray (java.lang.Object)[1];
        $r21[0] = r2;
        $r22 = virtualinvoke $r20.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.openFail", $r21);
        interfaceinvoke $r19.<org.apache.juli.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r22, r18);

     label9:
        r0.<org.apache.catalina.valves.AccessLogValve: boolean checkForOldLogs> = 1;
        return;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private static java.util.Date getDate(long)
    {
        long l0;
        java.lang.ThreadLocal $r0;
        java.util.Date r1;
        java.lang.Object $r2;

        l0 := @parameter0: long;
        $r0 = <org.apache.catalina.valves.AccessLogValve: java.lang.ThreadLocal localDate>;
        $r2 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();
        r1 = (java.util.Date) $r2;
        virtualinvoke r1.<java.util.Date: void setTime(long)>(l0);
        return r1;
    }

    protected static java.util.Locale findLocale(java.lang.String, java.util.Locale)
    {
        java.lang.String r0, $r6, $r10;
        java.util.Locale r1, r3, $r4;
        java.util.Locale[] r2, $r5;
        int i0, i1;
        boolean $z0, $z1;
        org.apache.juli.logging.Log $r7;
        org.apache.tomcat.util.res.StringManager $r8;
        java.lang.Object[] $r9;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Locale;
        if r0 == null goto label0;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();
        if $z0 == 0 goto label1;

     label0:
        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        return $r4;

     label1:
        $r5 = staticinvoke <java.util.Locale: java.util.Locale[] getAvailableLocales()>();
        r2 = $r5;
        i0 = lengthof $r5;
        i1 = 0;
        goto label4;

     label2:
        r3 = r2[i1];
        $r6 = virtualinvoke r3.<java.util.Locale: java.lang.String toString()>();
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z1 == 0 goto label3;

        return r3;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label2;

        $r7 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        $r8 = <org.apache.catalina.valves.AccessLogValve: org.apache.tomcat.util.res.StringManager sm>;
        $r9 = newarray (java.lang.Object)[1];
        $r9[0] = r0;
        $r10 = virtualinvoke $r8.<org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>("accessLogValve.invalidLocale", $r9);
        interfaceinvoke $r7.<org.apache.juli.logging.Log: void error(java.lang.Object)>($r10);
        return r1;
    }

    protected synchronized void startInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1, $r8;
        java.text.SimpleDateFormat $r2, $r4, $r6;
        java.util.Locale $r3;
        java.util.TimeZone $r5;
        java.util.Date $r7;
        long $l0;
        boolean $z0, $z1;
        org.apache.catalina.LifecycleState $r9;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String getFileDateFormat()>();
        $r2 = new java.text.SimpleDateFormat;
        $r3 = <java.util.Locale: java.util.Locale US>;
        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r1, $r3);
        r0.<org.apache.catalina.valves.AccessLogValve: java.text.SimpleDateFormat fileDateFormatter> = $r2;
        $r4 = r0.<org.apache.catalina.valves.AccessLogValve: java.text.SimpleDateFormat fileDateFormatter>;
        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();
        virtualinvoke $r4.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);
        $r6 = r0.<org.apache.catalina.valves.AccessLogValve: java.text.SimpleDateFormat fileDateFormatter>;
        $r7 = new java.util.Date;
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        specialinvoke $r7.<java.util.Date: void <init>(long)>($l0);
        $r8 = virtualinvoke $r6.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r7);
        r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String dateStamp> = $r8;
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve: boolean rotatable>;
        if $z0 == 0 goto label0;

        $z1 = r0.<org.apache.catalina.valves.AccessLogValve: boolean renameOnRotate>;
        if $z1 == 0 goto label0;

        specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: void restore()>();

     label0:
        virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: void open()>();
        $r9 = <org.apache.catalina.LifecycleState: org.apache.catalina.LifecycleState STARTING>;
        virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: void setState(org.apache.catalina.LifecycleState)>($r9);
        return;
    }

    protected synchronized void stopInternal() throws org.apache.catalina.LifecycleException
    {
        org.apache.catalina.valves.AccessLogValve r0;
        org.apache.catalina.LifecycleState $r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = <org.apache.catalina.LifecycleState: org.apache.catalina.LifecycleState STOPPING>;
        virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: void setState(org.apache.catalina.LifecycleState)>($r1);
        specialinvoke r0.<org.apache.catalina.valves.AccessLogValve: void close(boolean)>(0);
        return;
    }

    protected org.apache.catalina.valves.AccessLogValve$AccessLogElement[] createLogElements()
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.util.ArrayList $r1, r2;
        boolean z0;
        java.lang.StringBuilder r3, r4, $r5, $r7, $r20;
        int i0, i2, $i4, $i6, $i7, i8, $i10, $i11;
        char c1, $c3, $c5, $c9;
        java.lang.String $r6, $r8, $r10, $r11, $r12, $r13, $r14, $r19, $r22, $r24;
        org.apache.catalina.valves.AccessLogValve$AccessLogElement $r15, $r16, $r17;
        org.apache.catalina.valves.AccessLogValve$StringElement $r18, $r23;
        org.apache.catalina.valves.AccessLogValve$AccessLogElement[] $r25, $r27;
        java.lang.Object[] $r26;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        z0 = 0;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        r3 = $r5;
        i0 = 0;
        goto label10;

     label0:
        $r6 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern>;
        c1 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(i0);
        if z0 == 0 goto label7;

        if 123 != c1 goto label5;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        r4 = $r7;
        i2 = i0 + 1;
        goto label2;

     label1:
        $r8 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern>;
        $c3 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(i2);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);
        i2 = i2 + 1;

     label2:
        $r10 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern>;
        $i4 = virtualinvoke $r10.<java.lang.String: int length()>();
        if i2 >= $i4 goto label3;

        $r11 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern>;
        $c5 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(i2);
        if 125 != $c5 goto label1;

     label3:
        $i6 = i2 + 1;
        $r12 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern>;
        $i7 = virtualinvoke $r12.<java.lang.String: int length()>();
        if $i6 >= $i7 goto label4;

        i8 = i2 + 1;
        $r13 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        $r14 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern>;
        $c9 = virtualinvoke $r14.<java.lang.String: char charAt(int)>(i8);
        $r15 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$AccessLogElement createAccessLogElement(java.lang.String,char)>($r13, $c9);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r15);
        i0 = i8;
        goto label6;

     label4:
        $r16 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$AccessLogElement createAccessLogElement(char)>(c1);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r16);
        goto label6;

     label5:
        $r17 = virtualinvoke r0.<org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$AccessLogElement createAccessLogElement(char)>(c1);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r17);

     label6:
        z0 = 0;
        goto label9;

     label7:
        if c1 != 37 goto label8;

        z0 = 1;
        $r18 = new org.apache.catalina.valves.AccessLogValve$StringElement;
        $r19 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r18.<org.apache.catalina.valves.AccessLogValve$StringElement: void <init>(java.lang.String)>($r19);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r18);
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        r3 = $r20;
        goto label9;

     label8:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label9:
        i0 = i0 + 1;

     label10:
        $r22 = r0.<org.apache.catalina.valves.AccessLogValve: java.lang.String pattern>;
        $i10 = virtualinvoke $r22.<java.lang.String: int length()>();
        if i0 < $i10 goto label0;

        $i11 = virtualinvoke r3.<java.lang.StringBuilder: int length()>();
        if $i11 <= 0 goto label11;

        $r23 = new org.apache.catalina.valves.AccessLogValve$StringElement;
        $r24 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r23.<org.apache.catalina.valves.AccessLogValve$StringElement: void <init>(java.lang.String)>($r24);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r23);

     label11:
        $r25 = newarray (org.apache.catalina.valves.AccessLogValve$AccessLogElement)[0];
        $r26 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r25);
        $r27 = (org.apache.catalina.valves.AccessLogValve$AccessLogElement[]) $r26;
        return $r27;
    }

    protected org.apache.catalina.valves.AccessLogValve$AccessLogElement createAccessLogElement(java.lang.String, char)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        java.lang.String r1;
        char c0;
        org.apache.catalina.valves.AccessLogValve$HeaderElement $r2;
        org.apache.catalina.valves.AccessLogValve$CookieElement $r3;
        org.apache.catalina.valves.AccessLogValve$ResponseHeaderElement $r4;
        org.apache.catalina.valves.AccessLogValve$PortElement $r5;
        org.apache.catalina.valves.AccessLogValve$RequestAttributeElement $r6;
        org.apache.catalina.valves.AccessLogValve$SessionAttributeElement $r7;
        org.apache.catalina.valves.AccessLogValve$DateAndTimeElement $r8;
        org.apache.catalina.valves.AccessLogValve$StringElement $r9;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        r1 := @parameter0: java.lang.String;
        c0 := @parameter1: char;
        lookupswitch(c0)
        {
            case 99: goto label1;
            case 105: goto label0;
            case 111: goto label2;
            case 112: goto label3;
            case 114: goto label4;
            case 115: goto label5;
            case 116: goto label6;
            default: goto label7;
        };

     label0:
        $r2 = new org.apache.catalina.valves.AccessLogValve$HeaderElement;
        specialinvoke $r2.<org.apache.catalina.valves.AccessLogValve$HeaderElement: void <init>(java.lang.String)>(r1);
        return $r2;

     label1:
        $r3 = new org.apache.catalina.valves.AccessLogValve$CookieElement;
        specialinvoke $r3.<org.apache.catalina.valves.AccessLogValve$CookieElement: void <init>(java.lang.String)>(r1);
        return $r3;

     label2:
        $r4 = new org.apache.catalina.valves.AccessLogValve$ResponseHeaderElement;
        specialinvoke $r4.<org.apache.catalina.valves.AccessLogValve$ResponseHeaderElement: void <init>(java.lang.String)>(r1);
        return $r4;

     label3:
        $r5 = new org.apache.catalina.valves.AccessLogValve$PortElement;
        specialinvoke $r5.<org.apache.catalina.valves.AccessLogValve$PortElement: void <init>(org.apache.catalina.valves.AccessLogValve,java.lang.String)>(r0, r1);
        return $r5;

     label4:
        $r6 = new org.apache.catalina.valves.AccessLogValve$RequestAttributeElement;
        specialinvoke $r6.<org.apache.catalina.valves.AccessLogValve$RequestAttributeElement: void <init>(java.lang.String)>(r1);
        return $r6;

     label5:
        $r7 = new org.apache.catalina.valves.AccessLogValve$SessionAttributeElement;
        specialinvoke $r7.<org.apache.catalina.valves.AccessLogValve$SessionAttributeElement: void <init>(java.lang.String)>(r1);
        return $r7;

     label6:
        $r8 = new org.apache.catalina.valves.AccessLogValve$DateAndTimeElement;
        specialinvoke $r8.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: void <init>(org.apache.catalina.valves.AccessLogValve,java.lang.String)>(r0, r1);
        return $r8;

     label7:
        $r9 = new org.apache.catalina.valves.AccessLogValve$StringElement;
        specialinvoke $r9.<org.apache.catalina.valves.AccessLogValve$StringElement: void <init>(java.lang.String)>("???");
        return $r9;
    }

    protected org.apache.catalina.valves.AccessLogValve$AccessLogElement createAccessLogElement(char)
    {
        org.apache.catalina.valves.AccessLogValve r0;
        char c0;
        org.apache.catalina.valves.AccessLogValve$RemoteAddrElement $r1;
        org.apache.catalina.valves.AccessLogValve$LocalAddrElement $r2;
        org.apache.catalina.valves.AccessLogValve$ByteSentElement $r3, $r4;
        org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement $r5, $r17;
        org.apache.catalina.valves.AccessLogValve$FirstByteTimeElement $r6;
        org.apache.catalina.valves.AccessLogValve$HostElement $r7;
        org.apache.catalina.valves.AccessLogValve$ProtocolElement $r8;
        org.apache.catalina.valves.AccessLogValve$LogicalUserNameElement $r9;
        org.apache.catalina.valves.AccessLogValve$MethodElement $r10;
        org.apache.catalina.valves.AccessLogValve$PortElement $r11;
        org.apache.catalina.valves.AccessLogValve$QueryElement $r12;
        org.apache.catalina.valves.AccessLogValve$RequestElement $r13;
        org.apache.catalina.valves.AccessLogValve$HttpStatusCodeElement $r14;
        org.apache.catalina.valves.AccessLogValve$SessionIdElement $r15;
        org.apache.catalina.valves.AccessLogValve$DateAndTimeElement $r16;
        org.apache.catalina.valves.AccessLogValve$UserElement $r18;
        org.apache.catalina.valves.AccessLogValve$RequestURIElement $r19;
        org.apache.catalina.valves.AccessLogValve$LocalServerNameElement $r20;
        org.apache.catalina.valves.AccessLogValve$ThreadNameElement $r21;
        org.apache.catalina.valves.AccessLogValve$StringElement $r22;
        java.lang.StringBuilder $r23, $r24, $r25;
        java.lang.String $r26;

        r0 := @this: org.apache.catalina.valves.AccessLogValve;
        c0 := @parameter0: char;
        lookupswitch(c0)
        {
            case 65: goto label1;
            case 66: goto label3;
            case 68: goto label4;
            case 70: goto label5;
            case 72: goto label7;
            case 73: goto label20;
            case 83: goto label14;
            case 84: goto label16;
            case 85: goto label18;
            case 97: goto label0;
            case 98: goto label2;
            case 104: goto label6;
            case 108: goto label8;
            case 109: goto label9;
            case 112: goto label10;
            case 113: goto label11;
            case 114: goto label12;
            case 115: goto label13;
            case 116: goto label15;
            case 117: goto label17;
            case 118: goto label19;
            default: goto label21;
        };

     label0:
        $r1 = new org.apache.catalina.valves.AccessLogValve$RemoteAddrElement;
        specialinvoke $r1.<org.apache.catalina.valves.AccessLogValve$RemoteAddrElement: void <init>(org.apache.catalina.valves.AccessLogValve)>(r0);
        return $r1;

     label1:
        $r2 = new org.apache.catalina.valves.AccessLogValve$LocalAddrElement;
        specialinvoke $r2.<org.apache.catalina.valves.AccessLogValve$LocalAddrElement: void <init>()>();
        return $r2;

     label2:
        $r3 = new org.apache.catalina.valves.AccessLogValve$ByteSentElement;
        specialinvoke $r3.<org.apache.catalina.valves.AccessLogValve$ByteSentElement: void <init>(boolean)>(1);
        return $r3;

     label3:
        $r4 = new org.apache.catalina.valves.AccessLogValve$ByteSentElement;
        specialinvoke $r4.<org.apache.catalina.valves.AccessLogValve$ByteSentElement: void <init>(boolean)>(0);
        return $r4;

     label4:
        $r5 = new org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement;
        specialinvoke $r5.<org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement: void <init>(boolean)>(1);
        return $r5;

     label5:
        $r6 = new org.apache.catalina.valves.AccessLogValve$FirstByteTimeElement;
        specialinvoke $r6.<org.apache.catalina.valves.AccessLogValve$FirstByteTimeElement: void <init>()>();
        return $r6;

     label6:
        $r7 = new org.apache.catalina.valves.AccessLogValve$HostElement;
        specialinvoke $r7.<org.apache.catalina.valves.AccessLogValve$HostElement: void <init>(org.apache.catalina.valves.AccessLogValve)>(r0);
        return $r7;

     label7:
        $r8 = new org.apache.catalina.valves.AccessLogValve$ProtocolElement;
        specialinvoke $r8.<org.apache.catalina.valves.AccessLogValve$ProtocolElement: void <init>(org.apache.catalina.valves.AccessLogValve)>(r0);
        return $r8;

     label8:
        $r9 = new org.apache.catalina.valves.AccessLogValve$LogicalUserNameElement;
        specialinvoke $r9.<org.apache.catalina.valves.AccessLogValve$LogicalUserNameElement: void <init>()>();
        return $r9;

     label9:
        $r10 = new org.apache.catalina.valves.AccessLogValve$MethodElement;
        specialinvoke $r10.<org.apache.catalina.valves.AccessLogValve$MethodElement: void <init>()>();
        return $r10;

     label10:
        $r11 = new org.apache.catalina.valves.AccessLogValve$PortElement;
        specialinvoke $r11.<org.apache.catalina.valves.AccessLogValve$PortElement: void <init>(org.apache.catalina.valves.AccessLogValve)>(r0);
        return $r11;

     label11:
        $r12 = new org.apache.catalina.valves.AccessLogValve$QueryElement;
        specialinvoke $r12.<org.apache.catalina.valves.AccessLogValve$QueryElement: void <init>()>();
        return $r12;

     label12:
        $r13 = new org.apache.catalina.valves.AccessLogValve$RequestElement;
        specialinvoke $r13.<org.apache.catalina.valves.AccessLogValve$RequestElement: void <init>()>();
        return $r13;

     label13:
        $r14 = new org.apache.catalina.valves.AccessLogValve$HttpStatusCodeElement;
        specialinvoke $r14.<org.apache.catalina.valves.AccessLogValve$HttpStatusCodeElement: void <init>()>();
        return $r14;

     label14:
        $r15 = new org.apache.catalina.valves.AccessLogValve$SessionIdElement;
        specialinvoke $r15.<org.apache.catalina.valves.AccessLogValve$SessionIdElement: void <init>()>();
        return $r15;

     label15:
        $r16 = new org.apache.catalina.valves.AccessLogValve$DateAndTimeElement;
        specialinvoke $r16.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: void <init>(org.apache.catalina.valves.AccessLogValve)>(r0);
        return $r16;

     label16:
        $r17 = new org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement;
        specialinvoke $r17.<org.apache.catalina.valves.AccessLogValve$ElapsedTimeElement: void <init>(boolean)>(0);
        return $r17;

     label17:
        $r18 = new org.apache.catalina.valves.AccessLogValve$UserElement;
        specialinvoke $r18.<org.apache.catalina.valves.AccessLogValve$UserElement: void <init>()>();
        return $r18;

     label18:
        $r19 = new org.apache.catalina.valves.AccessLogValve$RequestURIElement;
        specialinvoke $r19.<org.apache.catalina.valves.AccessLogValve$RequestURIElement: void <init>()>();
        return $r19;

     label19:
        $r20 = new org.apache.catalina.valves.AccessLogValve$LocalServerNameElement;
        specialinvoke $r20.<org.apache.catalina.valves.AccessLogValve$LocalServerNameElement: void <init>()>();
        return $r20;

     label20:
        $r21 = new org.apache.catalina.valves.AccessLogValve$ThreadNameElement;
        specialinvoke $r21.<org.apache.catalina.valves.AccessLogValve$ThreadNameElement: void <init>()>();
        return $r21;

     label21:
        $r22 = new org.apache.catalina.valves.AccessLogValve$StringElement;
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("???");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("???");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r22.<org.apache.catalina.valves.AccessLogValve$StringElement: void <init>(java.lang.String)>($r26);
        return $r22;
    }

    static org.apache.catalina.valves.AccessLogValve$DateFormatCache access$0()
    {
        org.apache.catalina.valves.AccessLogValve$DateFormatCache $r0;

        $r0 = <org.apache.catalina.valves.AccessLogValve: org.apache.catalina.valves.AccessLogValve$DateFormatCache globalDateCache>;
        return $r0;
    }

    static java.lang.ThreadLocal access$1()
    {
        java.lang.ThreadLocal $r0;

        $r0 = <org.apache.catalina.valves.AccessLogValve: java.lang.ThreadLocal localDateCache>;
        return $r0;
    }

    static org.apache.juli.logging.Log access$2()
    {
        org.apache.juli.logging.Log $r0;

        $r0 = <org.apache.catalina.valves.AccessLogValve: org.apache.juli.logging.Log log>;
        return $r0;
    }
}
