class java.util.Collections$EmptyMap extends java.util.AbstractMap implements java.io.Serializable
{
    private static final long serialVersionUID;

    private void <init>()
    {
        java.util.Collections$EmptyMap r0;

        r0 := @this: java.util.Collections$EmptyMap;
        specialinvoke r0.<java.util.AbstractMap: void <init>()>();
        return;
    }

    public int size()
    {
        java.util.Collections$EmptyMap r0;

        r0 := @this: java.util.Collections$EmptyMap;
        return 0;
    }

    public boolean isEmpty()
    {
        java.util.Collections$EmptyMap r0;

        r0 := @this: java.util.Collections$EmptyMap;
        return 1;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Collections$EmptyMap r0;
        java.lang.Object r1;

        r0 := @this: java.util.Collections$EmptyMap;
        r1 := @parameter0: java.lang.Object;
        return 0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Collections$EmptyMap r0;
        java.lang.Object r1;

        r0 := @this: java.util.Collections$EmptyMap;
        r1 := @parameter0: java.lang.Object;
        return 0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.util.Collections$EmptyMap r0;
        java.lang.Object r1;

        r0 := @this: java.util.Collections$EmptyMap;
        r1 := @parameter0: java.lang.Object;
        return null;
    }

    public java.util.Set keySet()
    {
        java.util.Collections$EmptyMap r0;
        java.util.Set $r1;

        r0 := @this: java.util.Collections$EmptyMap;
        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        return $r1;
    }

    public java.util.Collection values()
    {
        java.util.Collections$EmptyMap r0;
        java.util.Set $r1;

        r0 := @this: java.util.Collections$EmptyMap;
        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        return $r1;
    }

    public java.util.Set entrySet()
    {
        java.util.Collections$EmptyMap r0;
        java.util.Set $r1;

        r0 := @this: java.util.Collections$EmptyMap;
        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Collections$EmptyMap r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.util.Map $r2;

        r0 := @this: java.util.Collections$EmptyMap;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.util.Map;
        if $z0 == 0 goto label0;

        $r2 = (java.util.Map) r1;
        $z1 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public int hashCode()
    {
        java.util.Collections$EmptyMap r0;

        r0 := @this: java.util.Collections$EmptyMap;
        return 0;
    }

    private java.lang.Object readResolve()
    {
        java.util.Collections$EmptyMap r0;
        java.util.Map $r1;

        r0 := @this: java.util.Collections$EmptyMap;
        $r1 = <java.util.Collections: java.util.Map EMPTY_MAP>;
        return $r1;
    }

    void <init>(java.util.Collections$1)
    {
        java.util.Collections$EmptyMap r0;
        java.util.Collections$1 r1;

        r0 := @this: java.util.Collections$EmptyMap;
        r1 := @parameter0: java.util.Collections$1;
        specialinvoke r0.<java.util.Collections$EmptyMap: void <init>()>();
        return;
    }
}
