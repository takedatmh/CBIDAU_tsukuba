final class java.util.TreeMap$KeySet extends java.util.AbstractSet implements java.util.NavigableSet
{
    private final java.util.NavigableMap m;

    void <init>(java.util.NavigableMap)
    {
        java.util.TreeMap$KeySet r0;
        java.util.NavigableMap r1;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.util.NavigableMap;
        specialinvoke r0.<java.util.AbstractSet: void <init>()>();
        r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m> = r1;
        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.TreeMap$KeySet r0;
        java.util.NavigableMap $r1, $r2, $r5;
        boolean $z0;
        java.util.TreeMap $r3;
        java.util.Iterator $r4, $r7;
        java.util.TreeMap$NavigableSubMap $r6;

        r0 := @this: java.util.TreeMap$KeySet;
        $r1 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $z0 = $r1 instanceof java.util.TreeMap;
        if $z0 == 0 goto label0;

        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r3 = (java.util.TreeMap) $r2;
        $r4 = virtualinvoke $r3.<java.util.TreeMap: java.util.Iterator keyIterator()>();
        return $r4;

     label0:
        $r5 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r6 = (java.util.TreeMap$NavigableSubMap) $r5;
        $r7 = virtualinvoke $r6.<java.util.TreeMap$NavigableSubMap: java.util.Iterator keyIterator()>();
        return $r7;
    }

    public java.util.Iterator descendingIterator()
    {
        java.util.TreeMap$KeySet r0;
        java.util.NavigableMap $r1, $r2, $r5;
        boolean $z0;
        java.util.TreeMap $r3;
        java.util.Iterator $r4, $r7;
        java.util.TreeMap$NavigableSubMap $r6;

        r0 := @this: java.util.TreeMap$KeySet;
        $r1 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $z0 = $r1 instanceof java.util.TreeMap;
        if $z0 == 0 goto label0;

        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r3 = (java.util.TreeMap) $r2;
        $r4 = virtualinvoke $r3.<java.util.TreeMap: java.util.Iterator descendingKeyIterator()>();
        return $r4;

     label0:
        $r5 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r6 = (java.util.TreeMap$NavigableSubMap) $r5;
        $r7 = virtualinvoke $r6.<java.util.TreeMap$NavigableSubMap: java.util.Iterator descendingKeyIterator()>();
        return $r7;
    }

    public int size()
    {
        java.util.TreeMap$KeySet r0;
        java.util.NavigableMap $r1;
        int $i0;

        r0 := @this: java.util.TreeMap$KeySet;
        $r1 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $i0 = interfaceinvoke $r1.<java.util.NavigableMap: int size()>();
        return $i0;
    }

    public boolean isEmpty()
    {
        java.util.TreeMap$KeySet r0;
        java.util.NavigableMap $r1;
        boolean $z0;

        r0 := @this: java.util.TreeMap$KeySet;
        $r1 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $z0 = interfaceinvoke $r1.<java.util.NavigableMap: boolean isEmpty()>();
        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.TreeMap$KeySet r0;
        java.lang.Object r1;
        java.util.NavigableMap $r2;
        boolean $z0;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $z0 = interfaceinvoke $r2.<java.util.NavigableMap: boolean containsKey(java.lang.Object)>(r1);
        return $z0;
    }

    public void clear()
    {
        java.util.TreeMap$KeySet r0;
        java.util.NavigableMap $r1;

        r0 := @this: java.util.TreeMap$KeySet;
        $r1 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        interfaceinvoke $r1.<java.util.NavigableMap: void clear()>();
        return;
    }

    public java.lang.Object lower(java.lang.Object)
    {
        java.util.TreeMap$KeySet r0;
        java.lang.Object r1, $r3;
        java.util.NavigableMap $r2;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r3 = interfaceinvoke $r2.<java.util.NavigableMap: java.lang.Object lowerKey(java.lang.Object)>(r1);
        return $r3;
    }

    public java.lang.Object floor(java.lang.Object)
    {
        java.util.TreeMap$KeySet r0;
        java.lang.Object r1, $r3;
        java.util.NavigableMap $r2;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r3 = interfaceinvoke $r2.<java.util.NavigableMap: java.lang.Object floorKey(java.lang.Object)>(r1);
        return $r3;
    }

    public java.lang.Object ceiling(java.lang.Object)
    {
        java.util.TreeMap$KeySet r0;
        java.lang.Object r1, $r3;
        java.util.NavigableMap $r2;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r3 = interfaceinvoke $r2.<java.util.NavigableMap: java.lang.Object ceilingKey(java.lang.Object)>(r1);
        return $r3;
    }

    public java.lang.Object higher(java.lang.Object)
    {
        java.util.TreeMap$KeySet r0;
        java.lang.Object r1, $r3;
        java.util.NavigableMap $r2;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r3 = interfaceinvoke $r2.<java.util.NavigableMap: java.lang.Object higherKey(java.lang.Object)>(r1);
        return $r3;
    }

    public java.lang.Object first()
    {
        java.util.TreeMap$KeySet r0;
        java.util.NavigableMap $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.TreeMap$KeySet;
        $r1 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r2 = interfaceinvoke $r1.<java.util.NavigableMap: java.lang.Object firstKey()>();
        return $r2;
    }

    public java.lang.Object last()
    {
        java.util.TreeMap$KeySet r0;
        java.util.NavigableMap $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.TreeMap$KeySet;
        $r1 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r2 = interfaceinvoke $r1.<java.util.NavigableMap: java.lang.Object lastKey()>();
        return $r2;
    }

    public java.util.Comparator comparator()
    {
        java.util.TreeMap$KeySet r0;
        java.util.NavigableMap $r1;
        java.util.Comparator $r2;

        r0 := @this: java.util.TreeMap$KeySet;
        $r1 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r2 = interfaceinvoke $r1.<java.util.NavigableMap: java.util.Comparator comparator()>();
        return $r2;
    }

    public java.lang.Object pollFirst()
    {
        java.util.TreeMap$KeySet r0;
        java.util.Map$Entry r1;
        java.util.NavigableMap $r2;
        java.lang.Object $r3;

        r0 := @this: java.util.TreeMap$KeySet;
        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        r1 = interfaceinvoke $r2.<java.util.NavigableMap: java.util.Map$Entry pollFirstEntry()>();
        if r1 != null goto label0;

        $r3 = null;
        goto label1;

     label0:
        $r3 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

     label1:
        return $r3;
    }

    public java.lang.Object pollLast()
    {
        java.util.TreeMap$KeySet r0;
        java.util.Map$Entry r1;
        java.util.NavigableMap $r2;
        java.lang.Object $r3;

        r0 := @this: java.util.TreeMap$KeySet;
        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        r1 = interfaceinvoke $r2.<java.util.NavigableMap: java.util.Map$Entry pollLastEntry()>();
        if r1 != null goto label0;

        $r3 = null;
        goto label1;

     label0:
        $r3 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

     label1:
        return $r3;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.TreeMap$KeySet r0;
        java.lang.Object r1;
        int i0, $i1;
        java.util.NavigableMap $r2;
        boolean $z0;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        i0 = virtualinvoke r0.<java.util.TreeMap$KeySet: int size()>();
        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        interfaceinvoke $r2.<java.util.NavigableMap: java.lang.Object remove(java.lang.Object)>(r1);
        $i1 = virtualinvoke r0.<java.util.TreeMap$KeySet: int size()>();
        if $i1 == i0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.util.NavigableSet subSet(java.lang.Object, boolean, java.lang.Object, boolean)
    {
        java.util.TreeMap$KeySet r0, $r3;
        java.lang.Object r1, r2;
        boolean z0, z1;
        java.util.NavigableMap $r4, $r5;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        z0 := @parameter1: boolean;
        r2 := @parameter2: java.lang.Object;
        z1 := @parameter3: boolean;
        $r3 = new java.util.TreeMap$KeySet;
        $r4 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r5 = interfaceinvoke $r4.<java.util.NavigableMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>(r1, z0, r2, z1);
        specialinvoke $r3.<java.util.TreeMap$KeySet: void <init>(java.util.NavigableMap)>($r5);
        return $r3;
    }

    public java.util.NavigableSet headSet(java.lang.Object, boolean)
    {
        java.util.TreeMap$KeySet r0, $r2;
        java.lang.Object r1;
        boolean z0;
        java.util.NavigableMap $r3, $r4;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        z0 := @parameter1: boolean;
        $r2 = new java.util.TreeMap$KeySet;
        $r3 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r4 = interfaceinvoke $r3.<java.util.NavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>(r1, z0);
        specialinvoke $r2.<java.util.TreeMap$KeySet: void <init>(java.util.NavigableMap)>($r4);
        return $r2;
    }

    public java.util.NavigableSet tailSet(java.lang.Object, boolean)
    {
        java.util.TreeMap$KeySet r0, $r2;
        java.lang.Object r1;
        boolean z0;
        java.util.NavigableMap $r3, $r4;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        z0 := @parameter1: boolean;
        $r2 = new java.util.TreeMap$KeySet;
        $r3 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r4 = interfaceinvoke $r3.<java.util.NavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>(r1, z0);
        specialinvoke $r2.<java.util.TreeMap$KeySet: void <init>(java.util.NavigableMap)>($r4);
        return $r2;
    }

    public java.util.SortedSet subSet(java.lang.Object, java.lang.Object)
    {
        java.util.TreeMap$KeySet r0;
        java.lang.Object r1, r2;
        java.util.NavigableSet $r3;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = virtualinvoke r0.<java.util.TreeMap$KeySet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)>(r1, 1, r2, 0);
        return $r3;
    }

    public java.util.SortedSet headSet(java.lang.Object)
    {
        java.util.TreeMap$KeySet r0;
        java.lang.Object r1;
        java.util.NavigableSet $r2;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r0.<java.util.TreeMap$KeySet: java.util.NavigableSet headSet(java.lang.Object,boolean)>(r1, 0);
        return $r2;
    }

    public java.util.SortedSet tailSet(java.lang.Object)
    {
        java.util.TreeMap$KeySet r0;
        java.lang.Object r1;
        java.util.NavigableSet $r2;

        r0 := @this: java.util.TreeMap$KeySet;
        r1 := @parameter0: java.lang.Object;
        $r2 = virtualinvoke r0.<java.util.TreeMap$KeySet: java.util.NavigableSet tailSet(java.lang.Object,boolean)>(r1, 1);
        return $r2;
    }

    public java.util.NavigableSet descendingSet()
    {
        java.util.TreeMap$KeySet r0, $r1;
        java.util.NavigableMap $r2, $r3;

        r0 := @this: java.util.TreeMap$KeySet;
        $r1 = new java.util.TreeMap$KeySet;
        $r2 = r0.<java.util.TreeMap$KeySet: java.util.NavigableMap m>;
        $r3 = interfaceinvoke $r2.<java.util.NavigableMap: java.util.NavigableMap descendingMap()>();
        specialinvoke $r1.<java.util.TreeMap$KeySet: void <init>(java.util.NavigableMap)>($r3);
        return $r1;
    }
}
