final class org.apache.juli.ClassLoaderLogManager$Cleaner extends java.lang.Thread
{
    final org.apache.juli.ClassLoaderLogManager this$0;

    private void <init>(org.apache.juli.ClassLoaderLogManager)
    {
        org.apache.juli.ClassLoaderLogManager$Cleaner r0;
        org.apache.juli.ClassLoaderLogManager r1;

        r0 := @this: org.apache.juli.ClassLoaderLogManager$Cleaner;
        r1 := @parameter0: org.apache.juli.ClassLoaderLogManager;
        r0.<org.apache.juli.ClassLoaderLogManager$Cleaner: org.apache.juli.ClassLoaderLogManager this$0> = r1;
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        return;
    }

    public void run()
    {
        org.apache.juli.ClassLoaderLogManager$Cleaner r0;
        org.apache.juli.ClassLoaderLogManager $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.juli.ClassLoaderLogManager$Cleaner;
        $r1 = r0.<org.apache.juli.ClassLoaderLogManager$Cleaner: org.apache.juli.ClassLoaderLogManager this$0>;
        $z0 = $r1.<org.apache.juli.ClassLoaderLogManager: boolean useShutdownHook>;
        if $z0 == 0 goto label0;

        $r2 = r0.<org.apache.juli.ClassLoaderLogManager$Cleaner: org.apache.juli.ClassLoaderLogManager this$0>;
        virtualinvoke $r2.<org.apache.juli.ClassLoaderLogManager: void shutdown()>();

     label0:
        return;
    }

    void <init>(org.apache.juli.ClassLoaderLogManager, org.apache.juli.ClassLoaderLogManager$Cleaner)
    {
        org.apache.juli.ClassLoaderLogManager$Cleaner r0, r2;
        org.apache.juli.ClassLoaderLogManager r1;

        r0 := @this: org.apache.juli.ClassLoaderLogManager$Cleaner;
        r1 := @parameter0: org.apache.juli.ClassLoaderLogManager;
        r2 := @parameter1: org.apache.juli.ClassLoaderLogManager$Cleaner;
        specialinvoke r0.<org.apache.juli.ClassLoaderLogManager$Cleaner: void <init>(org.apache.juli.ClassLoaderLogManager)>(r1);
        return;
    }
}
