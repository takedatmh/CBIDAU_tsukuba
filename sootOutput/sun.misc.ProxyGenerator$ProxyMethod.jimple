class sun.misc.ProxyGenerator$ProxyMethod extends java.lang.Object
{
    public java.lang.String methodName;
    public java.lang.Class[] parameterTypes;
    public java.lang.Class returnType;
    public java.lang.Class[] exceptionTypes;
    public java.lang.Class fromClass;
    public java.lang.String methodFieldName;
    final sun.misc.ProxyGenerator this$0;

    private void <init>(sun.misc.ProxyGenerator, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], java.lang.Class)
    {
        sun.misc.ProxyGenerator$ProxyMethod r0;
        sun.misc.ProxyGenerator r1;
        java.lang.String r2, $r10;
        java.lang.Class[] r3, r5;
        java.lang.Class r4, r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        int $i0;

        r0 := @this: sun.misc.ProxyGenerator$ProxyMethod;
        r1 := @parameter0: sun.misc.ProxyGenerator;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Class[];
        r4 := @parameter3: java.lang.Class;
        r5 := @parameter4: java.lang.Class[];
        r6 := @parameter5: java.lang.Class;
        r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.String methodName> = r2;
        r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes> = r3;
        r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class returnType> = r4;
        r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] exceptionTypes> = r5;
        r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class fromClass> = r6;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("m");
        $i0 = staticinvoke <sun.misc.ProxyGenerator: int access$508(sun.misc.ProxyGenerator)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.String methodFieldName> = $r10;
        return;
    }

    private sun.misc.ProxyGenerator$MethodInfo generateMethod() throws java.io.IOException
    {
        sun.misc.ProxyGenerator$ProxyMethod r0;
        java.lang.String r1, $r11, $r24, $r25, $r26, $r49, $r50, $r72, $r73;
        sun.misc.ProxyGenerator$MethodInfo r2, $r9;
        int[] r3;
        int i0, i1, i3, $i6, $i7, $i8, i9, $i12, $i13, $i15, $i16, $i18, $i20, $i22, $i27, $i28, $i30, i31, $i32;
        byte b2;
        java.io.DataOutputStream r4, $r15;
        short s4, s5, $s10, $s11, $s14, $s17, $s19, $s21, s23, $s24, $s25, $s26, $s29, $s33;
        java.util.Iterator r5;
        java.lang.Class r6, $r8, $r14, $r35, $r38, $r39, $r40, $r71;
        java.lang.Class[] $r7, $r12, $r13, $r27, $r29, $r32, $r34, $r42, $r64, $r66, $r70;
        sun.misc.ProxyGenerator $r10, $r17, $r18, $r20, $r21, $r23, $r28, $r30, $r33, $r36, $r47, $r54, $r56, $r57, $r59, $r60, $r68;
        java.io.ByteArrayOutputStream $r16, $r41, $r51, $r62;
        sun.misc.ProxyGenerator$ConstantPool $r19, $r22, $r31, $r37, $r48, $r55, $r58, $r61, $r69;
        java.util.List r43, $r45, $r52;
        boolean $z0;
        java.lang.Object $r44;
        sun.misc.ProxyGenerator$ExceptionTableEntry $r46, $r53;
        java.lang.IllegalArgumentException $r63;
        short[] $r65, $r67;

        r0 := @this: sun.misc.ProxyGenerator$ProxyMethod;
        $r7 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $r8 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class returnType>;
        r1 = staticinvoke <sun.misc.ProxyGenerator: java.lang.String access$600(java.lang.Class[],java.lang.Class)>($r7, $r8);
        $r9 = new sun.misc.ProxyGenerator$MethodInfo;
        $r10 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r11 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.String methodName>;
        specialinvoke $r9.<sun.misc.ProxyGenerator$MethodInfo: void <init>(sun.misc.ProxyGenerator,java.lang.String,java.lang.String,int)>($r10, $r11, r1, 17);
        r2 = $r9;
        $r12 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $i6 = lengthof $r12;
        r3 = newarray (int)[$i6];
        i0 = 1;
        i1 = 0;

     label0:
        $i7 = lengthof r3;
        if i1 >= $i7 goto label1;

        r3[i1] = i0;
        $r13 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $r14 = $r13[i1];
        $i8 = staticinvoke <sun.misc.ProxyGenerator: int access$700(java.lang.Class)>($r14);
        i0 = i0 + $i8;
        i1 = i1 + 1;
        goto label0;

     label1:
        i9 = i0;
        b2 = 0;
        $r15 = new java.io.DataOutputStream;
        $r16 = r2.<sun.misc.ProxyGenerator$MethodInfo: java.io.ByteArrayOutputStream code>;
        specialinvoke $r15.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r16);
        r4 = $r15;
        $r17 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$800(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r17, 0, r4);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(180);
        $r18 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r19 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r18);
        $s10 = virtualinvoke $r19.<sun.misc.ProxyGenerator$ConstantPool: short getFieldRef(java.lang.String,java.lang.String,java.lang.String)>("java/lang/reflect/Proxy", "h", "Ljava/lang/reflect/InvocationHandler;");
        virtualinvoke r4.<java.io.DataOutputStream: void writeShort(int)>($s10);
        $r20 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$800(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r20, 0, r4);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(178);
        $r21 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r22 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r21);
        $r23 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r24 = staticinvoke <sun.misc.ProxyGenerator: java.lang.String access$900(sun.misc.ProxyGenerator)>($r23);
        $r25 = staticinvoke <sun.misc.ProxyGenerator: java.lang.String access$000(java.lang.String)>($r24);
        $r26 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.String methodFieldName>;
        $s11 = virtualinvoke $r22.<sun.misc.ProxyGenerator$ConstantPool: short getFieldRef(java.lang.String,java.lang.String,java.lang.String)>($r25, $r26, "Ljava/lang/reflect/Method;");
        virtualinvoke r4.<java.io.DataOutputStream: void writeShort(int)>($s11);
        $r27 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $i12 = lengthof $r27;
        if $i12 <= 0 goto label4;

        $r28 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r29 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $i13 = lengthof $r29;
        staticinvoke <sun.misc.ProxyGenerator: void access$1000(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r28, $i13, r4);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(189);
        $r30 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r31 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r30);
        $s14 = virtualinvoke $r31.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>("java/lang/Object");
        virtualinvoke r4.<java.io.DataOutputStream: void writeShort(int)>($s14);
        i3 = 0;

     label2:
        $r32 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $i15 = lengthof $r32;
        if i3 >= $i15 goto label3;

        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(89);
        $r33 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$1000(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r33, i3, r4);
        $r34 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $r35 = $r34[i3];
        $i16 = r3[i3];
        specialinvoke r0.<sun.misc.ProxyGenerator$ProxyMethod: void codeWrapArgument(java.lang.Class,int,java.io.DataOutputStream)>($r35, $i16, r4);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(83);
        i3 = i3 + 1;
        goto label2;

     label3:
        goto label5;

     label4:
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(1);

     label5:
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(185);
        $r36 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r37 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r36);
        $s17 = virtualinvoke $r37.<sun.misc.ProxyGenerator$ConstantPool: short getInterfaceMethodRef(java.lang.String,java.lang.String,java.lang.String)>("java/lang/reflect/InvocationHandler", "invoke", "(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;");
        virtualinvoke r4.<java.io.DataOutputStream: void writeShort(int)>($s17);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(4);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(0);
        $r38 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class returnType>;
        $r39 = <java.lang.Void: java.lang.Class TYPE>;
        if $r38 != $r39 goto label6;

        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(87);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(177);
        goto label7;

     label6:
        $r40 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class returnType>;
        specialinvoke r0.<sun.misc.ProxyGenerator$ProxyMethod: void codeUnwrapReturnValue(java.lang.Class,java.io.DataOutputStream)>($r40, r4);

     label7:
        $r41 = r2.<sun.misc.ProxyGenerator$MethodInfo: java.io.ByteArrayOutputStream code>;
        $i18 = virtualinvoke $r41.<java.io.ByteArrayOutputStream: int size()>();
        $s19 = (short) $i18;
        s4 = $s19;
        s5 = $s19;
        $r42 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] exceptionTypes>;
        r43 = staticinvoke <sun.misc.ProxyGenerator: java.util.List access$1100(java.lang.Class[])>($r42);
        $i20 = interfaceinvoke r43.<java.util.List: int size()>();
        if $i20 <= 0 goto label10;

        r5 = interfaceinvoke r43.<java.util.List: java.util.Iterator iterator()>();

     label8:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label9;

        $r44 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.lang.Class) $r44;
        $r45 = r2.<sun.misc.ProxyGenerator$MethodInfo: java.util.List exceptionTable>;
        $r46 = new sun.misc.ProxyGenerator$ExceptionTableEntry;
        $r47 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r48 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r47);
        $r49 = virtualinvoke r6.<java.lang.Class: java.lang.String getName()>();
        $r50 = staticinvoke <sun.misc.ProxyGenerator: java.lang.String access$000(java.lang.String)>($r49);
        $s21 = virtualinvoke $r48.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>($r50);
        specialinvoke $r46.<sun.misc.ProxyGenerator$ExceptionTableEntry: void <init>(short,short,short,short)>(b2, s5, s4, $s21);
        interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r46);
        goto label8;

     label9:
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(191);
        $r51 = r2.<sun.misc.ProxyGenerator$MethodInfo: java.io.ByteArrayOutputStream code>;
        $i22 = virtualinvoke $r51.<java.io.ByteArrayOutputStream: int size()>();
        s23 = (short) $i22;
        $r52 = r2.<sun.misc.ProxyGenerator$MethodInfo: java.util.List exceptionTable>;
        $r53 = new sun.misc.ProxyGenerator$ExceptionTableEntry;
        $r54 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r55 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r54);
        $s24 = virtualinvoke $r55.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>("java/lang/Throwable");
        specialinvoke $r53.<sun.misc.ProxyGenerator$ExceptionTableEntry: void <init>(short,short,short,short)>(b2, s5, s23, $s24);
        interfaceinvoke $r52.<java.util.List: boolean add(java.lang.Object)>($r53);
        $r56 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$1200(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r56, i9, r4);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(187);
        $r57 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r58 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r57);
        $s25 = virtualinvoke $r58.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>("java/lang/reflect/UndeclaredThrowableException");
        virtualinvoke r4.<java.io.DataOutputStream: void writeShort(int)>($s25);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(89);
        $r59 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$800(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r59, i9, r4);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(183);
        $r60 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r61 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r60);
        $s26 = virtualinvoke $r61.<sun.misc.ProxyGenerator$ConstantPool: short getMethodRef(java.lang.String,java.lang.String,java.lang.String)>("java/lang/reflect/UndeclaredThrowableException", "<init>", "(Ljava/lang/Throwable;)V");
        virtualinvoke r4.<java.io.DataOutputStream: void writeShort(int)>($s26);
        virtualinvoke r4.<java.io.DataOutputStream: void writeByte(int)>(191);

     label10:
        $r62 = r2.<sun.misc.ProxyGenerator$MethodInfo: java.io.ByteArrayOutputStream code>;
        $i27 = virtualinvoke $r62.<java.io.ByteArrayOutputStream: int size()>();
        if $i27 <= 65535 goto label11;

        $r63 = new java.lang.IllegalArgumentException;
        specialinvoke $r63.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("code size limit exceeded");
        throw $r63;

     label11:
        r2.<sun.misc.ProxyGenerator$MethodInfo: short maxStack> = 10;
        $i28 = i9 + 1;
        $s29 = (short) $i28;
        r2.<sun.misc.ProxyGenerator$MethodInfo: short maxLocals> = $s29;
        $r64 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] exceptionTypes>;
        $i30 = lengthof $r64;
        $r65 = newarray (short)[$i30];
        r2.<sun.misc.ProxyGenerator$MethodInfo: short[] declaredExceptions> = $r65;
        i31 = 0;

     label12:
        $r66 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] exceptionTypes>;
        $i32 = lengthof $r66;
        if i31 >= $i32 goto label13;

        $r67 = r2.<sun.misc.ProxyGenerator$MethodInfo: short[] declaredExceptions>;
        $r68 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r69 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r68);
        $r70 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] exceptionTypes>;
        $r71 = $r70[i31];
        $r72 = virtualinvoke $r71.<java.lang.Class: java.lang.String getName()>();
        $r73 = staticinvoke <sun.misc.ProxyGenerator: java.lang.String access$000(java.lang.String)>($r72);
        $s33 = virtualinvoke $r69.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>($r73);
        $r67[i31] = $s33;
        i31 = i31 + 1;
        goto label12;

     label13:
        return r2;
    }

    private void codeWrapArgument(java.lang.Class, int, java.io.DataOutputStream) throws java.io.IOException
    {
        sun.misc.ProxyGenerator$ProxyMethod r0;
        java.lang.Class r1, $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r14;
        int i0;
        java.io.DataOutputStream r2;
        sun.misc.ProxyGenerator$PrimitiveTypeInfo r3;
        boolean $z0;
        sun.misc.ProxyGenerator $r9, $r11, $r13, $r15, $r17, $r21;
        java.lang.AssertionError $r16;
        sun.misc.ProxyGenerator$ConstantPool $r18;
        java.lang.String $r19, $r20;
        short $s1;

        r0 := @this: sun.misc.ProxyGenerator$ProxyMethod;
        r1 := @parameter0: java.lang.Class;
        i0 := @parameter1: int;
        r2 := @parameter2: java.io.DataOutputStream;
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();
        if $z0 == 0 goto label6;

        r3 = staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: sun.misc.ProxyGenerator$PrimitiveTypeInfo get(java.lang.Class)>(r1);
        $r4 = <java.lang.Integer: java.lang.Class TYPE>;
        if r1 == $r4 goto label0;

        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;
        if r1 == $r5 goto label0;

        $r6 = <java.lang.Byte: java.lang.Class TYPE>;
        if r1 == $r6 goto label0;

        $r7 = <java.lang.Character: java.lang.Class TYPE>;
        if r1 == $r7 goto label0;

        $r8 = <java.lang.Short: java.lang.Class TYPE>;
        if r1 != $r8 goto label1;

     label0:
        $r9 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$1300(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r9, i0, r2);
        goto label5;

     label1:
        $r10 = <java.lang.Long: java.lang.Class TYPE>;
        if r1 != $r10 goto label2;

        $r11 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$1400(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r11, i0, r2);
        goto label5;

     label2:
        $r12 = <java.lang.Float: java.lang.Class TYPE>;
        if r1 != $r12 goto label3;

        $r13 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$1500(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r13, i0, r2);
        goto label5;

     label3:
        $r14 = <java.lang.Double: java.lang.Class TYPE>;
        if r1 != $r14 goto label4;

        $r15 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$1600(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r15, i0, r2);
        goto label5;

     label4:
        $r16 = new java.lang.AssertionError;
        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();
        throw $r16;

     label5:
        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(184);
        $r17 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r18 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r17);
        $r19 = r3.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String wrapperClassName>;
        $r20 = r3.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String wrapperValueOfDesc>;
        $s1 = virtualinvoke $r18.<sun.misc.ProxyGenerator$ConstantPool: short getMethodRef(java.lang.String,java.lang.String,java.lang.String)>($r19, "valueOf", $r20);
        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($s1);
        goto label7;

     label6:
        $r21 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$800(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r21, i0, r2);

     label7:
        return;
    }

    private void codeUnwrapReturnValue(java.lang.Class, java.io.DataOutputStream) throws java.io.IOException
    {
        sun.misc.ProxyGenerator$ProxyMethod r0;
        java.lang.Class r1, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        java.io.DataOutputStream r2;
        sun.misc.ProxyGenerator$PrimitiveTypeInfo r3;
        boolean $z0;
        sun.misc.ProxyGenerator $r4, $r7, $r21;
        sun.misc.ProxyGenerator$ConstantPool $r5, $r8, $r22;
        java.lang.String $r6, $r9, $r10, $r11, $r23, $r24;
        short $s0, $s1, $s2;
        java.lang.AssertionError $r20;

        r0 := @this: sun.misc.ProxyGenerator$ProxyMethod;
        r1 := @parameter0: java.lang.Class;
        r2 := @parameter1: java.io.DataOutputStream;
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();
        if $z0 == 0 goto label6;

        r3 = staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: sun.misc.ProxyGenerator$PrimitiveTypeInfo get(java.lang.Class)>(r1);
        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(192);
        $r4 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r5 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r4);
        $r6 = r3.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String wrapperClassName>;
        $s0 = virtualinvoke $r5.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>($r6);
        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($s0);
        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(182);
        $r7 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r8 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r7);
        $r9 = r3.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String wrapperClassName>;
        $r10 = r3.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String unwrapMethodName>;
        $r11 = r3.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String unwrapMethodDesc>;
        $s1 = virtualinvoke $r8.<sun.misc.ProxyGenerator$ConstantPool: short getMethodRef(java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, $r11);
        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($s1);
        $r12 = <java.lang.Integer: java.lang.Class TYPE>;
        if r1 == $r12 goto label0;

        $r13 = <java.lang.Boolean: java.lang.Class TYPE>;
        if r1 == $r13 goto label0;

        $r14 = <java.lang.Byte: java.lang.Class TYPE>;
        if r1 == $r14 goto label0;

        $r15 = <java.lang.Character: java.lang.Class TYPE>;
        if r1 == $r15 goto label0;

        $r16 = <java.lang.Short: java.lang.Class TYPE>;
        if r1 != $r16 goto label1;

     label0:
        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(172);
        goto label5;

     label1:
        $r17 = <java.lang.Long: java.lang.Class TYPE>;
        if r1 != $r17 goto label2;

        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(173);
        goto label5;

     label2:
        $r18 = <java.lang.Float: java.lang.Class TYPE>;
        if r1 != $r18 goto label3;

        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(174);
        goto label5;

     label3:
        $r19 = <java.lang.Double: java.lang.Class TYPE>;
        if r1 != $r19 goto label4;

        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(175);
        goto label5;

     label4:
        $r20 = new java.lang.AssertionError;
        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();
        throw $r20;

     label5:
        goto label7;

     label6:
        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(192);
        $r21 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r22 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r21);
        $r23 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();
        $r24 = staticinvoke <sun.misc.ProxyGenerator: java.lang.String access$000(java.lang.String)>($r23);
        $s2 = virtualinvoke $r22.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>($r24);
        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>($s2);
        virtualinvoke r2.<java.io.DataOutputStream: void writeByte(int)>(176);

     label7:
        return;
    }

    private void codeFieldInitialization(java.io.DataOutputStream) throws java.io.IOException
    {
        sun.misc.ProxyGenerator$ProxyMethod r0;
        java.io.DataOutputStream r1;
        int i0, $i2, $i4;
        sun.misc.ProxyGenerator$PrimitiveTypeInfo r2;
        sun.misc.ProxyGenerator $r3, $r5, $r6, $r9, $r11, $r14, $r19, $r22, $r25, $r27, $r29;
        java.lang.Class $r4, $r16, $r18, $r24;
        sun.misc.ProxyGenerator$ConstantPool $r7, $r12, $r20, $r26, $r28;
        java.lang.String $r8, $r21, $r30, $r31, $r32;
        short $s1, $s3, $s5, $s6, $s7;
        java.lang.Class[] $r10, $r13, $r15, $r17, $r23;
        boolean $z0;

        r0 := @this: sun.misc.ProxyGenerator$ProxyMethod;
        r1 := @parameter0: java.io.DataOutputStream;
        $r3 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r4 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class fromClass>;
        staticinvoke <sun.misc.ProxyGenerator: void access$1700(sun.misc.ProxyGenerator,java.lang.Class,java.io.DataOutputStream)>($r3, $r4, r1);
        $r5 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r6 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r7 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r6);
        $r8 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.String methodName>;
        $s1 = virtualinvoke $r7.<sun.misc.ProxyGenerator$ConstantPool: short getString(java.lang.String)>($r8);
        staticinvoke <sun.misc.ProxyGenerator: void access$1800(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r5, $s1, r1);
        $r9 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r10 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $i2 = lengthof $r10;
        staticinvoke <sun.misc.ProxyGenerator: void access$1000(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r9, $i2, r1);
        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>(189);
        $r11 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r12 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r11);
        $s3 = virtualinvoke $r12.<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>("java/lang/Class");
        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($s3);
        i0 = 0;

     label0:
        $r13 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $i4 = lengthof $r13;
        if i0 >= $i4 goto label3;

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>(89);
        $r14 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        staticinvoke <sun.misc.ProxyGenerator: void access$1000(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>($r14, i0, r1);
        $r15 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $r16 = $r15[i0];
        $z0 = virtualinvoke $r16.<java.lang.Class: boolean isPrimitive()>();
        if $z0 == 0 goto label1;

        $r17 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $r18 = $r17[i0];
        r2 = staticinvoke <sun.misc.ProxyGenerator$PrimitiveTypeInfo: sun.misc.ProxyGenerator$PrimitiveTypeInfo get(java.lang.Class)>($r18);
        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>(178);
        $r19 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r20 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r19);
        $r21 = r2.<sun.misc.ProxyGenerator$PrimitiveTypeInfo: java.lang.String wrapperClassName>;
        $s5 = virtualinvoke $r20.<sun.misc.ProxyGenerator$ConstantPool: short getFieldRef(java.lang.String,java.lang.String,java.lang.String)>($r21, "TYPE", "Ljava/lang/Class;");
        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($s5);
        goto label2;

     label1:
        $r22 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r23 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.Class[] parameterTypes>;
        $r24 = $r23[i0];
        staticinvoke <sun.misc.ProxyGenerator: void access$1700(sun.misc.ProxyGenerator,java.lang.Class,java.io.DataOutputStream)>($r22, $r24, r1);

     label2:
        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>(83);
        i0 = i0 + 1;
        goto label0;

     label3:
        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>(182);
        $r25 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r26 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r25);
        $s6 = virtualinvoke $r26.<sun.misc.ProxyGenerator$ConstantPool: short getMethodRef(java.lang.String,java.lang.String,java.lang.String)>("java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;");
        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($s6);
        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>(179);
        $r27 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r28 = staticinvoke <sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$400(sun.misc.ProxyGenerator)>($r27);
        $r29 = r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator this$0>;
        $r30 = staticinvoke <sun.misc.ProxyGenerator: java.lang.String access$900(sun.misc.ProxyGenerator)>($r29);
        $r31 = staticinvoke <sun.misc.ProxyGenerator: java.lang.String access$000(java.lang.String)>($r30);
        $r32 = r0.<sun.misc.ProxyGenerator$ProxyMethod: java.lang.String methodFieldName>;
        $s7 = virtualinvoke $r28.<sun.misc.ProxyGenerator$ConstantPool: short getFieldRef(java.lang.String,java.lang.String,java.lang.String)>($r31, $r32, "Ljava/lang/reflect/Method;");
        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($s7);
        return;
    }

    static sun.misc.ProxyGenerator$MethodInfo access$200(sun.misc.ProxyGenerator$ProxyMethod) throws java.io.IOException
    {
        sun.misc.ProxyGenerator$ProxyMethod r0;
        sun.misc.ProxyGenerator$MethodInfo $r1;

        r0 := @parameter0: sun.misc.ProxyGenerator$ProxyMethod;
        $r1 = specialinvoke r0.<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator$MethodInfo generateMethod()>();
        return $r1;
    }

    void <init>(sun.misc.ProxyGenerator, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], java.lang.Class, sun.misc.ProxyGenerator$1)
    {
        sun.misc.ProxyGenerator$ProxyMethod r0;
        sun.misc.ProxyGenerator r1;
        java.lang.String r2;
        java.lang.Class[] r3, r5;
        java.lang.Class r4, r6;
        sun.misc.ProxyGenerator$1 r7;

        r0 := @this: sun.misc.ProxyGenerator$ProxyMethod;
        r1 := @parameter0: sun.misc.ProxyGenerator;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Class[];
        r4 := @parameter3: java.lang.Class;
        r5 := @parameter4: java.lang.Class[];
        r6 := @parameter5: java.lang.Class;
        r7 := @parameter6: sun.misc.ProxyGenerator$1;
        specialinvoke r0.<sun.misc.ProxyGenerator$ProxyMethod: void <init>(sun.misc.ProxyGenerator,java.lang.String,java.lang.Class[],java.lang.Class,java.lang.Class[],java.lang.Class)>(r1, r2, r3, r4, r5, r6);
        return;
    }

    static void access$1900(sun.misc.ProxyGenerator$ProxyMethod, java.io.DataOutputStream) throws java.io.IOException
    {
        sun.misc.ProxyGenerator$ProxyMethod r0;
        java.io.DataOutputStream r1;

        r0 := @parameter0: sun.misc.ProxyGenerator$ProxyMethod;
        r1 := @parameter1: java.io.DataOutputStream;
        specialinvoke r0.<sun.misc.ProxyGenerator$ProxyMethod: void codeFieldInitialization(java.io.DataOutputStream)>(r1);
        return;
    }
}
