public class org.apache.catalina.valves.AccessLogValve$DateAndTimeElement extends java.lang.Object implements org.apache.catalina.valves.AccessLogValve$AccessLogElement
{
    private static final java.lang.String requestStartPrefix;
    private static final java.lang.String responseEndPrefix;
    private static final java.lang.String prefixSeparator;
    private static final java.lang.String secFormat;
    private static final java.lang.String msecFormat;
    private static final java.lang.String msecFractionFormat;
    private static final java.lang.String msecPattern;
    private static final java.lang.String trippleMsecPattern;
    private java.lang.String format;
    private boolean usesBegin;
    private org.apache.catalina.valves.AccessLogValve$FormatType type;
    private boolean usesMsecs;
    final org.apache.catalina.valves.AccessLogValve this$0;
    private static int[] $SWITCH_TABLE$org$apache$catalina$valves$AccessLogValve$FormatType;

    protected void <init>(org.apache.catalina.valves.AccessLogValve)
    {
        org.apache.catalina.valves.AccessLogValve$DateAndTimeElement r0;
        org.apache.catalina.valves.AccessLogValve r1;

        r0 := @this: org.apache.catalina.valves.AccessLogValve$DateAndTimeElement;
        r1 := @parameter0: org.apache.catalina.valves.AccessLogValve;
        specialinvoke r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: void <init>(org.apache.catalina.valves.AccessLogValve,java.lang.String)>(r1, null);
        return;
    }

    private java.lang.String tidyFormat(java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve$DateAndTimeElement r0;
        java.lang.String r1, $r6;
        boolean z0, $z1;
        java.lang.StringBuilder r2, $r3;
        int i0, i1;
        char c2;

        r0 := @this: org.apache.catalina.valves.AccessLogValve$DateAndTimeElement;
        r1 := @parameter0: java.lang.String;
        z0 = 0;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        r2 = $r3;
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        i1 = 0;
        goto label7;

     label0:
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        if z0 != 0 goto label1;

        if c2 == 83 goto label2;

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);
        goto label3;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{#}");
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: boolean usesMsecs> = 1;

     label3:
        if c2 != 39 goto label6;

        if z0 == 0 goto label4;

        $z1 = 0;
        goto label5;

     label4:
        $z1 = 1;

     label5:
        z0 = $z1;

     label6:
        i1 = i1 + 1;

     label7:
        if i1 < i0 goto label0;

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    protected void <init>(org.apache.catalina.valves.AccessLogValve, java.lang.String)
    {
        org.apache.catalina.valves.AccessLogValve$DateAndTimeElement r0;
        org.apache.catalina.valves.AccessLogValve r1;
        java.lang.String r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r19, $r22, $r23;
        org.apache.catalina.valves.AccessLogValve$FormatType $r3, $r14, $r16, $r18, $r20, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0;

        r0 := @this: org.apache.catalina.valves.AccessLogValve$DateAndTimeElement;
        r1 := @parameter0: org.apache.catalina.valves.AccessLogValve;
        r2 := @parameter1: java.lang.String;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: org.apache.catalina.valves.AccessLogValve this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format> = null;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: boolean usesBegin> = 0;
        $r3 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType CLF>;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: org.apache.catalina.valves.AccessLogValve$FormatType type> = $r3;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: boolean usesMsecs> = 0;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format> = r2;
        $r4 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        if $r4 == null goto label8;

        $r5 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("begin");
        if $z0 == 0 goto label0;

        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: boolean usesBegin> = 1;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format> = "";
        goto label3;

     label0:
        $r6 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("begin:");
        if $z1 == 0 goto label1;

        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: boolean usesBegin> = 1;
        $r7 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(6);
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format> = $r8;
        goto label3;

     label1:
        $r9 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("end");
        if $z2 == 0 goto label2;

        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: boolean usesBegin> = 0;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format> = "";
        goto label3;

     label2:
        $r10 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $z3 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("end:");
        if $z3 == 0 goto label3;

        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: boolean usesBegin> = 0;
        $r11 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int)>(4);
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format> = $r12;

     label3:
        $r13 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();
        if $i0 != 0 goto label4;

        $r14 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType CLF>;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: org.apache.catalina.valves.AccessLogValve$FormatType type> = $r14;
        goto label8;

     label4:
        $r15 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("sec");
        if $z4 == 0 goto label5;

        $r16 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType SEC>;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: org.apache.catalina.valves.AccessLogValve$FormatType type> = $r16;
        goto label8;

     label5:
        $r17 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("msec");
        if $z5 == 0 goto label6;

        $r18 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType MSEC>;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: org.apache.catalina.valves.AccessLogValve$FormatType type> = $r18;
        goto label8;

     label6:
        $r19 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $z6 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("msec_frac");
        if $z6 == 0 goto label7;

        $r20 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType MSEC_FRAC>;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: org.apache.catalina.valves.AccessLogValve$FormatType type> = $r20;
        goto label8;

     label7:
        $r21 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType SDF>;
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: org.apache.catalina.valves.AccessLogValve$FormatType type> = $r21;
        $r22 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $r23 = specialinvoke r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String tidyFormat(java.lang.String)>($r22);
        r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format> = $r23;

     label8:
        return;
    }

    public void addElement(java.lang.StringBuilder, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)
    {
        org.apache.catalina.valves.AccessLogValve$DateAndTimeElement r0;
        java.lang.StringBuilder r1, r6, $r26;
        java.util.Date r2;
        org.apache.catalina.connector.Request r3;
        org.apache.catalina.connector.Response r4;
        long l0, l1, l2, $l5, l8;
        java.lang.String r5, $r12, $r23, r31, $r32;
        boolean $z0, $z1;
        int[] $r7;
        org.apache.catalina.valves.AccessLogValve$FormatType $r8;
        int $i3, $i4;
        java.lang.ThreadLocal $r9, $r20;
        java.lang.Object $r10, $r21;
        org.apache.catalina.valves.AccessLogValve$DateFormatCache $r11, $r22;
        byte $b6, $b7, $b9, $b10;
        org.apache.catalina.valves.AccessLogValve $r24;
        java.util.Locale $r25;

        r0 := @this: org.apache.catalina.valves.AccessLogValve$DateAndTimeElement;
        r1 := @parameter0: java.lang.StringBuilder;
        r2 := @parameter1: java.util.Date;
        r3 := @parameter2: org.apache.catalina.connector.Request;
        r4 := @parameter3: org.apache.catalina.connector.Response;
        l0 := @parameter4: long;
        l1 = virtualinvoke r2.<java.util.Date: long getTime()>();
        $z0 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: boolean usesBegin>;
        if $z0 == 0 goto label0;

        l1 = l1 - l0;

     label0:
        $r7 = staticinvoke <org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: int[] $SWITCH_TABLE$org$apache$catalina$valves$AccessLogValve$FormatType()>();
        $r8 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: org.apache.catalina.valves.AccessLogValve$FormatType type>;
        $i3 = virtualinvoke $r8.<org.apache.catalina.valves.AccessLogValve$FormatType: int ordinal()>();
        $i4 = $r7[$i3];
        tableswitch($i4)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label7;
            default: goto label11;
        };

     label1:
        $r9 = staticinvoke <org.apache.catalina.valves.AccessLogValve: java.lang.ThreadLocal access$1()>();
        $r10 = virtualinvoke $r9.<java.lang.ThreadLocal: java.lang.Object get()>();
        $r11 = (org.apache.catalina.valves.AccessLogValve$DateFormatCache) $r10;
        $r12 = virtualinvoke $r11.<org.apache.catalina.valves.AccessLogValve$DateFormatCache: java.lang.String getFormat(long)>(l1);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        goto label11;

     label2:
        $l5 = l1 / 1000L;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);
        goto label11;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);
        goto label11;

     label4:
        l2 = l1 % 1000L;
        $b6 = l2 cmp 100L;
        if $b6 >= 0 goto label6;

        $b7 = l2 cmp 10L;
        if $b7 >= 0 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);
        goto label6;

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);
        goto label11;

     label7:
        $r20 = staticinvoke <org.apache.catalina.valves.AccessLogValve: java.lang.ThreadLocal access$1()>();
        $r21 = virtualinvoke $r20.<java.lang.ThreadLocal: java.lang.Object get()>();
        $r22 = (org.apache.catalina.valves.AccessLogValve$DateFormatCache) $r21;
        $r23 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: java.lang.String format>;
        $r24 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: org.apache.catalina.valves.AccessLogValve this$0>;
        $r25 = $r24.<org.apache.catalina.valves.AccessLogValve: java.util.Locale locale>;
        r5 = virtualinvoke $r22.<org.apache.catalina.valves.AccessLogValve$DateFormatCache: java.lang.String getFormat(java.lang.String,java.util.Locale,long)>($r23, $r25, l1);
        $z1 = r0.<org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: boolean usesMsecs>;
        if $z1 == 0 goto label10;

        l8 = l1 % 1000L;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(int)>(4);
        r6 = $r26;
        $b9 = l8 cmp 100L;
        if $b9 >= 0 goto label9;

        $b10 = l8 cmp 10L;
        if $b10 >= 0 goto label8;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);
        goto label9;

     label8:
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label9:
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l8);
        r31 = virtualinvoke r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{#}{#}{#}", r6);
        $r32 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l8);
        r5 = virtualinvoke r31.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{#}", $r32);

     label10:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

     label11:
        return;
    }

    static int[] $SWITCH_TABLE$org$apache$catalina$valves$AccessLogValve$FormatType()
    {
        int[] $r0, r1;
        org.apache.catalina.valves.AccessLogValve$FormatType[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.catalina.valves.AccessLogValve$FormatType $r3, $r5, $r7, $r9, $r11;
        java.lang.NoSuchFieldError $r4, $r6, $r8, $r10, $r12;

        $r0 = <org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: int[] $SWITCH_TABLE$org$apache$catalina$valves$AccessLogValve$FormatType>;
        if $r0 == null goto label0;

        return $r0;

     label0:
        $r2 = staticinvoke <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType[] values()>();
        $i0 = lengthof $r2;
        r1 = newarray (int)[$i0];

     label1:
        $r3 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType CLF>;
        $i1 = virtualinvoke $r3.<org.apache.catalina.valves.AccessLogValve$FormatType: int ordinal()>();
        r1[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r5 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType MSEC>;
        $i2 = virtualinvoke $r5.<org.apache.catalina.valves.AccessLogValve$FormatType: int ordinal()>();
        r1[$i2] = 3;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

     label7:
        $r7 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType MSEC_FRAC>;
        $i3 = virtualinvoke $r7.<org.apache.catalina.valves.AccessLogValve$FormatType: int ordinal()>();
        r1[$i3] = 4;

     label8:
        goto label10;

     label9:
        $r8 := @caughtexception;

     label10:
        $r9 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType SDF>;
        $i4 = virtualinvoke $r9.<org.apache.catalina.valves.AccessLogValve$FormatType: int ordinal()>();
        r1[$i4] = 5;

     label11:
        goto label13;

     label12:
        $r10 := @caughtexception;

     label13:
        $r11 = <org.apache.catalina.valves.AccessLogValve$FormatType: org.apache.catalina.valves.AccessLogValve$FormatType SEC>;
        $i5 = virtualinvoke $r11.<org.apache.catalina.valves.AccessLogValve$FormatType: int ordinal()>();
        r1[$i5] = 2;

     label14:
        goto label16;

     label15:
        $r12 := @caughtexception;

     label16:
        <org.apache.catalina.valves.AccessLogValve$DateAndTimeElement: int[] $SWITCH_TABLE$org$apache$catalina$valves$AccessLogValve$FormatType> = r1;
        return r1;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
        catch java.lang.NoSuchFieldError from label7 to label8 with label9;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
        catch java.lang.NoSuchFieldError from label13 to label14 with label15;
    }
}
