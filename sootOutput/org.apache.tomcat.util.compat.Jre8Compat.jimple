class org.apache.tomcat.util.compat.Jre8Compat extends org.apache.tomcat.util.compat.Jre7Compat
{
    private static final int RUNTIME_MAJOR_VERSION;
    private static final java.lang.reflect.Method getSSLParametersMethod;
    private static final java.lang.reflect.Method setUseCipherSuitesOrderMethod;
    private static final java.lang.reflect.Method setSSLParametersMethod;

    static void <clinit>()
    {
        java.lang.reflect.Method r0, r1, r2;
        java.lang.Class r3, $r4, $r5, $r8;
        java.lang.Class[] $r6, $r7, $r9;
        java.lang.SecurityException $r10, r11;
        java.lang.NoSuchMethodException $r12, r13;
        java.lang.ClassNotFoundException $r14, r15;

        r0 = null;
        r1 = null;
        r2 = null;

     label0:
        r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.net.ssl.SSLParameters");
        $r5 = class "javax/net/ssl/SSLServerSocket";
        $r6 = newarray (java.lang.Class)[0];
        r0 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getSSLParameters", $r6);
        $r7 = newarray (java.lang.Class)[1];
        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r7[0] = $r4;
        r1 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setUseCipherSuitesOrder", $r7);
        $r8 = class "javax/net/ssl/SSLServerSocket";
        $r9 = newarray (java.lang.Class)[1];
        $r9[0] = r3;
        r2 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setSSLParameters", $r9);

     label1:
        goto label5;

     label2:
        $r10 := @caughtexception;
        r11 = $r10;
        goto label5;

     label3:
        $r12 := @caughtexception;
        r13 = $r12;
        goto label5;

     label4:
        $r14 := @caughtexception;
        r15 = $r14;

     label5:
        <org.apache.tomcat.util.compat.Jre8Compat: java.lang.reflect.Method getSSLParametersMethod> = r0;
        <org.apache.tomcat.util.compat.Jre8Compat: java.lang.reflect.Method setUseCipherSuitesOrderMethod> = r1;
        <org.apache.tomcat.util.compat.Jre8Compat: java.lang.reflect.Method setSSLParametersMethod> = r2;
        return;

        catch java.lang.SecurityException from label0 to label1 with label2;
        catch java.lang.NoSuchMethodException from label0 to label1 with label3;
        catch java.lang.ClassNotFoundException from label0 to label1 with label4;
    }

    void <init>()
    {
        org.apache.tomcat.util.compat.Jre8Compat r0;

        r0 := @this: org.apache.tomcat.util.compat.Jre8Compat;
        specialinvoke r0.<org.apache.tomcat.util.compat.Jre7Compat: void <init>()>();
        return;
    }

    static boolean isSupported()
    {
        java.lang.reflect.Method $r0;

        $r0 = <org.apache.tomcat.util.compat.Jre8Compat: java.lang.reflect.Method setUseCipherSuitesOrderMethod>;
        if $r0 == null goto label0;

        return 1;

     label0:
        return 0;
    }

    public void setUseServerCipherSuitesOrder(javax.net.ssl.SSLServerSocket, boolean)
    {
        org.apache.tomcat.util.compat.Jre8Compat r0;
        javax.net.ssl.SSLServerSocket r1;
        boolean z0;
        java.lang.reflect.Method $r2, $r5, $r9;
        java.lang.Object r3;
        java.lang.Object[] $r4, $r6, $r10;
        java.lang.Boolean $r7;
        java.lang.IllegalArgumentException $r12, r13;
        java.lang.UnsupportedOperationException $r14, $r17, $r20;
        java.lang.IllegalAccessException $r15, r16;
        java.lang.reflect.InvocationTargetException $r18, r19;

        r0 := @this: org.apache.tomcat.util.compat.Jre8Compat;
        r1 := @parameter0: javax.net.ssl.SSLServerSocket;
        z0 := @parameter1: boolean;

     label0:
        $r2 = <org.apache.tomcat.util.compat.Jre8Compat: java.lang.reflect.Method getSSLParametersMethod>;
        $r4 = newarray (java.lang.Object)[0];
        r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r4);
        $r5 = <org.apache.tomcat.util.compat.Jre8Compat: java.lang.reflect.Method setUseCipherSuitesOrderMethod>;
        $r6 = newarray (java.lang.Object)[1];
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);
        $r6[0] = $r7;
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r6);
        $r9 = <org.apache.tomcat.util.compat.Jre8Compat: java.lang.reflect.Method setSSLParametersMethod>;
        $r10 = newarray (java.lang.Object)[1];
        $r10[0] = r3;
        virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r10);

     label1:
        return;

     label2:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new java.lang.UnsupportedOperationException;
        specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r13);
        throw $r14;

     label3:
        $r15 := @caughtexception;
        r16 = $r15;
        $r17 = new java.lang.UnsupportedOperationException;
        specialinvoke $r17.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r16);
        throw $r17;

     label4:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = new java.lang.UnsupportedOperationException;
        specialinvoke $r20.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r19);
        throw $r20;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
        catch java.lang.IllegalAccessException from label0 to label1 with label3;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label4;
    }

    public void setUseServerCipherSuitesOrder(javax.net.ssl.SSLEngine, boolean)
    {
        org.apache.tomcat.util.compat.Jre8Compat r0;
        javax.net.ssl.SSLEngine r1;
        boolean z0;
        javax.net.ssl.SSLParameters r2;
        java.lang.IllegalArgumentException r3, $r8;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Boolean $r6;
        java.lang.UnsupportedOperationException $r9, $r12, $r15;
        java.lang.IllegalAccessException $r10, r11;
        java.lang.reflect.InvocationTargetException $r13, r14;

        r0 := @this: org.apache.tomcat.util.compat.Jre8Compat;
        r1 := @parameter0: javax.net.ssl.SSLEngine;
        z0 := @parameter1: boolean;
        r2 = virtualinvoke r1.<javax.net.ssl.SSLEngine: javax.net.ssl.SSLParameters getSSLParameters()>();

     label0:
        $r4 = <org.apache.tomcat.util.compat.Jre8Compat: java.lang.reflect.Method setUseCipherSuitesOrderMethod>;
        $r5 = newarray (java.lang.Object)[1];
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);
        $r5[0] = $r6;
        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r5);
        virtualinvoke r1.<javax.net.ssl.SSLEngine: void setSSLParameters(javax.net.ssl.SSLParameters)>(r2);

     label1:
        goto label5;

     label2:
        $r8 := @caughtexception;
        r3 = $r8;
        $r9 = new java.lang.UnsupportedOperationException;
        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r3);
        throw $r9;

     label3:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = new java.lang.UnsupportedOperationException;
        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r11);
        throw $r12;

     label4:
        $r13 := @caughtexception;
        r14 = $r13;
        $r15 = new java.lang.UnsupportedOperationException;
        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>(r14);
        throw $r15;

     label5:
        return;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
        catch java.lang.IllegalAccessException from label0 to label1 with label3;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label4;
    }

    public int jarFileRuntimeMajorVersion()
    {
        org.apache.tomcat.util.compat.Jre8Compat r0;

        r0 := @this: org.apache.tomcat.util.compat.Jre8Compat;
        return 8;
    }
}
