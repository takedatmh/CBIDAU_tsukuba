class sun.nio.fs.UnixFileAttributeViews$Basic extends sun.nio.fs.AbstractBasicFileAttributeView
{
    protected final sun.nio.fs.UnixPath file;
    protected final boolean followLinks;

    void <init>(sun.nio.fs.UnixPath, boolean)
    {
        sun.nio.fs.UnixFileAttributeViews$Basic r0;
        sun.nio.fs.UnixPath r1;
        boolean z0;

        r0 := @this: sun.nio.fs.UnixFileAttributeViews$Basic;
        r1 := @parameter0: sun.nio.fs.UnixPath;
        z0 := @parameter1: boolean;
        specialinvoke r0.<sun.nio.fs.AbstractBasicFileAttributeView: void <init>()>();
        r0.<sun.nio.fs.UnixFileAttributeViews$Basic: sun.nio.fs.UnixPath file> = r1;
        r0.<sun.nio.fs.UnixFileAttributeViews$Basic: boolean followLinks> = z0;
        return;
    }

    public java.nio.file.attribute.BasicFileAttributes readAttributes() throws java.io.IOException
    {
        sun.nio.fs.UnixFileAttributeViews$Basic r0;
        sun.nio.fs.UnixFileAttributes r1;
        sun.nio.fs.UnixPath $r2, $r3, $r7;
        boolean $z0;
        java.nio.file.attribute.BasicFileAttributes $r4;
        sun.nio.fs.UnixException $r5, r6;

        r0 := @this: sun.nio.fs.UnixFileAttributeViews$Basic;
        $r2 = r0.<sun.nio.fs.UnixFileAttributeViews$Basic: sun.nio.fs.UnixPath file>;
        virtualinvoke $r2.<sun.nio.fs.UnixPath: void checkRead()>();

     label0:
        $r3 = r0.<sun.nio.fs.UnixFileAttributeViews$Basic: sun.nio.fs.UnixPath file>;
        $z0 = r0.<sun.nio.fs.UnixFileAttributeViews$Basic: boolean followLinks>;
        r1 = staticinvoke <sun.nio.fs.UnixFileAttributes: sun.nio.fs.UnixFileAttributes get(sun.nio.fs.UnixPath,boolean)>($r3, $z0);
        $r4 = virtualinvoke r1.<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.BasicFileAttributes asBasicFileAttributes()>();

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;
        r6 = $r5;
        $r7 = r0.<sun.nio.fs.UnixFileAttributeViews$Basic: sun.nio.fs.UnixPath file>;
        virtualinvoke r6.<sun.nio.fs.UnixException: void rethrowAsIOException(sun.nio.fs.UnixPath)>($r7);
        return null;

        catch sun.nio.fs.UnixException from label0 to label1 with label2;
    }

    public void setTimes(java.nio.file.attribute.FileTime, java.nio.file.attribute.FileTime, java.nio.file.attribute.FileTime) throws java.io.IOException
    {
        sun.nio.fs.UnixFileAttributeViews$Basic r0;
        java.nio.file.attribute.FileTime r1, r2, r3;
        int i0, $i3;
        sun.nio.fs.UnixFileAttributes r4;
        long l1, l2;
        boolean z0, $z1;
        sun.nio.fs.UnixException r5, $r9, r10, $r14, $r16, r17;
        java.lang.Throwable r6, $r19;
        sun.nio.fs.UnixPath $r7, $r8, $r11, $r15, $r18;
        java.util.concurrent.TimeUnit $r12, $r13;
        byte $b4, $b5, $b6, $b7;

        r0 := @this: sun.nio.fs.UnixFileAttributeViews$Basic;
        r1 := @parameter0: java.nio.file.attribute.FileTime;
        r2 := @parameter1: java.nio.file.attribute.FileTime;
        r3 := @parameter2: java.nio.file.attribute.FileTime;
        if r1 != null goto label0;

        if r2 != null goto label0;

        return;

     label0:
        $r7 = r0.<sun.nio.fs.UnixFileAttributeViews$Basic: sun.nio.fs.UnixPath file>;
        virtualinvoke $r7.<sun.nio.fs.UnixPath: void checkWrite()>();
        $r8 = r0.<sun.nio.fs.UnixFileAttributeViews$Basic: sun.nio.fs.UnixPath file>;
        $z1 = r0.<sun.nio.fs.UnixFileAttributeViews$Basic: boolean followLinks>;
        i0 = virtualinvoke $r8.<sun.nio.fs.UnixPath: int openForAttributeAccess(boolean)>($z1);

     label1:
        if r1 == null goto label2;

        if r2 != null goto label6;

     label2:
        r4 = staticinvoke <sun.nio.fs.UnixFileAttributes: sun.nio.fs.UnixFileAttributes get(int)>(i0);
        if r1 != null goto label3;

        r1 = virtualinvoke r4.<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.FileTime lastModifiedTime()>();

     label3:
        if r2 != null goto label4;

        r2 = virtualinvoke r4.<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>();

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = r0.<sun.nio.fs.UnixFileAttributeViews$Basic: sun.nio.fs.UnixPath file>;
        virtualinvoke r10.<sun.nio.fs.UnixException: void rethrowAsIOException(sun.nio.fs.UnixPath)>($r11);

     label6:
        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
        l2 = virtualinvoke r1.<java.nio.file.attribute.FileTime: long 'to'(java.util.concurrent.TimeUnit)>($r12);
        $r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
        l1 = virtualinvoke r2.<java.nio.file.attribute.FileTime: long 'to'(java.util.concurrent.TimeUnit)>($r13);
        z0 = 0;

     label7:
        staticinvoke <sun.nio.fs.UnixNativeDispatcher: void futimes(int,long,long)>(i0, l1, l2);

     label8:
        goto label12;

     label9:
        $r14 := @caughtexception;
        r5 = $r14;
        $i3 = virtualinvoke r5.<sun.nio.fs.UnixException: int errno()>();
        if $i3 != 22 goto label11;

        $b4 = l2 cmp 0L;
        if $b4 < 0 goto label10;

        $b5 = l1 cmp 0L;
        if $b5 >= 0 goto label11;

     label10:
        z0 = 1;
        goto label12;

     label11:
        $r15 = r0.<sun.nio.fs.UnixFileAttributeViews$Basic: sun.nio.fs.UnixPath file>;
        virtualinvoke r5.<sun.nio.fs.UnixException: void rethrowAsIOException(sun.nio.fs.UnixPath)>($r15);

     label12:
        if z0 == 0 goto label17;

        $b6 = l2 cmp 0L;
        if $b6 >= 0 goto label13;

        l2 = 0L;

     label13:
        $b7 = l1 cmp 0L;
        if $b7 >= 0 goto label14;

        l1 = 0L;

     label14:
        staticinvoke <sun.nio.fs.UnixNativeDispatcher: void futimes(int,long,long)>(i0, l1, l2);

     label15:
        goto label17;

     label16:
        $r16 := @caughtexception;
        r17 = $r16;
        $r18 = r0.<sun.nio.fs.UnixFileAttributeViews$Basic: sun.nio.fs.UnixPath file>;
        virtualinvoke r17.<sun.nio.fs.UnixException: void rethrowAsIOException(sun.nio.fs.UnixPath)>($r18);

     label17:
        staticinvoke <sun.nio.fs.UnixNativeDispatcher: void close(int)>(i0);
        goto label21;

     label18:
        $r19 := @caughtexception;

     label19:
        r6 = $r19;

     label20:
        staticinvoke <sun.nio.fs.UnixNativeDispatcher: void close(int)>(i0);
        throw r6;

     label21:
        return;

        catch sun.nio.fs.UnixException from label2 to label4 with label5;
        catch sun.nio.fs.UnixException from label7 to label8 with label9;
        catch sun.nio.fs.UnixException from label14 to label15 with label16;
        catch java.lang.Throwable from label1 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }
}
