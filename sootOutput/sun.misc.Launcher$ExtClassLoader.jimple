class sun.misc.Launcher$ExtClassLoader extends java.net.URLClassLoader
{

    public static sun.misc.Launcher$ExtClassLoader getExtClassLoader() throws java.io.IOException
    {
        java.io.File[] r0;
        java.security.PrivilegedActionException r1, $r5;
        sun.misc.Launcher$ExtClassLoader$1 $r2;
        java.lang.Object $r3;
        sun.misc.Launcher$ExtClassLoader $r4;
        java.lang.Exception $r6;
        java.io.IOException $r7;

        r0 = staticinvoke <sun.misc.Launcher$ExtClassLoader: java.io.File[] getExtDirs()>();

     label0:
        $r2 = new sun.misc.Launcher$ExtClassLoader$1;
        specialinvoke $r2.<sun.misc.Launcher$ExtClassLoader$1: void <init>(java.io.File[])>(r0);
        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r2);
        $r4 = (sun.misc.Launcher$ExtClassLoader) $r3;

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;
        r1 = $r5;
        $r6 = virtualinvoke r1.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
        $r7 = (java.io.IOException) $r6;
        throw $r7;

        catch java.security.PrivilegedActionException from label0 to label1 with label2;
    }

    void addExtURL(java.net.URL)
    {
        sun.misc.Launcher$ExtClassLoader r0;
        java.net.URL r1;

        r0 := @this: sun.misc.Launcher$ExtClassLoader;
        r1 := @parameter0: java.net.URL;
        specialinvoke r0.<java.net.URLClassLoader: void addURL(java.net.URL)>(r1);
        return;
    }

    public void <init>(java.io.File[]) throws java.io.IOException
    {
        sun.misc.Launcher$ExtClassLoader r0;
        java.io.File[] r1;
        java.net.URLStreamHandlerFactory $r2;
        java.net.URL[] $r3;

        r0 := @this: sun.misc.Launcher$ExtClassLoader;
        r1 := @parameter0: java.io.File[];
        $r3 = staticinvoke <sun.misc.Launcher$ExtClassLoader: java.net.URL[] getExtURLs(java.io.File[])>(r1);
        $r2 = staticinvoke <sun.misc.Launcher: java.net.URLStreamHandlerFactory access$100()>();
        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>($r3, null, $r2);
        return;
    }

    private static java.io.File[] getExtDirs()
    {
        java.lang.String r0, $r1, $r6;
        java.util.StringTokenizer r2, $r4;
        int i0, i1;
        java.io.File[] r3;
        java.io.File $r5;

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.ext.dirs");
        if r0 == null goto label2;

        $r4 = new java.util.StringTokenizer;
        $r1 = <java.io.File: java.lang.String pathSeparator>;
        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, $r1);
        r2 = $r4;
        i0 = virtualinvoke r2.<java.util.StringTokenizer: int countTokens()>();
        r3 = newarray (java.io.File)[i0];
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        $r5 = new java.io.File;
        $r6 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);
        r3[i1] = $r5;
        i1 = i1 + 1;
        goto label0;

     label1:
        goto label3;

     label2:
        r3 = newarray (java.io.File)[0];

     label3:
        return r3;
    }

    private static java.net.URL[] getExtURLs(java.io.File[]) throws java.io.IOException
    {
        java.io.File[] r0;
        java.util.Vector $r1, r2;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String[] r3;
        java.io.File r4, $r5, $r7, $r8;
        java.lang.String $r6, $r9;
        boolean $z0;
        java.net.URL $r10;
        java.net.URL[] r11;

        r0 := @parameter0: java.io.File[];
        $r1 = new java.util.Vector;
        specialinvoke $r1.<java.util.Vector: void <init>()>();
        r2 = $r1;
        i0 = 0;

     label0:
        $i2 = lengthof r0;
        if i0 >= $i2 goto label4;

        $r5 = r0[i0];
        r3 = virtualinvoke $r5.<java.io.File: java.lang.String[] list()>();
        if r3 == null goto label3;

        i1 = 0;

     label1:
        $i3 = lengthof r3;
        if i1 >= $i3 goto label3;

        $r6 = r3[i1];
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("meta-index");
        if $z0 != 0 goto label2;

        $r7 = new java.io.File;
        $r8 = r0[i0];
        $r9 = r3[i1];
        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, $r9);
        r4 = $r7;
        $r10 = staticinvoke <sun.misc.Launcher: java.net.URL getFileURL(java.io.File)>(r4);
        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r10);

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        i0 = i0 + 1;
        goto label0;

     label4:
        $i4 = virtualinvoke r2.<java.util.Vector: int size()>();
        r11 = newarray (java.net.URL)[$i4];
        virtualinvoke r2.<java.util.Vector: void copyInto(java.lang.Object[])>(r11);
        return r11;
    }

    public java.lang.String findLibrary(java.lang.String)
    {
        sun.misc.Launcher$ExtClassLoader r0;
        java.lang.String r1, r5, r7, $r10, $r13, $r16;
        java.net.URL[] r2;
        java.io.File r3, r4, r6, $r8, $r11, $r12, $r14, r15;
        int i0, $i1;
        java.net.URL $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: sun.misc.Launcher$ExtClassLoader;
        r1 := @parameter0: java.lang.String;
        r7 = staticinvoke <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>(r1);
        r2 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL[] getURLs()>();
        r3 = null;
        i0 = 0;

     label0:
        $i1 = lengthof r2;
        if i0 >= $i1 goto label3;

        $r8 = new java.io.File;
        $r9 = r2[i0];
        $r10 = virtualinvoke $r9.<java.net.URL: java.lang.String getPath()>();
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r10);
        r4 = virtualinvoke $r8.<java.io.File: java.io.File getParentFile()>();
        if r4 == null goto label2;

        $z0 = virtualinvoke r4.<java.io.File: boolean equals(java.lang.Object)>(r3);
        if $z0 != 0 goto label2;

        r5 = staticinvoke <sun.misc.VM: java.lang.String getSavedProperty(java.lang.String)>("os.arch");
        if r5 == null goto label1;

        $r11 = new java.io.File;
        $r12 = new java.io.File;
        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, r5);
        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, r7);
        r6 = $r11;
        $z1 = virtualinvoke r6.<java.io.File: boolean exists()>();
        if $z1 == 0 goto label1;

        $r13 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>();
        return $r13;

     label1:
        $r14 = new java.io.File;
        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, r7);
        r15 = $r14;
        $z2 = virtualinvoke r15.<java.io.File: boolean exists()>();
        if $z2 == 0 goto label2;

        $r16 = virtualinvoke r15.<java.io.File: java.lang.String getAbsolutePath()>();
        return $r16;

     label2:
        r3 = r4;
        i0 = i0 + 1;
        goto label0;

     label3:
        return null;
    }

    private static java.security.AccessControlContext getContext(java.io.File[]) throws java.io.IOException
    {
        java.io.File[] r0;
        sun.misc.PathPermissions $r1, r2;
        java.security.ProtectionDomain r3, $r5;
        java.security.AccessControlContext r4, $r9;
        java.security.CodeSource $r6;
        java.net.URL $r7;
        java.security.cert.Certificate[] $r8;
        java.security.ProtectionDomain[] $r10;

        r0 := @parameter0: java.io.File[];
        $r1 = new sun.misc.PathPermissions;
        specialinvoke $r1.<sun.misc.PathPermissions: void <init>(java.io.File[])>(r0);
        r2 = $r1;
        $r5 = new java.security.ProtectionDomain;
        $r6 = new java.security.CodeSource;
        $r7 = virtualinvoke r2.<sun.misc.PathPermissions: java.net.URL getCodeBase()>();
        $r8 = (java.security.cert.Certificate[]) null;
        specialinvoke $r6.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>($r7, $r8);
        specialinvoke $r5.<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>($r6, r2);
        r3 = $r5;
        $r9 = new java.security.AccessControlContext;
        $r10 = newarray (java.security.ProtectionDomain)[1];
        $r10[0] = r3;
        specialinvoke $r9.<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>($r10);
        r4 = $r9;
        return r4;
    }

    static void <clinit>()
    {
        staticinvoke <java.lang.ClassLoader: boolean registerAsParallelCapable()>();
        return;
    }
}
