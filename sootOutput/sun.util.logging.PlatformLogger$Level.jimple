public final enum class sun.util.logging.PlatformLogger$Level extends java.lang.Enum
{
    public static final enum sun.util.logging.PlatformLogger$Level ALL;
    public static final enum sun.util.logging.PlatformLogger$Level FINEST;
    public static final enum sun.util.logging.PlatformLogger$Level FINER;
    public static final enum sun.util.logging.PlatformLogger$Level FINE;
    public static final enum sun.util.logging.PlatformLogger$Level CONFIG;
    public static final enum sun.util.logging.PlatformLogger$Level INFO;
    public static final enum sun.util.logging.PlatformLogger$Level WARNING;
    public static final enum sun.util.logging.PlatformLogger$Level SEVERE;
    public static final enum sun.util.logging.PlatformLogger$Level OFF;
    java.lang.Object javaLevel;
    private static final int[] levelValues;
    private static final sun.util.logging.PlatformLogger$Level[] $VALUES;

    public static sun.util.logging.PlatformLogger$Level[] values()
    {
        sun.util.logging.PlatformLogger$Level[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (sun.util.logging.PlatformLogger$Level[]) $r1;
        return $r2;
    }

    public static sun.util.logging.PlatformLogger$Level valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        sun.util.logging.PlatformLogger$Level $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "sun/util/logging/PlatformLogger$Level", r0);
        $r2 = (sun.util.logging.PlatformLogger$Level) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        sun.util.logging.PlatformLogger$Level r0;
        java.lang.String r1;
        int i0;

        r0 := @this: sun.util.logging.PlatformLogger$Level;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    public int intValue()
    {
        sun.util.logging.PlatformLogger$Level r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: sun.util.logging.PlatformLogger$Level;
        $r1 = <sun.util.logging.PlatformLogger$Level: int[] levelValues>;
        $i0 = virtualinvoke r0.<sun.util.logging.PlatformLogger$Level: int ordinal()>();
        $i1 = $r1[$i0];
        return $i1;
    }

    static sun.util.logging.PlatformLogger$Level valueOf(int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;
        int[] $r0, $r10;
        sun.util.logging.PlatformLogger$Level $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12;
        sun.util.logging.PlatformLogger$Level[] $r11;

        i0 := @parameter0: int;
        lookupswitch(i0)
        {
            case -2147483648: goto label8;
            case 300: goto label0;
            case 400: goto label2;
            case 500: goto label1;
            case 700: goto label5;
            case 800: goto label3;
            case 900: goto label4;
            case 1000: goto label6;
            case 2147483647: goto label7;
            default: goto label9;
        };

     label0:
        $r1 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level FINEST>;
        return $r1;

     label1:
        $r2 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level FINE>;
        return $r2;

     label2:
        $r3 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level FINER>;
        return $r3;

     label3:
        $r4 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level INFO>;
        return $r4;

     label4:
        $r5 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level WARNING>;
        return $r5;

     label5:
        $r6 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level CONFIG>;
        return $r6;

     label6:
        $r7 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level SEVERE>;
        return $r7;

     label7:
        $r8 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level OFF>;
        return $r8;

     label8:
        $r9 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level ALL>;
        return $r9;

     label9:
        $r10 = <sun.util.logging.PlatformLogger$Level: int[] levelValues>;
        $r0 = <sun.util.logging.PlatformLogger$Level: int[] levelValues>;
        $i2 = lengthof $r0;
        $i3 = $i2 - 2;
        i1 = staticinvoke <java.util.Arrays: int binarySearch(int[],int,int,int)>($r10, 0, $i3, i0);
        $r11 = staticinvoke <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>();
        if i1 < 0 goto label10;

        $i4 = i1;
        goto label11;

     label10:
        $i5 = neg i1;
        $i4 = $i5 - 1;

     label11:
        $r12 = $r11[$i4];
        return $r12;
    }

    static void <clinit>()
    {
        sun.util.logging.PlatformLogger$Level $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        sun.util.logging.PlatformLogger$Level[] $r9;
        int[] $r19;

        $r0 = new sun.util.logging.PlatformLogger$Level;
        specialinvoke $r0.<sun.util.logging.PlatformLogger$Level: void <init>(java.lang.String,int)>("ALL", 0);
        <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level ALL> = $r0;
        $r1 = new sun.util.logging.PlatformLogger$Level;
        specialinvoke $r1.<sun.util.logging.PlatformLogger$Level: void <init>(java.lang.String,int)>("FINEST", 1);
        <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level FINEST> = $r1;
        $r2 = new sun.util.logging.PlatformLogger$Level;
        specialinvoke $r2.<sun.util.logging.PlatformLogger$Level: void <init>(java.lang.String,int)>("FINER", 2);
        <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level FINER> = $r2;
        $r3 = new sun.util.logging.PlatformLogger$Level;
        specialinvoke $r3.<sun.util.logging.PlatformLogger$Level: void <init>(java.lang.String,int)>("FINE", 3);
        <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level FINE> = $r3;
        $r4 = new sun.util.logging.PlatformLogger$Level;
        specialinvoke $r4.<sun.util.logging.PlatformLogger$Level: void <init>(java.lang.String,int)>("CONFIG", 4);
        <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level CONFIG> = $r4;
        $r5 = new sun.util.logging.PlatformLogger$Level;
        specialinvoke $r5.<sun.util.logging.PlatformLogger$Level: void <init>(java.lang.String,int)>("INFO", 5);
        <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level INFO> = $r5;
        $r6 = new sun.util.logging.PlatformLogger$Level;
        specialinvoke $r6.<sun.util.logging.PlatformLogger$Level: void <init>(java.lang.String,int)>("WARNING", 6);
        <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level WARNING> = $r6;
        $r7 = new sun.util.logging.PlatformLogger$Level;
        specialinvoke $r7.<sun.util.logging.PlatformLogger$Level: void <init>(java.lang.String,int)>("SEVERE", 7);
        <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level SEVERE> = $r7;
        $r8 = new sun.util.logging.PlatformLogger$Level;
        specialinvoke $r8.<sun.util.logging.PlatformLogger$Level: void <init>(java.lang.String,int)>("OFF", 8);
        <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level OFF> = $r8;
        $r9 = newarray (sun.util.logging.PlatformLogger$Level)[9];
        $r10 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level ALL>;
        $r9[0] = $r10;
        $r11 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level FINEST>;
        $r9[1] = $r11;
        $r12 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level FINER>;
        $r9[2] = $r12;
        $r13 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level FINE>;
        $r9[3] = $r13;
        $r14 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level CONFIG>;
        $r9[4] = $r14;
        $r15 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level INFO>;
        $r9[5] = $r15;
        $r16 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level WARNING>;
        $r9[6] = $r16;
        $r17 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level SEVERE>;
        $r9[7] = $r17;
        $r18 = <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level OFF>;
        $r9[8] = $r18;
        <sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] $VALUES> = $r9;
        $r19 = newarray (int)[9];
        $r19[0] = -2147483648;
        $r19[1] = 300;
        $r19[2] = 400;
        $r19[3] = 500;
        $r19[4] = 700;
        $r19[5] = 800;
        $r19[6] = 900;
        $r19[7] = 1000;
        $r19[8] = 2147483647;
        <sun.util.logging.PlatformLogger$Level: int[] levelValues> = $r19;
        return;
    }
}
