public class org.apache.tomcat.util.buf.Utf8Decoder extends java.nio.charset.CharsetDecoder
{
    private static final int[] remainingBytes;
    private static final int[] remainingNumbers;
    private static final int[] lowerEncodingLimit;

    static void <clinit>()
    {
        int[] $r0, $r1, $r2;

        $r0 = newarray (int)[128];
        $r0[0] = -1;
        $r0[1] = -1;
        $r0[2] = -1;
        $r0[3] = -1;
        $r0[4] = -1;
        $r0[5] = -1;
        $r0[6] = -1;
        $r0[7] = -1;
        $r0[8] = -1;
        $r0[9] = -1;
        $r0[10] = -1;
        $r0[11] = -1;
        $r0[12] = -1;
        $r0[13] = -1;
        $r0[14] = -1;
        $r0[15] = -1;
        $r0[16] = -1;
        $r0[17] = -1;
        $r0[18] = -1;
        $r0[19] = -1;
        $r0[20] = -1;
        $r0[21] = -1;
        $r0[22] = -1;
        $r0[23] = -1;
        $r0[24] = -1;
        $r0[25] = -1;
        $r0[26] = -1;
        $r0[27] = -1;
        $r0[28] = -1;
        $r0[29] = -1;
        $r0[30] = -1;
        $r0[31] = -1;
        $r0[32] = -1;
        $r0[33] = -1;
        $r0[34] = -1;
        $r0[35] = -1;
        $r0[36] = -1;
        $r0[37] = -1;
        $r0[38] = -1;
        $r0[39] = -1;
        $r0[40] = -1;
        $r0[41] = -1;
        $r0[42] = -1;
        $r0[43] = -1;
        $r0[44] = -1;
        $r0[45] = -1;
        $r0[46] = -1;
        $r0[47] = -1;
        $r0[48] = -1;
        $r0[49] = -1;
        $r0[50] = -1;
        $r0[51] = -1;
        $r0[52] = -1;
        $r0[53] = -1;
        $r0[54] = -1;
        $r0[55] = -1;
        $r0[56] = -1;
        $r0[57] = -1;
        $r0[58] = -1;
        $r0[59] = -1;
        $r0[60] = -1;
        $r0[61] = -1;
        $r0[62] = -1;
        $r0[63] = -1;
        $r0[64] = -1;
        $r0[65] = -1;
        $r0[66] = 1;
        $r0[67] = 1;
        $r0[68] = 1;
        $r0[69] = 1;
        $r0[70] = 1;
        $r0[71] = 1;
        $r0[72] = 1;
        $r0[73] = 1;
        $r0[74] = 1;
        $r0[75] = 1;
        $r0[76] = 1;
        $r0[77] = 1;
        $r0[78] = 1;
        $r0[79] = 1;
        $r0[80] = 1;
        $r0[81] = 1;
        $r0[82] = 1;
        $r0[83] = 1;
        $r0[84] = 1;
        $r0[85] = 1;
        $r0[86] = 1;
        $r0[87] = 1;
        $r0[88] = 1;
        $r0[89] = 1;
        $r0[90] = 1;
        $r0[91] = 1;
        $r0[92] = 1;
        $r0[93] = 1;
        $r0[94] = 1;
        $r0[95] = 1;
        $r0[96] = 2;
        $r0[97] = 2;
        $r0[98] = 2;
        $r0[99] = 2;
        $r0[100] = 2;
        $r0[101] = 2;
        $r0[102] = 2;
        $r0[103] = 2;
        $r0[104] = 2;
        $r0[105] = 2;
        $r0[106] = 2;
        $r0[107] = 2;
        $r0[108] = 2;
        $r0[109] = 2;
        $r0[110] = 2;
        $r0[111] = 2;
        $r0[112] = 3;
        $r0[113] = 3;
        $r0[114] = 3;
        $r0[115] = 3;
        $r0[116] = 3;
        $r0[117] = -1;
        $r0[118] = -1;
        $r0[119] = -1;
        $r0[120] = -1;
        $r0[121] = -1;
        $r0[122] = -1;
        $r0[123] = -1;
        $r0[124] = -1;
        $r0[125] = -1;
        $r0[126] = -1;
        $r0[127] = -1;
        <org.apache.tomcat.util.buf.Utf8Decoder: int[] remainingBytes> = $r0;
        $r1 = newarray (int)[4];
        $r1[1] = 4224;
        $r1[2] = 401536;
        $r1[3] = 29892736;
        <org.apache.tomcat.util.buf.Utf8Decoder: int[] remainingNumbers> = $r1;
        $r2 = newarray (int)[4];
        $r2[0] = -1;
        $r2[1] = 128;
        $r2[2] = 2048;
        $r2[3] = 65536;
        <org.apache.tomcat.util.buf.Utf8Decoder: int[] lowerEncodingLimit> = $r2;
        return;
    }

    public void <init>()
    {
        org.apache.tomcat.util.buf.Utf8Decoder r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.tomcat.util.buf.Utf8Decoder;
        $r1 = <org.apache.tomcat.util.buf.B2CConverter: java.nio.charset.Charset UTF_8>;
        specialinvoke r0.<java.nio.charset.CharsetDecoder: void <init>(java.nio.charset.Charset,float,float)>($r1, 1.0F, 1.0F);
        return;
    }

    protected java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer)
    {
        org.apache.tomcat.util.buf.Utf8Decoder r0;
        java.nio.ByteBuffer r1;
        java.nio.CharBuffer r2;
        boolean $z0, $z1;
        java.nio.charset.CoderResult $r3, $r4;

        r0 := @this: org.apache.tomcat.util.buf.Utf8Decoder;
        r1 := @parameter0: java.nio.ByteBuffer;
        r2 := @parameter1: java.nio.CharBuffer;
        $z0 = virtualinvoke r1.<java.nio.ByteBuffer: boolean hasArray()>();
        if $z0 == 0 goto label0;

        $z1 = virtualinvoke r2.<java.nio.CharBuffer: boolean hasArray()>();
        if $z1 == 0 goto label0;

        $r3 = specialinvoke r0.<org.apache.tomcat.util.buf.Utf8Decoder: java.nio.charset.CoderResult decodeHasArray(java.nio.ByteBuffer,java.nio.CharBuffer)>(r1, r2);
        return $r3;

     label0:
        $r4 = specialinvoke r0.<org.apache.tomcat.util.buf.Utf8Decoder: java.nio.charset.CoderResult decodeNotHasArray(java.nio.ByteBuffer,java.nio.CharBuffer)>(r1, r2);
        return $r4;
    }

    private java.nio.charset.CoderResult decodeNotHasArray(java.nio.ByteBuffer, java.nio.CharBuffer)
    {
        org.apache.tomcat.util.buf.Utf8Decoder r0;
        java.nio.ByteBuffer r1;
        java.nio.CharBuffer r2;
        int i0, i1, i2, i3, i4, i5, i7, $i8, $i9, $i12, $i13, $i14, $i15, $i17, $i18, $i20, $i21;
        java.nio.charset.CoderResult r3, r7, r9, r11, r15, r17, r19, r22, r26;
        short s6, $s11;
        java.lang.Throwable r4, $r28;
        int[] $r6, $r13, $r14;
        byte $b10;
        char $c16, $c19, $c22;

        r0 := @this: org.apache.tomcat.util.buf.Utf8Decoder;
        r1 := @parameter0: java.nio.ByteBuffer;
        r2 := @parameter1: java.nio.CharBuffer;
        i0 = virtualinvoke r2.<java.nio.CharBuffer: int remaining()>();
        i1 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();
        i2 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

     label0:
        goto label23;

     label1:
        if i0 != 0 goto label3;

        r3 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;

     label2:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);
        return r3;

     label3:
        i3 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();
        if i3 >= 0 goto label14;

        i7 = i3 & 127;
        $r6 = <org.apache.tomcat.util.buf.Utf8Decoder: int[] remainingBytes>;
        i4 = $r6[i7];
        if i4 != -1 goto label5;

        r7 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);

     label4:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);
        return r7;

     label5:
        $i8 = i2 - i1;
        $i9 = 1 + i4;
        if $i8 >= $i9 goto label7;

        r9 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

     label6:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);
        return r9;

     label7:
        i5 = 0;
        goto label11;

     label8:
        $b10 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();
        s6 = $b10 & 255;
        $s11 = s6 & 192;
        if $s11 == 128 goto label10;

        $i12 = 1 + i5;
        r11 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>($i12);

     label9:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);
        return r11;

     label10:
        $i13 = i7 << 6;
        i7 = $i13 + s6;
        i5 = i5 + 1;

     label11:
        if i5 < i4 goto label8;

        $r13 = <org.apache.tomcat.util.buf.Utf8Decoder: int[] remainingNumbers>;
        $i14 = $r13[i4];
        i3 = i7 - $i14;
        $r14 = <org.apache.tomcat.util.buf.Utf8Decoder: int[] lowerEncodingLimit>;
        $i15 = $r14[i4];
        if i3 >= $i15 goto label13;

        r15 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);

     label12:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);
        return r15;

     label13:
        i1 = i1 + i4;

     label14:
        if i3 < 55296 goto label16;

        if i3 > 57343 goto label16;

        r17 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult unmappableForLength(int)>(3);

     label15:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);
        return r17;

     label16:
        if i3 <= 1114111 goto label18;

        r19 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult unmappableForLength(int)>(4);

     label17:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);
        return r19;

     label18:
        if i3 > 65535 goto label19;

        $c16 = (char) i3;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c16);
        i0 = i0 + -1;
        goto label22;

     label19:
        if i0 >= 2 goto label21;

        r22 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;

     label20:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);
        return r22;

     label21:
        $i17 = i3 >> 10;
        $i18 = $i17 + 55232;
        $c19 = (char) $i18;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c19);
        $i20 = i3 & 1023;
        $i21 = $i20 + 56320;
        $c22 = (char) $i21;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c22);
        i0 = i0 + -2;

     label22:
        i1 = i1 + 1;

     label23:
        if i1 < i2 goto label1;

        r26 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

     label24:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);
        return r26;

     label25:
        $r28 := @caughtexception;
        r4 = $r28;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);
        throw r4;

        catch java.lang.Throwable from label0 to label2 with label25;
        catch java.lang.Throwable from label3 to label4 with label25;
        catch java.lang.Throwable from label5 to label6 with label25;
        catch java.lang.Throwable from label7 to label9 with label25;
        catch java.lang.Throwable from label10 to label12 with label25;
        catch java.lang.Throwable from label13 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label20 with label25;
        catch java.lang.Throwable from label21 to label24 with label25;
    }

    private java.nio.charset.CoderResult decodeHasArray(java.nio.ByteBuffer, java.nio.CharBuffer)
    {
        org.apache.tomcat.util.buf.Utf8Decoder r0;
        java.nio.ByteBuffer r1;
        java.nio.CharBuffer r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i24, $i25, $i26, $i27, $i28, $i31, $i32, $i33, $i34, $i35, $i38, $i39, $i40, $i41, $i42, $i45, $i46, $i47, $i48, $i49, $i52, $i53, $i54, $i55, $i56, $i59, $i62, $i63, $i64, $i65, $i66, $i69, $i70, $i71, $i72, $i73, $i76, $i77, $i78, $i79, $i80, $i83, $i84, $i85, $i86, $i87, $i90, $i91, $i92, $i93, $i94, $i95, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, i112, $i113, $i114, $i115, $i116, i117, $i118, $i119, $i121, $i122, $i124, $i125, $i126, $i127;
        byte[] r3;
        char[] r4;
        short s10, $s23, $s30, $s37, $s44, $s51, $s58, $s61, $s68, $s75, $s82, $s89, $s97;
        int[] $r5, $r42, $r43;
        java.nio.charset.CoderResult $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r46, $r47, $r48, $r51, $r54;
        byte $b22, $b29, $b36, $b43, $b50, $b57, $b60, $b67, $b74, $b81, $b88, $b96;
        char $c111, $c120, $c123;

        r0 := @this: org.apache.tomcat.util.buf.Utf8Decoder;
        r1 := @parameter0: java.nio.ByteBuffer;
        r2 := @parameter1: java.nio.CharBuffer;
        i0 = virtualinvoke r2.<java.nio.CharBuffer: int remaining()>();
        i1 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();
        i2 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();
        r3 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();
        r4 = virtualinvoke r2.<java.nio.CharBuffer: char[] array()>();
        $i11 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        i3 = i2 + $i11;
        $i12 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        i4 = i1 + $i12;
        $i13 = virtualinvoke r2.<java.nio.CharBuffer: int position()>();
        $i14 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        i5 = $i13 + $i14;
        goto label24;

     label0:
        i6 = r3[i4];
        if i6 >= 0 goto label18;

        i15 = i6 & 127;
        $r5 = <org.apache.tomcat.util.buf.Utf8Decoder: int[] remainingBytes>;
        i7 = $r5[i15];
        if i7 != -1 goto label1;

        $i16 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i17 = i4 - $i16;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i17);
        $i18 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i19 = i5 - $i18;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i19);
        $r8 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);
        return $r8;

     label1:
        $i20 = i3 - i4;
        i8 = $i20 - 1;
        if i8 <= 0 goto label10;

        if i15 <= 65 goto label2;

        if i15 >= 96 goto label2;

        $i21 = i4 + 1;
        $b22 = r3[$i21];
        $s23 = $b22 & 192;
        if $s23 == 128 goto label2;

        $i24 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i25 = i4 - $i24;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i25);
        $i26 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i27 = i5 - $i26;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i27);
        $r11 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);
        return $r11;

     label2:
        if i15 != 96 goto label3;

        $i28 = i4 + 1;
        $b29 = r3[$i28];
        $s30 = $b29 & 224;
        if $s30 == 160 goto label3;

        $i31 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i32 = i4 - $i31;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i32);
        $i33 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i34 = i5 - $i33;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i34);
        $r14 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);
        return $r14;

     label3:
        if i15 <= 96 goto label4;

        if i15 >= 109 goto label4;

        $i35 = i4 + 1;
        $b36 = r3[$i35];
        $s37 = $b36 & 192;
        if $s37 == 128 goto label4;

        $i38 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i39 = i4 - $i38;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i39);
        $i40 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i41 = i5 - $i40;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i41);
        $r17 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);
        return $r17;

     label4:
        if i15 != 109 goto label5;

        $i42 = i4 + 1;
        $b43 = r3[$i42];
        $s44 = $b43 & 224;
        if $s44 == 128 goto label5;

        $i45 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i46 = i4 - $i45;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i46);
        $i47 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i48 = i5 - $i47;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i48);
        $r20 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);
        return $r20;

     label5:
        if i15 <= 109 goto label6;

        if i15 >= 112 goto label6;

        $i49 = i4 + 1;
        $b50 = r3[$i49];
        $s51 = $b50 & 192;
        if $s51 == 128 goto label6;

        $i52 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i53 = i4 - $i52;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i53);
        $i54 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i55 = i5 - $i54;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i55);
        $r23 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);
        return $r23;

     label6:
        if i15 != 112 goto label8;

        $i56 = i4 + 1;
        $b57 = r3[$i56];
        $s58 = $b57 & 255;
        if $s58 < 144 goto label7;

        $i59 = i4 + 1;
        $b60 = r3[$i59];
        $s61 = $b60 & 255;
        if $s61 <= 191 goto label8;

     label7:
        $i62 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i63 = i4 - $i62;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i63);
        $i64 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i65 = i5 - $i64;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i65);
        $r26 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);
        return $r26;

     label8:
        if i15 <= 112 goto label9;

        if i15 >= 116 goto label9;

        $i66 = i4 + 1;
        $b67 = r3[$i66];
        $s68 = $b67 & 192;
        if $s68 == 128 goto label9;

        $i69 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i70 = i4 - $i69;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i70);
        $i71 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i72 = i5 - $i71;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i72);
        $r29 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);
        return $r29;

     label9:
        if i15 != 116 goto label10;

        $i73 = i4 + 1;
        $b74 = r3[$i73];
        $s75 = $b74 & 240;
        if $s75 == 128 goto label10;

        $i76 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i77 = i4 - $i76;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i77);
        $i78 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i79 = i5 - $i78;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i79);
        $r32 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);
        return $r32;

     label10:
        if i8 <= 1 goto label11;

        if i7 <= 1 goto label11;

        $i80 = i4 + 2;
        $b81 = r3[$i80];
        $s82 = $b81 & 192;
        if $s82 == 128 goto label11;

        $i83 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i84 = i4 - $i83;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i84);
        $i85 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i86 = i5 - $i85;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i86);
        $r35 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(2);
        return $r35;

     label11:
        if i8 <= 2 goto label12;

        if i7 <= 2 goto label12;

        $i87 = i4 + 3;
        $b88 = r3[$i87];
        $s89 = $b88 & 192;
        if $s89 == 128 goto label12;

        $i90 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i91 = i4 - $i90;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i91);
        $i92 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i93 = i5 - $i92;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i93);
        $r38 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(3);
        return $r38;

     label12:
        if i8 >= i7 goto label13;

        goto label25;

     label13:
        i9 = 0;
        goto label16;

     label14:
        $i94 = i4 + i9;
        $i95 = $i94 + 1;
        $b96 = r3[$i95];
        s10 = $b96 & 255;
        $s97 = s10 & 192;
        if $s97 == 128 goto label15;

        $i98 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i99 = i4 - $i98;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i99);
        $i100 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i101 = i5 - $i100;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i101);
        $i102 = 1 + i9;
        $r41 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>($i102);
        return $r41;

     label15:
        $i103 = i15 << 6;
        i15 = $i103 + s10;
        i9 = i9 + 1;

     label16:
        if i9 < i7 goto label14;

        $r42 = <org.apache.tomcat.util.buf.Utf8Decoder: int[] remainingNumbers>;
        $i104 = $r42[i7];
        i6 = i15 - $i104;
        $r43 = <org.apache.tomcat.util.buf.Utf8Decoder: int[] lowerEncodingLimit>;
        $i105 = $r43[i7];
        if i6 >= $i105 goto label17;

        $i106 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i107 = i4 - $i106;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i107);
        $i108 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i109 = i5 - $i108;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i109);
        $r46 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>(1);
        return $r46;

     label17:
        i4 = i4 + i7;

     label18:
        if i6 < 55296 goto label19;

        if i6 > 57343 goto label19;

        $r47 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult unmappableForLength(int)>(3);
        return $r47;

     label19:
        if i6 <= 1114111 goto label20;

        $r48 = staticinvoke <java.nio.charset.CoderResult: java.nio.charset.CoderResult unmappableForLength(int)>(4);
        return $r48;

     label20:
        if i6 > 65535 goto label21;

        $i110 = i5;
        i5 = i5 + 1;
        $c111 = (char) i6;
        r4[$i110] = $c111;
        i0 = i0 + -1;
        goto label23;

     label21:
        if i0 >= 2 goto label22;

        i112 = i4 + -3;
        $i113 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i114 = i112 - $i113;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i114);
        $i115 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i116 = i5 - $i115;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i116);
        $r51 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;
        return $r51;

     label22:
        i117 = i5 + 1;
        $i118 = i6 >> 10;
        $i119 = $i118 + 55232;
        $c120 = (char) $i119;
        r4[i5] = $c120;
        i5 = i117 + 1;
        $i121 = i6 & 1023;
        $i122 = $i121 + 56320;
        $c123 = (char) $i122;
        r4[i117] = $c123;
        i0 = i0 + -2;

     label23:
        i4 = i4 + 1;

     label24:
        if i4 >= i3 goto label25;

        if i0 > 0 goto label0;

     label25:
        $i124 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();
        $i125 = i4 - $i124;
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i125);
        $i126 = virtualinvoke r2.<java.nio.CharBuffer: int arrayOffset()>();
        $i127 = i5 - $i126;
        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer position(int)>($i127);
        if i0 != 0 goto label26;

        if i4 >= i3 goto label26;

        $r54 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;
        goto label27;

     label26:
        $r54 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

     label27:
        return $r54;
    }
}
