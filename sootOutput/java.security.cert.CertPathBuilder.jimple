public class java.security.cert.CertPathBuilder extends java.lang.Object
{
    private static final java.lang.String CPB_TYPE;
    private static final sun.security.util.Debug debug;
    private java.security.cert.CertPathBuilderSpi builderSpi;
    private java.security.Provider provider;
    private java.lang.String algorithm;

    protected void <init>(java.security.cert.CertPathBuilderSpi, java.security.Provider, java.lang.String)
    {
        java.security.cert.CertPathBuilder r0;
        java.security.cert.CertPathBuilderSpi r1;
        java.security.Provider r2;
        java.lang.String r3;

        r0 := @this: java.security.cert.CertPathBuilder;
        r1 := @parameter0: java.security.cert.CertPathBuilderSpi;
        r2 := @parameter1: java.security.Provider;
        r3 := @parameter2: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilderSpi builderSpi> = r1;
        r0.<java.security.cert.CertPathBuilder: java.security.Provider provider> = r2;
        r0.<java.security.cert.CertPathBuilder: java.lang.String algorithm> = r3;
        return;
    }

    public static java.security.cert.CertPathBuilder getInstance(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        sun.security.jca.GetInstance$Instance r1;
        java.security.cert.CertPathBuilder $r2;
        java.lang.Object $r3;
        java.security.cert.CertPathBuilderSpi $r4;
        java.security.Provider $r5;

        r0 := @parameter0: java.lang.String;
        r1 = staticinvoke <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>("CertPathBuilder", class "java/security/cert/CertPathBuilderSpi", r0);
        $r2 = new java.security.cert.CertPathBuilder;
        $r3 = r1.<sun.security.jca.GetInstance$Instance: java.lang.Object impl>;
        $r4 = (java.security.cert.CertPathBuilderSpi) $r3;
        $r5 = r1.<sun.security.jca.GetInstance$Instance: java.security.Provider provider>;
        specialinvoke $r2.<java.security.cert.CertPathBuilder: void <init>(java.security.cert.CertPathBuilderSpi,java.security.Provider,java.lang.String)>($r4, $r5, r0);
        return $r2;
    }

    public static java.security.cert.CertPathBuilder getInstance(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException
    {
        java.lang.String r0, r1;
        sun.security.jca.GetInstance$Instance r2;
        java.security.cert.CertPathBuilder $r3;
        java.lang.Object $r4;
        java.security.cert.CertPathBuilderSpi $r5;
        java.security.Provider $r6;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 = staticinvoke <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.lang.String)>("CertPathBuilder", class "java/security/cert/CertPathBuilderSpi", r0, r1);
        $r3 = new java.security.cert.CertPathBuilder;
        $r4 = r2.<sun.security.jca.GetInstance$Instance: java.lang.Object impl>;
        $r5 = (java.security.cert.CertPathBuilderSpi) $r4;
        $r6 = r2.<sun.security.jca.GetInstance$Instance: java.security.Provider provider>;
        specialinvoke $r3.<java.security.cert.CertPathBuilder: void <init>(java.security.cert.CertPathBuilderSpi,java.security.Provider,java.lang.String)>($r5, $r6, r0);
        return $r3;
    }

    public static java.security.cert.CertPathBuilder getInstance(java.lang.String, java.security.Provider) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.security.Provider r1, $r6;
        sun.security.jca.GetInstance$Instance r2;
        java.security.cert.CertPathBuilder $r3;
        java.lang.Object $r4;
        java.security.cert.CertPathBuilderSpi $r5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.security.Provider;
        r2 = staticinvoke <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.security.Provider)>("CertPathBuilder", class "java/security/cert/CertPathBuilderSpi", r0, r1);
        $r3 = new java.security.cert.CertPathBuilder;
        $r4 = r2.<sun.security.jca.GetInstance$Instance: java.lang.Object impl>;
        $r5 = (java.security.cert.CertPathBuilderSpi) $r4;
        $r6 = r2.<sun.security.jca.GetInstance$Instance: java.security.Provider provider>;
        specialinvoke $r3.<java.security.cert.CertPathBuilder: void <init>(java.security.cert.CertPathBuilderSpi,java.security.Provider,java.lang.String)>($r5, $r6, r0);
        return $r3;
    }

    public final java.security.Provider getProvider()
    {
        java.security.cert.CertPathBuilder r0;
        java.security.Provider $r1;

        r0 := @this: java.security.cert.CertPathBuilder;
        $r1 = r0.<java.security.cert.CertPathBuilder: java.security.Provider provider>;
        return $r1;
    }

    public final java.lang.String getAlgorithm()
    {
        java.security.cert.CertPathBuilder r0;
        java.lang.String $r1;

        r0 := @this: java.security.cert.CertPathBuilder;
        $r1 = r0.<java.security.cert.CertPathBuilder: java.lang.String algorithm>;
        return $r1;
    }

    public final java.security.cert.CertPathBuilderResult build(java.security.cert.CertPathParameters) throws java.security.cert.CertPathBuilderException, java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.CertPathBuilder r0;
        java.security.cert.CertPathParameters r1;
        java.security.cert.CertPathBuilderSpi $r2;
        java.security.cert.CertPathBuilderResult $r3;

        r0 := @this: java.security.cert.CertPathBuilder;
        r1 := @parameter0: java.security.cert.CertPathParameters;
        $r2 = r0.<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilderSpi builderSpi>;
        $r3 = virtualinvoke $r2.<java.security.cert.CertPathBuilderSpi: java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)>(r1);
        return $r3;
    }

    public static final java.lang.String getDefaultType()
    {
        java.security.cert.CertPathBuilder$1 $r0;
        java.lang.String r1;
        java.lang.Object $r2;

        $r0 = new java.security.cert.CertPathBuilder$1;
        specialinvoke $r0.<java.security.cert.CertPathBuilder$1: void <init>()>();
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);
        r1 = (java.lang.String) $r2;
        if r1 != null goto label0;

        r1 = "PKIX";

     label0:
        return r1;
    }

    static void <clinit>()
    {
        sun.security.util.Debug $r0;

        $r0 = staticinvoke <sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String)>("certpath");
        <java.security.cert.CertPathBuilder: sun.security.util.Debug debug> = $r0;
        return;
    }
}
