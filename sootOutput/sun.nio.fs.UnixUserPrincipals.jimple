class sun.nio.fs.UnixUserPrincipals extends java.lang.Object
{
    static final sun.nio.fs.UnixUserPrincipals$User SPECIAL_OWNER;
    static final sun.nio.fs.UnixUserPrincipals$User SPECIAL_GROUP;
    static final sun.nio.fs.UnixUserPrincipals$User SPECIAL_EVERYONE;

    void <init>()
    {
        sun.nio.fs.UnixUserPrincipals r0;

        r0 := @this: sun.nio.fs.UnixUserPrincipals;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static sun.nio.fs.UnixUserPrincipals$User createSpecial(java.lang.String)
    {
        java.lang.String r0;
        sun.nio.fs.UnixUserPrincipals$User $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = new sun.nio.fs.UnixUserPrincipals$User;
        specialinvoke $r1.<sun.nio.fs.UnixUserPrincipals$User: void <init>(int,java.lang.String)>(-1, r0);
        return $r1;
    }

    static sun.nio.fs.UnixUserPrincipals$User fromUid(int)
    {
        int i0;
        null_type n0;
        sun.nio.fs.UnixException r0, $r4;
        java.lang.String $r1, r3;
        byte[] $r2;
        sun.nio.fs.UnixUserPrincipals$User $r5;

        i0 := @parameter0: int;
        n0 = null;

     label0:
        $r1 = new java.lang.String;
        $r2 = staticinvoke <sun.nio.fs.UnixNativeDispatcher: byte[] getpwuid(int)>(i0);
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);
        r3 = $r1;

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r0 = $r4;
        r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

     label3:
        $r5 = new sun.nio.fs.UnixUserPrincipals$User;
        specialinvoke $r5.<sun.nio.fs.UnixUserPrincipals$User: void <init>(int,java.lang.String)>(i0, r3);
        return $r5;

        catch sun.nio.fs.UnixException from label0 to label1 with label2;
    }

    static sun.nio.fs.UnixUserPrincipals$Group fromGid(int)
    {
        int i0;
        null_type n0;
        sun.nio.fs.UnixException r0, $r4;
        java.lang.String $r1, r3;
        byte[] $r2;
        sun.nio.fs.UnixUserPrincipals$Group $r5;

        i0 := @parameter0: int;
        n0 = null;

     label0:
        $r1 = new java.lang.String;
        $r2 = staticinvoke <sun.nio.fs.UnixNativeDispatcher: byte[] getgrgid(int)>(i0);
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);
        r3 = $r1;

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r0 = $r4;
        r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

     label3:
        $r5 = new sun.nio.fs.UnixUserPrincipals$Group;
        specialinvoke $r5.<sun.nio.fs.UnixUserPrincipals$Group: void <init>(int,java.lang.String)>(i0, r3);
        return $r5;

        catch sun.nio.fs.UnixException from label0 to label1 with label2;
    }

    private static int lookupName(java.lang.String, boolean) throws java.io.IOException
    {
        java.lang.String r0, $r9, $r11;
        boolean z0;
        java.lang.SecurityManager r1;
        java.lang.RuntimePermission $r2;
        byte b0;
        sun.nio.fs.UnixException r3, $r4;
        int $i1, i2;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r10;
        java.lang.NumberFormatException $r12, r13;
        java.nio.file.attribute.UserPrincipalNotFoundException $r14;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
        if r1 == null goto label0;

        $r2 = new java.lang.RuntimePermission;
        specialinvoke $r2.<java.lang.RuntimePermission: void <init>(java.lang.String)>("lookupUserInformation");
        virtualinvoke r1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r2);

     label0:
        b0 = -1;

     label1:
        if z0 == 0 goto label2;

        $i1 = staticinvoke <sun.nio.fs.UnixNativeDispatcher: int getgrnam(java.lang.String)>(r0);
        goto label3;

     label2:
        $i1 = staticinvoke <sun.nio.fs.UnixNativeDispatcher: int getpwnam(java.lang.String)>(r0);

     label3:
        i2 = $i1;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;
        r3 = $r4;
        $r5 = new java.io.IOException;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r9 = virtualinvoke r3.<sun.nio.fs.UnixException: java.lang.String errorString()>();
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r11);
        throw $r5;

     label6:
        if i2 != -1 goto label10;

     label7:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label8:
        goto label10;

     label9:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new java.nio.file.attribute.UserPrincipalNotFoundException;
        specialinvoke $r14.<java.nio.file.attribute.UserPrincipalNotFoundException: void <init>(java.lang.String)>(r0);
        throw $r14;

     label10:
        return i2;

        catch sun.nio.fs.UnixException from label1 to label4 with label5;
        catch java.lang.NumberFormatException from label7 to label8 with label9;
    }

    static java.nio.file.attribute.UserPrincipal lookupUser(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r2, $r5, $r8;
        sun.nio.fs.UnixUserPrincipals$User $r1, $r3, $r4, $r6, $r7, $r9, $r10;
        int i0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;
        $r1 = <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User SPECIAL_OWNER>;
        $r2 = virtualinvoke $r1.<sun.nio.fs.UnixUserPrincipals$User: java.lang.String getName()>();
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label0;

        $r3 = <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User SPECIAL_OWNER>;
        return $r3;

     label0:
        $r4 = <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User SPECIAL_GROUP>;
        $r5 = virtualinvoke $r4.<sun.nio.fs.UnixUserPrincipals$User: java.lang.String getName()>();
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z1 == 0 goto label1;

        $r6 = <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User SPECIAL_GROUP>;
        return $r6;

     label1:
        $r7 = <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User SPECIAL_EVERYONE>;
        $r8 = virtualinvoke $r7.<sun.nio.fs.UnixUserPrincipals$User: java.lang.String getName()>();
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        if $z2 == 0 goto label2;

        $r9 = <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User SPECIAL_EVERYONE>;
        return $r9;

     label2:
        i0 = staticinvoke <sun.nio.fs.UnixUserPrincipals: int lookupName(java.lang.String,boolean)>(r0, 0);
        $r10 = new sun.nio.fs.UnixUserPrincipals$User;
        specialinvoke $r10.<sun.nio.fs.UnixUserPrincipals$User: void <init>(int,java.lang.String)>(i0, r0);
        return $r10;
    }

    static java.nio.file.attribute.GroupPrincipal lookupGroup(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        int i0;
        sun.nio.fs.UnixUserPrincipals$Group $r1;

        r0 := @parameter0: java.lang.String;
        i0 = staticinvoke <sun.nio.fs.UnixUserPrincipals: int lookupName(java.lang.String,boolean)>(r0, 1);
        $r1 = new sun.nio.fs.UnixUserPrincipals$Group;
        specialinvoke $r1.<sun.nio.fs.UnixUserPrincipals$Group: void <init>(int,java.lang.String)>(i0, r0);
        return $r1;
    }

    static void <clinit>()
    {
        sun.nio.fs.UnixUserPrincipals$User $r0, $r1, $r2;

        $r0 = staticinvoke <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User createSpecial(java.lang.String)>("OWNER@");
        <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User SPECIAL_OWNER> = $r0;
        $r1 = staticinvoke <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User createSpecial(java.lang.String)>("GROUP@");
        <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User SPECIAL_GROUP> = $r1;
        $r2 = staticinvoke <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User createSpecial(java.lang.String)>("EVERYONE@");
        <sun.nio.fs.UnixUserPrincipals: sun.nio.fs.UnixUserPrincipals$User SPECIAL_EVERYONE> = $r2;
        return;
    }
}
