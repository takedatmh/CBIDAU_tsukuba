public final class javax.security.auth.x500.X500Principal extends java.lang.Object implements java.security.Principal, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final java.lang.String RFC1779;
    public static final java.lang.String RFC2253;
    public static final java.lang.String CANONICAL;
    private transient sun.security.x509.X500Name thisX500Name;

    void <init>(sun.security.x509.X500Name)
    {
        javax.security.auth.x500.X500Principal r0;
        sun.security.x509.X500Name r1;

        r0 := @this: javax.security.auth.x500.X500Principal;
        r1 := @parameter0: sun.security.x509.X500Name;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name> = r1;
        return;
    }

    public void <init>(java.lang.String)
    {
        javax.security.auth.x500.X500Principal r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: javax.security.auth.x500.X500Principal;
        r1 := @parameter0: java.lang.String;
        $r2 = <java.util.Collections: java.util.Map EMPTY_MAP>;
        specialinvoke r0.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String,java.util.Map)>(r1, $r2);
        return;
    }

    public void <init>(java.lang.String, java.util.Map)
    {
        javax.security.auth.x500.X500Principal r0;
        java.lang.String r1, $r6, $r8, $r15;
        java.util.Map r2;
        java.lang.Exception r3, $r10;
        java.lang.IllegalArgumentException r4, $r11;
        java.lang.NullPointerException $r5, $r7;
        sun.security.x509.X500Name $r9;
        java.lang.StringBuilder $r12, $r13, $r14;

        r0 := @this: javax.security.auth.x500.X500Principal;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Map;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r5 = new java.lang.NullPointerException;
        $r6 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("provided.null.name");
        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>($r6);
        throw $r5;

     label0:
        if r2 != null goto label1;

        $r7 = new java.lang.NullPointerException;
        $r8 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("provided.null.keyword.map");
        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>($r8);
        throw $r7;

     label1:
        $r9 = new sun.security.x509.X500Name;
        specialinvoke $r9.<sun.security.x509.X500Name: void <init>(java.lang.String,java.util.Map)>(r1, r2);
        r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name> = $r9;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r3 = $r10;
        $r11 = new java.lang.IllegalArgumentException;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("improperly specified input name: ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);
        r4 = $r11;
        virtualinvoke r4.<java.lang.IllegalArgumentException: java.lang.Throwable initCause(java.lang.Throwable)>(r3);
        throw r4;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>(byte[])
    {
        javax.security.auth.x500.X500Principal r0;
        byte[] r1;
        sun.security.x509.X500Name $r2;
        java.lang.Exception r3, $r5;
        java.lang.IllegalArgumentException r4, $r6;

        r0 := @this: javax.security.auth.x500.X500Principal;
        r1 := @parameter0: byte[];
        specialinvoke r0.<java.lang.Object: void <init>()>();

     label0:
        $r2 = new sun.security.x509.X500Name;
        specialinvoke $r2.<sun.security.x509.X500Name: void <init>(byte[])>(r1);
        r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name> = $r2;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = new java.lang.IllegalArgumentException;
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("improperly specified input name");
        r4 = $r6;
        virtualinvoke r4.<java.lang.IllegalArgumentException: java.lang.Throwable initCause(java.lang.Throwable)>(r3);
        throw r4;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void <init>(java.io.InputStream)
    {
        javax.security.auth.x500.X500Principal r0;
        java.io.InputStream r1;
        sun.security.util.DerValue r2, $r6;
        java.io.IOException r3, $r11;
        java.lang.IllegalArgumentException r4, $r12, $r14, r15;
        java.lang.NullPointerException $r5;
        boolean $z0, $z1;
        int $i0, $i1;
        sun.security.x509.X500Name $r7;
        sun.security.util.DerInputStream $r8;
        java.lang.Exception $r9, r10;

        r0 := @this: javax.security.auth.x500.X500Principal;
        r1 := @parameter0: java.io.InputStream;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 != null goto label0;

        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("provided null input stream");
        throw $r5;

     label0:
        $z0 = virtualinvoke r1.<java.io.InputStream: boolean markSupported()>();
        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.io.InputStream: int available()>();
        $i1 = $i0 + 1;
        virtualinvoke r1.<java.io.InputStream: void mark(int)>($i1);

     label1:
        $r6 = new sun.security.util.DerValue;
        specialinvoke $r6.<sun.security.util.DerValue: void <init>(java.io.InputStream)>(r1);
        r2 = $r6;
        $r7 = new sun.security.x509.X500Name;
        $r8 = r2.<sun.security.util.DerValue: sun.security.util.DerInputStream data>;
        specialinvoke $r7.<sun.security.x509.X500Name: void <init>(sun.security.util.DerInputStream)>($r8);
        r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name> = $r7;

     label2:
        goto label8;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;
        $z1 = virtualinvoke r1.<java.io.InputStream: boolean markSupported()>();
        if $z1 == 0 goto label7;

     label4:
        virtualinvoke r1.<java.io.InputStream: void reset()>();

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;
        r3 = $r11;
        $r12 = new java.lang.IllegalArgumentException;
        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("improperly specified input stream and unable to reset input stream");
        r4 = $r12;
        virtualinvoke r4.<java.lang.IllegalArgumentException: java.lang.Throwable initCause(java.lang.Throwable)>(r10);
        throw r4;

     label7:
        $r14 = new java.lang.IllegalArgumentException;
        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("improperly specified input stream");
        r15 = $r14;
        virtualinvoke r15.<java.lang.IllegalArgumentException: java.lang.Throwable initCause(java.lang.Throwable)>(r10);
        throw r15;

     label8:
        return;

        catch java.lang.Exception from label0 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public java.lang.String getName()
    {
        javax.security.auth.x500.X500Principal r0;
        java.lang.String $r1;

        r0 := @this: javax.security.auth.x500.X500Principal;
        $r1 = virtualinvoke r0.<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>("RFC2253");
        return $r1;
    }

    public java.lang.String getName(java.lang.String)
    {
        javax.security.auth.x500.X500Principal r0;
        java.lang.String r1, $r3, $r5, $r7;
        boolean $z0, $z1, $z2;
        sun.security.x509.X500Name $r2, $r4, $r6;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: javax.security.auth.x500.X500Principal;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RFC1779");
        if $z0 == 0 goto label0;

        $r2 = r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $r3 = virtualinvoke $r2.<sun.security.x509.X500Name: java.lang.String getRFC1779Name()>();
        return $r3;

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RFC2253");
        if $z1 == 0 goto label1;

        $r4 = r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $r5 = virtualinvoke $r4.<sun.security.x509.X500Name: java.lang.String getRFC2253Name()>();
        return $r5;

     label1:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("CANONICAL");
        if $z2 == 0 goto label2;

        $r6 = r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $r7 = virtualinvoke $r6.<sun.security.x509.X500Name: java.lang.String getRFC2253CanonicalName()>();
        return $r7;

     label2:
        $r8 = new java.lang.IllegalArgumentException;
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid format specified");
        throw $r8;
    }

    public java.lang.String getName(java.lang.String, java.util.Map)
    {
        javax.security.auth.x500.X500Principal r0;
        java.lang.String r1, $r4, $r6, $r8;
        java.util.Map r2;
        java.lang.NullPointerException $r3;
        boolean $z0, $z1;
        sun.security.x509.X500Name $r5, $r7;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: javax.security.auth.x500.X500Principal;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Map;
        if r2 != null goto label0;

        $r3 = new java.lang.NullPointerException;
        $r4 = staticinvoke <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>("provided.null.OID.map");
        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label0:
        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RFC1779");
        if $z0 == 0 goto label1;

        $r5 = r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $r6 = virtualinvoke $r5.<sun.security.x509.X500Name: java.lang.String getRFC1779Name(java.util.Map)>(r2);
        return $r6;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RFC2253");
        if $z1 == 0 goto label2;

        $r7 = r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $r8 = virtualinvoke $r7.<sun.security.x509.X500Name: java.lang.String getRFC2253Name(java.util.Map)>(r2);
        return $r8;

     label2:
        $r9 = new java.lang.IllegalArgumentException;
        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid format specified");
        throw $r9;
    }

    public byte[] getEncoded()
    {
        javax.security.auth.x500.X500Principal r0;
        java.io.IOException r1, $r4;
        sun.security.x509.X500Name $r2;
        byte[] $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: javax.security.auth.x500.X500Principal;

     label0:
        $r2 = r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $r3 = virtualinvoke $r2.<sun.security.x509.X500Name: byte[] getEncoded()>();

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = new java.lang.RuntimeException;
        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("unable to get encoding", r1);
        throw $r5;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public java.lang.String toString()
    {
        javax.security.auth.x500.X500Principal r0;
        sun.security.x509.X500Name $r1;
        java.lang.String $r2;

        r0 := @this: javax.security.auth.x500.X500Principal;
        $r1 = r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $r2 = virtualinvoke $r1.<sun.security.x509.X500Name: java.lang.String toString()>();
        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        javax.security.auth.x500.X500Principal r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        sun.security.x509.X500Name $r3, $r4;

        r0 := @this: javax.security.auth.x500.X500Principal;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof javax.security.auth.x500.X500Principal;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (javax.security.auth.x500.X500Principal) r1;
        $r3 = r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $r4 = r2.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $z1 = virtualinvoke $r3.<sun.security.x509.X500Name: boolean equals(java.lang.Object)>($r4);
        return $z1;
    }

    public int hashCode()
    {
        javax.security.auth.x500.X500Principal r0;
        sun.security.x509.X500Name $r1;
        int $i0;

        r0 := @this: javax.security.auth.x500.X500Principal;
        $r1 = r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $i0 = virtualinvoke $r1.<sun.security.x509.X500Name: int hashCode()>();
        return $i0;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        javax.security.auth.x500.X500Principal r0;
        java.io.ObjectOutputStream r1;
        sun.security.x509.X500Name $r2;
        byte[] $r3;

        r0 := @this: javax.security.auth.x500.X500Principal;
        r1 := @parameter0: java.io.ObjectOutputStream;
        $r2 = r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name>;
        $r3 = virtualinvoke $r2.<sun.security.x509.X500Name: byte[] getEncodedInternal()>();
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);
        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.io.NotActiveException, java.lang.ClassNotFoundException
    {
        javax.security.auth.x500.X500Principal r0;
        java.io.ObjectInputStream r1;
        sun.security.x509.X500Name $r2;
        java.lang.Object $r3;
        byte[] $r4, $r5;

        r0 := @this: javax.security.auth.x500.X500Principal;
        r1 := @parameter0: java.io.ObjectInputStream;
        $r2 = new sun.security.x509.X500Name;
        $r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r4 = (byte[]) $r3;
        $r5 = (byte[]) $r4;
        specialinvoke $r2.<sun.security.x509.X500Name: void <init>(byte[])>($r5);
        r0.<javax.security.auth.x500.X500Principal: sun.security.x509.X500Name thisX500Name> = $r2;
        return;
    }
}
