final class java.util.DualPivotQuicksort extends java.lang.Object
{
    private static final int MAX_RUN_COUNT;
    private static final int MAX_RUN_LENGTH;
    private static final int QUICKSORT_THRESHOLD;
    private static final int INSERTION_SORT_THRESHOLD;
    private static final int COUNTING_SORT_THRESHOLD_FOR_BYTE;
    private static final int COUNTING_SORT_THRESHOLD_FOR_SHORT_OR_CHAR;
    private static final int NUM_SHORT_VALUES;
    private static final int NUM_CHAR_VALUES;
    private static final int NUM_BYTE_VALUES;

    private void <init>()
    {
        java.util.DualPivotQuicksort r0;

        r0 := @this: java.util.DualPivotQuicksort;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void sort(int[])
    {
        int[] r0;
        int $i0, $i1;

        r0 := @parameter0: int[];
        $i0 = lengthof r0;
        $i1 = $i0 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(int[],int,int)>(r0, 0, $i1);
        return;
    }

    public static void sort(int[], int, int)
    {
        int[] r0, r1, r2, r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, $i28, $i29, $i30, $i31, i32, i34, $i35, $i37, i38, $i39, $i40, i42, i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, i53, $i54, i55, $i56;
        byte b33, $b36, $b41;

        r0 := @parameter0: int[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i12 = i1 - i0;
        if $i12 >= 286 goto label0;

        staticinvoke <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label0:
        r1 = newarray (int)[68];
        i2 = 0;
        r1[0] = i0;
        i3 = i0;

     label1:
        if i3 >= i1 goto label12;

        $i13 = r0[i3];
        $i14 = i3 + 1;
        $i15 = r0[$i14];
        if $i13 >= $i15 goto label3;

     label2:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i16 = i3 - 1;
        $i17 = r0[$i16];
        $i18 = r0[i3];
        if $i17 > $i18 goto label10;

        goto label2;

     label3:
        $i19 = r0[i3];
        $i20 = i3 + 1;
        $i21 = r0[$i20];
        if $i19 <= $i21 goto label8;

     label4:
        i3 = i3 + 1;
        if i3 > i1 goto label5;

        $i22 = i3 - 1;
        $i23 = r0[$i22];
        $i24 = r0[i3];
        if $i23 < $i24 goto label5;

        goto label4;

     label5:
        $i25 = r1[i2];
        i4 = $i25 - 1;
        i5 = i3;

     label6:
        i4 = i4 + 1;
        i5 = i5 + -1;
        if i4 >= i5 goto label7;

        i6 = r0[i4];
        $i26 = r0[i5];
        r0[i4] = $i26;
        r0[i5] = i6;
        goto label6;

     label7:
        goto label10;

     label8:
        i27 = 33;

     label9:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i28 = i3 - 1;
        $i29 = r0[$i28];
        $i30 = r0[i3];
        if $i29 != $i30 goto label10;

        i27 = i27 + -1;
        if i27 != 0 goto label9;

        staticinvoke <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label10:
        i2 = i2 + 1;
        if i2 != 67 goto label11;

        staticinvoke <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label11:
        r1[i2] = i3;
        goto label1;

     label12:
        $i31 = r1[i2];
        i32 = i1 + 1;
        if $i31 != i1 goto label13;

        i2 = i2 + 1;
        r1[i2] = i32;
        goto label14;

     label13:
        if i2 != 1 goto label14;

        return;

     label14:
        b33 = 0;
        i34 = 1;

     label15:
        $i35 = i34 << 1;
        i34 = $i35;
        if $i35 >= i2 goto label16;

        $b36 = b33 ^ 1;
        b33 = (byte) $b36;
        goto label15;

     label16:
        if b33 != 0 goto label19;

        r2 = r0;
        $i37 = lengthof r2;
        r0 = newarray (int)[$i37];
        i38 = i0 - 1;

     label17:
        i38 = i38 + 1;
        if i38 >= i32 goto label18;

        $i39 = r2[i38];
        r0[i38] = $i39;
        goto label17;

     label18:
        goto label20;

     label19:
        $i40 = lengthof r0;
        r2 = newarray (int)[$i40];

     label20:
        if i2 <= 1 goto label31;

        $b41 = 0;
        i42 = $b41;
        i43 = $b41 + 2;

     label21:
        if i43 > i2 goto label27;

        i7 = r1[i43];
        $i44 = i43 - 1;
        i8 = r1[$i44];
        $i45 = i43 - 2;
        i9 = r1[$i45];
        i10 = i9;
        i11 = i8;

     label22:
        if i9 >= i7 goto label26;

        if i11 >= i7 goto label23;

        if i10 >= i8 goto label24;

        $i46 = r0[i10];
        $i47 = r0[i11];
        if $i46 > $i47 goto label24;

     label23:
        $i48 = i10;
        i10 = i10 + 1;
        $i49 = r0[$i48];
        r2[i9] = $i49;
        goto label25;

     label24:
        $i50 = i11;
        i11 = i11 + 1;
        $i51 = r0[$i50];
        r2[i9] = $i51;

     label25:
        i9 = i9 + 1;
        goto label22;

     label26:
        i42 = i42 + 1;
        r1[i42] = i7;
        i43 = i43 + 2;
        goto label21;

     label27:
        $i52 = i2 & 1;
        if $i52 == 0 goto label30;

        i53 = i32;
        $i54 = i2 - 1;
        i55 = r1[$i54];

     label28:
        i53 = i53 + -1;
        if i53 < i55 goto label29;

        $i56 = r0[i53];
        r2[i53] = $i56;
        goto label28;

     label29:
        i42 = i42 + 1;
        r1[i42] = i32;

     label30:
        r3 = r0;
        r0 = r2;
        r2 = r3;
        i2 = i42;
        goto label20;

     label31:
        return;
    }

    private static void sort(int[], int, int, boolean)
    {
        int[] r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, $i29, $i30, $i31, i32, $i33, $i34, $i35, $i36, $i37, i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, $i47, i48, i49, $i50, $i51, $i52, $i53, $i54, i55, $i56, $i57, $i58, $i59, $i60, i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, i107, i108, $i109, $i110, $i111, $i112, $i113, $i114, i115, i116, $i117, i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125;
        boolean z0;

        r0 := @parameter0: int[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        $i15 = i1 - i0;
        i2 = $i15 + 1;
        if i2 >= 47 goto label15;

        if z0 == 0 goto label4;

        i3 = i0;
        i4 = i3;

     label0:
        if i3 >= i1 goto label3;

        $i16 = i3 + 1;
        i5 = r0[$i16];

     label1:
        $i17 = r0[i4];
        if i5 >= $i17 goto label2;

        $i18 = i4 + 1;
        $i19 = r0[i4];
        r0[$i18] = $i19;
        $i20 = i4;
        i4 = i4 + -1;
        if $i20 != i0 goto label1;

        goto label2;

     label2:
        $i21 = i4 + 1;
        r0[$i21] = i5;
        i3 = i3 + 1;
        i4 = i3;
        goto label0;

     label3:
        goto label14;

     label4:
        if i0 < i1 goto label5;

        return;

     label5:
        i0 = i0 + 1;
        $i22 = r0[i0];
        $i23 = i0 - 1;
        $i24 = r0[$i23];
        if $i22 >= $i24 goto label4;

        i25 = i0;

     label6:
        i26 = i0 + 1;
        if i26 > i1 goto label11;

        i27 = r0[i25];
        i28 = r0[i26];
        if i27 >= i28 goto label7;

        i28 = i27;
        i27 = r0[i26];

     label7:
        i25 = i25 + -1;
        $i29 = r0[i25];
        if i27 >= $i29 goto label8;

        $i30 = i25 + 2;
        $i31 = r0[i25];
        r0[$i30] = $i31;
        goto label7;

     label8:
        i32 = i25 + 1;
        $i33 = i32 + 1;
        r0[$i33] = i27;

     label9:
        i32 = i32 + -1;
        $i34 = r0[i32];
        if i28 >= $i34 goto label10;

        $i35 = i32 + 1;
        $i36 = r0[i32];
        r0[$i35] = $i36;
        goto label9;

     label10:
        $i37 = i32 + 1;
        r0[$i37] = i28;
        i0 = i26 + 1;
        i25 = i0;
        goto label6;

     label11:
        i38 = r0[i1];

     label12:
        i1 = i1 + -1;
        $i39 = r0[i1];
        if i38 >= $i39 goto label13;

        $i40 = i1 + 1;
        $i41 = r0[i1];
        r0[$i40] = $i41;
        goto label12;

     label13:
        $i42 = i1 + 1;
        r0[$i42] = i38;

     label14:
        return;

     label15:
        $i43 = i2 >> 3;
        $i44 = i2 >> 6;
        $i45 = $i43 + $i44;
        i46 = $i45 + 1;
        $i47 = i0 + i1;
        i48 = $i47 >>> 1;
        i49 = i48 - i46;
        i6 = i49 - i46;
        i7 = i48 + i46;
        i8 = i7 + i46;
        $i50 = r0[i49];
        $i51 = r0[i6];
        if $i50 >= $i51 goto label16;

        i9 = r0[i49];
        $i52 = r0[i6];
        r0[i49] = $i52;
        r0[i6] = i9;

     label16:
        $i53 = r0[i48];
        $i54 = r0[i49];
        if $i53 >= $i54 goto label17;

        i55 = r0[i48];
        $i56 = r0[i49];
        r0[i48] = $i56;
        r0[i49] = i55;
        $i57 = r0[i6];
        if i55 >= $i57 goto label17;

        $i58 = r0[i6];
        r0[i49] = $i58;
        r0[i6] = i55;

     label17:
        $i59 = r0[i7];
        $i60 = r0[i48];
        if $i59 >= $i60 goto label18;

        i61 = r0[i7];
        $i62 = r0[i48];
        r0[i7] = $i62;
        r0[i48] = i61;
        $i63 = r0[i49];
        if i61 >= $i63 goto label18;

        $i64 = r0[i49];
        r0[i48] = $i64;
        r0[i49] = i61;
        $i65 = r0[i6];
        if i61 >= $i65 goto label18;

        $i66 = r0[i6];
        r0[i49] = $i66;
        r0[i6] = i61;

     label18:
        $i67 = r0[i8];
        $i68 = r0[i7];
        if $i67 >= $i68 goto label19;

        i69 = r0[i8];
        $i70 = r0[i7];
        r0[i8] = $i70;
        r0[i7] = i69;
        $i71 = r0[i48];
        if i69 >= $i71 goto label19;

        $i72 = r0[i48];
        r0[i7] = $i72;
        r0[i48] = i69;
        $i73 = r0[i49];
        if i69 >= $i73 goto label19;

        $i74 = r0[i49];
        r0[i48] = $i74;
        r0[i49] = i69;
        $i75 = r0[i6];
        if i69 >= $i75 goto label19;

        $i76 = r0[i6];
        r0[i49] = $i76;
        r0[i6] = i69;

     label19:
        i77 = i0;
        i10 = i1;
        $i78 = r0[i6];
        $i79 = r0[i49];
        if $i78 == $i79 goto label42;

        $i80 = r0[i49];
        $i81 = r0[i48];
        if $i80 == $i81 goto label42;

        $i82 = r0[i48];
        $i83 = r0[i7];
        if $i82 == $i83 goto label42;

        $i84 = r0[i7];
        $i85 = r0[i8];
        if $i84 == $i85 goto label42;

        i11 = r0[i49];
        i12 = r0[i7];
        $i86 = r0[i0];
        r0[i49] = $i86;
        $i87 = r0[i1];
        r0[i7] = $i87;

     label20:
        i77 = i77 + 1;
        $i88 = r0[i77];
        if $i88 >= i11 goto label21;

        goto label20;

     label21:
        i10 = i10 + -1;
        $i89 = r0[i10];
        if $i89 <= i12 goto label22;

        goto label21;

     label22:
        i13 = i77 - 1;

     label23:
        i13 = i13 + 1;
        if i13 > i10 goto label30;

        i14 = r0[i13];
        if i14 >= i11 goto label24;

        $i90 = r0[i77];
        r0[i13] = $i90;
        r0[i77] = i14;
        i77 = i77 + 1;
        goto label29;

     label24:
        if i14 <= i12 goto label29;

     label25:
        $i91 = r0[i10];
        if $i91 <= i12 goto label26;

        $i92 = i10;
        i10 = i10 + -1;
        if $i92 != i13 goto label25;

        goto label30;

     label26:
        $i93 = r0[i10];
        if $i93 >= i11 goto label27;

        $i94 = r0[i77];
        r0[i13] = $i94;
        $i95 = r0[i10];
        r0[i77] = $i95;
        i77 = i77 + 1;
        goto label28;

     label27:
        $i96 = r0[i10];
        r0[i13] = $i96;

     label28:
        r0[i10] = i14;
        i10 = i10 + -1;

     label29:
        goto label23;

     label30:
        $i97 = i77 - 1;
        $i98 = r0[$i97];
        r0[i0] = $i98;
        $i99 = i77 - 1;
        r0[$i99] = i11;
        $i100 = i10 + 1;
        $i101 = r0[$i100];
        r0[i1] = $i101;
        $i102 = i10 + 1;
        r0[$i102] = i12;
        $i103 = i77 - 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>(r0, i0, $i103, z0);
        $i104 = i10 + 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>(r0, $i104, i1, 0);
        if i77 >= i6 goto label41;

        if i8 >= i10 goto label41;

     label31:
        $i105 = r0[i77];
        if $i105 != i11 goto label32;

        i77 = i77 + 1;
        goto label31;

     label32:
        $i106 = r0[i10];
        if $i106 != i12 goto label33;

        i10 = i10 + -1;
        goto label32;

     label33:
        i107 = i77 - 1;

     label34:
        i107 = i107 + 1;
        if i107 > i10 goto label41;

        i108 = r0[i107];
        if i108 != i11 goto label35;

        $i109 = r0[i77];
        r0[i107] = $i109;
        r0[i77] = i108;
        i77 = i77 + 1;
        goto label40;

     label35:
        if i108 != i12 goto label40;

     label36:
        $i110 = r0[i10];
        if $i110 != i12 goto label37;

        $i111 = i10;
        i10 = i10 + -1;
        if $i111 != i107 goto label36;

        goto label41;

     label37:
        $i112 = r0[i10];
        if $i112 != i11 goto label38;

        $i113 = r0[i77];
        r0[i107] = $i113;
        r0[i77] = i11;
        i77 = i77 + 1;
        goto label39;

     label38:
        $i114 = r0[i10];
        r0[i107] = $i114;

     label39:
        r0[i10] = i108;
        i10 = i10 + -1;

     label40:
        goto label34;

     label41:
        staticinvoke <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>(r0, i77, i10, 0);
        goto label51;

     label42:
        i115 = r0[i48];
        i116 = i77;

     label43:
        if i116 > i10 goto label50;

        $i117 = r0[i116];
        if $i117 != i115 goto label44;

        goto label49;

     label44:
        i118 = r0[i116];
        if i118 >= i115 goto label45;

        $i119 = r0[i77];
        r0[i116] = $i119;
        r0[i77] = i118;
        i77 = i77 + 1;
        goto label49;

     label45:
        $i120 = r0[i10];
        if $i120 <= i115 goto label46;

        i10 = i10 + -1;
        goto label45;

     label46:
        $i121 = r0[i10];
        if $i121 >= i115 goto label47;

        $i122 = r0[i77];
        r0[i116] = $i122;
        $i123 = r0[i10];
        r0[i77] = $i123;
        i77 = i77 + 1;
        goto label48;

     label47:
        r0[i116] = i115;

     label48:
        r0[i10] = i118;
        i10 = i10 + -1;

     label49:
        i116 = i116 + 1;
        goto label43;

     label50:
        $i124 = i77 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>(r0, i0, $i124, z0);
        $i125 = i10 + 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>(r0, $i125, i1, 0);

     label51:
        return;
    }

    public static void sort(long[])
    {
        long[] r0;
        int $i0, $i1;

        r0 := @parameter0: long[];
        $i0 = lengthof r0;
        $i1 = $i0 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(long[],int,int)>(r0, 0, $i1);
        return;
    }

    public static void sort(long[], int, int)
    {
        long[] r0, r2, r3;
        int i0, i1, i2, i3, i4, i5, i7, i8, i9, i10, i11, $i12, $i14, $i17, $i22, $i25, $i29, i31, $i32, $i36, i37, i39, $i40, $i42, i43, $i45, i47, i48, $i49, $i50, $i54, $i56, $i58, i59, $i60, i61;
        int[] r1;
        long l6, $l13, $l15, $l18, $l19, $l21, $l23, $l26, $l27, $l30, $l33, $l34, $l44, $l51, $l52, $l55, $l57, $l62;
        byte $b16, $b20, $b24, $b28, $b35, b38, $b41, $b46, $b53;

        r0 := @parameter0: long[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i12 = i1 - i0;
        if $i12 >= 286 goto label0;

        staticinvoke <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label0:
        r1 = newarray (int)[68];
        i2 = 0;
        r1[0] = i0;
        i3 = i0;

     label1:
        if i3 >= i1 goto label12;

        $l13 = r0[i3];
        $i14 = i3 + 1;
        $l15 = r0[$i14];
        $b16 = $l13 cmp $l15;
        if $b16 >= 0 goto label3;

     label2:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i17 = i3 - 1;
        $l18 = r0[$i17];
        $l19 = r0[i3];
        $b20 = $l18 cmp $l19;
        if $b20 > 0 goto label10;

        goto label2;

     label3:
        $l21 = r0[i3];
        $i22 = i3 + 1;
        $l23 = r0[$i22];
        $b24 = $l21 cmp $l23;
        if $b24 <= 0 goto label8;

     label4:
        i3 = i3 + 1;
        if i3 > i1 goto label5;

        $i25 = i3 - 1;
        $l26 = r0[$i25];
        $l27 = r0[i3];
        $b28 = $l26 cmp $l27;
        if $b28 < 0 goto label5;

        goto label4;

     label5:
        $i29 = r1[i2];
        i4 = $i29 - 1;
        i5 = i3;

     label6:
        i4 = i4 + 1;
        i5 = i5 + -1;
        if i4 >= i5 goto label7;

        l6 = r0[i4];
        $l30 = r0[i5];
        r0[i4] = $l30;
        r0[i5] = l6;
        goto label6;

     label7:
        goto label10;

     label8:
        i31 = 33;

     label9:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i32 = i3 - 1;
        $l33 = r0[$i32];
        $l34 = r0[i3];
        $b35 = $l33 cmp $l34;
        if $b35 != 0 goto label10;

        i31 = i31 + -1;
        if i31 != 0 goto label9;

        staticinvoke <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label10:
        i2 = i2 + 1;
        if i2 != 67 goto label11;

        staticinvoke <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label11:
        r1[i2] = i3;
        goto label1;

     label12:
        $i36 = r1[i2];
        i37 = i1 + 1;
        if $i36 != i1 goto label13;

        i2 = i2 + 1;
        r1[i2] = i37;
        goto label14;

     label13:
        if i2 != 1 goto label14;

        return;

     label14:
        b38 = 0;
        i39 = 1;

     label15:
        $i40 = i39 << 1;
        i39 = $i40;
        if $i40 >= i2 goto label16;

        $b41 = b38 ^ 1;
        b38 = (byte) $b41;
        goto label15;

     label16:
        if b38 != 0 goto label19;

        r2 = r0;
        $i42 = lengthof r2;
        r0 = newarray (long)[$i42];
        i43 = i0 - 1;

     label17:
        i43 = i43 + 1;
        if i43 >= i37 goto label18;

        $l44 = r2[i43];
        r0[i43] = $l44;
        goto label17;

     label18:
        goto label20;

     label19:
        $i45 = lengthof r0;
        r2 = newarray (long)[$i45];

     label20:
        if i2 <= 1 goto label31;

        $b46 = 0;
        i47 = $b46;
        i48 = $b46 + 2;

     label21:
        if i48 > i2 goto label27;

        i7 = r1[i48];
        $i49 = i48 - 1;
        i8 = r1[$i49];
        $i50 = i48 - 2;
        i9 = r1[$i50];
        i10 = i9;
        i11 = i8;

     label22:
        if i9 >= i7 goto label26;

        if i11 >= i7 goto label23;

        if i10 >= i8 goto label24;

        $l51 = r0[i10];
        $l52 = r0[i11];
        $b53 = $l51 cmp $l52;
        if $b53 > 0 goto label24;

     label23:
        $i54 = i10;
        i10 = i10 + 1;
        $l55 = r0[$i54];
        r2[i9] = $l55;
        goto label25;

     label24:
        $i56 = i11;
        i11 = i11 + 1;
        $l57 = r0[$i56];
        r2[i9] = $l57;

     label25:
        i9 = i9 + 1;
        goto label22;

     label26:
        i47 = i47 + 1;
        r1[i47] = i7;
        i48 = i48 + 2;
        goto label21;

     label27:
        $i58 = i2 & 1;
        if $i58 == 0 goto label30;

        i59 = i37;
        $i60 = i2 - 1;
        i61 = r1[$i60];

     label28:
        i59 = i59 + -1;
        if i59 < i61 goto label29;

        $l62 = r0[i59];
        r2[i59] = $l62;
        goto label28;

     label29:
        i47 = i47 + 1;
        r1[i47] = i37;

     label30:
        r3 = r0;
        r0 = r2;
        r2 = r3;
        i2 = i47;
        goto label20;

     label31:
        return;
    }

    private static void sort(long[], int, int, boolean)
    {
        long[] r0;
        int i0, i1, i2, i3, i4, i7, i8, i10, i13, $i16, $i17, $i20, $i22, $i23, $i25, i28, i29, $i34, i36, $i37, $i40, $i42, $i46, $i48, $i49, $i50, $i51, i52, $i53, i54, i55, i56, i94, $i118, $i124, $i126, $i127, $i129, $i130, $i131, i136, $i143, i149, $i160, $i161;
        boolean z0;
        long l5, l6, l9, l11, l12, l14, l15, $l18, $l21, $l24, $l26, l30, $l32, $l35, $l38, $l41, l43, $l44, $l47, $l57, $l58, $l60, $l61, $l62, l64, $l65, $l66, $l68, $l69, $l70, l72, $l73, $l74, $l76, $l77, $l79, $l80, $l81, l83, $l84, $l85, $l87, $l88, $l90, $l91, $l93, $l95, $l96, $l98, $l99, $l101, $l102, $l104, $l105, $l107, $l108, $l109, $l111, $l114, $l116, $l119, $l121, $l122, $l123, $l125, $l128, $l132, $l134, l137, $l139, $l141, $l144, $l146, $l147, l148, $l150, $l153, $l154, $l156, $l158, $l159;
        byte $b19, $b27, $b31, $b33, $b39, $b45, $b59, $b63, $b67, $b71, $b75, $b78, $b82, $b86, $b89, $b92, $b97, $b100, $b103, $b106, $b110, $b112, $b113, $b115, $b117, $b120, $b133, $b135, $b138, $b140, $b142, $b145, $b151, $b152, $b155, $b157;

        r0 := @parameter0: long[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        $i16 = i1 - i0;
        i2 = $i16 + 1;
        if i2 >= 47 goto label15;

        if z0 == 0 goto label4;

        i3 = i0;
        i4 = i3;

     label0:
        if i3 >= i1 goto label3;

        $i17 = i3 + 1;
        l5 = r0[$i17];

     label1:
        $l18 = r0[i4];
        $b19 = l5 cmp $l18;
        if $b19 >= 0 goto label2;

        $i20 = i4 + 1;
        $l21 = r0[i4];
        r0[$i20] = $l21;
        $i22 = i4;
        i4 = i4 + -1;
        if $i22 != i0 goto label1;

        goto label2;

     label2:
        $i23 = i4 + 1;
        r0[$i23] = l5;
        i3 = i3 + 1;
        i4 = i3;
        goto label0;

     label3:
        goto label14;

     label4:
        if i0 < i1 goto label5;

        return;

     label5:
        i0 = i0 + 1;
        $l24 = r0[i0];
        $i25 = i0 - 1;
        $l26 = r0[$i25];
        $b27 = $l24 cmp $l26;
        if $b27 >= 0 goto label4;

        i28 = i0;

     label6:
        i29 = i0 + 1;
        if i29 > i1 goto label11;

        l30 = r0[i28];
        l6 = r0[i29];
        $b31 = l30 cmp l6;
        if $b31 >= 0 goto label7;

        l6 = l30;
        l30 = r0[i29];

     label7:
        i28 = i28 + -1;
        $l32 = r0[i28];
        $b33 = l30 cmp $l32;
        if $b33 >= 0 goto label8;

        $i34 = i28 + 2;
        $l35 = r0[i28];
        r0[$i34] = $l35;
        goto label7;

     label8:
        i36 = i28 + 1;
        $i37 = i36 + 1;
        r0[$i37] = l30;

     label9:
        i36 = i36 + -1;
        $l38 = r0[i36];
        $b39 = l6 cmp $l38;
        if $b39 >= 0 goto label10;

        $i40 = i36 + 1;
        $l41 = r0[i36];
        r0[$i40] = $l41;
        goto label9;

     label10:
        $i42 = i36 + 1;
        r0[$i42] = l6;
        i0 = i29 + 1;
        i28 = i0;
        goto label6;

     label11:
        l43 = r0[i1];

     label12:
        i1 = i1 + -1;
        $l44 = r0[i1];
        $b45 = l43 cmp $l44;
        if $b45 >= 0 goto label13;

        $i46 = i1 + 1;
        $l47 = r0[i1];
        r0[$i46] = $l47;
        goto label12;

     label13:
        $i48 = i1 + 1;
        r0[$i48] = l43;

     label14:
        return;

     label15:
        $i49 = i2 >> 3;
        $i50 = i2 >> 6;
        $i51 = $i49 + $i50;
        i52 = $i51 + 1;
        $i53 = i0 + i1;
        i54 = $i53 >>> 1;
        i55 = i54 - i52;
        i56 = i55 - i52;
        i7 = i54 + i52;
        i8 = i7 + i52;
        $l57 = r0[i55];
        $l58 = r0[i56];
        $b59 = $l57 cmp $l58;
        if $b59 >= 0 goto label16;

        l9 = r0[i55];
        $l60 = r0[i56];
        r0[i55] = $l60;
        r0[i56] = l9;

     label16:
        $l61 = r0[i54];
        $l62 = r0[i55];
        $b63 = $l61 cmp $l62;
        if $b63 >= 0 goto label17;

        l64 = r0[i54];
        $l65 = r0[i55];
        r0[i54] = $l65;
        r0[i55] = l64;
        $l66 = r0[i56];
        $b67 = l64 cmp $l66;
        if $b67 >= 0 goto label17;

        $l68 = r0[i56];
        r0[i55] = $l68;
        r0[i56] = l64;

     label17:
        $l69 = r0[i7];
        $l70 = r0[i54];
        $b71 = $l69 cmp $l70;
        if $b71 >= 0 goto label18;

        l72 = r0[i7];
        $l73 = r0[i54];
        r0[i7] = $l73;
        r0[i54] = l72;
        $l74 = r0[i55];
        $b75 = l72 cmp $l74;
        if $b75 >= 0 goto label18;

        $l76 = r0[i55];
        r0[i54] = $l76;
        r0[i55] = l72;
        $l77 = r0[i56];
        $b78 = l72 cmp $l77;
        if $b78 >= 0 goto label18;

        $l79 = r0[i56];
        r0[i55] = $l79;
        r0[i56] = l72;

     label18:
        $l80 = r0[i8];
        $l81 = r0[i7];
        $b82 = $l80 cmp $l81;
        if $b82 >= 0 goto label19;

        l83 = r0[i8];
        $l84 = r0[i7];
        r0[i8] = $l84;
        r0[i7] = l83;
        $l85 = r0[i54];
        $b86 = l83 cmp $l85;
        if $b86 >= 0 goto label19;

        $l87 = r0[i54];
        r0[i7] = $l87;
        r0[i54] = l83;
        $l88 = r0[i55];
        $b89 = l83 cmp $l88;
        if $b89 >= 0 goto label19;

        $l90 = r0[i55];
        r0[i54] = $l90;
        r0[i55] = l83;
        $l91 = r0[i56];
        $b92 = l83 cmp $l91;
        if $b92 >= 0 goto label19;

        $l93 = r0[i56];
        r0[i55] = $l93;
        r0[i56] = l83;

     label19:
        i94 = i0;
        i10 = i1;
        $l95 = r0[i56];
        $l96 = r0[i55];
        $b97 = $l95 cmp $l96;
        if $b97 == 0 goto label42;

        $l98 = r0[i55];
        $l99 = r0[i54];
        $b100 = $l98 cmp $l99;
        if $b100 == 0 goto label42;

        $l101 = r0[i54];
        $l102 = r0[i7];
        $b103 = $l101 cmp $l102;
        if $b103 == 0 goto label42;

        $l104 = r0[i7];
        $l105 = r0[i8];
        $b106 = $l104 cmp $l105;
        if $b106 == 0 goto label42;

        l11 = r0[i55];
        l12 = r0[i7];
        $l107 = r0[i0];
        r0[i55] = $l107;
        $l108 = r0[i1];
        r0[i7] = $l108;

     label20:
        i94 = i94 + 1;
        $l109 = r0[i94];
        $b110 = $l109 cmp l11;
        if $b110 >= 0 goto label21;

        goto label20;

     label21:
        i10 = i10 + -1;
        $l111 = r0[i10];
        $b112 = $l111 cmp l12;
        if $b112 <= 0 goto label22;

        goto label21;

     label22:
        i13 = i94 - 1;

     label23:
        i13 = i13 + 1;
        if i13 > i10 goto label30;

        l14 = r0[i13];
        $b113 = l14 cmp l11;
        if $b113 >= 0 goto label24;

        $l114 = r0[i94];
        r0[i13] = $l114;
        r0[i94] = l14;
        i94 = i94 + 1;
        goto label29;

     label24:
        $b115 = l14 cmp l12;
        if $b115 <= 0 goto label29;

     label25:
        $l116 = r0[i10];
        $b117 = $l116 cmp l12;
        if $b117 <= 0 goto label26;

        $i118 = i10;
        i10 = i10 + -1;
        if $i118 != i13 goto label25;

        goto label30;

     label26:
        $l119 = r0[i10];
        $b120 = $l119 cmp l11;
        if $b120 >= 0 goto label27;

        $l121 = r0[i94];
        r0[i13] = $l121;
        $l122 = r0[i10];
        r0[i94] = $l122;
        i94 = i94 + 1;
        goto label28;

     label27:
        $l123 = r0[i10];
        r0[i13] = $l123;

     label28:
        r0[i10] = l14;
        i10 = i10 + -1;

     label29:
        goto label23;

     label30:
        $i124 = i94 - 1;
        $l125 = r0[$i124];
        r0[i0] = $l125;
        $i126 = i94 - 1;
        r0[$i126] = l11;
        $i127 = i10 + 1;
        $l128 = r0[$i127];
        r0[i1] = $l128;
        $i129 = i10 + 1;
        r0[$i129] = l12;
        $i130 = i94 - 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>(r0, i0, $i130, z0);
        $i131 = i10 + 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>(r0, $i131, i1, 0);
        if i94 >= i56 goto label41;

        if i8 >= i10 goto label41;

     label31:
        $l132 = r0[i94];
        $b133 = $l132 cmp l11;
        if $b133 != 0 goto label32;

        i94 = i94 + 1;
        goto label31;

     label32:
        $l134 = r0[i10];
        $b135 = $l134 cmp l12;
        if $b135 != 0 goto label33;

        i10 = i10 + -1;
        goto label32;

     label33:
        i136 = i94 - 1;

     label34:
        i136 = i136 + 1;
        if i136 > i10 goto label41;

        l137 = r0[i136];
        $b138 = l137 cmp l11;
        if $b138 != 0 goto label35;

        $l139 = r0[i94];
        r0[i136] = $l139;
        r0[i94] = l137;
        i94 = i94 + 1;
        goto label40;

     label35:
        $b140 = l137 cmp l12;
        if $b140 != 0 goto label40;

     label36:
        $l141 = r0[i10];
        $b142 = $l141 cmp l12;
        if $b142 != 0 goto label37;

        $i143 = i10;
        i10 = i10 + -1;
        if $i143 != i136 goto label36;

        goto label41;

     label37:
        $l144 = r0[i10];
        $b145 = $l144 cmp l11;
        if $b145 != 0 goto label38;

        $l146 = r0[i94];
        r0[i136] = $l146;
        r0[i94] = l11;
        i94 = i94 + 1;
        goto label39;

     label38:
        $l147 = r0[i10];
        r0[i136] = $l147;

     label39:
        r0[i10] = l137;
        i10 = i10 + -1;

     label40:
        goto label34;

     label41:
        staticinvoke <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>(r0, i94, i10, 0);
        goto label51;

     label42:
        l148 = r0[i54];
        i149 = i94;

     label43:
        if i149 > i10 goto label50;

        $l150 = r0[i149];
        $b151 = $l150 cmp l148;
        if $b151 != 0 goto label44;

        goto label49;

     label44:
        l15 = r0[i149];
        $b152 = l15 cmp l148;
        if $b152 >= 0 goto label45;

        $l153 = r0[i94];
        r0[i149] = $l153;
        r0[i94] = l15;
        i94 = i94 + 1;
        goto label49;

     label45:
        $l154 = r0[i10];
        $b155 = $l154 cmp l148;
        if $b155 <= 0 goto label46;

        i10 = i10 + -1;
        goto label45;

     label46:
        $l156 = r0[i10];
        $b157 = $l156 cmp l148;
        if $b157 >= 0 goto label47;

        $l158 = r0[i94];
        r0[i149] = $l158;
        $l159 = r0[i10];
        r0[i94] = $l159;
        i94 = i94 + 1;
        goto label48;

     label47:
        r0[i149] = l148;

     label48:
        r0[i10] = l15;
        i10 = i10 + -1;

     label49:
        i149 = i149 + 1;
        goto label43;

     label50:
        $i160 = i94 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>(r0, i0, $i160, z0);
        $i161 = i10 + 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>(r0, $i161, i1, 0);

     label51:
        return;
    }

    public static void sort(short[])
    {
        short[] r0;
        int $i0, $i1;

        r0 := @parameter0: short[];
        $i0 = lengthof r0;
        $i1 = $i0 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(short[],int,int)>(r0, 0, $i1);
        return;
    }

    public static void sort(short[], int, int)
    {
        short[] r0;
        int i0, i1, i2, i3, i5, $i6, $i8, $i9, $i10, i11, $i12, $i13;
        int[] r1;
        short s4, $s7;

        r0 := @parameter0: short[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i6 = i1 - i0;
        if $i6 <= 3200 goto label7;

        r1 = newarray (int)[65536];
        i2 = i0 - 1;

     label0:
        i2 = i2 + 1;
        if i2 > i1 goto label1;

        $s7 = r0[i2];
        $i8 = $s7 - -32768;
        $i9 = r1[$i8];
        $i10 = $i9 + 1;
        r1[$i8] = $i10;
        goto label0;

     label1:
        i11 = 65536;
        i3 = i1 + 1;

     label2:
        if i3 <= i0 goto label6;

     label3:
        i11 = i11 + -1;
        $i12 = r1[i11];
        if $i12 != 0 goto label4;

        goto label3;

     label4:
        $i13 = i11 + -32768;
        s4 = (short) $i13;
        i5 = r1[i11];

     label5:
        i3 = i3 + -1;
        r0[i3] = s4;
        i5 = i5 + -1;
        if i5 > 0 goto label5;

        goto label2;

     label6:
        goto label8;

     label7:
        staticinvoke <java.util.DualPivotQuicksort: void doSort(short[],int,int)>(r0, i0, i1);

     label8:
        return;
    }

    private static void doSort(short[], int, int)
    {
        short[] r0, r2, r3;
        int i0, i1, i2, i3, i4, i5, i7, i8, i9, i10, i11, $i12, $i14, $i16, $i20, $i22, $i25, i27, $i28, $i31, i32, i34, $i35, $i37, i38, $i40, i42, i43, $i44, $i45, $i48, $i50, $i52, i53, $i54, i55;
        int[] r1;
        short s6, $s13, $s15, $s17, $s18, $s19, $s21, $s23, $s24, $s26, $s29, $s30, $s39, $s46, $s47, $s49, $s51, $s56;
        byte b33, $b36, $b41;

        r0 := @parameter0: short[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i12 = i1 - i0;
        if $i12 >= 286 goto label0;

        staticinvoke <java.util.DualPivotQuicksort: void sort(short[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label0:
        r1 = newarray (int)[68];
        i2 = 0;
        r1[0] = i0;
        i3 = i0;

     label1:
        if i3 >= i1 goto label12;

        $s13 = r0[i3];
        $i14 = i3 + 1;
        $s15 = r0[$i14];
        if $s13 >= $s15 goto label3;

     label2:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i16 = i3 - 1;
        $s17 = r0[$i16];
        $s18 = r0[i3];
        if $s17 > $s18 goto label10;

        goto label2;

     label3:
        $s19 = r0[i3];
        $i20 = i3 + 1;
        $s21 = r0[$i20];
        if $s19 <= $s21 goto label8;

     label4:
        i3 = i3 + 1;
        if i3 > i1 goto label5;

        $i22 = i3 - 1;
        $s23 = r0[$i22];
        $s24 = r0[i3];
        if $s23 < $s24 goto label5;

        goto label4;

     label5:
        $i25 = r1[i2];
        i4 = $i25 - 1;
        i5 = i3;

     label6:
        i4 = i4 + 1;
        i5 = i5 + -1;
        if i4 >= i5 goto label7;

        s6 = r0[i4];
        $s26 = r0[i5];
        r0[i4] = $s26;
        r0[i5] = s6;
        goto label6;

     label7:
        goto label10;

     label8:
        i27 = 33;

     label9:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i28 = i3 - 1;
        $s29 = r0[$i28];
        $s30 = r0[i3];
        if $s29 != $s30 goto label10;

        i27 = i27 + -1;
        if i27 != 0 goto label9;

        staticinvoke <java.util.DualPivotQuicksort: void sort(short[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label10:
        i2 = i2 + 1;
        if i2 != 67 goto label11;

        staticinvoke <java.util.DualPivotQuicksort: void sort(short[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label11:
        r1[i2] = i3;
        goto label1;

     label12:
        $i31 = r1[i2];
        i32 = i1 + 1;
        if $i31 != i1 goto label13;

        i2 = i2 + 1;
        r1[i2] = i32;
        goto label14;

     label13:
        if i2 != 1 goto label14;

        return;

     label14:
        b33 = 0;
        i34 = 1;

     label15:
        $i35 = i34 << 1;
        i34 = $i35;
        if $i35 >= i2 goto label16;

        $b36 = b33 ^ 1;
        b33 = (byte) $b36;
        goto label15;

     label16:
        if b33 != 0 goto label19;

        r2 = r0;
        $i37 = lengthof r2;
        r0 = newarray (short)[$i37];
        i38 = i0 - 1;

     label17:
        i38 = i38 + 1;
        if i38 >= i32 goto label18;

        $s39 = r2[i38];
        r0[i38] = $s39;
        goto label17;

     label18:
        goto label20;

     label19:
        $i40 = lengthof r0;
        r2 = newarray (short)[$i40];

     label20:
        if i2 <= 1 goto label31;

        $b41 = 0;
        i42 = $b41;
        i43 = $b41 + 2;

     label21:
        if i43 > i2 goto label27;

        i7 = r1[i43];
        $i44 = i43 - 1;
        i8 = r1[$i44];
        $i45 = i43 - 2;
        i9 = r1[$i45];
        i10 = i9;
        i11 = i8;

     label22:
        if i9 >= i7 goto label26;

        if i11 >= i7 goto label23;

        if i10 >= i8 goto label24;

        $s46 = r0[i10];
        $s47 = r0[i11];
        if $s46 > $s47 goto label24;

     label23:
        $i48 = i10;
        i10 = i10 + 1;
        $s49 = r0[$i48];
        r2[i9] = $s49;
        goto label25;

     label24:
        $i50 = i11;
        i11 = i11 + 1;
        $s51 = r0[$i50];
        r2[i9] = $s51;

     label25:
        i9 = i9 + 1;
        goto label22;

     label26:
        i42 = i42 + 1;
        r1[i42] = i7;
        i43 = i43 + 2;
        goto label21;

     label27:
        $i52 = i2 & 1;
        if $i52 == 0 goto label30;

        i53 = i32;
        $i54 = i2 - 1;
        i55 = r1[$i54];

     label28:
        i53 = i53 + -1;
        if i53 < i55 goto label29;

        $s56 = r0[i53];
        r2[i53] = $s56;
        goto label28;

     label29:
        i42 = i42 + 1;
        r1[i42] = i32;

     label30:
        r3 = r0;
        r0 = r2;
        r2 = r3;
        i2 = i42;
        goto label20;

     label31:
        return;
    }

    private static void sort(short[], int, int, boolean)
    {
        short[] r0;
        int i0, i1, i2, i3, i4, i6, i7, i8, i10, i13, $i15, $i16, $i18, $i20, $i21, $i23, i25, i26, $i30, i32, $i33, $i35, $i37, $i40, $i42, $i43, $i44, $i45, i46, $i47, i48, i49, i77, $i92, $i97, $i99, $i100, $i102, $i103, $i104, i107, $i111, i116, $i124, $i125;
        boolean z0;
        short s5, s9, s11, s12, s14, $s17, $s19, $s22, $s24, s27, s28, $s29, $s31, $s34, $s36, s38, $s39, $s41, $s50, $s51, $s52, $s53, $s54, s55, $s56, $s57, $s58, $s59, $s60, s61, $s62, $s63, $s64, $s65, $s66, $s67, $s68, s69, $s70, $s71, $s72, $s73, $s74, $s75, $s76, $s78, $s79, $s80, $s81, $s82, $s83, $s84, $s85, $s86, $s87, $s88, $s89, $s90, $s91, $s93, $s94, $s95, $s96, $s98, $s101, $s105, $s106, s108, $s109, $s110, $s112, $s113, $s114, s115, $s117, s118, $s119, $s120, $s121, $s122, $s123;

        r0 := @parameter0: short[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        $i15 = i1 - i0;
        i2 = $i15 + 1;
        if i2 >= 47 goto label15;

        if z0 == 0 goto label4;

        i3 = i0;
        i4 = i3;

     label0:
        if i3 >= i1 goto label3;

        $i16 = i3 + 1;
        s5 = r0[$i16];

     label1:
        $s17 = r0[i4];
        if s5 >= $s17 goto label2;

        $i18 = i4 + 1;
        $s19 = r0[i4];
        r0[$i18] = $s19;
        $i20 = i4;
        i4 = i4 + -1;
        if $i20 != i0 goto label1;

        goto label2;

     label2:
        $i21 = i4 + 1;
        r0[$i21] = s5;
        i3 = i3 + 1;
        i4 = i3;
        goto label0;

     label3:
        goto label14;

     label4:
        if i0 < i1 goto label5;

        return;

     label5:
        i0 = i0 + 1;
        $s22 = r0[i0];
        $i23 = i0 - 1;
        $s24 = r0[$i23];
        if $s22 >= $s24 goto label4;

        i25 = i0;

     label6:
        i26 = i0 + 1;
        if i26 > i1 goto label11;

        s27 = r0[i25];
        s28 = r0[i26];
        if s27 >= s28 goto label7;

        s28 = s27;
        s27 = r0[i26];

     label7:
        i25 = i25 + -1;
        $s29 = r0[i25];
        if s27 >= $s29 goto label8;

        $i30 = i25 + 2;
        $s31 = r0[i25];
        r0[$i30] = $s31;
        goto label7;

     label8:
        i32 = i25 + 1;
        $i33 = i32 + 1;
        r0[$i33] = s27;

     label9:
        i32 = i32 + -1;
        $s34 = r0[i32];
        if s28 >= $s34 goto label10;

        $i35 = i32 + 1;
        $s36 = r0[i32];
        r0[$i35] = $s36;
        goto label9;

     label10:
        $i37 = i32 + 1;
        r0[$i37] = s28;
        i0 = i26 + 1;
        i25 = i0;
        goto label6;

     label11:
        s38 = r0[i1];

     label12:
        i1 = i1 + -1;
        $s39 = r0[i1];
        if s38 >= $s39 goto label13;

        $i40 = i1 + 1;
        $s41 = r0[i1];
        r0[$i40] = $s41;
        goto label12;

     label13:
        $i42 = i1 + 1;
        r0[$i42] = s38;

     label14:
        return;

     label15:
        $i43 = i2 >> 3;
        $i44 = i2 >> 6;
        $i45 = $i43 + $i44;
        i46 = $i45 + 1;
        $i47 = i0 + i1;
        i48 = $i47 >>> 1;
        i49 = i48 - i46;
        i6 = i49 - i46;
        i7 = i48 + i46;
        i8 = i7 + i46;
        $s50 = r0[i49];
        $s51 = r0[i6];
        if $s50 >= $s51 goto label16;

        s9 = r0[i49];
        $s52 = r0[i6];
        r0[i49] = $s52;
        r0[i6] = s9;

     label16:
        $s53 = r0[i48];
        $s54 = r0[i49];
        if $s53 >= $s54 goto label17;

        s55 = r0[i48];
        $s56 = r0[i49];
        r0[i48] = $s56;
        r0[i49] = s55;
        $s57 = r0[i6];
        if s55 >= $s57 goto label17;

        $s58 = r0[i6];
        r0[i49] = $s58;
        r0[i6] = s55;

     label17:
        $s59 = r0[i7];
        $s60 = r0[i48];
        if $s59 >= $s60 goto label18;

        s61 = r0[i7];
        $s62 = r0[i48];
        r0[i7] = $s62;
        r0[i48] = s61;
        $s63 = r0[i49];
        if s61 >= $s63 goto label18;

        $s64 = r0[i49];
        r0[i48] = $s64;
        r0[i49] = s61;
        $s65 = r0[i6];
        if s61 >= $s65 goto label18;

        $s66 = r0[i6];
        r0[i49] = $s66;
        r0[i6] = s61;

     label18:
        $s67 = r0[i8];
        $s68 = r0[i7];
        if $s67 >= $s68 goto label19;

        s69 = r0[i8];
        $s70 = r0[i7];
        r0[i8] = $s70;
        r0[i7] = s69;
        $s71 = r0[i48];
        if s69 >= $s71 goto label19;

        $s72 = r0[i48];
        r0[i7] = $s72;
        r0[i48] = s69;
        $s73 = r0[i49];
        if s69 >= $s73 goto label19;

        $s74 = r0[i49];
        r0[i48] = $s74;
        r0[i49] = s69;
        $s75 = r0[i6];
        if s69 >= $s75 goto label19;

        $s76 = r0[i6];
        r0[i49] = $s76;
        r0[i6] = s69;

     label19:
        i77 = i0;
        i10 = i1;
        $s78 = r0[i6];
        $s79 = r0[i49];
        if $s78 == $s79 goto label42;

        $s80 = r0[i49];
        $s81 = r0[i48];
        if $s80 == $s81 goto label42;

        $s82 = r0[i48];
        $s83 = r0[i7];
        if $s82 == $s83 goto label42;

        $s84 = r0[i7];
        $s85 = r0[i8];
        if $s84 == $s85 goto label42;

        s11 = r0[i49];
        s12 = r0[i7];
        $s86 = r0[i0];
        r0[i49] = $s86;
        $s87 = r0[i1];
        r0[i7] = $s87;

     label20:
        i77 = i77 + 1;
        $s88 = r0[i77];
        if $s88 >= s11 goto label21;

        goto label20;

     label21:
        i10 = i10 + -1;
        $s89 = r0[i10];
        if $s89 <= s12 goto label22;

        goto label21;

     label22:
        i13 = i77 - 1;

     label23:
        i13 = i13 + 1;
        if i13 > i10 goto label30;

        s14 = r0[i13];
        if s14 >= s11 goto label24;

        $s90 = r0[i77];
        r0[i13] = $s90;
        r0[i77] = s14;
        i77 = i77 + 1;
        goto label29;

     label24:
        if s14 <= s12 goto label29;

     label25:
        $s91 = r0[i10];
        if $s91 <= s12 goto label26;

        $i92 = i10;
        i10 = i10 + -1;
        if $i92 != i13 goto label25;

        goto label30;

     label26:
        $s93 = r0[i10];
        if $s93 >= s11 goto label27;

        $s94 = r0[i77];
        r0[i13] = $s94;
        $s95 = r0[i10];
        r0[i77] = $s95;
        i77 = i77 + 1;
        goto label28;

     label27:
        $s96 = r0[i10];
        r0[i13] = $s96;

     label28:
        r0[i10] = s14;
        i10 = i10 + -1;

     label29:
        goto label23;

     label30:
        $i97 = i77 - 1;
        $s98 = r0[$i97];
        r0[i0] = $s98;
        $i99 = i77 - 1;
        r0[$i99] = s11;
        $i100 = i10 + 1;
        $s101 = r0[$i100];
        r0[i1] = $s101;
        $i102 = i10 + 1;
        r0[$i102] = s12;
        $i103 = i77 - 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(short[],int,int,boolean)>(r0, i0, $i103, z0);
        $i104 = i10 + 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(short[],int,int,boolean)>(r0, $i104, i1, 0);
        if i77 >= i6 goto label41;

        if i8 >= i10 goto label41;

     label31:
        $s105 = r0[i77];
        if $s105 != s11 goto label32;

        i77 = i77 + 1;
        goto label31;

     label32:
        $s106 = r0[i10];
        if $s106 != s12 goto label33;

        i10 = i10 + -1;
        goto label32;

     label33:
        i107 = i77 - 1;

     label34:
        i107 = i107 + 1;
        if i107 > i10 goto label41;

        s108 = r0[i107];
        if s108 != s11 goto label35;

        $s109 = r0[i77];
        r0[i107] = $s109;
        r0[i77] = s108;
        i77 = i77 + 1;
        goto label40;

     label35:
        if s108 != s12 goto label40;

     label36:
        $s110 = r0[i10];
        if $s110 != s12 goto label37;

        $i111 = i10;
        i10 = i10 + -1;
        if $i111 != i107 goto label36;

        goto label41;

     label37:
        $s112 = r0[i10];
        if $s112 != s11 goto label38;

        $s113 = r0[i77];
        r0[i107] = $s113;
        r0[i77] = s11;
        i77 = i77 + 1;
        goto label39;

     label38:
        $s114 = r0[i10];
        r0[i107] = $s114;

     label39:
        r0[i10] = s108;
        i10 = i10 + -1;

     label40:
        goto label34;

     label41:
        staticinvoke <java.util.DualPivotQuicksort: void sort(short[],int,int,boolean)>(r0, i77, i10, 0);
        goto label51;

     label42:
        s115 = r0[i48];
        i116 = i77;

     label43:
        if i116 > i10 goto label50;

        $s117 = r0[i116];
        if $s117 != s115 goto label44;

        goto label49;

     label44:
        s118 = r0[i116];
        if s118 >= s115 goto label45;

        $s119 = r0[i77];
        r0[i116] = $s119;
        r0[i77] = s118;
        i77 = i77 + 1;
        goto label49;

     label45:
        $s120 = r0[i10];
        if $s120 <= s115 goto label46;

        i10 = i10 + -1;
        goto label45;

     label46:
        $s121 = r0[i10];
        if $s121 >= s115 goto label47;

        $s122 = r0[i77];
        r0[i116] = $s122;
        $s123 = r0[i10];
        r0[i77] = $s123;
        i77 = i77 + 1;
        goto label48;

     label47:
        r0[i116] = s115;

     label48:
        r0[i10] = s118;
        i10 = i10 + -1;

     label49:
        i116 = i116 + 1;
        goto label43;

     label50:
        $i124 = i77 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(short[],int,int,boolean)>(r0, i0, $i124, z0);
        $i125 = i10 + 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(short[],int,int,boolean)>(r0, $i125, i1, 0);

     label51:
        return;
    }

    public static void sort(char[])
    {
        char[] r0;
        int $i0, $i1;

        r0 := @parameter0: char[];
        $i0 = lengthof r0;
        $i1 = $i0 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(char[],int,int)>(r0, 0, $i1);
        return;
    }

    public static void sort(char[], int, int)
    {
        char[] r0;
        int i0, i1, i2, i3, i5, $i6, $i8, $i9, i10, $i11;
        int[] r1;
        char c4, $c7;

        r0 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i6 = i1 - i0;
        if $i6 <= 3200 goto label7;

        r1 = newarray (int)[65536];
        i2 = i0 - 1;

     label0:
        i2 = i2 + 1;
        if i2 > i1 goto label1;

        $c7 = r0[i2];
        $i8 = r1[$c7];
        $i9 = $i8 + 1;
        r1[$c7] = $i9;
        goto label0;

     label1:
        i10 = 65536;
        i3 = i1 + 1;

     label2:
        if i3 <= i0 goto label6;

     label3:
        i10 = i10 + -1;
        $i11 = r1[i10];
        if $i11 != 0 goto label4;

        goto label3;

     label4:
        c4 = (char) i10;
        i5 = r1[i10];

     label5:
        i3 = i3 + -1;
        r0[i3] = c4;
        i5 = i5 + -1;
        if i5 > 0 goto label5;

        goto label2;

     label6:
        goto label8;

     label7:
        staticinvoke <java.util.DualPivotQuicksort: void doSort(char[],int,int)>(r0, i0, i1);

     label8:
        return;
    }

    private static void doSort(char[], int, int)
    {
        char[] r0, r2, r3;
        int i0, i1, i2, i3, i4, i5, i7, i8, i9, i10, i11, $i12, $i14, $i16, $i20, $i22, $i25, i27, $i28, $i31, i32, i34, $i35, $i37, i38, $i40, i42, i43, $i44, $i45, $i48, $i50, $i52, i53, $i54, i55;
        int[] r1;
        char c6, $c13, $c15, $c17, $c18, $c19, $c21, $c23, $c24, $c26, $c29, $c30, $c39, $c46, $c47, $c49, $c51, $c56;
        byte b33, $b36, $b41;

        r0 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i12 = i1 - i0;
        if $i12 >= 286 goto label0;

        staticinvoke <java.util.DualPivotQuicksort: void sort(char[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label0:
        r1 = newarray (int)[68];
        i2 = 0;
        r1[0] = i0;
        i3 = i0;

     label1:
        if i3 >= i1 goto label12;

        $c13 = r0[i3];
        $i14 = i3 + 1;
        $c15 = r0[$i14];
        if $c13 >= $c15 goto label3;

     label2:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i16 = i3 - 1;
        $c17 = r0[$i16];
        $c18 = r0[i3];
        if $c17 > $c18 goto label10;

        goto label2;

     label3:
        $c19 = r0[i3];
        $i20 = i3 + 1;
        $c21 = r0[$i20];
        if $c19 <= $c21 goto label8;

     label4:
        i3 = i3 + 1;
        if i3 > i1 goto label5;

        $i22 = i3 - 1;
        $c23 = r0[$i22];
        $c24 = r0[i3];
        if $c23 < $c24 goto label5;

        goto label4;

     label5:
        $i25 = r1[i2];
        i4 = $i25 - 1;
        i5 = i3;

     label6:
        i4 = i4 + 1;
        i5 = i5 + -1;
        if i4 >= i5 goto label7;

        c6 = r0[i4];
        $c26 = r0[i5];
        r0[i4] = $c26;
        r0[i5] = c6;
        goto label6;

     label7:
        goto label10;

     label8:
        i27 = 33;

     label9:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i28 = i3 - 1;
        $c29 = r0[$i28];
        $c30 = r0[i3];
        if $c29 != $c30 goto label10;

        i27 = i27 + -1;
        if i27 != 0 goto label9;

        staticinvoke <java.util.DualPivotQuicksort: void sort(char[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label10:
        i2 = i2 + 1;
        if i2 != 67 goto label11;

        staticinvoke <java.util.DualPivotQuicksort: void sort(char[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label11:
        r1[i2] = i3;
        goto label1;

     label12:
        $i31 = r1[i2];
        i32 = i1 + 1;
        if $i31 != i1 goto label13;

        i2 = i2 + 1;
        r1[i2] = i32;
        goto label14;

     label13:
        if i2 != 1 goto label14;

        return;

     label14:
        b33 = 0;
        i34 = 1;

     label15:
        $i35 = i34 << 1;
        i34 = $i35;
        if $i35 >= i2 goto label16;

        $b36 = b33 ^ 1;
        b33 = (byte) $b36;
        goto label15;

     label16:
        if b33 != 0 goto label19;

        r2 = r0;
        $i37 = lengthof r2;
        r0 = newarray (char)[$i37];
        i38 = i0 - 1;

     label17:
        i38 = i38 + 1;
        if i38 >= i32 goto label18;

        $c39 = r2[i38];
        r0[i38] = $c39;
        goto label17;

     label18:
        goto label20;

     label19:
        $i40 = lengthof r0;
        r2 = newarray (char)[$i40];

     label20:
        if i2 <= 1 goto label31;

        $b41 = 0;
        i42 = $b41;
        i43 = $b41 + 2;

     label21:
        if i43 > i2 goto label27;

        i7 = r1[i43];
        $i44 = i43 - 1;
        i8 = r1[$i44];
        $i45 = i43 - 2;
        i9 = r1[$i45];
        i10 = i9;
        i11 = i8;

     label22:
        if i9 >= i7 goto label26;

        if i11 >= i7 goto label23;

        if i10 >= i8 goto label24;

        $c46 = r0[i10];
        $c47 = r0[i11];
        if $c46 > $c47 goto label24;

     label23:
        $i48 = i10;
        i10 = i10 + 1;
        $c49 = r0[$i48];
        r2[i9] = $c49;
        goto label25;

     label24:
        $i50 = i11;
        i11 = i11 + 1;
        $c51 = r0[$i50];
        r2[i9] = $c51;

     label25:
        i9 = i9 + 1;
        goto label22;

     label26:
        i42 = i42 + 1;
        r1[i42] = i7;
        i43 = i43 + 2;
        goto label21;

     label27:
        $i52 = i2 & 1;
        if $i52 == 0 goto label30;

        i53 = i32;
        $i54 = i2 - 1;
        i55 = r1[$i54];

     label28:
        i53 = i53 + -1;
        if i53 < i55 goto label29;

        $c56 = r0[i53];
        r2[i53] = $c56;
        goto label28;

     label29:
        i42 = i42 + 1;
        r1[i42] = i32;

     label30:
        r3 = r0;
        r0 = r2;
        r2 = r3;
        i2 = i42;
        goto label20;

     label31:
        return;
    }

    private static void sort(char[], int, int, boolean)
    {
        char[] r0;
        int i0, i1, i2, i3, i4, i6, i7, i8, i10, i13, $i15, $i16, $i18, $i20, $i21, $i23, i25, i26, $i30, i32, $i33, $i35, $i37, $i40, $i42, $i43, $i44, $i45, i46, $i47, i48, i49, i77, $i92, $i97, $i99, $i100, $i102, $i103, $i104, i107, $i111, i116, $i124, $i125;
        boolean z0;
        char c5, c9, c11, c12, c14, $c17, $c19, $c22, $c24, c27, c28, $c29, $c31, $c34, $c36, c38, $c39, $c41, $c50, $c51, $c52, $c53, $c54, c55, $c56, $c57, $c58, $c59, $c60, c61, $c62, $c63, $c64, $c65, $c66, $c67, $c68, c69, $c70, $c71, $c72, $c73, $c74, $c75, $c76, $c78, $c79, $c80, $c81, $c82, $c83, $c84, $c85, $c86, $c87, $c88, $c89, $c90, $c91, $c93, $c94, $c95, $c96, $c98, $c101, $c105, $c106, c108, $c109, $c110, $c112, $c113, $c114, c115, $c117, c118, $c119, $c120, $c121, $c122, $c123;

        r0 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        $i15 = i1 - i0;
        i2 = $i15 + 1;
        if i2 >= 47 goto label15;

        if z0 == 0 goto label4;

        i3 = i0;
        i4 = i3;

     label0:
        if i3 >= i1 goto label3;

        $i16 = i3 + 1;
        c5 = r0[$i16];

     label1:
        $c17 = r0[i4];
        if c5 >= $c17 goto label2;

        $i18 = i4 + 1;
        $c19 = r0[i4];
        r0[$i18] = $c19;
        $i20 = i4;
        i4 = i4 + -1;
        if $i20 != i0 goto label1;

        goto label2;

     label2:
        $i21 = i4 + 1;
        r0[$i21] = c5;
        i3 = i3 + 1;
        i4 = i3;
        goto label0;

     label3:
        goto label14;

     label4:
        if i0 < i1 goto label5;

        return;

     label5:
        i0 = i0 + 1;
        $c22 = r0[i0];
        $i23 = i0 - 1;
        $c24 = r0[$i23];
        if $c22 >= $c24 goto label4;

        i25 = i0;

     label6:
        i26 = i0 + 1;
        if i26 > i1 goto label11;

        c27 = r0[i25];
        c28 = r0[i26];
        if c27 >= c28 goto label7;

        c28 = c27;
        c27 = r0[i26];

     label7:
        i25 = i25 + -1;
        $c29 = r0[i25];
        if c27 >= $c29 goto label8;

        $i30 = i25 + 2;
        $c31 = r0[i25];
        r0[$i30] = $c31;
        goto label7;

     label8:
        i32 = i25 + 1;
        $i33 = i32 + 1;
        r0[$i33] = c27;

     label9:
        i32 = i32 + -1;
        $c34 = r0[i32];
        if c28 >= $c34 goto label10;

        $i35 = i32 + 1;
        $c36 = r0[i32];
        r0[$i35] = $c36;
        goto label9;

     label10:
        $i37 = i32 + 1;
        r0[$i37] = c28;
        i0 = i26 + 1;
        i25 = i0;
        goto label6;

     label11:
        c38 = r0[i1];

     label12:
        i1 = i1 + -1;
        $c39 = r0[i1];
        if c38 >= $c39 goto label13;

        $i40 = i1 + 1;
        $c41 = r0[i1];
        r0[$i40] = $c41;
        goto label12;

     label13:
        $i42 = i1 + 1;
        r0[$i42] = c38;

     label14:
        return;

     label15:
        $i43 = i2 >> 3;
        $i44 = i2 >> 6;
        $i45 = $i43 + $i44;
        i46 = $i45 + 1;
        $i47 = i0 + i1;
        i48 = $i47 >>> 1;
        i49 = i48 - i46;
        i6 = i49 - i46;
        i7 = i48 + i46;
        i8 = i7 + i46;
        $c50 = r0[i49];
        $c51 = r0[i6];
        if $c50 >= $c51 goto label16;

        c9 = r0[i49];
        $c52 = r0[i6];
        r0[i49] = $c52;
        r0[i6] = c9;

     label16:
        $c53 = r0[i48];
        $c54 = r0[i49];
        if $c53 >= $c54 goto label17;

        c55 = r0[i48];
        $c56 = r0[i49];
        r0[i48] = $c56;
        r0[i49] = c55;
        $c57 = r0[i6];
        if c55 >= $c57 goto label17;

        $c58 = r0[i6];
        r0[i49] = $c58;
        r0[i6] = c55;

     label17:
        $c59 = r0[i7];
        $c60 = r0[i48];
        if $c59 >= $c60 goto label18;

        c61 = r0[i7];
        $c62 = r0[i48];
        r0[i7] = $c62;
        r0[i48] = c61;
        $c63 = r0[i49];
        if c61 >= $c63 goto label18;

        $c64 = r0[i49];
        r0[i48] = $c64;
        r0[i49] = c61;
        $c65 = r0[i6];
        if c61 >= $c65 goto label18;

        $c66 = r0[i6];
        r0[i49] = $c66;
        r0[i6] = c61;

     label18:
        $c67 = r0[i8];
        $c68 = r0[i7];
        if $c67 >= $c68 goto label19;

        c69 = r0[i8];
        $c70 = r0[i7];
        r0[i8] = $c70;
        r0[i7] = c69;
        $c71 = r0[i48];
        if c69 >= $c71 goto label19;

        $c72 = r0[i48];
        r0[i7] = $c72;
        r0[i48] = c69;
        $c73 = r0[i49];
        if c69 >= $c73 goto label19;

        $c74 = r0[i49];
        r0[i48] = $c74;
        r0[i49] = c69;
        $c75 = r0[i6];
        if c69 >= $c75 goto label19;

        $c76 = r0[i6];
        r0[i49] = $c76;
        r0[i6] = c69;

     label19:
        i77 = i0;
        i10 = i1;
        $c78 = r0[i6];
        $c79 = r0[i49];
        if $c78 == $c79 goto label42;

        $c80 = r0[i49];
        $c81 = r0[i48];
        if $c80 == $c81 goto label42;

        $c82 = r0[i48];
        $c83 = r0[i7];
        if $c82 == $c83 goto label42;

        $c84 = r0[i7];
        $c85 = r0[i8];
        if $c84 == $c85 goto label42;

        c11 = r0[i49];
        c12 = r0[i7];
        $c86 = r0[i0];
        r0[i49] = $c86;
        $c87 = r0[i1];
        r0[i7] = $c87;

     label20:
        i77 = i77 + 1;
        $c88 = r0[i77];
        if $c88 >= c11 goto label21;

        goto label20;

     label21:
        i10 = i10 + -1;
        $c89 = r0[i10];
        if $c89 <= c12 goto label22;

        goto label21;

     label22:
        i13 = i77 - 1;

     label23:
        i13 = i13 + 1;
        if i13 > i10 goto label30;

        c14 = r0[i13];
        if c14 >= c11 goto label24;

        $c90 = r0[i77];
        r0[i13] = $c90;
        r0[i77] = c14;
        i77 = i77 + 1;
        goto label29;

     label24:
        if c14 <= c12 goto label29;

     label25:
        $c91 = r0[i10];
        if $c91 <= c12 goto label26;

        $i92 = i10;
        i10 = i10 + -1;
        if $i92 != i13 goto label25;

        goto label30;

     label26:
        $c93 = r0[i10];
        if $c93 >= c11 goto label27;

        $c94 = r0[i77];
        r0[i13] = $c94;
        $c95 = r0[i10];
        r0[i77] = $c95;
        i77 = i77 + 1;
        goto label28;

     label27:
        $c96 = r0[i10];
        r0[i13] = $c96;

     label28:
        r0[i10] = c14;
        i10 = i10 + -1;

     label29:
        goto label23;

     label30:
        $i97 = i77 - 1;
        $c98 = r0[$i97];
        r0[i0] = $c98;
        $i99 = i77 - 1;
        r0[$i99] = c11;
        $i100 = i10 + 1;
        $c101 = r0[$i100];
        r0[i1] = $c101;
        $i102 = i10 + 1;
        r0[$i102] = c12;
        $i103 = i77 - 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(char[],int,int,boolean)>(r0, i0, $i103, z0);
        $i104 = i10 + 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(char[],int,int,boolean)>(r0, $i104, i1, 0);
        if i77 >= i6 goto label41;

        if i8 >= i10 goto label41;

     label31:
        $c105 = r0[i77];
        if $c105 != c11 goto label32;

        i77 = i77 + 1;
        goto label31;

     label32:
        $c106 = r0[i10];
        if $c106 != c12 goto label33;

        i10 = i10 + -1;
        goto label32;

     label33:
        i107 = i77 - 1;

     label34:
        i107 = i107 + 1;
        if i107 > i10 goto label41;

        c108 = r0[i107];
        if c108 != c11 goto label35;

        $c109 = r0[i77];
        r0[i107] = $c109;
        r0[i77] = c108;
        i77 = i77 + 1;
        goto label40;

     label35:
        if c108 != c12 goto label40;

     label36:
        $c110 = r0[i10];
        if $c110 != c12 goto label37;

        $i111 = i10;
        i10 = i10 + -1;
        if $i111 != i107 goto label36;

        goto label41;

     label37:
        $c112 = r0[i10];
        if $c112 != c11 goto label38;

        $c113 = r0[i77];
        r0[i107] = $c113;
        r0[i77] = c11;
        i77 = i77 + 1;
        goto label39;

     label38:
        $c114 = r0[i10];
        r0[i107] = $c114;

     label39:
        r0[i10] = c108;
        i10 = i10 + -1;

     label40:
        goto label34;

     label41:
        staticinvoke <java.util.DualPivotQuicksort: void sort(char[],int,int,boolean)>(r0, i77, i10, 0);
        goto label51;

     label42:
        c115 = r0[i48];
        i116 = i77;

     label43:
        if i116 > i10 goto label50;

        $c117 = r0[i116];
        if $c117 != c115 goto label44;

        goto label49;

     label44:
        c118 = r0[i116];
        if c118 >= c115 goto label45;

        $c119 = r0[i77];
        r0[i116] = $c119;
        r0[i77] = c118;
        i77 = i77 + 1;
        goto label49;

     label45:
        $c120 = r0[i10];
        if $c120 <= c115 goto label46;

        i10 = i10 + -1;
        goto label45;

     label46:
        $c121 = r0[i10];
        if $c121 >= c115 goto label47;

        $c122 = r0[i77];
        r0[i116] = $c122;
        $c123 = r0[i10];
        r0[i77] = $c123;
        i77 = i77 + 1;
        goto label48;

     label47:
        r0[i116] = c115;

     label48:
        r0[i10] = c118;
        i10 = i10 + -1;

     label49:
        i116 = i116 + 1;
        goto label43;

     label50:
        $i124 = i77 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(char[],int,int,boolean)>(r0, i0, $i124, z0);
        $i125 = i10 + 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(char[],int,int,boolean)>(r0, $i125, i1, 0);

     label51:
        return;
    }

    public static void sort(byte[])
    {
        byte[] r0;
        int $i0, $i1;

        r0 := @parameter0: byte[];
        $i0 = lengthof r0;
        $i1 = $i0 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(byte[],int,int)>(r0, 0, $i1);
        return;
    }

    public static void sort(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, i5, $i6, $i8, $i9, $i10, i11, $i12, $i13, i14, i15, $i16, $i19, $i21, $i22;
        int[] r1;
        byte b4, $b7, b17, $b18, $b20;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i6 = i1 - i0;
        if $i6 <= 29 goto label7;

        r1 = newarray (int)[256];
        i2 = i0 - 1;

     label0:
        i2 = i2 + 1;
        if i2 > i1 goto label1;

        $b7 = r0[i2];
        $i8 = $b7 - -128;
        $i9 = r1[$i8];
        $i10 = $i9 + 1;
        r1[$i8] = $i10;
        goto label0;

     label1:
        i11 = 256;
        i3 = i1 + 1;

     label2:
        if i3 <= i0 goto label6;

     label3:
        i11 = i11 + -1;
        $i12 = r1[i11];
        if $i12 != 0 goto label4;

        goto label3;

     label4:
        $i13 = i11 + -128;
        b4 = (byte) $i13;
        i5 = r1[i11];

     label5:
        i3 = i3 + -1;
        r0[i3] = b4;
        i5 = i5 + -1;
        if i5 > 0 goto label5;

        goto label2;

     label6:
        goto label11;

     label7:
        i14 = i0;
        i15 = i14;

     label8:
        if i14 >= i1 goto label11;

        $i16 = i14 + 1;
        b17 = r0[$i16];

     label9:
        $b18 = r0[i15];
        if b17 >= $b18 goto label10;

        $i19 = i15 + 1;
        $b20 = r0[i15];
        r0[$i19] = $b20;
        $i21 = i15;
        i15 = i15 + -1;
        if $i21 != i0 goto label9;

        goto label10;

     label10:
        $i22 = i15 + 1;
        r0[$i22] = b17;
        i14 = i14 + 1;
        i15 = i14;
        goto label8;

     label11:
        return;
    }

    public static void sort(float[])
    {
        float[] r0;
        int $i0, $i1;

        r0 := @parameter0: float[];
        $i0 = lengthof r0;
        $i1 = $i0 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(float[],int,int)>(r0, 0, $i1);
        return;
    }

    public static void sort(float[], int, int)
    {
        float[] r0;
        int i0, i1, i2, i4, $i5, i6, $i8, i9, i10, $i12;
        float f0, f1, f2, $f3, $f4, $f5;
        boolean $z0;
        byte $b3, $b7, $b11;

        r0 := @parameter0: float[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;

     label0:
        if i0 > i1 goto label1;

        $f3 = r0[i1];
        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);
        if $z0 == 0 goto label1;

        i1 = i1 + -1;
        goto label0;

     label1:
        i2 = i1;

     label2:
        i2 = i2 + -1;
        if i2 < i0 goto label4;

        f0 = r0[i2];
        $b3 = f0 cmpl f0;
        if $b3 == 0 goto label3;

        $f4 = r0[i1];
        r0[i2] = $f4;
        r0[i1] = f0;
        i1 = i1 + -1;

     label3:
        goto label2;

     label4:
        staticinvoke <java.util.DualPivotQuicksort: void doSort(float[],int,int)>(r0, i0, i1);
        i4 = i1;

     label5:
        if i0 >= i4 goto label8;

        $i5 = i0 + i4;
        i6 = $i5 >>> 1;
        f1 = r0[i6];
        $b7 = f1 cmpg 0.0F;
        if $b7 >= 0 goto label6;

        i0 = i6 + 1;
        goto label7;

     label6:
        i4 = i6;

     label7:
        goto label5;

     label8:
        if i0 > i1 goto label9;

        $f5 = r0[i0];
        $i8 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f5);
        if $i8 >= 0 goto label9;

        i0 = i0 + 1;
        goto label8;

     label9:
        i9 = i0;
        i10 = i0 - 1;

     label10:
        i9 = i9 + 1;
        if i9 > i1 goto label13;

        f2 = r0[i9];
        $b11 = f2 cmpl 0.0F;
        if $b11 == 0 goto label11;

        goto label13;

     label11:
        $i12 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f2);
        if $i12 >= 0 goto label12;

        r0[i9] = 0.0F;
        i10 = i10 + 1;
        r0[i10] = -0.0F;

     label12:
        goto label10;

     label13:
        return;
    }

    private static void doSort(float[], int, int)
    {
        float[] r0, r2, r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i14, $i16, $i18, $i20, i21, $i22, $i24, i25, i27, $i28, $i30, i31, $i32, i34, i35, $i36, $i37, $i39, $i40, $i41, i42, $i43, i44;
        int[] r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        byte $b13, $b15, $b17, $b19, $b23, b26, $b29, $b33, $b38;

        r0 := @parameter0: float[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i11 = i1 - i0;
        if $i11 >= 286 goto label0;

        staticinvoke <java.util.DualPivotQuicksort: void sort(float[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label0:
        r1 = newarray (int)[68];
        i2 = 0;
        r1[0] = i0;
        i3 = i0;

     label1:
        if i3 >= i1 goto label12;

        $f1 = r0[i3];
        $i12 = i3 + 1;
        $f2 = r0[$i12];
        $b13 = $f1 cmpg $f2;
        if $b13 >= 0 goto label3;

     label2:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i14 = i3 - 1;
        $f3 = r0[$i14];
        $f4 = r0[i3];
        $b15 = $f3 cmpg $f4;
        if $b15 > 0 goto label10;

        goto label2;

     label3:
        $f5 = r0[i3];
        $i16 = i3 + 1;
        $f6 = r0[$i16];
        $b17 = $f5 cmpl $f6;
        if $b17 <= 0 goto label8;

     label4:
        i3 = i3 + 1;
        if i3 > i1 goto label5;

        $i18 = i3 - 1;
        $f7 = r0[$i18];
        $f8 = r0[i3];
        $b19 = $f7 cmpl $f8;
        if $b19 < 0 goto label5;

        goto label4;

     label5:
        $i20 = r1[i2];
        i4 = $i20 - 1;
        i5 = i3;

     label6:
        i4 = i4 + 1;
        i5 = i5 + -1;
        if i4 >= i5 goto label7;

        f0 = r0[i4];
        $f9 = r0[i5];
        r0[i4] = $f9;
        r0[i5] = f0;
        goto label6;

     label7:
        goto label10;

     label8:
        i21 = 33;

     label9:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i22 = i3 - 1;
        $f10 = r0[$i22];
        $f11 = r0[i3];
        $b23 = $f10 cmpl $f11;
        if $b23 != 0 goto label10;

        i21 = i21 + -1;
        if i21 != 0 goto label9;

        staticinvoke <java.util.DualPivotQuicksort: void sort(float[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label10:
        i2 = i2 + 1;
        if i2 != 67 goto label11;

        staticinvoke <java.util.DualPivotQuicksort: void sort(float[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label11:
        r1[i2] = i3;
        goto label1;

     label12:
        $i24 = r1[i2];
        i25 = i1 + 1;
        if $i24 != i1 goto label13;

        i2 = i2 + 1;
        r1[i2] = i25;
        goto label14;

     label13:
        if i2 != 1 goto label14;

        return;

     label14:
        b26 = 0;
        i27 = 1;

     label15:
        $i28 = i27 << 1;
        i27 = $i28;
        if $i28 >= i2 goto label16;

        $b29 = b26 ^ 1;
        b26 = (byte) $b29;
        goto label15;

     label16:
        if b26 != 0 goto label19;

        r2 = r0;
        $i30 = lengthof r2;
        r0 = newarray (float)[$i30];
        i31 = i0 - 1;

     label17:
        i31 = i31 + 1;
        if i31 >= i25 goto label18;

        $f12 = r2[i31];
        r0[i31] = $f12;
        goto label17;

     label18:
        goto label20;

     label19:
        $i32 = lengthof r0;
        r2 = newarray (float)[$i32];

     label20:
        if i2 <= 1 goto label31;

        $b33 = 0;
        i34 = $b33;
        i35 = $b33 + 2;

     label21:
        if i35 > i2 goto label27;

        i6 = r1[i35];
        $i36 = i35 - 1;
        i7 = r1[$i36];
        $i37 = i35 - 2;
        i8 = r1[$i37];
        i9 = i8;
        i10 = i7;

     label22:
        if i8 >= i6 goto label26;

        if i10 >= i6 goto label23;

        if i9 >= i7 goto label24;

        $f13 = r0[i9];
        $f14 = r0[i10];
        $b38 = $f13 cmpg $f14;
        if $b38 > 0 goto label24;

     label23:
        $i39 = i9;
        i9 = i9 + 1;
        $f15 = r0[$i39];
        r2[i8] = $f15;
        goto label25;

     label24:
        $i40 = i10;
        i10 = i10 + 1;
        $f16 = r0[$i40];
        r2[i8] = $f16;

     label25:
        i8 = i8 + 1;
        goto label22;

     label26:
        i34 = i34 + 1;
        r1[i34] = i6;
        i35 = i35 + 2;
        goto label21;

     label27:
        $i41 = i2 & 1;
        if $i41 == 0 goto label30;

        i42 = i25;
        $i43 = i2 - 1;
        i44 = r1[$i43];

     label28:
        i42 = i42 + -1;
        if i42 < i44 goto label29;

        $f17 = r0[i42];
        r2[i42] = $f17;
        goto label28;

     label29:
        i34 = i34 + 1;
        r1[i34] = i25;

     label30:
        r3 = r0;
        r0 = r2;
        r2 = r3;
        i2 = i34;
        goto label20;

     label31:
        return;
    }

    private static void sort(float[], int, int, boolean)
    {
        float[] r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i13, $i14, $i15, $i16, i18, i19, $i22, i23, $i24, $i26, $i27, $i29, $i30, $i31, $i32, $i33, i34, $i35, i36, i37, i48, $i58, $i60, $i61, $i62, $i63, $i64, $i65, i68, $i72, i74, $i79, $i80;
        boolean z0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, f9, f10, $f11, $f12, $f13, $f14, f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, f23, $f24, $f25, $f26, $f27, $f28, f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, f67, $f68, $f69, $f70, $f71, $f72, $f73, f74, $f75, f76, $f77, $f78, $f79, $f80, $f81, $f82;
        byte $b12, $b17, $b20, $b21, $b25, $b28, $b38, $b39, $b40, $b41, $b42, $b43, $b44, $b45, $b46, $b47, $b49, $b50, $b51, $b52, $b53, $b54, $b55, $b56, $b57, $b59, $b66, $b67, $b69, $b70, $b71, $b73, $b75, $b76, $b77, $b78;

        r0 := @parameter0: float[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        $i10 = i1 - i0;
        i2 = $i10 + 1;
        if i2 >= 47 goto label15;

        if z0 == 0 goto label4;

        i3 = i0;
        i4 = i3;

     label0:
        if i3 >= i1 goto label3;

        $i11 = i3 + 1;
        f0 = r0[$i11];

     label1:
        $f5 = r0[i4];
        $b12 = f0 cmpg $f5;
        if $b12 >= 0 goto label2;

        $i13 = i4 + 1;
        $f6 = r0[i4];
        r0[$i13] = $f6;
        $i14 = i4;
        i4 = i4 + -1;
        if $i14 != i0 goto label1;

        goto label2;

     label2:
        $i15 = i4 + 1;
        r0[$i15] = f0;
        i3 = i3 + 1;
        i4 = i3;
        goto label0;

     label3:
        goto label14;

     label4:
        if i0 < i1 goto label5;

        return;

     label5:
        i0 = i0 + 1;
        $f7 = r0[i0];
        $i16 = i0 - 1;
        $f8 = r0[$i16];
        $b17 = $f7 cmpl $f8;
        if $b17 >= 0 goto label4;

        i18 = i0;

     label6:
        i19 = i0 + 1;
        if i19 > i1 goto label11;

        f9 = r0[i18];
        f10 = r0[i19];
        $b20 = f9 cmpg f10;
        if $b20 >= 0 goto label7;

        f10 = f9;
        f9 = r0[i19];

     label7:
        i18 = i18 + -1;
        $f11 = r0[i18];
        $b21 = f9 cmpg $f11;
        if $b21 >= 0 goto label8;

        $i22 = i18 + 2;
        $f12 = r0[i18];
        r0[$i22] = $f12;
        goto label7;

     label8:
        i23 = i18 + 1;
        $i24 = i23 + 1;
        r0[$i24] = f9;

     label9:
        i23 = i23 + -1;
        $f13 = r0[i23];
        $b25 = f10 cmpg $f13;
        if $b25 >= 0 goto label10;

        $i26 = i23 + 1;
        $f14 = r0[i23];
        r0[$i26] = $f14;
        goto label9;

     label10:
        $i27 = i23 + 1;
        r0[$i27] = f10;
        i0 = i19 + 1;
        i18 = i0;
        goto label6;

     label11:
        f15 = r0[i1];

     label12:
        i1 = i1 + -1;
        $f16 = r0[i1];
        $b28 = f15 cmpg $f16;
        if $b28 >= 0 goto label13;

        $i29 = i1 + 1;
        $f17 = r0[i1];
        r0[$i29] = $f17;
        goto label12;

     label13:
        $i30 = i1 + 1;
        r0[$i30] = f15;

     label14:
        return;

     label15:
        $i31 = i2 >> 3;
        $i32 = i2 >> 6;
        $i33 = $i31 + $i32;
        i34 = $i33 + 1;
        $i35 = i0 + i1;
        i36 = $i35 >>> 1;
        i37 = i36 - i34;
        i5 = i37 - i34;
        i6 = i36 + i34;
        i7 = i6 + i34;
        $f18 = r0[i37];
        $f19 = r0[i5];
        $b38 = $f18 cmpg $f19;
        if $b38 >= 0 goto label16;

        f1 = r0[i37];
        $f20 = r0[i5];
        r0[i37] = $f20;
        r0[i5] = f1;

     label16:
        $f21 = r0[i36];
        $f22 = r0[i37];
        $b39 = $f21 cmpg $f22;
        if $b39 >= 0 goto label17;

        f23 = r0[i36];
        $f24 = r0[i37];
        r0[i36] = $f24;
        r0[i37] = f23;
        $f25 = r0[i5];
        $b40 = f23 cmpg $f25;
        if $b40 >= 0 goto label17;

        $f26 = r0[i5];
        r0[i37] = $f26;
        r0[i5] = f23;

     label17:
        $f27 = r0[i6];
        $f28 = r0[i36];
        $b41 = $f27 cmpg $f28;
        if $b41 >= 0 goto label18;

        f29 = r0[i6];
        $f30 = r0[i36];
        r0[i6] = $f30;
        r0[i36] = f29;
        $f31 = r0[i37];
        $b42 = f29 cmpg $f31;
        if $b42 >= 0 goto label18;

        $f32 = r0[i37];
        r0[i36] = $f32;
        r0[i37] = f29;
        $f33 = r0[i5];
        $b43 = f29 cmpg $f33;
        if $b43 >= 0 goto label18;

        $f34 = r0[i5];
        r0[i37] = $f34;
        r0[i5] = f29;

     label18:
        $f35 = r0[i7];
        $f36 = r0[i6];
        $b44 = $f35 cmpg $f36;
        if $b44 >= 0 goto label19;

        f37 = r0[i7];
        $f38 = r0[i6];
        r0[i7] = $f38;
        r0[i6] = f37;
        $f39 = r0[i36];
        $b45 = f37 cmpg $f39;
        if $b45 >= 0 goto label19;

        $f40 = r0[i36];
        r0[i6] = $f40;
        r0[i36] = f37;
        $f41 = r0[i37];
        $b46 = f37 cmpg $f41;
        if $b46 >= 0 goto label19;

        $f42 = r0[i37];
        r0[i36] = $f42;
        r0[i37] = f37;
        $f43 = r0[i5];
        $b47 = f37 cmpg $f43;
        if $b47 >= 0 goto label19;

        $f44 = r0[i5];
        r0[i37] = $f44;
        r0[i5] = f37;

     label19:
        i48 = i0;
        i8 = i1;
        $f45 = r0[i5];
        $f46 = r0[i37];
        $b49 = $f45 cmpl $f46;
        if $b49 == 0 goto label42;

        $f47 = r0[i37];
        $f48 = r0[i36];
        $b50 = $f47 cmpl $f48;
        if $b50 == 0 goto label42;

        $f49 = r0[i36];
        $f50 = r0[i6];
        $b51 = $f49 cmpl $f50;
        if $b51 == 0 goto label42;

        $f51 = r0[i6];
        $f52 = r0[i7];
        $b52 = $f51 cmpl $f52;
        if $b52 == 0 goto label42;

        f2 = r0[i37];
        f3 = r0[i6];
        $f53 = r0[i0];
        r0[i37] = $f53;
        $f54 = r0[i1];
        r0[i6] = $f54;

     label20:
        i48 = i48 + 1;
        $f55 = r0[i48];
        $b53 = $f55 cmpg f2;
        if $b53 >= 0 goto label21;

        goto label20;

     label21:
        i8 = i8 + -1;
        $f56 = r0[i8];
        $b54 = $f56 cmpl f3;
        if $b54 <= 0 goto label22;

        goto label21;

     label22:
        i9 = i48 - 1;

     label23:
        i9 = i9 + 1;
        if i9 > i8 goto label30;

        f4 = r0[i9];
        $b55 = f4 cmpg f2;
        if $b55 >= 0 goto label24;

        $f57 = r0[i48];
        r0[i9] = $f57;
        r0[i48] = f4;
        i48 = i48 + 1;
        goto label29;

     label24:
        $b56 = f4 cmpl f3;
        if $b56 <= 0 goto label29;

     label25:
        $f58 = r0[i8];
        $b57 = $f58 cmpl f3;
        if $b57 <= 0 goto label26;

        $i58 = i8;
        i8 = i8 + -1;
        if $i58 != i9 goto label25;

        goto label30;

     label26:
        $f59 = r0[i8];
        $b59 = $f59 cmpg f2;
        if $b59 >= 0 goto label27;

        $f60 = r0[i48];
        r0[i9] = $f60;
        $f61 = r0[i8];
        r0[i48] = $f61;
        i48 = i48 + 1;
        goto label28;

     label27:
        $f62 = r0[i8];
        r0[i9] = $f62;

     label28:
        r0[i8] = f4;
        i8 = i8 + -1;

     label29:
        goto label23;

     label30:
        $i60 = i48 - 1;
        $f63 = r0[$i60];
        r0[i0] = $f63;
        $i61 = i48 - 1;
        r0[$i61] = f2;
        $i62 = i8 + 1;
        $f64 = r0[$i62];
        r0[i1] = $f64;
        $i63 = i8 + 1;
        r0[$i63] = f3;
        $i64 = i48 - 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(float[],int,int,boolean)>(r0, i0, $i64, z0);
        $i65 = i8 + 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(float[],int,int,boolean)>(r0, $i65, i1, 0);
        if i48 >= i5 goto label41;

        if i7 >= i8 goto label41;

     label31:
        $f65 = r0[i48];
        $b66 = $f65 cmpl f2;
        if $b66 != 0 goto label32;

        i48 = i48 + 1;
        goto label31;

     label32:
        $f66 = r0[i8];
        $b67 = $f66 cmpl f3;
        if $b67 != 0 goto label33;

        i8 = i8 + -1;
        goto label32;

     label33:
        i68 = i48 - 1;

     label34:
        i68 = i68 + 1;
        if i68 > i8 goto label41;

        f67 = r0[i68];
        $b69 = f67 cmpl f2;
        if $b69 != 0 goto label35;

        $f68 = r0[i48];
        r0[i68] = $f68;
        r0[i48] = f67;
        i48 = i48 + 1;
        goto label40;

     label35:
        $b70 = f67 cmpl f3;
        if $b70 != 0 goto label40;

     label36:
        $f69 = r0[i8];
        $b71 = $f69 cmpl f3;
        if $b71 != 0 goto label37;

        $i72 = i8;
        i8 = i8 + -1;
        if $i72 != i68 goto label36;

        goto label41;

     label37:
        $f70 = r0[i8];
        $b73 = $f70 cmpl f2;
        if $b73 != 0 goto label38;

        $f71 = r0[i48];
        r0[i68] = $f71;
        $f72 = r0[i8];
        r0[i48] = $f72;
        i48 = i48 + 1;
        goto label39;

     label38:
        $f73 = r0[i8];
        r0[i68] = $f73;

     label39:
        r0[i8] = f67;
        i8 = i8 + -1;

     label40:
        goto label34;

     label41:
        staticinvoke <java.util.DualPivotQuicksort: void sort(float[],int,int,boolean)>(r0, i48, i8, 0);
        goto label51;

     label42:
        f74 = r0[i36];
        i74 = i48;

     label43:
        if i74 > i8 goto label50;

        $f75 = r0[i74];
        $b75 = $f75 cmpl f74;
        if $b75 != 0 goto label44;

        goto label49;

     label44:
        f76 = r0[i74];
        $b76 = f76 cmpg f74;
        if $b76 >= 0 goto label45;

        $f77 = r0[i48];
        r0[i74] = $f77;
        r0[i48] = f76;
        i48 = i48 + 1;
        goto label49;

     label45:
        $f78 = r0[i8];
        $b77 = $f78 cmpl f74;
        if $b77 <= 0 goto label46;

        i8 = i8 + -1;
        goto label45;

     label46:
        $f79 = r0[i8];
        $b78 = $f79 cmpg f74;
        if $b78 >= 0 goto label47;

        $f80 = r0[i48];
        r0[i74] = $f80;
        $f81 = r0[i8];
        r0[i48] = $f81;
        i48 = i48 + 1;
        goto label48;

     label47:
        $f82 = r0[i8];
        r0[i74] = $f82;

     label48:
        r0[i8] = f76;
        i8 = i8 + -1;

     label49:
        i74 = i74 + 1;
        goto label43;

     label50:
        $i79 = i48 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(float[],int,int,boolean)>(r0, i0, $i79, z0);
        $i80 = i8 + 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(float[],int,int,boolean)>(r0, $i80, i1, 0);

     label51:
        return;
    }

    public static void sort(double[])
    {
        double[] r0;
        int $i0, $i1;

        r0 := @parameter0: double[];
        $i0 = lengthof r0;
        $i1 = $i0 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(double[],int,int)>(r0, 0, $i1);
        return;
    }

    public static void sort(double[], int, int)
    {
        double[] r0;
        int i0, i1, i2, i4, $i5, i6, i10, i11;
        double d0, d1, d2, $d3, $d4, $d5;
        boolean $z0;
        byte $b3, $b7, $b9, $b12, $b14;
        long $l8, $l13;

        r0 := @parameter0: double[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;

     label0:
        if i0 > i1 goto label1;

        $d3 = r0[i1];
        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);
        if $z0 == 0 goto label1;

        i1 = i1 + -1;
        goto label0;

     label1:
        i2 = i1;

     label2:
        i2 = i2 + -1;
        if i2 < i0 goto label4;

        d0 = r0[i2];
        $b3 = d0 cmpl d0;
        if $b3 == 0 goto label3;

        $d4 = r0[i1];
        r0[i2] = $d4;
        r0[i1] = d0;
        i1 = i1 + -1;

     label3:
        goto label2;

     label4:
        staticinvoke <java.util.DualPivotQuicksort: void doSort(double[],int,int)>(r0, i0, i1);
        i4 = i1;

     label5:
        if i0 >= i4 goto label8;

        $i5 = i0 + i4;
        i6 = $i5 >>> 1;
        d1 = r0[i6];
        $b7 = d1 cmpg 0.0;
        if $b7 >= 0 goto label6;

        i0 = i6 + 1;
        goto label7;

     label6:
        i4 = i6;

     label7:
        goto label5;

     label8:
        if i0 > i1 goto label9;

        $d5 = r0[i0];
        $l8 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>($d5);
        $b9 = $l8 cmp 0L;
        if $b9 >= 0 goto label9;

        i0 = i0 + 1;
        goto label8;

     label9:
        i10 = i0;
        i11 = i0 - 1;

     label10:
        i10 = i10 + 1;
        if i10 > i1 goto label13;

        d2 = r0[i10];
        $b12 = d2 cmpl 0.0;
        if $b12 == 0 goto label11;

        goto label13;

     label11:
        $l13 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d2);
        $b14 = $l13 cmp 0L;
        if $b14 >= 0 goto label12;

        r0[i10] = 0.0;
        i11 = i11 + 1;
        r0[i11] = -0.0;

     label12:
        goto label10;

     label13:
        return;
    }

    private static void doSort(double[], int, int)
    {
        double[] r0, r2, r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i14, $i16, $i18, $i20, i21, $i22, $i24, i25, i27, $i28, $i30, i31, $i32, i34, i35, $i36, $i37, $i39, $i40, $i41, i42, $i43, i44;
        int[] r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        byte $b13, $b15, $b17, $b19, $b23, b26, $b29, $b33, $b38;

        r0 := @parameter0: double[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i11 = i1 - i0;
        if $i11 >= 286 goto label0;

        staticinvoke <java.util.DualPivotQuicksort: void sort(double[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label0:
        r1 = newarray (int)[68];
        i2 = 0;
        r1[0] = i0;
        i3 = i0;

     label1:
        if i3 >= i1 goto label12;

        $d1 = r0[i3];
        $i12 = i3 + 1;
        $d2 = r0[$i12];
        $b13 = $d1 cmpg $d2;
        if $b13 >= 0 goto label3;

     label2:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i14 = i3 - 1;
        $d3 = r0[$i14];
        $d4 = r0[i3];
        $b15 = $d3 cmpg $d4;
        if $b15 > 0 goto label10;

        goto label2;

     label3:
        $d5 = r0[i3];
        $i16 = i3 + 1;
        $d6 = r0[$i16];
        $b17 = $d5 cmpl $d6;
        if $b17 <= 0 goto label8;

     label4:
        i3 = i3 + 1;
        if i3 > i1 goto label5;

        $i18 = i3 - 1;
        $d7 = r0[$i18];
        $d8 = r0[i3];
        $b19 = $d7 cmpl $d8;
        if $b19 < 0 goto label5;

        goto label4;

     label5:
        $i20 = r1[i2];
        i4 = $i20 - 1;
        i5 = i3;

     label6:
        i4 = i4 + 1;
        i5 = i5 + -1;
        if i4 >= i5 goto label7;

        d0 = r0[i4];
        $d9 = r0[i5];
        r0[i4] = $d9;
        r0[i5] = d0;
        goto label6;

     label7:
        goto label10;

     label8:
        i21 = 33;

     label9:
        i3 = i3 + 1;
        if i3 > i1 goto label10;

        $i22 = i3 - 1;
        $d10 = r0[$i22];
        $d11 = r0[i3];
        $b23 = $d10 cmpl $d11;
        if $b23 != 0 goto label10;

        i21 = i21 + -1;
        if i21 != 0 goto label9;

        staticinvoke <java.util.DualPivotQuicksort: void sort(double[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label10:
        i2 = i2 + 1;
        if i2 != 67 goto label11;

        staticinvoke <java.util.DualPivotQuicksort: void sort(double[],int,int,boolean)>(r0, i0, i1, 1);
        return;

     label11:
        r1[i2] = i3;
        goto label1;

     label12:
        $i24 = r1[i2];
        i25 = i1 + 1;
        if $i24 != i1 goto label13;

        i2 = i2 + 1;
        r1[i2] = i25;
        goto label14;

     label13:
        if i2 != 1 goto label14;

        return;

     label14:
        b26 = 0;
        i27 = 1;

     label15:
        $i28 = i27 << 1;
        i27 = $i28;
        if $i28 >= i2 goto label16;

        $b29 = b26 ^ 1;
        b26 = (byte) $b29;
        goto label15;

     label16:
        if b26 != 0 goto label19;

        r2 = r0;
        $i30 = lengthof r2;
        r0 = newarray (double)[$i30];
        i31 = i0 - 1;

     label17:
        i31 = i31 + 1;
        if i31 >= i25 goto label18;

        $d12 = r2[i31];
        r0[i31] = $d12;
        goto label17;

     label18:
        goto label20;

     label19:
        $i32 = lengthof r0;
        r2 = newarray (double)[$i32];

     label20:
        if i2 <= 1 goto label31;

        $b33 = 0;
        i34 = $b33;
        i35 = $b33 + 2;

     label21:
        if i35 > i2 goto label27;

        i6 = r1[i35];
        $i36 = i35 - 1;
        i7 = r1[$i36];
        $i37 = i35 - 2;
        i8 = r1[$i37];
        i9 = i8;
        i10 = i7;

     label22:
        if i8 >= i6 goto label26;

        if i10 >= i6 goto label23;

        if i9 >= i7 goto label24;

        $d13 = r0[i9];
        $d14 = r0[i10];
        $b38 = $d13 cmpg $d14;
        if $b38 > 0 goto label24;

     label23:
        $i39 = i9;
        i9 = i9 + 1;
        $d15 = r0[$i39];
        r2[i8] = $d15;
        goto label25;

     label24:
        $i40 = i10;
        i10 = i10 + 1;
        $d16 = r0[$i40];
        r2[i8] = $d16;

     label25:
        i8 = i8 + 1;
        goto label22;

     label26:
        i34 = i34 + 1;
        r1[i34] = i6;
        i35 = i35 + 2;
        goto label21;

     label27:
        $i41 = i2 & 1;
        if $i41 == 0 goto label30;

        i42 = i25;
        $i43 = i2 - 1;
        i44 = r1[$i43];

     label28:
        i42 = i42 + -1;
        if i42 < i44 goto label29;

        $d17 = r0[i42];
        r2[i42] = $d17;
        goto label28;

     label29:
        i34 = i34 + 1;
        r1[i34] = i25;

     label30:
        r3 = r0;
        r0 = r2;
        r2 = r3;
        i2 = i34;
        goto label20;

     label31:
        return;
    }

    private static void sort(double[], int, int, boolean)
    {
        double[] r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i12, $i13, $i14, $i15, i17, i18, $i21, i22, $i23, $i25, $i26, $i28, $i29, $i30, $i31, $i32, i33, $i34, i35, i36, i37, i48, $i58, $i60, $i61, $i62, $i63, $i64, $i65, i68, $i72, i74, $i79, $i80;
        boolean z0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, $d14, $d15, d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, $d25, $d26, $d27, $d28, $d29, d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, d68, $d69, $d70, $d71, $d72, $d73, $d74, d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82;
        byte $b11, $b16, $b19, $b20, $b24, $b27, $b38, $b39, $b40, $b41, $b42, $b43, $b44, $b45, $b46, $b47, $b49, $b50, $b51, $b52, $b53, $b54, $b55, $b56, $b57, $b59, $b66, $b67, $b69, $b70, $b71, $b73, $b75, $b76, $b77, $b78;

        r0 := @parameter0: double[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        $i9 = i1 - i0;
        i2 = $i9 + 1;
        if i2 >= 47 goto label15;

        if z0 == 0 goto label4;

        i3 = i0;
        i4 = i3;

     label0:
        if i3 >= i1 goto label3;

        $i10 = i3 + 1;
        d0 = r0[$i10];

     label1:
        $d7 = r0[i4];
        $b11 = d0 cmpg $d7;
        if $b11 >= 0 goto label2;

        $i12 = i4 + 1;
        $d8 = r0[i4];
        r0[$i12] = $d8;
        $i13 = i4;
        i4 = i4 + -1;
        if $i13 != i0 goto label1;

        goto label2;

     label2:
        $i14 = i4 + 1;
        r0[$i14] = d0;
        i3 = i3 + 1;
        i4 = i3;
        goto label0;

     label3:
        goto label14;

     label4:
        if i0 < i1 goto label5;

        return;

     label5:
        i0 = i0 + 1;
        $d9 = r0[i0];
        $i15 = i0 - 1;
        $d10 = r0[$i15];
        $b16 = $d9 cmpl $d10;
        if $b16 >= 0 goto label4;

        i17 = i0;

     label6:
        i18 = i0 + 1;
        if i18 > i1 goto label11;

        d11 = r0[i17];
        d1 = r0[i18];
        $b19 = d11 cmpg d1;
        if $b19 >= 0 goto label7;

        d1 = d11;
        d11 = r0[i18];

     label7:
        i17 = i17 + -1;
        $d12 = r0[i17];
        $b20 = d11 cmpg $d12;
        if $b20 >= 0 goto label8;

        $i21 = i17 + 2;
        $d13 = r0[i17];
        r0[$i21] = $d13;
        goto label7;

     label8:
        i22 = i17 + 1;
        $i23 = i22 + 1;
        r0[$i23] = d11;

     label9:
        i22 = i22 + -1;
        $d14 = r0[i22];
        $b24 = d1 cmpg $d14;
        if $b24 >= 0 goto label10;

        $i25 = i22 + 1;
        $d15 = r0[i22];
        r0[$i25] = $d15;
        goto label9;

     label10:
        $i26 = i22 + 1;
        r0[$i26] = d1;
        i0 = i18 + 1;
        i17 = i0;
        goto label6;

     label11:
        d16 = r0[i1];

     label12:
        i1 = i1 + -1;
        $d17 = r0[i1];
        $b27 = d16 cmpg $d17;
        if $b27 >= 0 goto label13;

        $i28 = i1 + 1;
        $d18 = r0[i1];
        r0[$i28] = $d18;
        goto label12;

     label13:
        $i29 = i1 + 1;
        r0[$i29] = d16;

     label14:
        return;

     label15:
        $i30 = i2 >> 3;
        $i31 = i2 >> 6;
        $i32 = $i30 + $i31;
        i33 = $i32 + 1;
        $i34 = i0 + i1;
        i35 = $i34 >>> 1;
        i36 = i35 - i33;
        i37 = i36 - i33;
        i5 = i35 + i33;
        i6 = i5 + i33;
        $d19 = r0[i36];
        $d20 = r0[i37];
        $b38 = $d19 cmpg $d20;
        if $b38 >= 0 goto label16;

        d2 = r0[i36];
        $d21 = r0[i37];
        r0[i36] = $d21;
        r0[i37] = d2;

     label16:
        $d22 = r0[i35];
        $d23 = r0[i36];
        $b39 = $d22 cmpg $d23;
        if $b39 >= 0 goto label17;

        d24 = r0[i35];
        $d25 = r0[i36];
        r0[i35] = $d25;
        r0[i36] = d24;
        $d26 = r0[i37];
        $b40 = d24 cmpg $d26;
        if $b40 >= 0 goto label17;

        $d27 = r0[i37];
        r0[i36] = $d27;
        r0[i37] = d24;

     label17:
        $d28 = r0[i5];
        $d29 = r0[i35];
        $b41 = $d28 cmpg $d29;
        if $b41 >= 0 goto label18;

        d30 = r0[i5];
        $d31 = r0[i35];
        r0[i5] = $d31;
        r0[i35] = d30;
        $d32 = r0[i36];
        $b42 = d30 cmpg $d32;
        if $b42 >= 0 goto label18;

        $d33 = r0[i36];
        r0[i35] = $d33;
        r0[i36] = d30;
        $d34 = r0[i37];
        $b43 = d30 cmpg $d34;
        if $b43 >= 0 goto label18;

        $d35 = r0[i37];
        r0[i36] = $d35;
        r0[i37] = d30;

     label18:
        $d36 = r0[i6];
        $d37 = r0[i5];
        $b44 = $d36 cmpg $d37;
        if $b44 >= 0 goto label19;

        d38 = r0[i6];
        $d39 = r0[i5];
        r0[i6] = $d39;
        r0[i5] = d38;
        $d40 = r0[i35];
        $b45 = d38 cmpg $d40;
        if $b45 >= 0 goto label19;

        $d41 = r0[i35];
        r0[i5] = $d41;
        r0[i35] = d38;
        $d42 = r0[i36];
        $b46 = d38 cmpg $d42;
        if $b46 >= 0 goto label19;

        $d43 = r0[i36];
        r0[i35] = $d43;
        r0[i36] = d38;
        $d44 = r0[i37];
        $b47 = d38 cmpg $d44;
        if $b47 >= 0 goto label19;

        $d45 = r0[i37];
        r0[i36] = $d45;
        r0[i37] = d38;

     label19:
        i48 = i0;
        i7 = i1;
        $d46 = r0[i37];
        $d47 = r0[i36];
        $b49 = $d46 cmpl $d47;
        if $b49 == 0 goto label42;

        $d48 = r0[i36];
        $d49 = r0[i35];
        $b50 = $d48 cmpl $d49;
        if $b50 == 0 goto label42;

        $d50 = r0[i35];
        $d51 = r0[i5];
        $b51 = $d50 cmpl $d51;
        if $b51 == 0 goto label42;

        $d52 = r0[i5];
        $d53 = r0[i6];
        $b52 = $d52 cmpl $d53;
        if $b52 == 0 goto label42;

        d3 = r0[i36];
        d4 = r0[i5];
        $d54 = r0[i0];
        r0[i36] = $d54;
        $d55 = r0[i1];
        r0[i5] = $d55;

     label20:
        i48 = i48 + 1;
        $d56 = r0[i48];
        $b53 = $d56 cmpg d3;
        if $b53 >= 0 goto label21;

        goto label20;

     label21:
        i7 = i7 + -1;
        $d57 = r0[i7];
        $b54 = $d57 cmpl d4;
        if $b54 <= 0 goto label22;

        goto label21;

     label22:
        i8 = i48 - 1;

     label23:
        i8 = i8 + 1;
        if i8 > i7 goto label30;

        d5 = r0[i8];
        $b55 = d5 cmpg d3;
        if $b55 >= 0 goto label24;

        $d58 = r0[i48];
        r0[i8] = $d58;
        r0[i48] = d5;
        i48 = i48 + 1;
        goto label29;

     label24:
        $b56 = d5 cmpl d4;
        if $b56 <= 0 goto label29;

     label25:
        $d59 = r0[i7];
        $b57 = $d59 cmpl d4;
        if $b57 <= 0 goto label26;

        $i58 = i7;
        i7 = i7 + -1;
        if $i58 != i8 goto label25;

        goto label30;

     label26:
        $d60 = r0[i7];
        $b59 = $d60 cmpg d3;
        if $b59 >= 0 goto label27;

        $d61 = r0[i48];
        r0[i8] = $d61;
        $d62 = r0[i7];
        r0[i48] = $d62;
        i48 = i48 + 1;
        goto label28;

     label27:
        $d63 = r0[i7];
        r0[i8] = $d63;

     label28:
        r0[i7] = d5;
        i7 = i7 + -1;

     label29:
        goto label23;

     label30:
        $i60 = i48 - 1;
        $d64 = r0[$i60];
        r0[i0] = $d64;
        $i61 = i48 - 1;
        r0[$i61] = d3;
        $i62 = i7 + 1;
        $d65 = r0[$i62];
        r0[i1] = $d65;
        $i63 = i7 + 1;
        r0[$i63] = d4;
        $i64 = i48 - 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(double[],int,int,boolean)>(r0, i0, $i64, z0);
        $i65 = i7 + 2;
        staticinvoke <java.util.DualPivotQuicksort: void sort(double[],int,int,boolean)>(r0, $i65, i1, 0);
        if i48 >= i37 goto label41;

        if i6 >= i7 goto label41;

     label31:
        $d66 = r0[i48];
        $b66 = $d66 cmpl d3;
        if $b66 != 0 goto label32;

        i48 = i48 + 1;
        goto label31;

     label32:
        $d67 = r0[i7];
        $b67 = $d67 cmpl d4;
        if $b67 != 0 goto label33;

        i7 = i7 + -1;
        goto label32;

     label33:
        i68 = i48 - 1;

     label34:
        i68 = i68 + 1;
        if i68 > i7 goto label41;

        d68 = r0[i68];
        $b69 = d68 cmpl d3;
        if $b69 != 0 goto label35;

        $d69 = r0[i48];
        r0[i68] = $d69;
        r0[i48] = d68;
        i48 = i48 + 1;
        goto label40;

     label35:
        $b70 = d68 cmpl d4;
        if $b70 != 0 goto label40;

     label36:
        $d70 = r0[i7];
        $b71 = $d70 cmpl d4;
        if $b71 != 0 goto label37;

        $i72 = i7;
        i7 = i7 + -1;
        if $i72 != i68 goto label36;

        goto label41;

     label37:
        $d71 = r0[i7];
        $b73 = $d71 cmpl d3;
        if $b73 != 0 goto label38;

        $d72 = r0[i48];
        r0[i68] = $d72;
        $d73 = r0[i7];
        r0[i48] = $d73;
        i48 = i48 + 1;
        goto label39;

     label38:
        $d74 = r0[i7];
        r0[i68] = $d74;

     label39:
        r0[i7] = d68;
        i7 = i7 + -1;

     label40:
        goto label34;

     label41:
        staticinvoke <java.util.DualPivotQuicksort: void sort(double[],int,int,boolean)>(r0, i48, i7, 0);
        goto label51;

     label42:
        d75 = r0[i35];
        i74 = i48;

     label43:
        if i74 > i7 goto label50;

        $d76 = r0[i74];
        $b75 = $d76 cmpl d75;
        if $b75 != 0 goto label44;

        goto label49;

     label44:
        d6 = r0[i74];
        $b76 = d6 cmpg d75;
        if $b76 >= 0 goto label45;

        $d77 = r0[i48];
        r0[i74] = $d77;
        r0[i48] = d6;
        i48 = i48 + 1;
        goto label49;

     label45:
        $d78 = r0[i7];
        $b77 = $d78 cmpl d75;
        if $b77 <= 0 goto label46;

        i7 = i7 + -1;
        goto label45;

     label46:
        $d79 = r0[i7];
        $b78 = $d79 cmpg d75;
        if $b78 >= 0 goto label47;

        $d80 = r0[i48];
        r0[i74] = $d80;
        $d81 = r0[i7];
        r0[i48] = $d81;
        i48 = i48 + 1;
        goto label48;

     label47:
        $d82 = r0[i7];
        r0[i74] = $d82;

     label48:
        r0[i7] = d6;
        i7 = i7 + -1;

     label49:
        i74 = i74 + 1;
        goto label43;

     label50:
        $i79 = i48 - 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(double[],int,int,boolean)>(r0, i0, $i79, z0);
        $i80 = i7 + 1;
        staticinvoke <java.util.DualPivotQuicksort: void sort(double[],int,int,boolean)>(r0, $i80, i1, 0);

     label51:
        return;
    }
}
