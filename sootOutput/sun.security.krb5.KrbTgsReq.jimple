public class sun.security.krb5.KrbTgsReq extends java.lang.Object
{
    private sun.security.krb5.PrincipalName princName;
    private sun.security.krb5.PrincipalName servName;
    private sun.security.krb5.internal.TGSReq tgsReqMessg;
    private sun.security.krb5.internal.KerberosTime ctime;
    private sun.security.krb5.internal.Ticket secondTicket;
    private boolean useSubkey;
    sun.security.krb5.EncryptionKey tgsReqKey;
    private static final boolean DEBUG;
    private byte[] obuf;
    private byte[] ibuf;

    public void <init>(sun.security.krb5.Credentials, sun.security.krb5.PrincipalName) throws sun.security.krb5.KrbException, java.io.IOException
    {
        sun.security.krb5.KrbTgsReq r0;
        sun.security.krb5.Credentials r1;
        sun.security.krb5.PrincipalName r2;
        sun.security.krb5.internal.KDCOptions $r3;

        r0 := @this: sun.security.krb5.KrbTgsReq;
        r1 := @parameter0: sun.security.krb5.Credentials;
        r2 := @parameter1: sun.security.krb5.PrincipalName;
        $r3 = new sun.security.krb5.internal.KDCOptions;
        specialinvoke $r3.<sun.security.krb5.internal.KDCOptions: void <init>()>();
        specialinvoke r0.<sun.security.krb5.KrbTgsReq: void <init>(sun.security.krb5.internal.KDCOptions,sun.security.krb5.Credentials,sun.security.krb5.PrincipalName,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,int[],sun.security.krb5.internal.HostAddresses,sun.security.krb5.internal.AuthorizationData,sun.security.krb5.internal.Ticket[],sun.security.krb5.EncryptionKey)>($r3, r1, r2, null, null, null, null, null, null, null, null);
        return;
    }

    void <init>(sun.security.krb5.internal.KDCOptions, sun.security.krb5.Credentials, sun.security.krb5.PrincipalName, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, int[], sun.security.krb5.internal.HostAddresses, sun.security.krb5.internal.AuthorizationData, sun.security.krb5.internal.Ticket[], sun.security.krb5.EncryptionKey) throws sun.security.krb5.KrbException, java.io.IOException
    {
        sun.security.krb5.KrbTgsReq r0;
        sun.security.krb5.internal.KDCOptions r1;
        sun.security.krb5.Credentials r2;
        sun.security.krb5.PrincipalName r3, $r12, $r35, $r36, $r38;
        sun.security.krb5.internal.KerberosTime r4, r5, r6, $r13, $r34;
        int[] r7;
        sun.security.krb5.internal.HostAddresses r8;
        sun.security.krb5.internal.AuthorizationData r9;
        sun.security.krb5.internal.Ticket[] r10;
        sun.security.krb5.EncryptionKey r11, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        sun.security.krb5.internal.TicketFlags $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r42;
        sun.security.krb5.KrbException $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r30;
        sun.security.krb5.internal.Ticket $r31, $r32;
        sun.security.krb5.Realm $r37;
        sun.security.krb5.internal.TGSReq $r39, $r40;
        byte[] $r41;

        r0 := @this: sun.security.krb5.KrbTgsReq;
        r1 := @parameter0: sun.security.krb5.internal.KDCOptions;
        r2 := @parameter1: sun.security.krb5.Credentials;
        r3 := @parameter2: sun.security.krb5.PrincipalName;
        r4 := @parameter3: sun.security.krb5.internal.KerberosTime;
        r5 := @parameter4: sun.security.krb5.internal.KerberosTime;
        r6 := @parameter5: sun.security.krb5.internal.KerberosTime;
        r7 := @parameter6: int[];
        r8 := @parameter7: sun.security.krb5.internal.HostAddresses;
        r9 := @parameter8: sun.security.krb5.internal.AuthorizationData;
        r10 := @parameter9: sun.security.krb5.internal.Ticket[];
        r11 := @parameter10: sun.security.krb5.EncryptionKey;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.internal.Ticket secondTicket> = null;
        r0.<sun.security.krb5.KrbTgsReq: boolean useSubkey> = 0;
        $r12 = r2.<sun.security.krb5.Credentials: sun.security.krb5.PrincipalName client>;
        r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.PrincipalName princName> = $r12;
        r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.PrincipalName servName> = r3;
        $r13 = new sun.security.krb5.internal.KerberosTime;
        specialinvoke $r13.<sun.security.krb5.internal.KerberosTime: void <init>(boolean)>(1);
        r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.internal.KerberosTime ctime> = $r13;
        $z0 = virtualinvoke r1.<sun.security.krb5.internal.KDCOptions: boolean get(int)>(1);
        if $z0 == 0 goto label0;

        $r14 = r2.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z1 = virtualinvoke $r14.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(1);
        if $z1 != 0 goto label0;

        $r15 = new sun.security.krb5.KrbException;
        specialinvoke $r15.<sun.security.krb5.KrbException: void <init>(int)>(101);
        throw $r15;

     label0:
        $z2 = virtualinvoke r1.<sun.security.krb5.internal.KDCOptions: boolean get(int)>(2);
        if $z2 == 0 goto label1;

        $r16 = r2.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z3 = virtualinvoke $r16.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(1);
        if $z3 != 0 goto label1;

        $r17 = new sun.security.krb5.KrbException;
        specialinvoke $r17.<sun.security.krb5.KrbException: void <init>(int)>(101);
        throw $r17;

     label1:
        $z4 = virtualinvoke r1.<sun.security.krb5.internal.KDCOptions: boolean get(int)>(3);
        if $z4 == 0 goto label2;

        $r18 = r2.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z5 = virtualinvoke $r18.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(3);
        if $z5 != 0 goto label2;

        $r19 = new sun.security.krb5.KrbException;
        specialinvoke $r19.<sun.security.krb5.KrbException: void <init>(int)>(101);
        throw $r19;

     label2:
        $z6 = virtualinvoke r1.<sun.security.krb5.internal.KDCOptions: boolean get(int)>(4);
        if $z6 == 0 goto label3;

        $r20 = r2.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z7 = virtualinvoke $r20.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(3);
        if $z7 != 0 goto label3;

        $r21 = new sun.security.krb5.KrbException;
        specialinvoke $r21.<sun.security.krb5.KrbException: void <init>(int)>(101);
        throw $r21;

     label3:
        $z8 = virtualinvoke r1.<sun.security.krb5.internal.KDCOptions: boolean get(int)>(5);
        if $z8 == 0 goto label4;

        $r22 = r2.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z9 = virtualinvoke $r22.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(5);
        if $z9 != 0 goto label4;

        $r23 = new sun.security.krb5.KrbException;
        specialinvoke $r23.<sun.security.krb5.KrbException: void <init>(int)>(101);
        throw $r23;

     label4:
        $z10 = virtualinvoke r1.<sun.security.krb5.internal.KDCOptions: boolean get(int)>(8);
        if $z10 == 0 goto label5;

        $r24 = r2.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z11 = virtualinvoke $r24.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(8);
        if $z11 != 0 goto label5;

        $r25 = new sun.security.krb5.KrbException;
        specialinvoke $r25.<sun.security.krb5.KrbException: void <init>(int)>(101);
        throw $r25;

     label5:
        $z12 = virtualinvoke r1.<sun.security.krb5.internal.KDCOptions: boolean get(int)>(6);
        if $z12 == 0 goto label6;

        $r26 = r2.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z13 = virtualinvoke $r26.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(6);
        if $z13 != 0 goto label7;

        $r27 = new sun.security.krb5.KrbException;
        specialinvoke $r27.<sun.security.krb5.KrbException: void <init>(int)>(101);
        throw $r27;

     label6:
        if r4 == null goto label7;

        r4 = null;

     label7:
        $z14 = virtualinvoke r1.<sun.security.krb5.internal.KDCOptions: boolean get(int)>(8);
        if $z14 == 0 goto label8;

        $r28 = r2.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z15 = virtualinvoke $r28.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(8);
        if $z15 != 0 goto label9;

        $r29 = new sun.security.krb5.KrbException;
        specialinvoke $r29.<sun.security.krb5.KrbException: void <init>(int)>(101);
        throw $r29;

     label8:
        if r6 == null goto label9;

        r6 = null;

     label9:
        $z16 = virtualinvoke r1.<sun.security.krb5.internal.KDCOptions: boolean get(int)>(28);
        if $z16 == 0 goto label11;

        if r10 != null goto label10;

        $r30 = new sun.security.krb5.KrbException;
        specialinvoke $r30.<sun.security.krb5.KrbException: void <init>(int)>(101);
        throw $r30;

     label10:
        $r31 = r10[0];
        r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.internal.Ticket secondTicket> = $r31;
        goto label12;

     label11:
        if r10 == null goto label12;

        r10 = null;

     label12:
        $r32 = r2.<sun.security.krb5.Credentials: sun.security.krb5.internal.Ticket ticket>;
        $r33 = r2.<sun.security.krb5.Credentials: sun.security.krb5.EncryptionKey key>;
        $r34 = r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.internal.KerberosTime ctime>;
        $r35 = r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.PrincipalName princName>;
        $r36 = r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.PrincipalName princName>;
        $r37 = virtualinvoke $r36.<sun.security.krb5.PrincipalName: sun.security.krb5.Realm getRealm()>();
        $r38 = r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.PrincipalName servName>;
        $r39 = specialinvoke r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.internal.TGSReq createRequest(sun.security.krb5.internal.KDCOptions,sun.security.krb5.internal.Ticket,sun.security.krb5.EncryptionKey,sun.security.krb5.internal.KerberosTime,sun.security.krb5.PrincipalName,sun.security.krb5.Realm,sun.security.krb5.PrincipalName,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,int[],sun.security.krb5.internal.HostAddresses,sun.security.krb5.internal.AuthorizationData,sun.security.krb5.internal.Ticket[],sun.security.krb5.EncryptionKey)>(r1, $r32, $r33, $r34, $r35, $r37, $r38, r4, r5, r6, r7, r8, r9, r10, r11);
        r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.internal.TGSReq tgsReqMessg> = $r39;
        $r40 = r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.internal.TGSReq tgsReqMessg>;
        $r41 = virtualinvoke $r40.<sun.security.krb5.internal.TGSReq: byte[] asn1Encode()>();
        r0.<sun.security.krb5.KrbTgsReq: byte[] obuf> = $r41;
        $r42 = r2.<sun.security.krb5.Credentials: sun.security.krb5.internal.TicketFlags flags>;
        $z17 = virtualinvoke $r42.<sun.security.krb5.internal.TicketFlags: boolean get(int)>(2);
        if $z17 == 0 goto label13;

        virtualinvoke r1.<sun.security.krb5.internal.KDCOptions: void set(int,boolean)>(2, 1);

     label13:
        return;
    }

    public void send() throws java.io.IOException, sun.security.krb5.KrbException
    {
        sun.security.krb5.KrbTgsReq r0;
        java.lang.String r1;
        sun.security.krb5.KdcComm r2, $r5;
        sun.security.krb5.PrincipalName $r3, $r4;
        byte[] $r6, $r7;

        r0 := @this: sun.security.krb5.KrbTgsReq;
        r1 = null;
        $r3 = r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.PrincipalName servName>;
        if $r3 == null goto label0;

        $r4 = r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.PrincipalName servName>;
        r1 = virtualinvoke $r4.<sun.security.krb5.PrincipalName: java.lang.String getRealmString()>();

     label0:
        $r5 = new sun.security.krb5.KdcComm;
        specialinvoke $r5.<sun.security.krb5.KdcComm: void <init>(java.lang.String)>(r1);
        r2 = $r5;
        $r6 = r0.<sun.security.krb5.KrbTgsReq: byte[] obuf>;
        $r7 = virtualinvoke r2.<sun.security.krb5.KdcComm: byte[] send(byte[])>($r6);
        r0.<sun.security.krb5.KrbTgsReq: byte[] ibuf> = $r7;
        return;
    }

    public sun.security.krb5.KrbTgsRep getReply() throws sun.security.krb5.KrbException, java.io.IOException
    {
        sun.security.krb5.KrbTgsReq r0;
        sun.security.krb5.KrbTgsRep $r1;
        byte[] $r2;

        r0 := @this: sun.security.krb5.KrbTgsReq;
        $r1 = new sun.security.krb5.KrbTgsRep;
        $r2 = r0.<sun.security.krb5.KrbTgsReq: byte[] ibuf>;
        specialinvoke $r1.<sun.security.krb5.KrbTgsRep: void <init>(byte[],sun.security.krb5.KrbTgsReq)>($r2, r0);
        return $r1;
    }

    public sun.security.krb5.Credentials sendAndGetCreds() throws java.io.IOException, sun.security.krb5.KrbException
    {
        sun.security.krb5.KrbTgsReq r0;
        null_type n0, n1;
        sun.security.krb5.KrbTgsRep r1;
        sun.security.krb5.Credentials $r2;

        r0 := @this: sun.security.krb5.KrbTgsReq;
        n0 = null;
        n1 = null;
        virtualinvoke r0.<sun.security.krb5.KrbTgsReq: void send()>();
        r1 = virtualinvoke r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.KrbTgsRep getReply()>();
        $r2 = virtualinvoke r1.<sun.security.krb5.KrbTgsRep: sun.security.krb5.Credentials getCreds()>();
        return $r2;
    }

    sun.security.krb5.internal.KerberosTime getCtime()
    {
        sun.security.krb5.KrbTgsReq r0;
        sun.security.krb5.internal.KerberosTime $r1;

        r0 := @this: sun.security.krb5.KrbTgsReq;
        $r1 = r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.internal.KerberosTime ctime>;
        return $r1;
    }

    private sun.security.krb5.internal.TGSReq createRequest(sun.security.krb5.internal.KDCOptions, sun.security.krb5.internal.Ticket, sun.security.krb5.EncryptionKey, sun.security.krb5.internal.KerberosTime, sun.security.krb5.PrincipalName, sun.security.krb5.Realm, sun.security.krb5.PrincipalName, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, sun.security.krb5.internal.KerberosTime, int[], sun.security.krb5.internal.HostAddresses, sun.security.krb5.internal.AuthorizationData, sun.security.krb5.internal.Ticket[], sun.security.krb5.EncryptionKey) throws sun.security.krb5.Asn1Exception, java.io.IOException, sun.security.krb5.internal.KdcErrException, sun.security.krb5.internal.KrbApErrException, java.net.UnknownHostException, sun.security.krb5.KrbCryptoException
    {
        sun.security.krb5.KrbTgsReq r0;
        sun.security.krb5.internal.KDCOptions r1;
        sun.security.krb5.internal.Ticket r2;
        sun.security.krb5.EncryptionKey r3, r15, r16;
        sun.security.krb5.internal.KerberosTime r4, r8, r9, r10, $r23, r24;
        sun.security.krb5.PrincipalName r5, r7;
        sun.security.krb5.Realm r6, $r30;
        int[] r11, r25;
        sun.security.krb5.internal.HostAddresses r12;
        sun.security.krb5.internal.AuthorizationData r13;
        sun.security.krb5.internal.Ticket[] r14;
        null_type n0, n1;
        sun.security.krb5.EncryptedData r17, $r27, $r28;
        byte[] r18, r19, r21;
        int $i0, $i1, $i2, $i3;
        sun.security.krb5.Checksum r20, $r32, $r33;
        sun.security.krb5.internal.PAData[] r22;
        sun.security.krb5.KrbCryptoException $r26;
        sun.security.krb5.internal.KDCReqBody $r29, r31;
        sun.security.krb5.KrbApReq $r34;
        sun.security.krb5.internal.APOptions $r35;
        sun.security.krb5.internal.PAData $r36;
        sun.security.krb5.internal.TGSReq $r37;

        r0 := @this: sun.security.krb5.KrbTgsReq;
        r1 := @parameter0: sun.security.krb5.internal.KDCOptions;
        r2 := @parameter1: sun.security.krb5.internal.Ticket;
        r3 := @parameter2: sun.security.krb5.EncryptionKey;
        r4 := @parameter3: sun.security.krb5.internal.KerberosTime;
        r5 := @parameter4: sun.security.krb5.PrincipalName;
        r6 := @parameter5: sun.security.krb5.Realm;
        r7 := @parameter6: sun.security.krb5.PrincipalName;
        r8 := @parameter7: sun.security.krb5.internal.KerberosTime;
        r9 := @parameter8: sun.security.krb5.internal.KerberosTime;
        r10 := @parameter9: sun.security.krb5.internal.KerberosTime;
        r11 := @parameter10: int[];
        r12 := @parameter11: sun.security.krb5.internal.HostAddresses;
        r13 := @parameter12: sun.security.krb5.internal.AuthorizationData;
        r14 := @parameter13: sun.security.krb5.internal.Ticket[];
        r15 := @parameter14: sun.security.krb5.EncryptionKey;
        n0 = null;
        if r9 != null goto label0;

        $r23 = new sun.security.krb5.internal.KerberosTime;
        specialinvoke $r23.<sun.security.krb5.internal.KerberosTime: void <init>(long)>(0L);
        r24 = $r23;
        goto label1;

     label0:
        r24 = r9;

     label1:
        r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.EncryptionKey tgsReqKey> = r3;
        n1 = null;
        if r11 != null goto label2;

        r25 = staticinvoke <sun.security.krb5.internal.crypto.EType: int[] getDefaults(java.lang.String)>("default_tgs_enctypes");
        if r25 != null goto label3;

        $r26 = new sun.security.krb5.KrbCryptoException;
        specialinvoke $r26.<sun.security.krb5.KrbCryptoException: void <init>(java.lang.String)>("No supported encryption types listed in default_tgs_enctypes");
        throw $r26;

     label2:
        r25 = r11;

     label3:
        r16 = null;
        r17 = null;
        if r13 == null goto label5;

        r18 = virtualinvoke r13.<sun.security.krb5.internal.AuthorizationData: byte[] asn1Encode()>();
        if r15 == null goto label4;

        r16 = r15;
        r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.EncryptionKey tgsReqKey> = r15;
        r0.<sun.security.krb5.KrbTgsReq: boolean useSubkey> = 1;
        $r27 = new sun.security.krb5.EncryptedData;
        specialinvoke $r27.<sun.security.krb5.EncryptedData: void <init>(sun.security.krb5.EncryptionKey,byte[],int)>(r16, r18, 5);
        r17 = $r27;
        goto label5;

     label4:
        $r28 = new sun.security.krb5.EncryptedData;
        specialinvoke $r28.<sun.security.krb5.EncryptedData: void <init>(sun.security.krb5.EncryptionKey,byte[],int)>(r3, r18, 4);
        r17 = $r28;

     label5:
        $r29 = new sun.security.krb5.internal.KDCReqBody;
        $r30 = virtualinvoke r7.<sun.security.krb5.PrincipalName: sun.security.krb5.Realm getRealm()>();
        $i0 = staticinvoke <sun.security.krb5.internal.crypto.Nonce: int value()>();
        specialinvoke $r29.<sun.security.krb5.internal.KDCReqBody: void <init>(sun.security.krb5.internal.KDCOptions,sun.security.krb5.PrincipalName,sun.security.krb5.Realm,sun.security.krb5.PrincipalName,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,sun.security.krb5.internal.KerberosTime,int,int[],sun.security.krb5.internal.HostAddresses,sun.security.krb5.EncryptedData,sun.security.krb5.internal.Ticket[])>(r1, r5, $r30, r7, r8, r24, r10, $i0, r25, r12, r17, r14);
        r31 = $r29;
        r19 = virtualinvoke r31.<sun.security.krb5.internal.KDCReqBody: byte[] asn1Encode(int)>(12);
        $i1 = <sun.security.krb5.Checksum: int CKSUMTYPE_DEFAULT>;
        lookupswitch($i1)
        {
            case -138: goto label6;
            case 1: goto label7;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label6;
            case 5: goto label6;
            case 6: goto label6;
            case 7: goto label7;
            case 8: goto label6;
            case 12: goto label6;
            case 15: goto label6;
            case 16: goto label6;
            default: goto label7;
        };

     label6:
        $r32 = new sun.security.krb5.Checksum;
        $i2 = <sun.security.krb5.Checksum: int CKSUMTYPE_DEFAULT>;
        specialinvoke $r32.<sun.security.krb5.Checksum: void <init>(int,byte[],sun.security.krb5.EncryptionKey,int)>($i2, r19, r3, 6);
        r20 = $r32;
        goto label8;

     label7:
        $r33 = new sun.security.krb5.Checksum;
        $i3 = <sun.security.krb5.Checksum: int CKSUMTYPE_DEFAULT>;
        specialinvoke $r33.<sun.security.krb5.Checksum: void <init>(int,byte[])>($i3, r19);
        r20 = $r33;

     label8:
        $r34 = new sun.security.krb5.KrbApReq;
        $r35 = new sun.security.krb5.internal.APOptions;
        specialinvoke $r35.<sun.security.krb5.internal.APOptions: void <init>()>();
        specialinvoke $r34.<sun.security.krb5.KrbApReq: void <init>(sun.security.krb5.internal.APOptions,sun.security.krb5.internal.Ticket,sun.security.krb5.EncryptionKey,sun.security.krb5.Realm,sun.security.krb5.PrincipalName,sun.security.krb5.Checksum,sun.security.krb5.internal.KerberosTime,sun.security.krb5.EncryptionKey,sun.security.krb5.internal.SeqNumber,sun.security.krb5.internal.AuthorizationData)>($r35, r2, r3, r6, r5, r20, r4, r16, null, null);
        r21 = virtualinvoke $r34.<sun.security.krb5.KrbApReq: byte[] getMessage()>();
        r22 = newarray (sun.security.krb5.internal.PAData)[1];
        $r36 = new sun.security.krb5.internal.PAData;
        specialinvoke $r36.<sun.security.krb5.internal.PAData: void <init>(int,byte[])>(1, r21);
        r22[0] = $r36;
        $r37 = new sun.security.krb5.internal.TGSReq;
        specialinvoke $r37.<sun.security.krb5.internal.TGSReq: void <init>(sun.security.krb5.internal.PAData[],sun.security.krb5.internal.KDCReqBody)>(r22, r31);
        return $r37;
    }

    sun.security.krb5.internal.TGSReq getMessage()
    {
        sun.security.krb5.KrbTgsReq r0;
        sun.security.krb5.internal.TGSReq $r1;

        r0 := @this: sun.security.krb5.KrbTgsReq;
        $r1 = r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.internal.TGSReq tgsReqMessg>;
        return $r1;
    }

    sun.security.krb5.internal.Ticket getSecondTicket()
    {
        sun.security.krb5.KrbTgsReq r0;
        sun.security.krb5.internal.Ticket $r1;

        r0 := @this: sun.security.krb5.KrbTgsReq;
        $r1 = r0.<sun.security.krb5.KrbTgsReq: sun.security.krb5.internal.Ticket secondTicket>;
        return $r1;
    }

    private static void debug(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;
        return;
    }

    boolean usedSubkey()
    {
        sun.security.krb5.KrbTgsReq r0;
        boolean $z0;

        r0 := @this: sun.security.krb5.KrbTgsReq;
        $z0 = r0.<sun.security.krb5.KrbTgsReq: boolean useSubkey>;
        return $z0;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = <sun.security.krb5.internal.Krb5: boolean DEBUG>;
        <sun.security.krb5.KrbTgsReq: boolean DEBUG> = $z0;
        return;
    }
}
