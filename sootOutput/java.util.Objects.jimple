public final class java.util.Objects extends java.lang.Object
{

    private void <init>()
    {
        java.util.Objects r0;
        java.lang.AssertionError $r1;

        r0 := @this: java.util.Objects;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.lang.AssertionError;
        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("No java.util.Objects instances for you!");
        throw $r1;
    }

    public static boolean equals(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        if r0 == r1 goto label0;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
        if $z0 == 0 goto label1;

     label0:
        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean deepEquals(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>(r0, r1);
        return $z0;
    }

    public static int hashCode(java.lang.Object)
    {
        java.lang.Object r0;
        int $i0;

        r0 := @parameter0: java.lang.Object;
        if r0 == null goto label0;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();
        goto label1;

     label0:
        $i0 = 0;

     label1:
        return $i0;
    }

    public static transient int hash(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int $i0;

        r0 := @parameter0: java.lang.Object[];
        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>(r0);
        return $i0;
    }

    public static java.lang.String toString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);
        return $r1;
    }

    public static java.lang.String toString(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.String;
        if r0 == null goto label0;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
        goto label1;

     label0:
        $r2 = r1;

     label1:
        return $r2;
    }

    public static int compare(java.lang.Object, java.lang.Object, java.util.Comparator)
    {
        java.lang.Object r0, r1;
        java.util.Comparator r2;
        int $i0;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.Object;
        r2 := @parameter2: java.util.Comparator;
        if r0 != r1 goto label0;

        $i0 = 0;
        goto label1;

     label0:
        $i0 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, r1);

     label1:
        return $i0;
    }

    public static java.lang.Object requireNonNull(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: java.lang.Object;
        if r0 != null goto label0;

        $r1 = new java.lang.NullPointerException;
        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();
        throw $r1;

     label0:
        return r0;
    }

    public static java.lang.Object requireNonNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.String;
        if r0 != null goto label0;

        $r2 = new java.lang.NullPointerException;
        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>(r1);
        throw $r2;

     label0:
        return r0;
    }
}
