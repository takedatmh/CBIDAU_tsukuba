public class java.text.DateFormat$Field extends java.text.Format$Field
{
    private static final long serialVersionUID;
    private static final java.util.Map instanceMap;
    private static final java.text.DateFormat$Field[] calendarToFieldMapping;
    private int calendarField;
    public static final java.text.DateFormat$Field ERA;
    public static final java.text.DateFormat$Field YEAR;
    public static final java.text.DateFormat$Field MONTH;
    public static final java.text.DateFormat$Field DAY_OF_MONTH;
    public static final java.text.DateFormat$Field HOUR_OF_DAY1;
    public static final java.text.DateFormat$Field HOUR_OF_DAY0;
    public static final java.text.DateFormat$Field MINUTE;
    public static final java.text.DateFormat$Field SECOND;
    public static final java.text.DateFormat$Field MILLISECOND;
    public static final java.text.DateFormat$Field DAY_OF_WEEK;
    public static final java.text.DateFormat$Field DAY_OF_YEAR;
    public static final java.text.DateFormat$Field DAY_OF_WEEK_IN_MONTH;
    public static final java.text.DateFormat$Field WEEK_OF_YEAR;
    public static final java.text.DateFormat$Field WEEK_OF_MONTH;
    public static final java.text.DateFormat$Field AM_PM;
    public static final java.text.DateFormat$Field HOUR1;
    public static final java.text.DateFormat$Field HOUR0;
    public static final java.text.DateFormat$Field TIME_ZONE;

    public static java.text.DateFormat$Field ofCalendarField(int)
    {
        int i0, $i1;
        java.text.DateFormat$Field[] $r0, $r6;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r5;
        java.text.DateFormat$Field $r7;

        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $r0 = <java.text.DateFormat$Field: java.text.DateFormat$Field[] calendarToFieldMapping>;
        $i1 = lengthof $r0;
        if i0 < $i1 goto label1;

     label0:
        $r2 = new java.lang.IllegalArgumentException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Calendar constant ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label1:
        $r6 = <java.text.DateFormat$Field: java.text.DateFormat$Field[] calendarToFieldMapping>;
        $r7 = $r6[i0];
        return $r7;
    }

    protected void <init>(java.lang.String, int)
    {
        java.text.DateFormat$Field r0;
        java.lang.String r1;
        int i0;
        java.lang.Class $r2;
        java.util.Map $r3;
        java.text.DateFormat$Field[] $r5;

        r0 := @this: java.text.DateFormat$Field;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.text.Format$Field: void <init>(java.lang.String)>(r1);
        r0.<java.text.DateFormat$Field: int calendarField> = i0;
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r2 != class "java/text/DateFormat$Field" goto label0;

        $r3 = <java.text.DateFormat$Field: java.util.Map instanceMap>;
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r0);
        if i0 < 0 goto label0;

        $r5 = <java.text.DateFormat$Field: java.text.DateFormat$Field[] calendarToFieldMapping>;
        $r5[i0] = r0;

     label0:
        return;
    }

    public int getCalendarField()
    {
        java.text.DateFormat$Field r0;
        int $i0;

        r0 := @this: java.text.DateFormat$Field;
        $i0 = r0.<java.text.DateFormat$Field: int calendarField>;
        return $i0;
    }

    protected java.lang.Object readResolve() throws java.io.InvalidObjectException
    {
        java.text.DateFormat$Field r0;
        java.lang.Object r1;
        java.lang.Class $r2;
        java.io.InvalidObjectException $r3, $r6;
        java.util.Map $r4;
        java.lang.String $r5;

        r0 := @this: java.text.DateFormat$Field;
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r2 == class "java/text/DateFormat$Field" goto label0;

        $r3 = new java.io.InvalidObjectException;
        specialinvoke $r3.<java.io.InvalidObjectException: void <init>(java.lang.String)>("subclass didn\'t correctly implement readResolve");
        throw $r3;

     label0:
        $r4 = <java.text.DateFormat$Field: java.util.Map instanceMap>;
        $r5 = virtualinvoke r0.<java.text.DateFormat$Field: java.lang.String getName()>();
        r1 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);
        if r1 == null goto label1;

        return r1;

     label1:
        $r6 = new java.io.InvalidObjectException;
        specialinvoke $r6.<java.io.InvalidObjectException: void <init>(java.lang.String)>("unknown attribute name");
        throw $r6;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.text.DateFormat$Field[] $r1;
        java.text.DateFormat$Field $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(18);
        <java.text.DateFormat$Field: java.util.Map instanceMap> = $r0;
        $r1 = newarray (java.text.DateFormat$Field)[17];
        <java.text.DateFormat$Field: java.text.DateFormat$Field[] calendarToFieldMapping> = $r1;
        $r2 = new java.text.DateFormat$Field;
        specialinvoke $r2.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("era", 0);
        <java.text.DateFormat$Field: java.text.DateFormat$Field ERA> = $r2;
        $r3 = new java.text.DateFormat$Field;
        specialinvoke $r3.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("year", 1);
        <java.text.DateFormat$Field: java.text.DateFormat$Field YEAR> = $r3;
        $r4 = new java.text.DateFormat$Field;
        specialinvoke $r4.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("month", 2);
        <java.text.DateFormat$Field: java.text.DateFormat$Field MONTH> = $r4;
        $r5 = new java.text.DateFormat$Field;
        specialinvoke $r5.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("day of month", 5);
        <java.text.DateFormat$Field: java.text.DateFormat$Field DAY_OF_MONTH> = $r5;
        $r6 = new java.text.DateFormat$Field;
        specialinvoke $r6.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("hour of day 1", -1);
        <java.text.DateFormat$Field: java.text.DateFormat$Field HOUR_OF_DAY1> = $r6;
        $r7 = new java.text.DateFormat$Field;
        specialinvoke $r7.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("hour of day", 11);
        <java.text.DateFormat$Field: java.text.DateFormat$Field HOUR_OF_DAY0> = $r7;
        $r8 = new java.text.DateFormat$Field;
        specialinvoke $r8.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("minute", 12);
        <java.text.DateFormat$Field: java.text.DateFormat$Field MINUTE> = $r8;
        $r9 = new java.text.DateFormat$Field;
        specialinvoke $r9.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("second", 13);
        <java.text.DateFormat$Field: java.text.DateFormat$Field SECOND> = $r9;
        $r10 = new java.text.DateFormat$Field;
        specialinvoke $r10.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("millisecond", 14);
        <java.text.DateFormat$Field: java.text.DateFormat$Field MILLISECOND> = $r10;
        $r11 = new java.text.DateFormat$Field;
        specialinvoke $r11.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("day of week", 7);
        <java.text.DateFormat$Field: java.text.DateFormat$Field DAY_OF_WEEK> = $r11;
        $r12 = new java.text.DateFormat$Field;
        specialinvoke $r12.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("day of year", 6);
        <java.text.DateFormat$Field: java.text.DateFormat$Field DAY_OF_YEAR> = $r12;
        $r13 = new java.text.DateFormat$Field;
        specialinvoke $r13.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("day of week in month", 8);
        <java.text.DateFormat$Field: java.text.DateFormat$Field DAY_OF_WEEK_IN_MONTH> = $r13;
        $r14 = new java.text.DateFormat$Field;
        specialinvoke $r14.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("week of year", 3);
        <java.text.DateFormat$Field: java.text.DateFormat$Field WEEK_OF_YEAR> = $r14;
        $r15 = new java.text.DateFormat$Field;
        specialinvoke $r15.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("week of month", 4);
        <java.text.DateFormat$Field: java.text.DateFormat$Field WEEK_OF_MONTH> = $r15;
        $r16 = new java.text.DateFormat$Field;
        specialinvoke $r16.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("am pm", 9);
        <java.text.DateFormat$Field: java.text.DateFormat$Field AM_PM> = $r16;
        $r17 = new java.text.DateFormat$Field;
        specialinvoke $r17.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("hour 1", -1);
        <java.text.DateFormat$Field: java.text.DateFormat$Field HOUR1> = $r17;
        $r18 = new java.text.DateFormat$Field;
        specialinvoke $r18.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("hour", 10);
        <java.text.DateFormat$Field: java.text.DateFormat$Field HOUR0> = $r18;
        $r19 = new java.text.DateFormat$Field;
        specialinvoke $r19.<java.text.DateFormat$Field: void <init>(java.lang.String,int)>("time zone", -1);
        <java.text.DateFormat$Field: java.text.DateFormat$Field TIME_ZONE> = $r19;
        return;
    }
}
