class java.util.TreeMap$EntrySet extends java.util.AbstractSet
{
    final java.util.TreeMap this$0;

    void <init>(java.util.TreeMap)
    {
        java.util.TreeMap$EntrySet r0;
        java.util.TreeMap r1;

        r0 := @this: java.util.TreeMap$EntrySet;
        r1 := @parameter0: java.util.TreeMap;
        r0.<java.util.TreeMap$EntrySet: java.util.TreeMap this$0> = r1;
        specialinvoke r0.<java.util.AbstractSet: void <init>()>();
        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.TreeMap$EntrySet r0;
        java.util.TreeMap$EntryIterator $r1;
        java.util.TreeMap $r2, $r3;
        java.util.TreeMap$Entry $r4;

        r0 := @this: java.util.TreeMap$EntrySet;
        $r1 = new java.util.TreeMap$EntryIterator;
        $r2 = r0.<java.util.TreeMap$EntrySet: java.util.TreeMap this$0>;
        $r3 = r0.<java.util.TreeMap$EntrySet: java.util.TreeMap this$0>;
        $r4 = virtualinvoke $r3.<java.util.TreeMap: java.util.TreeMap$Entry getFirstEntry()>();
        specialinvoke $r1.<java.util.TreeMap$EntryIterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry)>($r2, $r4);
        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.TreeMap$EntrySet r0;
        java.lang.Object r1, r3, $r6, $r7;
        java.util.Map$Entry r2;
        java.util.TreeMap$Entry r4;
        boolean $z0, $z1, $z2;
        java.util.TreeMap $r5;

        r0 := @this: java.util.TreeMap$EntrySet;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.util.Map$Entry;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        r2 = (java.util.Map$Entry) r1;
        r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r5 = r0.<java.util.TreeMap$EntrySet: java.util.TreeMap this$0>;
        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();
        r4 = virtualinvoke $r5.<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>($r6);
        if r4 == null goto label1;

        $r7 = virtualinvoke r4.<java.util.TreeMap$Entry: java.lang.Object getValue()>();
        $z1 = staticinvoke <java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>($r7, r3);
        if $z1 == 0 goto label1;

        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.TreeMap$EntrySet r0;
        java.lang.Object r1, r3, $r6, $r7;
        java.util.Map$Entry r2;
        java.util.TreeMap$Entry r4;
        boolean $z0, $z1;
        java.util.TreeMap $r5, $r8;

        r0 := @this: java.util.TreeMap$EntrySet;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof java.util.Map$Entry;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        r2 = (java.util.Map$Entry) r1;
        r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r5 = r0.<java.util.TreeMap$EntrySet: java.util.TreeMap this$0>;
        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();
        r4 = virtualinvoke $r5.<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>($r6);
        if r4 == null goto label1;

        $r7 = virtualinvoke r4.<java.util.TreeMap$Entry: java.lang.Object getValue()>();
        $z1 = staticinvoke <java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>($r7, r3);
        if $z1 == 0 goto label1;

        $r8 = r0.<java.util.TreeMap$EntrySet: java.util.TreeMap this$0>;
        staticinvoke <java.util.TreeMap: void access$000(java.util.TreeMap,java.util.TreeMap$Entry)>($r8, r4);
        return 1;

     label1:
        return 0;
    }

    public int size()
    {
        java.util.TreeMap$EntrySet r0;
        java.util.TreeMap $r1;
        int $i0;

        r0 := @this: java.util.TreeMap$EntrySet;
        $r1 = r0.<java.util.TreeMap$EntrySet: java.util.TreeMap this$0>;
        $i0 = virtualinvoke $r1.<java.util.TreeMap: int size()>();
        return $i0;
    }

    public void clear()
    {
        java.util.TreeMap$EntrySet r0;
        java.util.TreeMap $r1;

        r0 := @this: java.util.TreeMap$EntrySet;
        $r1 = r0.<java.util.TreeMap$EntrySet: java.util.TreeMap this$0>;
        virtualinvoke $r1.<java.util.TreeMap: void clear()>();
        return;
    }
}
